{"version":3,"sources":["out-vscode/vs/platform/extensions/node/extensionHostStarterWorkerMain.js"],"sourcesContent":["\"use strict\";\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n(function () {\n    'use strict';\n    const loader = require('../../../loader');\n    const bootstrap = require('../../../../bootstrap');\n    const path = require('path');\n    const parentPort = require('worker_threads').parentPort;\n    // Bootstrap: NLS\n    const nlsConfig = bootstrap.setupNLS();\n    // Bootstrap: Loader\n    loader.config({\n        baseUrl: bootstrap.fileUriFromPath(path.join(__dirname, '../../../../'), { isWindows: process.platform === 'win32' }),\n        catchError: true,\n        nodeRequire: require,\n        nodeMain: __filename,\n        'vs/nls': nlsConfig,\n        amdModulesPattern: /^vs\\//,\n        recordStats: true\n    });\n    let isFirstMessage = true;\n    let beforeReadyMessages = [];\n    const initialMessageHandler = (data) => {\n        if (!isFirstMessage) {\n            beforeReadyMessages.push(data);\n            return;\n        }\n        isFirstMessage = false;\n        loadCode(data);\n    };\n    parentPort.on('message', initialMessageHandler);\n    const loadCode = function (moduleId) {\n        loader([moduleId], function (ws) {\n            setTimeout(() => {\n                const messageHandler = ws.create((msg, transfer) => {\n                    parentPort.postMessage(msg, transfer);\n                }, null);\n                parentPort.off('message', initialMessageHandler);\n                parentPort.on('message', (data) => {\n                    messageHandler.onmessage(data);\n                });\n                while (beforeReadyMessages.length > 0) {\n                    const msg = beforeReadyMessages.shift();\n                    messageHandler.onmessage(msg);\n                }\n            });\n        }, (err) => console.error(err));\n    };\n    parentPort.on('messageerror', (err) => {\n        console.error(err);\n    });\n})();\n//# sourceMappingURL=extensionHostStarterWorkerMain.js.map"],"mappings":"aAKA,AAAC,WAAY,CACT,aACA,KAAM,GAAS,QAAQ,mBACjB,EAAY,QAAQ,yBACpB,EAAO,QAAQ,QACf,EAAa,QAAQ,kBAAkB,WAEvC,EAAY,EAAU,WAE5B,EAAO,OAAO,CACV,QAAS,EAAU,gBAAgB,EAAK,KAAK,UAAW,gBAAiB,CAAE,UAAW,QAAQ,WAAa,UAC3G,WAAY,GACZ,YAAa,QACb,SAAU,WACV,SAAU,EACV,kBAAmB,QACnB,YAAa,KAEjB,GAAI,GAAiB,GACjB,EAAsB,GAC1B,KAAM,GAAwB,AAAC,GAAS,CACpC,GAAI,CAAC,EAAgB,CACjB,EAAoB,KAAK,GACzB,OAEJ,EAAiB,GACjB,EAAS,IAEb,EAAW,GAAG,UAAW,GACzB,KAAM,GAAW,SAAU,EAAU,CACjC,EAAO,CAAC,GAAW,SAAU,EAAI,CAC7B,WAAW,IAAM,CACb,KAAM,GAAiB,EAAG,OAAO,CAAC,EAAK,IAAa,CAChD,EAAW,YAAY,EAAK,IAC7B,MAKH,IAJA,EAAW,IAAI,UAAW,GAC1B,EAAW,GAAG,UAAW,AAAC,GAAS,CAC/B,EAAe,UAAU,KAEtB,EAAoB,OAAS,GAAG,CACnC,KAAM,GAAM,EAAoB,QAChC,EAAe,UAAU,OAGlC,AAAC,GAAQ,QAAQ,MAAM,KAE9B,EAAW,GAAG,eAAgB,AAAC,GAAQ,CACnC,QAAQ,MAAM","names":[],"file":"extensionHostStarterWorkerMain.js"}