{"version":3,"sources":["out-vscode/vs/code/node/fake","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/assert.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/decorators.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/json.ts","out-vscode/vs/code/node/vs/base/common/performance.js","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/processes.ts","out-vscode/vs/code/node/vs/base/common/semver/semver.js","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/skipList.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/stream.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/buffer.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/objects.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/console.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/marshalling.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/labels.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/node/decoder.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/node/extpath.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/node/powershell.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/parts/ipc/common/ipc.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/parts/storage/common/storage.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/date.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/errorMessage.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/node/processes.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/node/shell.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/parts/ipc/node/ipc.cp.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/environment/common/environmentService.ts","out-vscode/vs/code/node/vs/platform/environment/node/userDataPath.js","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/environment/node/environmentService.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensionManagement/common/extensionNls.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensions/common/extensionValidator.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/instantiation/common/descriptors.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/instantiation/common/extensions.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/instantiation/common/graph.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/configuration/common/configuration.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/download/common/download.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/environment/common/environment.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensionManagement/common/extensionManagement.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/environment/node/shellEnv.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/files/common/io.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/files/common/watcher.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/files/node/watcher/nodejs/watcherService.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/files/node/watcher/nsfw/watcherService.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/files/node/watcher/parcel/watcherService.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/instantiation/common/serviceCollection.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/instantiation/common/instantiationService.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/localizations/common/localizations.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/log/common/log.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensionManagement/node/extensionLifecycle.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/files/common/diskFileSystemProvider.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/files/common/fileService.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/files/node/diskFileSystemProvider.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/log/node/spdlogLog.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/product/common/productService.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/registry/common/platform.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/jsonschemas/common/jsonContributionRegistry.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/configuration/common/configurationRegistry.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/configuration/common/configurationModels.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/configuration/common/configurationService.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/remote/common/remoteHosts.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensions/common/extensions.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensionManagement/common/extensionManagementUtil.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensionManagement/common/extensionManagementCLIService.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensionManagement/node/extensionDownloader.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensionManagement/node/extensionsManifestCache.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/localizations/node/localizations.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/request/common/request.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/download/common/downloadService.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/request/node/proxy.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/serviceMachineId/common/serviceMachineId.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/storage/common/storage.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/telemetry/common/commonProperties.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/telemetry/common/telemetry.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensionManagement/common/abstractExtensionManagementService.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/telemetry/common/telemetryUtils.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensionManagement/common/extensionGalleryService.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/telemetry/common/telemetryService.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/telemetry/node/appInsightsAppender.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/telemetry/node/telemetry.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/uriIdentity/common/uriIdentity.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensionManagement/node/extensionsWatcher.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/uriIdentity/common/uriIdentityService.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/node/zip.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensionManagement/node/extensionManagementUtil.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensionManagement/node/extensionsScanner.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensionManagement/node/extensionManagementService.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/request/node/requestService.ts","out-vscode/vs/code/node/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/code/node/cliProcessMain.ts"],"sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Throws an error with the provided message if the provided value does not evaluate to a true Javascript value.\n */\nexport function ok(value?: unknown, message?: string) {\n\tif (!value) {\n\t\tthrow new Error(message ? `Assertion failed (${message})` : 'Assertion Failed');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function createDecorator(mapFn: (fn: Function, key: string) => Function): Function {\n\treturn (target: any, key: string, descriptor: any) => {\n\t\tlet fnKey: string | null = null;\n\t\tlet fn: Function | null = null;\n\n\t\tif (typeof descriptor.value === 'function') {\n\t\t\tfnKey = 'value';\n\t\t\tfn = descriptor.value;\n\t\t} else if (typeof descriptor.get === 'function') {\n\t\t\tfnKey = 'get';\n\t\t\tfn = descriptor.get;\n\t\t}\n\n\t\tif (!fn) {\n\t\t\tthrow new Error('not supported');\n\t\t}\n\n\t\tdescriptor[fnKey!] = mapFn(fn, key);\n\t};\n}\n\nexport function memoize(_target: any, key: string, descriptor: any) {\n\tlet fnKey: string | null = null;\n\tlet fn: Function | null = null;\n\n\tif (typeof descriptor.value === 'function') {\n\t\tfnKey = 'value';\n\t\tfn = descriptor.value;\n\n\t\tif (fn!.length !== 0) {\n\t\t\tconsole.warn('Memoize should only be used in functions with zero parameters');\n\t\t}\n\t} else if (typeof descriptor.get === 'function') {\n\t\tfnKey = 'get';\n\t\tfn = descriptor.get;\n\t}\n\n\tif (!fn) {\n\t\tthrow new Error('not supported');\n\t}\n\n\tconst memoizeKey = `$memoize$${key}`;\n\tdescriptor[fnKey!] = function (...args: any[]) {\n\t\tif (!this.hasOwnProperty(memoizeKey)) {\n\t\t\tObject.defineProperty(this, memoizeKey, {\n\t\t\t\tconfigurable: false,\n\t\t\t\tenumerable: false,\n\t\t\t\twritable: false,\n\t\t\t\tvalue: fn!.apply(this, args)\n\t\t\t});\n\t\t}\n\n\t\treturn this[memoizeKey];\n\t};\n}\n\nexport interface IDebounceReducer<T> {\n\t(previousValue: T, ...args: any[]): T;\n}\n\nexport function debounce<T>(delay: number, reducer?: IDebounceReducer<T>, initialValueProvider?: () => T): Function {\n\treturn createDecorator((fn, key) => {\n\t\tconst timerKey = `$debounce$${key}`;\n\t\tconst resultKey = `$debounce$result$${key}`;\n\n\t\treturn function (this: any, ...args: any[]) {\n\t\t\tif (!this[resultKey]) {\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}\n\n\t\t\tclearTimeout(this[timerKey]);\n\n\t\t\tif (reducer) {\n\t\t\t\tthis[resultKey] = reducer(this[resultKey], ...args);\n\t\t\t\targs = [this[resultKey]];\n\t\t\t}\n\n\t\t\tthis[timerKey] = setTimeout(() => {\n\t\t\t\tfn.apply(this, args);\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}, delay);\n\t\t};\n\t});\n}\n\nexport function throttle<T>(delay: number, reducer?: IDebounceReducer<T>, initialValueProvider?: () => T): Function {\n\treturn createDecorator((fn, key) => {\n\t\tconst timerKey = `$throttle$timer$${key}`;\n\t\tconst resultKey = `$throttle$result$${key}`;\n\t\tconst lastRunKey = `$throttle$lastRun$${key}`;\n\t\tconst pendingKey = `$throttle$pending$${key}`;\n\n\t\treturn function (this: any, ...args: any[]) {\n\t\t\tif (!this[resultKey]) {\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}\n\t\t\tif (this[lastRunKey] === null || this[lastRunKey] === undefined) {\n\t\t\t\tthis[lastRunKey] = -Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tif (reducer) {\n\t\t\t\tthis[resultKey] = reducer(this[resultKey], ...args);\n\t\t\t}\n\n\t\t\tif (this[pendingKey]) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst nextTime = this[lastRunKey] + delay;\n\t\t\tif (nextTime <= Date.now()) {\n\t\t\t\tthis[lastRunKey] = Date.now();\n\t\t\t\tfn.apply(this, [this[resultKey]]);\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t} else {\n\t\t\t\tthis[pendingKey] = true;\n\t\t\t\tthis[timerKey] = setTimeout(() => {\n\t\t\t\t\tthis[pendingKey] = false;\n\t\t\t\t\tthis[lastRunKey] = Date.now();\n\t\t\t\t\tfn.apply(this, [this[resultKey]]);\n\t\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t\t}, nextTime - Date.now());\n\t\t\t}\n\t\t};\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const enum ScanError {\n\tNone = 0,\n\tUnexpectedEndOfComment = 1,\n\tUnexpectedEndOfString = 2,\n\tUnexpectedEndOfNumber = 3,\n\tInvalidUnicode = 4,\n\tInvalidEscapeCharacter = 5,\n\tInvalidCharacter = 6\n}\n\nexport const enum SyntaxKind {\n\tOpenBraceToken = 1,\n\tCloseBraceToken = 2,\n\tOpenBracketToken = 3,\n\tCloseBracketToken = 4,\n\tCommaToken = 5,\n\tColonToken = 6,\n\tNullKeyword = 7,\n\tTrueKeyword = 8,\n\tFalseKeyword = 9,\n\tStringLiteral = 10,\n\tNumericLiteral = 11,\n\tLineCommentTrivia = 12,\n\tBlockCommentTrivia = 13,\n\tLineBreakTrivia = 14,\n\tTrivia = 15,\n\tUnknown = 16,\n\tEOF = 17\n}\n\n/**\n * The scanner object, representing a JSON scanner at a position in the input string.\n */\nexport interface JSONScanner {\n\t/**\n\t * Sets the scan position to a new offset. A call to 'scan' is needed to get the first token.\n\t */\n\tsetPosition(pos: number): void;\n\t/**\n\t * Read the next token. Returns the token code.\n\t */\n\tscan(): SyntaxKind;\n\t/**\n\t * Returns the current scan position, which is after the last read token.\n\t */\n\tgetPosition(): number;\n\t/**\n\t * Returns the last read token.\n\t */\n\tgetToken(): SyntaxKind;\n\t/**\n\t * Returns the last read token value. The value for strings is the decoded string content. For numbers its of type number, for boolean it's true or false.\n\t */\n\tgetTokenValue(): string;\n\t/**\n\t * The start offset of the last read token.\n\t */\n\tgetTokenOffset(): number;\n\t/**\n\t * The length of the last read token.\n\t */\n\tgetTokenLength(): number;\n\t/**\n\t * An error code of the last scan.\n\t */\n\tgetTokenError(): ScanError;\n}\n\n\n\nexport interface ParseError {\n\terror: ParseErrorCode;\n\toffset: number;\n\tlength: number;\n}\n\nexport const enum ParseErrorCode {\n\tInvalidSymbol = 1,\n\tInvalidNumberFormat = 2,\n\tPropertyNameExpected = 3,\n\tValueExpected = 4,\n\tColonExpected = 5,\n\tCommaExpected = 6,\n\tCloseBraceExpected = 7,\n\tCloseBracketExpected = 8,\n\tEndOfFileExpected = 9,\n\tInvalidCommentToken = 10,\n\tUnexpectedEndOfComment = 11,\n\tUnexpectedEndOfString = 12,\n\tUnexpectedEndOfNumber = 13,\n\tInvalidUnicode = 14,\n\tInvalidEscapeCharacter = 15,\n\tInvalidCharacter = 16\n}\n\nexport type NodeType = 'object' | 'array' | 'property' | 'string' | 'number' | 'boolean' | 'null';\n\nexport interface Node {\n\treadonly type: NodeType;\n\treadonly value?: any;\n\treadonly offset: number;\n\treadonly length: number;\n\treadonly colonOffset?: number;\n\treadonly parent?: Node;\n\treadonly children?: Node[];\n}\n\nexport type Segment = string | number;\nexport type JSONPath = Segment[];\n\nexport interface Location {\n\t/**\n\t * The previous property key or literal value (string, number, boolean or null) or undefined.\n\t */\n\tpreviousNode?: Node;\n\t/**\n\t * The path describing the location in the JSON document. The path consists of a sequence strings\n\t * representing an object property or numbers for array indices.\n\t */\n\tpath: JSONPath;\n\t/**\n\t * Matches the locations path against a pattern consisting of strings (for properties) and numbers (for array indices).\n\t * '*' will match a single segment, of any property name or index.\n\t * '**' will match a sequence of segments or no segment, of any property name or index.\n\t */\n\tmatches: (patterns: JSONPath) => boolean;\n\t/**\n\t * If set, the location's offset is at a property key.\n\t */\n\tisAtPropertyKey: boolean;\n}\n\nexport interface ParseOptions {\n\tdisallowComments?: boolean;\n\tallowTrailingComma?: boolean;\n\tallowEmptyContent?: boolean;\n}\n\nexport namespace ParseOptions {\n\texport const DEFAULT = {\n\t\tallowTrailingComma: true\n\t};\n}\n\nexport interface JSONVisitor {\n\t/**\n\t * Invoked when an open brace is encountered and an object is started. The offset and length represent the location of the open brace.\n\t */\n\tonObjectBegin?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a property is encountered. The offset and length represent the location of the property name.\n\t */\n\tonObjectProperty?: (property: string, offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a closing brace is encountered and an object is completed. The offset and length represent the location of the closing brace.\n\t */\n\tonObjectEnd?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when an open bracket is encountered. The offset and length represent the location of the open bracket.\n\t */\n\tonArrayBegin?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a closing bracket is encountered. The offset and length represent the location of the closing bracket.\n\t */\n\tonArrayEnd?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a literal value is encountered. The offset and length represent the location of the literal value.\n\t */\n\tonLiteralValue?: (value: any, offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a comma or colon separator is encountered. The offset and length represent the location of the separator.\n\t */\n\tonSeparator?: (character: string, offset: number, length: number) => void;\n\n\t/**\n\t * When comments are allowed, invoked when a line or block comment is encountered. The offset and length represent the location of the comment.\n\t */\n\tonComment?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked on an error.\n\t */\n\tonError?: (error: ParseErrorCode, offset: number, length: number) => void;\n}\n\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text: string, ignoreTrivia: boolean = false): JSONScanner {\n\n\tlet pos = 0,\n\t\tlen = text.length,\n\t\tvalue: string = '',\n\t\ttokenOffset = 0,\n\t\ttoken: SyntaxKind = SyntaxKind.Unknown,\n\t\tscanError: ScanError = ScanError.None;\n\n\tfunction scanHexDigits(count: number): number {\n\t\tlet digits = 0;\n\t\tlet hexValue = 0;\n\t\twhile (digits < count) {\n\t\t\tconst ch = text.charCodeAt(pos);\n\t\t\tif (ch >= CharacterCodes._0 && ch <= CharacterCodes._9) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes._0;\n\t\t\t}\n\t\t\telse if (ch >= CharacterCodes.A && ch <= CharacterCodes.F) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes.A + 10;\n\t\t\t}\n\t\t\telse if (ch >= CharacterCodes.a && ch <= CharacterCodes.f) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes.a + 10;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpos++;\n\t\t\tdigits++;\n\t\t}\n\t\tif (digits < count) {\n\t\t\thexValue = -1;\n\t\t}\n\t\treturn hexValue;\n\t}\n\n\tfunction setPosition(newPosition: number) {\n\t\tpos = newPosition;\n\t\tvalue = '';\n\t\ttokenOffset = 0;\n\t\ttoken = SyntaxKind.Unknown;\n\t\tscanError = ScanError.None;\n\t}\n\n\tfunction scanNumber(): string {\n\t\tconst start = pos;\n\t\tif (text.charCodeAt(pos) === CharacterCodes._0) {\n\t\t\tpos++;\n\t\t} else {\n\t\t\tpos++;\n\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t}\n\t\t}\n\t\tif (pos < text.length && text.charCodeAt(pos) === CharacterCodes.dot) {\n\t\t\tpos++;\n\t\t\tif (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tscanError = ScanError.UnexpectedEndOfNumber;\n\t\t\t\treturn text.substring(start, pos);\n\t\t\t}\n\t\t}\n\t\tlet end = pos;\n\t\tif (pos < text.length && (text.charCodeAt(pos) === CharacterCodes.E || text.charCodeAt(pos) === CharacterCodes.e)) {\n\t\t\tpos++;\n\t\t\tif (pos < text.length && text.charCodeAt(pos) === CharacterCodes.plus || text.charCodeAt(pos) === CharacterCodes.minus) {\n\t\t\t\tpos++;\n\t\t\t}\n\t\t\tif (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t\tend = pos;\n\t\t\t} else {\n\t\t\t\tscanError = ScanError.UnexpectedEndOfNumber;\n\t\t\t}\n\t\t}\n\t\treturn text.substring(start, end);\n\t}\n\n\tfunction scanString(): string {\n\n\t\tlet result = '',\n\t\t\tstart = pos;\n\n\t\twhile (true) {\n\t\t\tif (pos >= len) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst ch = text.charCodeAt(pos);\n\t\t\tif (ch === CharacterCodes.doubleQuote) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tpos++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (ch === CharacterCodes.backslash) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tpos++;\n\t\t\t\tif (pos >= len) {\n\t\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tconst ch2 = text.charCodeAt(pos++);\n\t\t\t\tswitch (ch2) {\n\t\t\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\t\t\t\tresult += '\\\"';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.backslash:\n\t\t\t\t\t\tresult += '\\\\';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.slash:\n\t\t\t\t\t\tresult += '/';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.b:\n\t\t\t\t\t\tresult += '\\b';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.f:\n\t\t\t\t\t\tresult += '\\f';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.n:\n\t\t\t\t\t\tresult += '\\n';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.r:\n\t\t\t\t\t\tresult += '\\r';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.t:\n\t\t\t\t\t\tresult += '\\t';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.u:\n\t\t\t\t\t\tconst ch3 = scanHexDigits(4);\n\t\t\t\t\t\tif (ch3 >= 0) {\n\t\t\t\t\t\t\tresult += String.fromCharCode(ch3);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscanError = ScanError.InvalidUnicode;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tscanError = ScanError.InvalidEscapeCharacter;\n\t\t\t\t}\n\t\t\t\tstart = pos;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (ch >= 0 && ch <= 0x1F) {\n\t\t\t\tif (isLineBreak(ch)) {\n\t\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tscanError = ScanError.InvalidCharacter;\n\t\t\t\t\t// mark as error but continue with string\n\t\t\t\t}\n\t\t\t}\n\t\t\tpos++;\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction scanNext(): SyntaxKind {\n\n\t\tvalue = '';\n\t\tscanError = ScanError.None;\n\n\t\ttokenOffset = pos;\n\n\t\tif (pos >= len) {\n\t\t\t// at the end\n\t\t\ttokenOffset = len;\n\t\t\treturn token = SyntaxKind.EOF;\n\t\t}\n\n\t\tlet code = text.charCodeAt(pos);\n\t\t// trivia: whitespace\n\t\tif (isWhitespace(code)) {\n\t\t\tdo {\n\t\t\t\tpos++;\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tcode = text.charCodeAt(pos);\n\t\t\t} while (isWhitespace(code));\n\n\t\t\treturn token = SyntaxKind.Trivia;\n\t\t}\n\n\t\t// trivia: newlines\n\t\tif (isLineBreak(code)) {\n\t\t\tpos++;\n\t\t\tvalue += String.fromCharCode(code);\n\t\t\tif (code === CharacterCodes.carriageReturn && text.charCodeAt(pos) === CharacterCodes.lineFeed) {\n\t\t\t\tpos++;\n\t\t\t\tvalue += '\\n';\n\t\t\t}\n\t\t\treturn token = SyntaxKind.LineBreakTrivia;\n\t\t}\n\n\t\tswitch (code) {\n\t\t\t// tokens: []{}:,\n\t\t\tcase CharacterCodes.openBrace:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.OpenBraceToken;\n\t\t\tcase CharacterCodes.closeBrace:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CloseBraceToken;\n\t\t\tcase CharacterCodes.openBracket:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.OpenBracketToken;\n\t\t\tcase CharacterCodes.closeBracket:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CloseBracketToken;\n\t\t\tcase CharacterCodes.colon:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.ColonToken;\n\t\t\tcase CharacterCodes.comma:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CommaToken;\n\n\t\t\t// strings\n\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\t\tpos++;\n\t\t\t\tvalue = scanString();\n\t\t\t\treturn token = SyntaxKind.StringLiteral;\n\n\t\t\t// comments\n\t\t\tcase CharacterCodes.slash:\n\t\t\t\tconst start = pos - 1;\n\t\t\t\t// Single-line comment\n\t\t\t\tif (text.charCodeAt(pos + 1) === CharacterCodes.slash) {\n\t\t\t\t\tpos += 2;\n\n\t\t\t\t\twhile (pos < len) {\n\t\t\t\t\t\tif (isLineBreak(text.charCodeAt(pos))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos++;\n\n\t\t\t\t\t}\n\t\t\t\t\tvalue = text.substring(start, pos);\n\t\t\t\t\treturn token = SyntaxKind.LineCommentTrivia;\n\t\t\t\t}\n\n\t\t\t\t// Multi-line comment\n\t\t\t\tif (text.charCodeAt(pos + 1) === CharacterCodes.asterisk) {\n\t\t\t\t\tpos += 2;\n\n\t\t\t\t\tconst safeLength = len - 1; // For lookahead.\n\t\t\t\t\tlet commentClosed = false;\n\t\t\t\t\twhile (pos < safeLength) {\n\t\t\t\t\t\tconst ch = text.charCodeAt(pos);\n\n\t\t\t\t\t\tif (ch === CharacterCodes.asterisk && text.charCodeAt(pos + 1) === CharacterCodes.slash) {\n\t\t\t\t\t\t\tpos += 2;\n\t\t\t\t\t\t\tcommentClosed = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!commentClosed) {\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t\tscanError = ScanError.UnexpectedEndOfComment;\n\t\t\t\t\t}\n\n\t\t\t\t\tvalue = text.substring(start, pos);\n\t\t\t\t\treturn token = SyntaxKind.BlockCommentTrivia;\n\t\t\t\t}\n\t\t\t\t// just a single slash\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.Unknown;\n\n\t\t\t// numbers\n\t\t\tcase CharacterCodes.minus:\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\tif (pos === len || !isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t\t\t}\n\t\t\t// found a minus, followed by a number so\n\t\t\t// we fall through to proceed with scanning\n\t\t\t// numbers\n\t\t\tcase CharacterCodes._0:\n\t\t\tcase CharacterCodes._1:\n\t\t\tcase CharacterCodes._2:\n\t\t\tcase CharacterCodes._3:\n\t\t\tcase CharacterCodes._4:\n\t\t\tcase CharacterCodes._5:\n\t\t\tcase CharacterCodes._6:\n\t\t\tcase CharacterCodes._7:\n\t\t\tcase CharacterCodes._8:\n\t\t\tcase CharacterCodes._9:\n\t\t\t\tvalue += scanNumber();\n\t\t\t\treturn token = SyntaxKind.NumericLiteral;\n\t\t\t// literals and unknown symbols\n\t\t\tdefault:\n\t\t\t\t// is a literal? Read the full word.\n\t\t\t\twhile (pos < len && isUnknownContentCharacter(code)) {\n\t\t\t\t\tpos++;\n\t\t\t\t\tcode = text.charCodeAt(pos);\n\t\t\t\t}\n\t\t\t\tif (tokenOffset !== pos) {\n\t\t\t\t\tvalue = text.substring(tokenOffset, pos);\n\t\t\t\t\t// keywords: true, false, null\n\t\t\t\t\tswitch (value) {\n\t\t\t\t\t\tcase 'true': return token = SyntaxKind.TrueKeyword;\n\t\t\t\t\t\tcase 'false': return token = SyntaxKind.FalseKeyword;\n\t\t\t\t\t\tcase 'null': return token = SyntaxKind.NullKeyword;\n\t\t\t\t\t}\n\t\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t\t\t}\n\t\t\t\t// some\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t}\n\t}\n\n\tfunction isUnknownContentCharacter(code: CharacterCodes) {\n\t\tif (isWhitespace(code) || isLineBreak(code)) {\n\t\t\treturn false;\n\t\t}\n\t\tswitch (code) {\n\t\t\tcase CharacterCodes.closeBrace:\n\t\t\tcase CharacterCodes.closeBracket:\n\t\t\tcase CharacterCodes.openBrace:\n\t\t\tcase CharacterCodes.openBracket:\n\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\tcase CharacterCodes.colon:\n\t\t\tcase CharacterCodes.comma:\n\t\t\tcase CharacterCodes.slash:\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\n\tfunction scanNextNonTrivia(): SyntaxKind {\n\t\tlet result: SyntaxKind;\n\t\tdo {\n\t\t\tresult = scanNext();\n\t\t} while (result >= SyntaxKind.LineCommentTrivia && result <= SyntaxKind.Trivia);\n\t\treturn result;\n\t}\n\n\treturn {\n\t\tsetPosition: setPosition,\n\t\tgetPosition: () => pos,\n\t\tscan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n\t\tgetToken: () => token,\n\t\tgetTokenValue: () => value,\n\t\tgetTokenOffset: () => tokenOffset,\n\t\tgetTokenLength: () => pos - tokenOffset,\n\t\tgetTokenError: () => scanError\n\t};\n}\n\nfunction isWhitespace(ch: number): boolean {\n\treturn ch === CharacterCodes.space || ch === CharacterCodes.tab || ch === CharacterCodes.verticalTab || ch === CharacterCodes.formFeed ||\n\t\tch === CharacterCodes.nonBreakingSpace || ch === CharacterCodes.ogham || ch >= CharacterCodes.enQuad && ch <= CharacterCodes.zeroWidthSpace ||\n\t\tch === CharacterCodes.narrowNoBreakSpace || ch === CharacterCodes.mathematicalSpace || ch === CharacterCodes.ideographicSpace || ch === CharacterCodes.byteOrderMark;\n}\n\nfunction isLineBreak(ch: number): boolean {\n\treturn ch === CharacterCodes.lineFeed || ch === CharacterCodes.carriageReturn || ch === CharacterCodes.lineSeparator || ch === CharacterCodes.paragraphSeparator;\n}\n\nfunction isDigit(ch: number): boolean {\n\treturn ch >= CharacterCodes._0 && ch <= CharacterCodes._9;\n}\n\nconst enum CharacterCodes {\n\tnullCharacter = 0,\n\tmaxAsciiCharacter = 0x7F,\n\n\tlineFeed = 0x0A,              // \\n\n\tcarriageReturn = 0x0D,        // \\r\n\tlineSeparator = 0x2028,\n\tparagraphSeparator = 0x2029,\n\n\t// REVIEW: do we need to support this?  The scanner doesn't, but our IText does.  This seems\n\t// like an odd disparity?  (Or maybe it's completely fine for them to be different).\n\tnextLine = 0x0085,\n\n\t// Unicode 3.0 space characters\n\tspace = 0x0020,   // \" \"\n\tnonBreakingSpace = 0x00A0,   //\n\tenQuad = 0x2000,\n\temQuad = 0x2001,\n\tenSpace = 0x2002,\n\temSpace = 0x2003,\n\tthreePerEmSpace = 0x2004,\n\tfourPerEmSpace = 0x2005,\n\tsixPerEmSpace = 0x2006,\n\tfigureSpace = 0x2007,\n\tpunctuationSpace = 0x2008,\n\tthinSpace = 0x2009,\n\thairSpace = 0x200A,\n\tzeroWidthSpace = 0x200B,\n\tnarrowNoBreakSpace = 0x202F,\n\tideographicSpace = 0x3000,\n\tmathematicalSpace = 0x205F,\n\togham = 0x1680,\n\n\t_ = 0x5F,\n\t$ = 0x24,\n\n\t_0 = 0x30,\n\t_1 = 0x31,\n\t_2 = 0x32,\n\t_3 = 0x33,\n\t_4 = 0x34,\n\t_5 = 0x35,\n\t_6 = 0x36,\n\t_7 = 0x37,\n\t_8 = 0x38,\n\t_9 = 0x39,\n\n\ta = 0x61,\n\tb = 0x62,\n\tc = 0x63,\n\td = 0x64,\n\te = 0x65,\n\tf = 0x66,\n\tg = 0x67,\n\th = 0x68,\n\ti = 0x69,\n\tj = 0x6A,\n\tk = 0x6B,\n\tl = 0x6C,\n\tm = 0x6D,\n\tn = 0x6E,\n\to = 0x6F,\n\tp = 0x70,\n\tq = 0x71,\n\tr = 0x72,\n\ts = 0x73,\n\tt = 0x74,\n\tu = 0x75,\n\tv = 0x76,\n\tw = 0x77,\n\tx = 0x78,\n\ty = 0x79,\n\tz = 0x7A,\n\n\tA = 0x41,\n\tB = 0x42,\n\tC = 0x43,\n\tD = 0x44,\n\tE = 0x45,\n\tF = 0x46,\n\tG = 0x47,\n\tH = 0x48,\n\tI = 0x49,\n\tJ = 0x4A,\n\tK = 0x4B,\n\tL = 0x4C,\n\tM = 0x4D,\n\tN = 0x4E,\n\tO = 0x4F,\n\tP = 0x50,\n\tQ = 0x51,\n\tR = 0x52,\n\tS = 0x53,\n\tT = 0x54,\n\tU = 0x55,\n\tV = 0x56,\n\tW = 0x57,\n\tX = 0x58,\n\tY = 0x59,\n\tZ = 0x5A,\n\n\tampersand = 0x26,             // &\n\tasterisk = 0x2A,              // *\n\tat = 0x40,                    // @\n\tbackslash = 0x5C,             // \\\n\tbar = 0x7C,                   // |\n\tcaret = 0x5E,                 // ^\n\tcloseBrace = 0x7D,            // }\n\tcloseBracket = 0x5D,          // ]\n\tcloseParen = 0x29,            // )\n\tcolon = 0x3A,                 // :\n\tcomma = 0x2C,                 // ,\n\tdot = 0x2E,                   // .\n\tdoubleQuote = 0x22,           // \"\n\tequals = 0x3D,                // =\n\texclamation = 0x21,           // !\n\tgreaterThan = 0x3E,           // >\n\tlessThan = 0x3C,              // <\n\tminus = 0x2D,                 // -\n\topenBrace = 0x7B,             // {\n\topenBracket = 0x5B,           // [\n\topenParen = 0x28,             // (\n\tpercent = 0x25,               // %\n\tplus = 0x2B,                  // +\n\tquestion = 0x3F,              // ?\n\tsemicolon = 0x3B,             // ;\n\tsingleQuote = 0x27,           // '\n\tslash = 0x2F,                 // /\n\ttilde = 0x7E,                 // ~\n\n\tbackspace = 0x08,             // \\b\n\tformFeed = 0x0C,              // \\f\n\tbyteOrderMark = 0xFEFF,\n\ttab = 0x09,                   // \\t\n\tverticalTab = 0x0B,           // \\v\n}\n\ninterface NodeImpl extends Node {\n\ttype: NodeType;\n\tvalue?: any;\n\toffset: number;\n\tlength: number;\n\tcolonOffset?: number;\n\tparent?: NodeImpl;\n\tchildren?: NodeImpl[];\n}\n\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport function getLocation(text: string, position: number): Location {\n\tconst segments: Segment[] = []; // strings or numbers\n\tconst earlyReturnException = new Object();\n\tlet previousNode: NodeImpl | undefined = undefined;\n\tconst previousNodeInst: NodeImpl = {\n\t\tvalue: {},\n\t\toffset: 0,\n\t\tlength: 0,\n\t\ttype: 'object',\n\t\tparent: undefined\n\t};\n\tlet isAtPropertyKey = false;\n\tfunction setPreviousNode(value: string, offset: number, length: number, type: NodeType) {\n\t\tpreviousNodeInst.value = value;\n\t\tpreviousNodeInst.offset = offset;\n\t\tpreviousNodeInst.length = length;\n\t\tpreviousNodeInst.type = type;\n\t\tpreviousNodeInst.colonOffset = undefined;\n\t\tpreviousNode = previousNodeInst;\n\t}\n\ttry {\n\n\t\tvisit(text, {\n\t\t\tonObjectBegin: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tisAtPropertyKey = position > offset;\n\t\t\t\tsegments.push(''); // push a placeholder (will be replaced)\n\t\t\t},\n\t\t\tonObjectProperty: (name: string, offset: number, length: number) => {\n\t\t\t\tif (position < offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tsetPreviousNode(name, offset, length, 'property');\n\t\t\t\tsegments[segments.length - 1] = name;\n\t\t\t\tif (position <= offset + length) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonObjectEnd: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.pop();\n\t\t\t},\n\t\t\tonArrayBegin: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.push(0);\n\t\t\t},\n\t\t\tonArrayEnd: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.pop();\n\t\t\t},\n\t\t\tonLiteralValue: (value: any, offset: number, length: number) => {\n\t\t\t\tif (position < offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tsetPreviousNode(value, offset, length, getNodeType(value));\n\n\t\t\t\tif (position <= offset + length) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonSeparator: (sep: string, offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tif (sep === ':' && previousNode && previousNode.type === 'property') {\n\t\t\t\t\tpreviousNode.colonOffset = offset;\n\t\t\t\t\tisAtPropertyKey = false;\n\t\t\t\t\tpreviousNode = undefined;\n\t\t\t\t} else if (sep === ',') {\n\t\t\t\t\tconst last = segments[segments.length - 1];\n\t\t\t\t\tif (typeof last === 'number') {\n\t\t\t\t\t\tsegments[segments.length - 1] = last + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisAtPropertyKey = true;\n\t\t\t\t\t\tsegments[segments.length - 1] = '';\n\t\t\t\t\t}\n\t\t\t\t\tpreviousNode = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} catch (e) {\n\t\tif (e !== earlyReturnException) {\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\treturn {\n\t\tpath: segments,\n\t\tpreviousNode,\n\t\tisAtPropertyKey,\n\t\tmatches: (pattern: Segment[]) => {\n\t\t\tlet k = 0;\n\t\t\tfor (let i = 0; k < pattern.length && i < segments.length; i++) {\n\t\t\t\tif (pattern[k] === segments[i] || pattern[k] === '*') {\n\t\t\t\t\tk++;\n\t\t\t\t} else if (pattern[k] !== '**') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn k === pattern.length;\n\t\t}\n\t};\n}\n\n\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport function parse(text: string, errors: ParseError[] = [], options: ParseOptions = ParseOptions.DEFAULT): any {\n\tlet currentProperty: string | null = null;\n\tlet currentParent: any = [];\n\tconst previousParents: any[] = [];\n\n\tfunction onValue(value: any) {\n\t\tif (Array.isArray(currentParent)) {\n\t\t\t(<any[]>currentParent).push(value);\n\t\t} else if (currentProperty !== null) {\n\t\t\tcurrentParent[currentProperty] = value;\n\t\t}\n\t}\n\n\tconst visitor: JSONVisitor = {\n\t\tonObjectBegin: () => {\n\t\t\tconst object = {};\n\t\t\tonValue(object);\n\t\t\tpreviousParents.push(currentParent);\n\t\t\tcurrentParent = object;\n\t\t\tcurrentProperty = null;\n\t\t},\n\t\tonObjectProperty: (name: string) => {\n\t\t\tcurrentProperty = name;\n\t\t},\n\t\tonObjectEnd: () => {\n\t\t\tcurrentParent = previousParents.pop();\n\t\t},\n\t\tonArrayBegin: () => {\n\t\t\tconst array: any[] = [];\n\t\t\tonValue(array);\n\t\t\tpreviousParents.push(currentParent);\n\t\t\tcurrentParent = array;\n\t\t\tcurrentProperty = null;\n\t\t},\n\t\tonArrayEnd: () => {\n\t\t\tcurrentParent = previousParents.pop();\n\t\t},\n\t\tonLiteralValue: onValue,\n\t\tonError: (error: ParseErrorCode, offset: number, length: number) => {\n\t\t\terrors.push({ error, offset, length });\n\t\t}\n\t};\n\tvisit(text, visitor, options);\n\treturn currentParent[0];\n}\n\n\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport function parseTree(text: string, errors: ParseError[] = [], options: ParseOptions = ParseOptions.DEFAULT): Node {\n\tlet currentParent: NodeImpl = { type: 'array', offset: -1, length: -1, children: [], parent: undefined }; // artificial root\n\n\tfunction ensurePropertyComplete(endOffset: number) {\n\t\tif (currentParent.type === 'property') {\n\t\t\tcurrentParent.length = endOffset - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t}\n\t}\n\n\tfunction onValue(valueNode: Node): Node {\n\t\tcurrentParent.children!.push(valueNode);\n\t\treturn valueNode;\n\t}\n\n\tconst visitor: JSONVisitor = {\n\t\tonObjectBegin: (offset: number) => {\n\t\t\tcurrentParent = onValue({ type: 'object', offset, length: -1, parent: currentParent, children: [] });\n\t\t},\n\t\tonObjectProperty: (name: string, offset: number, length: number) => {\n\t\t\tcurrentParent = onValue({ type: 'property', offset, length: -1, parent: currentParent, children: [] });\n\t\t\tcurrentParent.children!.push({ type: 'string', value: name, offset, length, parent: currentParent });\n\t\t},\n\t\tonObjectEnd: (offset: number, length: number) => {\n\t\t\tcurrentParent.length = offset + length - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonArrayBegin: (offset: number, length: number) => {\n\t\t\tcurrentParent = onValue({ type: 'array', offset, length: -1, parent: currentParent, children: [] });\n\t\t},\n\t\tonArrayEnd: (offset: number, length: number) => {\n\t\t\tcurrentParent.length = offset + length - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonLiteralValue: (value: any, offset: number, length: number) => {\n\t\t\tonValue({ type: getNodeType(value), offset, length, parent: currentParent, value });\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonSeparator: (sep: string, offset: number, length: number) => {\n\t\t\tif (currentParent.type === 'property') {\n\t\t\t\tif (sep === ':') {\n\t\t\t\t\tcurrentParent.colonOffset = offset;\n\t\t\t\t} else if (sep === ',') {\n\t\t\t\t\tensurePropertyComplete(offset);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonError: (error: ParseErrorCode, offset: number, length: number) => {\n\t\t\terrors.push({ error, offset, length });\n\t\t}\n\t};\n\tvisit(text, visitor, options);\n\n\tconst result = currentParent.children![0];\n\tif (result) {\n\t\tdelete result.parent;\n\t}\n\treturn result;\n}\n\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport function findNodeAtLocation(root: Node, path: JSONPath): Node | undefined {\n\tif (!root) {\n\t\treturn undefined;\n\t}\n\tlet node = root;\n\tfor (let segment of path) {\n\t\tif (typeof segment === 'string') {\n\t\t\tif (node.type !== 'object' || !Array.isArray(node.children)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tlet found = false;\n\t\t\tfor (const propertyNode of node.children) {\n\t\t\t\tif (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment) {\n\t\t\t\t\tnode = propertyNode.children[1];\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!found) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t} else {\n\t\t\tconst index = <number>segment;\n\t\t\tif (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tnode = node.children[index];\n\t\t}\n\t}\n\treturn node;\n}\n\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport function getNodePath(node: Node): JSONPath {\n\tif (!node.parent || !node.parent.children) {\n\t\treturn [];\n\t}\n\tconst path = getNodePath(node.parent);\n\tif (node.parent.type === 'property') {\n\t\tconst key = node.parent.children[0].value;\n\t\tpath.push(key);\n\t} else if (node.parent.type === 'array') {\n\t\tconst index = node.parent.children.indexOf(node);\n\t\tif (index !== -1) {\n\t\t\tpath.push(index);\n\t\t}\n\t}\n\treturn path;\n}\n\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport function getNodeValue(node: Node): any {\n\tswitch (node.type) {\n\t\tcase 'array':\n\t\t\treturn node.children!.map(getNodeValue);\n\t\tcase 'object':\n\t\t\tconst obj = Object.create(null);\n\t\t\tfor (let prop of node.children!) {\n\t\t\t\tconst valueNode = prop.children![1];\n\t\t\t\tif (valueNode) {\n\t\t\t\t\tobj[prop.children![0].value] = getNodeValue(valueNode);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn obj;\n\t\tcase 'null':\n\t\tcase 'string':\n\t\tcase 'number':\n\t\tcase 'boolean':\n\t\t\treturn node.value;\n\t\tdefault:\n\t\t\treturn undefined;\n\t}\n\n}\n\nexport function contains(node: Node, offset: number, includeRightBound = false): boolean {\n\treturn (offset >= node.offset && offset < (node.offset + node.length)) || includeRightBound && (offset === (node.offset + node.length));\n}\n\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport function findNodeAtOffset(node: Node, offset: number, includeRightBound = false): Node | undefined {\n\tif (contains(node, offset, includeRightBound)) {\n\t\tconst children = node.children;\n\t\tif (Array.isArray(children)) {\n\t\t\tfor (let i = 0; i < children.length && children[i].offset <= offset; i++) {\n\t\t\t\tconst item = findNodeAtOffset(children[i], offset, includeRightBound);\n\t\t\t\tif (item) {\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\treturn node;\n\t}\n\treturn undefined;\n}\n\n\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport function visit(text: string, visitor: JSONVisitor, options: ParseOptions = ParseOptions.DEFAULT): any {\n\n\tconst _scanner = createScanner(text, false);\n\n\tfunction toNoArgVisit(visitFunction?: (offset: number, length: number) => void): () => void {\n\t\treturn visitFunction ? () => visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength()) : () => true;\n\t}\n\tfunction toOneArgVisit<T>(visitFunction?: (arg: T, offset: number, length: number) => void): (arg: T) => void {\n\t\treturn visitFunction ? (arg: T) => visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength()) : () => true;\n\t}\n\n\tconst onObjectBegin = toNoArgVisit(visitor.onObjectBegin),\n\t\tonObjectProperty = toOneArgVisit(visitor.onObjectProperty),\n\t\tonObjectEnd = toNoArgVisit(visitor.onObjectEnd),\n\t\tonArrayBegin = toNoArgVisit(visitor.onArrayBegin),\n\t\tonArrayEnd = toNoArgVisit(visitor.onArrayEnd),\n\t\tonLiteralValue = toOneArgVisit(visitor.onLiteralValue),\n\t\tonSeparator = toOneArgVisit(visitor.onSeparator),\n\t\tonComment = toNoArgVisit(visitor.onComment),\n\t\tonError = toOneArgVisit(visitor.onError);\n\n\tconst disallowComments = options && options.disallowComments;\n\tconst allowTrailingComma = options && options.allowTrailingComma;\n\tfunction scanNext(): SyntaxKind {\n\t\twhile (true) {\n\t\t\tconst token = _scanner.scan();\n\t\t\tswitch (_scanner.getTokenError()) {\n\t\t\t\tcase ScanError.InvalidUnicode:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidUnicode);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.InvalidEscapeCharacter:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidEscapeCharacter);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfNumber:\n\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfNumber);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfComment:\n\t\t\t\t\tif (!disallowComments) {\n\t\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfComment);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfString:\n\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfString);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.InvalidCharacter:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidCharacter);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tswitch (token) {\n\t\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\t\t\tif (disallowComments) {\n\t\t\t\t\t\thandleError(ParseErrorCode.InvalidCommentToken);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tonComment();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Unknown:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidSymbol);\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Trivia:\n\t\t\t\tcase SyntaxKind.LineBreakTrivia:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn token;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleError(error: ParseErrorCode, skipUntilAfter: SyntaxKind[] = [], skipUntil: SyntaxKind[] = []): void {\n\t\tonError(error);\n\t\tif (skipUntilAfter.length + skipUntil.length > 0) {\n\t\t\tlet token = _scanner.getToken();\n\t\t\twhile (token !== SyntaxKind.EOF) {\n\t\t\t\tif (skipUntilAfter.indexOf(token) !== -1) {\n\t\t\t\t\tscanNext();\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (skipUntil.indexOf(token) !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttoken = scanNext();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction parseString(isValue: boolean): boolean {\n\t\tconst value = _scanner.getTokenValue();\n\t\tif (isValue) {\n\t\t\tonLiteralValue(value);\n\t\t} else {\n\t\t\tonObjectProperty(value);\n\t\t}\n\t\tscanNext();\n\t\treturn true;\n\t}\n\n\tfunction parseLiteral(): boolean {\n\t\tswitch (_scanner.getToken()) {\n\t\t\tcase SyntaxKind.NumericLiteral:\n\t\t\t\tlet value = 0;\n\t\t\t\ttry {\n\t\t\t\t\tvalue = JSON.parse(_scanner.getTokenValue());\n\t\t\t\t\tif (typeof value !== 'number') {\n\t\t\t\t\t\thandleError(ParseErrorCode.InvalidNumberFormat);\n\t\t\t\t\t\tvalue = 0;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\thandleError(ParseErrorCode.InvalidNumberFormat);\n\t\t\t\t}\n\t\t\t\tonLiteralValue(value);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.NullKeyword:\n\t\t\t\tonLiteralValue(null);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.TrueKeyword:\n\t\t\t\tonLiteralValue(true);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.FalseKeyword:\n\t\t\t\tonLiteralValue(false);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t\tscanNext();\n\t\treturn true;\n\t}\n\n\tfunction parseProperty(): boolean {\n\t\tif (_scanner.getToken() !== SyntaxKind.StringLiteral) {\n\t\t\thandleError(ParseErrorCode.PropertyNameExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\treturn false;\n\t\t}\n\t\tparseString(false);\n\t\tif (_scanner.getToken() === SyntaxKind.ColonToken) {\n\t\t\tonSeparator(':');\n\t\t\tscanNext(); // consume colon\n\n\t\t\tif (!parseValue()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t} else {\n\t\t\thandleError(ParseErrorCode.ColonExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseObject(): boolean {\n\t\tonObjectBegin();\n\t\tscanNext(); // consume open brace\n\n\t\tlet needsComma = false;\n\t\twhile (_scanner.getToken() !== SyntaxKind.CloseBraceToken && _scanner.getToken() !== SyntaxKind.EOF) {\n\t\t\tif (_scanner.getToken() === SyntaxKind.CommaToken) {\n\t\t\t\tif (!needsComma) {\n\t\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\t\t\t}\n\t\t\t\tonSeparator(',');\n\t\t\t\tscanNext(); // consume comma\n\t\t\t\tif (_scanner.getToken() === SyntaxKind.CloseBraceToken && allowTrailingComma) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (needsComma) {\n\t\t\t\thandleError(ParseErrorCode.CommaExpected, [], []);\n\t\t\t}\n\t\t\tif (!parseProperty()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t\tneedsComma = true;\n\t\t}\n\t\tonObjectEnd();\n\t\tif (_scanner.getToken() !== SyntaxKind.CloseBraceToken) {\n\t\t\thandleError(ParseErrorCode.CloseBraceExpected, [SyntaxKind.CloseBraceToken], []);\n\t\t} else {\n\t\t\tscanNext(); // consume close brace\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseArray(): boolean {\n\t\tonArrayBegin();\n\t\tscanNext(); // consume open bracket\n\n\t\tlet needsComma = false;\n\t\twhile (_scanner.getToken() !== SyntaxKind.CloseBracketToken && _scanner.getToken() !== SyntaxKind.EOF) {\n\t\t\tif (_scanner.getToken() === SyntaxKind.CommaToken) {\n\t\t\t\tif (!needsComma) {\n\t\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\t\t\t}\n\t\t\t\tonSeparator(',');\n\t\t\t\tscanNext(); // consume comma\n\t\t\t\tif (_scanner.getToken() === SyntaxKind.CloseBracketToken && allowTrailingComma) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (needsComma) {\n\t\t\t\thandleError(ParseErrorCode.CommaExpected, [], []);\n\t\t\t}\n\t\t\tif (!parseValue()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBracketToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t\tneedsComma = true;\n\t\t}\n\t\tonArrayEnd();\n\t\tif (_scanner.getToken() !== SyntaxKind.CloseBracketToken) {\n\t\t\thandleError(ParseErrorCode.CloseBracketExpected, [SyntaxKind.CloseBracketToken], []);\n\t\t} else {\n\t\t\tscanNext(); // consume close bracket\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseValue(): boolean {\n\t\tswitch (_scanner.getToken()) {\n\t\t\tcase SyntaxKind.OpenBracketToken:\n\t\t\t\treturn parseArray();\n\t\t\tcase SyntaxKind.OpenBraceToken:\n\t\t\t\treturn parseObject();\n\t\t\tcase SyntaxKind.StringLiteral:\n\t\t\t\treturn parseString(true);\n\t\t\tdefault:\n\t\t\t\treturn parseLiteral();\n\t\t}\n\t}\n\n\tscanNext();\n\tif (_scanner.getToken() === SyntaxKind.EOF) {\n\t\tif (options.allowEmptyContent) {\n\t\t\treturn true;\n\t\t}\n\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\treturn false;\n\t}\n\tif (!parseValue()) {\n\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\treturn false;\n\t}\n\tif (_scanner.getToken() !== SyntaxKind.EOF) {\n\t\thandleError(ParseErrorCode.EndOfFileExpected, [], []);\n\t}\n\treturn true;\n}\n\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text: string, replaceCh?: string): string {\n\n\tlet _scanner = createScanner(text),\n\t\tparts: string[] = [],\n\t\tkind: SyntaxKind,\n\t\toffset = 0,\n\t\tpos: number;\n\n\tdo {\n\t\tpos = _scanner.getPosition();\n\t\tkind = _scanner.scan();\n\t\tswitch (kind) {\n\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\tcase SyntaxKind.EOF:\n\t\t\t\tif (offset !== pos) {\n\t\t\t\t\tparts.push(text.substring(offset, pos));\n\t\t\t\t}\n\t\t\t\tif (replaceCh !== undefined) {\n\t\t\t\t\tparts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n\t\t\t\t}\n\t\t\t\toffset = _scanner.getPosition();\n\t\t\t\tbreak;\n\t\t}\n\t} while (kind !== SyntaxKind.EOF);\n\n\treturn parts.join('');\n}\n\nexport function getNodeType(value: any): NodeType {\n\tswitch (typeof value) {\n\t\tcase 'boolean': return 'boolean';\n\t\tcase 'number': return 'number';\n\t\tcase 'string': return 'string';\n\t\tcase 'object': {\n\t\t\tif (!value) {\n\t\t\t\treturn 'null';\n\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\treturn 'array';\n\t\t\t}\n\t\t\treturn 'object';\n\t\t}\n\t\tdefault: return 'null';\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\n//@ts-check\n\n(function () {\n\n\t/**\n\t * @returns {{mark(name:string):void, getMarks():{name:string, startTime:number}[]}}\n\t */\n\tfunction _definePolyfillMarks(timeOrigin) {\n\n\t\tconst _data = [];\n\t\tif (typeof timeOrigin === 'number') {\n\t\t\t_data.push('code/timeOrigin', timeOrigin);\n\t\t}\n\n\t\tfunction mark(name) {\n\t\t\t_data.push(name, Date.now());\n\t\t}\n\t\tfunction getMarks() {\n\t\t\tconst result = [];\n\t\t\tfor (let i = 0; i < _data.length; i += 2) {\n\t\t\t\tresult.push({\n\t\t\t\t\tname: _data[i],\n\t\t\t\t\tstartTime: _data[i + 1],\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\treturn { mark, getMarks };\n\t}\n\n\t/**\n\t * @returns {{mark(name:string):void, getMarks():{name:string, startTime:number}[]}}\n\t */\n\tfunction _define() {\n\n\t\t// Identify browser environment when following property is not present\n\t\t// https://nodejs.org/dist/latest-v16.x/docs/api/perf_hooks.html#performancenodetiming\n\t\tif (typeof performance === 'object' && typeof performance.mark === 'function' && !performance.nodeTiming) {\n\t\t\t// in a browser context, reuse performance-util\n\n\t\t\tif (typeof performance.timeOrigin !== 'number' && !performance.timing) {\n\t\t\t\t// safari & webworker: because there is no timeOrigin and no workaround\n\t\t\t\t// we use the `Date.now`-based polyfill.\n\t\t\t\treturn _definePolyfillMarks();\n\n\t\t\t} else {\n\t\t\t\t// use \"native\" performance for mark and getMarks\n\t\t\t\treturn {\n\t\t\t\t\tmark(name) {\n\t\t\t\t\t\tperformance.mark(name);\n\t\t\t\t\t},\n\t\t\t\t\tgetMarks() {\n\t\t\t\t\t\tlet timeOrigin = performance.timeOrigin;\n\t\t\t\t\t\tif (typeof timeOrigin !== 'number') {\n\t\t\t\t\t\t\t// safari: there is no timerOrigin but in renderers there is the timing-property\n\t\t\t\t\t\t\t// see https://bugs.webkit.org/show_bug.cgi?id=174862\n\t\t\t\t\t\t\ttimeOrigin = performance.timing.navigationStart || performance.timing.redirectStart || performance.timing.fetchStart;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst result = [{ name: 'code/timeOrigin', startTime: Math.round(timeOrigin) }];\n\t\t\t\t\t\tfor (const entry of performance.getEntriesByType('mark')) {\n\t\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\t\tname: entry.name,\n\t\t\t\t\t\t\t\tstartTime: Math.round(timeOrigin + entry.startTime)\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t} else if (typeof process === 'object') {\n\t\t\t// node.js: use the normal polyfill but add the timeOrigin\n\t\t\t// from the node perf_hooks API as very first mark\n\t\t\tconst timeOrigin = Math.round((require.nodeRequire || require)('perf_hooks').performance.timeOrigin);\n\t\t\treturn _definePolyfillMarks(timeOrigin);\n\n\t\t} else {\n\t\t\t// unknown environment\n\t\t\tconsole.trace('perf-util loaded in UNKNOWN environment');\n\t\t\treturn _definePolyfillMarks();\n\t\t}\n\t}\n\n\tfunction _factory(sharedObj) {\n\t\tif (!sharedObj.MonacoPerformanceMarks) {\n\t\t\tsharedObj.MonacoPerformanceMarks = _define();\n\t\t}\n\t\treturn sharedObj.MonacoPerformanceMarks;\n\t}\n\n\t// This module can be loaded in an amd and commonjs-context.\n\t// Because we want both instances to use the same perf-data\n\t// we store them globally\n\n\t// eslint-disable-next-line no-var\n\tvar sharedObj;\n\tif (typeof global === 'object') {\n\t\t// nodejs\n\t\tsharedObj = global;\n\t} else if (typeof self === 'object') {\n\t\t// browser\n\t\tsharedObj = self;\n\t} else {\n\t\tsharedObj = {};\n\t}\n\n\tif (typeof define === 'function') {\n\t\t// amd\n\t\tdefine(\"vs/base/common/performance\", [], function () { return _factory(sharedObj); });\n\t} else if (typeof module === 'object' && typeof module.exports === 'object') {\n\t\t// commonjs\n\t\tmodule.exports = _factory(sharedObj);\n\t} else {\n\t\tconsole.trace('perf-util defined in UNKNOWN context (neither requirejs or commonjs)');\n\t\tsharedObj.perf = _factory(sharedObj);\n\t}\n\n})();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IProcessEnvironment } from 'vs/base/common/platform';\n\n/**\n * Options to be passed to the external program or shell.\n */\nexport interface CommandOptions {\n\t/**\n\t * The current working directory of the executed program or shell.\n\t * If omitted VSCode's current workspace root is used.\n\t */\n\tcwd?: string;\n\n\t/**\n\t * The environment of the executed program or shell. If omitted\n\t * the parent process' environment is used.\n\t */\n\tenv?: { [key: string]: string; };\n}\n\nexport interface Executable {\n\t/**\n\t * The command to be executed. Can be an external program or a shell\n\t * command.\n\t */\n\tcommand: string;\n\n\t/**\n\t * Specifies whether the command is a shell command and therefore must\n\t * be executed in a shell interpreter (e.g. cmd.exe, bash, ...).\n\t */\n\tisShellCommand: boolean;\n\n\t/**\n\t * The arguments passed to the command.\n\t */\n\targs: string[];\n\n\t/**\n\t * The command options used when the command is executed. Can be omitted.\n\t */\n\toptions?: CommandOptions;\n}\n\nexport interface ForkOptions extends CommandOptions {\n\texecArgv?: string[];\n}\n\nexport const enum Source {\n\tstdout,\n\tstderr\n}\n\n/**\n * The data send via a success callback\n */\nexport interface SuccessData {\n\terror?: Error;\n\tcmdCode?: number;\n\tterminated?: boolean;\n}\n\n/**\n * The data send via a error callback\n */\nexport interface ErrorData {\n\terror?: Error;\n\tterminated?: boolean;\n\tstdout?: string;\n\tstderr?: string;\n}\n\nexport interface TerminateResponse {\n\tsuccess: boolean;\n\tcode?: TerminateResponseCode;\n\terror?: any;\n}\n\nexport const enum TerminateResponseCode {\n\tSuccess = 0,\n\tUnknown = 1,\n\tAccessDenied = 2,\n\tProcessNotFound = 3,\n}\n\nexport interface ProcessItem {\n\tname: string;\n\tcmd: string;\n\tpid: number;\n\tppid: number;\n\tload: number;\n\tmem: number;\n\n\tchildren?: ProcessItem[];\n}\n\n/**\n * Sanitizes a VS Code process environment by removing all Electron/VS Code-related values.\n */\nexport function sanitizeProcessEnvironment(env: IProcessEnvironment, ...preserve: string[]): void {\n\tconst set = preserve.reduce((set, key) => {\n\t\tset[key] = true;\n\t\treturn set;\n\t}, {} as Record<string, boolean>);\n\tconst keysToRemove = [\n\t\t/^ELECTRON_.+$/,\n\t\t/^VSCODE_.+$/,\n\t\t/^SNAP(|_.*)$/,\n\t\t/^GDK_PIXBUF_.+$/,\n\t];\n\tconst envKeys = Object.keys(env);\n\tenvKeys\n\t\t.filter(key => !set[key])\n\t\t.forEach(envKey => {\n\t\t\tfor (let i = 0; i < keysToRemove.length; i++) {\n\t\t\t\tif (envKey.search(keysToRemove[i]) !== -1) {\n\t\t\t\t\tdelete env[envKey];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n}\n","/**\n * Semver UMD module\n * Copyright (c) Isaac Z. Schlueter and Contributors\n * https://github.com/npm/node-semver\n */\n\n/**\n * DO NOT EDIT THIS FILE\n */\n\n!function(e,r){if(\"object\"==typeof exports&&\"object\"==typeof module)module.exports=r();else if(\"function\"==typeof define&&define.amd)define(\"vs/base/common/semver/semver\", [],r);else{var t=r();for(var n in t)(\"object\"==typeof exports?exports:e)[n]=t[n]}}(\"undefined\"!=typeof self?self:this,(function(){return function(e){var r={};function t(n){if(r[n])return r[n].exports;var o=r[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,t),o.l=!0,o.exports}return t.m=e,t.c=r,t.d=function(e,r,n){t.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:n})},t.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},t.t=function(e,r){if(1&r&&(e=t(e)),8&r)return e;if(4&r&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(t.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&r&&\"string\"!=typeof e)for(var o in e)t.d(n,o,function(r){return e[r]}.bind(null,o));return n},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,\"a\",r),r},t.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},t.p=\"\",t(t.s=0)}([function(e,r,t){(function(t){var n;r=e.exports=H,n=\"object\"==typeof t&&t.env&&t.env.NODE_DEBUG&&/\\bsemver\\b/i.test(t.env.NODE_DEBUG)?function(){var e=Array.prototype.slice.call(arguments,0);e.unshift(\"SEMVER\"),console.log.apply(console,e)}:function(){},r.SEMVER_SPEC_VERSION=\"2.0.0\";var o=256,i=Number.MAX_SAFE_INTEGER||9007199254740991,s=r.re=[],a=r.src=[],u=0,c=u++;a[c]=\"0|[1-9]\\\\d*\";var p=u++;a[p]=\"[0-9]+\";var f=u++;a[f]=\"\\\\d*[a-zA-Z-][a-zA-Z0-9-]*\";var l=u++;a[l]=\"(\"+a[c]+\")\\\\.(\"+a[c]+\")\\\\.(\"+a[c]+\")\";var h=u++;a[h]=\"(\"+a[p]+\")\\\\.(\"+a[p]+\")\\\\.(\"+a[p]+\")\";var v=u++;a[v]=\"(?:\"+a[c]+\"|\"+a[f]+\")\";var m=u++;a[m]=\"(?:\"+a[p]+\"|\"+a[f]+\")\";var w=u++;a[w]=\"(?:-(\"+a[v]+\"(?:\\\\.\"+a[v]+\")*))\";var g=u++;a[g]=\"(?:-?(\"+a[m]+\"(?:\\\\.\"+a[m]+\")*))\";var y=u++;a[y]=\"[0-9A-Za-z-]+\";var d=u++;a[d]=\"(?:\\\\+(\"+a[y]+\"(?:\\\\.\"+a[y]+\")*))\";var b=u++,j=\"v?\"+a[l]+a[w]+\"?\"+a[d]+\"?\";a[b]=\"^\"+j+\"$\";var E=\"[v=\\\\s]*\"+a[h]+a[g]+\"?\"+a[d]+\"?\",T=u++;a[T]=\"^\"+E+\"$\";var x=u++;a[x]=\"((?:<|>)?=?)\";var $=u++;a[$]=a[p]+\"|x|X|\\\\*\";var k=u++;a[k]=a[c]+\"|x|X|\\\\*\";var S=u++;a[S]=\"[v=\\\\s]*(\"+a[k]+\")(?:\\\\.(\"+a[k]+\")(?:\\\\.(\"+a[k]+\")(?:\"+a[w]+\")?\"+a[d]+\"?)?)?\";var R=u++;a[R]=\"[v=\\\\s]*(\"+a[$]+\")(?:\\\\.(\"+a[$]+\")(?:\\\\.(\"+a[$]+\")(?:\"+a[g]+\")?\"+a[d]+\"?)?)?\";var I=u++;a[I]=\"^\"+a[x]+\"\\\\s*\"+a[S]+\"$\";var _=u++;a[_]=\"^\"+a[x]+\"\\\\s*\"+a[R]+\"$\";var O=u++;a[O]=\"(?:^|[^\\\\d])(\\\\d{1,16})(?:\\\\.(\\\\d{1,16}))?(?:\\\\.(\\\\d{1,16}))?(?:$|[^\\\\d])\";var A=u++;a[A]=\"(?:~>?)\";var M=u++;a[M]=\"(\\\\s*)\"+a[A]+\"\\\\s+\",s[M]=new RegExp(a[M],\"g\");var V=u++;a[V]=\"^\"+a[A]+a[S]+\"$\";var P=u++;a[P]=\"^\"+a[A]+a[R]+\"$\";var C=u++;a[C]=\"(?:\\\\^)\";var L=u++;a[L]=\"(\\\\s*)\"+a[C]+\"\\\\s+\",s[L]=new RegExp(a[L],\"g\");var N=u++;a[N]=\"^\"+a[C]+a[S]+\"$\";var q=u++;a[q]=\"^\"+a[C]+a[R]+\"$\";var D=u++;a[D]=\"^\"+a[x]+\"\\\\s*(\"+E+\")$|^$\";var X=u++;a[X]=\"^\"+a[x]+\"\\\\s*(\"+j+\")$|^$\";var z=u++;a[z]=\"(\\\\s*)\"+a[x]+\"\\\\s*(\"+E+\"|\"+a[S]+\")\",s[z]=new RegExp(a[z],\"g\");var G=u++;a[G]=\"^\\\\s*(\"+a[S]+\")\\\\s+-\\\\s+(\"+a[S]+\")\\\\s*$\";var Z=u++;a[Z]=\"^\\\\s*(\"+a[R]+\")\\\\s+-\\\\s+(\"+a[R]+\")\\\\s*$\";var B=u++;a[B]=\"(<|>)?=?\\\\s*\\\\*\";for(var U=0;U<35;U++)n(U,a[U]),s[U]||(s[U]=new RegExp(a[U]));function F(e,r){if(e instanceof H)return e;if(\"string\"!=typeof e)return null;if(e.length>o)return null;if(!(r?s[T]:s[b]).test(e))return null;try{return new H(e,r)}catch(e){return null}}function H(e,r){if(e instanceof H){if(e.loose===r)return e;e=e.version}else if(\"string\"!=typeof e)throw new TypeError(\"Invalid Version: \"+e);if(e.length>o)throw new TypeError(\"version is longer than \"+o+\" characters\");if(!(this instanceof H))return new H(e,r);n(\"SemVer\",e,r),this.loose=r;var t=e.trim().match(r?s[T]:s[b]);if(!t)throw new TypeError(\"Invalid Version: \"+e);if(this.raw=e,this.major=+t[1],this.minor=+t[2],this.patch=+t[3],this.major>i||this.major<0)throw new TypeError(\"Invalid major version\");if(this.minor>i||this.minor<0)throw new TypeError(\"Invalid minor version\");if(this.patch>i||this.patch<0)throw new TypeError(\"Invalid patch version\");t[4]?this.prerelease=t[4].split(\".\").map((function(e){if(/^[0-9]+$/.test(e)){var r=+e;if(r>=0&&r<i)return r}return e})):this.prerelease=[],this.build=t[5]?t[5].split(\".\"):[],this.format()}r.parse=F,r.valid=function(e,r){var t=F(e,r);return t?t.version:null},r.clean=function(e,r){var t=F(e.trim().replace(/^[=v]+/,\"\"),r);return t?t.version:null},r.SemVer=H,H.prototype.format=function(){return this.version=this.major+\".\"+this.minor+\".\"+this.patch,this.prerelease.length&&(this.version+=\"-\"+this.prerelease.join(\".\")),this.version},H.prototype.toString=function(){return this.version},H.prototype.compare=function(e){return n(\"SemVer.compare\",this.version,this.loose,e),e instanceof H||(e=new H(e,this.loose)),this.compareMain(e)||this.comparePre(e)},H.prototype.compareMain=function(e){return e instanceof H||(e=new H(e,this.loose)),K(this.major,e.major)||K(this.minor,e.minor)||K(this.patch,e.patch)},H.prototype.comparePre=function(e){if(e instanceof H||(e=new H(e,this.loose)),this.prerelease.length&&!e.prerelease.length)return-1;if(!this.prerelease.length&&e.prerelease.length)return 1;if(!this.prerelease.length&&!e.prerelease.length)return 0;var r=0;do{var t=this.prerelease[r],o=e.prerelease[r];if(n(\"prerelease compare\",r,t,o),void 0===t&&void 0===o)return 0;if(void 0===o)return 1;if(void 0===t)return-1;if(t!==o)return K(t,o)}while(++r)},H.prototype.inc=function(e,r){switch(e){case\"premajor\":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc(\"pre\",r);break;case\"preminor\":this.prerelease.length=0,this.patch=0,this.minor++,this.inc(\"pre\",r);break;case\"prepatch\":this.prerelease.length=0,this.inc(\"patch\",r),this.inc(\"pre\",r);break;case\"prerelease\":0===this.prerelease.length&&this.inc(\"patch\",r),this.inc(\"pre\",r);break;case\"major\":0===this.minor&&0===this.patch&&0!==this.prerelease.length||this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case\"minor\":0===this.patch&&0!==this.prerelease.length||this.minor++,this.patch=0,this.prerelease=[];break;case\"patch\":0===this.prerelease.length&&this.patch++,this.prerelease=[];break;case\"pre\":if(0===this.prerelease.length)this.prerelease=[0];else{for(var t=this.prerelease.length;--t>=0;)\"number\"==typeof this.prerelease[t]&&(this.prerelease[t]++,t=-2);-1===t&&this.prerelease.push(0)}r&&(this.prerelease[0]===r?isNaN(this.prerelease[1])&&(this.prerelease=[r,0]):this.prerelease=[r,0]);break;default:throw new Error(\"invalid increment argument: \"+e)}return this.format(),this.raw=this.version,this},r.inc=function(e,r,t,n){\"string\"==typeof t&&(n=t,t=void 0);try{return new H(e,t).inc(r,n).version}catch(e){return null}},r.diff=function(e,r){if(ee(e,r))return null;var t=F(e),n=F(r);if(t.prerelease.length||n.prerelease.length){for(var o in t)if((\"major\"===o||\"minor\"===o||\"patch\"===o)&&t[o]!==n[o])return\"pre\"+o;return\"prerelease\"}for(var o in t)if((\"major\"===o||\"minor\"===o||\"patch\"===o)&&t[o]!==n[o])return o},r.compareIdentifiers=K;var J=/^[0-9]+$/;function K(e,r){var t=J.test(e),n=J.test(r);return t&&n&&(e=+e,r=+r),t&&!n?-1:n&&!t?1:e<r?-1:e>r?1:0}function Q(e,r,t){return new H(e,t).compare(new H(r,t))}function W(e,r,t){return Q(e,r,t)>0}function Y(e,r,t){return Q(e,r,t)<0}function ee(e,r,t){return 0===Q(e,r,t)}function re(e,r,t){return 0!==Q(e,r,t)}function te(e,r,t){return Q(e,r,t)>=0}function ne(e,r,t){return Q(e,r,t)<=0}function oe(e,r,t,n){var o;switch(r){case\"===\":\"object\"==typeof e&&(e=e.version),\"object\"==typeof t&&(t=t.version),o=e===t;break;case\"!==\":\"object\"==typeof e&&(e=e.version),\"object\"==typeof t&&(t=t.version),o=e!==t;break;case\"\":case\"=\":case\"==\":o=ee(e,t,n);break;case\"!=\":o=re(e,t,n);break;case\">\":o=W(e,t,n);break;case\">=\":o=te(e,t,n);break;case\"<\":o=Y(e,t,n);break;case\"<=\":o=ne(e,t,n);break;default:throw new TypeError(\"Invalid operator: \"+r)}return o}function ie(e,r){if(e instanceof ie){if(e.loose===r)return e;e=e.value}if(!(this instanceof ie))return new ie(e,r);n(\"comparator\",e,r),this.loose=r,this.parse(e),this.semver===se?this.value=\"\":this.value=this.operator+this.semver.version,n(\"comp\",this)}r.rcompareIdentifiers=function(e,r){return K(r,e)},r.major=function(e,r){return new H(e,r).major},r.minor=function(e,r){return new H(e,r).minor},r.patch=function(e,r){return new H(e,r).patch},r.compare=Q,r.compareLoose=function(e,r){return Q(e,r,!0)},r.rcompare=function(e,r,t){return Q(r,e,t)},r.sort=function(e,t){return e.sort((function(e,n){return r.compare(e,n,t)}))},r.rsort=function(e,t){return e.sort((function(e,n){return r.rcompare(e,n,t)}))},r.gt=W,r.lt=Y,r.eq=ee,r.neq=re,r.gte=te,r.lte=ne,r.cmp=oe,r.Comparator=ie;var se={};function ae(e,r){if(e instanceof ae)return e.loose===r?e:new ae(e.raw,r);if(e instanceof ie)return new ae(e.value,r);if(!(this instanceof ae))return new ae(e,r);if(this.loose=r,this.raw=e,this.set=e.split(/\\s*\\|\\|\\s*/).map((function(e){return this.parseRange(e.trim())}),this).filter((function(e){return e.length})),!this.set.length)throw new TypeError(\"Invalid SemVer Range: \"+e);this.format()}function ue(e){return!e||\"x\"===e.toLowerCase()||\"*\"===e}function ce(e,r,t,n,o,i,s,a,u,c,p,f,l){return((r=ue(t)?\"\":ue(n)?\">=\"+t+\".0.0\":ue(o)?\">=\"+t+\".\"+n+\".0\":\">=\"+r)+\" \"+(a=ue(u)?\"\":ue(c)?\"<\"+(+u+1)+\".0.0\":ue(p)?\"<\"+u+\".\"+(+c+1)+\".0\":f?\"<=\"+u+\".\"+c+\".\"+p+\"-\"+f:\"<=\"+a)).trim()}function pe(e,r){for(var t=0;t<e.length;t++)if(!e[t].test(r))return!1;if(r.prerelease.length){for(t=0;t<e.length;t++)if(n(e[t].semver),e[t].semver!==se&&e[t].semver.prerelease.length>0){var o=e[t].semver;if(o.major===r.major&&o.minor===r.minor&&o.patch===r.patch)return!0}return!1}return!0}function fe(e,r,t){try{r=new ae(r,t)}catch(e){return!1}return r.test(e)}function le(e,r,t,n){var o,i,s,a,u;switch(e=new H(e,n),r=new ae(r,n),t){case\">\":o=W,i=ne,s=Y,a=\">\",u=\">=\";break;case\"<\":o=Y,i=te,s=W,a=\"<\",u=\"<=\";break;default:throw new TypeError('Must provide a hilo val of \"<\" or \">\"')}if(fe(e,r,n))return!1;for(var c=0;c<r.set.length;++c){var p=r.set[c],f=null,l=null;if(p.forEach((function(e){e.semver===se&&(e=new ie(\">=0.0.0\")),f=f||e,l=l||e,o(e.semver,f.semver,n)?f=e:s(e.semver,l.semver,n)&&(l=e)})),f.operator===a||f.operator===u)return!1;if((!l.operator||l.operator===a)&&i(e,l.semver))return!1;if(l.operator===u&&s(e,l.semver))return!1}return!0}ie.prototype.parse=function(e){var r=this.loose?s[D]:s[X],t=e.match(r);if(!t)throw new TypeError(\"Invalid comparator: \"+e);this.operator=t[1],\"=\"===this.operator&&(this.operator=\"\"),t[2]?this.semver=new H(t[2],this.loose):this.semver=se},ie.prototype.toString=function(){return this.value},ie.prototype.test=function(e){return n(\"Comparator.test\",e,this.loose),this.semver===se||(\"string\"==typeof e&&(e=new H(e,this.loose)),oe(e,this.operator,this.semver,this.loose))},ie.prototype.intersects=function(e,r){if(!(e instanceof ie))throw new TypeError(\"a Comparator is required\");var t;if(\"\"===this.operator)return t=new ae(e.value,r),fe(this.value,t,r);if(\"\"===e.operator)return t=new ae(this.value,r),fe(e.semver,t,r);var n=!(\">=\"!==this.operator&&\">\"!==this.operator||\">=\"!==e.operator&&\">\"!==e.operator),o=!(\"<=\"!==this.operator&&\"<\"!==this.operator||\"<=\"!==e.operator&&\"<\"!==e.operator),i=this.semver.version===e.semver.version,s=!(\">=\"!==this.operator&&\"<=\"!==this.operator||\">=\"!==e.operator&&\"<=\"!==e.operator),a=oe(this.semver,\"<\",e.semver,r)&&(\">=\"===this.operator||\">\"===this.operator)&&(\"<=\"===e.operator||\"<\"===e.operator),u=oe(this.semver,\">\",e.semver,r)&&(\"<=\"===this.operator||\"<\"===this.operator)&&(\">=\"===e.operator||\">\"===e.operator);return n||o||i&&s||a||u},r.Range=ae,ae.prototype.format=function(){return this.range=this.set.map((function(e){return e.join(\" \").trim()})).join(\"||\").trim(),this.range},ae.prototype.toString=function(){return this.range},ae.prototype.parseRange=function(e){var r=this.loose;e=e.trim(),n(\"range\",e,r);var t=r?s[Z]:s[G];e=e.replace(t,ce),n(\"hyphen replace\",e),e=e.replace(s[z],\"$1$2$3\"),n(\"comparator trim\",e,s[z]),e=(e=(e=e.replace(s[M],\"$1~\")).replace(s[L],\"$1^\")).split(/\\s+/).join(\" \");var o=r?s[D]:s[X],i=e.split(\" \").map((function(e){return function(e,r){return n(\"comp\",e),e=function(e,r){return e.trim().split(/\\s+/).map((function(e){return function(e,r){n(\"caret\",e,r);var t=r?s[q]:s[N];return e.replace(t,(function(r,t,o,i,s){var a;return n(\"caret\",e,r,t,o,i,s),ue(t)?a=\"\":ue(o)?a=\">=\"+t+\".0.0 <\"+(+t+1)+\".0.0\":ue(i)?a=\"0\"===t?\">=\"+t+\".\"+o+\".0 <\"+t+\".\"+(+o+1)+\".0\":\">=\"+t+\".\"+o+\".0 <\"+(+t+1)+\".0.0\":s?(n(\"replaceCaret pr\",s),\"-\"!==s.charAt(0)&&(s=\"-\"+s),a=\"0\"===t?\"0\"===o?\">=\"+t+\".\"+o+\".\"+i+s+\" <\"+t+\".\"+o+\".\"+(+i+1):\">=\"+t+\".\"+o+\".\"+i+s+\" <\"+t+\".\"+(+o+1)+\".0\":\">=\"+t+\".\"+o+\".\"+i+s+\" <\"+(+t+1)+\".0.0\"):(n(\"no pr\"),a=\"0\"===t?\"0\"===o?\">=\"+t+\".\"+o+\".\"+i+\" <\"+t+\".\"+o+\".\"+(+i+1):\">=\"+t+\".\"+o+\".\"+i+\" <\"+t+\".\"+(+o+1)+\".0\":\">=\"+t+\".\"+o+\".\"+i+\" <\"+(+t+1)+\".0.0\"),n(\"caret return\",a),a}))}(e,r)})).join(\" \")}(e,r),n(\"caret\",e),e=function(e,r){return e.trim().split(/\\s+/).map((function(e){return function(e,r){var t=r?s[P]:s[V];return e.replace(t,(function(r,t,o,i,s){var a;return n(\"tilde\",e,r,t,o,i,s),ue(t)?a=\"\":ue(o)?a=\">=\"+t+\".0.0 <\"+(+t+1)+\".0.0\":ue(i)?a=\">=\"+t+\".\"+o+\".0 <\"+t+\".\"+(+o+1)+\".0\":s?(n(\"replaceTilde pr\",s),\"-\"!==s.charAt(0)&&(s=\"-\"+s),a=\">=\"+t+\".\"+o+\".\"+i+s+\" <\"+t+\".\"+(+o+1)+\".0\"):a=\">=\"+t+\".\"+o+\".\"+i+\" <\"+t+\".\"+(+o+1)+\".0\",n(\"tilde return\",a),a}))}(e,r)})).join(\" \")}(e,r),n(\"tildes\",e),e=function(e,r){return n(\"replaceXRanges\",e,r),e.split(/\\s+/).map((function(e){return function(e,r){e=e.trim();var t=r?s[_]:s[I];return e.replace(t,(function(r,t,o,i,s,a){n(\"xRange\",e,r,t,o,i,s,a);var u=ue(o),c=u||ue(i),p=c||ue(s);return\"=\"===t&&p&&(t=\"\"),u?r=\">\"===t||\"<\"===t?\"<0.0.0\":\"*\":t&&p?(c&&(i=0),p&&(s=0),\">\"===t?(t=\">=\",c?(o=+o+1,i=0,s=0):p&&(i=+i+1,s=0)):\"<=\"===t&&(t=\"<\",c?o=+o+1:i=+i+1),r=t+o+\".\"+i+\".\"+s):c?r=\">=\"+o+\".0.0 <\"+(+o+1)+\".0.0\":p&&(r=\">=\"+o+\".\"+i+\".0 <\"+o+\".\"+(+i+1)+\".0\"),n(\"xRange return\",r),r}))}(e,r)})).join(\" \")}(e,r),n(\"xrange\",e),e=function(e,r){return n(\"replaceStars\",e,r),e.trim().replace(s[B],\"\")}(e,r),n(\"stars\",e),e}(e,r)})).join(\" \").split(/\\s+/);return this.loose&&(i=i.filter((function(e){return!!e.match(o)}))),i=i.map((function(e){return new ie(e,r)}))},ae.prototype.intersects=function(e,r){if(!(e instanceof ae))throw new TypeError(\"a Range is required\");return this.set.some((function(t){return t.every((function(t){return e.set.some((function(e){return e.every((function(e){return t.intersects(e,r)}))}))}))}))},r.toComparators=function(e,r){return new ae(e,r).set.map((function(e){return e.map((function(e){return e.value})).join(\" \").trim().split(\" \")}))},ae.prototype.test=function(e){if(!e)return!1;\"string\"==typeof e&&(e=new H(e,this.loose));for(var r=0;r<this.set.length;r++)if(pe(this.set[r],e))return!0;return!1},r.satisfies=fe,r.maxSatisfying=function(e,r,t){var n=null,o=null;try{var i=new ae(r,t)}catch(e){return null}return e.forEach((function(e){i.test(e)&&(n&&-1!==o.compare(e)||(o=new H(n=e,t)))})),n},r.minSatisfying=function(e,r,t){var n=null,o=null;try{var i=new ae(r,t)}catch(e){return null}return e.forEach((function(e){i.test(e)&&(n&&1!==o.compare(e)||(o=new H(n=e,t)))})),n},r.validRange=function(e,r){try{return new ae(e,r).range||\"*\"}catch(e){return null}},r.ltr=function(e,r,t){return le(e,r,\"<\",t)},r.gtr=function(e,r,t){return le(e,r,\">\",t)},r.outside=le,r.prerelease=function(e,r){var t=F(e,r);return t&&t.prerelease.length?t.prerelease:null},r.intersects=function(e,r,t){return e=new ae(e,t),r=new ae(r,t),e.intersects(r)},r.coerce=function(e){if(e instanceof H)return e;if(\"string\"!=typeof e)return null;var r=e.match(s[O]);return null==r?null:F((r[1]||\"0\")+\".\"+(r[2]||\"0\")+\".\"+(r[3]||\"0\"))}}).call(this,t(1))},function(e,r){var t,n,o=e.exports={};function i(){throw new Error(\"setTimeout has not been defined\")}function s(){throw new Error(\"clearTimeout has not been defined\")}function a(e){if(t===setTimeout)return setTimeout(e,0);if((t===i||!t)&&setTimeout)return t=setTimeout,setTimeout(e,0);try{return t(e,0)}catch(r){try{return t.call(null,e,0)}catch(r){return t.call(this,e,0)}}}!function(){try{t=\"function\"==typeof setTimeout?setTimeout:i}catch(e){t=i}try{n=\"function\"==typeof clearTimeout?clearTimeout:s}catch(e){n=s}}();var u,c=[],p=!1,f=-1;function l(){p&&u&&(p=!1,u.length?c=u.concat(c):f=-1,c.length&&h())}function h(){if(!p){var e=a(l);p=!0;for(var r=c.length;r;){for(u=c,c=[];++f<r;)u&&u[f].run();f=-1,r=c.length}u=null,p=!1,function(e){if(n===clearTimeout)return clearTimeout(e);if((n===s||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(e);try{n(e)}catch(r){try{return n.call(null,e)}catch(r){return n.call(this,e)}}}(e)}}function v(e,r){this.fun=e,this.array=r}function m(){}o.nextTick=function(e){var r=new Array(arguments.length-1);if(arguments.length>1)for(var t=1;t<arguments.length;t++)r[t-1]=arguments[t];c.push(new v(e,r)),1!==c.length||p||a(h)},v.prototype.run=function(){this.fun.apply(null,this.array)},o.title=\"browser\",o.browser=!0,o.env={},o.argv=[],o.version=\"\",o.versions={},o.on=m,o.addListener=m,o.once=m,o.off=m,o.removeListener=m,o.removeAllListeners=m,o.emit=m,o.prependListener=m,o.prependOnceListener=m,o.listeners=function(e){return[]},o.binding=function(e){throw new Error(\"process.binding is not supported\")},o.cwd=function(){return\"/\"},o.chdir=function(e){throw new Error(\"process.chdir is not supported\")},o.umask=function(){return 0}}])}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nclass Node<K, V> {\n\treadonly forward: Node<K, V>[];\n\tconstructor(readonly level: number, readonly key: K, public value: V) {\n\t\tthis.forward = [];\n\t}\n}\n\nconst NIL: undefined = undefined;\n\ninterface Comparator<K> {\n\t(a: K, b: K): number;\n}\n\nexport class SkipList<K, V> implements Map<K, V> {\n\n\treadonly [Symbol.toStringTag] = 'SkipList';\n\n\tprivate _maxLevel: number;\n\tprivate _level: number = 0;\n\tprivate _header: Node<K, V>;\n\tprivate _size: number = 0;\n\n\t/**\n\t *\n\t * @param capacity Capacity at which the list performs best\n\t */\n\tconstructor(\n\t\treadonly comparator: (a: K, b: K) => number,\n\t\tcapacity: number = 2 ** 16\n\t) {\n\t\tthis._maxLevel = Math.max(1, Math.log2(capacity) | 0);\n\t\tthis._header = <any>new Node(this._maxLevel, NIL, NIL);\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tclear(): void {\n\t\tthis._header = <any>new Node(this._maxLevel, NIL, NIL);\n\t}\n\n\thas(key: K): boolean {\n\t\treturn Boolean(SkipList._search(this, key, this.comparator));\n\t}\n\n\tget(key: K): V | undefined {\n\t\treturn SkipList._search(this, key, this.comparator)?.value;\n\t}\n\n\tset(key: K, value: V): this {\n\t\tif (SkipList._insert(this, key, value, this.comparator)) {\n\t\t\tthis._size += 1;\n\t\t}\n\t\treturn this;\n\t}\n\n\tdelete(key: K): boolean {\n\t\tconst didDelete = SkipList._delete(this, key, this.comparator);\n\t\tif (didDelete) {\n\t\t\tthis._size -= 1;\n\t\t}\n\t\treturn didDelete;\n\t}\n\n\t// --- iteration\n\n\tforEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void {\n\t\tlet node = this._header.forward[0];\n\t\twhile (node) {\n\t\t\tcallbackfn.call(thisArg, node.value, node.key, this);\n\t\t\tnode = node.forward[0];\n\t\t}\n\t}\n\n\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\treturn this.entries();\n\t}\n\n\t*entries(): IterableIterator<[K, V]> {\n\t\tlet node = this._header.forward[0];\n\t\twhile (node) {\n\t\t\tyield [node.key, node.value];\n\t\t\tnode = node.forward[0];\n\t\t}\n\t}\n\n\t*keys(): IterableIterator<K> {\n\t\tlet node = this._header.forward[0];\n\t\twhile (node) {\n\t\t\tyield node.key;\n\t\t\tnode = node.forward[0];\n\t\t}\n\t}\n\n\t*values(): IterableIterator<V> {\n\t\tlet node = this._header.forward[0];\n\t\twhile (node) {\n\t\t\tyield node.value;\n\t\t\tnode = node.forward[0];\n\t\t}\n\t}\n\n\ttoString(): string {\n\t\t// debug string...\n\t\tlet result = '[SkipList]:';\n\t\tlet node = this._header.forward[0];\n\t\twhile (node) {\n\t\t\tresult += `node(${node.key}, ${node.value}, lvl:${node.level})`;\n\t\t\tnode = node.forward[0];\n\t\t}\n\t\treturn result;\n\t}\n\n\t// from https://www.epaperpress.com/sortsearch/download/skiplist.pdf\n\n\tprivate static _search<K, V>(list: SkipList<K, V>, searchKey: K, comparator: Comparator<K>) {\n\t\tlet x = list._header;\n\t\tfor (let i = list._level - 1; i >= 0; i--) {\n\t\t\twhile (x.forward[i] && comparator(x.forward[i].key, searchKey) < 0) {\n\t\t\t\tx = x.forward[i];\n\t\t\t}\n\t\t}\n\t\tx = x.forward[0];\n\t\tif (x && comparator(x.key, searchKey) === 0) {\n\t\t\treturn x;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate static _insert<K, V>(list: SkipList<K, V>, searchKey: K, value: V, comparator: Comparator<K>) {\n\t\tlet update: Node<K, V>[] = [];\n\t\tlet x = list._header;\n\t\tfor (let i = list._level - 1; i >= 0; i--) {\n\t\t\twhile (x.forward[i] && comparator(x.forward[i].key, searchKey) < 0) {\n\t\t\t\tx = x.forward[i];\n\t\t\t}\n\t\t\tupdate[i] = x;\n\t\t}\n\t\tx = x.forward[0];\n\t\tif (x && comparator(x.key, searchKey) === 0) {\n\t\t\t// update\n\t\t\tx.value = value;\n\t\t\treturn false;\n\t\t} else {\n\t\t\t// insert\n\t\t\tlet lvl = SkipList._randomLevel(list);\n\t\t\tif (lvl > list._level) {\n\t\t\t\tfor (let i = list._level; i < lvl; i++) {\n\t\t\t\t\tupdate[i] = list._header;\n\t\t\t\t}\n\t\t\t\tlist._level = lvl;\n\t\t\t}\n\t\t\tx = new Node<K, V>(lvl, searchKey, value);\n\t\t\tfor (let i = 0; i < lvl; i++) {\n\t\t\t\tx.forward[i] = update[i].forward[i];\n\t\t\t\tupdate[i].forward[i] = x;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tprivate static _randomLevel(list: SkipList<any, any>, p: number = 0.5): number {\n\t\tlet lvl = 1;\n\t\twhile (Math.random() < p && lvl < list._maxLevel) {\n\t\t\tlvl += 1;\n\t\t}\n\t\treturn lvl;\n\t}\n\n\tprivate static _delete<K, V>(list: SkipList<K, V>, searchKey: K, comparator: Comparator<K>) {\n\t\tlet update: Node<K, V>[] = [];\n\t\tlet x = list._header;\n\t\tfor (let i = list._level - 1; i >= 0; i--) {\n\t\t\twhile (x.forward[i] && comparator(x.forward[i].key, searchKey) < 0) {\n\t\t\t\tx = x.forward[i];\n\t\t\t}\n\t\t\tupdate[i] = x;\n\t\t}\n\t\tx = x.forward[0];\n\t\tif (!x || comparator(x.key, searchKey) !== 0) {\n\t\t\t// not found\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0; i < list._level; i++) {\n\t\t\tif (update[i].forward[i] !== x) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tupdate[i].forward[i] = x.forward[i];\n\t\t}\n\t\twhile (list._level > 0 && list._header.forward[list._level - 1] === NIL) {\n\t\t\tlist._level -= 1;\n\t\t}\n\t\treturn true;\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { DisposableStore, toDisposable } from 'vs/base/common/lifecycle';\n\n/**\n * The payload that flows in readable stream events.\n */\nexport type ReadableStreamEventPayload<T> = T | Error | 'end';\n\nexport interface ReadableStreamEvents<T> {\n\n\t/**\n\t * The 'data' event is emitted whenever the stream is\n\t * relinquishing ownership of a chunk of data to a consumer.\n\t *\n\t * NOTE: PLEASE UNDERSTAND THAT ADDING A DATA LISTENER CAN\n\t * TURN THE STREAM INTO FLOWING MODE. IT IS THEREFOR THE\n\t * LAST LISTENER THAT SHOULD BE ADDED AND NOT THE FIRST\n\t *\n\t * Use `listenStream` as a helper method to listen to\n\t * stream events in the right order.\n\t */\n\ton(event: 'data', callback: (data: T) => void): void;\n\n\t/**\n\t * Emitted when any error occurs.\n\t */\n\ton(event: 'error', callback: (err: Error) => void): void;\n\n\t/**\n\t * The 'end' event is emitted when there is no more data\n\t * to be consumed from the stream. The 'end' event will\n\t * not be emitted unless the data is completely consumed.\n\t */\n\ton(event: 'end', callback: () => void): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * stream for use in native and web environments.\n */\nexport interface ReadableStream<T> extends ReadableStreamEvents<T> {\n\n\t/**\n\t * Stops emitting any events until resume() is called.\n\t */\n\tpause(): void;\n\n\t/**\n\t * Starts emitting events again after pause() was called.\n\t */\n\tresume(): void;\n\n\t/**\n\t * Destroys the stream and stops emitting any event.\n\t */\n\tdestroy(): void;\n\n\t/**\n\t * Allows to remove a listener that was previously added.\n\t */\n\tremoveListener(event: string, callback: Function): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * for use in native and web environments.\n */\nexport interface Readable<T> {\n\n\t/**\n\t * Read data from the underlying source. Will return\n\t * null to indicate that no more data can be read.\n\t */\n\tread(): T | null;\n}\n\n/**\n * A interface that emulates the API shape of a node.js writeable\n * stream for use in native and web environments.\n */\nexport interface WriteableStream<T> extends ReadableStream<T> {\n\n\t/**\n\t * Writing data to the stream will trigger the on('data')\n\t * event listener if the stream is flowing and buffer the\n\t * data otherwise until the stream is flowing.\n\t *\n\t * If a `highWaterMark` is configured and writing to the\n\t * stream reaches this mark, a promise will be returned\n\t * that should be awaited on before writing more data.\n\t * Otherwise there is a risk of buffering a large number\n\t * of data chunks without consumer.\n\t */\n\twrite(data: T): void | Promise<void>;\n\n\t/**\n\t * Signals an error to the consumer of the stream via the\n\t * on('error') handler if the stream is flowing.\n\t *\n\t * NOTE: call `end` to signal that the stream has ended,\n\t * this DOES NOT happen automatically from `error`.\n\t */\n\terror(error: Error): void;\n\n\t/**\n\t * Signals the end of the stream to the consumer. If the\n\t * result is provided, will trigger the on('data') event\n\t * listener if the stream is flowing and buffer the data\n\t * otherwise until the stream is flowing.\n\t */\n\tend(result?: T): void;\n}\n\n/**\n * A stream that has a buffer already read. Returns the original stream\n * that was read as well as the chunks that got read.\n *\n * The `ended` flag indicates if the stream has been fully consumed.\n */\nexport interface ReadableBufferedStream<T> {\n\n\t/**\n\t * The original stream that is being read.\n\t */\n\tstream: ReadableStream<T>;\n\n\t/**\n\t * An array of chunks already read from this stream.\n\t */\n\tbuffer: T[];\n\n\t/**\n\t * Signals if the stream has ended or not. If not, consumers\n\t * should continue to read from the stream until consumed.\n\t */\n\tended: boolean;\n}\n\nexport function isReadableStream<T>(obj: unknown): obj is ReadableStream<T> {\n\tconst candidate = obj as ReadableStream<T> | undefined;\n\tif (!candidate) {\n\t\treturn false;\n\t}\n\n\treturn [candidate.on, candidate.pause, candidate.resume, candidate.destroy].every(fn => typeof fn === 'function');\n}\n\nexport function isReadableBufferedStream<T>(obj: unknown): obj is ReadableBufferedStream<T> {\n\tconst candidate = obj as ReadableBufferedStream<T> | undefined;\n\tif (!candidate) {\n\t\treturn false;\n\t}\n\n\treturn isReadableStream(candidate.stream) && Array.isArray(candidate.buffer) && typeof candidate.ended === 'boolean';\n}\n\nexport interface IReducer<T> {\n\t(data: T[]): T;\n}\n\nexport interface IDataTransformer<Original, Transformed> {\n\t(data: Original): Transformed;\n}\n\nexport interface IErrorTransformer {\n\t(error: Error): Error;\n}\n\nexport interface ITransformer<Original, Transformed> {\n\tdata: IDataTransformer<Original, Transformed>;\n\terror?: IErrorTransformer;\n}\n\nexport function newWriteableStream<T>(reducer: IReducer<T>, options?: WriteableStreamOptions): WriteableStream<T> {\n\treturn new WriteableStreamImpl<T>(reducer, options);\n}\n\nexport interface WriteableStreamOptions {\n\n\t/**\n\t * The number of objects to buffer before WriteableStream#write()\n\t * signals back that the buffer is full. Can be used to reduce\n\t * the memory pressure when the stream is not flowing.\n\t */\n\thighWaterMark?: number;\n}\n\nclass WriteableStreamImpl<T> implements WriteableStream<T> {\n\n\tprivate readonly state = {\n\t\tflowing: false,\n\t\tended: false,\n\t\tdestroyed: false\n\t};\n\n\tprivate readonly buffer = {\n\t\tdata: [] as T[],\n\t\terror: [] as Error[]\n\t};\n\n\tprivate readonly listeners = {\n\t\tdata: [] as { (data: T): void }[],\n\t\terror: [] as { (error: Error): void }[],\n\t\tend: [] as { (): void }[]\n\t};\n\n\tprivate readonly pendingWritePromises: Function[] = [];\n\n\tconstructor(private reducer: IReducer<T>, private options?: WriteableStreamOptions) { }\n\n\tpause(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state.flowing = false;\n\t}\n\n\tresume(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.state.flowing) {\n\t\t\tthis.state.flowing = true;\n\n\t\t\t// emit buffered events\n\t\t\tthis.flowData();\n\t\t\tthis.flowErrors();\n\t\t\tthis.flowEnd();\n\t\t}\n\t}\n\n\twrite(data: T): void | Promise<void> {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the data to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.emitData(data);\n\t\t}\n\n\t\t// not yet flowing: buffer data until flowing\n\t\telse {\n\t\t\tthis.buffer.data.push(data);\n\n\t\t\t// highWaterMark: if configured, signal back when buffer reached limits\n\t\t\tif (typeof this.options?.highWaterMark === 'number' && this.buffer.data.length > this.options.highWaterMark) {\n\t\t\t\treturn new Promise(resolve => this.pendingWritePromises.push(resolve));\n\t\t\t}\n\t\t}\n\t}\n\n\terror(error: Error): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the error to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.emitError(error);\n\t\t}\n\n\t\t// not yet flowing: buffer errors until flowing\n\t\telse {\n\t\t\tthis.buffer.error.push(error);\n\t\t}\n\t}\n\n\tend(result?: T): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// end with data if provided\n\t\tif (typeof result !== 'undefined') {\n\t\t\tthis.write(result);\n\t\t}\n\n\t\t// flowing: send end event to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.emitEnd();\n\n\t\t\tthis.destroy();\n\t\t}\n\n\t\t// not yet flowing: remember state\n\t\telse {\n\t\t\tthis.state.ended = true;\n\t\t}\n\t}\n\n\tprivate emitData(data: T): void {\n\t\tthis.listeners.data.slice(0).forEach(listener => listener(data)); // slice to avoid listener mutation from delivering event\n\t}\n\n\tprivate emitError(error: Error): void {\n\t\tif (this.listeners.error.length === 0) {\n\t\t\tonUnexpectedError(error); // nobody listened to this error so we log it as unexpected\n\t\t} else {\n\t\t\tthis.listeners.error.slice(0).forEach(listener => listener(error)); // slice to avoid listener mutation from delivering event\n\t\t}\n\t}\n\n\tprivate emitEnd(): void {\n\t\tthis.listeners.end.slice(0).forEach(listener => listener()); // slice to avoid listener mutation from delivering event\n\t}\n\n\ton(event: 'data', callback: (data: T) => void): void;\n\ton(event: 'error', callback: (err: Error) => void): void;\n\ton(event: 'end', callback: () => void): void;\n\ton(event: 'data' | 'error' | 'end', callback: (arg0?: any) => void): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tthis.listeners.data.push(callback);\n\n\t\t\t\t// switch into flowing mode as soon as the first 'data'\n\t\t\t\t// listener is added and we are not yet in flowing mode\n\t\t\t\tthis.resume();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tthis.listeners.end.push(callback);\n\n\t\t\t\t// emit 'end' event directly if we are flowing\n\t\t\t\t// and the end has already been reached\n\t\t\t\t//\n\t\t\t\t// finish() when it went through\n\t\t\t\tif (this.state.flowing && this.flowEnd()) {\n\t\t\t\t\tthis.destroy();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tthis.listeners.error.push(callback);\n\n\t\t\t\t// emit buffered 'error' events unless done already\n\t\t\t\t// now that we know that we have at least one listener\n\t\t\t\tif (this.state.flowing) {\n\t\t\t\t\tthis.flowErrors();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tremoveListener(event: string, callback: Function): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet listeners: unknown[] | undefined = undefined;\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tlisteners = this.listeners.data;\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tlisteners = this.listeners.end;\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tlisteners = this.listeners.error;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (listeners) {\n\t\t\tconst index = listeners.indexOf(callback);\n\t\t\tif (index >= 0) {\n\t\t\t\tlisteners.splice(index, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate flowData(): void {\n\t\tif (this.buffer.data.length > 0) {\n\t\t\tconst fullDataBuffer = this.reducer(this.buffer.data);\n\n\t\t\tthis.emitData(fullDataBuffer);\n\n\t\t\tthis.buffer.data.length = 0;\n\n\t\t\t// When the buffer is empty, resolve all pending writers\n\t\t\tconst pendingWritePromises = [...this.pendingWritePromises];\n\t\t\tthis.pendingWritePromises.length = 0;\n\t\t\tpendingWritePromises.forEach(pendingWritePromise => pendingWritePromise());\n\t\t}\n\t}\n\n\tprivate flowErrors(): void {\n\t\tif (this.listeners.error.length > 0) {\n\t\t\tfor (const error of this.buffer.error) {\n\t\t\t\tthis.emitError(error);\n\t\t\t}\n\n\t\t\tthis.buffer.error.length = 0;\n\t\t}\n\t}\n\n\tprivate flowEnd(): boolean {\n\t\tif (this.state.ended) {\n\t\t\tthis.emitEnd();\n\n\t\t\treturn this.listeners.end.length > 0;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tdestroy(): void {\n\t\tif (!this.state.destroyed) {\n\t\t\tthis.state.destroyed = true;\n\t\t\tthis.state.ended = true;\n\n\t\t\tthis.buffer.data.length = 0;\n\t\t\tthis.buffer.error.length = 0;\n\n\t\t\tthis.listeners.data.length = 0;\n\t\t\tthis.listeners.error.length = 0;\n\t\t\tthis.listeners.end.length = 0;\n\n\t\t\tthis.pendingWritePromises.length = 0;\n\t\t}\n\t}\n}\n\n/**\n * Helper to fully read a T readable into a T.\n */\nexport function consumeReadable<T>(readable: Readable<T>, reducer: IReducer<T>): T {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null;\n\twhile ((chunk = readable.read()) !== null) {\n\t\tchunks.push(chunk);\n\t}\n\n\treturn reducer(chunks);\n}\n\n/**\n * Helper to read a T readable up to a maximum of chunks. If the limit is\n * reached, will return a readable instead to ensure all data can still\n * be read.\n */\nexport function peekReadable<T>(readable: Readable<T>, reducer: IReducer<T>, maxChunks: number): T | Readable<T> {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null | undefined = undefined;\n\twhile ((chunk = readable.read()) !== null && chunks.length < maxChunks) {\n\t\tchunks.push(chunk);\n\t}\n\n\t// If the last chunk is null, it means we reached the end of\n\t// the readable and return all the data at once\n\tif (chunk === null && chunks.length > 0) {\n\t\treturn reducer(chunks);\n\t}\n\n\t// Otherwise, we still have a chunk, it means we reached the maxChunks\n\t// value and as such we return a new Readable that first returns\n\t// the existing read chunks and then continues with reading from\n\t// the underlying readable.\n\treturn {\n\t\tread: () => {\n\n\t\t\t// First consume chunks from our array\n\t\t\tif (chunks.length > 0) {\n\t\t\t\treturn chunks.shift()!;\n\t\t\t}\n\n\t\t\t// Then ensure to return our last read chunk\n\t\t\tif (typeof chunk !== 'undefined') {\n\t\t\t\tconst lastReadChunk = chunk;\n\n\t\t\t\t// explicitly use undefined here to indicate that we consumed\n\t\t\t\t// the chunk, which could have either been null or valued.\n\t\t\t\tchunk = undefined;\n\n\t\t\t\treturn lastReadChunk;\n\t\t\t}\n\n\t\t\t// Finally delegate back to the Readable\n\t\t\treturn readable.read();\n\t\t}\n\t};\n}\n\n/**\n * Helper to fully read a T stream into a T or consuming\n * a stream fully, awaiting all the events without caring\n * about the data.\n */\nexport function consumeStream<T>(stream: ReadableStreamEvents<T>, reducer: IReducer<T>): Promise<T>;\nexport function consumeStream(stream: ReadableStreamEvents<unknown>): Promise<undefined>;\nexport function consumeStream<T>(stream: ReadableStreamEvents<T>, reducer?: IReducer<T>): Promise<T | undefined> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst chunks: T[] = [];\n\n\t\tlistenStream(stream, {\n\t\t\tonData: chunk => {\n\t\t\t\tif (reducer) {\n\t\t\t\t\tchunks.push(chunk);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonError: error => {\n\t\t\t\tif (reducer) {\n\t\t\t\t\treject(error);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(undefined);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonEnd: () => {\n\t\t\t\tif (reducer) {\n\t\t\t\t\tresolve(reducer(chunks));\n\t\t\t\t} else {\n\t\t\t\t\tresolve(undefined);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport interface IStreamListener<T> {\n\n\t/**\n\t * The 'data' event is emitted whenever the stream is\n\t * relinquishing ownership of a chunk of data to a consumer.\n\t */\n\tonData(data: T): void;\n\n\t/**\n\t * Emitted when any error occurs.\n\t */\n\tonError(err: Error): void;\n\n\t/**\n\t * The 'end' event is emitted when there is no more data\n\t * to be consumed from the stream. The 'end' event will\n\t * not be emitted unless the data is completely consumed.\n\t */\n\tonEnd(): void;\n}\n\n/**\n * Helper to listen to all events of a T stream in proper order.\n */\nexport function listenStream<T>(stream: ReadableStreamEvents<T>, listener: IStreamListener<T>): void {\n\tstream.on('error', error => listener.onError(error));\n\tstream.on('end', () => listener.onEnd());\n\n\t// Adding the `data` listener will turn the stream\n\t// into flowing mode. As such it is important to\n\t// add this listener last (DO NOT CHANGE!)\n\tstream.on('data', data => listener.onData(data));\n}\n\n/**\n * Helper to peek up to `maxChunks` into a stream. The return type signals if\n * the stream has ended or not. If not, caller needs to add a `data` listener\n * to continue reading.\n */\nexport function peekStream<T>(stream: ReadableStream<T>, maxChunks: number): Promise<ReadableBufferedStream<T>> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst streamListeners = new DisposableStore();\n\t\tconst buffer: T[] = [];\n\n\t\t// Data Listener\n\t\tconst dataListener = (chunk: T) => {\n\n\t\t\t// Add to buffer\n\t\t\tbuffer.push(chunk);\n\n\t\t\t// We reached maxChunks and thus need to return\n\t\t\tif (buffer.length > maxChunks) {\n\n\t\t\t\t// Dispose any listeners and ensure to pause the\n\t\t\t\t// stream so that it can be consumed again by caller\n\t\t\t\tstreamListeners.dispose();\n\t\t\t\tstream.pause();\n\n\t\t\t\treturn resolve({ stream, buffer, ended: false });\n\t\t\t}\n\t\t};\n\n\t\t// Error Listener\n\t\tconst errorListener = (error: Error) => {\n\t\t\treturn reject(error);\n\t\t};\n\n\t\t// End Listener\n\t\tconst endListener = () => {\n\t\t\treturn resolve({ stream, buffer, ended: true });\n\t\t};\n\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('error', errorListener)));\n\t\tstream.on('error', errorListener);\n\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('end', endListener)));\n\t\tstream.on('end', endListener);\n\n\t\t// Important: leave the `data` listener last because\n\t\t// this can turn the stream into flowing mode and we\n\t\t// want `error` events to be received as well.\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('data', dataListener)));\n\t\tstream.on('data', dataListener);\n\t});\n}\n\n/**\n * Helper to create a readable stream from an existing T.\n */\nexport function toStream<T>(t: T, reducer: IReducer<T>): ReadableStream<T> {\n\tconst stream = newWriteableStream<T>(reducer);\n\n\tstream.end(t);\n\n\treturn stream;\n}\n\n/**\n * Helper to create an empty stream\n */\nexport function emptyStream(): ReadableStream<never> {\n\tconst stream = newWriteableStream<never>(() => { throw new Error('not supported'); });\n\tstream.end();\n\n\treturn stream;\n}\n\n/**\n * Helper to convert a T into a Readable<T>.\n */\nexport function toReadable<T>(t: T): Readable<T> {\n\tlet consumed = false;\n\n\treturn {\n\t\tread: () => {\n\t\t\tif (consumed) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconsumed = true;\n\n\t\t\treturn t;\n\t\t}\n\t};\n}\n\n/**\n * Helper to transform a readable stream into another stream.\n */\nexport function transform<Original, Transformed>(stream: ReadableStreamEvents<Original>, transformer: ITransformer<Original, Transformed>, reducer: IReducer<Transformed>): ReadableStream<Transformed> {\n\tconst target = newWriteableStream<Transformed>(reducer);\n\n\tlistenStream(stream, {\n\t\tonData: data => target.write(transformer.data(data)),\n\t\tonError: error => target.error(transformer.error ? transformer.error(error) : error),\n\t\tonEnd: () => target.end()\n\t});\n\n\treturn target;\n}\n\n/**\n * Helper to take an existing readable that will\n * have a prefix injected to the beginning.\n */\nexport function prefixedReadable<T>(prefix: T, readable: Readable<T>, reducer: IReducer<T>): Readable<T> {\n\tlet prefixHandled = false;\n\n\treturn {\n\t\tread: () => {\n\t\t\tconst chunk = readable.read();\n\n\t\t\t// Handle prefix only once\n\t\t\tif (!prefixHandled) {\n\t\t\t\tprefixHandled = true;\n\n\t\t\t\t// If we have also a read-result, make\n\t\t\t\t// sure to reduce it to a single result\n\t\t\t\tif (chunk !== null) {\n\t\t\t\t\treturn reducer([prefix, chunk]);\n\t\t\t\t}\n\n\t\t\t\t// Otherwise, just return prefix directly\n\t\t\t\treturn prefix;\n\t\t\t}\n\n\t\t\treturn chunk;\n\t\t}\n\t};\n}\n\n/**\n * Helper to take an existing stream that will\n * have a prefix injected to the beginning.\n */\nexport function prefixedStream<T>(prefix: T, stream: ReadableStream<T>, reducer: IReducer<T>): ReadableStream<T> {\n\tlet prefixHandled = false;\n\n\tconst target = newWriteableStream<T>(reducer);\n\n\tlistenStream(stream, {\n\t\tonData: data => {\n\n\t\t\t// Handle prefix only once\n\t\t\tif (!prefixHandled) {\n\t\t\t\tprefixHandled = true;\n\n\t\t\t\treturn target.write(reducer([prefix, data]));\n\t\t\t}\n\n\t\t\treturn target.write(data);\n\t\t},\n\t\tonError: error => target.error(error),\n\t\tonEnd: () => {\n\n\t\t\t// Handle prefix only once\n\t\t\tif (!prefixHandled) {\n\t\t\t\tprefixHandled = true;\n\n\t\t\t\ttarget.write(prefix);\n\t\t\t}\n\n\t\t\ttarget.end();\n\t\t}\n\t});\n\n\treturn target;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as streams from 'vs/base/common/stream';\n\ndeclare const Buffer: any;\n\nconst hasBuffer = (typeof Buffer !== 'undefined');\n\nlet textEncoder: TextEncoder | null;\nlet textDecoder: TextDecoder | null;\n\nexport class VSBuffer {\n\n\tstatic alloc(byteLength: number): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.allocUnsafe(byteLength));\n\t\t} else {\n\t\t\treturn new VSBuffer(new Uint8Array(byteLength));\n\t\t}\n\t}\n\n\tstatic wrap(actual: Uint8Array): VSBuffer {\n\t\tif (hasBuffer && !(Buffer.isBuffer(actual))) {\n\t\t\t// https://nodejs.org/dist/latest-v10.x/docs/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length\n\t\t\t// Create a zero-copy Buffer wrapper around the ArrayBuffer pointed to by the Uint8Array\n\t\t\tactual = Buffer.from(actual.buffer, actual.byteOffset, actual.byteLength);\n\t\t}\n\t\treturn new VSBuffer(actual);\n\t}\n\n\tstatic fromString(source: string, options?: { dontUseNodeBuffer?: boolean; }): VSBuffer {\n\t\tconst dontUseNodeBuffer = options?.dontUseNodeBuffer || false;\n\t\tif (!dontUseNodeBuffer && hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.from(source));\n\t\t} else {\n\t\t\tif (!textEncoder) {\n\t\t\t\ttextEncoder = new TextEncoder();\n\t\t\t}\n\t\t\treturn new VSBuffer(textEncoder.encode(source));\n\t\t}\n\t}\n\n\tstatic fromByteArray(source: number[]): VSBuffer {\n\t\tconst result = VSBuffer.alloc(source.length);\n\t\tfor (let i = 0, len = source.length; i < len; i++) {\n\t\t\tresult.buffer[i] = source[i];\n\t\t}\n\t\treturn result;\n\t}\n\n\tstatic concat(buffers: VSBuffer[], totalLength?: number): VSBuffer {\n\t\tif (typeof totalLength === 'undefined') {\n\t\t\ttotalLength = 0;\n\t\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\t\ttotalLength += buffers[i].byteLength;\n\t\t\t}\n\t\t}\n\n\t\tconst ret = VSBuffer.alloc(totalLength);\n\t\tlet offset = 0;\n\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\tconst element = buffers[i];\n\t\t\tret.set(element, offset);\n\t\t\toffset += element.byteLength;\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\treadonly buffer: Uint8Array;\n\treadonly byteLength: number;\n\n\tprivate constructor(buffer: Uint8Array) {\n\t\tthis.buffer = buffer;\n\t\tthis.byteLength = this.buffer.byteLength;\n\t}\n\n\tclone(): VSBuffer {\n\t\tconst result = VSBuffer.alloc(this.byteLength);\n\t\tresult.set(this);\n\t\treturn result;\n\t}\n\n\ttoString(): string {\n\t\tif (hasBuffer) {\n\t\t\treturn this.buffer.toString();\n\t\t} else {\n\t\t\tif (!textDecoder) {\n\t\t\t\ttextDecoder = new TextDecoder();\n\t\t\t}\n\t\t\treturn textDecoder.decode(this.buffer);\n\t\t}\n\t}\n\n\tslice(start?: number, end?: number): VSBuffer {\n\t\t// IMPORTANT: use subarray instead of slice because TypedArray#slice\n\t\t// creates shallow copy and NodeBuffer#slice doesn't. The use of subarray\n\t\t// ensures the same, performance, behaviour.\n\t\treturn new VSBuffer(this.buffer.subarray(start, end));\n\t}\n\n\tset(array: VSBuffer, offset?: number): void;\n\tset(array: Uint8Array, offset?: number): void;\n\tset(array: ArrayBuffer, offset?: number): void;\n\tset(array: ArrayBufferView, offset?: number): void;\n\tset(array: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView, offset?: number): void;\n\tset(array: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView, offset?: number): void {\n\t\tif (array instanceof VSBuffer) {\n\t\t\tthis.buffer.set(array.buffer, offset);\n\t\t} else if (array instanceof Uint8Array) {\n\t\t\tthis.buffer.set(array, offset);\n\t\t} else if (array instanceof ArrayBuffer) {\n\t\t\tthis.buffer.set(new Uint8Array(array), offset);\n\t\t} else if (ArrayBuffer.isView(array)) {\n\t\t\tthis.buffer.set(new Uint8Array(array.buffer, array.byteOffset, array.byteLength), offset);\n\t\t} else {\n\t\t\tthrow new Error(`Unkown argument 'array'`);\n\t\t}\n\t}\n\n\treadUInt32BE(offset: number): number {\n\t\treturn readUInt32BE(this.buffer, offset);\n\t}\n\n\twriteUInt32BE(value: number, offset: number): void {\n\t\twriteUInt32BE(this.buffer, value, offset);\n\t}\n\n\treadUInt32LE(offset: number): number {\n\t\treturn readUInt32LE(this.buffer, offset);\n\t}\n\n\twriteUInt32LE(value: number, offset: number): void {\n\t\twriteUInt32LE(this.buffer, value, offset);\n\t}\n\n\treadUInt8(offset: number): number {\n\t\treturn readUInt8(this.buffer, offset);\n\t}\n\n\twriteUInt8(value: number, offset: number): void {\n\t\twriteUInt8(this.buffer, value, offset);\n\t}\n}\n\nexport function readUInt16LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0)\n\t);\n}\n\nexport function writeUInt16LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n}\n\nexport function readUInt32BE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\tsource[offset] * 2 ** 24\n\t\t+ source[offset + 1] * 2 ** 16\n\t\t+ source[offset + 2] * 2 ** 8\n\t\t+ source[offset + 3]\n\t);\n}\n\nexport function writeUInt32BE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 3] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = value;\n\tvalue = value >>> 8;\n\tdestination[offset] = value;\n}\n\nexport function readUInt32LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0) |\n\t\t((source[offset + 2] << 16) >>> 0) |\n\t\t((source[offset + 3] << 24) >>> 0)\n\t);\n}\n\nexport function writeUInt32LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 3] = (value & 0b11111111);\n}\n\nexport function readUInt8(source: Uint8Array, offset: number): number {\n\treturn source[offset];\n}\n\nexport function writeUInt8(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset] = value;\n}\n\nexport interface VSBufferReadable extends streams.Readable<VSBuffer> { }\n\nexport interface VSBufferReadableStream extends streams.ReadableStream<VSBuffer> { }\n\nexport interface VSBufferWriteableStream extends streams.WriteableStream<VSBuffer> { }\n\nexport interface VSBufferReadableBufferedStream extends streams.ReadableBufferedStream<VSBuffer> { }\n\nexport function readableToBuffer(readable: VSBufferReadable): VSBuffer {\n\treturn streams.consumeReadable<VSBuffer>(readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function bufferToReadable(buffer: VSBuffer): VSBufferReadable {\n\treturn streams.toReadable<VSBuffer>(buffer);\n}\n\nexport function streamToBuffer(stream: streams.ReadableStream<VSBuffer>): Promise<VSBuffer> {\n\treturn streams.consumeStream<VSBuffer>(stream, chunks => VSBuffer.concat(chunks));\n}\n\nexport async function bufferedStreamToBuffer(bufferedStream: streams.ReadableBufferedStream<VSBuffer>): Promise<VSBuffer> {\n\tif (bufferedStream.ended) {\n\t\treturn VSBuffer.concat(bufferedStream.buffer);\n\t}\n\n\treturn VSBuffer.concat([\n\n\t\t// Include already read chunks...\n\t\t...bufferedStream.buffer,\n\n\t\t// ...and all additional chunks\n\t\tawait streamToBuffer(bufferedStream.stream)\n\t]);\n}\n\nexport function bufferToStream(buffer: VSBuffer): streams.ReadableStream<VSBuffer> {\n\treturn streams.toStream<VSBuffer>(buffer, chunks => VSBuffer.concat(chunks));\n}\n\nexport function streamToBufferReadableStream(stream: streams.ReadableStreamEvents<Uint8Array | string>): streams.ReadableStream<VSBuffer> {\n\treturn streams.transform<Uint8Array | string, VSBuffer>(stream, { data: data => typeof data === 'string' ? VSBuffer.fromString(data) : VSBuffer.wrap(data) }, chunks => VSBuffer.concat(chunks));\n}\n\nexport function newWriteableBufferStream(options?: streams.WriteableStreamOptions): streams.WriteableStream<VSBuffer> {\n\treturn streams.newWriteableStream<VSBuffer>(chunks => VSBuffer.concat(chunks), options);\n}\n\nexport function prefixedBufferReadable(prefix: VSBuffer, readable: VSBufferReadable): VSBufferReadable {\n\treturn streams.prefixedReadable(prefix, readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function prefixedBufferStream(prefix: VSBuffer, stream: VSBufferReadableStream): VSBufferReadableStream {\n\treturn streams.prefixedStream(prefix, stream, chunks => VSBuffer.concat(chunks));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isArray, isObject, isUndefinedOrNull } from 'vs/base/common/types';\n\nexport function deepClone<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tif (obj instanceof RegExp) {\n\t\t// See https://github.com/microsoft/TypeScript/issues/10990\n\t\treturn obj as any;\n\t}\n\tconst result: any = Array.isArray(obj) ? [] : {};\n\tObject.keys(<any>obj).forEach((key: string) => {\n\t\tif ((<any>obj)[key] && typeof (<any>obj)[key] === 'object') {\n\t\t\tresult[key] = deepClone((<any>obj)[key]);\n\t\t} else {\n\t\t\tresult[key] = (<any>obj)[key];\n\t\t}\n\t});\n\treturn result;\n}\n\nexport function deepFreeze<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tconst stack: any[] = [obj];\n\twhile (stack.length > 0) {\n\t\tconst obj = stack.shift();\n\t\tObject.freeze(obj);\n\t\tfor (const key in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst prop = obj[key];\n\t\t\t\tif (typeof prop === 'object' && !Object.isFrozen(prop)) {\n\t\t\t\t\tstack.push(prop);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn obj;\n}\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport function cloneAndChange(obj: any, changer: (orig: any) => any): any {\n\treturn _cloneAndChange(obj, changer, new Set());\n}\n\nfunction _cloneAndChange(obj: any, changer: (orig: any) => any, seen: Set<any>): any {\n\tif (isUndefinedOrNull(obj)) {\n\t\treturn obj;\n\t}\n\n\tconst changed = changer(obj);\n\tif (typeof changed !== 'undefined') {\n\t\treturn changed;\n\t}\n\n\tif (isArray(obj)) {\n\t\tconst r1: any[] = [];\n\t\tfor (const e of obj) {\n\t\t\tr1.push(_cloneAndChange(e, changer, seen));\n\t\t}\n\t\treturn r1;\n\t}\n\n\tif (isObject(obj)) {\n\t\tif (seen.has(obj)) {\n\t\t\tthrow new Error('Cannot clone recursive data-structure');\n\t\t}\n\t\tseen.add(obj);\n\t\tconst r2 = {};\n\t\tfor (let i2 in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, i2)) {\n\t\t\t\t(r2 as any)[i2] = _cloneAndChange(obj[i2], changer, seen);\n\t\t\t}\n\t\t}\n\t\tseen.delete(obj);\n\t\treturn r2;\n\t}\n\n\treturn obj;\n}\n\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination: any, source: any, overwrite: boolean = true): any {\n\tif (!isObject(destination)) {\n\t\treturn source;\n\t}\n\n\tif (isObject(source)) {\n\t\tObject.keys(source).forEach(key => {\n\t\t\tif (key in destination) {\n\t\t\t\tif (overwrite) {\n\t\t\t\t\tif (isObject(destination[key]) && isObject(source[key])) {\n\t\t\t\t\t\tmixin(destination[key], source[key], overwrite);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdestination[key] = source[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdestination[key] = source[key];\n\t\t\t}\n\t\t});\n\t}\n\treturn destination;\n}\n\nexport function equals(one: any, other: any): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\tif (one === null || one === undefined || other === null || other === undefined) {\n\t\treturn false;\n\t}\n\tif (typeof one !== typeof other) {\n\t\treturn false;\n\t}\n\tif (typeof one !== 'object') {\n\t\treturn false;\n\t}\n\tif ((Array.isArray(one)) !== (Array.isArray(other))) {\n\t\treturn false;\n\t}\n\n\tlet i: number;\n\tlet key: string;\n\n\tif (Array.isArray(one)) {\n\t\tif (one.length !== other.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < one.length; i++) {\n\t\t\tif (!equals(one[i], other[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tconst oneKeys: string[] = [];\n\n\t\tfor (key in one) {\n\t\t\toneKeys.push(key);\n\t\t}\n\t\toneKeys.sort();\n\t\tconst otherKeys: string[] = [];\n\t\tfor (key in other) {\n\t\t\totherKeys.push(key);\n\t\t}\n\t\totherKeys.sort();\n\t\tif (!equals(oneKeys, otherKeys)) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < oneKeys.length; i++) {\n\t\t\tif (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n * Calls `JSON.Stringify` with a replacer to break apart any circular references.\n * This prevents `JSON`.stringify` from throwing the exception\n *  \"Uncaught TypeError: Converting circular structure to JSON\"\n */\nexport function safeStringify(obj: any): string {\n\tconst seen = new Set<any>();\n\treturn JSON.stringify(obj, (key, value) => {\n\t\tif (isObject(value) || Array.isArray(value)) {\n\t\t\tif (seen.has(value)) {\n\t\t\t\treturn '[Circular]';\n\t\t\t} else {\n\t\t\t\tseen.add(value);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t});\n}\n\nexport function getOrDefault<T, R>(obj: T, fn: (obj: T) => R | undefined, defaultValue: R): R {\n\tconst result = fn(obj);\n\treturn typeof result === 'undefined' ? defaultValue : result;\n}\n\ntype obj = { [key: string]: any; };\n/**\n * Returns an object that has keys for each value that is different in the base object. Keys\n * that do not exist in the target but in the base object are not considered.\n *\n * Note: This is not a deep-diffing method, so the values are strictly taken into the resulting\n * object if they differ.\n *\n * @param base the object to diff against\n * @param obj the object to use for diffing\n */\nexport function distinct(base: obj, target: obj): obj {\n\tconst result = Object.create(null);\n\n\tif (!base || !target) {\n\t\treturn result;\n\t}\n\n\tconst targetKeys = Object.keys(target);\n\ttargetKeys.forEach(k => {\n\t\tconst baseValue = base[k];\n\t\tconst targetValue = target[k];\n\n\t\tif (!equals(baseValue, targetValue)) {\n\t\t\tresult[k] = targetValue;\n\t\t}\n\t});\n\n\treturn result;\n}\n\nexport function getCaseInsensitive(target: obj, key: string): any {\n\tconst lowercaseKey = key.toLowerCase();\n\tconst equivalentKey = Object.keys(target).find(k => k.toLowerCase() === lowercaseKey);\n\treturn equivalentKey ? target[equivalentKey] : target[key];\n}\n\nexport function filter(obj: obj, predicate: (key: string, value: any) => boolean): obj {\n\tconst result = Object.create(null);\n\tfor (const [key, value] of Object.entries(obj)) {\n\t\tif (predicate(key, value)) {\n\t\t\tresult[key] = value;\n\t\t}\n\t}\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\n\nexport interface IRemoteConsoleLog {\n\ttype: string;\n\tseverity: string;\n\targuments: string;\n}\n\ninterface IStackArgument {\n\t__$stack: string;\n}\n\nexport interface IStackFrame {\n\turi: URI;\n\tline: number;\n\tcolumn: number;\n}\n\nexport function isRemoteConsoleLog(obj: any): obj is IRemoteConsoleLog {\n\tconst entry = obj as IRemoteConsoleLog;\n\n\treturn entry && typeof entry.type === 'string' && typeof entry.severity === 'string';\n}\n\nexport function parse(entry: IRemoteConsoleLog): { args: any[], stack?: string } {\n\tconst args: any[] = [];\n\tlet stack: string | undefined;\n\n\t// Parse Entry\n\ttry {\n\t\tconst parsedArguments: any[] = JSON.parse(entry.arguments);\n\n\t\t// Check for special stack entry as last entry\n\t\tconst stackArgument = parsedArguments[parsedArguments.length - 1] as IStackArgument;\n\t\tif (stackArgument && stackArgument.__$stack) {\n\t\t\tparsedArguments.pop(); // stack is handled specially\n\t\t\tstack = stackArgument.__$stack;\n\t\t}\n\n\t\targs.push(...parsedArguments);\n\t} catch (error) {\n\t\targs.push('Unable to log remote console arguments', entry.arguments);\n\t}\n\n\treturn { args, stack };\n}\n\nexport function getFirstFrame(entry: IRemoteConsoleLog): IStackFrame | undefined;\nexport function getFirstFrame(stack: string | undefined): IStackFrame | undefined;\nexport function getFirstFrame(arg0: IRemoteConsoleLog | string | undefined): IStackFrame | undefined {\n\tif (typeof arg0 !== 'string') {\n\t\treturn getFirstFrame(parse(arg0!).stack);\n\t}\n\n\t// Parse a source information out of the stack if we have one. Format can be:\n\t// at vscode.commands.registerCommand (/Users/someone/Desktop/test-ts/out/src/extension.js:18:17)\n\t// or\n\t// at /Users/someone/Desktop/test-ts/out/src/extension.js:18:17\n\t// or\n\t// at c:\\Users\\someone\\Desktop\\end-js\\extension.js:19:17\n\t// or\n\t// at e.$executeContributedCommand(c:\\Users\\someone\\Desktop\\end-js\\extension.js:19:17)\n\tconst stack = arg0;\n\tif (stack) {\n\t\tconst topFrame = findFirstFrame(stack);\n\n\t\t// at [^\\/]* => line starts with \"at\" followed by any character except '/' (to not capture unix paths too late)\n\t\t// (?:(?:[a-zA-Z]+:)|(?:[\\/])|(?:\\\\\\\\) => windows drive letter OR unix root OR unc root\n\t\t// (?:.+) => simple pattern for the path, only works because of the line/col pattern after\n\t\t// :(?:\\d+):(?:\\d+) => :line:column data\n\t\tconst matches = /at [^\\/]*((?:(?:[a-zA-Z]+:)|(?:[\\/])|(?:\\\\\\\\))(?:.+)):(\\d+):(\\d+)/.exec(topFrame || '');\n\t\tif (matches && matches.length === 4) {\n\t\t\treturn {\n\t\t\t\turi: URI.file(matches[1]),\n\t\t\t\tline: Number(matches[2]),\n\t\t\t\tcolumn: Number(matches[3])\n\t\t\t};\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nfunction findFirstFrame(stack: string | undefined): string | undefined {\n\tif (!stack) {\n\t\treturn stack;\n\t}\n\n\tconst newlineIndex = stack.indexOf('\\n');\n\tif (newlineIndex === -1) {\n\t\treturn stack;\n\t}\n\n\treturn stack.substring(0, newlineIndex);\n}\n\nexport function log(entry: IRemoteConsoleLog, label: string): void {\n\tconst { args, stack } = parse(entry);\n\n\tconst isOneStringArg = typeof args[0] === 'string' && args.length === 1;\n\n\tlet topFrame = findFirstFrame(stack);\n\tif (topFrame) {\n\t\ttopFrame = `(${topFrame.trim()})`;\n\t}\n\n\tlet consoleArgs: string[] = [];\n\n\t// First arg is a string\n\tif (typeof args[0] === 'string') {\n\t\tif (topFrame && isOneStringArg) {\n\t\t\tconsoleArgs = [`%c[${label}] %c${args[0]} %c${topFrame}`, color('blue'), color(''), color('grey')];\n\t\t} else {\n\t\t\tconsoleArgs = [`%c[${label}] %c${args[0]}`, color('blue'), color(''), ...args.slice(1)];\n\t\t}\n\t}\n\n\t// First arg is something else, just apply all\n\telse {\n\t\tconsoleArgs = [`%c[${label}]%`, color('blue'), ...args];\n\t}\n\n\t// Stack: add to args unless already aded\n\tif (topFrame && !isOneStringArg) {\n\t\tconsoleArgs.push(topFrame);\n\t}\n\n\t// Log it\n\tif (typeof (console as any)[entry.severity] !== 'function') {\n\t\tthrow new Error('Unknown console method');\n\t}\n\t(console as any)[entry.severity].apply(console, consoleArgs);\n}\n\nfunction color(color: string): string {\n\treturn `color: ${color}`;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { regExpFlags } from 'vs/base/common/strings';\nimport { URI, UriComponents } from 'vs/base/common/uri';\n\nexport function stringify(obj: any): string {\n\treturn JSON.stringify(obj, replacer);\n}\n\nexport function parse(text: string): any {\n\tlet data = JSON.parse(text);\n\tdata = revive(data);\n\treturn data;\n}\n\nexport const enum MarshalledId {\n\tUri = 1,\n\tRegexp,\n\tScmResource,\n\tScmResourceGroup,\n\tScmProvider,\n\tCommentController,\n\tCommentThread,\n\tCommentThreadReply,\n\tCommentNode,\n\tCommentThreadNode,\n\tTimelineActionContext,\n\tNotebookCellActionContext,\n\tTestItemContext,\n}\n\nexport interface MarshalledObject {\n\t$mid: MarshalledId;\n}\n\nfunction replacer(key: string, value: any): any {\n\t// URI is done via toJSON-member\n\tif (value instanceof RegExp) {\n\t\treturn {\n\t\t\t$mid: MarshalledId.Regexp,\n\t\t\tsource: value.source,\n\t\t\tflags: regExpFlags(value),\n\t\t};\n\t}\n\treturn value;\n}\n\n\ntype Deserialize<T> = T extends UriComponents ? URI\n\t: T extends VSBuffer ? VSBuffer\n\t: T extends object\n\t? Revived<T>\n\t: T;\n\nexport type Revived<T> = { [K in keyof T]: Deserialize<T[K]> };\n\nexport function revive<T = any>(obj: any, depth = 0): Revived<T> {\n\tif (!obj || depth > 200) {\n\t\treturn obj;\n\t}\n\n\tif (typeof obj === 'object') {\n\n\t\tswitch ((<MarshalledObject>obj).$mid) {\n\t\t\tcase MarshalledId.Uri: return <any>URI.revive(obj);\n\t\t\tcase MarshalledId.Regexp: return <any>new RegExp(obj.source, obj.flags);\n\t\t}\n\n\t\tif (\n\t\t\tobj instanceof VSBuffer\n\t\t\t|| obj instanceof Uint8Array\n\t\t) {\n\t\t\treturn <any>obj;\n\t\t}\n\n\t\tif (Array.isArray(obj)) {\n\t\t\tfor (let i = 0; i < obj.length; ++i) {\n\t\t\t\tobj[i] = revive(obj[i], depth + 1);\n\t\t\t}\n\t\t} else {\n\t\t\t// walk object\n\t\t\tfor (const key in obj) {\n\t\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\t\tobj[key] = revive(obj[key], depth + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn obj;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { hasDriveLetter, isRootOrDriveLetter } from 'vs/base/common/extpath';\nimport { Schemas } from 'vs/base/common/network';\nimport { normalize, posix, sep, win32 } from 'vs/base/common/path';\nimport { isLinux, isMacintosh, isWindows } from 'vs/base/common/platform';\nimport { basename, isEqual, relativePath } from 'vs/base/common/resources';\nimport { rtrim, startsWithIgnoreCase } from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\n\nexport interface IWorkspaceFolderProvider {\n\tgetWorkspaceFolder(resource: URI): { uri: URI, name?: string; } | null;\n\tgetWorkspace(): {\n\t\tfolders: { uri: URI, name?: string; }[];\n\t};\n}\n\nexport interface IUserHomeProvider {\n\tuserHome?: URI;\n}\n\n/**\n * @deprecated use LabelService instead\n */\nexport function getPathLabel(resource: URI | string, userHomeProvider?: IUserHomeProvider, rootProvider?: IWorkspaceFolderProvider): string {\n\tif (typeof resource === 'string') {\n\t\tresource = URI.file(resource);\n\t}\n\n\t// return early if we can resolve a relative path label from the root\n\tif (rootProvider) {\n\t\tconst baseResource = rootProvider.getWorkspaceFolder(resource);\n\t\tif (baseResource) {\n\t\t\tconst hasMultipleRoots = rootProvider.getWorkspace().folders.length > 1;\n\n\t\t\tlet pathLabel: string;\n\t\t\tif (isEqual(baseResource.uri, resource)) {\n\t\t\t\tpathLabel = ''; // no label if paths are identical\n\t\t\t} else {\n\t\t\t\tpathLabel = relativePath(baseResource.uri, resource)!;\n\t\t\t}\n\n\t\t\tif (hasMultipleRoots) {\n\t\t\t\tconst rootName = baseResource.name ? baseResource.name : basename(baseResource.uri);\n\t\t\t\tpathLabel = pathLabel ? (rootName + ' • ' + pathLabel) : rootName; // always show root basename if there are multiple\n\t\t\t}\n\n\t\t\treturn pathLabel;\n\t\t}\n\t}\n\n\t// return if the resource is neither file:// nor untitled:// and no baseResource was provided\n\tif (resource.scheme !== Schemas.file && resource.scheme !== Schemas.untitled) {\n\t\treturn resource.with({ query: null, fragment: null }).toString(true);\n\t}\n\n\t// convert c:\\something => C:\\something\n\tif (hasDriveLetter(resource.fsPath)) {\n\t\treturn normalize(normalizeDriveLetter(resource.fsPath));\n\t}\n\n\t// normalize and tildify (macOS, Linux only)\n\tlet res = normalize(resource.fsPath);\n\tif (!isWindows && userHomeProvider?.userHome) {\n\t\tres = tildify(res, userHomeProvider.userHome.fsPath);\n\t}\n\n\treturn res;\n}\n\nexport function getBaseLabel(resource: URI | string): string;\nexport function getBaseLabel(resource: URI | string | undefined): string | undefined;\nexport function getBaseLabel(resource: URI | string | undefined): string | undefined {\n\tif (!resource) {\n\t\treturn undefined;\n\t}\n\n\tif (typeof resource === 'string') {\n\t\tresource = URI.file(resource);\n\t}\n\n\tconst base = basename(resource) || (resource.scheme === Schemas.file ? resource.fsPath : resource.path) /* can be empty string if '/' is passed in */;\n\n\t// convert c: => C:\n\tif (isWindows && isRootOrDriveLetter(base)) {\n\t\treturn normalizeDriveLetter(base);\n\t}\n\n\treturn base;\n}\n\nexport function normalizeDriveLetter(path: string, continueAsWindows?: boolean): string {\n\tif (hasDriveLetter(path, continueAsWindows)) {\n\t\treturn path.charAt(0).toUpperCase() + path.slice(1);\n\t}\n\n\treturn path;\n}\n\nlet normalizedUserHomeCached: { original: string; normalized: string; } = Object.create(null);\nexport function tildify(path: string, userHome: string): string {\n\tif (isWindows || !path || !userHome) {\n\t\treturn path; // unsupported\n\t}\n\n\t// Keep a normalized user home path as cache to prevent accumulated string creation\n\tlet normalizedUserHome = normalizedUserHomeCached.original === userHome ? normalizedUserHomeCached.normalized : undefined;\n\tif (!normalizedUserHome) {\n\t\tnormalizedUserHome = `${rtrim(userHome, posix.sep)}${posix.sep}`;\n\t\tnormalizedUserHomeCached = { original: userHome, normalized: normalizedUserHome };\n\t}\n\n\t// Linux: case sensitive, macOS: case insensitive\n\tif (isLinux ? path.startsWith(normalizedUserHome) : startsWithIgnoreCase(path, normalizedUserHome)) {\n\t\tpath = `~/${path.substr(normalizedUserHome.length)}`;\n\t}\n\n\treturn path;\n}\n\nexport function untildify(path: string, userHome: string): string {\n\treturn path.replace(/^~($|\\/|\\\\)/, `${userHome}$1`);\n}\n\n/**\n * Shortens the paths but keeps them easy to distinguish.\n * Replaces not important parts with ellipsis.\n * Every shorten path matches only one original path and vice versa.\n *\n * Algorithm for shortening paths is as follows:\n * 1. For every path in list, find unique substring of that path.\n * 2. Unique substring along with ellipsis is shortened path of that path.\n * 3. To find unique substring of path, consider every segment of length from 1 to path.length of path from end of string\n *    and if present segment is not substring to any other paths then present segment is unique path,\n *    else check if it is not present as suffix of any other path and present segment is suffix of path itself,\n *    if it is true take present segment as unique path.\n * 4. Apply ellipsis to unique segment according to whether segment is present at start/in-between/end of path.\n *\n * Example 1\n * 1. consider 2 paths i.e. ['a\\\\b\\\\c\\\\d', 'a\\\\f\\\\b\\\\c\\\\d']\n * 2. find unique path of first path,\n * \ta. 'd' is present in path2 and is suffix of path2, hence not unique of present path.\n * \tb. 'c' is present in path2 and 'c' is not suffix of present path, similarly for 'b' and 'a' also.\n * \tc. 'd\\\\c' is suffix of path2.\n *  d. 'b\\\\c' is not suffix of present path.\n *  e. 'a\\\\b' is not present in path2, hence unique path is 'a\\\\b...'.\n * 3. for path2, 'f' is not present in path1 hence unique is '...\\\\f\\\\...'.\n *\n * Example 2\n * 1. consider 2 paths i.e. ['a\\\\b', 'a\\\\b\\\\c'].\n * \ta. Even if 'b' is present in path2, as 'b' is suffix of path1 and is not suffix of path2, unique path will be '...\\\\b'.\n * 2. for path2, 'c' is not present in path1 hence unique path is '..\\\\c'.\n */\nconst ellipsis = '\\u2026';\nconst unc = '\\\\\\\\';\nconst home = '~';\nexport function shorten(paths: string[], pathSeparator: string = sep): string[] {\n\tconst shortenedPaths: string[] = new Array(paths.length);\n\n\t// for every path\n\tlet match = false;\n\tfor (let pathIndex = 0; pathIndex < paths.length; pathIndex++) {\n\t\tlet path = paths[pathIndex];\n\n\t\tif (path === '') {\n\t\t\tshortenedPaths[pathIndex] = `.${pathSeparator}`;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!path) {\n\t\t\tshortenedPaths[pathIndex] = path;\n\t\t\tcontinue;\n\t\t}\n\n\t\tmatch = true;\n\n\t\t// trim for now and concatenate unc path (e.g. \\\\network) or root path (/etc, ~/etc) later\n\t\tlet prefix = '';\n\t\tif (path.indexOf(unc) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(unc) + unc.length);\n\t\t\tpath = path.substr(path.indexOf(unc) + unc.length);\n\t\t} else if (path.indexOf(pathSeparator) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(pathSeparator) + pathSeparator.length);\n\t\t\tpath = path.substr(path.indexOf(pathSeparator) + pathSeparator.length);\n\t\t} else if (path.indexOf(home) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(home) + home.length);\n\t\t\tpath = path.substr(path.indexOf(home) + home.length);\n\t\t}\n\n\t\t// pick the first shortest subpath found\n\t\tconst segments: string[] = path.split(pathSeparator);\n\t\tfor (let subpathLength = 1; match && subpathLength <= segments.length; subpathLength++) {\n\t\t\tfor (let start = segments.length - subpathLength; match && start >= 0; start--) {\n\t\t\t\tmatch = false;\n\t\t\t\tlet subpath = segments.slice(start, start + subpathLength).join(pathSeparator);\n\n\t\t\t\t// that is unique to any other path\n\t\t\t\tfor (let otherPathIndex = 0; !match && otherPathIndex < paths.length; otherPathIndex++) {\n\n\t\t\t\t\t// suffix subpath treated specially as we consider no match 'x' and 'x/...'\n\t\t\t\t\tif (otherPathIndex !== pathIndex && paths[otherPathIndex] && paths[otherPathIndex].indexOf(subpath) > -1) {\n\t\t\t\t\t\tconst isSubpathEnding: boolean = (start + subpathLength === segments.length);\n\n\t\t\t\t\t\t// Adding separator as prefix for subpath, such that 'endsWith(src, trgt)' considers subpath as directory name instead of plain string.\n\t\t\t\t\t\t// prefix is not added when either subpath is root directory or path[otherPathIndex] does not have multiple directories.\n\t\t\t\t\t\tconst subpathWithSep: string = (start > 0 && paths[otherPathIndex].indexOf(pathSeparator) > -1) ? pathSeparator + subpath : subpath;\n\t\t\t\t\t\tconst isOtherPathEnding: boolean = paths[otherPathIndex].endsWith(subpathWithSep);\n\n\t\t\t\t\t\tmatch = !isSubpathEnding || isOtherPathEnding;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// found unique subpath\n\t\t\t\tif (!match) {\n\t\t\t\t\tlet result = '';\n\n\t\t\t\t\t// preserve disk drive or root prefix\n\t\t\t\t\tif (segments[0].endsWith(':') || prefix !== '') {\n\t\t\t\t\t\tif (start === 1) {\n\t\t\t\t\t\t\t// extend subpath to include disk drive prefix\n\t\t\t\t\t\t\tstart = 0;\n\t\t\t\t\t\t\tsubpathLength++;\n\t\t\t\t\t\t\tsubpath = segments[0] + pathSeparator + subpath;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (start > 0) {\n\t\t\t\t\t\t\tresult = segments[0] + pathSeparator;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresult = prefix + result;\n\t\t\t\t\t}\n\n\t\t\t\t\t// add ellipsis at the beginning if needed\n\t\t\t\t\tif (start > 0) {\n\t\t\t\t\t\tresult = result + ellipsis + pathSeparator;\n\t\t\t\t\t}\n\n\t\t\t\t\tresult = result + subpath;\n\n\t\t\t\t\t// add ellipsis at the end if needed\n\t\t\t\t\tif (start + subpathLength < segments.length) {\n\t\t\t\t\t\tresult = result + pathSeparator + ellipsis;\n\t\t\t\t\t}\n\n\t\t\t\t\tshortenedPaths[pathIndex] = result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (match) {\n\t\t\tshortenedPaths[pathIndex] = path; // use full path if no unique subpaths found\n\t\t}\n\t}\n\n\treturn shortenedPaths;\n}\n\nexport interface ISeparator {\n\tlabel: string;\n}\n\nenum Type {\n\tTEXT,\n\tVARIABLE,\n\tSEPARATOR\n}\n\ninterface ISegment {\n\tvalue: string;\n\ttype: Type;\n}\n\n/**\n * Helper to insert values for specific template variables into the string. E.g. \"this $(is) a $(template)\" can be\n * passed to this function together with an object that maps \"is\" and \"template\" to strings to have them replaced.\n * @param value string to which template is applied\n * @param values the values of the templates to use\n */\nexport function template(template: string, values: { [key: string]: string | ISeparator | undefined | null; } = Object.create(null)): string {\n\tconst segments: ISegment[] = [];\n\n\tlet inVariable = false;\n\tlet curVal = '';\n\tfor (const char of template) {\n\t\t// Beginning of variable\n\t\tif (char === '$' || (inVariable && char === '{')) {\n\t\t\tif (curVal) {\n\t\t\t\tsegments.push({ value: curVal, type: Type.TEXT });\n\t\t\t}\n\n\t\t\tcurVal = '';\n\t\t\tinVariable = true;\n\t\t}\n\n\t\t// End of variable\n\t\telse if (char === '}' && inVariable) {\n\t\t\tconst resolved = values[curVal];\n\n\t\t\t// Variable\n\t\t\tif (typeof resolved === 'string') {\n\t\t\t\tif (resolved.length) {\n\t\t\t\t\tsegments.push({ value: resolved, type: Type.VARIABLE });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Separator\n\t\t\telse if (resolved) {\n\t\t\t\tconst prevSegment = segments[segments.length - 1];\n\t\t\t\tif (!prevSegment || prevSegment.type !== Type.SEPARATOR) {\n\t\t\t\t\tsegments.push({ value: resolved.label, type: Type.SEPARATOR }); // prevent duplicate separators\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcurVal = '';\n\t\t\tinVariable = false;\n\t\t}\n\n\t\t// Text or Variable Name\n\t\telse {\n\t\t\tcurVal += char;\n\t\t}\n\t}\n\n\t// Tail\n\tif (curVal && !inVariable) {\n\t\tsegments.push({ value: curVal, type: Type.TEXT });\n\t}\n\n\treturn segments.filter((segment, index) => {\n\n\t\t// Only keep separator if we have values to the left and right\n\t\tif (segment.type === Type.SEPARATOR) {\n\t\t\tconst left = segments[index - 1];\n\t\t\tconst right = segments[index + 1];\n\n\t\t\treturn [left, right].every(segment => segment && (segment.type === Type.VARIABLE || segment.type === Type.TEXT) && segment.value.length > 0);\n\t\t}\n\n\t\t// accept any TEXT and VARIABLE\n\t\treturn true;\n\t}).map(segment => segment.value).join('');\n}\n\n/**\n * Handles mnemonics for menu items. Depending on OS:\n * - Windows: Supported via & character (replace && with &)\n * -   Linux: Supported via & character (replace && with &)\n * -   macOS: Unsupported (replace && with empty string)\n */\nexport function mnemonicMenuLabel(label: string, forceDisableMnemonics?: boolean): string {\n\tif (isMacintosh || forceDisableMnemonics) {\n\t\treturn label.replace(/\\(&&\\w\\)|&&/g, '').replace(/&/g, isMacintosh ? '&' : '&&');\n\t}\n\n\treturn label.replace(/&&|&/g, m => m === '&' ? '&&' : '&');\n}\n\n/**\n * Handles mnemonics for buttons. Depending on OS:\n * - Windows: Supported via & character (replace && with & and & with && for escaping)\n * -   Linux: Supported via _ character (replace && with _)\n * -   macOS: Unsupported (replace && with empty string)\n */\nexport function mnemonicButtonLabel(label: string, forceDisableMnemonics?: boolean): string {\n\tif (isMacintosh || forceDisableMnemonics) {\n\t\treturn label.replace(/\\(&&\\w\\)|&&/g, '');\n\t}\n\n\tif (isWindows) {\n\t\treturn label.replace(/&&|&/g, m => m === '&' ? '&&' : '&');\n\t}\n\n\treturn label.replace(/&&/g, '_');\n}\n\nexport function unmnemonicLabel(label: string): string {\n\treturn label.replace(/&/g, '&&');\n}\n\n/**\n * Splits a path in name and parent path, supporting both '/' and '\\'\n */\nexport function splitName(fullPath: string): { name: string, parentPath: string; } {\n\tconst p = fullPath.indexOf('/') !== -1 ? posix : win32;\n\tconst name = p.basename(fullPath);\n\tconst parentPath = p.dirname(fullPath);\n\tif (name.length) {\n\t\treturn { name, parentPath };\n\t}\n\t// only the root segment\n\treturn { name: parentPath, parentPath: '' };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as sd from 'string_decoder';\nimport { CharCode } from 'vs/base/common/charCode';\n\n/**\n * Convenient way to iterate over output line by line. This helper accommodates for the fact that\n * a buffer might not end with new lines all the way.\n *\n * To use:\n * - call the write method\n * - forEach() over the result to get the lines\n */\nexport class LineDecoder {\n\tprivate stringDecoder: sd.StringDecoder;\n\tprivate remaining: string | null;\n\n\tconstructor(encoding: BufferEncoding = 'utf8') {\n\t\tthis.stringDecoder = new sd.StringDecoder(encoding);\n\t\tthis.remaining = null;\n\t}\n\n\twrite(buffer: Buffer): string[] {\n\t\tconst result: string[] = [];\n\t\tconst value = this.remaining\n\t\t\t? this.remaining + this.stringDecoder.write(buffer)\n\t\t\t: this.stringDecoder.write(buffer);\n\n\t\tif (value.length < 1) {\n\t\t\treturn result;\n\t\t}\n\t\tlet start = 0;\n\t\tlet ch: number;\n\t\tlet idx = start;\n\t\twhile (idx < value.length) {\n\t\t\tch = value.charCodeAt(idx);\n\t\t\tif (ch === CharCode.CarriageReturn || ch === CharCode.LineFeed) {\n\t\t\t\tresult.push(value.substring(start, idx));\n\t\t\t\tidx++;\n\t\t\t\tif (idx < value.length) {\n\t\t\t\t\tconst lastChar = ch;\n\t\t\t\t\tch = value.charCodeAt(idx);\n\t\t\t\t\tif ((lastChar === CharCode.CarriageReturn && ch === CharCode.LineFeed) || (lastChar === CharCode.LineFeed && ch === CharCode.CarriageReturn)) {\n\t\t\t\t\t\tidx++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstart = idx;\n\t\t\t} else {\n\t\t\t\tidx++;\n\t\t\t}\n\t\t}\n\t\tthis.remaining = start < value.length ? value.substr(start) : null;\n\t\treturn result;\n\t}\n\n\tend(): string | null {\n\t\treturn this.remaining;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { basename, dirname, join, normalize, sep } from 'vs/base/common/path';\nimport { rtrim } from 'vs/base/common/strings';\nimport { Promises, readdirSync } from 'vs/base/node/pfs';\n\n/**\n * Copied from: https://github.com/microsoft/vscode-node-debug/blob/master/src/node/pathUtilities.ts#L83\n *\n * Given an absolute, normalized, and existing file path 'realcase' returns the exact path that the file has on disk.\n * On a case insensitive file system, the returned path might differ from the original path by character casing.\n * On a case sensitive file system, the returned path will always be identical to the original path.\n * In case of errors, null is returned. But you cannot use this function to verify that a path exists.\n * realcaseSync does not handle '..' or '.' path segments and it does not take the locale into account.\n */\nexport function realcaseSync(path: string): string | null {\n\tconst dir = dirname(path);\n\tif (path === dir) {\t// end recursion\n\t\treturn path;\n\t}\n\n\tconst name = (basename(path) /* can be '' for windows drive letters */ || path).toLowerCase();\n\ttry {\n\t\tconst entries = readdirSync(dir);\n\t\tconst found = entries.filter(e => e.toLowerCase() === name);\t// use a case insensitive search\n\t\tif (found.length === 1) {\n\t\t\t// on a case sensitive filesystem we cannot determine here, whether the file exists or not, hence we need the 'file exists' precondition\n\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\tif (prefix) {\n\t\t\t\treturn join(prefix, found[0]);\n\t\t\t}\n\t\t} else if (found.length > 1) {\n\t\t\t// must be a case sensitive $filesystem\n\t\t\tconst ix = found.indexOf(name);\n\t\t\tif (ix >= 0) {\t// case sensitive\n\t\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\t\tif (prefix) {\n\t\t\t\t\treturn join(prefix, found[ix]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\t// silently ignore error\n\t}\n\n\treturn null;\n}\n\nexport async function realpath(path: string): Promise<string> {\n\ttry {\n\t\t// DO NOT USE `fs.promises.realpath` here as it internally\n\t\t// calls `fs.native.realpath` which will result in subst\n\t\t// drives to be resolved to their target on Windows\n\t\t// https://github.com/microsoft/vscode/issues/118562\n\t\treturn await Promises.realpath(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpath(). Since fs.realpath() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\n\t\tawait Promises.access(normalizedPath, fs.constants.R_OK);\n\n\t\treturn normalizedPath;\n\t}\n}\n\nexport function realpathSync(path: string): string {\n\ttry {\n\t\treturn fs.realpathSync(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpathSync(). Since fs.realpathSync() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\t\tfs.accessSync(normalizedPath, fs.constants.R_OK); // throws in case of an error\n\n\t\treturn normalizedPath;\n\t}\n}\n\nfunction normalizePath(path: string): string {\n\treturn rtrim(normalize(path), sep);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as os from 'os';\nimport * as path from 'vs/base/common/path';\nimport * as pfs from 'vs/base/node/pfs';\n\n// This is required, since parseInt(\"7-preview\") will return 7.\nconst IntRegex: RegExp = /^\\d+$/;\n\nconst PwshMsixRegex: RegExp = /^Microsoft.PowerShell_.*/;\nconst PwshPreviewMsixRegex: RegExp = /^Microsoft.PowerShellPreview_.*/;\n\nconst enum Arch {\n\tx64,\n\tx86,\n\tARM\n}\n\nlet processArch: Arch;\nswitch (process.arch) {\n\tcase 'ia32':\n\tcase 'x32':\n\t\tprocessArch = Arch.x86;\n\t\tbreak;\n\tcase 'arm':\n\tcase 'arm64':\n\t\tprocessArch = Arch.ARM;\n\t\tbreak;\n\tdefault:\n\t\tprocessArch = Arch.x64;\n\t\tbreak;\n}\n\n/*\nCurrently, here are the values for these environment variables on their respective archs:\n\nOn x86 process on x86:\nPROCESSOR_ARCHITECTURE is X86\nPROCESSOR_ARCHITEW6432 is undefined\n\nOn x86 process on x64:\nPROCESSOR_ARCHITECTURE is X86\nPROCESSOR_ARCHITEW6432 is AMD64\n\nOn x64 process on x64:\nPROCESSOR_ARCHITECTURE is AMD64\nPROCESSOR_ARCHITEW6432 is undefined\n\nOn ARM process on ARM:\nPROCESSOR_ARCHITECTURE is ARM64\nPROCESSOR_ARCHITEW6432 is undefined\n\nOn x86 process on ARM:\nPROCESSOR_ARCHITECTURE is X86\nPROCESSOR_ARCHITEW6432 is ARM64\n\nOn x64 process on ARM:\nPROCESSOR_ARCHITECTURE is ARM64\nPROCESSOR_ARCHITEW6432 is undefined\n*/\nlet osArch: Arch;\nif (process.env['PROCESSOR_ARCHITEW6432']) {\n\tosArch = process.env['PROCESSOR_ARCHITEW6432'] === 'ARM64'\n\t\t? Arch.ARM\n\t\t: Arch.x64;\n} else if (process.env['PROCESSOR_ARCHITECTURE'] === 'ARM64') {\n\tosArch = Arch.ARM;\n} else if (process.env['PROCESSOR_ARCHITECTURE'] === 'X86') {\n\tosArch = Arch.x86;\n} else {\n\tosArch = Arch.x64;\n}\n\nexport interface IPowerShellExeDetails {\n\treadonly displayName: string;\n\treadonly exePath: string;\n}\n\nexport interface IPossiblePowerShellExe extends IPowerShellExeDetails {\n\texists(): Promise<boolean>;\n}\n\nclass PossiblePowerShellExe implements IPossiblePowerShellExe {\n\tconstructor(\n\t\tpublic readonly exePath: string,\n\t\tpublic readonly displayName: string,\n\t\tprivate knownToExist?: boolean) { }\n\n\tpublic async exists(): Promise<boolean> {\n\t\tif (this.knownToExist === undefined) {\n\t\t\tthis.knownToExist = await pfs.SymlinkSupport.existsFile(this.exePath);\n\t\t}\n\t\treturn this.knownToExist;\n\t}\n}\n\nfunction getProgramFilesPath(\n\t{ useAlternateBitness = false }: { useAlternateBitness?: boolean } = {}): string | null {\n\n\tif (!useAlternateBitness) {\n\t\t// Just use the native system bitness\n\t\treturn process.env.ProgramFiles || null;\n\t}\n\n\t// We might be a 64-bit process looking for 32-bit program files\n\tif (processArch === Arch.x64) {\n\t\treturn process.env['ProgramFiles(x86)'] || null;\n\t}\n\n\t// We might be a 32-bit process looking for 64-bit program files\n\tif (osArch === Arch.x64) {\n\t\treturn process.env.ProgramW6432 || null;\n\t}\n\n\t// We're a 32-bit process on 32-bit Windows, there is no other Program Files dir\n\treturn null;\n}\n\nasync function findPSCoreWindowsInstallation(\n\t{ useAlternateBitness = false, findPreview = false }:\n\t\t{ useAlternateBitness?: boolean; findPreview?: boolean } = {}): Promise<IPossiblePowerShellExe | null> {\n\n\tconst programFilesPath = getProgramFilesPath({ useAlternateBitness });\n\tif (!programFilesPath) {\n\t\treturn null;\n\t}\n\n\tconst powerShellInstallBaseDir = path.join(programFilesPath, 'PowerShell');\n\n\t// Ensure the base directory exists\n\tif (!await pfs.SymlinkSupport.existsDirectory(powerShellInstallBaseDir)) {\n\t\treturn null;\n\t}\n\n\tlet highestSeenVersion: number = -1;\n\tlet pwshExePath: string | null = null;\n\tfor (const item of await pfs.Promises.readdir(powerShellInstallBaseDir)) {\n\n\t\tlet currentVersion: number = -1;\n\t\tif (findPreview) {\n\t\t\t// We are looking for something like \"7-preview\"\n\n\t\t\t// Preview dirs all have dashes in them\n\t\t\tconst dashIndex = item.indexOf('-');\n\t\t\tif (dashIndex < 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Verify that the part before the dash is an integer\n\t\t\t// and that the part after the dash is \"preview\"\n\t\t\tconst intPart: string = item.substring(0, dashIndex);\n\t\t\tif (!IntRegex.test(intPart) || item.substring(dashIndex + 1) !== 'preview') {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tcurrentVersion = parseInt(intPart, 10);\n\t\t} else {\n\t\t\t// Search for a directory like \"6\" or \"7\"\n\t\t\tif (!IntRegex.test(item)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tcurrentVersion = parseInt(item, 10);\n\t\t}\n\n\t\t// Ensure we haven't already seen a higher version\n\t\tif (currentVersion <= highestSeenVersion) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Now look for the file\n\t\tconst exePath = path.join(powerShellInstallBaseDir, item, 'pwsh.exe');\n\t\tif (!await pfs.SymlinkSupport.existsFile(exePath)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tpwshExePath = exePath;\n\t\thighestSeenVersion = currentVersion;\n\t}\n\n\tif (!pwshExePath) {\n\t\treturn null;\n\t}\n\n\tconst bitness: string = programFilesPath.includes('x86') ? ' (x86)' : '';\n\tconst preview: string = findPreview ? ' Preview' : '';\n\n\treturn new PossiblePowerShellExe(pwshExePath, `PowerShell${preview}${bitness}`, true);\n}\n\nasync function findPSCoreMsix({ findPreview }: { findPreview?: boolean } = {}): Promise<IPossiblePowerShellExe | null> {\n\t// We can't proceed if there's no LOCALAPPDATA path\n\tif (!process.env.LOCALAPPDATA) {\n\t\treturn null;\n\t}\n\n\t// Find the base directory for MSIX application exe shortcuts\n\tconst msixAppDir = path.join(process.env.LOCALAPPDATA, 'Microsoft', 'WindowsApps');\n\n\tif (!await pfs.SymlinkSupport.existsDirectory(msixAppDir)) {\n\t\treturn null;\n\t}\n\n\t// Define whether we're looking for the preview or the stable\n\tconst { pwshMsixDirRegex, pwshMsixName } = findPreview\n\t\t? { pwshMsixDirRegex: PwshPreviewMsixRegex, pwshMsixName: 'PowerShell Preview (Store)' }\n\t\t: { pwshMsixDirRegex: PwshMsixRegex, pwshMsixName: 'PowerShell (Store)' };\n\n\t// We should find only one such application, so return on the first one\n\tfor (const subdir of await pfs.Promises.readdir(msixAppDir)) {\n\t\tif (pwshMsixDirRegex.test(subdir)) {\n\t\t\tconst pwshMsixPath = path.join(msixAppDir, subdir, 'pwsh.exe');\n\t\t\treturn new PossiblePowerShellExe(pwshMsixPath, pwshMsixName);\n\t\t}\n\t}\n\n\t// If we find nothing, return null\n\treturn null;\n}\n\nfunction findPSCoreDotnetGlobalTool(): IPossiblePowerShellExe {\n\tconst dotnetGlobalToolExePath: string = path.join(os.homedir(), '.dotnet', 'tools', 'pwsh.exe');\n\n\treturn new PossiblePowerShellExe(dotnetGlobalToolExePath, '.NET Core PowerShell Global Tool');\n}\n\nfunction findWinPS(): IPossiblePowerShellExe | null {\n\tconst winPSPath = path.join(\n\t\tprocess.env.windir!,\n\t\tprocessArch === Arch.x86 && osArch !== Arch.x86 ? 'SysNative' : 'System32',\n\t\t'WindowsPowerShell', 'v1.0', 'powershell.exe');\n\n\treturn new PossiblePowerShellExe(winPSPath, 'Windows PowerShell', true);\n}\n\n/**\n * Iterates through all the possible well-known PowerShell installations on a machine.\n * Returned values may not exist, but come with an .exists property\n * which will check whether the executable exists.\n */\nasync function* enumerateDefaultPowerShellInstallations(): AsyncIterable<IPossiblePowerShellExe> {\n\t// Find PSCore stable first\n\tlet pwshExe = await findPSCoreWindowsInstallation();\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n\n\t// Windows may have a 32-bit pwsh.exe\n\tpwshExe = await findPSCoreWindowsInstallation({ useAlternateBitness: true });\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n\n\t// Also look for the MSIX/UWP installation\n\tpwshExe = await findPSCoreMsix();\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n\n\t// Look for the .NET global tool\n\t// Some older versions of PowerShell have a bug in this where startup will fail,\n\t// but this is fixed in newer versions\n\tpwshExe = findPSCoreDotnetGlobalTool();\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n\n\t// Look for PSCore preview\n\tpwshExe = await findPSCoreWindowsInstallation({ findPreview: true });\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n\n\t// Find a preview MSIX\n\tpwshExe = await findPSCoreMsix({ findPreview: true });\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n\n\t// Look for pwsh-preview with the opposite bitness\n\tpwshExe = await findPSCoreWindowsInstallation({ useAlternateBitness: true, findPreview: true });\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n\n\t// Finally, get Windows PowerShell\n\tpwshExe = findWinPS();\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n}\n\n/**\n * Iterates through PowerShell installations on the machine according\n * to configuration passed in through the constructor.\n * PowerShell items returned by this object are verified\n * to exist on the filesystem.\n */\nexport async function* enumeratePowerShellInstallations(): AsyncIterable<IPowerShellExeDetails> {\n\t// Get the default PowerShell installations first\n\tfor await (const defaultPwsh of enumerateDefaultPowerShellInstallations()) {\n\t\tif (await defaultPwsh.exists()) {\n\t\t\tyield defaultPwsh;\n\t\t}\n\t}\n}\n\n/**\n* Returns the first available PowerShell executable found in the search order.\n*/\nexport async function getFirstAvailablePowerShellInstallation(): Promise<IPowerShellExeDetails | null> {\n\tfor await (const pwsh of enumeratePowerShellInstallations()) {\n\t\treturn pwsh;\n\t}\n\treturn null;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getRandomElement } from 'vs/base/common/arrays';\nimport { CancelablePromise, createCancelablePromise, timeout } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { memoize } from 'vs/base/common/decorators';\nimport * as errors from 'vs/base/common/errors';\nimport { Emitter, Event, EventMultiplexer, Relay } from 'vs/base/common/event';\nimport { combinedDisposable, DisposableStore, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { revive } from 'vs/base/common/marshalling';\nimport * as strings from 'vs/base/common/strings';\nimport { isFunction, isUndefinedOrNull } from 'vs/base/common/types';\n\n/**\n * An `IChannel` is an abstraction over a collection of commands.\n * You can `call` several commands on a channel, each taking at\n * most one single argument. A `call` always returns a promise\n * with at most one single return value.\n */\nexport interface IChannel {\n\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(event: string, arg?: any): Event<T>;\n}\n\n/**\n * An `IServerChannel` is the counter part to `IChannel`,\n * on the server-side. You should implement this interface\n * if you'd like to handle remote promises or events.\n */\nexport interface IServerChannel<TContext = string> {\n\tcall<T>(ctx: TContext, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(ctx: TContext, event: string, arg?: any): Event<T>;\n}\n\nexport const enum RequestType {\n\tPromise = 100,\n\tPromiseCancel = 101,\n\tEventListen = 102,\n\tEventDispose = 103\n}\n\nfunction requestTypeToStr(type: RequestType): string {\n\tswitch (type) {\n\t\tcase RequestType.Promise:\n\t\t\treturn 'req';\n\t\tcase RequestType.PromiseCancel:\n\t\t\treturn 'cancel';\n\t\tcase RequestType.EventListen:\n\t\t\treturn 'subscribe';\n\t\tcase RequestType.EventDispose:\n\t\t\treturn 'unsubscribe';\n\t}\n}\n\ntype IRawPromiseRequest = { type: RequestType.Promise; id: number; channelName: string; name: string; arg: any; };\ntype IRawPromiseCancelRequest = { type: RequestType.PromiseCancel, id: number };\ntype IRawEventListenRequest = { type: RequestType.EventListen; id: number; channelName: string; name: string; arg: any; };\ntype IRawEventDisposeRequest = { type: RequestType.EventDispose, id: number };\ntype IRawRequest = IRawPromiseRequest | IRawPromiseCancelRequest | IRawEventListenRequest | IRawEventDisposeRequest;\n\nexport const enum ResponseType {\n\tInitialize = 200,\n\tPromiseSuccess = 201,\n\tPromiseError = 202,\n\tPromiseErrorObj = 203,\n\tEventFire = 204\n}\n\nfunction responseTypeToStr(type: ResponseType): string {\n\tswitch (type) {\n\t\tcase ResponseType.Initialize:\n\t\t\treturn `init`;\n\t\tcase ResponseType.PromiseSuccess:\n\t\t\treturn `reply:`;\n\t\tcase ResponseType.PromiseError:\n\t\tcase ResponseType.PromiseErrorObj:\n\t\t\treturn `replyErr:`;\n\t\tcase ResponseType.EventFire:\n\t\t\treturn `event:`;\n\t}\n}\n\ntype IRawInitializeResponse = { type: ResponseType.Initialize };\ntype IRawPromiseSuccessResponse = { type: ResponseType.PromiseSuccess; id: number; data: any };\ntype IRawPromiseErrorResponse = { type: ResponseType.PromiseError; id: number; data: { message: string, name: string, stack: string[] | undefined } };\ntype IRawPromiseErrorObjResponse = { type: ResponseType.PromiseErrorObj; id: number; data: any };\ntype IRawEventFireResponse = { type: ResponseType.EventFire; id: number; data: any };\ntype IRawResponse = IRawInitializeResponse | IRawPromiseSuccessResponse | IRawPromiseErrorResponse | IRawPromiseErrorObjResponse | IRawEventFireResponse;\n\ninterface IHandler {\n\t(response: IRawResponse): void;\n}\n\nexport interface IMessagePassingProtocol {\n\tsend(buffer: VSBuffer): void;\n\tonMessage: Event<VSBuffer>;\n\t/**\n\t * Wait for the write buffer (if applicable) to become empty.\n\t */\n\tdrain?(): Promise<void>;\n}\n\nenum State {\n\tUninitialized,\n\tIdle\n}\n\n/**\n * An `IChannelServer` hosts a collection of channels. You are\n * able to register channels onto it, provided a channel name.\n */\nexport interface IChannelServer<TContext = string> {\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void;\n}\n\n/**\n * An `IChannelClient` has access to a collection of channels. You\n * are able to get those channels, given their channel name.\n */\nexport interface IChannelClient {\n\tgetChannel<T extends IChannel>(channelName: string): T;\n}\n\nexport interface Client<TContext> {\n\treadonly ctx: TContext;\n}\n\nexport interface IConnectionHub<TContext> {\n\treadonly connections: Connection<TContext>[];\n\treadonly onDidAddConnection: Event<Connection<TContext>>;\n\treadonly onDidRemoveConnection: Event<Connection<TContext>>;\n}\n\n/**\n * An `IClientRouter` is responsible for routing calls to specific\n * channels, in scenarios in which there are multiple possible\n * channels (each from a separate client) to pick from.\n */\nexport interface IClientRouter<TContext = string> {\n\trouteCall(hub: IConnectionHub<TContext>, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<Client<TContext>>;\n\trouteEvent(hub: IConnectionHub<TContext>, event: string, arg?: any): Promise<Client<TContext>>;\n}\n\n/**\n * Similar to the `IChannelClient`, you can get channels from this\n * collection of channels. The difference being that in the\n * `IRoutingChannelClient`, there are multiple clients providing\n * the same channel. You'll need to pass in an `IClientRouter` in\n * order to pick the right one.\n */\nexport interface IRoutingChannelClient<TContext = string> {\n\tgetChannel<T extends IChannel>(channelName: string, router?: IClientRouter<TContext>): T;\n}\n\ninterface IReader {\n\tread(bytes: number): VSBuffer;\n}\n\ninterface IWriter {\n\twrite(buffer: VSBuffer): void;\n}\n\nclass BufferReader implements IReader {\n\n\tprivate pos = 0;\n\n\tconstructor(private buffer: VSBuffer) { }\n\n\tread(bytes: number): VSBuffer {\n\t\tconst result = this.buffer.slice(this.pos, this.pos + bytes);\n\t\tthis.pos += result.byteLength;\n\t\treturn result;\n\t}\n}\n\nclass BufferWriter implements IWriter {\n\n\tprivate buffers: VSBuffer[] = [];\n\n\tget buffer(): VSBuffer {\n\t\treturn VSBuffer.concat(this.buffers);\n\t}\n\n\twrite(buffer: VSBuffer): void {\n\t\tthis.buffers.push(buffer);\n\t}\n}\n\nenum DataType {\n\tUndefined = 0,\n\tString = 1,\n\tBuffer = 2,\n\tVSBuffer = 3,\n\tArray = 4,\n\tObject = 5\n}\n\nfunction createSizeBuffer(size: number): VSBuffer {\n\tconst result = VSBuffer.alloc(4);\n\tresult.writeUInt32BE(size, 0);\n\treturn result;\n}\n\nfunction readSizeBuffer(reader: IReader): number {\n\treturn reader.read(4).readUInt32BE(0);\n}\n\nfunction createOneByteBuffer(value: number): VSBuffer {\n\tconst result = VSBuffer.alloc(1);\n\tresult.writeUInt8(value, 0);\n\treturn result;\n}\n\nconst BufferPresets = {\n\tUndefined: createOneByteBuffer(DataType.Undefined),\n\tString: createOneByteBuffer(DataType.String),\n\tBuffer: createOneByteBuffer(DataType.Buffer),\n\tVSBuffer: createOneByteBuffer(DataType.VSBuffer),\n\tArray: createOneByteBuffer(DataType.Array),\n\tObject: createOneByteBuffer(DataType.Object),\n};\n\ndeclare const Buffer: any;\nconst hasBuffer = (typeof Buffer !== 'undefined');\n\nfunction serialize(writer: IWriter, data: any): void {\n\tif (typeof data === 'undefined') {\n\t\twriter.write(BufferPresets.Undefined);\n\t} else if (typeof data === 'string') {\n\t\tconst buffer = VSBuffer.fromString(data);\n\t\twriter.write(BufferPresets.String);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t} else if (hasBuffer && Buffer.isBuffer(data)) {\n\t\tconst buffer = VSBuffer.wrap(data);\n\t\twriter.write(BufferPresets.Buffer);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t} else if (data instanceof VSBuffer) {\n\t\twriter.write(BufferPresets.VSBuffer);\n\t\twriter.write(createSizeBuffer(data.byteLength));\n\t\twriter.write(data);\n\t} else if (Array.isArray(data)) {\n\t\twriter.write(BufferPresets.Array);\n\t\twriter.write(createSizeBuffer(data.length));\n\n\t\tfor (const el of data) {\n\t\t\tserialize(writer, el);\n\t\t}\n\t} else {\n\t\tconst buffer = VSBuffer.fromString(JSON.stringify(data));\n\t\twriter.write(BufferPresets.Object);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t}\n}\n\nfunction deserialize(reader: IReader): any {\n\tconst type = reader.read(1).readUInt8(0);\n\n\tswitch (type) {\n\t\tcase DataType.Undefined: return undefined;\n\t\tcase DataType.String: return reader.read(readSizeBuffer(reader)).toString();\n\t\tcase DataType.Buffer: return reader.read(readSizeBuffer(reader)).buffer;\n\t\tcase DataType.VSBuffer: return reader.read(readSizeBuffer(reader));\n\t\tcase DataType.Array: {\n\t\t\tconst length = readSizeBuffer(reader);\n\t\t\tconst result: any[] = [];\n\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tresult.push(deserialize(reader));\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t\tcase DataType.Object: return JSON.parse(reader.read(readSizeBuffer(reader)).toString());\n\t}\n}\n\ninterface PendingRequest {\n\trequest: IRawPromiseRequest | IRawEventListenRequest;\n\ttimeoutTimer: any;\n}\n\nexport class ChannelServer<TContext = string> implements IChannelServer<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate activeRequests = new Map<number, IDisposable>();\n\tprivate protocolListener: IDisposable | null;\n\n\t// Requests might come in for channels which are not yet registered.\n\t// They will timeout after `timeoutDelay`.\n\tprivate pendingRequests = new Map<string, PendingRequest[]>();\n\n\tconstructor(private protocol: IMessagePassingProtocol, private ctx: TContext, private logger: IIPCLogger | null = null, private timeoutDelay: number = 1000) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onRawMessage(msg));\n\t\tthis.sendResponse({ type: ResponseType.Initialize });\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\n\t\t// https://github.com/microsoft/vscode/issues/72531\n\t\tsetTimeout(() => this.flushPendingRequests(channelName), 0);\n\t}\n\n\tprivate sendResponse(response: IRawResponse): void {\n\t\tswitch (response.type) {\n\t\t\tcase ResponseType.Initialize: {\n\t\t\t\tconst msgLength = this.send([response.type]);\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logOutgoing(msgLength, 0, RequestInitiator.OtherSide, responseTypeToStr(response.type));\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj: {\n\t\t\t\tconst msgLength = this.send([response.type, response.id], response.data);\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logOutgoing(msgLength, response.id, RequestInitiator.OtherSide, responseTypeToStr(response.type), response.data);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): number {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\treturn this.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: VSBuffer): number {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t\treturn message.byteLength;\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tprivate onRawMessage(message: VSBuffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type = header[0] as RequestType;\n\n\t\tswitch (type) {\n\t\t\tcase RequestType.Promise:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}: ${header[2]}.${header[3]}`, body);\n\t\t\t\t}\n\t\t\t\treturn this.onPromise({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.EventListen:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}: ${header[2]}.${header[3]}`, body);\n\t\t\t\t}\n\t\t\t\treturn this.onEventListen({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}`);\n\t\t\t\t}\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t\tcase RequestType.EventDispose:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}`);\n\t\t\t\t}\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t}\n\t}\n\n\tprivate onPromise(request: IRawPromiseRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\n\t\tif (!channel) {\n\t\t\tthis.collectPendingRequest(request);\n\t\t\treturn;\n\t\t}\n\n\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\tlet promise: Promise<any>;\n\n\t\ttry {\n\t\t\tpromise = channel.call(this.ctx, request.name, request.arg, cancellationTokenSource.token);\n\t\t} catch (err) {\n\t\t\tpromise = Promise.reject(err);\n\t\t}\n\n\t\tconst id = request.id;\n\n\t\tpromise.then(data => {\n\t\t\tthis.sendResponse(<IRawResponse>{ id, data, type: ResponseType.PromiseSuccess });\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}, err => {\n\t\t\tif (err instanceof Error) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid, data: {\n\t\t\t\t\t\tmessage: err.message,\n\t\t\t\t\t\tname: err.name,\n\t\t\t\t\t\tstack: err.stack ? (err.stack.split ? err.stack.split('\\n') : err.stack) : undefined\n\t\t\t\t\t}, type: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.sendResponse(<IRawResponse>{ id, data: err, type: ResponseType.PromiseErrorObj });\n\t\t\t}\n\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t});\n\n\t\tconst disposable = toDisposable(() => cancellationTokenSource.cancel());\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate onEventListen(request: IRawEventListenRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\n\t\tif (!channel) {\n\t\t\tthis.collectPendingRequest(request);\n\t\t\treturn;\n\t\t}\n\n\t\tconst id = request.id;\n\t\tconst event = channel.listen(this.ctx, request.name, request.arg);\n\t\tconst disposable = event(data => this.sendResponse(<IRawResponse>{ id, data, type: ResponseType.EventFire }));\n\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate disposeActiveRequest(request: IRawRequest): void {\n\t\tconst disposable = this.activeRequests.get(request.id);\n\n\t\tif (disposable) {\n\t\t\tdisposable.dispose();\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}\n\t}\n\n\tprivate collectPendingRequest(request: IRawPromiseRequest | IRawEventListenRequest): void {\n\t\tlet pendingRequests = this.pendingRequests.get(request.channelName);\n\n\t\tif (!pendingRequests) {\n\t\t\tpendingRequests = [];\n\t\t\tthis.pendingRequests.set(request.channelName, pendingRequests);\n\t\t}\n\n\t\tconst timer = setTimeout(() => {\n\t\t\tconsole.error(`Unknown channel: ${request.channelName}`);\n\n\t\t\tif (request.type === RequestType.Promise) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid: request.id,\n\t\t\t\t\tdata: { name: 'Unknown channel', message: `Channel name '${request.channelName}' timed out after ${this.timeoutDelay}ms`, stack: undefined },\n\t\t\t\t\ttype: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t}\n\t\t}, this.timeoutDelay);\n\n\t\tpendingRequests.push({ request, timeoutTimer: timer });\n\t}\n\n\tprivate flushPendingRequests(channelName: string): void {\n\t\tconst requests = this.pendingRequests.get(channelName);\n\n\t\tif (requests) {\n\t\t\tfor (const request of requests) {\n\t\t\t\tclearTimeout(request.timeoutTimer);\n\n\t\t\t\tswitch (request.request.type) {\n\t\t\t\t\tcase RequestType.Promise: this.onPromise(request.request); break;\n\t\t\t\t\tcase RequestType.EventListen: this.onEventListen(request.request); break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.pendingRequests.delete(channelName);\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tthis.activeRequests.forEach(d => d.dispose());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport const enum RequestInitiator {\n\tLocalSide = 0,\n\tOtherSide = 1\n}\n\nexport interface IIPCLogger {\n\tlogIncoming(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void;\n\tlogOutgoing(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void;\n}\n\nexport class ChannelClient implements IChannelClient, IDisposable {\n\n\tprivate isDisposed: boolean = false;\n\tprivate state: State = State.Uninitialized;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate handlers = new Map<number, IHandler>();\n\tprivate lastRequestId: number = 0;\n\tprivate protocolListener: IDisposable | null;\n\tprivate logger: IIPCLogger | null;\n\n\tprivate readonly _onDidInitialize = new Emitter<void>();\n\treadonly onDidInitialize = this._onDidInitialize.event;\n\n\tconstructor(private protocol: IMessagePassingProtocol, logger: IIPCLogger | null = null) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onBuffer(msg));\n\t\tthis.logger = logger;\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken) {\n\t\t\t\tif (that.isDisposed) {\n\t\t\t\t\treturn Promise.reject(errors.canceled());\n\t\t\t\t}\n\t\t\t\treturn that.requestPromise(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any) {\n\t\t\t\tif (that.isDisposed) {\n\t\t\t\t\treturn Promise.reject(errors.canceled());\n\t\t\t\t}\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate requestPromise(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.Promise;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(errors.canceled());\n\t\t}\n\n\t\tlet disposable: IDisposable;\n\n\t\tconst result = new Promise((c, e) => {\n\t\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\t\treturn e(errors.canceled());\n\t\t\t}\n\n\t\t\tconst doRequest = () => {\n\t\t\t\tconst handler: IHandler = response => {\n\t\t\t\t\tswitch (response.type) {\n\t\t\t\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tc(response.data);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseError:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tconst error = new Error(response.data.message);\n\t\t\t\t\t\t\t(<any>error).stack = response.data.stack;\n\t\t\t\t\t\t\terror.name = response.data.name;\n\t\t\t\t\t\t\te(error);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\te(response.data);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.handlers.set(id, handler);\n\t\t\t\tthis.sendRequest(request);\n\t\t\t};\n\n\t\t\tlet uninitializedPromise: CancelablePromise<void> | null = null;\n\t\t\tif (this.state === State.Idle) {\n\t\t\t\tdoRequest();\n\t\t\t} else {\n\t\t\t\tuninitializedPromise = createCancelablePromise(_ => this.whenInitialized());\n\t\t\t\tuninitializedPromise.then(() => {\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t\tdoRequest();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst cancel = () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.PromiseCancel });\n\t\t\t\t}\n\n\t\t\t\te(errors.canceled());\n\t\t\t};\n\n\t\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(cancel);\n\t\t\tdisposable = combinedDisposable(toDisposable(cancel), cancellationTokenListener);\n\t\t\tthis.activeRequests.add(disposable);\n\t\t});\n\n\t\treturn result.finally(() => { this.activeRequests.delete(disposable); });\n\t}\n\n\tprivate requestEvent(channelName: string, name: string, arg?: any): Event<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.EventListen;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tlet uninitializedPromise: CancelablePromise<void> | null = null;\n\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tuninitializedPromise = createCancelablePromise(_ => this.whenInitialized());\n\t\t\t\tuninitializedPromise.then(() => {\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t\tthis.activeRequests.add(emitter);\n\t\t\t\t\tthis.sendRequest(request);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.activeRequests.delete(emitter);\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.EventDispose });\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst handler: IHandler = (res: IRawResponse) => emitter.fire((res as IRawEventFireResponse).data);\n\t\tthis.handlers.set(id, handler);\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate sendRequest(request: IRawRequest): void {\n\t\tswitch (request.type) {\n\t\t\tcase RequestType.Promise:\n\t\t\tcase RequestType.EventListen: {\n\t\t\t\tconst msgLength = this.send([request.type, request.id, request.channelName, request.name], request.arg);\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logOutgoing(msgLength, request.id, RequestInitiator.LocalSide, `${requestTypeToStr(request.type)}: ${request.channelName}.${request.name}`, request.arg);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\tcase RequestType.EventDispose: {\n\t\t\t\tconst msgLength = this.send([request.type, request.id]);\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logOutgoing(msgLength, request.id, RequestInitiator.LocalSide, requestTypeToStr(request.type));\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): number {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\treturn this.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: VSBuffer): number {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t\treturn message.byteLength;\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tprivate onBuffer(message: VSBuffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type: ResponseType = header[0];\n\n\t\tswitch (type) {\n\t\t\tcase ResponseType.Initialize:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, 0, RequestInitiator.LocalSide, responseTypeToStr(type));\n\t\t\t\t}\n\t\t\t\treturn this.onResponse({ type: header[0] });\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.LocalSide, responseTypeToStr(type), body);\n\t\t\t\t}\n\t\t\t\treturn this.onResponse({ type: header[0], id: header[1], data: body });\n\t\t}\n\t}\n\n\tprivate onResponse(response: IRawResponse): void {\n\t\tif (response.type === ResponseType.Initialize) {\n\t\t\tthis.state = State.Idle;\n\t\t\tthis._onDidInitialize.fire();\n\t\t\treturn;\n\t\t}\n\n\t\tconst handler = this.handlers.get(response.id);\n\n\t\tif (handler) {\n\t\t\thandler(response);\n\t\t}\n\t}\n\n\t@memoize\n\tget onDidInitializePromise(): Promise<void> {\n\t\treturn Event.toPromise(this.onDidInitialize);\n\t}\n\n\tprivate whenInitialized(): Promise<void> {\n\t\tif (this.state === State.Idle) {\n\t\t\treturn Promise.resolve();\n\t\t} else {\n\t\t\treturn this.onDidInitializePromise;\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.isDisposed = true;\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tthis.activeRequests.forEach(p => p.dispose());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport interface ClientConnectionEvent {\n\tprotocol: IMessagePassingProtocol;\n\tonDidClientDisconnect: Event<void>;\n}\n\ninterface Connection<TContext> extends Client<TContext> {\n\treadonly channelServer: ChannelServer<TContext>;\n\treadonly channelClient: ChannelClient;\n}\n\n/**\n * An `IPCServer` is both a channel server and a routing channel\n * client.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCServer<TContext = string> implements IChannelServer<TContext>, IRoutingChannelClient<TContext>, IConnectionHub<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate _connections = new Set<Connection<TContext>>();\n\n\tprivate readonly _onDidAddConnection = new Emitter<Connection<TContext>>();\n\treadonly onDidAddConnection: Event<Connection<TContext>> = this._onDidAddConnection.event;\n\n\tprivate readonly _onDidRemoveConnection = new Emitter<Connection<TContext>>();\n\treadonly onDidRemoveConnection: Event<Connection<TContext>> = this._onDidRemoveConnection.event;\n\n\tget connections(): Connection<TContext>[] {\n\t\tconst result: Connection<TContext>[] = [];\n\t\tthis._connections.forEach(ctx => result.push(ctx));\n\t\treturn result;\n\t}\n\n\tconstructor(onDidClientConnect: Event<ClientConnectionEvent>) {\n\t\tonDidClientConnect(({ protocol, onDidClientDisconnect }) => {\n\t\t\tconst onFirstMessage = Event.once(protocol.onMessage);\n\n\t\t\tonFirstMessage(msg => {\n\t\t\t\tconst reader = new BufferReader(msg);\n\t\t\t\tconst ctx = deserialize(reader) as TContext;\n\n\t\t\t\tconst channelServer = new ChannelServer(protocol, ctx);\n\t\t\t\tconst channelClient = new ChannelClient(protocol);\n\n\t\t\t\tthis.channels.forEach((channel, name) => channelServer.registerChannel(name, channel));\n\n\t\t\t\tconst connection: Connection<TContext> = { channelServer, channelClient, ctx };\n\t\t\t\tthis._connections.add(connection);\n\t\t\t\tthis._onDidAddConnection.fire(connection);\n\n\t\t\t\tonDidClientDisconnect(() => {\n\t\t\t\t\tchannelServer.dispose();\n\t\t\t\t\tchannelClient.dispose();\n\t\t\t\t\tthis._connections.delete(connection);\n\t\t\t\t\tthis._onDidRemoveConnection.fire(connection);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Get a channel from a remote client. When passed a router,\n\t * one can specify which client it wants to call and listen to/from.\n\t * Otherwise, when calling without a router, a random client will\n\t * be selected and when listening without a router, every client\n\t * will be listened to.\n\t */\n\tgetChannel<T extends IChannel>(channelName: string, router: IClientRouter<TContext>): T;\n\tgetChannel<T extends IChannel>(channelName: string, clientFilter: (client: Client<TContext>) => boolean): T;\n\tgetChannel<T extends IChannel>(channelName: string, routerOrClientFilter: IClientRouter<TContext> | ((client: Client<TContext>) => boolean)): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\tlet connectionPromise: Promise<Client<TContext>>;\n\n\t\t\t\tif (isFunction(routerOrClientFilter)) {\n\t\t\t\t\t// when no router is provided, we go random client picking\n\t\t\t\t\tlet connection = getRandomElement(that.connections.filter(routerOrClientFilter));\n\n\t\t\t\t\tconnectionPromise = connection\n\t\t\t\t\t\t// if we found a client, let's call on it\n\t\t\t\t\t\t? Promise.resolve(connection)\n\t\t\t\t\t\t// else, let's wait for a client to come along\n\t\t\t\t\t\t: Event.toPromise(Event.filter(that.onDidAddConnection, routerOrClientFilter));\n\t\t\t\t} else {\n\t\t\t\t\tconnectionPromise = routerOrClientFilter.routeCall(that, command, arg);\n\t\t\t\t}\n\n\t\t\t\tconst channelPromise = connectionPromise\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.call(command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any): Event<T> {\n\t\t\t\tif (isFunction(routerOrClientFilter)) {\n\t\t\t\t\treturn that.getMulticastEvent(channelName, routerOrClientFilter, event, arg);\n\t\t\t\t}\n\n\t\t\t\tconst channelPromise = routerOrClientFilter.routeEvent(that, event, arg)\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.listen(event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate getMulticastEvent<T extends IChannel>(channelName: string, clientFilter: (client: Client<TContext>) => boolean, eventName: string, arg: any): Event<T> {\n\t\tconst that = this;\n\t\tlet disposables = new DisposableStore();\n\n\t\t// Create an emitter which hooks up to all clients\n\t\t// as soon as first listener is added. It also\n\t\t// disconnects from all clients as soon as the last listener\n\t\t// is removed.\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tdisposables = new DisposableStore();\n\n\t\t\t\t// The event multiplexer is useful since the active\n\t\t\t\t// client list is dynamic. We need to hook up and disconnection\n\t\t\t\t// to/from clients as they come and go.\n\t\t\t\tconst eventMultiplexer = new EventMultiplexer<T>();\n\t\t\t\tconst map = new Map<Connection<TContext>, IDisposable>();\n\n\t\t\t\tconst onDidAddConnection = (connection: Connection<TContext>) => {\n\t\t\t\t\tconst channel = connection.channelClient.getChannel(channelName);\n\t\t\t\t\tconst event = channel.listen<T>(eventName, arg);\n\t\t\t\t\tconst disposable = eventMultiplexer.add(event);\n\n\t\t\t\t\tmap.set(connection, disposable);\n\t\t\t\t};\n\n\t\t\t\tconst onDidRemoveConnection = (connection: Connection<TContext>) => {\n\t\t\t\t\tconst disposable = map.get(connection);\n\n\t\t\t\t\tif (!disposable) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\tmap.delete(connection);\n\t\t\t\t};\n\n\t\t\t\tthat.connections.filter(clientFilter).forEach(onDidAddConnection);\n\t\t\t\tEvent.filter(that.onDidAddConnection, clientFilter)(onDidAddConnection, undefined, disposables);\n\t\t\t\tthat.onDidRemoveConnection(onDidRemoveConnection, undefined, disposables);\n\t\t\t\teventMultiplexer.event(emitter.fire, emitter, disposables);\n\n\t\t\t\tdisposables.add(eventMultiplexer);\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tdisposables.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\n\t\tthis._connections.forEach(connection => {\n\t\t\tconnection.channelServer.registerChannel(channelName, channel);\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis.channels.clear();\n\t\tthis._connections.clear();\n\t\tthis._onDidAddConnection.dispose();\n\t\tthis._onDidRemoveConnection.dispose();\n\t}\n}\n\n/**\n * An `IPCClient` is both a channel client and a channel server.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCClient<TContext = string> implements IChannelClient, IChannelServer<TContext>, IDisposable {\n\n\tprivate channelClient: ChannelClient;\n\tprivate channelServer: ChannelServer<TContext>;\n\n\tconstructor(protocol: IMessagePassingProtocol, ctx: TContext, ipcLogger: IIPCLogger | null = null) {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, ctx);\n\t\tprotocol.send(writer.buffer);\n\n\t\tthis.channelClient = new ChannelClient(protocol, ipcLogger);\n\t\tthis.channelServer = new ChannelServer(protocol, ctx, ipcLogger);\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\treturn this.channelClient.getChannel(channelName) as T;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channelServer.registerChannel(channelName, channel);\n\t}\n\n\tdispose(): void {\n\t\tthis.channelClient.dispose();\n\t\tthis.channelServer.dispose();\n\t}\n}\n\nexport function getDelayedChannel<T extends IChannel>(promise: Promise<T>): T {\n\treturn {\n\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\treturn promise.then(c => c.call<T>(command, arg, cancellationToken));\n\t\t},\n\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tconst relay = new Relay<any>();\n\t\t\tpromise.then(c => relay.input = c.listen(event, arg));\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport function getNextTickChannel<T extends IChannel>(channel: T): T {\n\tlet didTick = false;\n\n\treturn {\n\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.call(command, arg, cancellationToken);\n\t\t\t}\n\n\t\t\treturn timeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => channel.call<T>(command, arg, cancellationToken));\n\t\t},\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.listen<T>(event, arg);\n\t\t\t}\n\n\t\t\tconst relay = new Relay<T>();\n\n\t\t\ttimeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => relay.input = channel.listen<T>(event, arg));\n\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport class StaticRouter<TContext = string> implements IClientRouter<TContext> {\n\n\tconstructor(private fn: (ctx: TContext) => boolean | Promise<boolean>) { }\n\n\trouteCall(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\trouteEvent(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\tprivate async route(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\tfor (const connection of hub.connections) {\n\t\t\tif (await Promise.resolve(this.fn(connection.ctx))) {\n\t\t\t\treturn Promise.resolve(connection);\n\t\t\t}\n\t\t}\n\n\t\tawait Event.toPromise(hub.onDidAddConnection);\n\t\treturn await this.route(hub);\n\t}\n}\n\n/**\n * Use ProxyChannels to automatically wrapping and unwrapping\n * services to/from IPC channels, instead of manually wrapping\n * each service method and event.\n *\n * Restrictions:\n * - If marshalling is enabled, only `URI` and `RegExp` is converted\n *   automatically for you\n * - Events must follow the naming convention `onUpperCase`\n * - `CancellationToken` is currently not supported\n * - If a context is provided, you can use `AddFirstParameterToFunctions`\n *   utility to signal this in the receiving side type\n */\nexport namespace ProxyChannel {\n\n\texport interface IProxyOptions {\n\n\t\t/**\n\t\t * Disables automatic marshalling of `URI`.\n\t\t * If marshalling is disabled, `UriComponents`\n\t\t * must be used instead.\n\t\t */\n\t\tdisableMarshalling?: boolean;\n\t}\n\n\texport interface ICreateServiceChannelOptions extends IProxyOptions { }\n\n\texport function fromService(service: unknown, options?: ICreateServiceChannelOptions): IServerChannel {\n\t\tconst handler = service as { [key: string]: unknown };\n\t\tconst disableMarshalling = options && options.disableMarshalling;\n\n\t\t// Buffer any event that should be supported by\n\t\t// iterating over all property keys and finding them\n\t\tconst mapEventNameToEvent = new Map<string, Event<unknown>>();\n\t\tfor (const key in handler) {\n\t\t\tif (propertyIsEvent(key)) {\n\t\t\t\tmapEventNameToEvent.set(key, Event.buffer(handler[key] as Event<unknown>, true));\n\t\t\t}\n\t\t}\n\n\t\treturn new class implements IServerChannel {\n\n\t\t\tlisten<T>(_: unknown, event: string, arg: any): Event<T> {\n\t\t\t\tconst eventImpl = mapEventNameToEvent.get(event);\n\t\t\t\tif (eventImpl) {\n\t\t\t\t\treturn eventImpl as Event<T>;\n\t\t\t\t}\n\n\t\t\t\tif (propertyIsDynamicEvent(event)) {\n\t\t\t\t\tconst target = handler[event];\n\t\t\t\t\tif (typeof target === 'function') {\n\t\t\t\t\t\treturn target.call(handler, arg);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthrow new Error(`Event not found: ${event}`);\n\t\t\t}\n\n\t\t\tcall(_: unknown, command: string, args?: any[]): Promise<any> {\n\t\t\t\tconst target = handler[command];\n\t\t\t\tif (typeof target === 'function') {\n\n\t\t\t\t\t// Revive unless marshalling disabled\n\t\t\t\t\tif (!disableMarshalling && Array.isArray(args)) {\n\t\t\t\t\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\t\t\t\t\targs[i] = revive(args[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn target.apply(handler, args);\n\t\t\t\t}\n\n\t\t\t\tthrow new Error(`Method not found: ${command}`);\n\t\t\t}\n\t\t};\n\t}\n\n\texport interface ICreateProxyServiceOptions extends IProxyOptions {\n\n\t\t/**\n\t\t * If provided, will add the value of `context`\n\t\t * to each method call to the target.\n\t\t */\n\t\tcontext?: unknown;\n\n\t\t/**\n\t\t * If provided, will not proxy any of the properties\n\t\t * that are part of the Map but rather return that value.\n\t\t */\n\t\tproperties?: Map<string, unknown>;\n\t}\n\n\texport function toService<T>(channel: IChannel, options?: ICreateProxyServiceOptions): T {\n\t\tconst disableMarshalling = options && options.disableMarshalling;\n\n\t\treturn new Proxy({}, {\n\t\t\tget(_target: T, propKey: PropertyKey) {\n\t\t\t\tif (typeof propKey === 'string') {\n\n\t\t\t\t\t// Check for predefined values\n\t\t\t\t\tif (options?.properties?.has(propKey)) {\n\t\t\t\t\t\treturn options.properties.get(propKey);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Dynamic Event\n\t\t\t\t\tif (propertyIsDynamicEvent(propKey)) {\n\t\t\t\t\t\treturn function (arg: any) {\n\t\t\t\t\t\t\treturn channel.listen(propKey, arg);\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Event\n\t\t\t\t\tif (propertyIsEvent(propKey)) {\n\t\t\t\t\t\treturn channel.listen(propKey);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Function\n\t\t\t\t\treturn async function (...args: any[]) {\n\n\t\t\t\t\t\t// Add context if any\n\t\t\t\t\t\tlet methodArgs: any[];\n\t\t\t\t\t\tif (options && !isUndefinedOrNull(options.context)) {\n\t\t\t\t\t\t\tmethodArgs = [options.context, ...args];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmethodArgs = args;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst result = await channel.call(propKey, methodArgs);\n\n\t\t\t\t\t\t// Revive unless marshalling disabled\n\t\t\t\t\t\tif (!disableMarshalling) {\n\t\t\t\t\t\t\treturn revive(result);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tthrow new Error(`Property not found: ${String(propKey)}`);\n\t\t\t}\n\t\t}) as T;\n\t}\n\n\tfunction propertyIsEvent(name: string): boolean {\n\t\t// Assume a property is an event if it has a form of \"onSomething\"\n\t\treturn name[0] === 'o' && name[1] === 'n' && strings.isUpperAsciiLetter(name.charCodeAt(2));\n\t}\n\n\tfunction propertyIsDynamicEvent(name: string): boolean {\n\t\t// Assume a property is a dynamic event (a method that returns an event) if it has a form of \"onDynamicSomething\"\n\t\treturn /^onDynamic/.test(name) && strings.isUpperAsciiLetter(name.charCodeAt(9));\n\t}\n}\n\nconst colorTables = [\n\t['#2977B1', '#FC802D', '#34A13A', '#D3282F', '#9366BA'],\n\t['#8B564C', '#E177C0', '#7F7F7F', '#BBBE3D', '#2EBECD']\n];\n\nfunction prettyWithoutArrays(data: any): any {\n\tif (Array.isArray(data)) {\n\t\treturn data;\n\t}\n\tif (data && typeof data === 'object' && typeof data.toString === 'function') {\n\t\tlet result = data.toString();\n\t\tif (result !== '[object Object]') {\n\t\t\treturn result;\n\t\t}\n\t}\n\treturn data;\n}\n\nfunction pretty(data: any): any {\n\tif (Array.isArray(data)) {\n\t\treturn data.map(prettyWithoutArrays);\n\t}\n\treturn prettyWithoutArrays(data);\n}\n\nexport function logWithColors(direction: string, totalLength: number, msgLength: number, req: number, initiator: RequestInitiator, str: string, data: any): void {\n\tdata = pretty(data);\n\n\tconst colorTable = colorTables[initiator];\n\tconst color = colorTable[req % colorTable.length];\n\tlet args = [`%c[${direction}]%c[${String(totalLength).padStart(7, ' ')}]%c[len: ${String(msgLength).padStart(5, ' ')}]%c${String(req).padStart(5, ' ')} - ${str}`, 'color: darkgreen', 'color: grey', 'color: grey', `color: ${color}`];\n\tif (/\\($/.test(str)) {\n\t\targs = args.concat(data);\n\t\targs.push(')');\n\t} else {\n\t\targs.push(data);\n\t}\n\tconsole.log.apply(console, args as [string, ...string[]]);\n}\n\nexport class IPCLogger implements IIPCLogger {\n\tprivate _totalIncoming = 0;\n\tprivate _totalOutgoing = 0;\n\n\tconstructor(\n\t\tprivate readonly _outgoingPrefix: string,\n\t\tprivate readonly _incomingPrefix: string,\n\t) { }\n\n\tpublic logOutgoing(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void {\n\t\tthis._totalOutgoing += msgLength;\n\t\tlogWithColors(this._outgoingPrefix, this._totalOutgoing, msgLength, requestId, initiator, str, data);\n\t}\n\n\tpublic logIncoming(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void {\n\t\tthis._totalIncoming += msgLength;\n\t\tlogWithColors(this._incomingPrefix, this._totalIncoming, msgLength, requestId, initiator, str, data);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ThrottledDelayer } from 'vs/base/common/async';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { isUndefinedOrNull } from 'vs/base/common/types';\n\nexport enum StorageHint {\n\n\t// A hint to the storage that the storage\n\t// does not exist on disk yet. This allows\n\t// the storage library to improve startup\n\t// time by not checking the storage for data.\n\tSTORAGE_DOES_NOT_EXIST\n}\n\nexport interface IStorageOptions {\n\treadonly hint?: StorageHint;\n}\n\nexport interface IUpdateRequest {\n\treadonly insert?: Map<string, string>;\n\treadonly delete?: Set<string>;\n}\n\nexport interface IStorageItemsChangeEvent {\n\treadonly changed?: Map<string, string>;\n\treadonly deleted?: Set<string>;\n}\n\nexport function isStorageItemsChangeEvent(thing: unknown): thing is IStorageItemsChangeEvent {\n\tconst candidate = thing as IStorageItemsChangeEvent | undefined;\n\n\treturn candidate?.changed instanceof Map || candidate?.deleted instanceof Set;\n}\n\nexport interface IStorageDatabase {\n\n\treadonly onDidChangeItemsExternal: Event<IStorageItemsChangeEvent>;\n\n\tgetItems(): Promise<Map<string, string>>;\n\tupdateItems(request: IUpdateRequest): Promise<void>;\n\n\tclose(recovery?: () => Map<string, string>): Promise<void>;\n}\n\nexport interface IStorage extends IDisposable {\n\n\treadonly onDidChangeStorage: Event<string>;\n\n\treadonly items: Map<string, string>;\n\treadonly size: number;\n\n\tinit(): Promise<void>;\n\n\tget(key: string, fallbackValue: string): string;\n\tget(key: string, fallbackValue?: string): string | undefined;\n\n\tgetBoolean(key: string, fallbackValue: boolean): boolean;\n\tgetBoolean(key: string, fallbackValue?: boolean): boolean | undefined;\n\n\tgetNumber(key: string, fallbackValue: number): number;\n\tgetNumber(key: string, fallbackValue?: number): number | undefined;\n\n\tset(key: string, value: string | boolean | number | undefined | null): Promise<void>;\n\tdelete(key: string): Promise<void>;\n\n\tflush(delay?: number): Promise<void>;\n\twhenFlushed(): Promise<void>;\n\n\tclose(): Promise<void>;\n}\n\nenum StorageState {\n\tNone,\n\tInitialized,\n\tClosed\n}\n\nexport class Storage extends Disposable implements IStorage {\n\n\tprivate static readonly DEFAULT_FLUSH_DELAY = 100;\n\n\tprivate readonly _onDidChangeStorage = this._register(new Emitter<string>());\n\treadonly onDidChangeStorage = this._onDidChangeStorage.event;\n\n\tprivate state = StorageState.None;\n\n\tprivate cache = new Map<string, string>();\n\n\tprivate readonly flushDelayer = new ThrottledDelayer<void>(Storage.DEFAULT_FLUSH_DELAY);\n\n\tprivate pendingDeletes = new Set<string>();\n\tprivate pendingInserts = new Map<string, string>();\n\n\tprivate pendingClose: Promise<void> | undefined = undefined;\n\n\tprivate readonly whenFlushedCallbacks: Function[] = [];\n\n\tconstructor(\n\t\tprotected readonly database: IStorageDatabase,\n\t\tprivate readonly options: IStorageOptions = Object.create(null)\n\t) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.database.onDidChangeItemsExternal(e => this.onDidChangeItemsExternal(e)));\n\t}\n\n\tprivate onDidChangeItemsExternal(e: IStorageItemsChangeEvent): void {\n\t\t// items that change external require us to update our\n\t\t// caches with the values. we just accept the value and\n\t\t// emit an event if there is a change.\n\t\te.changed?.forEach((value, key) => this.accept(key, value));\n\t\te.deleted?.forEach(key => this.accept(key, undefined));\n\t}\n\n\tprivate accept(key: string, value: string | undefined): void {\n\t\tif (this.state === StorageState.Closed) {\n\t\t\treturn; // Return early if we are already closed\n\t\t}\n\n\t\tlet changed = false;\n\n\t\t// Item got removed, check for deletion\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\tchanged = this.cache.delete(key);\n\t\t}\n\n\t\t// Item got updated, check for change\n\t\telse {\n\t\t\tconst currentValue = this.cache.get(key);\n\t\t\tif (currentValue !== value) {\n\t\t\t\tthis.cache.set(key, value);\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t}\n\n\t\t// Signal to outside listeners\n\t\tif (changed) {\n\t\t\tthis._onDidChangeStorage.fire(key);\n\t\t}\n\t}\n\n\tget items(): Map<string, string> {\n\t\treturn this.cache;\n\t}\n\n\tget size(): number {\n\t\treturn this.cache.size;\n\t}\n\n\tasync init(): Promise<void> {\n\t\tif (this.state !== StorageState.None) {\n\t\t\treturn; // either closed or already initialized\n\t\t}\n\n\t\tthis.state = StorageState.Initialized;\n\n\t\tif (this.options.hint === StorageHint.STORAGE_DOES_NOT_EXIST) {\n\t\t\t// return early if we know the storage file does not exist. this is a performance\n\t\t\t// optimization to not load all items of the underlying storage if we know that\n\t\t\t// there can be no items because the storage does not exist.\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cache = await this.database.getItems();\n\t}\n\n\tget(key: string, fallbackValue: string): string;\n\tget(key: string, fallbackValue?: string): string | undefined;\n\tget(key: string, fallbackValue?: string): string | undefined {\n\t\tconst value = this.cache.get(key);\n\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn fallbackValue;\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tgetBoolean(key: string, fallbackValue: boolean): boolean;\n\tgetBoolean(key: string, fallbackValue?: boolean): boolean | undefined;\n\tgetBoolean(key: string, fallbackValue?: boolean): boolean | undefined {\n\t\tconst value = this.get(key);\n\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn fallbackValue;\n\t\t}\n\n\t\treturn value === 'true';\n\t}\n\n\tgetNumber(key: string, fallbackValue: number): number;\n\tgetNumber(key: string, fallbackValue?: number): number | undefined;\n\tgetNumber(key: string, fallbackValue?: number): number | undefined {\n\t\tconst value = this.get(key);\n\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn fallbackValue;\n\t\t}\n\n\t\treturn parseInt(value, 10);\n\t}\n\n\tasync set(key: string, value: string | boolean | number | null | undefined): Promise<void> {\n\t\tif (this.state === StorageState.Closed) {\n\t\t\treturn; // Return early if we are already closed\n\t\t}\n\n\t\t// We remove the key for undefined/null values\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn this.delete(key);\n\t\t}\n\n\t\t// Otherwise, convert to String and store\n\t\tconst valueStr = String(value);\n\n\t\t// Return early if value already set\n\t\tconst currentValue = this.cache.get(key);\n\t\tif (currentValue === valueStr) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Update in cache and pending\n\t\tthis.cache.set(key, valueStr);\n\t\tthis.pendingInserts.set(key, valueStr);\n\t\tthis.pendingDeletes.delete(key);\n\n\t\t// Event\n\t\tthis._onDidChangeStorage.fire(key);\n\n\t\t// Accumulate work by scheduling after timeout\n\t\treturn this.doFlush();\n\t}\n\n\tasync delete(key: string): Promise<void> {\n\t\tif (this.state === StorageState.Closed) {\n\t\t\treturn; // Return early if we are already closed\n\t\t}\n\n\t\t// Remove from cache and add to pending\n\t\tconst wasDeleted = this.cache.delete(key);\n\t\tif (!wasDeleted) {\n\t\t\treturn; // Return early if value already deleted\n\t\t}\n\n\t\tif (!this.pendingDeletes.has(key)) {\n\t\t\tthis.pendingDeletes.add(key);\n\t\t}\n\n\t\tthis.pendingInserts.delete(key);\n\n\t\t// Event\n\t\tthis._onDidChangeStorage.fire(key);\n\n\t\t// Accumulate work by scheduling after timeout\n\t\treturn this.doFlush();\n\t}\n\n\tasync close(): Promise<void> {\n\t\tif (!this.pendingClose) {\n\t\t\tthis.pendingClose = this.doClose();\n\t\t}\n\n\t\treturn this.pendingClose;\n\t}\n\n\tprivate async doClose(): Promise<void> {\n\n\t\t// Update state\n\t\tthis.state = StorageState.Closed;\n\n\t\t// Trigger new flush to ensure data is persisted and then close\n\t\t// even if there is an error flushing. We must always ensure\n\t\t// the DB is closed to avoid corruption.\n\t\t//\n\t\t// Recovery: we pass our cache over as recovery option in case\n\t\t// the DB is not healthy.\n\t\ttry {\n\t\t\tawait this.doFlush(0 /* as soon as possible */);\n\t\t} catch (error) {\n\t\t\t// Ignore\n\t\t}\n\n\t\tawait this.database.close(() => this.cache);\n\t}\n\n\tprivate get hasPending() {\n\t\treturn this.pendingInserts.size > 0 || this.pendingDeletes.size > 0;\n\t}\n\n\tprivate async flushPending(): Promise<void> {\n\t\tif (!this.hasPending) {\n\t\t\treturn; // return early if nothing to do\n\t\t}\n\n\t\t// Get pending data\n\t\tconst updateRequest: IUpdateRequest = { insert: this.pendingInserts, delete: this.pendingDeletes };\n\n\t\t// Reset pending data for next run\n\t\tthis.pendingDeletes = new Set<string>();\n\t\tthis.pendingInserts = new Map<string, string>();\n\n\t\t// Update in storage and release any\n\t\t// waiters we have once done\n\t\treturn this.database.updateItems(updateRequest).finally(() => {\n\t\t\tif (!this.hasPending) {\n\t\t\t\twhile (this.whenFlushedCallbacks.length) {\n\t\t\t\t\tthis.whenFlushedCallbacks.pop()?.();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tasync flush(delay?: number): Promise<void> {\n\t\tif (!this.hasPending) {\n\t\t\treturn; // return early if nothing to do\n\t\t}\n\n\t\treturn this.doFlush(delay);\n\t}\n\n\tprivate async doFlush(delay?: number): Promise<void> {\n\t\treturn this.flushDelayer.trigger(() => this.flushPending(), delay);\n\t}\n\n\tasync whenFlushed(): Promise<void> {\n\t\tif (!this.hasPending) {\n\t\t\treturn; // return early if nothing to do\n\t\t}\n\n\t\treturn new Promise(resolve => this.whenFlushedCallbacks.push(resolve));\n\t}\n\n\toverride dispose(): void {\n\t\tthis.flushDelayer.dispose();\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport class InMemoryStorageDatabase implements IStorageDatabase {\n\n\treadonly onDidChangeItemsExternal = Event.None;\n\n\tprivate readonly items = new Map<string, string>();\n\n\tasync getItems(): Promise<Map<string, string>> {\n\t\treturn this.items;\n\t}\n\n\tasync updateItems(request: IUpdateRequest): Promise<void> {\n\t\tif (request.insert) {\n\t\t\trequest.insert.forEach((value, key) => this.items.set(key, value));\n\t\t}\n\n\t\tif (request.delete) {\n\t\t\trequest.delete.forEach(key => this.items.delete(key));\n\t\t}\n\t}\n\n\tasync close(): Promise<void> { }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\n\nconst minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst month = day * 30;\nconst year = day * 365;\n\nexport function fromNow(date: number | Date, appendAgoLabel?: boolean): string {\n\tif (typeof date !== 'number') {\n\t\tdate = date.getTime();\n\t}\n\n\tconst seconds = Math.round((new Date().getTime() - date) / 1000);\n\tif (seconds < -30) {\n\t\treturn localize('date.fromNow.in', 'in {0}', fromNow(new Date().getTime() + seconds * 1000, false));\n\t}\n\n\tif (seconds < 30) {\n\t\treturn localize('date.fromNow.now', 'now');\n\t}\n\n\tlet value: number;\n\tif (seconds < minute) {\n\t\tvalue = seconds;\n\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.seconds.singular.ago', '{0} sec ago', value)\n\t\t\t\t: localize('date.fromNow.seconds.plural.ago', '{0} secs ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.seconds.singular', '{0} sec', value)\n\t\t\t\t: localize('date.fromNow.seconds.plural', '{0} secs', value);\n\t\t}\n\t}\n\n\tif (seconds < hour) {\n\t\tvalue = Math.floor(seconds / minute);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.minutes.singular.ago', '{0} min ago', value)\n\t\t\t\t: localize('date.fromNow.minutes.plural.ago', '{0} mins ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.minutes.singular', '{0} min', value)\n\t\t\t\t: localize('date.fromNow.minutes.plural', '{0} mins', value);\n\t\t}\n\t}\n\n\tif (seconds < day) {\n\t\tvalue = Math.floor(seconds / hour);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.hours.singular.ago', '{0} hr ago', value)\n\t\t\t\t: localize('date.fromNow.hours.plural.ago', '{0} hrs ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.hours.singular', '{0} hr', value)\n\t\t\t\t: localize('date.fromNow.hours.plural', '{0} hrs', value);\n\t\t}\n\t}\n\n\tif (seconds < week) {\n\t\tvalue = Math.floor(seconds / day);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.days.singular.ago', '{0} day ago', value)\n\t\t\t\t: localize('date.fromNow.days.plural.ago', '{0} days ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.days.singular', '{0} day', value)\n\t\t\t\t: localize('date.fromNow.days.plural', '{0} days', value);\n\t\t}\n\t}\n\n\tif (seconds < month) {\n\t\tvalue = Math.floor(seconds / week);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.weeks.singular.ago', '{0} wk ago', value)\n\t\t\t\t: localize('date.fromNow.weeks.plural.ago', '{0} wks ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.weeks.singular', '{0} wk', value)\n\t\t\t\t: localize('date.fromNow.weeks.plural', '{0} wks', value);\n\t\t}\n\t}\n\n\tif (seconds < year) {\n\t\tvalue = Math.floor(seconds / month);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.months.singular.ago', '{0} mo ago', value)\n\t\t\t\t: localize('date.fromNow.months.plural.ago', '{0} mos ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.months.singular', '{0} mo', value)\n\t\t\t\t: localize('date.fromNow.months.plural', '{0} mos', value);\n\t\t}\n\t}\n\n\tvalue = Math.floor(seconds / year);\n\tif (appendAgoLabel) {\n\t\treturn value === 1\n\t\t\t? localize('date.fromNow.years.singular.ago', '{0} yr ago', value)\n\t\t\t: localize('date.fromNow.years.plural.ago', '{0} yrs ago', value);\n\t} else {\n\t\treturn value === 1\n\t\t\t? localize('date.fromNow.years.singular', '{0} yr', value)\n\t\t\t: localize('date.fromNow.years.plural', '{0} yrs', value);\n\t}\n}\n\nexport function toLocalISOString(date: Date): string {\n\treturn date.getFullYear() +\n\t\t'-' + String(date.getMonth() + 1).padStart(2, '0') +\n\t\t'-' + String(date.getDate()).padStart(2, '0') +\n\t\t'T' + String(date.getHours()).padStart(2, '0') +\n\t\t':' + String(date.getMinutes()).padStart(2, '0') +\n\t\t':' + String(date.getSeconds()).padStart(2, '0') +\n\t\t'.' + (date.getMilliseconds() / 1000).toFixed(3).slice(2, 5) +\n\t\t'Z';\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as arrays from 'vs/base/common/arrays';\nimport * as types from 'vs/base/common/types';\nimport * as nls from 'vs/nls';\n\nfunction exceptionToErrorMessage(exception: any, verbose: boolean): string {\n\tif (verbose && (exception.stack || exception.stacktrace)) {\n\t\treturn nls.localize('stackTrace.format', \"{0}: {1}\", detectSystemErrorMessage(exception), stackToString(exception.stack) || stackToString(exception.stacktrace));\n\t}\n\n\treturn detectSystemErrorMessage(exception);\n}\n\nfunction stackToString(stack: string[] | string | undefined): string | undefined {\n\tif (Array.isArray(stack)) {\n\t\treturn stack.join('\\n');\n\t}\n\n\treturn stack;\n}\n\nfunction detectSystemErrorMessage(exception: any): string {\n\n\t// See https://nodejs.org/api/errors.html#errors_class_system_error\n\tif (typeof exception.code === 'string' && typeof exception.errno === 'number' && typeof exception.syscall === 'string') {\n\t\treturn nls.localize('nodeExceptionMessage', \"A system error occurred ({0})\", exception.message);\n\t}\n\n\treturn exception.message || nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n\n/**\n * Tries to generate a human readable error message out of the error. If the verbose parameter\n * is set to true, the error message will include stacktrace details if provided.\n *\n * @returns A string containing the error message.\n */\nexport function toErrorMessage(error: any = null, verbose: boolean = false): string {\n\tif (!error) {\n\t\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n\t}\n\n\tif (Array.isArray(error)) {\n\t\tconst errors: any[] = arrays.coalesce(error);\n\t\tconst msg = toErrorMessage(errors[0], verbose);\n\n\t\tif (errors.length > 1) {\n\t\t\treturn nls.localize('error.moreErrors', \"{0} ({1} errors in total)\", msg, errors.length);\n\t\t}\n\n\t\treturn msg;\n\t}\n\n\tif (types.isString(error)) {\n\t\treturn error;\n\t}\n\n\tif (error.detail) {\n\t\tconst detail = error.detail;\n\n\t\tif (detail.error) {\n\t\t\treturn exceptionToErrorMessage(detail.error, verbose);\n\t\t}\n\n\t\tif (detail.exception) {\n\t\t\treturn exceptionToErrorMessage(detail.exception, verbose);\n\t\t}\n\t}\n\n\tif (error.stack) {\n\t\treturn exceptionToErrorMessage(error, verbose);\n\t}\n\n\tif (error.message) {\n\t\treturn error.message;\n\t}\n\n\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as cp from 'child_process';\nimport { Stats } from 'fs';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport * as extpath from 'vs/base/common/extpath';\nimport { FileAccess } from 'vs/base/common/network';\nimport * as Objects from 'vs/base/common/objects';\nimport * as path from 'vs/base/common/path';\nimport * as Platform from 'vs/base/common/platform';\nimport * as process from 'vs/base/common/process';\nimport { CommandOptions, Executable, ForkOptions, Source, SuccessData, TerminateResponse, TerminateResponseCode } from 'vs/base/common/processes';\nimport * as Types from 'vs/base/common/types';\nimport { LineDecoder } from 'vs/base/node/decoder';\nimport * as pfs from 'vs/base/node/pfs';\nimport * as nls from 'vs/nls';\nexport { CommandOptions, ForkOptions, SuccessData, Source, TerminateResponse, TerminateResponseCode };\n\nexport type ValueCallback<T> = (value: T | Promise<T>) => void;\nexport type ErrorCallback = (error?: any) => void;\nexport type ProgressCallback<T> = (progress: T) => void;\n\nexport interface LineData {\n\tline: string;\n\tsource: Source;\n}\n\nfunction getWindowsCode(status: number): TerminateResponseCode {\n\tswitch (status) {\n\t\tcase 0:\n\t\t\treturn TerminateResponseCode.Success;\n\t\tcase 1:\n\t\t\treturn TerminateResponseCode.AccessDenied;\n\t\tcase 128:\n\t\t\treturn TerminateResponseCode.ProcessNotFound;\n\t\tdefault:\n\t\t\treturn TerminateResponseCode.Unknown;\n\t}\n}\n\nfunction terminateProcess(process: cp.ChildProcess, cwd?: string): Promise<TerminateResponse> {\n\tif (Platform.isWindows) {\n\t\ttry {\n\t\t\tconst options: any = {\n\t\t\t\tstdio: ['pipe', 'pipe', 'ignore']\n\t\t\t};\n\t\t\tif (cwd) {\n\t\t\t\toptions.cwd = cwd;\n\t\t\t}\n\t\t\tconst killProcess = cp.execFile('taskkill', ['/T', '/F', '/PID', process.pid.toString()], options);\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tkillProcess.once('error', (err) => {\n\t\t\t\t\tresolve({ success: false, error: err });\n\t\t\t\t});\n\t\t\t\tkillProcess.once('exit', (code, signal) => {\n\t\t\t\t\tif (code === 0) {\n\t\t\t\t\t\tresolve({ success: true });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve({ success: false, code: code !== null ? code : TerminateResponseCode.Unknown });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn Promise.resolve({ success: false, error: err, code: err.status ? getWindowsCode(err.status) : TerminateResponseCode.Unknown });\n\t\t}\n\t} else if (Platform.isLinux || Platform.isMacintosh) {\n\t\ttry {\n\t\t\tconst cmd = FileAccess.asFileUri('vs/base/node/terminateProcess.sh', require).fsPath;\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tcp.execFile(cmd, [process.pid.toString()], { encoding: 'utf8', shell: true } as cp.ExecFileOptions, (err, stdout, stderr) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tresolve({ success: false, error: err });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve({ success: true });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn Promise.resolve({ success: false, error: err });\n\t\t}\n\t} else {\n\t\tprocess.kill('SIGKILL');\n\t}\n\treturn Promise.resolve({ success: true });\n}\n\n/**\n * Remove dangerous environment variables that have caused crashes\n * in forked processes (i.e. in ELECTRON_RUN_AS_NODE processes)\n *\n * @param env The env object to change\n */\nexport function removeDangerousEnvVariables(env: NodeJS.ProcessEnv | undefined): void {\n\tif (!env) {\n\t\treturn;\n\t}\n\n\t// Unset `DEBUG`, as an invalid value might lead to process crashes\n\t// See https://github.com/microsoft/vscode/issues/130072\n\tdelete env['DEBUG'];\n\n\tif (Platform.isMacintosh) {\n\t\t// Unset `DYLD_LIBRARY_PATH`, as it leads to process crashes\n\t\t// See https://github.com/microsoft/vscode/issues/104525\n\t\t// See https://github.com/microsoft/vscode/issues/105848\n\t\tdelete env['DYLD_LIBRARY_PATH'];\n\t}\n\n\tif (Platform.isLinux) {\n\t\t// Unset `LD_PRELOAD`, as it might lead to process crashes\n\t\t// See https://github.com/microsoft/vscode/issues/134177\n\t\tdelete env['LD_PRELOAD'];\n\t}\n}\n\nexport function getWindowsShell(env = process.env as Platform.IProcessEnvironment): string {\n\treturn env['comspec'] || 'cmd.exe';\n}\n\nexport abstract class AbstractProcess<TProgressData> {\n\tprivate cmd: string;\n\tprivate args: string[];\n\tprivate options: CommandOptions | ForkOptions;\n\tprotected shell: boolean;\n\n\tprivate childProcess: cp.ChildProcess | null;\n\tprotected childProcessPromise: Promise<cp.ChildProcess> | null;\n\tprivate pidResolve: ValueCallback<number> | undefined;\n\tprotected terminateRequested: boolean;\n\n\tprivate static WellKnowCommands: IStringDictionary<boolean> = {\n\t\t'ant': true,\n\t\t'cmake': true,\n\t\t'eslint': true,\n\t\t'gradle': true,\n\t\t'grunt': true,\n\t\t'gulp': true,\n\t\t'jake': true,\n\t\t'jenkins': true,\n\t\t'jshint': true,\n\t\t'make': true,\n\t\t'maven': true,\n\t\t'msbuild': true,\n\t\t'msc': true,\n\t\t'nmake': true,\n\t\t'npm': true,\n\t\t'rake': true,\n\t\t'tsc': true,\n\t\t'xbuild': true\n\t};\n\n\tpublic constructor(executable: Executable);\n\tpublic constructor(cmd: string, args: string[] | undefined, shell: boolean, options: CommandOptions | undefined);\n\tpublic constructor(arg1: string | Executable, arg2?: string[], arg3?: boolean, arg4?: CommandOptions) {\n\t\tif (arg2 !== undefined && arg3 !== undefined && arg4 !== undefined) {\n\t\t\tthis.cmd = <string>arg1;\n\t\t\tthis.args = arg2;\n\t\t\tthis.shell = arg3;\n\t\t\tthis.options = arg4;\n\t\t} else {\n\t\t\tconst executable = <Executable>arg1;\n\t\t\tthis.cmd = executable.command;\n\t\t\tthis.shell = executable.isShellCommand;\n\t\t\tthis.args = executable.args.slice(0);\n\t\t\tthis.options = executable.options || {};\n\t\t}\n\n\t\tthis.childProcess = null;\n\t\tthis.childProcessPromise = null;\n\t\tthis.terminateRequested = false;\n\n\t\tif (this.options.env) {\n\t\t\tconst newEnv: IStringDictionary<string> = Object.create(null);\n\t\t\tObject.keys(process.env).forEach((key) => {\n\t\t\t\tnewEnv[key] = process.env[key]!;\n\t\t\t});\n\t\t\tObject.keys(this.options.env).forEach((key) => {\n\t\t\t\tnewEnv[key] = this.options.env![key]!;\n\t\t\t});\n\t\t\tthis.options.env = newEnv;\n\t\t}\n\t}\n\n\tpublic getSanitizedCommand(): string {\n\t\tlet result = this.cmd.toLowerCase();\n\t\tconst index = result.lastIndexOf(path.sep);\n\t\tif (index !== -1) {\n\t\t\tresult = result.substring(index + 1);\n\t\t}\n\t\tif (AbstractProcess.WellKnowCommands[result]) {\n\t\t\treturn result;\n\t\t}\n\t\treturn 'other';\n\t}\n\n\tpublic start(pp: ProgressCallback<TProgressData>): Promise<SuccessData> {\n\t\tif (Platform.isWindows && ((this.options && this.options.cwd && extpath.isUNC(this.options.cwd)) || !this.options && extpath.isUNC(process.cwd()))) {\n\t\t\treturn Promise.reject(new Error(nls.localize('TaskRunner.UNC', 'Can\\'t execute a shell command on a UNC drive.')));\n\t\t}\n\t\treturn this.useExec().then((useExec) => {\n\t\t\tlet cc: ValueCallback<SuccessData>;\n\t\t\tlet ee: ErrorCallback;\n\t\t\tconst result = new Promise<any>((c, e) => {\n\t\t\t\tcc = c;\n\t\t\t\tee = e;\n\t\t\t});\n\n\t\t\tif (useExec) {\n\t\t\t\tlet cmd: string = this.cmd;\n\t\t\t\tif (this.args) {\n\t\t\t\t\tcmd = cmd + ' ' + this.args.join(' ');\n\t\t\t\t}\n\t\t\t\tthis.childProcess = cp.exec(cmd, this.options, (error, stdout, stderr) => {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\tconst err: any = error;\n\t\t\t\t\t// This is tricky since executing a command shell reports error back in case the executed command return an\n\t\t\t\t\t// error or the command didn't exist at all. So we can't blindly treat an error as a failed command. So we\n\t\t\t\t\t// always parse the output and report success unless the job got killed.\n\t\t\t\t\tif (err && err.killed) {\n\t\t\t\t\t\tee({ killed: this.terminateRequested, stdout: stdout.toString(), stderr: stderr.toString() });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.handleExec(cc, pp, error, stdout as any, stderr as any);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlet childProcess: cp.ChildProcess | null = null;\n\t\t\t\tconst closeHandler = (data: any) => {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\tthis.childProcessPromise = null;\n\t\t\t\t\tthis.handleClose(data, cc, pp, ee);\n\t\t\t\t\tconst result: SuccessData = {\n\t\t\t\t\t\tterminated: this.terminateRequested\n\t\t\t\t\t};\n\t\t\t\t\tif (Types.isNumber(data)) {\n\t\t\t\t\t\tresult.cmdCode = <number>data;\n\t\t\t\t\t}\n\t\t\t\t\tcc(result);\n\t\t\t\t};\n\t\t\t\tif (this.shell && Platform.isWindows) {\n\t\t\t\t\tconst options: any = Objects.deepClone(this.options);\n\t\t\t\t\toptions.windowsVerbatimArguments = true;\n\t\t\t\t\toptions.detached = false;\n\t\t\t\t\tlet quotedCommand: boolean = false;\n\t\t\t\t\tlet quotedArg: boolean = false;\n\t\t\t\t\tconst commandLine: string[] = [];\n\t\t\t\t\tlet quoted = this.ensureQuotes(this.cmd);\n\t\t\t\t\tcommandLine.push(quoted.value);\n\t\t\t\t\tquotedCommand = quoted.quoted;\n\t\t\t\t\tif (this.args) {\n\t\t\t\t\t\tthis.args.forEach((elem) => {\n\t\t\t\t\t\t\tquoted = this.ensureQuotes(elem);\n\t\t\t\t\t\t\tcommandLine.push(quoted.value);\n\t\t\t\t\t\t\tquotedArg = quotedArg && quoted.quoted;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tconst args: string[] = [\n\t\t\t\t\t\t'/s',\n\t\t\t\t\t\t'/c',\n\t\t\t\t\t];\n\t\t\t\t\tif (quotedCommand) {\n\t\t\t\t\t\tif (quotedArg) {\n\t\t\t\t\t\t\targs.push('\"' + commandLine.join(' ') + '\"');\n\t\t\t\t\t\t} else if (commandLine.length > 1) {\n\t\t\t\t\t\t\targs.push('\"' + commandLine[0] + '\"' + ' ' + commandLine.slice(1).join(' '));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\targs.push('\"' + commandLine[0] + '\"');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\targs.push(commandLine.join(' '));\n\t\t\t\t\t}\n\t\t\t\t\tchildProcess = cp.spawn(getWindowsShell(), args, options);\n\t\t\t\t} else {\n\t\t\t\t\tif (this.cmd) {\n\t\t\t\t\t\tchildProcess = cp.spawn(this.cmd, this.args, this.options);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (childProcess) {\n\t\t\t\t\tthis.childProcess = childProcess;\n\t\t\t\t\tthis.childProcessPromise = Promise.resolve(childProcess);\n\t\t\t\t\tif (this.pidResolve) {\n\t\t\t\t\t\tthis.pidResolve(Types.isNumber(childProcess.pid) ? childProcess.pid : -1);\n\t\t\t\t\t\tthis.pidResolve = undefined;\n\t\t\t\t\t}\n\t\t\t\t\tchildProcess.on('error', (error: Error) => {\n\t\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\t\tee({ terminated: this.terminateRequested, error: error });\n\t\t\t\t\t});\n\t\t\t\t\tif (childProcess.pid) {\n\t\t\t\t\t\tthis.childProcess.on('close', closeHandler);\n\t\t\t\t\t\tthis.handleSpawn(childProcess, cc!, pp, ee!, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tprotected abstract handleExec(cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, error: Error | null, stdout: Buffer, stderr: Buffer): void;\n\tprotected abstract handleSpawn(childProcess: cp.ChildProcess, cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, ee: ErrorCallback, sync: boolean): void;\n\n\tprotected handleClose(data: any, cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, ee: ErrorCallback): void {\n\t\t// Default is to do nothing.\n\t}\n\n\tprivate static readonly regexp = /^[^\"].* .*[^\"]/;\n\tprivate ensureQuotes(value: string) {\n\t\tif (AbstractProcess.regexp.test(value)) {\n\t\t\treturn {\n\t\t\t\tvalue: '\"' + value + '\"', //`\"${value}\"`,\n\t\t\t\tquoted: true\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tvalue: value,\n\t\t\t\tquoted: value.length > 0 && value[0] === '\"' && value[value.length - 1] === '\"'\n\t\t\t};\n\t\t}\n\t}\n\n\tpublic get pid(): Promise<number> {\n\t\tif (this.childProcessPromise) {\n\t\t\treturn this.childProcessPromise.then(childProcess => childProcess.pid, err => -1);\n\t\t} else {\n\t\t\treturn new Promise<number>((resolve) => {\n\t\t\t\tthis.pidResolve = resolve;\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic terminate(): Promise<TerminateResponse> {\n\t\tif (!this.childProcessPromise) {\n\t\t\treturn Promise.resolve<TerminateResponse>({ success: true });\n\t\t}\n\t\treturn this.childProcessPromise.then((childProcess) => {\n\t\t\tthis.terminateRequested = true;\n\t\t\treturn terminateProcess(childProcess, this.options.cwd).then(response => {\n\t\t\t\tif (response.success) {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t}\n\t\t\t\treturn response;\n\t\t\t});\n\t\t}, (err) => {\n\t\t\treturn { success: true };\n\t\t});\n\t}\n\n\tprivate useExec(): Promise<boolean> {\n\t\treturn new Promise<boolean>(resolve => {\n\t\t\tif (!this.shell || !Platform.isWindows) {\n\t\t\t\treturn resolve(false);\n\t\t\t}\n\t\t\tconst cmdShell = cp.spawn(getWindowsShell(), ['/s', '/c']);\n\t\t\tcmdShell.on('error', (error: Error) => {\n\t\t\t\treturn resolve(true);\n\t\t\t});\n\t\t\tcmdShell.on('exit', (data: any) => {\n\t\t\t\treturn resolve(false);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class LineProcess extends AbstractProcess<LineData> {\n\n\tprivate stdoutLineDecoder: LineDecoder | null;\n\tprivate stderrLineDecoder: LineDecoder | null;\n\n\tpublic constructor(executable: Executable);\n\tpublic constructor(cmd: string, args: string[], shell: boolean, options: CommandOptions);\n\tpublic constructor(arg1: string | Executable, arg2?: string[], arg3?: boolean | ForkOptions, arg4?: CommandOptions) {\n\t\tsuper(<any>arg1, arg2, <any>arg3, arg4);\n\n\t\tthis.stdoutLineDecoder = null;\n\t\tthis.stderrLineDecoder = null;\n\t}\n\n\tprotected handleExec(cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, error: Error, stdout: Buffer, stderr: Buffer) {\n\t\t[stdout, stderr].forEach((buffer: Buffer, index: number) => {\n\t\t\tconst lineDecoder = new LineDecoder();\n\t\t\tconst lines = lineDecoder.write(buffer);\n\t\t\tlines.forEach((line) => {\n\t\t\t\tpp({ line: line, source: index === 0 ? Source.stdout : Source.stderr });\n\t\t\t});\n\t\t\tconst line = lineDecoder.end();\n\t\t\tif (line) {\n\t\t\t\tpp({ line: line, source: index === 0 ? Source.stdout : Source.stderr });\n\t\t\t}\n\t\t});\n\t\tcc({ terminated: this.terminateRequested, error: error });\n\t}\n\n\tprotected handleSpawn(childProcess: cp.ChildProcess, cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, ee: ErrorCallback, sync: boolean): void {\n\t\tconst stdoutLineDecoder = new LineDecoder();\n\t\tconst stderrLineDecoder = new LineDecoder();\n\t\tchildProcess.stdout!.on('data', (data: Buffer) => {\n\t\t\tconst lines = stdoutLineDecoder.write(data);\n\t\t\tlines.forEach(line => pp({ line: line, source: Source.stdout }));\n\t\t});\n\t\tchildProcess.stderr!.on('data', (data: Buffer) => {\n\t\t\tconst lines = stderrLineDecoder.write(data);\n\t\t\tlines.forEach(line => pp({ line: line, source: Source.stderr }));\n\t\t});\n\n\t\tthis.stdoutLineDecoder = stdoutLineDecoder;\n\t\tthis.stderrLineDecoder = stderrLineDecoder;\n\t}\n\n\tprotected override handleClose(data: any, cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, ee: ErrorCallback): void {\n\t\tconst stdoutLine = this.stdoutLineDecoder ? this.stdoutLineDecoder.end() : null;\n\t\tif (stdoutLine) {\n\t\t\tpp({ line: stdoutLine, source: Source.stdout });\n\t\t}\n\t\tconst stderrLine = this.stderrLineDecoder ? this.stderrLineDecoder.end() : null;\n\t\tif (stderrLine) {\n\t\t\tpp({ line: stderrLine, source: Source.stderr });\n\t\t}\n\t}\n}\n\nexport interface IQueuedSender {\n\tsend: (msg: any) => void;\n}\n\n// Wrapper around process.send() that will queue any messages if the internal node.js\n// queue is filled with messages and only continue sending messages when the internal\n// queue is free again to consume messages.\n// On Windows we always wait for the send() method to return before sending the next message\n// to workaround https://github.com/nodejs/node/issues/7657 (IPC can freeze process)\nexport function createQueuedSender(childProcess: cp.ChildProcess): IQueuedSender {\n\tlet msgQueue: string[] = [];\n\tlet useQueue = false;\n\n\tconst send = function (msg: any): void {\n\t\tif (useQueue) {\n\t\t\tmsgQueue.push(msg); // add to the queue if the process cannot handle more messages\n\t\t\treturn;\n\t\t}\n\n\t\tconst result = childProcess.send(msg, (error: Error | null) => {\n\t\t\tif (error) {\n\t\t\t\tconsole.error(error); // unlikely to happen, best we can do is log this error\n\t\t\t}\n\n\t\t\tuseQueue = false; // we are good again to send directly without queue\n\n\t\t\t// now send all the messages that we have in our queue and did not send yet\n\t\t\tif (msgQueue.length > 0) {\n\t\t\t\tconst msgQueueCopy = msgQueue.slice(0);\n\t\t\t\tmsgQueue = [];\n\t\t\t\tmsgQueueCopy.forEach(entry => send(entry));\n\t\t\t}\n\t\t});\n\n\t\tif (!result || Platform.isWindows /* workaround https://github.com/nodejs/node/issues/7657 */) {\n\t\t\tuseQueue = true;\n\t\t}\n\t};\n\n\treturn { send };\n}\n\nexport namespace win32 {\n\texport async function findExecutable(command: string, cwd?: string, paths?: string[]): Promise<string> {\n\t\t// If we have an absolute path then we take it.\n\t\tif (path.isAbsolute(command)) {\n\t\t\treturn command;\n\t\t}\n\t\tif (cwd === undefined) {\n\t\t\tcwd = process.cwd();\n\t\t}\n\t\tconst dir = path.dirname(command);\n\t\tif (dir !== '.') {\n\t\t\t// We have a directory and the directory is relative (see above). Make the path absolute\n\t\t\t// to the current working directory.\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\t\tif (paths === undefined && Types.isString(process.env['PATH'])) {\n\t\t\tpaths = process.env['PATH'].split(path.delimiter);\n\t\t}\n\t\t// No PATH environment. Make path absolute to the cwd.\n\t\tif (paths === undefined || paths.length === 0) {\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\n\t\tasync function fileExists(path: string): Promise<boolean> {\n\t\t\tif (await pfs.Promises.exists(path)) {\n\t\t\t\tlet statValue: Stats | undefined;\n\t\t\t\ttry {\n\t\t\t\t\tstatValue = await pfs.Promises.stat(path);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (e.message.startsWith('EACCES')) {\n\t\t\t\t\t\t// it might be symlink\n\t\t\t\t\t\tstatValue = await pfs.Promises.lstat(path);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn statValue ? !statValue.isDirectory() : false;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t// We have a simple file name. We get the path variable from the env\n\t\t// and try to find the executable on the path.\n\t\tfor (let pathEntry of paths) {\n\t\t\t// The path entry is absolute.\n\t\t\tlet fullPath: string;\n\t\t\tif (path.isAbsolute(pathEntry)) {\n\t\t\t\tfullPath = path.join(pathEntry, command);\n\t\t\t} else {\n\t\t\t\tfullPath = path.join(cwd, pathEntry, command);\n\t\t\t}\n\t\t\tif (await fileExists(fullPath)) {\n\t\t\t\treturn fullPath;\n\t\t\t}\n\t\t\tlet withExtension = fullPath + '.com';\n\t\t\tif (await fileExists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t\twithExtension = fullPath + '.exe';\n\t\t\tif (await fileExists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t}\n\t\treturn path.join(cwd, command);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { release, userInfo } from 'os';\nimport * as platform from 'vs/base/common/platform';\nimport { getFirstAvailablePowerShellInstallation } from 'vs/base/node/powershell';\nimport * as processes from 'vs/base/node/processes';\n\n/**\n * Gets the detected default shell for the _system_, not to be confused with VS Code's _default_\n * shell that the terminal uses by default.\n * @param os The platform to detect the shell of.\n */\nexport async function getSystemShell(os: platform.OperatingSystem, env: platform.IProcessEnvironment): Promise<string> {\n\tif (os === platform.OperatingSystem.Windows) {\n\t\tif (platform.isWindows) {\n\t\t\treturn getSystemShellWindows();\n\t\t}\n\t\t// Don't detect Windows shell when not on Windows\n\t\treturn processes.getWindowsShell(env);\n\t}\n\n\treturn getSystemShellUnixLike(os, env);\n}\n\nexport function getSystemShellSync(os: platform.OperatingSystem, env: platform.IProcessEnvironment): string {\n\tif (os === platform.OperatingSystem.Windows) {\n\t\tif (platform.isWindows) {\n\t\t\treturn getSystemShellWindowsSync(env);\n\t\t}\n\t\t// Don't detect Windows shell when not on Windows\n\t\treturn processes.getWindowsShell(env);\n\t}\n\n\treturn getSystemShellUnixLike(os, env);\n}\n\nlet _TERMINAL_DEFAULT_SHELL_UNIX_LIKE: string | null = null;\nfunction getSystemShellUnixLike(os: platform.OperatingSystem, env: platform.IProcessEnvironment): string {\n\t// Only use $SHELL for the current OS\n\tif (platform.isLinux && os === platform.OperatingSystem.Macintosh || platform.isMacintosh && os === platform.OperatingSystem.Linux) {\n\t\treturn '/bin/bash';\n\t}\n\n\tif (!_TERMINAL_DEFAULT_SHELL_UNIX_LIKE) {\n\t\tlet unixLikeTerminal: string | undefined;\n\t\tif (platform.isWindows) {\n\t\t\tunixLikeTerminal = '/bin/bash'; // for WSL\n\t\t} else {\n\t\t\tunixLikeTerminal = env['SHELL'];\n\n\t\t\tif (!unixLikeTerminal) {\n\t\t\t\ttry {\n\t\t\t\t\t// It's possible for $SHELL to be unset, this API reads /etc/passwd. See https://github.com/github/codespaces/issues/1639\n\t\t\t\t\t// Node docs: \"Throws a SystemError if a user has no username or homedir.\"\n\t\t\t\t\tunixLikeTerminal = userInfo().shell;\n\t\t\t\t} catch (err) { }\n\t\t\t}\n\n\t\t\tif (!unixLikeTerminal) {\n\t\t\t\tunixLikeTerminal = 'sh';\n\t\t\t}\n\n\t\t\t// Some systems have $SHELL set to /bin/false which breaks the terminal\n\t\t\tif (unixLikeTerminal === '/bin/false') {\n\t\t\t\tunixLikeTerminal = '/bin/bash';\n\t\t\t}\n\t\t}\n\t\t_TERMINAL_DEFAULT_SHELL_UNIX_LIKE = unixLikeTerminal;\n\t}\n\treturn _TERMINAL_DEFAULT_SHELL_UNIX_LIKE;\n}\n\nlet _TERMINAL_DEFAULT_SHELL_WINDOWS: string | null = null;\nasync function getSystemShellWindows(): Promise<string> {\n\tif (!_TERMINAL_DEFAULT_SHELL_WINDOWS) {\n\t\t_TERMINAL_DEFAULT_SHELL_WINDOWS = (await getFirstAvailablePowerShellInstallation())!.exePath;\n\t}\n\treturn _TERMINAL_DEFAULT_SHELL_WINDOWS;\n}\n\nfunction getSystemShellWindowsSync(env: platform.IProcessEnvironment): string {\n\tif (_TERMINAL_DEFAULT_SHELL_WINDOWS) {\n\t\treturn _TERMINAL_DEFAULT_SHELL_WINDOWS;\n\t}\n\n\tconst isAtLeastWindows10 = platform.isWindows && parseFloat(release()) >= 10;\n\tconst is32ProcessOn64Windows = env.hasOwnProperty('PROCESSOR_ARCHITEW6432');\n\tconst powerShellPath = `${env['windir']}\\\\${is32ProcessOn64Windows ? 'Sysnative' : 'System32'}\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe`;\n\treturn isAtLeastWindows10 ? powerShellPath : processes.getWindowsShell(env);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ChildProcess, fork, ForkOptions } from 'child_process';\nimport { createCancelablePromise, Delayer } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { isRemoteConsoleLog, log } from 'vs/base/common/console';\nimport * as errors from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { dispose, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { deepClone } from 'vs/base/common/objects';\nimport { createQueuedSender, removeDangerousEnvVariables } from 'vs/base/node/processes';\nimport { ChannelClient as IPCClient, ChannelServer as IPCServer, IChannel, IChannelClient } from 'vs/base/parts/ipc/common/ipc';\n\n/**\n * This implementation doesn't perform well since it uses base64 encoding for buffers.\n * We should move all implementations to use named ipc.net, so we stop depending on cp.fork.\n */\n\nexport class Server<TContext extends string> extends IPCServer<TContext> {\n\tconstructor(ctx: TContext) {\n\t\tsuper({\n\t\t\tsend: r => {\n\t\t\t\ttry {\n\t\t\t\t\tif (process.send) {\n\t\t\t\t\t\tprocess.send((<Buffer>r.buffer).toString('base64'));\n\t\t\t\t\t}\n\t\t\t\t} catch (e) { /* not much to do */ }\n\t\t\t},\n\t\t\tonMessage: Event.fromNodeEventEmitter(process, 'message', msg => VSBuffer.wrap(Buffer.from(msg, 'base64')))\n\t\t}, ctx);\n\n\t\tprocess.once('disconnect', () => this.dispose());\n\t}\n}\n\nexport interface IIPCOptions {\n\n\t/**\n\t * A descriptive name for the server this connection is to. Used in logging.\n\t */\n\tserverName: string;\n\n\t/**\n\t * Time in millies before killing the ipc process. The next request after killing will start it again.\n\t */\n\ttimeout?: number;\n\n\t/**\n\t * Arguments to the module to execute.\n\t */\n\targs?: string[];\n\n\t/**\n\t * Environment key-value pairs to be passed to the process that gets spawned for the ipc.\n\t */\n\tenv?: any;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application executed.\n\t */\n\tdebug?: number;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application and breaking it on the first line.\n\t */\n\tdebugBrk?: number;\n\n\t/**\n\t * If set, starts the fork with empty execArgv. If not set, execArgv from the parent process are inherited,\n\t * except --inspect= and --inspect-brk= which are filtered as they would result in a port conflict.\n\t */\n\tfreshExecArgv?: boolean;\n\n\t/**\n\t * Enables our createQueuedSender helper for this Client. Uses a queue when the internal Node.js queue is\n\t * full of messages - see notes on that method.\n\t */\n\tuseQueue?: boolean;\n}\n\nexport class Client implements IChannelClient, IDisposable {\n\n\tprivate disposeDelayer: Delayer<void> | undefined;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate child: ChildProcess | null;\n\tprivate _client: IPCClient | null;\n\tprivate channels = new Map<string, IChannel>();\n\n\tprivate readonly _onDidProcessExit = new Emitter<{ code: number, signal: string }>();\n\treadonly onDidProcessExit = this._onDidProcessExit.event;\n\n\tconstructor(private modulePath: string, private options: IIPCOptions) {\n\t\tconst timeout = options && options.timeout ? options.timeout : 60000;\n\t\tthis.disposeDelayer = new Delayer<void>(timeout);\n\t\tthis.child = null;\n\t\tthis._client = null;\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\treturn that.requestPromise<T>(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg?: any) {\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprotected requestPromise<T>(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<T> {\n\t\tif (!this.disposeDelayer) {\n\t\t\treturn Promise.reject(new Error('disposed'));\n\t\t}\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(errors.canceled());\n\t\t}\n\n\t\tthis.disposeDelayer.cancel();\n\n\t\tconst channel = this.getCachedChannel(channelName);\n\t\tconst result = createCancelablePromise(token => channel.call<T>(name, arg, token));\n\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(() => result.cancel());\n\n\t\tconst disposable = toDisposable(() => result.cancel());\n\t\tthis.activeRequests.add(disposable);\n\n\t\tresult.finally(() => {\n\t\t\tcancellationTokenListener.dispose();\n\t\t\tthis.activeRequests.delete(disposable);\n\n\t\t\tif (this.activeRequests.size === 0 && this.disposeDelayer) {\n\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tprotected requestEvent<T>(channelName: string, name: string, arg?: any): Event<T> {\n\t\tif (!this.disposeDelayer) {\n\t\t\treturn Event.None;\n\t\t}\n\n\t\tthis.disposeDelayer.cancel();\n\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tconst channel = this.getCachedChannel(channelName);\n\t\t\t\tconst event: Event<T> = channel.listen(name, arg);\n\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t\tthis.activeRequests.add(listener);\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis.activeRequests.delete(listener);\n\t\t\t\tlistener.dispose();\n\n\t\t\t\tif (this.activeRequests.size === 0 && this.disposeDelayer) {\n\t\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate get client(): IPCClient {\n\t\tif (!this._client) {\n\t\t\tconst args = this.options && this.options.args ? this.options.args : [];\n\t\t\tconst forkOpts: ForkOptions = Object.create(null);\n\n\t\t\tforkOpts.env = { ...deepClone(process.env), 'VSCODE_PARENT_PID': String(process.pid) };\n\n\t\t\tif (this.options && this.options.env) {\n\t\t\t\tforkOpts.env = { ...forkOpts.env, ...this.options.env };\n\t\t\t}\n\n\t\t\tif (this.options && this.options.freshExecArgv) {\n\t\t\t\tforkOpts.execArgv = [];\n\t\t\t}\n\n\t\t\tif (this.options && typeof this.options.debug === 'number') {\n\t\t\t\tforkOpts.execArgv = ['--nolazy', '--inspect=' + this.options.debug];\n\t\t\t}\n\n\t\t\tif (this.options && typeof this.options.debugBrk === 'number') {\n\t\t\t\tforkOpts.execArgv = ['--nolazy', '--inspect-brk=' + this.options.debugBrk];\n\t\t\t}\n\n\t\t\tif (forkOpts.execArgv === undefined) {\n\t\t\t\t// if not set, the forked process inherits the execArgv of the parent process\n\t\t\t\t// --inspect and --inspect-brk can not be inherited as the port would conflict\n\t\t\t\tforkOpts.execArgv = process.execArgv.filter(a => !/^--inspect(-brk)?=/.test(a)); // remove\n\t\t\t}\n\n\t\t\tremoveDangerousEnvVariables(forkOpts.env);\n\n\t\t\tthis.child = fork(this.modulePath, args, forkOpts);\n\n\t\t\tconst onMessageEmitter = new Emitter<VSBuffer>();\n\t\t\tconst onRawMessage = Event.fromNodeEventEmitter(this.child, 'message', msg => msg);\n\n\t\t\tonRawMessage(msg => {\n\n\t\t\t\t// Handle remote console logs specially\n\t\t\t\tif (isRemoteConsoleLog(msg)) {\n\t\t\t\t\tlog(msg, `IPC Library: ${this.options.serverName}`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Anything else goes to the outside\n\t\t\t\tonMessageEmitter.fire(VSBuffer.wrap(Buffer.from(msg, 'base64')));\n\t\t\t});\n\n\t\t\tconst sender = this.options.useQueue ? createQueuedSender(this.child) : this.child;\n\t\t\tconst send = (r: VSBuffer) => this.child && this.child.connected && sender.send((<Buffer>r.buffer).toString('base64'));\n\t\t\tconst onMessage = onMessageEmitter.event;\n\t\t\tconst protocol = { send, onMessage };\n\n\t\t\tthis._client = new IPCClient(protocol);\n\n\t\t\tconst onExit = () => this.disposeClient();\n\t\t\tprocess.once('exit', onExit);\n\n\t\t\tthis.child.on('error', err => console.warn('IPC \"' + this.options.serverName + '\" errored with ' + err));\n\n\t\t\tthis.child.on('exit', (code: any, signal: any) => {\n\t\t\t\tprocess.removeListener('exit' as 'loaded', onExit); // https://github.com/electron/electron/issues/21475\n\n\t\t\t\tthis.activeRequests.forEach(r => dispose(r));\n\t\t\t\tthis.activeRequests.clear();\n\n\t\t\t\tif (code !== 0 && signal !== 'SIGTERM') {\n\t\t\t\t\tconsole.warn('IPC \"' + this.options.serverName + '\" crashed with exit code ' + code + ' and signal ' + signal);\n\t\t\t\t}\n\n\t\t\t\tif (this.disposeDelayer) {\n\t\t\t\t\tthis.disposeDelayer.cancel();\n\t\t\t\t}\n\t\t\t\tthis.disposeClient();\n\t\t\t\tthis._onDidProcessExit.fire({ code, signal });\n\t\t\t});\n\t\t}\n\n\t\treturn this._client;\n\t}\n\n\tprivate getCachedChannel(name: string): IChannel {\n\t\tlet channel = this.channels.get(name);\n\n\t\tif (!channel) {\n\t\t\tchannel = this.client.getChannel(name);\n\t\t\tthis.channels.set(name, channel);\n\t\t}\n\n\t\treturn channel;\n\t}\n\n\tprivate disposeClient() {\n\t\tif (this._client) {\n\t\t\tif (this.child) {\n\t\t\t\tthis.child.kill();\n\t\t\t\tthis.child = null;\n\t\t\t}\n\t\t\tthis._client = null;\n\t\t\tthis.channels.clear();\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis._onDidProcessExit.dispose();\n\t\tif (this.disposeDelayer) {\n\t\t\tthis.disposeDelayer.cancel();\n\t\t\tthis.disposeDelayer = undefined;\n\t\t}\n\t\tthis.disposeClient();\n\t\tthis.activeRequests.clear();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toLocalISOString } from 'vs/base/common/date';\nimport { memoize } from 'vs/base/common/decorators';\nimport { FileAccess } from 'vs/base/common/network';\nimport { dirname, join, normalize, resolve } from 'vs/base/common/path';\nimport { env } from 'vs/base/common/process';\nimport { joinPath } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { IDebugParams, IExtensionHostDebugParams, INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ExtensionKind } from 'vs/platform/extensions/common/extensions';\nimport { IProductService } from 'vs/platform/product/common/productService';\n\nexport interface INativeEnvironmentPaths {\n\n\t/**\n\t * The user data directory to use for anything that should be\n\t * persisted except for the content that is meant for the `homeDir`.\n\t *\n\t * Only one instance of VSCode can use the same `userDataDir`.\n\t */\n\tuserDataDir: string\n\n\t/**\n\t * The user home directory mainly used for persisting extensions\n\t * and global configuration that should be shared across all\n\t * versions.\n\t */\n\thomeDir: string;\n\n\t/**\n\t * OS tmp dir.\n\t */\n\ttmpDir: string,\n}\n\nexport abstract class AbstractNativeEnvironmentService implements INativeEnvironmentService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\t@memoize\n\tget appRoot(): string { return dirname(FileAccess.asFileUri('', require).fsPath); }\n\n\t@memoize\n\tget userHome(): URI { return URI.file(this.paths.homeDir); }\n\n\t@memoize\n\tget userDataPath(): string { return this.paths.userDataDir; }\n\n\t@memoize\n\tget appSettingsHome(): URI { return URI.file(join(this.userDataPath, 'User')); }\n\n\t@memoize\n\tget tmpDir(): URI { return URI.file(this.paths.tmpDir); }\n\n\t@memoize\n\tget cacheHome(): URI { return URI.file(this.userDataPath); }\n\n\t@memoize\n\tget userRoamingDataHome(): URI { return this.appSettingsHome; }\n\n\t@memoize\n\tget settingsResource(): URI { return joinPath(this.userRoamingDataHome, 'settings.json'); }\n\n\t@memoize\n\tget userDataSyncHome(): URI { return joinPath(this.userRoamingDataHome, 'sync'); }\n\n\tget logsPath(): string {\n\t\tif (!this.args.logsPath) {\n\t\t\tconst key = toLocalISOString(new Date()).replace(/-|:|\\.\\d+Z$/g, '');\n\t\t\tthis.args.logsPath = join(this.userDataPath, 'logs', key);\n\t\t}\n\n\t\treturn this.args.logsPath;\n\t}\n\n\t@memoize\n\tget userDataSyncLogResource(): URI { return URI.file(join(this.logsPath, 'userDataSync.log')); }\n\n\t@memoize\n\tget sync(): 'on' | 'off' | undefined { return this.args.sync; }\n\n\t@memoize\n\tget machineSettingsResource(): URI { return joinPath(URI.file(join(this.userDataPath, 'Machine')), 'settings.json'); }\n\n\t@memoize\n\tget globalStorageHome(): URI { return URI.joinPath(this.appSettingsHome, 'globalStorage'); }\n\n\t@memoize\n\tget workspaceStorageHome(): URI { return URI.joinPath(this.appSettingsHome, 'workspaceStorage'); }\n\n\t@memoize\n\tget keybindingsResource(): URI { return joinPath(this.userRoamingDataHome, 'keybindings.json'); }\n\n\t@memoize\n\tget keyboardLayoutResource(): URI { return joinPath(this.userRoamingDataHome, 'keyboardLayout.json'); }\n\n\t@memoize\n\tget argvResource(): URI {\n\t\tconst vscodePortable = env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn URI.file(join(vscodePortable, 'argv.json'));\n\t\t}\n\n\t\treturn joinPath(this.userHome, this.productService.dataFolderName, 'argv.json');\n\t}\n\n\t@memoize\n\tget snippetsHome(): URI { return joinPath(this.userRoamingDataHome, 'snippets'); }\n\n\t@memoize\n\tget isExtensionDevelopment(): boolean { return !!this.args.extensionDevelopmentPath; }\n\n\t@memoize\n\tget untitledWorkspacesHome(): URI { return URI.file(join(this.userDataPath, 'Workspaces')); }\n\n\t@memoize\n\tget installSourcePath(): string { return join(this.userDataPath, 'installSource'); }\n\n\t@memoize\n\tget builtinExtensionsPath(): string {\n\t\tconst cliBuiltinExtensionsDir = this.args['builtin-extensions-dir'];\n\t\tif (cliBuiltinExtensionsDir) {\n\t\t\treturn resolve(cliBuiltinExtensionsDir);\n\t\t}\n\n\t\treturn normalize(join(FileAccess.asFileUri('', require).fsPath, '..', 'extensions'));\n\t}\n\n\tget extensionsDownloadPath(): string {\n\t\tconst cliExtensionsDownloadDir = this.args['extensions-download-dir'];\n\t\tif (cliExtensionsDownloadDir) {\n\t\t\treturn resolve(cliExtensionsDownloadDir);\n\t\t}\n\n\t\treturn join(this.userDataPath, 'CachedExtensionVSIXs');\n\t}\n\n\t@memoize\n\tget extensionsPath(): string {\n\t\tconst cliExtensionsDir = this.args['extensions-dir'];\n\t\tif (cliExtensionsDir) {\n\t\t\treturn resolve(cliExtensionsDir);\n\t\t}\n\n\t\tconst vscodeExtensions = env['VSCODE_EXTENSIONS'];\n\t\tif (vscodeExtensions) {\n\t\t\treturn vscodeExtensions;\n\t\t}\n\n\t\tconst vscodePortable = env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn join(vscodePortable, 'extensions');\n\t\t}\n\n\t\treturn joinPath(this.userHome, this.productService.dataFolderName, 'extensions').fsPath;\n\t}\n\n\t@memoize\n\tget extensionDevelopmentLocationURI(): URI[] | undefined {\n\t\tconst extensionDevelopmentPaths = this.args.extensionDevelopmentPath;\n\t\tif (Array.isArray(extensionDevelopmentPaths)) {\n\t\t\treturn extensionDevelopmentPaths.map(extensionDevelopmentPath => {\n\t\t\t\tif (/^[^:/?#]+?:\\/\\//.test(extensionDevelopmentPath)) {\n\t\t\t\t\treturn URI.parse(extensionDevelopmentPath);\n\t\t\t\t}\n\n\t\t\t\treturn URI.file(normalize(extensionDevelopmentPath));\n\t\t\t});\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\t@memoize\n\tget extensionDevelopmentKind(): ExtensionKind[] | undefined {\n\t\treturn this.args.extensionDevelopmentKind?.map(kind => kind === 'ui' || kind === 'workspace' || kind === 'web' ? kind : 'workspace');\n\t}\n\n\t@memoize\n\tget extensionTestsLocationURI(): URI | undefined {\n\t\tconst extensionTestsPath = this.args.extensionTestsPath;\n\t\tif (extensionTestsPath) {\n\t\t\tif (/^[^:/?#]+?:\\/\\//.test(extensionTestsPath)) {\n\t\t\t\treturn URI.parse(extensionTestsPath);\n\t\t\t}\n\n\t\t\treturn URI.file(normalize(extensionTestsPath));\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tget disableExtensions(): boolean | string[] {\n\t\tif (this.args['disable-extensions']) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst disableExtensions = this.args['disable-extension'];\n\t\tif (disableExtensions) {\n\t\t\tif (typeof disableExtensions === 'string') {\n\t\t\t\treturn [disableExtensions];\n\t\t\t}\n\n\t\t\tif (Array.isArray(disableExtensions) && disableExtensions.length > 0) {\n\t\t\t\treturn disableExtensions;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t@memoize\n\tget debugExtensionHost(): IExtensionHostDebugParams { return parseExtensionHostPort(this.args, this.isBuilt); }\n\tget debugRenderer(): boolean { return !!this.args.debugRenderer; }\n\n\tget isBuilt(): boolean { return !env['VSCODE_DEV']; }\n\tget verbose(): boolean { return !!this.args.verbose; }\n\tget logLevel(): string | undefined { return this.args.log; }\n\n\t@memoize\n\tget serviceMachineIdResource(): URI { return joinPath(URI.file(this.userDataPath), 'machineid'); }\n\n\tget crashReporterId(): string | undefined { return this.args['crash-reporter-id']; }\n\tget crashReporterDirectory(): string | undefined { return this.args['crash-reporter-directory']; }\n\n\tget driverHandle(): string | undefined { return this.args['driver']; }\n\n\t@memoize\n\tget telemetryLogResource(): URI { return URI.file(join(this.logsPath, 'telemetry.log')); }\n\tget disableTelemetry(): boolean { return !!this.args['disable-telemetry']; }\n\n\t@memoize\n\tget disableWorkspaceTrust(): boolean { return !!this.args['disable-workspace-trust']; }\n\n\tget args(): NativeParsedArgs { return this._args; }\n\n\tconstructor(\n\t\tprivate readonly _args: NativeParsedArgs,\n\t\tprivate readonly paths: INativeEnvironmentPaths,\n\t\tprotected readonly productService: IProductService\n\t) { }\n}\n\nexport function parseExtensionHostPort(args: NativeParsedArgs, isBuild: boolean): IExtensionHostDebugParams {\n\treturn parseDebugParams(args['inspect-extensions'], args['inspect-brk-extensions'], 5870, isBuild, args.debugId, args.extensionEnvironment);\n}\n\nexport function parseSearchPort(args: NativeParsedArgs, isBuild: boolean): IDebugParams {\n\treturn parseDebugParams(args['inspect-search'], args['inspect-brk-search'], 5876, isBuild, args.extensionEnvironment);\n}\n\nexport function parsePtyHostPort(args: NativeParsedArgs, isBuild: boolean): IDebugParams {\n\treturn parseDebugParams(args['inspect-ptyhost'], args['inspect-brk-ptyhost'], 5877, isBuild, args.extensionEnvironment);\n}\n\nfunction parseDebugParams(debugArg: string | undefined, debugBrkArg: string | undefined, defaultBuildPort: number, isBuild: boolean, debugId?: string, environmentString?: string): IExtensionHostDebugParams {\n\tconst portStr = debugBrkArg || debugArg;\n\tconst port = Number(portStr) || (!isBuild ? defaultBuildPort : null);\n\tconst brk = port ? Boolean(!!debugBrkArg) : false;\n\tlet env: Record<string, string> | undefined;\n\tif (environmentString) {\n\t\ttry {\n\t\t\tenv = JSON.parse(environmentString);\n\t\t} catch {\n\t\t\t// ignore\n\t\t}\n\t}\n\n\treturn { port, break: brk, debugId, env };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/// <reference path=\"../../../../typings/require.d.ts\" />\n\n//@ts-check\n(function () {\n\t'use strict';\n\n\t/**\n\t * @typedef {import('../../environment/common/argv').NativeParsedArgs} NativeParsedArgs\n\t *\n\t * @param {typeof import('path')} path\n\t * @param {typeof import('os')} os\n\t * @param {string} productName\n\t * @param {string} cwd\n\t */\n\tfunction factory(path, os, productName, cwd) {\n\n\t\t/**\n\t\t * @param {NativeParsedArgs} cliArgs\n\t\t *\n\t\t * @returns {string}\n\t\t */\n\t\tfunction getUserDataPath(cliArgs) {\n\t\t\tconst userDataPath = doGetUserDataPath(cliArgs);\n\t\t\tconst pathsToResolve = [userDataPath];\n\n\t\t\t// If the user-data-path is not absolute, make\n\t\t\t// sure to resolve it against the passed in\n\t\t\t// current working directory. We cannot use the\n\t\t\t// node.js `path.resolve()` logic because it will\n\t\t\t// not pick up our `VSCODE_CWD` environment variable\n\t\t\t// (https://github.com/microsoft/vscode/issues/120269)\n\t\t\tif (!path.isAbsolute(userDataPath)) {\n\t\t\t\tpathsToResolve.unshift(cwd);\n\t\t\t}\n\n\t\t\treturn path.resolve(...pathsToResolve);\n\t\t}\n\n\t\t/**\n\t\t * @param {NativeParsedArgs} cliArgs\n\t\t *\n\t\t * @returns {string}\n\t\t */\n\t\tfunction doGetUserDataPath(cliArgs) {\n\n\t\t\t// 1. Support portable mode\n\t\t\tconst portablePath = process.env['VSCODE_PORTABLE'];\n\t\t\tif (portablePath) {\n\t\t\t\treturn path.join(portablePath, 'user-data');\n\t\t\t}\n\n\t\t\t// 2. Support global VSCODE_APPDATA environment variable\n\t\t\tlet appDataPath = process.env['VSCODE_APPDATA'];\n\t\t\tif (appDataPath) {\n\t\t\t\treturn path.join(appDataPath, productName);\n\t\t\t}\n\n\t\t\t// With Electron>=13 --user-data-dir switch will be propagated to\n\t\t\t// all processes https://github.com/electron/electron/blob/1897b14af36a02e9aa7e4d814159303441548251/shell/browser/electron_browser_client.cc#L546-L553\n\t\t\t// Check VSCODE_PORTABLE and VSCODE_APPDATA before this case to get correct values.\n\t\t\t// 3. Support explicit --user-data-dir\n\t\t\tconst cliPath = cliArgs['user-data-dir'];\n\t\t\tif (cliPath) {\n\t\t\t\treturn cliPath;\n\t\t\t}\n\n\t\t\t// 4. Otherwise check per platform\n\t\t\tswitch (process.platform) {\n\t\t\t\tcase 'win32':\n\t\t\t\t\tappDataPath = process.env['APPDATA'];\n\t\t\t\t\tif (!appDataPath) {\n\t\t\t\t\t\tconst userProfile = process.env['USERPROFILE'];\n\t\t\t\t\t\tif (typeof userProfile !== 'string') {\n\t\t\t\t\t\t\tthrow new Error('Windows: Unexpected undefined %USERPROFILE% environment variable');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tappDataPath = path.join(userProfile, 'AppData', 'Roaming');\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'darwin':\n\t\t\t\t\tappDataPath = path.join(os.homedir(), 'Library', 'Application Support');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'linux':\n\t\t\t\t\tappDataPath = process.env['XDG_CONFIG_HOME'] || path.join(os.homedir(), '.config');\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Platform not supported');\n\t\t\t}\n\n\t\t\treturn path.join(appDataPath, productName);\n\t\t}\n\n\t\treturn {\n\t\t\tgetUserDataPath\n\t\t};\n\t}\n\n\tif (typeof define === 'function') {\n\t\tdefine(__m[88/*vs/platform/environment/node/userDataPath*/], __M([0/*require*/,132/*path*/,33/*os*/,10/*vs/base/common/network*/,18/*vs/base/common/resources*/,28/*vs/base/common/process*/]), function (\n\t\t\trequire,\n\t\t\t/** @type {typeof import('path')} */ path,\n\t\t\t/** @type {typeof import('os')} */ os,\n\t\t\t/** @type {typeof import('../../../base/common/network')} */ network,\n\t\t\t/** @type {typeof import(\"../../../base/common/resources\")} */ resources,\n\t\t\t/** @type {typeof import(\"../../../base/common/process\")} */ process\n\t\t) {\n\t\t\tconst rootPath = resources.dirname(network.FileAccess.asFileUri('', require));\n\t\t\tconst pkg = require.__$__nodeRequire(resources.joinPath(rootPath, 'package.json').fsPath);\n\n\t\t\treturn factory(path, os, pkg.name, process.cwd());\n\t\t}); // amd\n\t} else if (typeof module === 'object' && typeof module.exports === 'object') {\n\t\tconst pkg = require('../../../../../package.json');\n\t\tconst path = require('path');\n\t\tconst os = require('os');\n\n\t\tmodule.exports = factory(path, os, pkg.name, process.env['VSCODE_CWD'] || process.cwd()); // commonjs\n\t} else {\n\t\tthrow new Error('Unknown context');\n\t}\n}());\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { homedir, tmpdir } from 'os';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { AbstractNativeEnvironmentService } from 'vs/platform/environment/common/environmentService';\nimport { getUserDataPath } from 'vs/platform/environment/node/userDataPath';\nimport { IProductService } from 'vs/platform/product/common/productService';\n\nexport class NativeEnvironmentService extends AbstractNativeEnvironmentService {\n\n\tconstructor(args: NativeParsedArgs, productService: IProductService) {\n\t\tsuper(args, {\n\t\t\thomeDir: homedir(),\n\t\t\ttmpDir: tmpdir(),\n\t\t\tuserDataDir: getUserDataPath(args)\n\t\t}, productService);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { cloneAndChange } from 'vs/base/common/objects';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\nconst nlsRegex = /^%([\\w\\d.-]+)%$/i;\n\nexport interface ITranslations {\n\t[key: string]: string | { message: string; comment: string[] };\n}\n\nexport function localizeManifest(manifest: IExtensionManifest, translations: ITranslations): IExtensionManifest {\n\tconst patcher = (value: string): string | undefined => {\n\t\tif (typeof value !== 'string') {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst match = nlsRegex.exec(value);\n\n\t\tif (!match) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst translation = translations[match[1]] ?? value;\n\t\treturn typeof translation === 'string' ? translation : (typeof translation.message === 'string' ? translation.message : value);\n\t};\n\n\treturn cloneAndChange(manifest, patcher);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\n\nexport interface IParsedVersion {\n\thasCaret: boolean;\n\thasGreaterEquals: boolean;\n\tmajorBase: number;\n\tmajorMustEqual: boolean;\n\tminorBase: number;\n\tminorMustEqual: boolean;\n\tpatchBase: number;\n\tpatchMustEqual: boolean;\n\tpreRelease: string | null;\n}\n\nexport interface INormalizedVersion {\n\tmajorBase: number;\n\tmajorMustEqual: boolean;\n\tminorBase: number;\n\tminorMustEqual: boolean;\n\tpatchBase: number;\n\tpatchMustEqual: boolean;\n\tnotBefore: number; /* milliseconds timestamp, or 0 */\n\tisMinimum: boolean;\n}\n\nconst VERSION_REGEXP = /^(\\^|>=)?((\\d+)|x)\\.((\\d+)|x)\\.((\\d+)|x)(\\-.*)?$/;\nconst NOT_BEFORE_REGEXP = /^-(\\d{4})(\\d{2})(\\d{2})$/;\n\nexport function isValidVersionStr(version: string): boolean {\n\tversion = version.trim();\n\treturn (version === '*' || VERSION_REGEXP.test(version));\n}\n\nexport function parseVersion(version: string): IParsedVersion | null {\n\tif (!isValidVersionStr(version)) {\n\t\treturn null;\n\t}\n\n\tversion = version.trim();\n\n\tif (version === '*') {\n\t\treturn {\n\t\t\thasCaret: false,\n\t\t\thasGreaterEquals: false,\n\t\t\tmajorBase: 0,\n\t\t\tmajorMustEqual: false,\n\t\t\tminorBase: 0,\n\t\t\tminorMustEqual: false,\n\t\t\tpatchBase: 0,\n\t\t\tpatchMustEqual: false,\n\t\t\tpreRelease: null\n\t\t};\n\t}\n\n\tlet m = version.match(VERSION_REGEXP);\n\tif (!m) {\n\t\treturn null;\n\t}\n\treturn {\n\t\thasCaret: m[1] === '^',\n\t\thasGreaterEquals: m[1] === '>=',\n\t\tmajorBase: m[2] === 'x' ? 0 : parseInt(m[2], 10),\n\t\tmajorMustEqual: (m[2] === 'x' ? false : true),\n\t\tminorBase: m[4] === 'x' ? 0 : parseInt(m[4], 10),\n\t\tminorMustEqual: (m[4] === 'x' ? false : true),\n\t\tpatchBase: m[6] === 'x' ? 0 : parseInt(m[6], 10),\n\t\tpatchMustEqual: (m[6] === 'x' ? false : true),\n\t\tpreRelease: m[8] || null\n\t};\n}\n\nexport function normalizeVersion(version: IParsedVersion | null): INormalizedVersion | null {\n\tif (!version) {\n\t\treturn null;\n\t}\n\n\tlet majorBase = version.majorBase,\n\t\tmajorMustEqual = version.majorMustEqual,\n\t\tminorBase = version.minorBase,\n\t\tminorMustEqual = version.minorMustEqual,\n\t\tpatchBase = version.patchBase,\n\t\tpatchMustEqual = version.patchMustEqual;\n\n\tif (version.hasCaret) {\n\t\tif (majorBase === 0) {\n\t\t\tpatchMustEqual = false;\n\t\t} else {\n\t\t\tminorMustEqual = false;\n\t\t\tpatchMustEqual = false;\n\t\t}\n\t}\n\n\tlet notBefore = 0;\n\tif (version.preRelease) {\n\t\tconst match = NOT_BEFORE_REGEXP.exec(version.preRelease);\n\t\tif (match) {\n\t\t\tconst [, year, month, day] = match;\n\t\t\tnotBefore = Date.UTC(Number(year), Number(month) - 1, Number(day));\n\t\t}\n\t}\n\n\treturn {\n\t\tmajorBase: majorBase,\n\t\tmajorMustEqual: majorMustEqual,\n\t\tminorBase: minorBase,\n\t\tminorMustEqual: minorMustEqual,\n\t\tpatchBase: patchBase,\n\t\tpatchMustEqual: patchMustEqual,\n\t\tisMinimum: version.hasGreaterEquals,\n\t\tnotBefore,\n\t};\n}\n\nexport function isValidVersion(_inputVersion: string | INormalizedVersion, _inputDate: ProductDate, _desiredVersion: string | INormalizedVersion): boolean {\n\tlet version: INormalizedVersion | null;\n\tif (typeof _inputVersion === 'string') {\n\t\tversion = normalizeVersion(parseVersion(_inputVersion));\n\t} else {\n\t\tversion = _inputVersion;\n\t}\n\n\tlet productTs: number | undefined;\n\tif (_inputDate instanceof Date) {\n\t\tproductTs = _inputDate.getTime();\n\t} else if (typeof _inputDate === 'string') {\n\t\tproductTs = new Date(_inputDate).getTime();\n\t}\n\n\tlet desiredVersion: INormalizedVersion | null;\n\tif (typeof _desiredVersion === 'string') {\n\t\tdesiredVersion = normalizeVersion(parseVersion(_desiredVersion));\n\t} else {\n\t\tdesiredVersion = _desiredVersion;\n\t}\n\n\tif (!version || !desiredVersion) {\n\t\treturn false;\n\t}\n\n\tlet majorBase = version.majorBase;\n\tlet minorBase = version.minorBase;\n\tlet patchBase = version.patchBase;\n\n\tlet desiredMajorBase = desiredVersion.majorBase;\n\tlet desiredMinorBase = desiredVersion.minorBase;\n\tlet desiredPatchBase = desiredVersion.patchBase;\n\tlet desiredNotBefore = desiredVersion.notBefore;\n\n\tlet majorMustEqual = desiredVersion.majorMustEqual;\n\tlet minorMustEqual = desiredVersion.minorMustEqual;\n\tlet patchMustEqual = desiredVersion.patchMustEqual;\n\n\tif (desiredVersion.isMinimum) {\n\t\tif (majorBase > desiredMajorBase) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (majorBase < desiredMajorBase) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (minorBase > desiredMinorBase) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (minorBase < desiredMinorBase) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (productTs && productTs < desiredNotBefore) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn patchBase >= desiredPatchBase;\n\t}\n\n\t// Anything < 1.0.0 is compatible with >= 1.0.0, except exact matches\n\tif (majorBase === 1 && desiredMajorBase === 0 && (!majorMustEqual || !minorMustEqual || !patchMustEqual)) {\n\t\tdesiredMajorBase = 1;\n\t\tdesiredMinorBase = 0;\n\t\tdesiredPatchBase = 0;\n\t\tmajorMustEqual = true;\n\t\tminorMustEqual = false;\n\t\tpatchMustEqual = false;\n\t}\n\n\tif (majorBase < desiredMajorBase) {\n\t\t// smaller major version\n\t\treturn false;\n\t}\n\n\tif (majorBase > desiredMajorBase) {\n\t\t// higher major version\n\t\treturn (!majorMustEqual);\n\t}\n\n\t// at this point, majorBase are equal\n\n\tif (minorBase < desiredMinorBase) {\n\t\t// smaller minor version\n\t\treturn false;\n\t}\n\n\tif (minorBase > desiredMinorBase) {\n\t\t// higher minor version\n\t\treturn (!minorMustEqual);\n\t}\n\n\t// at this point, minorBase are equal\n\n\tif (patchBase < desiredPatchBase) {\n\t\t// smaller patch version\n\t\treturn false;\n\t}\n\n\tif (patchBase > desiredPatchBase) {\n\t\t// higher patch version\n\t\treturn (!patchMustEqual);\n\t}\n\n\t// at this point, patchBase are equal\n\n\tif (productTs && productTs < desiredNotBefore) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\nexport interface IReducedExtensionDescription {\n\tisBuiltin: boolean;\n\tengines: {\n\t\tvscode: string;\n\t};\n\tmain?: string;\n}\n\ntype ProductDate = string | Date | undefined;\n\nexport function isValidExtensionVersion(version: string, date: ProductDate, extensionDesc: IReducedExtensionDescription, notices: string[]): boolean {\n\n\tif (extensionDesc.isBuiltin || typeof extensionDesc.main === 'undefined') {\n\t\t// No version check for builtin or declarative extensions\n\t\treturn true;\n\t}\n\n\treturn isVersionValid(version, date, extensionDesc.engines.vscode, notices);\n}\n\nexport function isEngineValid(engine: string, version: string, date: ProductDate): boolean {\n\t// TODO@joao: discuss with alex '*' doesn't seem to be a valid engine version\n\treturn engine === '*' || isVersionValid(version, date, engine);\n}\n\nfunction isVersionValid(currentVersion: string, date: ProductDate, requestedVersion: string, notices: string[] = []): boolean {\n\n\tlet desiredVersion = normalizeVersion(parseVersion(requestedVersion));\n\tif (!desiredVersion) {\n\t\tnotices.push(nls.localize('versionSyntax', \"Could not parse `engines.vscode` value {0}. Please use, for example: ^1.22.0, ^1.22.x, etc.\", requestedVersion));\n\t\treturn false;\n\t}\n\n\t// enforce that a breaking API version is specified.\n\t// for 0.X.Y, that means up to 0.X must be specified\n\t// otherwise for Z.X.Y, that means Z must be specified\n\tif (desiredVersion.majorBase === 0) {\n\t\t// force that major and minor must be specific\n\t\tif (!desiredVersion.majorMustEqual || !desiredVersion.minorMustEqual) {\n\t\t\tnotices.push(nls.localize('versionSpecificity1', \"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions before 1.0.0, please define at a minimum the major and minor desired version. E.g. ^0.10.0, 0.10.x, 0.11.0, etc.\", requestedVersion));\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\t// force that major must be specific\n\t\tif (!desiredVersion.majorMustEqual) {\n\t\t\tnotices.push(nls.localize('versionSpecificity2', \"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions after 1.0.0, please define at a minimum the major desired version. E.g. ^1.10.0, 1.10.x, 1.x.x, 2.x.x, etc.\", requestedVersion));\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tif (!isValidVersion(currentVersion, date, desiredVersion)) {\n\t\tnotices.push(nls.localize('versionMismatch', \"Extension is not compatible with Code {0}. Extension requires: {1}.\", currentVersion, requestedVersion));\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport class SyncDescriptor<T> {\n\n\treadonly ctor: any;\n\treadonly staticArguments: any[];\n\treadonly supportsDelayedInstantiation: boolean;\n\n\tconstructor(ctor: new (...args: any[]) => T, staticArguments: any[] = [], supportsDelayedInstantiation: boolean = false) {\n\t\tthis.ctor = ctor;\n\t\tthis.staticArguments = staticArguments;\n\t\tthis.supportsDelayedInstantiation = supportsDelayedInstantiation;\n\t}\n}\n\nexport interface SyncDescriptor0<T> {\n\tctor: any;\n\tbind(): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor1<A1, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor2<A1, A2, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor1<A2, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor3<A1, A2, A3, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor2<A2, A3, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor1<A3, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor4<A1, A2, A3, A4, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor3<A2, A3, A4, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor2<A3, A4, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor1<A4, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor5<A1, A2, A3, A4, A5, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor4<A2, A3, A4, A5, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor3<A3, A4, A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor2<A4, A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor1<A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor6<A1, A2, A3, A4, A5, A6, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor5<A2, A3, A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor4<A3, A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor3<A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor2<A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor1<A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor6<A2, A3, A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor5<A3, A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor4<A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor3<A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor2<A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor1<A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor7<A2, A3, A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor6<A3, A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor5<A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor4<A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor3<A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor2<A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor1<A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): SyncDescriptor0<T>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { SyncDescriptor } from './descriptors';\nimport { BrandedService, ServiceIdentifier } from './instantiation';\n\nconst _registry: [ServiceIdentifier<any>, SyncDescriptor<any>][] = [];\n\nexport function registerSingleton<T, Services extends BrandedService[]>(id: ServiceIdentifier<T>, ctor: new (...services: Services) => T, supportsDelayedInstantiation?: boolean): void;\nexport function registerSingleton<T, Services extends BrandedService[]>(id: ServiceIdentifier<T>, descriptor: SyncDescriptor<any>): void;\nexport function registerSingleton<T, Services extends BrandedService[]>(id: ServiceIdentifier<T>, ctorOrDescriptor: { new(...services: Services): T } | SyncDescriptor<any>, supportsDelayedInstantiation?: boolean): void {\n\tif (!(ctorOrDescriptor instanceof SyncDescriptor)) {\n\t\tctorOrDescriptor = new SyncDescriptor<T>(ctorOrDescriptor as new (...args: any[]) => T, [], supportsDelayedInstantiation);\n\t}\n\n\t_registry.push([id, ctorOrDescriptor]);\n}\n\nexport function getSingletonServiceDescriptors(): [ServiceIdentifier<any>, SyncDescriptor<any>][] {\n\treturn _registry;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport class Node<T> {\n\n\treadonly data: T;\n\treadonly incoming = new Map<string, Node<T>>();\n\treadonly outgoing = new Map<string, Node<T>>();\n\n\tconstructor(data: T) {\n\t\tthis.data = data;\n\t}\n}\n\nexport class Graph<T> {\n\n\tprivate readonly _nodes = new Map<string, Node<T>>();\n\n\tconstructor(private readonly _hashFn: (element: T) => string) {\n\t\t// empty\n\t}\n\n\troots(): Node<T>[] {\n\t\tconst ret: Node<T>[] = [];\n\t\tfor (let node of this._nodes.values()) {\n\t\t\tif (node.outgoing.size === 0) {\n\t\t\t\tret.push(node);\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\tinsertEdge(from: T, to: T): void {\n\t\tconst fromNode = this.lookupOrInsertNode(from);\n\t\tconst toNode = this.lookupOrInsertNode(to);\n\n\t\tfromNode.outgoing.set(this._hashFn(to), toNode);\n\t\ttoNode.incoming.set(this._hashFn(from), fromNode);\n\t}\n\n\tremoveNode(data: T): void {\n\t\tconst key = this._hashFn(data);\n\t\tthis._nodes.delete(key);\n\t\tfor (let node of this._nodes.values()) {\n\t\t\tnode.outgoing.delete(key);\n\t\t\tnode.incoming.delete(key);\n\t\t}\n\t}\n\n\tlookupOrInsertNode(data: T): Node<T> {\n\t\tconst key = this._hashFn(data);\n\t\tlet node = this._nodes.get(key);\n\n\t\tif (!node) {\n\t\t\tnode = new Node(data);\n\t\t\tthis._nodes.set(key, node);\n\t\t}\n\n\t\treturn node;\n\t}\n\n\tlookup(data: T): Node<T> | undefined {\n\t\treturn this._nodes.get(this._hashFn(data));\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._nodes.size === 0;\n\t}\n\n\ttoString(): string {\n\t\tlet data: string[] = [];\n\t\tfor (let [key, value] of this._nodes) {\n\t\t\tdata.push(`${key}, (incoming)[${[...value.incoming.keys()].join(', ')}], (outgoing)[${[...value.outgoing.keys()].join(',')}]`);\n\n\t\t}\n\t\treturn data.join('\\n');\n\t}\n\n\t/**\n\t * This is brute force and slow and **only** be used\n\t * to trouble shoot.\n\t */\n\tfindCycleSlow() {\n\t\tfor (let [id, node] of this._nodes) {\n\t\t\tconst seen = new Set<string>([id]);\n\t\t\tconst res = this._findCycle(node, seen);\n\t\t\tif (res) {\n\t\t\t\treturn res;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate _findCycle(node: Node<T>, seen: Set<string>): string | undefined {\n\t\tfor (let [id, outgoing] of node.outgoing) {\n\t\t\tif (seen.has(id)) {\n\t\t\t\treturn [...seen, id].join(' -> ');\n\t\t\t}\n\t\t\tseen.add(id);\n\t\t\tconst value = this._findCycle(outgoing, seen);\n\t\t\tif (value) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tseen.delete(id);\n\t\t}\n\t\treturn undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport * as types from 'vs/base/common/types';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\n\nexport const IConfigurationService = createDecorator<IConfigurationService>('configurationService');\n\nexport function isConfigurationOverrides(thing: any): thing is IConfigurationOverrides {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& (!thing.overrideIdentifier || typeof thing.overrideIdentifier === 'string')\n\t\t&& (!thing.resource || thing.resource instanceof URI);\n}\n\nexport interface IConfigurationOverrides {\n\toverrideIdentifier?: string | null;\n\tresource?: URI | null;\n}\n\nexport function isConfigurationUpdateOverrides(thing: any): thing is IConfigurationUpdateOverrides {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& (!thing.overrideIdentifiers || types.isArray(thing.overrideIdentifiers))\n\t\t&& !thing.overrideIdentifier\n\t\t&& (!thing.resource || thing.resource instanceof URI);\n}\n\nexport type IConfigurationUpdateOverrides = Omit<IConfigurationOverrides, 'overrideIdentifier'> & { overrideIdentifiers?: string[] | null; };\n\nexport const enum ConfigurationTarget {\n\tUSER = 1,\n\tUSER_LOCAL,\n\tUSER_REMOTE,\n\tWORKSPACE,\n\tWORKSPACE_FOLDER,\n\tDEFAULT,\n\tMEMORY\n}\nexport function ConfigurationTargetToString(configurationTarget: ConfigurationTarget) {\n\tswitch (configurationTarget) {\n\t\tcase ConfigurationTarget.USER: return 'USER';\n\t\tcase ConfigurationTarget.USER_LOCAL: return 'USER_LOCAL';\n\t\tcase ConfigurationTarget.USER_REMOTE: return 'USER_REMOTE';\n\t\tcase ConfigurationTarget.WORKSPACE: return 'WORKSPACE';\n\t\tcase ConfigurationTarget.WORKSPACE_FOLDER: return 'WORKSPACE_FOLDER';\n\t\tcase ConfigurationTarget.DEFAULT: return 'DEFAULT';\n\t\tcase ConfigurationTarget.MEMORY: return 'MEMORY';\n\t}\n}\n\nexport interface IConfigurationChange {\n\tkeys: string[];\n\toverrides: [string, string[]][];\n}\n\nexport interface IConfigurationChangeEvent {\n\n\treadonly source: ConfigurationTarget;\n\treadonly affectedKeys: string[];\n\treadonly change: IConfigurationChange;\n\n\taffectsConfiguration(configuration: string, overrides?: IConfigurationOverrides): boolean;\n\n\t// Following data is used for telemetry\n\treadonly sourceConfig: any;\n}\n\nexport interface IConfigurationValue<T> {\n\n\treadonly defaultValue?: T;\n\treadonly userValue?: T;\n\treadonly userLocalValue?: T;\n\treadonly userRemoteValue?: T;\n\treadonly workspaceValue?: T;\n\treadonly workspaceFolderValue?: T;\n\treadonly memoryValue?: T;\n\treadonly value?: T;\n\n\treadonly default?: { value?: T, override?: T };\n\treadonly user?: { value?: T, override?: T };\n\treadonly userLocal?: { value?: T, override?: T };\n\treadonly userRemote?: { value?: T, override?: T };\n\treadonly workspace?: { value?: T, override?: T };\n\treadonly workspaceFolder?: { value?: T, override?: T };\n\treadonly memory?: { value?: T, override?: T };\n\n\treadonly overrideIdentifiers?: string[];\n}\n\nexport interface IConfigurationService {\n\treadonly _serviceBrand: undefined;\n\n\tonDidChangeConfiguration: Event<IConfigurationChangeEvent>;\n\n\tgetConfigurationData(): IConfigurationData | null;\n\n\t/**\n\t * Fetches the value of the section for the given overrides.\n\t * Value can be of native type or an object keyed off the section name.\n\t *\n\t * @param section - Section of the configuraion. Can be `null` or `undefined`.\n\t * @param overrides - Overrides that has to be applied while fetching\n\t *\n\t */\n\tgetValue<T>(): T;\n\tgetValue<T>(section: string): T;\n\tgetValue<T>(overrides: IConfigurationOverrides): T;\n\tgetValue<T>(section: string, overrides: IConfigurationOverrides): T;\n\n\tupdateValue(key: string, value: any): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides | IConfigurationUpdateOverrides): Promise<void>;\n\tupdateValue(key: string, value: any, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides | IConfigurationUpdateOverrides, target: ConfigurationTarget, donotNotifyError?: boolean): Promise<void>;\n\n\tinspect<T>(key: string, overrides?: IConfigurationOverrides): IConfigurationValue<Readonly<T>>;\n\n\treloadConfiguration(target?: ConfigurationTarget | IWorkspaceFolder): Promise<void>;\n\n\tkeys(): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t\tmemory?: string[];\n\t};\n}\n\nexport interface IConfigurationModel {\n\tcontents: any;\n\tkeys: string[];\n\toverrides: IOverrides[];\n}\n\nexport interface IOverrides {\n\tkeys: string[];\n\tcontents: any;\n\tidentifiers: string[];\n}\n\nexport interface IConfigurationData {\n\tdefaults: IConfigurationModel;\n\tuser: IConfigurationModel;\n\tworkspace: IConfigurationModel;\n\tfolders: [UriComponents, IConfigurationModel][];\n}\n\nexport interface IConfigurationCompareResult {\n\tadded: string[];\n\tremoved: string[];\n\tupdated: string[];\n\toverrides: [string, string[]][];\n}\n\nexport function toValuesTree(properties: { [qualifiedKey: string]: any }, conflictReporter: (message: string) => void): any {\n\tconst root = Object.create(null);\n\n\tfor (let key in properties) {\n\t\taddToValueTree(root, key, properties[key], conflictReporter);\n\t}\n\n\treturn root;\n}\n\nexport function addToValueTree(settingsTreeRoot: any, key: string, value: any, conflictReporter: (message: string) => void): void {\n\tconst segments = key.split('.');\n\tconst last = segments.pop()!;\n\n\tlet curr = settingsTreeRoot;\n\tfor (let i = 0; i < segments.length; i++) {\n\t\tlet s = segments[i];\n\t\tlet obj = curr[s];\n\t\tswitch (typeof obj) {\n\t\t\tcase 'undefined':\n\t\t\t\tobj = curr[s] = Object.create(null);\n\t\t\t\tbreak;\n\t\t\tcase 'object':\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconflictReporter(`Ignoring ${key} as ${segments.slice(0, i + 1).join('.')} is ${JSON.stringify(obj)}`);\n\t\t\t\treturn;\n\t\t}\n\t\tcurr = obj;\n\t}\n\n\tif (typeof curr === 'object' && curr !== null) {\n\t\ttry {\n\t\t\tcurr[last] = value; // workaround https://github.com/microsoft/vscode/issues/13606\n\t\t} catch (e) {\n\t\t\tconflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n\t\t}\n\t} else {\n\t\tconflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n\t}\n}\n\nexport function removeFromValueTree(valueTree: any, key: string): void {\n\tconst segments = key.split('.');\n\tdoRemoveFromValueTree(valueTree, segments);\n}\n\nfunction doRemoveFromValueTree(valueTree: any, segments: string[]): void {\n\tconst first = segments.shift()!;\n\tif (segments.length === 0) {\n\t\t// Reached last segment\n\t\tdelete valueTree[first];\n\t\treturn;\n\t}\n\n\tif (Object.keys(valueTree).indexOf(first) !== -1) {\n\t\tconst value = valueTree[first];\n\t\tif (typeof value === 'object' && !Array.isArray(value)) {\n\t\t\tdoRemoveFromValueTree(value, segments);\n\t\t\tif (Object.keys(value).length === 0) {\n\t\t\t\tdelete valueTree[first];\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * A helper function to get the configuration value with a specific settings path (e.g. config.some.setting)\n */\nexport function getConfigurationValue<T>(config: any, settingPath: string, defaultValue?: T): T {\n\tfunction accessSetting(config: any, path: string[]): any {\n\t\tlet current = config;\n\t\tfor (const component of path) {\n\t\t\tif (typeof current !== 'object' || current === null) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tcurrent = current[component];\n\t\t}\n\t\treturn <T>current;\n\t}\n\n\tconst path = settingPath.split('.');\n\tconst result = accessSetting(config, path);\n\n\treturn typeof result === 'undefined' ? defaultValue : result;\n}\n\nexport function merge(base: any, add: any, overwrite: boolean): void {\n\tObject.keys(add).forEach(key => {\n\t\tif (key !== '__proto__') {\n\t\t\tif (key in base) {\n\t\t\t\tif (types.isObject(base[key]) && types.isObject(add[key])) {\n\t\t\t\t\tmerge(base[key], add[key], overwrite);\n\t\t\t\t} else if (overwrite) {\n\t\t\t\t\tbase[key] = add[key];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbase[key] = add[key];\n\t\t\t}\n\t\t}\n\t});\n}\n\nexport function getMigratedSettingValue<T>(configurationService: IConfigurationService, currentSettingName: string, legacySettingName: string): T {\n\tconst setting = configurationService.inspect<T>(currentSettingName);\n\tconst legacySetting = configurationService.inspect<T>(legacySettingName);\n\n\tif (typeof setting.userValue !== 'undefined' || typeof setting.workspaceValue !== 'undefined' || typeof setting.workspaceFolderValue !== 'undefined') {\n\t\treturn setting.value!;\n\t} else if (typeof legacySetting.userValue !== 'undefined' || typeof legacySetting.workspaceValue !== 'undefined' || typeof legacySetting.workspaceFolderValue !== 'undefined') {\n\t\treturn legacySetting.value!;\n\t} else {\n\t\treturn setting.defaultValue!;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IDownloadService = createDecorator<IDownloadService>('downloadService');\n\nexport interface IDownloadService {\n\n\treadonly _serviceBrand: undefined;\n\n\tdownload(uri: URI, to: URI, cancellationToken?: CancellationToken): Promise<void>;\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { ExtensionKind } from 'vs/platform/extensions/common/extensions';\nimport { createDecorator, refineServiceDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IEnvironmentService = createDecorator<IEnvironmentService>('environmentService');\nexport const INativeEnvironmentService = refineServiceDecorator<IEnvironmentService, INativeEnvironmentService>(IEnvironmentService);\n\nexport interface IDebugParams {\n\tport: number | null;\n\tbreak: boolean;\n}\n\nexport interface IExtensionHostDebugParams extends IDebugParams {\n\tdebugId?: string;\n\tenv?: Record<string, string>;\n}\n\n/**\n * A basic environment service that can be used in various processes,\n * such as main, renderer and shared process. Use subclasses of this\n * service for specific environment.\n */\nexport interface IEnvironmentService {\n\n\treadonly _serviceBrand: undefined;\n\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t//\n\t// NOTE: KEEP THIS INTERFACE AS SMALL AS POSSIBLE.\n\t//\n\t// AS SUCH:\n\t//   - PUT NON-WEB PROPERTIES INTO NATIVE ENVIRONMENT SERVICE\n\t//   - PUT WORKBENCH ONLY PROPERTIES INTO WORKBENCH ENVIRONMENT SERVICE\n\t//   - PUT ELECTRON-MAIN ONLY PROPERTIES INTO MAIN ENVIRONMENT SERVICE\n\t//\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n\t// --- user roaming data\n\tuserRoamingDataHome: URI;\n\tsettingsResource: URI;\n\tkeybindingsResource: URI;\n\tkeyboardLayoutResource: URI;\n\targvResource: URI;\n\tsnippetsHome: URI;\n\n\t// --- data paths\n\tuntitledWorkspacesHome: URI;\n\tglobalStorageHome: URI;\n\tworkspaceStorageHome: URI;\n\tcacheHome: URI;\n\n\t// --- settings sync\n\tuserDataSyncHome: URI;\n\tuserDataSyncLogResource: URI;\n\tsync: 'on' | 'off' | undefined;\n\n\t// --- extension development\n\tdebugExtensionHost: IExtensionHostDebugParams;\n\tisExtensionDevelopment: boolean;\n\tdisableExtensions: boolean | string[];\n\tenableExtensions?: readonly string[];\n\textensionDevelopmentLocationURI?: URI[];\n\textensionDevelopmentKind?: ExtensionKind[];\n\textensionTestsLocationURI?: URI;\n\n\t// --- logging\n\tlogsPath: string;\n\tlogLevel?: string;\n\tverbose: boolean;\n\tisBuilt: boolean;\n\n\t// --- telemetry\n\tdisableTelemetry: boolean;\n\ttelemetryLogResource: URI;\n\tserviceMachineIdResource: URI;\n\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t//\n\t// NOTE: KEEP THIS INTERFACE AS SMALL AS POSSIBLE.\n\t//\n\t// AS SUCH:\n\t//   - PUT NON-WEB PROPERTIES INTO NATIVE ENVIRONMENT SERVICE\n\t//   - PUT WORKBENCH ONLY PROPERTIES INTO WORKBENCH ENVIRONMENT SERVICE\n\t//   - PUT ELECTRON-MAIN ONLY PROPERTIES INTO MAIN ENVIRONMENT SERVICE\n\t//\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n}\n\n/**\n * A subclass of the `IEnvironmentService` to be used only in native\n * environments (Windows, Linux, macOS) but not e.g. web.\n */\nexport interface INativeEnvironmentService extends IEnvironmentService {\n\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t//\n\t// NOTE: KEEP THIS INTERFACE AS SMALL AS POSSIBLE.\n\t//\n\t// AS SUCH:\n\t//   - PUT WORKBENCH ONLY PROPERTIES INTO WORKBENCH ENVIRONMENT SERVICE\n\t//   - PUT ELECTRON-MAIN ONLY PROPERTIES INTO MAIN ENVIRONMENT SERVICE\n\t//\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n\t// --- CLI Arguments\n\targs: NativeParsedArgs;\n\n\t// --- data paths\n\tappRoot: string;\n\tuserHome: URI;\n\tappSettingsHome: URI;\n\ttmpDir: URI;\n\tuserDataPath: string;\n\tmachineSettingsResource: URI;\n\tinstallSourcePath: string;\n\n\t// --- extensions\n\textensionsPath: string;\n\textensionsDownloadPath: string;\n\tbuiltinExtensionsPath: string;\n\n\t// --- smoke test support\n\tdriverHandle?: string;\n\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t//\n\t// NOTE: KEEP THIS INTERFACE AS SMALL AS POSSIBLE.\n\t//\n\t// AS SUCH:\n\t//   - PUT NON-WEB PROPERTIES INTO NATIVE ENVIRONMENT SERVICE\n\t//   - PUT WORKBENCH ONLY PROPERTIES INTO WORKBENCH ENVIRONMENT SERVICE\n\t//   - PUT ELECTRON-MAIN ONLY PROPERTIES INTO MAIN ENVIRONMENT SERVICE\n\t//\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { Event } from 'vs/base/common/event';\nimport { FileAccess } from 'vs/base/common/network';\nimport { IPager } from 'vs/base/common/paging';\nimport { Platform } from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { ExtensionType, IExtension, IExtensionManifest } from 'vs/platform/extensions/common/extensions';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const EXTENSION_IDENTIFIER_PATTERN = '^([a-z0-9A-Z][a-z0-9-A-Z]*)\\\\.([a-z0-9A-Z][a-z0-9-A-Z]*)$';\nexport const EXTENSION_IDENTIFIER_REGEX = new RegExp(EXTENSION_IDENTIFIER_PATTERN);\nexport const WEB_EXTENSION_TAG = '__web_extension';\n\nexport const enum TargetPlatform {\n\tWIN32_X64 = 'win32-x64',\n\tWIN32_IA32 = 'win32-ia32',\n\tWIN32_ARM64 = 'win32-arm64',\n\n\tLINUX_X64 = 'linux-x64',\n\tLINUX_ARM64 = 'linux-arm64',\n\tLINUX_ARMHF = 'linux-armhf',\n\n\tALPINE_X64 = 'alpine-x64',\n\tALPINE_ARM64 = 'alpine-arm64',\n\n\tDARWIN_X64 = 'darwin-x64',\n\tDARWIN_ARM64 = 'darwin-arm64',\n\n\tWEB = 'web',\n\n\tUNIVERSAL = 'universal',\n\tUNKNOWN = 'unknown',\n\tUNDEFINED = 'undefined',\n}\n\nexport function TargetPlatformToString(targetPlatform: TargetPlatform) {\n\tswitch (targetPlatform) {\n\t\tcase TargetPlatform.WIN32_X64: return 'Windows 64 bit';\n\t\tcase TargetPlatform.WIN32_IA32: return 'Windows 32 bit';\n\t\tcase TargetPlatform.WIN32_ARM64: return 'Windows ARM';\n\n\t\tcase TargetPlatform.LINUX_X64: return 'Linux 64 bit';\n\t\tcase TargetPlatform.LINUX_ARM64: return 'Linux ARM 64';\n\t\tcase TargetPlatform.LINUX_ARMHF: return 'Linux ARM';\n\n\t\tcase TargetPlatform.ALPINE_X64: return 'Alpine Linux 64 bit';\n\t\tcase TargetPlatform.ALPINE_ARM64: return 'Alpine ARM 64';\n\n\t\tcase TargetPlatform.DARWIN_X64: return 'Mac';\n\t\tcase TargetPlatform.DARWIN_ARM64: return 'Mac Silicon';\n\n\t\tcase TargetPlatform.WEB: return 'Web';\n\n\t\tcase TargetPlatform.UNIVERSAL: return TargetPlatform.UNIVERSAL;\n\t\tcase TargetPlatform.UNKNOWN: return TargetPlatform.UNKNOWN;\n\t\tcase TargetPlatform.UNDEFINED: return TargetPlatform.UNDEFINED;\n\t}\n}\n\nexport function toTargetPlatform(targetPlatform: string): TargetPlatform {\n\tswitch (targetPlatform) {\n\t\tcase TargetPlatform.WIN32_X64: return TargetPlatform.WIN32_X64;\n\t\tcase TargetPlatform.WIN32_IA32: return TargetPlatform.WIN32_IA32;\n\t\tcase TargetPlatform.WIN32_ARM64: return TargetPlatform.WIN32_ARM64;\n\n\t\tcase TargetPlatform.LINUX_X64: return TargetPlatform.LINUX_X64;\n\t\tcase TargetPlatform.LINUX_ARM64: return TargetPlatform.LINUX_ARM64;\n\t\tcase TargetPlatform.LINUX_ARMHF: return TargetPlatform.LINUX_ARMHF;\n\n\t\tcase TargetPlatform.ALPINE_X64: return TargetPlatform.ALPINE_X64;\n\t\tcase TargetPlatform.ALPINE_ARM64: return TargetPlatform.ALPINE_ARM64;\n\n\t\tcase TargetPlatform.DARWIN_X64: return TargetPlatform.DARWIN_X64;\n\t\tcase TargetPlatform.DARWIN_ARM64: return TargetPlatform.DARWIN_ARM64;\n\n\t\tcase TargetPlatform.WEB: return TargetPlatform.WEB;\n\n\t\tcase TargetPlatform.UNIVERSAL: return TargetPlatform.UNIVERSAL;\n\t\tdefault: return TargetPlatform.UNKNOWN;\n\t}\n}\n\nexport function getTargetPlatform(platform: Platform | 'alpine', arch: string | undefined): TargetPlatform {\n\tswitch (platform) {\n\t\tcase Platform.Windows:\n\t\t\tif (arch === 'x64') {\n\t\t\t\treturn TargetPlatform.WIN32_X64;\n\t\t\t}\n\t\t\tif (arch === 'ia32') {\n\t\t\t\treturn TargetPlatform.WIN32_IA32;\n\t\t\t}\n\t\t\tif (arch === 'arm64') {\n\t\t\t\treturn TargetPlatform.WIN32_ARM64;\n\t\t\t}\n\t\t\treturn TargetPlatform.UNKNOWN;\n\n\t\tcase Platform.Linux:\n\t\t\tif (arch === 'x64') {\n\t\t\t\treturn TargetPlatform.LINUX_X64;\n\t\t\t}\n\t\t\tif (arch === 'arm64') {\n\t\t\t\treturn TargetPlatform.LINUX_ARM64;\n\t\t\t}\n\t\t\tif (arch === 'arm') {\n\t\t\t\treturn TargetPlatform.LINUX_ARMHF;\n\t\t\t}\n\t\t\treturn TargetPlatform.UNKNOWN;\n\n\t\tcase 'alpine':\n\t\t\tif (arch === 'x64') {\n\t\t\t\treturn TargetPlatform.ALPINE_X64;\n\t\t\t}\n\t\t\tif (arch === 'arm64') {\n\t\t\t\treturn TargetPlatform.ALPINE_ARM64;\n\t\t\t}\n\t\t\treturn TargetPlatform.UNKNOWN;\n\n\t\tcase Platform.Mac:\n\t\t\tif (arch === 'x64') {\n\t\t\t\treturn TargetPlatform.DARWIN_X64;\n\t\t\t}\n\t\t\tif (arch === 'arm64') {\n\t\t\t\treturn TargetPlatform.DARWIN_ARM64;\n\t\t\t}\n\t\t\treturn TargetPlatform.UNKNOWN;\n\n\t\tcase Platform.Web: return TargetPlatform.WEB;\n\t}\n}\n\nexport function isNotWebExtensionInWebTargetPlatform(allTargetPlatforms: TargetPlatform[], productTargetPlatform: TargetPlatform): boolean {\n\t// Not a web extension in web target platform\n\treturn productTargetPlatform === TargetPlatform.WEB && !allTargetPlatforms.includes(TargetPlatform.WEB);\n}\n\nexport function isTargetPlatformCompatible(extensionTargetPlatform: TargetPlatform, allTargetPlatforms: TargetPlatform[], productTargetPlatform: TargetPlatform): boolean {\n\t// Not compatible when extension is not a web extension in web target platform\n\tif (isNotWebExtensionInWebTargetPlatform(allTargetPlatforms, productTargetPlatform)) {\n\t\treturn false;\n\t}\n\n\t// Compatible when extension target platform is not defined\n\tif (extensionTargetPlatform === TargetPlatform.UNDEFINED) {\n\t\treturn true;\n\t}\n\n\t// Compatible when extension target platform is universal\n\tif (extensionTargetPlatform === TargetPlatform.UNIVERSAL) {\n\t\treturn true;\n\t}\n\n\t// Not compatible when extension target platform is unknown\n\tif (extensionTargetPlatform === TargetPlatform.UNKNOWN) {\n\t\treturn false;\n\t}\n\n\t// Compatible when extension and product target platforms matches\n\tif (extensionTargetPlatform === productTargetPlatform) {\n\t\treturn true;\n\t}\n\n\t// Fallback\n\tconst fallbackTargetPlatforms = getFallbackTargetPlarforms(productTargetPlatform);\n\treturn fallbackTargetPlatforms.includes(extensionTargetPlatform);\n}\n\nexport function getFallbackTargetPlarforms(targetPlatform: TargetPlatform): TargetPlatform[] {\n\tswitch (targetPlatform) {\n\t\tcase TargetPlatform.WIN32_X64: return [TargetPlatform.WIN32_IA32];\n\t\tcase TargetPlatform.WIN32_ARM64: return [TargetPlatform.WIN32_IA32];\n\t}\n\treturn [];\n}\n\nexport interface IGalleryExtensionProperties {\n\tdependencies?: string[];\n\textensionPack?: string[];\n\tengine?: string;\n\tlocalizedLanguages?: string[];\n\ttargetPlatform: TargetPlatform;\n\tisPreReleaseVersion: boolean;\n}\n\nexport interface IGalleryExtensionAsset {\n\turi: string;\n\tfallbackUri: string;\n}\n\nexport interface IGalleryExtensionAssets {\n\tmanifest: IGalleryExtensionAsset | null;\n\treadme: IGalleryExtensionAsset | null;\n\tchangelog: IGalleryExtensionAsset | null;\n\tlicense: IGalleryExtensionAsset | null;\n\trepository: IGalleryExtensionAsset | null;\n\tdownload: IGalleryExtensionAsset;\n\ticon: IGalleryExtensionAsset;\n\tcoreTranslations: [string, IGalleryExtensionAsset][];\n}\n\nexport function isIExtensionIdentifier(thing: any): thing is IExtensionIdentifier {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.id === 'string'\n\t\t&& (!thing.uuid || typeof thing.uuid === 'string');\n}\n\n/* __GDPR__FRAGMENT__\n\t\"ExtensionIdentifier\" : {\n\t\t\"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"uuid\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t}\n */\nexport interface IExtensionIdentifier {\n\tid: string;\n\tuuid?: string;\n}\n\nexport interface IExtensionIdentifierWithVersion extends IExtensionIdentifier {\n\tid: string;\n\tuuid?: string;\n\tversion: string;\n}\n\nexport interface IExtensionIdentifierWithPreRelease extends IExtensionIdentifier {\n\tpreRelease: boolean;\n}\n\nexport interface IGalleryExtensionIdentifier extends IExtensionIdentifier {\n\tuuid: string;\n}\n\nexport interface IGalleryExtensionVersion {\n\tversion: string;\n\tdate: string;\n\tisPreReleaseVersion: boolean;\n}\n\nexport interface IGalleryExtension {\n\tname: string;\n\tidentifier: IGalleryExtensionIdentifier;\n\tversion: string;\n\tdisplayName: string;\n\tpublisherId: string;\n\tpublisher: string;\n\tpublisherDisplayName: string;\n\tpublisherDomain?: { link: string, verified: boolean };\n\tdescription: string;\n\tinstallCount: number;\n\trating: number;\n\tratingCount: number;\n\tcategories: readonly string[];\n\ttags: readonly string[];\n\treleaseDate: number;\n\tlastUpdated: number;\n\tpreview: boolean;\n\thasPreReleaseVersion: boolean;\n\thasReleaseVersion: boolean;\n\tallTargetPlatforms: TargetPlatform[];\n\tassets: IGalleryExtensionAssets;\n\tproperties: IGalleryExtensionProperties;\n\ttelemetryData?: any;\n}\n\nexport interface IGalleryMetadata {\n\tid: string;\n\tpublisherId: string;\n\tpublisherDisplayName: string;\n\tisPreReleaseVersion: boolean,\n}\n\nexport type Metadata = Partial<IGalleryMetadata & { isMachineScoped: boolean; isBuiltin: boolean; preRelease: boolean, installedTimestamp: number }>;\n\nexport interface ILocalExtension extends IExtension {\n\tisMachineScoped: boolean;\n\tpublisherId: string | null;\n\tpublisherDisplayName: string | null;\n\tinstalledTimestamp?: number;\n\tisPreReleaseVersion: boolean;\n\tpreRelease: boolean;\n}\n\nexport const enum SortBy {\n\tNoneOrRelevance = 0,\n\tLastUpdatedDate = 1,\n\tTitle = 2,\n\tPublisherName = 3,\n\tInstallCount = 4,\n\tPublishedDate = 10,\n\tAverageRating = 6,\n\tWeightedRating = 12\n}\n\nexport const enum SortOrder {\n\tDefault = 0,\n\tAscending = 1,\n\tDescending = 2\n}\n\nexport interface IQueryOptions {\n\ttext?: string;\n\tids?: string[];\n\tnames?: string[];\n\tpageSize?: number;\n\tsortBy?: SortBy;\n\tsortOrder?: SortOrder;\n\tsource?: string;\n\tincludePreRelease?: boolean;\n}\n\nexport const enum StatisticType {\n\tInstall = 'install',\n\tUninstall = 'uninstall'\n}\n\nexport interface IExtensionsControlManifest {\n\tmalicious: IExtensionIdentifier[];\n\tunsupportedPreReleaseExtensions?: IStringDictionary<{ id: string, displayName: string }>;\n}\n\nexport const enum InstallOperation {\n\tNone = 1,\n\tInstall,\n\tUpdate,\n\tMigrate,\n}\n\nexport interface ITranslation {\n\tcontents: { [key: string]: {} };\n}\n\nexport const IExtensionGalleryService = createDecorator<IExtensionGalleryService>('extensionGalleryService');\nexport interface IExtensionGalleryService {\n\treadonly _serviceBrand: undefined;\n\tisEnabled(): boolean;\n\tquery(options: IQueryOptions, token: CancellationToken): Promise<IPager<IGalleryExtension>>;\n\tgetExtensions(identifiers: ReadonlyArray<IExtensionIdentifier | IExtensionIdentifierWithVersion>, token: CancellationToken): Promise<IGalleryExtension[]>;\n\tgetExtensions(identifiers: ReadonlyArray<IExtensionIdentifier | IExtensionIdentifierWithVersion>, includePreRelease: boolean, token: CancellationToken): Promise<IGalleryExtension[]>;\n\tgetExtensions2(identifiers: ReadonlyArray<IExtensionIdentifierWithPreRelease>): Promise<IGalleryExtension[]>;\n\tdownload(extension: IGalleryExtension, location: URI, operation: InstallOperation): Promise<void>;\n\treportStatistic(publisher: string, name: string, version: string, type: StatisticType): Promise<void>;\n\tgetReadme(extension: IGalleryExtension, token: CancellationToken): Promise<string>;\n\tgetManifest(extension: IGalleryExtension, token: CancellationToken): Promise<IExtensionManifest | null>;\n\tgetChangelog(extension: IGalleryExtension, token: CancellationToken): Promise<string>;\n\tgetCoreTranslation(extension: IGalleryExtension, languageId: string): Promise<ITranslation | null>;\n\tgetExtensionsControlManifest(): Promise<IExtensionsControlManifest>;\n\tisExtensionCompatible(extension: IGalleryExtension, includePreRelease: boolean, targetPlatform: TargetPlatform): Promise<boolean>;\n\tgetCompatibleExtension(extension: IGalleryExtension, includePreRelease: boolean, targetPlatform: TargetPlatform): Promise<IGalleryExtension | null>;\n\tgetCompatibleExtension(id: IExtensionIdentifier, includePreRelease: boolean, targetPlatform: TargetPlatform): Promise<IGalleryExtension | null>;\n\tgetAllCompatibleVersions(extension: IGalleryExtension, includePreRelease: boolean, targetPlatform: TargetPlatform): Promise<IGalleryExtensionVersion[]>;\n}\n\nexport interface InstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\tsource: URI | IGalleryExtension;\n}\n\nexport interface InstallExtensionResult {\n\treadonly identifier: IExtensionIdentifier;\n\treadonly operation: InstallOperation;\n\treadonly source?: URI | IGalleryExtension;\n\treadonly local?: ILocalExtension;\n}\n\nexport interface DidUninstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\terror?: string;\n}\n\nexport enum ExtensionManagementErrorCode {\n\tUnsupported = 'Unsupported',\n\tUnsupportedPreRelease = 'UnsupportedPreRelease',\n\tMalicious = 'Malicious',\n\tIncompatible = 'Incompatible',\n\tIncompatiblePreRelease = 'IncompatiblePreRelease',\n\tIncompatibleTargetPlatform = 'IncompatibleTargetPlatform',\n\tInvalid = 'Invalid',\n\tDownload = 'Download',\n\tExtract = 'Extract',\n\tDelete = 'Delete',\n\tRename = 'Rename',\n\tCorruptZip = 'CorruptZip',\n\tIncompleteZip = 'IncompleteZip',\n\tInternal = 'Internal',\n}\n\nexport class ExtensionManagementError extends Error {\n\tconstructor(message: string, readonly code: ExtensionManagementErrorCode) {\n\t\tsuper(message);\n\t\tthis.name = code;\n\t}\n}\n\nexport type InstallOptions = { isBuiltin?: boolean, isMachineScoped?: boolean, donotIncludePackAndDependencies?: boolean, installGivenVersion?: boolean, installPreReleaseVersion?: boolean };\nexport type InstallVSIXOptions = Omit<InstallOptions, 'installGivenVersion'> & { installOnlyNewlyAddedFromExtensionPack?: boolean };\nexport type UninstallOptions = { donotIncludePack?: boolean, donotCheckDependents?: boolean };\n\nexport interface IExtensionManagementParticipant {\n\tpostInstall(local: ILocalExtension, source: URI | IGalleryExtension, options: InstallOptions | InstallVSIXOptions, token: CancellationToken): Promise<void>;\n\tpostUninstall(local: ILocalExtension, options: UninstallOptions, token: CancellationToken): Promise<void>;\n}\n\nexport const IExtensionManagementService = createDecorator<IExtensionManagementService>('extensionManagementService');\nexport interface IExtensionManagementService {\n\treadonly _serviceBrand: undefined;\n\n\tonInstallExtension: Event<InstallExtensionEvent>;\n\tonDidInstallExtensions: Event<readonly InstallExtensionResult[]>;\n\tonUninstallExtension: Event<IExtensionIdentifier>;\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent>;\n\n\tzip(extension: ILocalExtension): Promise<URI>;\n\tunzip(zipLocation: URI): Promise<IExtensionIdentifier>;\n\tgetManifest(vsix: URI): Promise<IExtensionManifest>;\n\tinstall(vsix: URI, options?: InstallVSIXOptions): Promise<ILocalExtension>;\n\tcanInstall(extension: IGalleryExtension): Promise<boolean>;\n\tinstallFromGallery(extension: IGalleryExtension, options?: InstallOptions): Promise<ILocalExtension>;\n\tuninstall(extension: ILocalExtension, options?: UninstallOptions): Promise<void>;\n\treinstallFromGallery(extension: ILocalExtension): Promise<void>;\n\tgetInstalled(type?: ExtensionType, donotIgnoreInvalidExtensions?: boolean): Promise<ILocalExtension[]>;\n\tgetExtensionsControlManifest(): Promise<IExtensionsControlManifest>;\n\n\tupdateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension>;\n\tupdateExtensionScope(local: ILocalExtension, isMachineScoped: boolean): Promise<ILocalExtension>;\n\n\tregisterParticipant(pariticipant: IExtensionManagementParticipant): void;\n\tgetTargetPlatform(): Promise<TargetPlatform>;\n}\n\nexport const DISABLED_EXTENSIONS_STORAGE_PATH = 'extensionsIdentifiers/disabled';\nexport const ENABLED_EXTENSIONS_STORAGE_PATH = 'extensionsIdentifiers/enabled';\nexport const IGlobalExtensionEnablementService = createDecorator<IGlobalExtensionEnablementService>('IGlobalExtensionEnablementService');\n\nexport interface IGlobalExtensionEnablementService {\n\treadonly _serviceBrand: undefined;\n\treadonly onDidChangeEnablement: Event<{ readonly extensions: IExtensionIdentifier[], readonly source?: string }>;\n\n\tgetDisabledExtensions(): IExtensionIdentifier[];\n\tenableExtension(extension: IExtensionIdentifier, source?: string): Promise<boolean>;\n\tdisableExtension(extension: IExtensionIdentifier, source?: string): Promise<boolean>;\n\n}\n\nexport type IConfigBasedExtensionTip = {\n\treadonly extensionId: string,\n\treadonly extensionName: string,\n\treadonly isExtensionPack: boolean,\n\treadonly configName: string,\n\treadonly important: boolean,\n};\n\nexport type IExecutableBasedExtensionTip = {\n\treadonly extensionId: string,\n\treadonly extensionName: string,\n\treadonly isExtensionPack: boolean,\n\treadonly exeName: string,\n\treadonly exeFriendlyName: string,\n\treadonly windowsPath?: string,\n};\n\nexport type IWorkspaceTips = { readonly remoteSet: string[]; readonly recommendations: string[]; };\n\nexport const IExtensionTipsService = createDecorator<IExtensionTipsService>('IExtensionTipsService');\nexport interface IExtensionTipsService {\n\treadonly _serviceBrand: undefined;\n\n\tgetConfigBasedTips(folder: URI): Promise<IConfigBasedExtensionTip[]>;\n\tgetImportantExecutableBasedTips(): Promise<IExecutableBasedExtensionTip[]>;\n\tgetOtherExecutableBasedTips(): Promise<IExecutableBasedExtensionTip[]>;\n\tgetAllWorkspacesTips(): Promise<IWorkspaceTips[]>;\n}\n\n\nexport const DefaultIconPath = FileAccess.asBrowserUri('./media/defaultIcon.png', require).toString(true);\nexport const ExtensionsLabel = localize('extensions', \"Extensions\");\nexport const ExtensionsLocalizedLabel = { value: ExtensionsLabel, original: 'Extensions' };\nexport const ExtensionsChannelId = 'extensions';\nexport const PreferencesLabel = localize('preferences', \"Preferences\");\nexport const PreferencesLocalizedLabel = { value: PreferencesLabel, original: 'Preferences' };\n\n\nexport interface CLIOutput {\n\tlog(s: string): void;\n\terror(s: string): void;\n}\n\nexport const IExtensionManagementCLIService = createDecorator<IExtensionManagementCLIService>('IExtensionManagementCLIService');\nexport interface IExtensionManagementCLIService {\n\treadonly _serviceBrand: undefined;\n\n\tlistExtensions(showVersions: boolean, category?: string, output?: CLIOutput): Promise<void>;\n\tinstallExtensions(extensions: (string | URI)[], builtinExtensionIds: string[], installOptions: InstallOptions, force: boolean, output?: CLIOutput): Promise<void>;\n\tuninstallExtensions(extensions: (string | URI)[], force: boolean, output?: CLIOutput): Promise<void>;\n\tlocateExtension(extensions: string[], output?: CLIOutput): Promise<void>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { spawn } from 'child_process';\nimport { basename } from 'vs/base/common/path';\nimport { localize } from 'vs/nls';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { canceled, isPromiseCanceledError } from 'vs/base/common/errors';\nimport { IProcessEnvironment, isWindows, OS } from 'vs/base/common/platform';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { getSystemShell } from 'vs/base/node/shell';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { isLaunchedFromCli } from 'vs/platform/environment/node/argvHelper';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { Promises } from 'vs/base/common/async';\n\n/**\n * The maximum of time we accept to wait on resolving the shell\n * environment before giving up. This ensures we are not blocking\n * other tasks from running for a too long time period.\n */\nconst MAX_SHELL_RESOLVE_TIME = 10000;\n\nlet unixShellEnvPromise: Promise<typeof process.env> | undefined = undefined;\n\n/**\n * Resolves the shell environment by spawning a shell. This call will cache\n * the shell spawning so that subsequent invocations use that cached result.\n *\n * Will throw an error if:\n * - we hit a timeout of `MAX_SHELL_RESOLVE_TIME`\n * - any other error from spawning a shell to figure out the environment\n */\nexport async function getResolvedShellEnv(logService: ILogService, args: NativeParsedArgs, env: IProcessEnvironment): Promise<typeof process.env> {\n\n\t// Skip if --force-disable-user-env\n\tif (args['force-disable-user-env']) {\n\t\tlogService.trace('resolveShellEnv(): skipped (--force-disable-user-env)');\n\n\t\treturn {};\n\t}\n\n\t// Skip on windows\n\telse if (isWindows) {\n\t\tlogService.trace('resolveShellEnv(): skipped (Windows)');\n\n\t\treturn {};\n\t}\n\n\t// Skip if running from CLI already\n\telse if (isLaunchedFromCli(env) && !args['force-user-env']) {\n\t\tlogService.trace('resolveShellEnv(): skipped (VSCODE_CLI is set)');\n\n\t\treturn {};\n\t}\n\n\t// Otherwise resolve (macOS, Linux)\n\telse {\n\t\tif (isLaunchedFromCli(env)) {\n\t\t\tlogService.trace('resolveShellEnv(): running (--force-user-env)');\n\t\t} else {\n\t\t\tlogService.trace('resolveShellEnv(): running (macOS/Linux)');\n\t\t}\n\n\t\t// Call this only once and cache the promise for\n\t\t// subsequent calls since this operation can be\n\t\t// expensive (spawns a process).\n\t\tif (!unixShellEnvPromise) {\n\t\t\tunixShellEnvPromise = Promises.withAsyncBody<NodeJS.ProcessEnv>(async (resolve, reject) => {\n\t\t\t\tconst cts = new CancellationTokenSource();\n\n\t\t\t\t// Give up resolving shell env after some time\n\t\t\t\tconst timeout = setTimeout(() => {\n\t\t\t\t\tcts.dispose(true);\n\t\t\t\t\treject(new Error(localize('resolveShellEnvTimeout', \"Unable to resolve your shell environment in a reasonable time. Please review your shell configuration.\")));\n\t\t\t\t}, MAX_SHELL_RESOLVE_TIME);\n\n\t\t\t\t// Resolve shell env and handle errors\n\t\t\t\ttry {\n\t\t\t\t\tresolve(await doResolveUnixShellEnv(logService, cts.token));\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (!isPromiseCanceledError(error) && !cts.token.isCancellationRequested) {\n\t\t\t\t\t\treject(new Error(localize('resolveShellEnvError', \"Unable to resolve your shell environment: {0}\", toErrorMessage(error))));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve({});\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tclearTimeout(timeout);\n\t\t\t\t\tcts.dispose();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn unixShellEnvPromise;\n\t}\n}\n\nasync function doResolveUnixShellEnv(logService: ILogService, token: CancellationToken): Promise<typeof process.env> {\n\tconst runAsNode = process.env['ELECTRON_RUN_AS_NODE'];\n\tlogService.trace('getUnixShellEnvironment#runAsNode', runAsNode);\n\n\tconst noAttach = process.env['ELECTRON_NO_ATTACH_CONSOLE'];\n\tlogService.trace('getUnixShellEnvironment#noAttach', noAttach);\n\n\tconst mark = generateUuid().replace(/-/g, '').substr(0, 12);\n\tconst regex = new RegExp(mark + '(.*)' + mark);\n\n\tconst env = {\n\t\t...process.env,\n\t\tELECTRON_RUN_AS_NODE: '1',\n\t\tELECTRON_NO_ATTACH_CONSOLE: '1'\n\t};\n\n\tlogService.trace('getUnixShellEnvironment#env', env);\n\tconst systemShellUnix = await getSystemShell(OS, env);\n\tlogService.trace('getUnixShellEnvironment#shell', systemShellUnix);\n\n\treturn new Promise<typeof process.env>((resolve, reject) => {\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn reject(canceled());\n\t\t}\n\n\t\t// handle popular non-POSIX shells\n\t\tconst name = basename(systemShellUnix);\n\t\tlet command: string, shellArgs: Array<string>;\n\t\tconst extraArgs = (process.versions['electron'] && process.versions['microsoft-build']) ? '--ms-enable-electron-run-as-node' : '';\n\t\tif (/^pwsh(-preview)?$/.test(name)) {\n\t\t\t// Older versions of PowerShell removes double quotes sometimes so we use \"double single quotes\" which is how\n\t\t\t// you escape single quotes inside of a single quoted string.\n\t\t\tcommand = `& '${process.execPath}' ${extraArgs} -p '''${mark}'' + JSON.stringify(process.env) + ''${mark}'''`;\n\t\t\tshellArgs = ['-Login', '-Command'];\n\t\t} else {\n\t\t\tcommand = `'${process.execPath}' ${extraArgs} -p '\"${mark}\" + JSON.stringify(process.env) + \"${mark}\"'`;\n\n\t\t\tif (name === 'tcsh') {\n\t\t\t\tshellArgs = ['-ic'];\n\t\t\t} else {\n\t\t\t\tshellArgs = ['-ilc'];\n\t\t\t}\n\t\t}\n\n\t\tlogService.trace('getUnixShellEnvironment#spawn', JSON.stringify(shellArgs), command);\n\n\t\tconst child = spawn(systemShellUnix, [...shellArgs, command], {\n\t\t\tdetached: true,\n\t\t\tstdio: ['ignore', 'pipe', 'pipe'],\n\t\t\tenv\n\t\t});\n\n\t\ttoken.onCancellationRequested(() => {\n\t\t\tchild.kill();\n\n\t\t\treturn reject(canceled());\n\t\t});\n\n\t\tchild.on('error', err => {\n\t\t\tlogService.error('getUnixShellEnvironment#errorChildProcess', toErrorMessage(err));\n\t\t\treject(err);\n\t\t});\n\n\t\tconst buffers: Buffer[] = [];\n\t\tchild.stdout.on('data', b => buffers.push(b));\n\n\t\tconst stderr: Buffer[] = [];\n\t\tchild.stderr.on('data', b => stderr.push(b));\n\n\t\tchild.on('close', (code, signal) => {\n\t\t\tconst raw = Buffer.concat(buffers).toString('utf8');\n\t\t\tlogService.trace('getUnixShellEnvironment#raw', raw);\n\n\t\t\tconst stderrStr = Buffer.concat(stderr).toString('utf8');\n\t\t\tif (stderrStr.trim()) {\n\t\t\t\tlogService.trace('getUnixShellEnvironment#stderr', stderrStr);\n\t\t\t}\n\n\t\t\tif (code || signal) {\n\t\t\t\treturn reject(new Error(localize('resolveShellEnvExitError', \"Unexpected exit code from spawned shell (code {0}, signal {1})\", code, signal)));\n\t\t\t}\n\n\t\t\tconst match = regex.exec(raw);\n\t\t\tconst rawStripped = match ? match[1] : '{}';\n\n\t\t\ttry {\n\t\t\t\tconst env = JSON.parse(rawStripped);\n\n\t\t\t\tif (runAsNode) {\n\t\t\t\t\tenv['ELECTRON_RUN_AS_NODE'] = runAsNode;\n\t\t\t\t} else {\n\t\t\t\t\tdelete env['ELECTRON_RUN_AS_NODE'];\n\t\t\t\t}\n\n\t\t\t\tif (noAttach) {\n\t\t\t\t\tenv['ELECTRON_NO_ATTACH_CONSOLE'] = noAttach;\n\t\t\t\t} else {\n\t\t\t\t\tdelete env['ELECTRON_NO_ATTACH_CONSOLE'];\n\t\t\t\t}\n\n\t\t\t\t// https://github.com/microsoft/vscode/issues/22593#issuecomment-336050758\n\t\t\t\tdelete env['XDG_RUNTIME_DIR'];\n\n\t\t\t\tlogService.trace('getUnixShellEnvironment#result', env);\n\t\t\t\tresolve(env);\n\t\t\t} catch (err) {\n\t\t\t\tlogService.error('getUnixShellEnvironment#errorCaught', toErrorMessage(err));\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { IDataTransformer, IErrorTransformer, WriteableStream } from 'vs/base/common/stream';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { createFileSystemProviderError, ensureFileSystemProviderError, FileReadStreamOptions, FileSystemProviderErrorCode, IFileSystemProviderWithOpenReadWriteCloseCapability } from 'vs/platform/files/common/files';\n\nexport interface ICreateReadStreamOptions extends FileReadStreamOptions {\n\n\t/**\n\t * The size of the buffer to use before sending to the stream.\n\t */\n\tbufferSize: number;\n\n\t/**\n\t * Allows to massage any possibly error that happens during reading.\n\t */\n\terrorTransformer?: IErrorTransformer;\n}\n\n/**\n * A helper to read a file from a provider with open/read/close capability into a stream.\n */\nexport async function readFileIntoStream<T>(\n\tprovider: IFileSystemProviderWithOpenReadWriteCloseCapability,\n\tresource: URI,\n\ttarget: WriteableStream<T>,\n\ttransformer: IDataTransformer<VSBuffer, T>,\n\toptions: ICreateReadStreamOptions,\n\ttoken: CancellationToken\n): Promise<void> {\n\tlet error: Error | undefined = undefined;\n\n\ttry {\n\t\tawait doReadFileIntoStream(provider, resource, target, transformer, options, token);\n\t} catch (err) {\n\t\terror = err;\n\t} finally {\n\t\tif (error && options.errorTransformer) {\n\t\t\terror = options.errorTransformer(error);\n\t\t}\n\n\t\tif (typeof error !== 'undefined') {\n\t\t\ttarget.error(error);\n\t\t}\n\n\t\ttarget.end();\n\t}\n}\n\nasync function doReadFileIntoStream<T>(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, target: WriteableStream<T>, transformer: IDataTransformer<VSBuffer, T>, options: ICreateReadStreamOptions, token: CancellationToken): Promise<void> {\n\n\t// Check for cancellation\n\tthrowIfCancelled(token);\n\n\t// open handle through provider\n\tconst handle = await provider.open(resource, { create: false });\n\n\ttry {\n\n\t\t// Check for cancellation\n\t\tthrowIfCancelled(token);\n\n\t\tlet totalBytesRead = 0;\n\t\tlet bytesRead = 0;\n\t\tlet allowedRemainingBytes = (options && typeof options.length === 'number') ? options.length : undefined;\n\n\t\tlet buffer = VSBuffer.alloc(Math.min(options.bufferSize, typeof allowedRemainingBytes === 'number' ? allowedRemainingBytes : options.bufferSize));\n\n\t\tlet posInFile = options && typeof options.position === 'number' ? options.position : 0;\n\t\tlet posInBuffer = 0;\n\t\tdo {\n\t\t\t// read from source (handle) at current position (pos) into buffer (buffer) at\n\t\t\t// buffer position (posInBuffer) up to the size of the buffer (buffer.byteLength).\n\t\t\tbytesRead = await provider.read(handle, posInFile, buffer.buffer, posInBuffer, buffer.byteLength - posInBuffer);\n\n\t\t\tposInFile += bytesRead;\n\t\t\tposInBuffer += bytesRead;\n\t\t\ttotalBytesRead += bytesRead;\n\n\t\t\tif (typeof allowedRemainingBytes === 'number') {\n\t\t\t\tallowedRemainingBytes -= bytesRead;\n\t\t\t}\n\n\t\t\t// when buffer full, create a new one and emit it through stream\n\t\t\tif (posInBuffer === buffer.byteLength) {\n\t\t\t\tawait target.write(transformer(buffer));\n\n\t\t\t\tbuffer = VSBuffer.alloc(Math.min(options.bufferSize, typeof allowedRemainingBytes === 'number' ? allowedRemainingBytes : options.bufferSize));\n\n\t\t\t\tposInBuffer = 0;\n\t\t\t}\n\t\t} while (bytesRead > 0 && (typeof allowedRemainingBytes !== 'number' || allowedRemainingBytes > 0) && throwIfCancelled(token) && throwIfTooLarge(totalBytesRead, options));\n\n\t\t// wrap up with last buffer (also respect maxBytes if provided)\n\t\tif (posInBuffer > 0) {\n\t\t\tlet lastChunkLength = posInBuffer;\n\t\t\tif (typeof allowedRemainingBytes === 'number') {\n\t\t\t\tlastChunkLength = Math.min(posInBuffer, allowedRemainingBytes);\n\t\t\t}\n\n\t\t\ttarget.write(transformer(buffer.slice(0, lastChunkLength)));\n\t\t}\n\t} catch (error) {\n\t\tthrow ensureFileSystemProviderError(error);\n\t} finally {\n\t\tawait provider.close(handle);\n\t}\n}\n\nfunction throwIfCancelled(token: CancellationToken): boolean {\n\tif (token.isCancellationRequested) {\n\t\tthrow canceled();\n\t}\n\n\treturn true;\n}\n\nfunction throwIfTooLarge(totalBytesRead: number, options: ICreateReadStreamOptions): boolean {\n\n\t// Return early if file is too large to load and we have configured limits\n\tif (options?.limits) {\n\t\tif (typeof options.limits.memory === 'number' && totalBytesRead > options.limits.memory) {\n\t\t\tthrow createFileSystemProviderError(localize('fileTooLargeForHeapError', \"To open a file of this size, you need to restart and allow to use more memory\"), FileSystemProviderErrorCode.FileExceedsMemoryLimit);\n\t\t}\n\n\t\tif (typeof options.limits.size === 'number' && totalBytesRead > options.limits.size) {\n\t\t\tthrow createFileSystemProviderError(localize('fileTooLargeError', \"File is too large to open\"), FileSystemProviderErrorCode.FileTooLarge);\n\t\t}\n\t}\n\n\treturn true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { Disposable, DisposableStore, MutableDisposable } from 'vs/base/common/lifecycle';\nimport { isLinux } from 'vs/base/common/platform';\nimport { URI as uri } from 'vs/base/common/uri';\nimport { FileChangeType, IFileChange, isParent } from 'vs/platform/files/common/files';\n\nexport interface IWatcherService {\n\n\t/**\n\t * A normalized file change event from the raw events\n\t * the watcher emits.\n\t */\n\treadonly onDidChangeFile: Event<IDiskFileChange[]>;\n\n\t/**\n\t * An event to indicate a message that should get logged.\n\t */\n\treadonly onDidLogMessage: Event<ILogMessage>;\n\n\t/**\n\t * An event to indicate an error occured from the watcher\n\t * that is unrecoverable. Listeners should restart the\n\t * service if possible.\n\t */\n\treadonly onDidError: Event<string>;\n\n\t/**\n\t * Configures the watcher service to watch according\n\t * to the requests. Any existing watched path that\n\t * is not in the array, will be removed from watching\n\t * and any new path will be added to watching.\n\t */\n\twatch(requests: IWatchRequest[]): Promise<void>;\n\n\t/**\n\t * Enable verbose logging in the watcher.\n\t */\n\tsetVerboseLogging(enabled: boolean): Promise<void>;\n\n\t/**\n\t * Stop all watchers.\n\t */\n\tstop(): Promise<void>;\n}\n\nexport abstract class AbstractWatcherService extends Disposable {\n\n\tprivate static readonly MAX_RESTARTS = 5;\n\n\tprivate service: IWatcherService | undefined;\n\tprivate readonly serviceDisposables = this._register(new MutableDisposable());\n\n\tprivate requests: IWatchRequest[] | undefined = undefined;\n\n\tprivate restartCounter = 0;\n\n\tconstructor(\n\t\tprivate readonly onFileChanges: (changes: IDiskFileChange[]) => void,\n\t\tprivate readonly onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean\n\t) {\n\t\tsuper();\n\t}\n\n\tprotected abstract createService(disposables: DisposableStore): IWatcherService;\n\n\tprotected init(): void {\n\n\t\t// Associate disposables to the service\n\t\tconst disposables = new DisposableStore();\n\t\tthis.serviceDisposables.value = disposables;\n\n\t\t// Ask implementors to create the service\n\t\tthis.service = this.createService(disposables);\n\t\tthis.service.setVerboseLogging(this.verboseLogging);\n\n\t\t// Wire in event handlers\n\t\tdisposables.add(this.service.onDidChangeFile(e => this.onFileChanges(e)));\n\t\tdisposables.add(this.service.onDidLogMessage(e => this.onLogMessage(e)));\n\t\tdisposables.add(this.service.onDidError(e => this.onError(e)));\n\t}\n\n\tprotected onError(error: string): void {\n\n\t\t// Restart up to N times\n\t\tif (this.restartCounter < AbstractWatcherService.MAX_RESTARTS && this.requests) {\n\t\t\tthis.error(`restarting watcher after error: ${error}`);\n\t\t\tthis.restart(this.requests);\n\t\t}\n\n\t\t// Otherwise log that we have given up to restart\n\t\telse {\n\t\t\tthis.error(`gave up attempting to restart watcher after error: ${error}`);\n\t\t}\n\t}\n\n\tprivate restart(requests: IWatchRequest[]): void {\n\t\tthis.restartCounter++;\n\n\t\tthis.init();\n\t\tthis.watch(requests);\n\t}\n\n\tasync watch(requests: IWatchRequest[]): Promise<void> {\n\t\tthis.requests = requests;\n\n\t\tawait this.service?.watch(requests);\n\t}\n\n\tasync setVerboseLogging(verboseLogging: boolean): Promise<void> {\n\t\tthis.verboseLogging = verboseLogging;\n\n\t\tawait this.service?.setVerboseLogging(verboseLogging);\n\t}\n\n\tprivate error(message: string) {\n\t\tthis.onLogMessage({ type: 'error', message: `[File Watcher (parcel)] ${message}` });\n\t}\n\n\toverride dispose(): void {\n\n\t\t// Render the serve invalid from here\n\t\tthis.service = undefined;\n\n\t\treturn super.dispose();\n\t}\n}\n\n/**\n * Base class of any watcher service we support.\n *\n * TODO@bpasero delete and replace with `AbstractWatcherService`\n */\nexport abstract class WatcherService extends Disposable {\n\n\t/**\n\t * Asks to watch the provided folders.\n\t */\n\tabstract watch(requests: IWatchRequest[]): Promise<void>;\n\n\t/**\n\t * Enable verbose logging from the watcher.\n\t */\n\tabstract setVerboseLogging(verboseLogging: boolean): Promise<void>;\n}\n\nexport interface IWatchRequest {\n\n\t/**\n\t * The path to watch.\n\t */\n\tpath: string;\n\n\t/**\n\t * A set of glob patterns or paths to exclude from watching.\n\t */\n\texcludes: string[];\n\n\t/**\n\t * @deprecated this only exists for WSL1 support and should never\n\t * be used in any other case.\n\t */\n\tpollingInterval?: number;\n}\n\nexport interface IDiskFileChange {\n\ttype: FileChangeType;\n\tpath: string;\n}\n\nexport interface ILogMessage {\n\ttype: 'trace' | 'warn' | 'error' | 'info' | 'debug';\n\tmessage: string;\n}\n\nexport function toFileChanges(changes: IDiskFileChange[]): IFileChange[] {\n\treturn changes.map(change => ({\n\t\ttype: change.type,\n\t\tresource: uri.file(change.path)\n\t}));\n}\n\nexport function coalesceEvents(changes: IDiskFileChange[]): IDiskFileChange[] {\n\n\t// Build deltas\n\tconst coalescer = new EventCoalescer();\n\tfor (const event of changes) {\n\t\tcoalescer.processEvent(event);\n\t}\n\n\treturn coalescer.coalesce();\n}\n\nclass EventCoalescer {\n\n\tprivate readonly coalesced = new Set<IDiskFileChange>();\n\tprivate readonly mapPathToChange = new Map<string, IDiskFileChange>();\n\n\tprivate toKey(event: IDiskFileChange): string {\n\t\tif (isLinux) {\n\t\t\treturn event.path;\n\t\t}\n\n\t\treturn event.path.toLowerCase(); // normalise to file system case sensitivity\n\t}\n\n\tprocessEvent(event: IDiskFileChange): void {\n\t\tconst existingEvent = this.mapPathToChange.get(this.toKey(event));\n\n\t\tlet keepEvent = false;\n\n\t\t// Event path already exists\n\t\tif (existingEvent) {\n\t\t\tconst currentChangeType = existingEvent.type;\n\t\t\tconst newChangeType = event.type;\n\n\t\t\t// macOS/Windows: track renames to different case but\n\t\t\t// same name by changing current event to DELETED\n\t\t\t// this encodes some underlying knowledge about the\n\t\t\t// file watcher being used by assuming we first get\n\t\t\t// an event for the CREATE and then an event that we\n\t\t\t// consider as DELETE if same name / different case.\n\t\t\tif (existingEvent.path !== event.path && event.type === FileChangeType.DELETED) {\n\t\t\t\tkeepEvent = true;\n\t\t\t}\n\n\t\t\t// Ignore CREATE followed by DELETE in one go\n\t\t\telse if (currentChangeType === FileChangeType.ADDED && newChangeType === FileChangeType.DELETED) {\n\t\t\t\tthis.mapPathToChange.delete(this.toKey(event));\n\t\t\t\tthis.coalesced.delete(existingEvent);\n\t\t\t}\n\n\t\t\t// Flatten DELETE followed by CREATE into CHANGE\n\t\t\telse if (currentChangeType === FileChangeType.DELETED && newChangeType === FileChangeType.ADDED) {\n\t\t\t\texistingEvent.type = FileChangeType.UPDATED;\n\t\t\t}\n\n\t\t\t// Do nothing. Keep the created event\n\t\t\telse if (currentChangeType === FileChangeType.ADDED && newChangeType === FileChangeType.UPDATED) { }\n\n\t\t\t// Otherwise apply change type\n\t\t\telse {\n\t\t\t\texistingEvent.type = newChangeType;\n\t\t\t}\n\t\t}\n\n\t\t// Otherwise keep\n\t\telse {\n\t\t\tkeepEvent = true;\n\t\t}\n\n\t\tif (keepEvent) {\n\t\t\tthis.coalesced.add(event);\n\t\t\tthis.mapPathToChange.set(this.toKey(event), event);\n\t\t}\n\t}\n\n\tcoalesce(): IDiskFileChange[] {\n\t\tconst addOrChangeEvents: IDiskFileChange[] = [];\n\t\tconst deletedPaths: string[] = [];\n\n\t\t// This algorithm will remove all DELETE events up to the root folder\n\t\t// that got deleted if any. This ensures that we are not producing\n\t\t// DELETE events for each file inside a folder that gets deleted.\n\t\t//\n\t\t// 1.) split ADD/CHANGE and DELETED events\n\t\t// 2.) sort short deleted paths to the top\n\t\t// 3.) for each DELETE, check if there is a deleted parent and ignore the event in that case\n\t\treturn Array.from(this.coalesced).filter(e => {\n\t\t\tif (e.type !== FileChangeType.DELETED) {\n\t\t\t\taddOrChangeEvents.push(e);\n\n\t\t\t\treturn false; // remove ADD / CHANGE\n\t\t\t}\n\n\t\t\treturn true; // keep DELETE\n\t\t}).sort((e1, e2) => {\n\t\t\treturn e1.path.length - e2.path.length; // shortest path first\n\t\t}).filter(e => {\n\t\t\tif (deletedPaths.some(deletedPath => isParent(e.path, deletedPath, !isLinux /* ignorecase */))) {\n\t\t\t\treturn false; // DELETE is ignored if parent is deleted already\n\t\t\t}\n\n\t\t\t// otherwise mark as deleted\n\t\t\tdeletedPaths.push(e.path);\n\n\t\t\treturn true;\n\t\t}).concat(addOrChangeEvents);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ThrottledDelayer } from 'vs/base/common/async';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { basename, join } from 'vs/base/common/path';\nimport { realpath } from 'vs/base/node/extpath';\nimport { SymlinkSupport } from 'vs/base/node/pfs';\nimport { CHANGE_BUFFER_DELAY, watchFile, watchFolder } from 'vs/base/node/watcher';\nimport { FileChangeType } from 'vs/platform/files/common/files';\nimport { IDiskFileChange, ILogMessage, coalesceEvents } from 'vs/platform/files/common/watcher';\n\nexport class FileWatcher extends Disposable {\n\tprivate isDisposed: boolean | undefined;\n\n\tprivate readonly fileChangesDelayer: ThrottledDelayer<void> = this._register(new ThrottledDelayer<void>(CHANGE_BUFFER_DELAY * 2 /* sync on delay from underlying library */));\n\tprivate fileChangesBuffer: IDiskFileChange[] = [];\n\n\tconstructor(\n\t\tprivate path: string,\n\t\tprivate onDidFilesChange: (changes: IDiskFileChange[]) => void,\n\t\tprivate onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean\n\t) {\n\t\tsuper();\n\n\t\tthis.startWatching();\n\t}\n\n\tsetVerboseLogging(verboseLogging: boolean): void {\n\t\tthis.verboseLogging = verboseLogging;\n\t}\n\n\tprivate async startWatching(): Promise<void> {\n\t\ttry {\n\t\t\tconst { stat, symbolicLink } = await SymlinkSupport.stat(this.path);\n\n\t\t\tif (this.isDisposed) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet pathToWatch = this.path;\n\t\t\tif (symbolicLink) {\n\t\t\t\ttry {\n\t\t\t\t\tpathToWatch = await realpath(pathToWatch);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.onError(error);\n\n\t\t\t\t\tif (symbolicLink.dangling) {\n\t\t\t\t\t\treturn; // give up if symbolic link is dangling\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Watch Folder\n\t\t\tif (stat.isDirectory()) {\n\t\t\t\tthis._register(watchFolder(pathToWatch, (eventType, path) => {\n\t\t\t\t\tthis.onFileChange({\n\t\t\t\t\t\ttype: eventType === 'changed' ? FileChangeType.UPDATED : eventType === 'added' ? FileChangeType.ADDED : FileChangeType.DELETED,\n\t\t\t\t\t\tpath: join(this.path, basename(path)) // ensure path is identical with what was passed in\n\t\t\t\t\t});\n\t\t\t\t}, error => this.onError(error)));\n\t\t\t}\n\n\t\t\t// Watch File\n\t\t\telse {\n\t\t\t\tthis._register(watchFile(pathToWatch, eventType => {\n\t\t\t\t\tthis.onFileChange({\n\t\t\t\t\t\ttype: eventType === 'changed' ? FileChangeType.UPDATED : FileChangeType.DELETED,\n\t\t\t\t\t\tpath: this.path // ensure path is identical with what was passed in\n\t\t\t\t\t});\n\t\t\t\t}, error => this.onError(error)));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\tthis.onError(error);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onFileChange(event: IDiskFileChange): void {\n\n\t\t// Add to buffer\n\t\tthis.fileChangesBuffer.push(event);\n\n\t\t// Logging\n\t\tif (this.verboseLogging) {\n\t\t\tthis.onVerbose(`${event.type === FileChangeType.ADDED ? '[ADDED]' : event.type === FileChangeType.DELETED ? '[DELETED]' : '[CHANGED]'} ${event.path}`);\n\t\t}\n\n\t\t// Handle emit through delayer to accommodate for bulk changes and thus reduce spam\n\t\tthis.fileChangesDelayer.trigger(async () => {\n\t\t\tconst fileChanges = this.fileChangesBuffer;\n\t\t\tthis.fileChangesBuffer = [];\n\n\t\t\t// Event coalsecer\n\t\t\tconst coalescedFileChanges = coalesceEvents(fileChanges);\n\n\t\t\t// Logging\n\t\t\tif (this.verboseLogging) {\n\t\t\t\tfor (const event of coalescedFileChanges) {\n\t\t\t\t\tthis.onVerbose(`>> normalized ${event.type === FileChangeType.ADDED ? '[ADDED]' : event.type === FileChangeType.DELETED ? '[DELETED]' : '[CHANGED]'} ${event.path}`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Fire\n\t\t\tif (coalescedFileChanges.length > 0) {\n\t\t\t\tthis.onDidFilesChange(coalescedFileChanges);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate onError(error: string): void {\n\t\tif (!this.isDisposed) {\n\t\t\tthis.onLogMessage({ type: 'error', message: `[File Watcher (node.js)] ${error}` });\n\t\t}\n\t}\n\n\tprivate onVerbose(message: string): void {\n\t\tif (!this.isDisposed) {\n\t\t\tthis.onLogMessage({ type: 'trace', message: `[File Watcher (node.js)] ${message}` });\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tthis.isDisposed = true;\n\n\t\tsuper.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { FileAccess } from 'vs/base/common/network';\nimport { getNextTickChannel, ProxyChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Client } from 'vs/base/parts/ipc/node/ipc.cp';\nimport { IWatcherService } from 'vs/platform/files/node/watcher/nsfw/watcher';\nimport { IDiskFileChange, ILogMessage, IWatchRequest, WatcherService } from 'vs/platform/files/common/watcher';\n\nexport class FileWatcher extends WatcherService {\n\n\tprivate service: IWatcherService | undefined;\n\n\tprivate isDisposed = false;\n\n\tconstructor(\n\t\tprivate readonly onDidFilesChange: (changes: IDiskFileChange[]) => void,\n\t\tprivate readonly onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean\n\t) {\n\t\tsuper();\n\n\t\tthis.startWatching();\n\t}\n\n\tprivate startWatching(): void {\n\t\tconst client = this._register(new Client(\n\t\t\tFileAccess.asFileUri('bootstrap-fork', require).fsPath,\n\t\t\t{\n\t\t\t\tserverName: 'File Watcher (nsfw)',\n\t\t\t\targs: ['--type=watcherServiceNSFW'],\n\t\t\t\tenv: {\n\t\t\t\t\tVSCODE_AMD_ENTRYPOINT: 'vs/platform/files/node/watcher/nsfw/watcherApp',\n\t\t\t\t\tVSCODE_PIPE_LOGGING: 'true',\n\t\t\t\t\tVSCODE_VERBOSE_LOGGING: 'true' // transmit console logs from server to client\n\t\t\t\t}\n\t\t\t}\n\t\t));\n\n\t\t// Initialize watcher\n\t\tthis.service = ProxyChannel.toService<IWatcherService>(getNextTickChannel(client.getChannel('watcher')));\n\t\tthis.service.setVerboseLogging(this.verboseLogging);\n\n\t\t// Wire in event handlers\n\t\tthis._register(this.service.onDidChangeFile(e => !this.isDisposed && this.onDidFilesChange(e)));\n\t\tthis._register(this.service.onDidLogMessage(e => this.onLogMessage(e)));\n\t}\n\n\tasync setVerboseLogging(verboseLogging: boolean): Promise<void> {\n\t\tthis.verboseLogging = verboseLogging;\n\n\t\tif (!this.isDisposed) {\n\t\t\tawait this.service?.setVerboseLogging(verboseLogging);\n\t\t}\n\t}\n\n\terror(message: string) {\n\t\tthis.onLogMessage({ type: 'error', message: `[File Watcher (nsfw)] ${message}` });\n\t}\n\n\tasync watch(requests: IWatchRequest[]): Promise<void> {\n\t\tif (!this.isDisposed) {\n\t\t\tawait this.service?.watch(requests);\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tthis.isDisposed = true;\n\n\t\tsuper.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { FileAccess } from 'vs/base/common/network';\nimport { getNextTickChannel, ProxyChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Client } from 'vs/base/parts/ipc/node/ipc.cp';\nimport { AbstractWatcherService, IDiskFileChange, ILogMessage, IWatcherService } from 'vs/platform/files/common/watcher';\n\nexport class FileWatcher extends AbstractWatcherService {\n\n\tconstructor(\n\t\tonFileChanges: (changes: IDiskFileChange[]) => void,\n\t\tonLogMessage: (msg: ILogMessage) => void,\n\t\tverboseLogging: boolean\n\t) {\n\t\tsuper(onFileChanges, onLogMessage, verboseLogging);\n\n\t\tthis.init();\n\t}\n\n\tprotected override createService(disposables: DisposableStore): IWatcherService {\n\n\t\t// Fork the parcel file watcher and build a client around\n\t\t// its server for passing over requests and receiving events.\n\t\tconst client = disposables.add(new Client(\n\t\t\tFileAccess.asFileUri('bootstrap-fork', require).fsPath,\n\t\t\t{\n\t\t\t\tserverName: 'File Watcher (parcel, node.js)',\n\t\t\t\targs: ['--type=watcherServiceParcel'],\n\t\t\t\tenv: {\n\t\t\t\t\tVSCODE_AMD_ENTRYPOINT: 'vs/platform/files/node/watcher/parcel/watcherApp',\n\t\t\t\t\tVSCODE_PIPE_LOGGING: 'true',\n\t\t\t\t\tVSCODE_VERBOSE_LOGGING: 'true' // transmit console logs from server to client\n\t\t\t\t}\n\t\t\t}\n\t\t));\n\n\t\t// React on unexpected termination of the watcher process\n\t\tdisposables.add(client.onDidProcessExit(({ code, signal }) => this.onError(`terminated by itself with code ${code}, signal: ${signal}`)));\n\n\t\treturn ProxyChannel.toService<IWatcherService>(getNextTickChannel(client.getChannel('watcher')));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ServiceIdentifier } from 'vs/platform/instantiation/common/instantiation';\nimport { SyncDescriptor } from './descriptors';\n\nexport class ServiceCollection {\n\n\tprivate _entries = new Map<ServiceIdentifier<any>, any>();\n\n\tconstructor(...entries: [ServiceIdentifier<any>, any][]) {\n\t\tfor (let [id, service] of entries) {\n\t\t\tthis.set(id, service);\n\t\t}\n\t}\n\n\tset<T>(id: ServiceIdentifier<T>, instanceOrDescriptor: T | SyncDescriptor<T>): T | SyncDescriptor<T> {\n\t\tconst result = this._entries.get(id);\n\t\tthis._entries.set(id, instanceOrDescriptor);\n\t\treturn result;\n\t}\n\n\thas(id: ServiceIdentifier<any>): boolean {\n\t\treturn this._entries.has(id);\n\t}\n\n\tget<T>(id: ServiceIdentifier<T>): T | SyncDescriptor<T> {\n\t\treturn this._entries.get(id);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IdleValue } from 'vs/base/common/async';\nimport { illegalState } from 'vs/base/common/errors';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { Graph } from 'vs/platform/instantiation/common/graph';\nimport { IInstantiationService, ServiceIdentifier, ServicesAccessor, _util } from 'vs/platform/instantiation/common/instantiation';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\n\n// TRACING\nconst _enableTracing = false;\n\nclass CyclicDependencyError extends Error {\n\tconstructor(graph: Graph<any>) {\n\t\tsuper('cyclic dependency between services');\n\t\tthis.message = graph.findCycleSlow() ?? `UNABLE to detect cycle, dumping graph: \\n${graph.toString()}`;\n\t}\n}\n\nexport class InstantiationService implements IInstantiationService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _services: ServiceCollection;\n\tprivate readonly _strict: boolean;\n\tprivate readonly _parent?: InstantiationService;\n\n\tconstructor(services: ServiceCollection = new ServiceCollection(), strict: boolean = false, parent?: InstantiationService) {\n\t\tthis._services = services;\n\t\tthis._strict = strict;\n\t\tthis._parent = parent;\n\n\t\tthis._services.set(IInstantiationService, this);\n\t}\n\n\tcreateChild(services: ServiceCollection): IInstantiationService {\n\t\treturn new InstantiationService(services, this._strict, this);\n\t}\n\n\tinvokeFunction<R, TS extends any[] = []>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R {\n\t\tlet _trace = Trace.traceInvocation(fn);\n\t\tlet _done = false;\n\t\ttry {\n\t\t\tconst accessor: ServicesAccessor = {\n\t\t\t\tget: <T>(id: ServiceIdentifier<T>) => {\n\n\t\t\t\t\tif (_done) {\n\t\t\t\t\t\tthrow illegalState('service accessor is only valid during the invocation of its target method');\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = this._getOrCreateServiceInstance(id, _trace);\n\t\t\t\t\tif (!result) {\n\t\t\t\t\t\tthrow new Error(`[invokeFunction] unknown service '${id}'`);\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn fn(accessor, ...args);\n\t\t} finally {\n\t\t\t_done = true;\n\t\t\t_trace.stop();\n\t\t}\n\t}\n\n\tcreateInstance(ctorOrDescriptor: any | SyncDescriptor<any>, ...rest: any[]): any {\n\t\tlet _trace: Trace;\n\t\tlet result: any;\n\t\tif (ctorOrDescriptor instanceof SyncDescriptor) {\n\t\t\t_trace = Trace.traceCreation(ctorOrDescriptor.ctor);\n\t\t\tresult = this._createInstance(ctorOrDescriptor.ctor, ctorOrDescriptor.staticArguments.concat(rest), _trace);\n\t\t} else {\n\t\t\t_trace = Trace.traceCreation(ctorOrDescriptor);\n\t\t\tresult = this._createInstance(ctorOrDescriptor, rest, _trace);\n\t\t}\n\t\t_trace.stop();\n\t\treturn result;\n\t}\n\n\tprivate _createInstance<T>(ctor: any, args: any[] = [], _trace: Trace): T {\n\n\t\t// arguments defined by service decorators\n\t\tlet serviceDependencies = _util.getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\t\tlet serviceArgs: any[] = [];\n\t\tfor (const dependency of serviceDependencies) {\n\t\t\tlet service = this._getOrCreateServiceInstance(dependency.id, _trace);\n\t\t\tif (!service && this._strict && !dependency.optional) {\n\t\t\t\tthrow new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n\t\t\t}\n\t\t\tserviceArgs.push(service);\n\t\t}\n\n\t\tlet firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n\t\t// check for argument mismatches, adjust static args if needed\n\t\tif (args.length !== firstServiceArgPos) {\n\t\t\tconsole.warn(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n\n\t\t\tlet delta = firstServiceArgPos - args.length;\n\t\t\tif (delta > 0) {\n\t\t\t\targs = args.concat(new Array(delta));\n\t\t\t} else {\n\t\t\t\targs = args.slice(0, firstServiceArgPos);\n\t\t\t}\n\t\t}\n\n\t\t// now create the instance\n\t\treturn <T>new ctor(...[...args, ...serviceArgs]);\n\t}\n\n\tprivate _setServiceInstance<T>(id: ServiceIdentifier<T>, instance: T): void {\n\t\tif (this._services.get(id) instanceof SyncDescriptor) {\n\t\t\tthis._services.set(id, instance);\n\t\t} else if (this._parent) {\n\t\t\tthis._parent._setServiceInstance(id, instance);\n\t\t} else {\n\t\t\tthrow new Error('illegalState - setting UNKNOWN service instance');\n\t\t}\n\t}\n\n\tprivate _getServiceInstanceOrDescriptor<T>(id: ServiceIdentifier<T>): T | SyncDescriptor<T> {\n\t\tlet instanceOrDesc = this._services.get(id);\n\t\tif (!instanceOrDesc && this._parent) {\n\t\t\treturn this._parent._getServiceInstanceOrDescriptor(id);\n\t\t} else {\n\t\t\treturn instanceOrDesc;\n\t\t}\n\t}\n\n\tprivate _getOrCreateServiceInstance<T>(id: ServiceIdentifier<T>, _trace: Trace): T {\n\t\tlet thing = this._getServiceInstanceOrDescriptor(id);\n\t\tif (thing instanceof SyncDescriptor) {\n\t\t\treturn this._safeCreateAndCacheServiceInstance(id, thing, _trace.branch(id, true));\n\t\t} else {\n\t\t\t_trace.branch(id, false);\n\t\t\treturn thing;\n\t\t}\n\t}\n\n\tprivate readonly _activeInstantiations = new Set<ServiceIdentifier<any>>();\n\n\n\tprivate _safeCreateAndCacheServiceInstance<T>(id: ServiceIdentifier<T>, desc: SyncDescriptor<T>, _trace: Trace): T {\n\t\tif (this._activeInstantiations.has(id)) {\n\t\t\tthrow new Error(`illegal state - RECURSIVELY instantiating service '${id}'`);\n\t\t}\n\t\tthis._activeInstantiations.add(id);\n\t\ttry {\n\t\t\treturn this._createAndCacheServiceInstance(id, desc, _trace);\n\t\t} finally {\n\t\t\tthis._activeInstantiations.delete(id);\n\t\t}\n\t}\n\n\tprivate _createAndCacheServiceInstance<T>(id: ServiceIdentifier<T>, desc: SyncDescriptor<T>, _trace: Trace): T {\n\n\t\ttype Triple = { id: ServiceIdentifier<any>, desc: SyncDescriptor<any>, _trace: Trace; };\n\t\tconst graph = new Graph<Triple>(data => data.id.toString());\n\n\t\tlet cycleCount = 0;\n\t\tconst stack = [{ id, desc, _trace }];\n\t\twhile (stack.length) {\n\t\t\tconst item = stack.pop()!;\n\t\t\tgraph.lookupOrInsertNode(item);\n\n\t\t\t// a weak but working heuristic for cycle checks\n\t\t\tif (cycleCount++ > 1000) {\n\t\t\t\tthrow new CyclicDependencyError(graph);\n\t\t\t}\n\n\t\t\t// check all dependencies for existence and if they need to be created first\n\t\t\tfor (let dependency of _util.getServiceDependencies(item.desc.ctor)) {\n\n\t\t\t\tlet instanceOrDesc = this._getServiceInstanceOrDescriptor(dependency.id);\n\t\t\t\tif (!instanceOrDesc && !dependency.optional) {\n\t\t\t\t\tconsole.warn(`[createInstance] ${id} depends on ${dependency.id} which is NOT registered.`);\n\t\t\t\t}\n\n\t\t\t\tif (instanceOrDesc instanceof SyncDescriptor) {\n\t\t\t\t\tconst d = { id: dependency.id, desc: instanceOrDesc, _trace: item._trace.branch(dependency.id, true) };\n\t\t\t\t\tgraph.insertEdge(item, d);\n\t\t\t\t\tstack.push(d);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twhile (true) {\n\t\t\tconst roots = graph.roots();\n\n\t\t\t// if there is no more roots but still\n\t\t\t// nodes in the graph we have a cycle\n\t\t\tif (roots.length === 0) {\n\t\t\t\tif (!graph.isEmpty()) {\n\t\t\t\t\tthrow new CyclicDependencyError(graph);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tfor (const { data } of roots) {\n\t\t\t\t// Repeat the check for this still being a service sync descriptor. That's because\n\t\t\t\t// instantiating a dependency might have side-effect and recursively trigger instantiation\n\t\t\t\t// so that some dependencies are now fullfilled already.\n\t\t\t\tconst instanceOrDesc = this._getServiceInstanceOrDescriptor(data.id);\n\t\t\t\tif (instanceOrDesc instanceof SyncDescriptor) {\n\t\t\t\t\t// create instance and overwrite the service collections\n\t\t\t\t\tconst instance = this._createServiceInstanceWithOwner(data.id, data.desc.ctor, data.desc.staticArguments, data.desc.supportsDelayedInstantiation, data._trace);\n\t\t\t\t\tthis._setServiceInstance(data.id, instance);\n\t\t\t\t}\n\t\t\t\tgraph.removeNode(data);\n\t\t\t}\n\t\t}\n\t\treturn <T>this._getServiceInstanceOrDescriptor(id);\n\t}\n\n\tprivate _createServiceInstanceWithOwner<T>(id: ServiceIdentifier<T>, ctor: any, args: any[] = [], supportsDelayedInstantiation: boolean, _trace: Trace): T {\n\t\tif (this._services.get(id) instanceof SyncDescriptor) {\n\t\t\treturn this._createServiceInstance(ctor, args, supportsDelayedInstantiation, _trace);\n\t\t} else if (this._parent) {\n\t\t\treturn this._parent._createServiceInstanceWithOwner(id, ctor, args, supportsDelayedInstantiation, _trace);\n\t\t} else {\n\t\t\tthrow new Error(`illegalState - creating UNKNOWN service instance ${ctor.name}`);\n\t\t}\n\t}\n\n\tprivate _createServiceInstance<T>(ctor: any, args: any[] = [], _supportsDelayedInstantiation: boolean, _trace: Trace): T {\n\t\tif (!_supportsDelayedInstantiation) {\n\t\t\t// eager instantiation\n\t\t\treturn this._createInstance(ctor, args, _trace);\n\n\t\t} else {\n\t\t\t// Return a proxy object that's backed by an idle value. That\n\t\t\t// strategy is to instantiate services in our idle time or when actually\n\t\t\t// needed but not when injected into a consumer\n\t\t\tconst idle = new IdleValue<any>(() => this._createInstance<T>(ctor, args, _trace));\n\t\t\treturn <T>new Proxy(Object.create(null), {\n\t\t\t\tget(target: any, key: PropertyKey): any {\n\t\t\t\t\tif (key in target) {\n\t\t\t\t\t\treturn target[key];\n\t\t\t\t\t}\n\t\t\t\t\tlet obj = idle.value;\n\t\t\t\t\tlet prop = obj[key];\n\t\t\t\t\tif (typeof prop !== 'function') {\n\t\t\t\t\t\treturn prop;\n\t\t\t\t\t}\n\t\t\t\t\tprop = prop.bind(obj);\n\t\t\t\t\ttarget[key] = prop;\n\t\t\t\t\treturn prop;\n\t\t\t\t},\n\t\t\t\tset(_target: T, p: PropertyKey, value: any): boolean {\n\t\t\t\t\tidle.value[p] = value;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\n//#region -- tracing ---\n\nconst enum TraceType {\n\tCreation, Invocation, Branch\n}\n\nclass Trace {\n\n\tprivate static readonly _None = new class extends Trace {\n\t\tconstructor() { super(-1, null); }\n\t\toverride stop() { }\n\t\toverride branch() { return this; }\n\t};\n\n\tstatic traceInvocation(ctor: any): Trace {\n\t\treturn !_enableTracing ? Trace._None : new Trace(TraceType.Invocation, ctor.name || (ctor.toString() as string).substring(0, 42).replace(/\\n/g, ''));\n\t}\n\n\tstatic traceCreation(ctor: any): Trace {\n\t\treturn !_enableTracing ? Trace._None : new Trace(TraceType.Creation, ctor.name);\n\t}\n\n\tprivate static _totals: number = 0;\n\tprivate readonly _start: number = Date.now();\n\tprivate readonly _dep: [ServiceIdentifier<any>, boolean, Trace?][] = [];\n\n\tprivate constructor(\n\t\treadonly type: TraceType,\n\t\treadonly name: string | null\n\t) { }\n\n\tbranch(id: ServiceIdentifier<any>, first: boolean): Trace {\n\t\tlet child = new Trace(TraceType.Branch, id.toString());\n\t\tthis._dep.push([id, first, child]);\n\t\treturn child;\n\t}\n\n\tstop() {\n\t\tlet dur = Date.now() - this._start;\n\t\tTrace._totals += dur;\n\n\t\tlet causedCreation = false;\n\n\t\tfunction printChild(n: number, trace: Trace) {\n\t\t\tlet res: string[] = [];\n\t\t\tlet prefix = new Array(n + 1).join('\\t');\n\t\t\tfor (const [id, first, child] of trace._dep) {\n\t\t\t\tif (first && child) {\n\t\t\t\t\tcausedCreation = true;\n\t\t\t\t\tres.push(`${prefix}CREATES -> ${id}`);\n\t\t\t\t\tlet nested = printChild(n + 1, child);\n\t\t\t\t\tif (nested) {\n\t\t\t\t\t\tres.push(nested);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tres.push(`${prefix}uses -> ${id}`);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn res.join('\\n');\n\t\t}\n\n\t\tlet lines = [\n\t\t\t`${this.type === TraceType.Creation ? 'CREATE' : 'CALL'} ${this.name}`,\n\t\t\t`${printChild(1, this)}`,\n\t\t\t`DONE, took ${dur.toFixed(2)}ms (grand total ${Trace._totals.toFixed(2)}ms)`\n\t\t];\n\n\t\tif (dur > 2 || causedCreation) {\n\t\t\tconsole.log(lines.join('\\n'));\n\t\t}\n\t}\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport interface ILocalization {\n\tlanguageId: string;\n\tlanguageName?: string;\n\tlocalizedLanguageName?: string;\n\ttranslations: ITranslation[];\n\tminimalTranslations?: { [key: string]: string };\n}\n\nexport interface ITranslation {\n\tid: string;\n\tpath: string;\n}\n\nexport const ILocalizationsService = createDecorator<ILocalizationsService>('localizationsService');\nexport interface ILocalizationsService {\n\treadonly _serviceBrand: undefined;\n\tgetLanguageIds(): Promise<string[]>;\n}\n\nexport function isValidLocalization(localization: ILocalization): boolean {\n\tif (typeof localization.languageId !== 'string') {\n\t\treturn false;\n\t}\n\tif (!Array.isArray(localization.translations) || localization.translations.length === 0) {\n\t\treturn false;\n\t}\n\tfor (const translation of localization.translations) {\n\t\tif (typeof translation.id !== 'string') {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof translation.path !== 'string') {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (localization.languageName && typeof localization.languageName !== 'string') {\n\t\treturn false;\n\t}\n\tif (localization.localizedLanguageName && typeof localization.localizedLanguageName !== 'string') {\n\t\treturn false;\n\t}\n\treturn true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { isWindows } from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { createDecorator as createServiceDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const ILogService = createServiceDecorator<ILogService>('logService');\nexport const ILoggerService = createServiceDecorator<ILoggerService>('loggerService');\n\nfunction now(): string {\n\treturn new Date().toISOString();\n}\n\nexport enum LogLevel {\n\tTrace,\n\tDebug,\n\tInfo,\n\tWarning,\n\tError,\n\tCritical,\n\tOff\n}\n\nexport const DEFAULT_LOG_LEVEL: LogLevel = LogLevel.Info;\n\nexport interface ILogger extends IDisposable {\n\tonDidChangeLogLevel: Event<LogLevel>;\n\tgetLevel(): LogLevel;\n\tsetLevel(level: LogLevel): void;\n\n\ttrace(message: string, ...args: any[]): void;\n\tdebug(message: string, ...args: any[]): void;\n\tinfo(message: string, ...args: any[]): void;\n\twarn(message: string, ...args: any[]): void;\n\terror(message: string | Error, ...args: any[]): void;\n\tcritical(message: string | Error, ...args: any[]): void;\n\n\t/**\n\t * An operation to flush the contents. Can be synchronous.\n\t */\n\tflush(): void;\n}\n\nexport function log(logger: ILogger, level: LogLevel, message: string): void {\n\tswitch (level) {\n\t\tcase LogLevel.Trace: logger.trace(message); break;\n\t\tcase LogLevel.Debug: logger.debug(message); break;\n\t\tcase LogLevel.Info: logger.info(message); break;\n\t\tcase LogLevel.Warning: logger.warn(message); break;\n\t\tcase LogLevel.Error: logger.error(message); break;\n\t\tcase LogLevel.Critical: logger.critical(message); break;\n\t\tdefault: throw new Error('Invalid log level');\n\t}\n}\n\nexport function format(args: any): string {\n\tlet result = '';\n\n\tfor (let i = 0; i < args.length; i++) {\n\t\tlet a = args[i];\n\n\t\tif (typeof a === 'object') {\n\t\t\ttry {\n\t\t\t\ta = JSON.stringify(a);\n\t\t\t} catch (e) { }\n\t\t}\n\n\t\tresult += (i > 0 ? ' ' : '') + a;\n\t}\n\n\treturn result;\n}\n\nexport interface ILogService extends ILogger {\n\treadonly _serviceBrand: undefined;\n}\n\nexport interface ILoggerOptions {\n\n\t/**\n\t * Name of the logger.\n\t */\n\tname?: string;\n\n\t/**\n\t * Do not create rotating files if max size exceeds.\n\t */\n\tdonotRotate?: boolean;\n\n\t/**\n\t * Do not use formatters.\n\t */\n\tdonotUseFormatters?: boolean;\n\n\t/**\n\t * If set, logger logs the message always.\n\t */\n\talways?: boolean;\n}\n\nexport interface ILoggerService {\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Creates a logger, or gets one if it already exists.\n\t */\n\tcreateLogger(file: URI, options?: ILoggerOptions): ILogger;\n\n\t/**\n\t * Gets an existing logger, if any.\n\t */\n\tgetLogger(file: URI): ILogger | undefined;\n}\n\nexport abstract class AbstractLogger extends Disposable {\n\n\tprivate level: LogLevel = DEFAULT_LOG_LEVEL;\n\tprivate readonly _onDidChangeLogLevel: Emitter<LogLevel> = this._register(new Emitter<LogLevel>());\n\treadonly onDidChangeLogLevel: Event<LogLevel> = this._onDidChangeLogLevel.event;\n\n\tsetLevel(level: LogLevel): void {\n\t\tif (this.level !== level) {\n\t\t\tthis.level = level;\n\t\t\tthis._onDidChangeLogLevel.fire(this.level);\n\t\t}\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.level;\n\t}\n\n}\n\nexport abstract class AbstractMessageLogger extends AbstractLogger implements ILogger {\n\n\tprotected abstract log(level: LogLevel, message: string): void;\n\n\tconstructor(private readonly logAlways?: boolean) {\n\t\tsuper();\n\t}\n\n\tprivate checkLogLevel(level: LogLevel): boolean {\n\t\treturn this.logAlways || this.getLevel() <= level;\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Trace)) {\n\t\t\tthis.log(LogLevel.Trace, format([message, ...args]));\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Debug)) {\n\t\t\tthis.log(LogLevel.Debug, format([message, ...args]));\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Info)) {\n\t\t\tthis.log(LogLevel.Info, format([message, ...args]));\n\t\t}\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Warning)) {\n\t\t\tthis.log(LogLevel.Warning, format([message, ...args]));\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Error)) {\n\n\t\t\tif (message instanceof Error) {\n\t\t\t\tconst array = Array.prototype.slice.call(arguments) as any[];\n\t\t\t\tarray[0] = message.stack;\n\t\t\t\tthis.log(LogLevel.Error, format(array));\n\t\t\t} else {\n\t\t\t\tthis.log(LogLevel.Error, format([message, ...args]));\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Critical)) {\n\t\t\tthis.log(LogLevel.Critical, format([message, ...args]));\n\t\t}\n\t}\n\n\tflush(): void { }\n}\n\n\nexport class ConsoleMainLogger extends AbstractLogger implements ILogger {\n\n\tprivate useColors: boolean;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t\tthis.useColors = !isWindows;\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.warn(`\\x1b[93m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[91m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n\n}\n\nexport class ConsoleLogger extends AbstractLogger implements ILogger {\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tconsole.log('%cTRACE', 'color: #888', message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tconsole.log('%cDEBUG', 'background: #eee; color: #888', message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tconsole.log('%c INFO', 'color: #33f', message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tconsole.log('%c WARN', 'color: #993', message, ...args);\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tconsole.log('%c  ERR', 'color: #f33', message, ...args);\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tconsole.log('%cCRITI', 'background: #f33; color: white', message, ...args);\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n}\n\nexport class AdapterLogger extends AbstractLogger implements ILogger {\n\n\tconstructor(private readonly adapter: { log: (logLevel: LogLevel, args: any[]) => void }, logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tthis.adapter.log(LogLevel.Trace, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tthis.adapter.log(LogLevel.Debug, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tthis.adapter.log(LogLevel.Info, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tthis.adapter.log(LogLevel.Warning, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tthis.adapter.log(LogLevel.Error, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tthis.adapter.log(LogLevel.Critical, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tprivate extractMessage(msg: string | Error): string {\n\t\tif (typeof msg === 'string') {\n\t\t\treturn msg;\n\t\t}\n\n\t\treturn toErrorMessage(msg, this.getLevel() <= LogLevel.Trace);\n\t}\n\n\toverride dispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n}\n\nexport class MultiplexLogService extends AbstractLogger implements ILogService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private readonly logServices: ReadonlyArray<ILogger>) {\n\t\tsuper();\n\t\tif (logServices.length) {\n\t\t\tthis.setLevel(logServices[0].getLevel());\n\t\t}\n\t}\n\n\toverride setLevel(level: LogLevel): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.setLevel(level);\n\t\t}\n\t\tsuper.setLevel(level);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.trace(message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.debug(message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.info(message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.warn(message, ...args);\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.error(message, ...args);\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.critical(message, ...args);\n\t\t}\n\t}\n\n\tflush(): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.flush();\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.dispose();\n\t\t}\n\t}\n}\n\nexport class LogService extends Disposable implements ILogService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private logger: ILogger) {\n\t\tsuper();\n\t\tthis._register(logger);\n\t}\n\n\tget onDidChangeLogLevel(): Event<LogLevel> {\n\t\treturn this.logger.onDidChangeLogLevel;\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tthis.logger.setLevel(level);\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.logger.getLevel();\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tthis.logger.trace(message, ...args);\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tthis.logger.debug(message, ...args);\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tthis.logger.info(message, ...args);\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tthis.logger.warn(message, ...args);\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tthis.logger.error(message, ...args);\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tthis.logger.critical(message, ...args);\n\t}\n\n\tflush(): void {\n\t\tthis.logger.flush();\n\t}\n}\n\nexport abstract class AbstractLoggerService extends Disposable implements ILoggerService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly loggers = new Map<string, ILogger>();\n\tprivate readonly logLevelChangeableLoggers: ILogger[] = [];\n\n\tconstructor(\n\t\tprivate logLevel: LogLevel,\n\t\tonDidChangeLogLevel: Event<LogLevel>,\n\t) {\n\t\tsuper();\n\t\tthis._register(onDidChangeLogLevel(logLevel => {\n\t\t\tthis.logLevel = logLevel;\n\t\t\tthis.logLevelChangeableLoggers.forEach(logger => logger.setLevel(logLevel));\n\t\t}));\n\t}\n\n\tgetLogger(resource: URI) {\n\t\treturn this.loggers.get(resource.toString());\n\t}\n\n\tcreateLogger(resource: URI, options?: ILoggerOptions): ILogger {\n\t\tlet logger = this.loggers.get(resource.toString());\n\t\tif (!logger) {\n\t\t\tlogger = this.doCreateLogger(resource, options?.always ? LogLevel.Trace : this.logLevel, options);\n\t\t\tthis.loggers.set(resource.toString(), logger);\n\t\t\tif (!options?.always) {\n\t\t\t\tthis.logLevelChangeableLoggers.push(logger);\n\t\t\t}\n\t\t}\n\t\treturn logger;\n\t}\n\n\toverride dispose(): void {\n\t\tthis.logLevelChangeableLoggers.splice(0, this.logLevelChangeableLoggers.length);\n\t\tthis.loggers.forEach(logger => logger.dispose());\n\t\tthis.loggers.clear();\n\t\tsuper.dispose();\n\t}\n\n\tprotected abstract doCreateLogger(resource: URI, logLevel: LogLevel, options?: ILoggerOptions): ILogger;\n}\n\nexport class NullLogService implements ILogService {\n\tdeclare readonly _serviceBrand: undefined;\n\treadonly onDidChangeLogLevel: Event<LogLevel> = new Emitter<LogLevel>().event;\n\tsetLevel(level: LogLevel): void { }\n\tgetLevel(): LogLevel { return LogLevel.Info; }\n\ttrace(message: string, ...args: any[]): void { }\n\tdebug(message: string, ...args: any[]): void { }\n\tinfo(message: string, ...args: any[]): void { }\n\twarn(message: string, ...args: any[]): void { }\n\terror(message: string | Error, ...args: any[]): void { }\n\tcritical(message: string | Error, ...args: any[]): void { }\n\tdispose(): void { }\n\tflush(): void { }\n}\n\nexport function getLogLevel(environmentService: IEnvironmentService): LogLevel {\n\tif (environmentService.verbose) {\n\t\treturn LogLevel.Trace;\n\t}\n\tif (typeof environmentService.logLevel === 'string') {\n\t\tconst logLevel = parseLogLevel(environmentService.logLevel.toLowerCase());\n\t\tif (logLevel !== undefined) {\n\t\t\treturn logLevel;\n\t\t}\n\t}\n\treturn DEFAULT_LOG_LEVEL;\n}\n\nexport function parseLogLevel(logLevel: string): LogLevel | undefined {\n\tswitch (logLevel) {\n\t\tcase 'trace':\n\t\t\treturn LogLevel.Trace;\n\t\tcase 'debug':\n\t\t\treturn LogLevel.Debug;\n\t\tcase 'info':\n\t\t\treturn LogLevel.Info;\n\t\tcase 'warn':\n\t\t\treturn LogLevel.Warning;\n\t\tcase 'error':\n\t\t\treturn LogLevel.Error;\n\t\tcase 'critical':\n\t\t\treturn LogLevel.Critical;\n\t\tcase 'off':\n\t\t\treturn LogLevel.Off;\n\t}\n\treturn undefined;\n}\n\nexport function LogLevelToString(logLevel: LogLevel): string {\n\tswitch (logLevel) {\n\t\tcase LogLevel.Trace: return 'trace';\n\t\tcase LogLevel.Debug: return 'debug';\n\t\tcase LogLevel.Info: return 'info';\n\t\tcase LogLevel.Warning: return 'warn';\n\t\tcase LogLevel.Error: return 'error';\n\t\tcase LogLevel.Critical: return 'critical';\n\t\tcase LogLevel.Off: return 'off';\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ChildProcess, fork } from 'child_process';\nimport { Limiter } from 'vs/base/common/async';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport { join } from 'vs/base/common/path';\nimport { Promises } from 'vs/base/node/pfs';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ILocalExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nexport class ExtensionsLifecycle extends Disposable {\n\n\tprivate processesLimiter: Limiter<void> = new Limiter(5); // Run max 5 processes in parallel\n\n\tconstructor(\n\t\t@IEnvironmentService private environmentService: IEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t}\n\n\tasync postUninstall(extension: ILocalExtension): Promise<void> {\n\t\tconst script = this.parseScript(extension, 'uninstall');\n\t\tif (script) {\n\t\t\tthis.logService.info(extension.identifier.id, extension.manifest.version, `Running post uninstall script`);\n\t\t\tawait this.processesLimiter.queue(() =>\n\t\t\t\tthis.runLifecycleHook(script.script, 'uninstall', script.args, true, extension)\n\t\t\t\t\t.then(() => this.logService.info(extension.identifier.id, extension.manifest.version, `Finished running post uninstall script`), err => this.logService.error(extension.identifier.id, extension.manifest.version, `Failed to run post uninstall script: ${err}`)));\n\t\t}\n\t\treturn Promises.rm(this.getExtensionStoragePath(extension)).then(undefined, e => this.logService.error('Error while removing extension storage path', e));\n\t}\n\n\tprivate parseScript(extension: ILocalExtension, type: string): { script: string, args: string[] } | null {\n\t\tconst scriptKey = `vscode:${type}`;\n\t\tif (extension.location.scheme === Schemas.file && extension.manifest && extension.manifest['scripts'] && typeof extension.manifest['scripts'][scriptKey] === 'string') {\n\t\t\tconst script = (<string>extension.manifest['scripts'][scriptKey]).split(' ');\n\t\t\tif (script.length < 2 || script[0] !== 'node' || !script[1]) {\n\t\t\t\tthis.logService.warn(extension.identifier.id, extension.manifest.version, `${scriptKey} should be a node script`);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn { script: join(extension.location.fsPath, script[1]), args: script.slice(2) || [] };\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate runLifecycleHook(lifecycleHook: string, lifecycleType: string, args: string[], timeout: boolean, extension: ILocalExtension): Promise<void> {\n\t\treturn new Promise<void>((c, e) => {\n\n\t\t\tconst extensionLifecycleProcess = this.start(lifecycleHook, lifecycleType, args, extension);\n\t\t\tlet timeoutHandler: any;\n\n\t\t\tconst onexit = (error?: string) => {\n\t\t\t\tif (timeoutHandler) {\n\t\t\t\t\tclearTimeout(timeoutHandler);\n\t\t\t\t\ttimeoutHandler = null;\n\t\t\t\t}\n\t\t\t\tif (error) {\n\t\t\t\t\te(error);\n\t\t\t\t} else {\n\t\t\t\t\tc(undefined);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// on error\n\t\t\textensionLifecycleProcess.on('error', (err) => {\n\t\t\t\tonexit(toErrorMessage(err) || 'Unknown');\n\t\t\t});\n\n\t\t\t// on exit\n\t\t\textensionLifecycleProcess.on('exit', (code: number, signal: string) => {\n\t\t\t\tonexit(code ? `post-${lifecycleType} process exited with code ${code}` : undefined);\n\t\t\t});\n\n\t\t\tif (timeout) {\n\t\t\t\t// timeout: kill process after waiting for 5s\n\t\t\t\ttimeoutHandler = setTimeout(() => {\n\t\t\t\t\ttimeoutHandler = null;\n\t\t\t\t\textensionLifecycleProcess.kill();\n\t\t\t\t\te('timed out');\n\t\t\t\t}, 5000);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate start(uninstallHook: string, lifecycleType: string, args: string[], extension: ILocalExtension): ChildProcess {\n\t\tconst opts = {\n\t\t\tsilent: true,\n\t\t\texecArgv: undefined\n\t\t};\n\t\tconst extensionUninstallProcess = fork(uninstallHook, [`--type=extension-post-${lifecycleType}`, ...args], opts);\n\n\t\t// Catch all output coming from the process\n\t\ttype Output = { data: string, format: string[] };\n\t\textensionUninstallProcess.stdout!.setEncoding('utf8');\n\t\textensionUninstallProcess.stderr!.setEncoding('utf8');\n\n\t\tconst onStdout = Event.fromNodeEventEmitter<string>(extensionUninstallProcess.stdout!, 'data');\n\t\tconst onStderr = Event.fromNodeEventEmitter<string>(extensionUninstallProcess.stderr!, 'data');\n\n\t\t// Log output\n\t\tonStdout(data => this.logService.info(extension.identifier.id, extension.manifest.version, `post-${lifecycleType}`, data));\n\t\tonStderr(data => this.logService.error(extension.identifier.id, extension.manifest.version, `post-${lifecycleType}`, data));\n\n\t\tconst onOutput = Event.any(\n\t\t\tEvent.map(onStdout, o => ({ data: `%c${o}`, format: [''] })),\n\t\t\tEvent.map(onStderr, o => ({ data: `%c${o}`, format: ['color: red'] }))\n\t\t);\n\t\t// Debounce all output, so we can render it in the Chrome console as a group\n\t\tconst onDebouncedOutput = Event.debounce<Output>(onOutput, (r, o) => {\n\t\t\treturn r\n\t\t\t\t? { data: r.data + o.data, format: [...r.format, ...o.format] }\n\t\t\t\t: { data: o.data, format: o.format };\n\t\t}, 100);\n\n\t\t// Print out output\n\t\tonDebouncedOutput(data => {\n\t\t\tconsole.group(extension.identifier.id);\n\t\t\tconsole.log(data.data, ...data.format);\n\t\t\tconsole.groupEnd();\n\t\t});\n\n\t\treturn extensionUninstallProcess;\n\t}\n\n\tprivate getExtensionStoragePath(extension: ILocalExtension): string {\n\t\treturn join(this.environmentService.globalStorageHome.fsPath, extension.identifier.id.toLowerCase());\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { insert } from 'vs/base/common/arrays';\nimport { ThrottledDelayer } from 'vs/base/common/async';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Emitter } from 'vs/base/common/event';\nimport { combinedDisposable, Disposable, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { normalize } from 'vs/base/common/path';\nimport { URI } from 'vs/base/common/uri';\nimport { IFileChange, IWatchOptions } from 'vs/platform/files/common/files';\nimport { IDiskFileChange, ILogMessage, IWatchRequest, toFileChanges, WatcherService } from 'vs/platform/files/common/watcher';\nimport { ILogService, LogLevel } from 'vs/platform/log/common/log';\n\nexport abstract class AbstractDiskFileSystemProvider extends Disposable {\n\n\tconstructor(\n\t\tprotected readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t}\n\n\t//#region File Watching\n\n\tprotected readonly _onDidErrorOccur = this._register(new Emitter<string>());\n\treadonly onDidErrorOccur = this._onDidErrorOccur.event;\n\n\tprotected readonly _onDidChangeFile = this._register(new Emitter<readonly IFileChange[]>());\n\treadonly onDidChangeFile = this._onDidChangeFile.event;\n\n\tprivate recursiveWatcher: WatcherService | undefined;\n\tprivate readonly recursiveFoldersToWatch: IWatchRequest[] = [];\n\tprivate recursiveWatchRequestDelayer = this._register(new ThrottledDelayer<void>(0));\n\n\twatch(resource: URI, opts: IWatchOptions): IDisposable {\n\t\tif (opts.recursive) {\n\t\t\treturn this.watchRecursive(resource, opts);\n\t\t}\n\n\t\treturn this.watchNonRecursive(resource);\n\t}\n\n\tprivate watchRecursive(resource: URI, opts: IWatchOptions): IDisposable {\n\n\t\t// Add to list of folders to watch recursively\n\t\tconst folderToWatch: IWatchRequest = { path: this.toFilePath(resource), excludes: opts.excludes };\n\t\tconst remove = insert(this.recursiveFoldersToWatch, folderToWatch);\n\n\t\t// Trigger update\n\t\tthis.refreshRecursiveWatchers();\n\n\t\treturn toDisposable(() => {\n\n\t\t\t// Remove from list of folders to watch recursively\n\t\t\tremove();\n\n\t\t\t// Trigger update\n\t\t\tthis.refreshRecursiveWatchers();\n\t\t});\n\t}\n\n\tprivate refreshRecursiveWatchers(): void {\n\n\t\t// Buffer requests for recursive watching to decide on right watcher\n\t\t// that supports potentially watching more than one folder at once\n\t\tthis.recursiveWatchRequestDelayer.trigger(() => {\n\t\t\treturn this.doRefreshRecursiveWatchers();\n\t\t}).catch(error => onUnexpectedError(error));\n\t}\n\n\tprivate doRefreshRecursiveWatchers(): Promise<void> {\n\n\t\t// Create watcher if this is the first time\n\t\tif (!this.recursiveWatcher) {\n\t\t\tthis.recursiveWatcher = this._register(this.createRecursiveWatcher(\n\t\t\t\tchanges => this._onDidChangeFile.fire(toFileChanges(changes)),\n\t\t\t\tmsg => this.onWatcherLogMessage(msg),\n\t\t\t\tthis.logService.getLevel() === LogLevel.Trace\n\t\t\t));\n\n\t\t\t// Apply log levels dynamically\n\t\t\tthis._register(this.logService.onDidChangeLogLevel(() => {\n\t\t\t\tthis.recursiveWatcher?.setVerboseLogging(this.logService.getLevel() === LogLevel.Trace);\n\t\t\t}));\n\t\t}\n\n\t\t// Ask to watch the provided folders\n\t\treturn this.doWatch(this.recursiveWatcher, this.recursiveFoldersToWatch);\n\t}\n\n\tprotected doWatch(watcher: WatcherService, requests: IWatchRequest[]): Promise<void> {\n\t\treturn watcher.watch(requests);\n\t}\n\n\tprotected abstract createRecursiveWatcher(\n\t\tonChange: (changes: IDiskFileChange[]) => void,\n\t\tonLogMessage: (msg: ILogMessage) => void,\n\t\tverboseLogging: boolean\n\t): WatcherService;\n\n\tprivate watchNonRecursive(resource: URI): IDisposable {\n\t\tconst watcherService = this.createNonRecursiveWatcher(\n\t\t\tthis.toFilePath(resource),\n\t\t\tchanges => this._onDidChangeFile.fire(toFileChanges(changes)),\n\t\t\tmsg => this.onWatcherLogMessage(msg),\n\t\t\tthis.logService.getLevel() === LogLevel.Trace\n\t\t);\n\n\t\tconst logLevelListener = this.logService.onDidChangeLogLevel(() => {\n\t\t\twatcherService.setVerboseLogging(this.logService.getLevel() === LogLevel.Trace);\n\t\t});\n\n\t\treturn combinedDisposable(watcherService, logLevelListener);\n\t}\n\n\tprivate onWatcherLogMessage(msg: ILogMessage): void {\n\t\tif (msg.type === 'error') {\n\t\t\tthis._onDidErrorOccur.fire(msg.message);\n\t\t}\n\n\t\tthis.logService[msg.type](msg.message);\n\t}\n\n\tprotected abstract createNonRecursiveWatcher(\n\t\tpath: string,\n\t\tonChange: (changes: IDiskFileChange[]) => void,\n\t\tonLogMessage: (msg: ILogMessage) => void,\n\t\tverboseLogging: boolean\n\t): IDisposable & { setVerboseLogging: (verboseLogging: boolean) => void };\n\n\tprotected toFilePath(resource: URI): string {\n\t\treturn normalize(resource.fsPath);\n\t}\n\n\t//#endregion\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { coalesce } from 'vs/base/common/arrays';\nimport { Promises, ResourceQueue, ThrottledWorker } from 'vs/base/common/async';\nimport { bufferedStreamToBuffer, bufferToReadable, newWriteableBufferStream, readableToBuffer, streamToBuffer, VSBuffer, VSBufferReadable, VSBufferReadableBufferedStream, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { Emitter } from 'vs/base/common/event';\nimport { Iterable } from 'vs/base/common/iterator';\nimport { Disposable, DisposableStore, dispose, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { Schemas } from 'vs/base/common/network';\nimport { mark } from 'vs/base/common/performance';\nimport { extUri, extUriIgnorePathCase, IExtUri, isAbsolutePath } from 'vs/base/common/resources';\nimport { consumeStream, isReadableBufferedStream, isReadableStream, listenStream, newWriteableStream, peekReadable, peekStream, transform } from 'vs/base/common/stream';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { ensureFileSystemProviderError, etag, ETAG_DISABLED, FileChangesEvent, FileDeleteOptions, FileOperation, FileOperationError, FileOperationEvent, FileOperationResult, FilePermission, FileSystemProviderCapabilities, FileSystemProviderErrorCode, FileType, hasFileFolderCopyCapability, hasFileReadStreamCapability, hasOpenReadWriteCloseCapability, hasReadWriteCapability, ICreateFileOptions, IFileChange, IFileContent, IFileService, IFileStat, IFileStatWithMetadata, IFileStreamContent, IFileSystemProvider, IFileSystemProviderActivationEvent, IFileSystemProviderCapabilitiesChangeEvent, IFileSystemProviderRegistrationEvent, IFileSystemProviderWithFileReadStreamCapability, IFileSystemProviderWithFileReadWriteCapability, IFileSystemProviderWithOpenReadWriteCloseCapability, IRawFileChangesEvent, IReadFileOptions, IReadFileStreamOptions, IResolveFileOptions, IResolveFileResult, IResolveFileResultWithMetadata, IResolveMetadataFileOptions, IStat, IWatchOptions, IWriteFileOptions, NotModifiedSinceFileOperationError, toFileOperationResult, toFileSystemProviderErrorCode } from 'vs/platform/files/common/files';\nimport { readFileIntoStream } from 'vs/platform/files/common/io';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nexport class FileService extends Disposable implements IFileService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\t// Choose a buffer size that is a balance between memory needs and\n\t// manageable IPC overhead. The larger the buffer size, the less\n\t// roundtrips we have to do for reading/writing data.\n\tprivate readonly BUFFER_SIZE = 256 * 1024;\n\n\tconstructor(@ILogService private readonly logService: ILogService) {\n\t\tsuper();\n\t}\n\n\t//#region File System Provider\n\n\tprivate readonly _onDidChangeFileSystemProviderRegistrations = this._register(new Emitter<IFileSystemProviderRegistrationEvent>());\n\treadonly onDidChangeFileSystemProviderRegistrations = this._onDidChangeFileSystemProviderRegistrations.event;\n\n\tprivate readonly _onWillActivateFileSystemProvider = this._register(new Emitter<IFileSystemProviderActivationEvent>());\n\treadonly onWillActivateFileSystemProvider = this._onWillActivateFileSystemProvider.event;\n\n\tprivate readonly _onDidChangeFileSystemProviderCapabilities = this._register(new Emitter<IFileSystemProviderCapabilitiesChangeEvent>());\n\treadonly onDidChangeFileSystemProviderCapabilities = this._onDidChangeFileSystemProviderCapabilities.event;\n\n\tprivate readonly provider = new Map<string, IFileSystemProvider>();\n\n\tregisterProvider(scheme: string, provider: IFileSystemProvider): IDisposable {\n\t\tif (this.provider.has(scheme)) {\n\t\t\tthrow new Error(`A filesystem provider for the scheme '${scheme}' is already registered.`);\n\t\t}\n\n\t\tmark(`code/registerFilesystem/${scheme}`);\n\n\t\t// Add provider with event\n\t\tthis.provider.set(scheme, provider);\n\t\tthis._onDidChangeFileSystemProviderRegistrations.fire({ added: true, scheme, provider });\n\n\t\t// Forward events from provider\n\t\tconst providerDisposables = new DisposableStore();\n\t\tproviderDisposables.add(provider.onDidChangeFile(changes => this.onDidChangeFile(changes, this.isPathCaseSensitive(provider))));\n\t\tproviderDisposables.add(provider.onDidChangeCapabilities(() => this._onDidChangeFileSystemProviderCapabilities.fire({ provider, scheme })));\n\t\tif (typeof provider.onDidErrorOccur === 'function') {\n\t\t\tproviderDisposables.add(provider.onDidErrorOccur(error => this._onError.fire(new Error(error))));\n\t\t}\n\n\t\treturn toDisposable(() => {\n\t\t\tthis._onDidChangeFileSystemProviderRegistrations.fire({ added: false, scheme, provider });\n\t\t\tthis.provider.delete(scheme);\n\n\t\t\tdispose(providerDisposables);\n\t\t});\n\t}\n\n\tgetProvider(scheme: string): IFileSystemProvider | undefined {\n\t\treturn this.provider.get(scheme);\n\t}\n\n\tasync activateProvider(scheme: string): Promise<void> {\n\n\t\t// Emit an event that we are about to activate a provider with the given scheme.\n\t\t// Listeners can participate in the activation by registering a provider for it.\n\t\tconst joiners: Promise<void>[] = [];\n\t\tthis._onWillActivateFileSystemProvider.fire({\n\t\t\tscheme,\n\t\t\tjoin(promise) {\n\t\t\t\tjoiners.push(promise);\n\t\t\t},\n\t\t});\n\n\t\tif (this.provider.has(scheme)) {\n\t\t\treturn; // provider is already here so we can return directly\n\t\t}\n\n\t\t// If the provider is not yet there, make sure to join on the listeners assuming\n\t\t// that it takes a bit longer to register the file system provider.\n\t\tawait Promises.settled(joiners);\n\t}\n\n\tasync canHandleResource(resource: URI): Promise<boolean> {\n\n\t\t// Await activation of potentially extension contributed providers\n\t\tawait this.activateProvider(resource.scheme);\n\n\t\treturn this.hasProvider(resource);\n\t}\n\n\thasProvider(resource: URI): boolean {\n\t\treturn this.provider.has(resource.scheme);\n\t}\n\n\thasCapability(resource: URI, capability: FileSystemProviderCapabilities): boolean {\n\t\tconst provider = this.provider.get(resource.scheme);\n\n\t\treturn !!(provider && (provider.capabilities & capability));\n\t}\n\n\tlistCapabilities(): Iterable<{ scheme: string, capabilities: FileSystemProviderCapabilities; }> {\n\t\treturn Iterable.map(this.provider, ([scheme, provider]) => ({ scheme, capabilities: provider.capabilities }));\n\t}\n\n\tprotected async withProvider(resource: URI): Promise<IFileSystemProvider> {\n\n\t\t// Assert path is absolute\n\t\tif (!isAbsolutePath(resource)) {\n\t\t\tthrow new FileOperationError(localize('invalidPath', \"Unable to resolve filesystem provider with relative file path '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_INVALID_PATH);\n\t\t}\n\n\t\t// Activate provider\n\t\tawait this.activateProvider(resource.scheme);\n\n\t\t// Assert provider\n\t\tconst provider = this.provider.get(resource.scheme);\n\t\tif (!provider) {\n\t\t\tconst error = new Error();\n\t\t\terror.name = 'ENOPRO';\n\t\t\terror.message = localize('noProviderFound', \"No file system provider found for resource '{0}'\", resource.toString());\n\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn provider;\n\t}\n\n\tprivate async withReadProvider(resource: URI): Promise<IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability | IFileSystemProviderWithFileReadStreamCapability> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\tif (hasOpenReadWriteCloseCapability(provider) || hasReadWriteCapability(provider) || hasFileReadStreamCapability(provider)) {\n\t\t\treturn provider;\n\t\t}\n\n\t\tthrow new Error(`Filesystem provider for scheme '${resource.scheme}' neither has FileReadWrite, FileReadStream nor FileOpenReadWriteClose capability which is needed for the read operation.`);\n\t}\n\n\tprivate async withWriteProvider(resource: URI): Promise<IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\tif (hasOpenReadWriteCloseCapability(provider) || hasReadWriteCapability(provider)) {\n\t\t\treturn provider;\n\t\t}\n\n\t\tthrow new Error(`Filesystem provider for scheme '${resource.scheme}' neither has FileReadWrite nor FileOpenReadWriteClose capability which is needed for the write operation.`);\n\t}\n\n\t//#endregion\n\n\tprivate readonly _onDidRunOperation = this._register(new Emitter<FileOperationEvent>());\n\treadonly onDidRunOperation = this._onDidRunOperation.event;\n\n\tprivate readonly _onError = this._register(new Emitter<Error>());\n\treadonly onError = this._onError.event;\n\n\t//#region File Metadata Resolving\n\n\tasync resolve(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tasync resolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\tasync resolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat> {\n\t\ttry {\n\t\t\treturn await this.doResolveFile(resource, options);\n\t\t} catch (error) {\n\n\t\t\t// Specially handle file not found case as file operation result\n\t\t\tif (toFileSystemProviderErrorCode(error) === FileSystemProviderErrorCode.FileNotFound) {\n\t\t\t\tthrow new FileOperationError(localize('fileNotFoundError', \"Unable to resolve nonexistent file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_NOT_FOUND);\n\t\t\t}\n\n\t\t\t// Bubble up any other error as is\n\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprivate async doResolveFile(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tprivate async doResolveFile(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\tprivate async doResolveFile(resource: URI, options?: IResolveFileOptions): Promise<IFileStat> {\n\t\tconst provider = await this.withProvider(resource);\n\t\tconst isPathCaseSensitive = this.isPathCaseSensitive(provider);\n\n\t\tconst resolveTo = options?.resolveTo;\n\t\tconst resolveSingleChildDescendants = options?.resolveSingleChildDescendants;\n\t\tconst resolveMetadata = options?.resolveMetadata;\n\n\t\tconst stat = await provider.stat(resource);\n\n\t\tlet trie: TernarySearchTree<URI, boolean> | undefined;\n\n\t\treturn this.toFileStat(provider, resource, stat, undefined, !!resolveMetadata, (stat, siblings) => {\n\n\t\t\t// lazy trie to check for recursive resolving\n\t\t\tif (!trie) {\n\t\t\t\ttrie = TernarySearchTree.forUris<true>(() => !isPathCaseSensitive);\n\t\t\t\ttrie.set(resource, true);\n\t\t\t\tif (resolveTo) {\n\t\t\t\t\ttrie.fill(true, resolveTo);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// check for recursive resolving\n\t\t\tif (trie.get(stat.resource) || trie.findSuperstr(stat.resource.with({ query: null, fragment: null } /* required for https://github.com/microsoft/vscode/issues/128151 */))) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// check for resolving single child folders\n\t\t\tif (stat.isDirectory && resolveSingleChildDescendants) {\n\t\t\t\treturn siblings === 1;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tprivate async toFileStat(provider: IFileSystemProvider, resource: URI, stat: IStat | { type: FileType; } & Partial<IStat>, siblings: number | undefined, resolveMetadata: boolean, recurse: (stat: IFileStat, siblings?: number) => boolean): Promise<IFileStat>;\n\tprivate async toFileStat(provider: IFileSystemProvider, resource: URI, stat: IStat, siblings: number | undefined, resolveMetadata: true, recurse: (stat: IFileStat, siblings?: number) => boolean): Promise<IFileStatWithMetadata>;\n\tprivate async toFileStat(provider: IFileSystemProvider, resource: URI, stat: IStat | { type: FileType; } & Partial<IStat>, siblings: number | undefined, resolveMetadata: boolean, recurse: (stat: IFileStat, siblings?: number) => boolean): Promise<IFileStat> {\n\t\tconst { providerExtUri } = this.getExtUri(provider);\n\n\t\t// convert to file stat\n\t\tconst fileStat: IFileStat = {\n\t\t\tresource,\n\t\t\tname: providerExtUri.basename(resource),\n\t\t\tisFile: (stat.type & FileType.File) !== 0,\n\t\t\tisDirectory: (stat.type & FileType.Directory) !== 0,\n\t\t\tisSymbolicLink: (stat.type & FileType.SymbolicLink) !== 0,\n\t\t\tmtime: stat.mtime,\n\t\t\tctime: stat.ctime,\n\t\t\tsize: stat.size,\n\t\t\treadonly: Boolean((stat.permissions ?? 0) & FilePermission.Readonly) || Boolean(provider.capabilities & FileSystemProviderCapabilities.Readonly),\n\t\t\tetag: etag({ mtime: stat.mtime, size: stat.size })\n\t\t};\n\n\t\t// check to recurse for directories\n\t\tif (fileStat.isDirectory && recurse(fileStat, siblings)) {\n\t\t\ttry {\n\t\t\t\tconst entries = await provider.readdir(resource);\n\t\t\t\tconst resolvedEntries = await Promises.settled(entries.map(async ([name, type]) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst childResource = providerExtUri.joinPath(resource, name);\n\t\t\t\t\t\tconst childStat = resolveMetadata ? await provider.stat(childResource) : { type };\n\n\t\t\t\t\t\treturn await this.toFileStat(provider, childResource, childStat, entries.length, resolveMetadata, recurse);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.logService.trace(error);\n\n\t\t\t\t\t\treturn null; // can happen e.g. due to permission errors\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\t// make sure to get rid of null values that signal a failure to resolve a particular entry\n\t\t\t\tfileStat.children = coalesce(resolvedEntries);\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.trace(error);\n\n\t\t\t\tfileStat.children = []; // gracefully handle errors, we may not have permissions to read\n\t\t\t}\n\n\t\t\treturn fileStat;\n\t\t}\n\n\t\treturn fileStat;\n\t}\n\n\tasync resolveAll(toResolve: { resource: URI, options?: IResolveFileOptions; }[]): Promise<IResolveFileResult[]>;\n\tasync resolveAll(toResolve: { resource: URI, options: IResolveMetadataFileOptions; }[]): Promise<IResolveFileResultWithMetadata[]>;\n\tasync resolveAll(toResolve: { resource: URI; options?: IResolveFileOptions; }[]): Promise<IResolveFileResult[]> {\n\t\treturn Promises.settled(toResolve.map(async entry => {\n\t\t\ttry {\n\t\t\t\treturn { stat: await this.doResolveFile(entry.resource, entry.options), success: true };\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.trace(error);\n\n\t\t\t\treturn { stat: undefined, success: false };\n\t\t\t}\n\t\t}));\n\t}\n\n\tasync exists(resource: URI): Promise<boolean> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\ttry {\n\t\t\tconst stat = await provider.stat(resource);\n\n\t\t\treturn !!stat;\n\t\t} catch (error) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region File Reading/Writing\n\n\tasync canCreateFile(resource: URI, options?: ICreateFileOptions): Promise<Error | true> {\n\t\ttry {\n\t\t\tawait this.doValidateCreateFile(resource, options);\n\t\t} catch (error) {\n\t\t\treturn error;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate async doValidateCreateFile(resource: URI, options?: ICreateFileOptions): Promise<void> {\n\n\t\t// validate overwrite\n\t\tif (!options?.overwrite && await this.exists(resource)) {\n\t\t\tthrow new FileOperationError(localize('fileExists', \"Unable to create file '{0}' that already exists when overwrite flag is not set\", this.resourceForError(resource)), FileOperationResult.FILE_MODIFIED_SINCE, options);\n\t\t}\n\t}\n\n\tasync createFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream = VSBuffer.fromString(''), options?: ICreateFileOptions): Promise<IFileStatWithMetadata> {\n\n\t\t// validate\n\t\tawait this.doValidateCreateFile(resource, options);\n\n\t\t// do write into file (this will create it too)\n\t\tconst fileStat = await this.writeFile(resource, bufferOrReadableOrStream);\n\n\t\t// events\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(resource, FileOperation.CREATE, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tasync writeFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: IWriteFileOptions): Promise<IFileStatWithMetadata> {\n\t\tconst provider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(resource), resource);\n\t\tconst { providerExtUri } = this.getExtUri(provider);\n\n\t\ttry {\n\n\t\t\t// validate write\n\t\t\tconst stat = await this.validateWriteFile(provider, resource, options);\n\n\t\t\t// mkdir recursively as needed\n\t\t\tif (!stat) {\n\t\t\t\tawait this.mkdirp(provider, providerExtUri.dirname(resource));\n\t\t\t}\n\n\t\t\t// optimization: if the provider has unbuffered write capability and the data\n\t\t\t// to write is a Readable, we consume up to 3 chunks and try to write the data\n\t\t\t// unbuffered to reduce the overhead. If the Readable has more data to provide\n\t\t\t// we continue to write buffered.\n\t\t\tlet bufferOrReadableOrStreamOrBufferedStream: VSBuffer | VSBufferReadable | VSBufferReadableStream | VSBufferReadableBufferedStream;\n\t\t\tif (hasReadWriteCapability(provider) && !(bufferOrReadableOrStream instanceof VSBuffer)) {\n\t\t\t\tif (isReadableStream(bufferOrReadableOrStream)) {\n\t\t\t\t\tconst bufferedStream = await peekStream(bufferOrReadableOrStream, 3);\n\t\t\t\t\tif (bufferedStream.ended) {\n\t\t\t\t\t\tbufferOrReadableOrStreamOrBufferedStream = VSBuffer.concat(bufferedStream.buffer);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbufferOrReadableOrStreamOrBufferedStream = bufferedStream;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbufferOrReadableOrStreamOrBufferedStream = peekReadable(bufferOrReadableOrStream, data => VSBuffer.concat(data), 3);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbufferOrReadableOrStreamOrBufferedStream = bufferOrReadableOrStream;\n\t\t\t}\n\n\t\t\t// write file: unbuffered (only if data to write is a buffer, or the provider has no buffered write capability)\n\t\t\tif (!hasOpenReadWriteCloseCapability(provider) || (hasReadWriteCapability(provider) && bufferOrReadableOrStreamOrBufferedStream instanceof VSBuffer)) {\n\t\t\t\tawait this.doWriteUnbuffered(provider, resource, options, bufferOrReadableOrStreamOrBufferedStream);\n\t\t\t}\n\n\t\t\t// write file: buffered\n\t\t\telse {\n\t\t\t\tawait this.doWriteBuffered(provider, resource, options, bufferOrReadableOrStreamOrBufferedStream instanceof VSBuffer ? bufferToReadable(bufferOrReadableOrStreamOrBufferedStream) : bufferOrReadableOrStreamOrBufferedStream);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthrow new FileOperationError(localize('err.write', \"Unable to write file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options);\n\t\t}\n\n\t\treturn this.resolve(resource, { resolveMetadata: true });\n\t}\n\n\tprivate async validateWriteFile(provider: IFileSystemProvider, resource: URI, options?: IWriteFileOptions): Promise<IStat | undefined> {\n\n\t\t// Validate unlock support\n\t\tconst unlock = !!options?.unlock;\n\t\tif (unlock && !(provider.capabilities & FileSystemProviderCapabilities.FileWriteUnlock)) {\n\t\t\tthrow new Error(localize('writeFailedUnlockUnsupported', \"Unable to unlock file '{0}' because provider does not support it.\", this.resourceForError(resource)));\n\t\t}\n\n\t\t// Validate via file stat meta data\n\t\tlet stat: IStat | undefined = undefined;\n\t\ttry {\n\t\t\tstat = await provider.stat(resource);\n\t\t} catch (error) {\n\t\t\treturn undefined; // file might not exist\n\t\t}\n\n\t\t// File cannot be directory\n\t\tif ((stat.type & FileType.Directory) !== 0) {\n\t\t\tthrow new FileOperationError(localize('fileIsDirectoryWriteError', \"Unable to write file '{0}' that is actually a directory\", this.resourceForError(resource)), FileOperationResult.FILE_IS_DIRECTORY, options);\n\t\t}\n\n\t\t// File cannot be readonly\n\t\tthis.throwIfFileIsReadonly(resource, stat);\n\n\t\t// Dirty write prevention: if the file on disk has been changed and does not match our expected\n\t\t// mtime and etag, we bail out to prevent dirty writing.\n\t\t//\n\t\t// First, we check for a mtime that is in the future before we do more checks. The assumption is\n\t\t// that only the mtime is an indicator for a file that has changed on disk.\n\t\t//\n\t\t// Second, if the mtime has advanced, we compare the size of the file on disk with our previous\n\t\t// one using the etag() function. Relying only on the mtime check has prooven to produce false\n\t\t// positives due to file system weirdness (especially around remote file systems). As such, the\n\t\t// check for size is a weaker check because it can return a false negative if the file has changed\n\t\t// but to the same length. This is a compromise we take to avoid having to produce checksums of\n\t\t// the file content for comparison which would be much slower to compute.\n\t\tif (\n\t\t\ttypeof options?.mtime === 'number' && typeof options.etag === 'string' && options.etag !== ETAG_DISABLED &&\n\t\t\ttypeof stat.mtime === 'number' && typeof stat.size === 'number' &&\n\t\t\toptions.mtime < stat.mtime && options.etag !== etag({ mtime: options.mtime /* not using stat.mtime for a reason, see above */, size: stat.size })\n\t\t) {\n\t\t\tthrow new FileOperationError(localize('fileModifiedError', \"File Modified Since\"), FileOperationResult.FILE_MODIFIED_SINCE, options);\n\t\t}\n\n\t\treturn stat;\n\t}\n\n\tasync readFile(resource: URI, options?: IReadFileOptions): Promise<IFileContent> {\n\t\tconst provider = await this.withReadProvider(resource);\n\n\t\tif (options?.atomic) {\n\t\t\treturn this.doReadFileAtomic(provider, resource, options);\n\t\t}\n\n\t\treturn this.doReadFile(provider, resource, options);\n\t}\n\n\tprivate async doReadFileAtomic(provider: IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability | IFileSystemProviderWithFileReadStreamCapability, resource: URI, options?: IReadFileOptions): Promise<IFileContent> {\n\t\treturn new Promise<IFileContent>((resolve, reject) => {\n\t\t\tthis.writeQueue.queueFor(resource, this.getExtUri(provider).providerExtUri).queue(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst content = await this.doReadFile(provider, resource, options);\n\t\t\t\t\tresolve(content);\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate async doReadFile(provider: IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability | IFileSystemProviderWithFileReadStreamCapability, resource: URI, options?: IReadFileOptions): Promise<IFileContent> {\n\t\tconst stream = await this.doReadFileStream(provider, resource, {\n\t\t\t...options,\n\t\t\t// optimization: since we know that the caller does not\n\t\t\t// care about buffering, we indicate this to the reader.\n\t\t\t// this reduces all the overhead the buffered reading\n\t\t\t// has (open, read, close) if the provider supports\n\t\t\t// unbuffered reading.\n\t\t\tpreferUnbuffered: true\n\t\t});\n\n\t\treturn {\n\t\t\t...stream,\n\t\t\tvalue: await streamToBuffer(stream.value)\n\t\t};\n\t}\n\n\tasync readFileStream(resource: URI, options?: IReadFileStreamOptions): Promise<IFileStreamContent> {\n\t\tconst provider = await this.withReadProvider(resource);\n\n\t\treturn this.doReadFileStream(provider, resource, options);\n\t}\n\n\tprivate async doReadFileStream(provider: IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability | IFileSystemProviderWithFileReadStreamCapability, resource: URI, options?: IReadFileStreamOptions & { preferUnbuffered?: boolean; }): Promise<IFileStreamContent> {\n\n\t\t// install a cancellation token that gets cancelled\n\t\t// when any error occurs. this allows us to resolve\n\t\t// the content of the file while resolving metadata\n\t\t// but still cancel the operation in certain cases.\n\t\tconst cancellableSource = new CancellationTokenSource();\n\n\t\t// validate read operation\n\t\tconst statPromise = this.validateReadFile(resource, options).then(stat => stat, error => {\n\t\t\tcancellableSource.cancel();\n\n\t\t\tthrow error;\n\t\t});\n\n\t\tlet fileStream: VSBufferReadableStream | undefined = undefined;\n\t\ttry {\n\n\t\t\t// if the etag is provided, we await the result of the validation\n\t\t\t// due to the likelihood of hitting a NOT_MODIFIED_SINCE result.\n\t\t\t// otherwise, we let it run in parallel to the file reading for\n\t\t\t// optimal startup performance.\n\t\t\tif (typeof options?.etag === 'string' && options.etag !== ETAG_DISABLED) {\n\t\t\t\tawait statPromise;\n\t\t\t}\n\n\t\t\t// read unbuffered (only if either preferred, or the provider has no buffered read capability)\n\t\t\tif (!(hasOpenReadWriteCloseCapability(provider) || hasFileReadStreamCapability(provider)) || (hasReadWriteCapability(provider) && options?.preferUnbuffered)) {\n\t\t\t\tfileStream = this.readFileUnbuffered(provider, resource, options);\n\t\t\t}\n\n\t\t\t// read streamed (always prefer over primitive buffered read)\n\t\t\telse if (hasFileReadStreamCapability(provider)) {\n\t\t\t\tfileStream = this.readFileStreamed(provider, resource, cancellableSource.token, options);\n\t\t\t}\n\n\t\t\t// read buffered\n\t\t\telse {\n\t\t\t\tfileStream = this.readFileBuffered(provider, resource, cancellableSource.token, options);\n\t\t\t}\n\n\t\t\tconst fileStat = await statPromise;\n\n\t\t\treturn {\n\t\t\t\t...fileStat,\n\t\t\t\tvalue: fileStream\n\t\t\t};\n\t\t} catch (error) {\n\n\t\t\t// Await the stream to finish so that we exit this method\n\t\t\t// in a consistent state with file handles closed\n\t\t\t// (https://github.com/microsoft/vscode/issues/114024)\n\t\t\tif (fileStream) {\n\t\t\t\tawait consumeStream(fileStream);\n\t\t\t}\n\n\t\t\t// Re-throw errors as file operation errors but preserve\n\t\t\t// specific errors (such as not modified since)\n\t\t\tconst message = localize('err.read', \"Unable to read file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString());\n\t\t\tif (error instanceof NotModifiedSinceFileOperationError) {\n\t\t\t\tthrow new NotModifiedSinceFileOperationError(message, error.stat, options);\n\t\t\t} else {\n\t\t\t\tthrow new FileOperationError(message, toFileOperationResult(error), options);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate readFileStreamed(provider: IFileSystemProviderWithFileReadStreamCapability, resource: URI, token: CancellationToken, options: IReadFileStreamOptions = Object.create(null)): VSBufferReadableStream {\n\t\tconst fileStream = provider.readFileStream(resource, options, token);\n\n\t\treturn transform(fileStream, {\n\t\t\tdata: data => data instanceof VSBuffer ? data : VSBuffer.wrap(data),\n\t\t\terror: error => new FileOperationError(localize('err.read', \"Unable to read file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options)\n\t\t}, data => VSBuffer.concat(data));\n\t}\n\n\tprivate readFileBuffered(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, token: CancellationToken, options: IReadFileStreamOptions = Object.create(null)): VSBufferReadableStream {\n\t\tconst stream = newWriteableBufferStream();\n\n\t\treadFileIntoStream(provider, resource, stream, data => data, {\n\t\t\t...options,\n\t\t\tbufferSize: this.BUFFER_SIZE,\n\t\t\terrorTransformer: error => new FileOperationError(localize('err.read', \"Unable to read file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options)\n\t\t}, token);\n\n\t\treturn stream;\n\t}\n\n\tprivate readFileUnbuffered(provider: IFileSystemProviderWithFileReadWriteCapability, resource: URI, options?: IReadFileStreamOptions): VSBufferReadableStream {\n\t\tconst stream = newWriteableStream<VSBuffer>(data => VSBuffer.concat(data));\n\n\t\t// Read the file into the stream async but do not wait for\n\t\t// this to complete because streams work via events\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tlet buffer = await provider.readFile(resource);\n\n\t\t\t\t// respect position option\n\t\t\t\tif (typeof options?.position === 'number') {\n\t\t\t\t\tbuffer = buffer.slice(options.position);\n\t\t\t\t}\n\n\t\t\t\t// respect length option\n\t\t\t\tif (typeof options?.length === 'number') {\n\t\t\t\t\tbuffer = buffer.slice(0, options.length);\n\t\t\t\t}\n\n\t\t\t\t// Throw if file is too large to load\n\t\t\t\tthis.validateReadFileLimits(resource, buffer.byteLength, options);\n\n\t\t\t\t// End stream with data\n\t\t\t\tstream.end(VSBuffer.wrap(buffer));\n\t\t\t} catch (err) {\n\t\t\t\tstream.error(err);\n\t\t\t\tstream.end();\n\t\t\t}\n\t\t})();\n\n\t\treturn stream;\n\t}\n\n\tprivate async validateReadFile(resource: URI, options?: IReadFileStreamOptions): Promise<IFileStatWithMetadata> {\n\t\tconst stat = await this.resolve(resource, { resolveMetadata: true });\n\n\t\t// Throw if resource is a directory\n\t\tif (stat.isDirectory) {\n\t\t\tthrow new FileOperationError(localize('fileIsDirectoryReadError', \"Unable to read file '{0}' that is actually a directory\", this.resourceForError(resource)), FileOperationResult.FILE_IS_DIRECTORY, options);\n\t\t}\n\n\t\t// Throw if file not modified since (unless disabled)\n\t\tif (typeof options?.etag === 'string' && options.etag !== ETAG_DISABLED && options.etag === stat.etag) {\n\t\t\tthrow new NotModifiedSinceFileOperationError(localize('fileNotModifiedError', \"File not modified since\"), stat, options);\n\t\t}\n\n\t\t// Throw if file is too large to load\n\t\tthis.validateReadFileLimits(resource, stat.size, options);\n\n\t\treturn stat;\n\t}\n\n\tprivate validateReadFileLimits(resource: URI, size: number, options?: IReadFileStreamOptions): void {\n\t\tif (options?.limits) {\n\t\t\tlet tooLargeErrorResult: FileOperationResult | undefined = undefined;\n\n\t\t\tif (typeof options.limits.memory === 'number' && size > options.limits.memory) {\n\t\t\t\ttooLargeErrorResult = FileOperationResult.FILE_EXCEEDS_MEMORY_LIMIT;\n\t\t\t}\n\n\t\t\tif (typeof options.limits.size === 'number' && size > options.limits.size) {\n\t\t\t\ttooLargeErrorResult = FileOperationResult.FILE_TOO_LARGE;\n\t\t\t}\n\n\t\t\tif (typeof tooLargeErrorResult === 'number') {\n\t\t\t\tthrow new FileOperationError(localize('fileTooLargeError', \"Unable to read file '{0}' that is too large to open\", this.resourceForError(resource)), tooLargeErrorResult);\n\t\t\t}\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region Move/Copy/Delete/Create Folder\n\n\tasync canMove(source: URI, target: URI, overwrite?: boolean): Promise<Error | true> {\n\t\treturn this.doCanMoveCopy(source, target, 'move', overwrite);\n\t}\n\n\tasync canCopy(source: URI, target: URI, overwrite?: boolean): Promise<Error | true> {\n\t\treturn this.doCanMoveCopy(source, target, 'copy', overwrite);\n\t}\n\n\tprivate async doCanMoveCopy(source: URI, target: URI, mode: 'move' | 'copy', overwrite?: boolean): Promise<Error | true> {\n\t\tif (source.toString() !== target.toString()) {\n\t\t\ttry {\n\t\t\t\tconst sourceProvider = mode === 'move' ? this.throwIfFileSystemIsReadonly(await this.withWriteProvider(source), source) : await this.withReadProvider(source);\n\t\t\t\tconst targetProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(target), target);\n\n\t\t\t\tawait this.doValidateMoveCopy(sourceProvider, source, targetProvider, target, mode, overwrite);\n\t\t\t} catch (error) {\n\t\t\t\treturn error;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tasync move(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata> {\n\t\tconst sourceProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(source), source);\n\t\tconst targetProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(target), target);\n\n\t\t// move\n\t\tconst mode = await this.doMoveCopy(sourceProvider, source, targetProvider, target, 'move', !!overwrite);\n\n\t\t// resolve and send events\n\t\tconst fileStat = await this.resolve(target, { resolveMetadata: true });\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(source, mode === 'move' ? FileOperation.MOVE : FileOperation.COPY, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tasync copy(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata> {\n\t\tconst sourceProvider = await this.withReadProvider(source);\n\t\tconst targetProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(target), target);\n\n\t\t// copy\n\t\tconst mode = await this.doMoveCopy(sourceProvider, source, targetProvider, target, 'copy', !!overwrite);\n\n\t\t// resolve and send events\n\t\tconst fileStat = await this.resolve(target, { resolveMetadata: true });\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(source, mode === 'copy' ? FileOperation.COPY : FileOperation.MOVE, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tprivate async doMoveCopy(sourceProvider: IFileSystemProvider, source: URI, targetProvider: IFileSystemProvider, target: URI, mode: 'move' | 'copy', overwrite: boolean): Promise<'move' | 'copy'> {\n\t\tif (source.toString() === target.toString()) {\n\t\t\treturn mode; // simulate node.js behaviour here and do a no-op if paths match\n\t\t}\n\n\t\t// validation\n\t\tconst { exists, isSameResourceWithDifferentPathCase } = await this.doValidateMoveCopy(sourceProvider, source, targetProvider, target, mode, overwrite);\n\n\t\t// delete as needed (unless target is same resurce with different path case)\n\t\tif (exists && !isSameResourceWithDifferentPathCase && overwrite) {\n\t\t\tawait this.del(target, { recursive: true });\n\t\t}\n\n\t\t// create parent folders\n\t\tawait this.mkdirp(targetProvider, this.getExtUri(targetProvider).providerExtUri.dirname(target));\n\n\t\t// copy source => target\n\t\tif (mode === 'copy') {\n\n\t\t\t// same provider with fast copy: leverage copy() functionality\n\t\t\tif (sourceProvider === targetProvider && hasFileFolderCopyCapability(sourceProvider)) {\n\t\t\t\tawait sourceProvider.copy(source, target, { overwrite });\n\t\t\t}\n\n\t\t\t// when copying via buffer/unbuffered, we have to manually\n\t\t\t// traverse the source if it is a folder and not a file\n\t\t\telse {\n\t\t\t\tconst sourceFile = await this.resolve(source);\n\t\t\t\tif (sourceFile.isDirectory) {\n\t\t\t\t\tawait this.doCopyFolder(sourceProvider, sourceFile, targetProvider, target);\n\t\t\t\t} else {\n\t\t\t\t\tawait this.doCopyFile(sourceProvider, source, targetProvider, target);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn mode;\n\t\t}\n\n\t\t// move source => target\n\t\telse {\n\n\t\t\t// same provider: leverage rename() functionality\n\t\t\tif (sourceProvider === targetProvider) {\n\t\t\t\tawait sourceProvider.rename(source, target, { overwrite });\n\n\t\t\t\treturn mode;\n\t\t\t}\n\n\t\t\t// across providers: copy to target & delete at source\n\t\t\telse {\n\t\t\t\tawait this.doMoveCopy(sourceProvider, source, targetProvider, target, 'copy', overwrite);\n\t\t\t\tawait this.del(source, { recursive: true });\n\n\t\t\t\treturn 'copy';\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async doCopyFile(sourceProvider: IFileSystemProvider, source: URI, targetProvider: IFileSystemProvider, target: URI): Promise<void> {\n\n\t\t// copy: source (buffered) => target (buffered)\n\t\tif (hasOpenReadWriteCloseCapability(sourceProvider) && hasOpenReadWriteCloseCapability(targetProvider)) {\n\t\t\treturn this.doPipeBuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\n\t\t// copy: source (buffered) => target (unbuffered)\n\t\tif (hasOpenReadWriteCloseCapability(sourceProvider) && hasReadWriteCapability(targetProvider)) {\n\t\t\treturn this.doPipeBufferedToUnbuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\n\t\t// copy: source (unbuffered) => target (buffered)\n\t\tif (hasReadWriteCapability(sourceProvider) && hasOpenReadWriteCloseCapability(targetProvider)) {\n\t\t\treturn this.doPipeUnbufferedToBuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\n\t\t// copy: source (unbuffered) => target (unbuffered)\n\t\tif (hasReadWriteCapability(sourceProvider) && hasReadWriteCapability(targetProvider)) {\n\t\t\treturn this.doPipeUnbuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\t}\n\n\tprivate async doCopyFolder(sourceProvider: IFileSystemProvider, sourceFolder: IFileStat, targetProvider: IFileSystemProvider, targetFolder: URI): Promise<void> {\n\n\t\t// create folder in target\n\t\tawait targetProvider.mkdir(targetFolder);\n\n\t\t// create children in target\n\t\tif (Array.isArray(sourceFolder.children)) {\n\t\t\tawait Promises.settled(sourceFolder.children.map(async sourceChild => {\n\t\t\t\tconst targetChild = this.getExtUri(targetProvider).providerExtUri.joinPath(targetFolder, sourceChild.name);\n\t\t\t\tif (sourceChild.isDirectory) {\n\t\t\t\t\treturn this.doCopyFolder(sourceProvider, await this.resolve(sourceChild.resource), targetProvider, targetChild);\n\t\t\t\t} else {\n\t\t\t\t\treturn this.doCopyFile(sourceProvider, sourceChild.resource, targetProvider, targetChild);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n\n\tprivate async doValidateMoveCopy(sourceProvider: IFileSystemProvider, source: URI, targetProvider: IFileSystemProvider, target: URI, mode: 'move' | 'copy', overwrite?: boolean): Promise<{ exists: boolean, isSameResourceWithDifferentPathCase: boolean; }> {\n\t\tlet isSameResourceWithDifferentPathCase = false;\n\n\t\t// Check if source is equal or parent to target (requires providers to be the same)\n\t\tif (sourceProvider === targetProvider) {\n\t\t\tconst { providerExtUri, isPathCaseSensitive } = this.getExtUri(sourceProvider);\n\t\t\tif (!isPathCaseSensitive) {\n\t\t\t\tisSameResourceWithDifferentPathCase = providerExtUri.isEqual(source, target);\n\t\t\t}\n\n\t\t\tif (isSameResourceWithDifferentPathCase && mode === 'copy') {\n\t\t\t\tthrow new Error(localize('unableToMoveCopyError1', \"Unable to copy when source '{0}' is same as target '{1}' with different path case on a case insensitive file system\", this.resourceForError(source), this.resourceForError(target)));\n\t\t\t}\n\n\t\t\tif (!isSameResourceWithDifferentPathCase && providerExtUri.isEqualOrParent(target, source)) {\n\t\t\t\tthrow new Error(localize('unableToMoveCopyError2', \"Unable to move/copy when source '{0}' is parent of target '{1}'.\", this.resourceForError(source), this.resourceForError(target)));\n\t\t\t}\n\t\t}\n\n\t\t// Extra checks if target exists and this is not a rename\n\t\tconst exists = await this.exists(target);\n\t\tif (exists && !isSameResourceWithDifferentPathCase) {\n\n\t\t\t// Bail out if target exists and we are not about to overwrite\n\t\t\tif (!overwrite) {\n\t\t\t\tthrow new FileOperationError(localize('unableToMoveCopyError3', \"Unable to move/copy '{0}' because target '{1}' already exists at destination.\", this.resourceForError(source), this.resourceForError(target)), FileOperationResult.FILE_MOVE_CONFLICT);\n\t\t\t}\n\n\t\t\t// Special case: if the target is a parent of the source, we cannot delete\n\t\t\t// it as it would delete the source as well. In this case we have to throw\n\t\t\tif (sourceProvider === targetProvider) {\n\t\t\t\tconst { providerExtUri } = this.getExtUri(sourceProvider);\n\t\t\t\tif (providerExtUri.isEqualOrParent(source, target)) {\n\t\t\t\t\tthrow new Error(localize('unableToMoveCopyError4', \"Unable to move/copy '{0}' into '{1}' since a file would replace the folder it is contained in.\", this.resourceForError(source), this.resourceForError(target)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { exists, isSameResourceWithDifferentPathCase };\n\t}\n\n\tprivate getExtUri(provider: IFileSystemProvider): { providerExtUri: IExtUri, isPathCaseSensitive: boolean; } {\n\t\tconst isPathCaseSensitive = this.isPathCaseSensitive(provider);\n\n\t\treturn {\n\t\t\tproviderExtUri: isPathCaseSensitive ? extUri : extUriIgnorePathCase,\n\t\t\tisPathCaseSensitive\n\t\t};\n\t}\n\n\tprivate isPathCaseSensitive(provider: IFileSystemProvider): boolean {\n\t\treturn !!(provider.capabilities & FileSystemProviderCapabilities.PathCaseSensitive);\n\t}\n\n\tasync createFolder(resource: URI): Promise<IFileStatWithMetadata> {\n\t\tconst provider = this.throwIfFileSystemIsReadonly(await this.withProvider(resource), resource);\n\n\t\t// mkdir recursively\n\t\tawait this.mkdirp(provider, resource);\n\n\t\t// events\n\t\tconst fileStat = await this.resolve(resource, { resolveMetadata: true });\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(resource, FileOperation.CREATE, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tprivate async mkdirp(provider: IFileSystemProvider, directory: URI): Promise<void> {\n\t\tconst directoriesToCreate: string[] = [];\n\n\t\t// mkdir until we reach root\n\t\tconst { providerExtUri } = this.getExtUri(provider);\n\t\twhile (!providerExtUri.isEqual(directory, providerExtUri.dirname(directory))) {\n\t\t\ttry {\n\t\t\t\tconst stat = await provider.stat(directory);\n\t\t\t\tif ((stat.type & FileType.Directory) === 0) {\n\t\t\t\t\tthrow new Error(localize('mkdirExistsError', \"Unable to create folder '{0}' that already exists but is not a directory\", this.resourceForError(directory)));\n\t\t\t\t}\n\n\t\t\t\tbreak; // we have hit a directory that exists -> good\n\t\t\t} catch (error) {\n\n\t\t\t\t// Bubble up any other error that is not file not found\n\t\t\t\tif (toFileSystemProviderErrorCode(error) !== FileSystemProviderErrorCode.FileNotFound) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\n\t\t\t\t// Upon error, remember directories that need to be created\n\t\t\t\tdirectoriesToCreate.push(providerExtUri.basename(directory));\n\n\t\t\t\t// Continue up\n\t\t\t\tdirectory = providerExtUri.dirname(directory);\n\t\t\t}\n\t\t}\n\n\t\t// Create directories as needed\n\t\tfor (let i = directoriesToCreate.length - 1; i >= 0; i--) {\n\t\t\tdirectory = providerExtUri.joinPath(directory, directoriesToCreate[i]);\n\n\t\t\ttry {\n\t\t\t\tawait provider.mkdir(directory);\n\t\t\t} catch (error) {\n\t\t\t\tif (toFileSystemProviderErrorCode(error) !== FileSystemProviderErrorCode.FileExists) {\n\t\t\t\t\t// For mkdirp() we tolerate that the mkdir() call fails\n\t\t\t\t\t// in case the folder already exists. This follows node.js\n\t\t\t\t\t// own implementation of fs.mkdir({ recursive: true }) and\n\t\t\t\t\t// reduces the chances of race conditions leading to errors\n\t\t\t\t\t// if multiple calls try to create the same folders\n\t\t\t\t\t// As such, we only throw an error here if it is other than\n\t\t\t\t\t// the fact that the file already exists.\n\t\t\t\t\t// (see also https://github.com/microsoft/vscode/issues/89834)\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tasync canDelete(resource: URI, options?: Partial<FileDeleteOptions>): Promise<Error | true> {\n\t\ttry {\n\t\t\tawait this.doValidateDelete(resource, options);\n\t\t} catch (error) {\n\t\t\treturn error;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate async doValidateDelete(resource: URI, options?: Partial<FileDeleteOptions>): Promise<IFileSystemProvider> {\n\t\tconst provider = this.throwIfFileSystemIsReadonly(await this.withProvider(resource), resource);\n\n\t\t// Validate trash support\n\t\tconst useTrash = !!options?.useTrash;\n\t\tif (useTrash && !(provider.capabilities & FileSystemProviderCapabilities.Trash)) {\n\t\t\tthrow new Error(localize('deleteFailedTrashUnsupported', \"Unable to delete file '{0}' via trash because provider does not support it.\", this.resourceForError(resource)));\n\t\t}\n\n\t\t// Validate delete\n\t\tlet stat: IStat | undefined = undefined;\n\t\ttry {\n\t\t\tstat = await provider.stat(resource);\n\t\t} catch (error) {\n\t\t\t// Handled later\n\t\t}\n\n\t\tif (stat) {\n\t\t\tthis.throwIfFileIsReadonly(resource, stat);\n\t\t} else {\n\t\t\tthrow new FileOperationError(localize('deleteFailedNotFound', \"Unable to delete nonexistent file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_NOT_FOUND);\n\t\t}\n\n\t\t// Validate recursive\n\t\tconst recursive = !!options?.recursive;\n\t\tif (!recursive) {\n\t\t\tconst stat = await this.resolve(resource);\n\t\t\tif (stat.isDirectory && Array.isArray(stat.children) && stat.children.length > 0) {\n\t\t\t\tthrow new Error(localize('deleteFailedNonEmptyFolder', \"Unable to delete non-empty folder '{0}'.\", this.resourceForError(resource)));\n\t\t\t}\n\t\t}\n\n\t\treturn provider;\n\t}\n\n\tasync del(resource: URI, options?: Partial<FileDeleteOptions>): Promise<void> {\n\t\tconst provider = await this.doValidateDelete(resource, options);\n\n\t\tconst useTrash = !!options?.useTrash;\n\t\tconst recursive = !!options?.recursive;\n\n\t\t// Delete through provider\n\t\tawait provider.delete(resource, { recursive, useTrash });\n\n\t\t// Events\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(resource, FileOperation.DELETE));\n\t}\n\n\t//#endregion\n\n\t//#region File Watching\n\n\t/**\n\t * Providers can send unlimited amount of `IFileChange` events\n\t * and we want to protect against this to reduce CPU pressure.\n\t * The following settings limit the amount of file changes we\n\t * process at once.\n\t * (https://github.com/microsoft/vscode/issues/124723)\n\t */\n\tprivate static readonly FILE_EVENTS_THROTTLING = {\n\t\tmaxChangesChunkSize: 500 as const,\t\t// number of changes we process per interval\n\t\tmaxChangesBufferSize: 30000 as const,  \t// total number of changes we are willing to buffer in memory\n\t\tcoolDownDelay: 200 as const,\t  \t\t// rest for 100ms before processing next events\n\t\twarningscounter: 0\t\t\t\t\t\t// keep track how many warnings we showed to reduce log spam\n\t};\n\n\tprivate readonly _onDidFilesChange = this._register(new Emitter<FileChangesEvent>());\n\treadonly onDidFilesChange = this._onDidFilesChange.event;\n\n\tprivate readonly _onDidChangeFilesRaw = this._register(new Emitter<IRawFileChangesEvent>());\n\treadonly onDidChangeFilesRaw = this._onDidChangeFilesRaw.event;\n\n\tprivate readonly activeWatchers = new Map<string, { disposable: IDisposable, count: number; }>();\n\n\tprivate readonly caseSensitiveFileEventsWorker = this._register(\n\t\tnew ThrottledWorker<IFileChange>(\n\t\t\tFileService.FILE_EVENTS_THROTTLING.maxChangesChunkSize,\n\t\t\tFileService.FILE_EVENTS_THROTTLING.maxChangesBufferSize,\n\t\t\tFileService.FILE_EVENTS_THROTTLING.coolDownDelay,\n\t\t\tchunks => this._onDidFilesChange.fire(new FileChangesEvent(chunks, false))\n\t\t)\n\t);\n\n\tprivate readonly caseInsensitiveFileEventsWorker = this._register(\n\t\tnew ThrottledWorker<IFileChange>(\n\t\t\tFileService.FILE_EVENTS_THROTTLING.maxChangesChunkSize,\n\t\t\tFileService.FILE_EVENTS_THROTTLING.maxChangesBufferSize,\n\t\t\tFileService.FILE_EVENTS_THROTTLING.coolDownDelay,\n\t\t\tchunks => this._onDidFilesChange.fire(new FileChangesEvent(chunks, true))\n\t\t)\n\t);\n\n\tprivate onDidChangeFile(changes: readonly IFileChange[], caseSensitive: boolean): void {\n\n\t\t// Event #1: access to raw events goes out instantly\n\t\t{\n\t\t\tthis._onDidChangeFilesRaw.fire({ changes });\n\t\t}\n\n\t\t// Event #2: immediately send out events for\n\t\t// explicitly watched resources by splitting\n\t\t// changes up into 2 buckets\n\t\tlet explicitlyWatchedFileChanges: IFileChange[] | undefined = undefined;\n\t\tlet implicitlyWatchedFileChanges: IFileChange[] | undefined = undefined;\n\t\t{\n\t\t\tfor (const change of changes) {\n\t\t\t\tif (this.watchedResources.has(change.resource)) {\n\t\t\t\t\tif (!explicitlyWatchedFileChanges) {\n\t\t\t\t\t\texplicitlyWatchedFileChanges = [];\n\t\t\t\t\t}\n\t\t\t\t\texplicitlyWatchedFileChanges.push(change);\n\t\t\t\t} else {\n\t\t\t\t\tif (!implicitlyWatchedFileChanges) {\n\t\t\t\t\t\timplicitlyWatchedFileChanges = [];\n\t\t\t\t\t}\n\t\t\t\t\timplicitlyWatchedFileChanges.push(change);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (explicitlyWatchedFileChanges) {\n\t\t\t\tthis._onDidFilesChange.fire(new FileChangesEvent(explicitlyWatchedFileChanges, !caseSensitive));\n\t\t\t}\n\t\t}\n\n\t\t// Event #3: implicitly watched resources get\n\t\t// throttled due to performance reasons\n\t\tif (implicitlyWatchedFileChanges) {\n\t\t\tconst worker = caseSensitive ? this.caseSensitiveFileEventsWorker : this.caseInsensitiveFileEventsWorker;\n\t\t\tconst worked = worker.work(implicitlyWatchedFileChanges);\n\n\t\t\tif (!worked && FileService.FILE_EVENTS_THROTTLING.warningscounter++ < 10) {\n\t\t\t\tthis.logService.warn(`[File watcher]: started ignoring events due to too many file change events at once (incoming: ${implicitlyWatchedFileChanges.length}, most recent change: ${implicitlyWatchedFileChanges[0].resource.toString()}). Use 'files.watcherExclude' setting to exclude folders with lots of changing files (e.g. compilation output).`);\n\t\t\t}\n\n\t\t\tif (worker.pending > 0) {\n\t\t\t\tthis.logService.trace(`[File watcher]: started throttling events due to large amount of file change events at once (pending: ${worker.pending}, most recent change: ${implicitlyWatchedFileChanges[0].resource.toString()}). Use 'files.watcherExclude' setting to exclude folders with lots of changing files (e.g. compilation output).`);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate readonly watchedResources = TernarySearchTree.forUris<number>(uri => {\n\t\tconst provider = this.getProvider(uri.scheme);\n\t\tif (provider) {\n\t\t\treturn !this.isPathCaseSensitive(provider);\n\t\t}\n\n\t\treturn false;\n\t});\n\n\twatch(resource: URI, options: IWatchOptions = { recursive: false, excludes: [] }): IDisposable {\n\t\tconst disposables = new DisposableStore();\n\n\t\t// Forward watch request to provider and\n\t\t// wire in disposables.\n\t\tlet watchDisposed = false;\n\t\tlet disposeWatch = () => { watchDisposed = true; };\n\t\tdisposables.add(toDisposable(() => disposeWatch()));\n\n\t\t// Watch and wire in disposable which is async but\n\t\t// check if we got disposed meanwhile and forward\n\t\tthis.doWatch(resource, options).then(disposable => {\n\t\t\tif (watchDisposed) {\n\t\t\t\tdispose(disposable);\n\t\t\t} else {\n\t\t\t\tdisposeWatch = () => dispose(disposable);\n\t\t\t}\n\t\t}, error => this.logService.error(error));\n\n\t\t// Remember as watched resource and unregister\n\t\t// properly on disposal.\n\t\t//\n\t\t// Note: we only do this for non-recursive watchers\n\t\t// until we have a better `createWatcher` based API\n\t\t// (https://github.com/microsoft/vscode/issues/126809)\n\t\t//\n\t\tif (!options.recursive) {\n\n\t\t\t// Increment counter for resource\n\t\t\tthis.watchedResources.set(resource, (this.watchedResources.get(resource) ?? 0) + 1);\n\n\t\t\t// Decrement counter for resource on dispose\n\t\t\t// and remove from map when last one is gone\n\t\t\tdisposables.add(toDisposable(() => {\n\t\t\t\tconst watchedResourceCounter = this.watchedResources.get(resource);\n\t\t\t\tif (typeof watchedResourceCounter === 'number') {\n\t\t\t\t\tif (watchedResourceCounter <= 1) {\n\t\t\t\t\t\tthis.watchedResources.delete(resource);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.watchedResources.set(resource, watchedResourceCounter - 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\treturn disposables;\n\t}\n\n\tprivate async doWatch(resource: URI, options: IWatchOptions): Promise<IDisposable> {\n\t\tconst provider = await this.withProvider(resource);\n\t\tconst key = this.toWatchKey(provider, resource, options);\n\n\t\t// Only start watching if we are the first for the given key\n\t\tlet watcher = this.activeWatchers.get(key);\n\t\tif (!watcher) {\n\t\t\twatcher = { count: 0, disposable: provider.watch(resource, options) };\n\n\t\t\tthis.activeWatchers.set(key, watcher);\n\t\t}\n\n\t\t// Increment usage counter\n\t\twatcher.count += 1;\n\n\t\treturn toDisposable(() => {\n\t\t\tif (watcher) {\n\n\t\t\t\t// Unref\n\t\t\t\twatcher.count--;\n\n\t\t\t\t// Dispose only when last user is reached\n\t\t\t\tif (watcher.count === 0) {\n\t\t\t\t\tdispose(watcher.disposable);\n\t\t\t\t\tthis.activeWatchers.delete(key);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate toWatchKey(provider: IFileSystemProvider, resource: URI, options: IWatchOptions): string {\n\t\tconst { providerExtUri } = this.getExtUri(provider);\n\n\t\treturn [\n\t\t\tproviderExtUri.getComparisonKey(resource), \t// lowercase path if the provider is case insensitive\n\t\t\tString(options.recursive),\t\t\t\t\t// use recursive: true | false as part of the key\n\t\t\toptions.excludes.join()\t\t\t\t\t\t// use excludes as part of the key\n\t\t].join();\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tfor (const [, watcher] of this.activeWatchers) {\n\t\t\tdispose(watcher.disposable);\n\t\t}\n\n\t\tthis.activeWatchers.clear();\n\t}\n\n\t//#endregion\n\n\t//#region Helpers\n\n\tprivate readonly writeQueue = this._register(new ResourceQueue());\n\n\tprivate async doWriteBuffered(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, options: IWriteFileOptions | undefined, readableOrStreamOrBufferedStream: VSBufferReadable | VSBufferReadableStream | VSBufferReadableBufferedStream): Promise<void> {\n\t\treturn this.writeQueue.queueFor(resource, this.getExtUri(provider).providerExtUri).queue(async () => {\n\n\t\t\t// open handle\n\t\t\tconst handle = await provider.open(resource, { create: true, unlock: options?.unlock ?? false });\n\n\t\t\t// write into handle until all bytes from buffer have been written\n\t\t\ttry {\n\t\t\t\tif (isReadableStream(readableOrStreamOrBufferedStream) || isReadableBufferedStream(readableOrStreamOrBufferedStream)) {\n\t\t\t\t\tawait this.doWriteStreamBufferedQueued(provider, handle, readableOrStreamOrBufferedStream);\n\t\t\t\t} else {\n\t\t\t\t\tawait this.doWriteReadableBufferedQueued(provider, handle, readableOrStreamOrBufferedStream);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t\t} finally {\n\n\t\t\t\t// close handle always\n\t\t\t\tawait provider.close(handle);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async doWriteStreamBufferedQueued(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, handle: number, streamOrBufferedStream: VSBufferReadableStream | VSBufferReadableBufferedStream): Promise<void> {\n\t\tlet posInFile = 0;\n\t\tlet stream: VSBufferReadableStream;\n\n\t\t// Buffered stream: consume the buffer first by writing\n\t\t// it to the target before reading from the stream.\n\t\tif (isReadableBufferedStream(streamOrBufferedStream)) {\n\t\t\tif (streamOrBufferedStream.buffer.length > 0) {\n\t\t\t\tconst chunk = VSBuffer.concat(streamOrBufferedStream.buffer);\n\t\t\t\tawait this.doWriteBuffer(provider, handle, chunk, chunk.byteLength, posInFile, 0);\n\n\t\t\t\tposInFile += chunk.byteLength;\n\t\t\t}\n\n\t\t\t// If the stream has been consumed, return early\n\t\t\tif (streamOrBufferedStream.ended) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstream = streamOrBufferedStream.stream;\n\t\t}\n\n\t\t// Unbuffered stream - just take as is\n\t\telse {\n\t\t\tstream = streamOrBufferedStream;\n\t\t}\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlistenStream(stream, {\n\t\t\t\tonData: async chunk => {\n\n\t\t\t\t\t// pause stream to perform async write operation\n\t\t\t\t\tstream.pause();\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait this.doWriteBuffer(provider, handle, chunk, chunk.byteLength, posInFile, 0);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\treturn reject(error);\n\t\t\t\t\t}\n\n\t\t\t\t\tposInFile += chunk.byteLength;\n\n\t\t\t\t\t// resume stream now that we have successfully written\n\t\t\t\t\t// run this on the next tick to prevent increasing the\n\t\t\t\t\t// execution stack because resume() may call the event\n\t\t\t\t\t// handler again before finishing.\n\t\t\t\t\tsetTimeout(() => stream.resume());\n\t\t\t\t},\n\t\t\t\tonError: error => reject(error),\n\t\t\t\tonEnd: () => resolve()\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate async doWriteReadableBufferedQueued(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, handle: number, readable: VSBufferReadable): Promise<void> {\n\t\tlet posInFile = 0;\n\n\t\tlet chunk: VSBuffer | null;\n\t\twhile ((chunk = readable.read()) !== null) {\n\t\t\tawait this.doWriteBuffer(provider, handle, chunk, chunk.byteLength, posInFile, 0);\n\n\t\t\tposInFile += chunk.byteLength;\n\t\t}\n\t}\n\n\tprivate async doWriteBuffer(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, handle: number, buffer: VSBuffer, length: number, posInFile: number, posInBuffer: number): Promise<void> {\n\t\tlet totalBytesWritten = 0;\n\t\twhile (totalBytesWritten < length) {\n\n\t\t\t// Write through the provider\n\t\t\tconst bytesWritten = await provider.write(handle, posInFile + totalBytesWritten, buffer.buffer, posInBuffer + totalBytesWritten, length - totalBytesWritten);\n\t\t\ttotalBytesWritten += bytesWritten;\n\t\t}\n\t}\n\n\tprivate async doWriteUnbuffered(provider: IFileSystemProviderWithFileReadWriteCapability, resource: URI, options: IWriteFileOptions | undefined, bufferOrReadableOrStreamOrBufferedStream: VSBuffer | VSBufferReadable | VSBufferReadableStream | VSBufferReadableBufferedStream): Promise<void> {\n\t\treturn this.writeQueue.queueFor(resource, this.getExtUri(provider).providerExtUri).queue(() => this.doWriteUnbufferedQueued(provider, resource, options, bufferOrReadableOrStreamOrBufferedStream));\n\t}\n\n\tprivate async doWriteUnbufferedQueued(provider: IFileSystemProviderWithFileReadWriteCapability, resource: URI, options: IWriteFileOptions | undefined, bufferOrReadableOrStreamOrBufferedStream: VSBuffer | VSBufferReadable | VSBufferReadableStream | VSBufferReadableBufferedStream): Promise<void> {\n\t\tlet buffer: VSBuffer;\n\t\tif (bufferOrReadableOrStreamOrBufferedStream instanceof VSBuffer) {\n\t\t\tbuffer = bufferOrReadableOrStreamOrBufferedStream;\n\t\t} else if (isReadableStream(bufferOrReadableOrStreamOrBufferedStream)) {\n\t\t\tbuffer = await streamToBuffer(bufferOrReadableOrStreamOrBufferedStream);\n\t\t} else if (isReadableBufferedStream(bufferOrReadableOrStreamOrBufferedStream)) {\n\t\t\tbuffer = await bufferedStreamToBuffer(bufferOrReadableOrStreamOrBufferedStream);\n\t\t} else {\n\t\t\tbuffer = readableToBuffer(bufferOrReadableOrStreamOrBufferedStream);\n\t\t}\n\n\t\t// Write through the provider\n\t\tawait provider.writeFile(resource, buffer.buffer, { create: true, overwrite: true, unlock: options?.unlock ?? false });\n\t}\n\n\tprivate async doPipeBuffered(sourceProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\t\treturn this.writeQueue.queueFor(target, this.getExtUri(targetProvider).providerExtUri).queue(() => this.doPipeBufferedQueued(sourceProvider, source, targetProvider, target));\n\t}\n\n\tprivate async doPipeBufferedQueued(sourceProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\t\tlet sourceHandle: number | undefined = undefined;\n\t\tlet targetHandle: number | undefined = undefined;\n\n\t\ttry {\n\n\t\t\t// Open handles\n\t\t\tsourceHandle = await sourceProvider.open(source, { create: false });\n\t\t\ttargetHandle = await targetProvider.open(target, { create: true, unlock: false });\n\n\t\t\tconst buffer = VSBuffer.alloc(this.BUFFER_SIZE);\n\n\t\t\tlet posInFile = 0;\n\t\t\tlet posInBuffer = 0;\n\t\t\tlet bytesRead = 0;\n\t\t\tdo {\n\t\t\t\t// read from source (sourceHandle) at current position (posInFile) into buffer (buffer) at\n\t\t\t\t// buffer position (posInBuffer) up to the size of the buffer (buffer.byteLength).\n\t\t\t\tbytesRead = await sourceProvider.read(sourceHandle, posInFile, buffer.buffer, posInBuffer, buffer.byteLength - posInBuffer);\n\n\t\t\t\t// write into target (targetHandle) at current position (posInFile) from buffer (buffer) at\n\t\t\t\t// buffer position (posInBuffer) all bytes we read (bytesRead).\n\t\t\t\tawait this.doWriteBuffer(targetProvider, targetHandle, buffer, bytesRead, posInFile, posInBuffer);\n\n\t\t\t\tposInFile += bytesRead;\n\t\t\t\tposInBuffer += bytesRead;\n\n\t\t\t\t// when buffer full, fill it again from the beginning\n\t\t\t\tif (posInBuffer === buffer.byteLength) {\n\t\t\t\t\tposInBuffer = 0;\n\t\t\t\t}\n\t\t\t} while (bytesRead > 0);\n\t\t} catch (error) {\n\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tawait Promises.settled([\n\t\t\t\ttypeof sourceHandle === 'number' ? sourceProvider.close(sourceHandle) : Promise.resolve(),\n\t\t\t\ttypeof targetHandle === 'number' ? targetProvider.close(targetHandle) : Promise.resolve(),\n\t\t\t]);\n\t\t}\n\t}\n\n\tprivate async doPipeUnbuffered(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithFileReadWriteCapability, target: URI): Promise<void> {\n\t\treturn this.writeQueue.queueFor(target, this.getExtUri(targetProvider).providerExtUri).queue(() => this.doPipeUnbufferedQueued(sourceProvider, source, targetProvider, target));\n\t}\n\n\tprivate async doPipeUnbufferedQueued(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithFileReadWriteCapability, target: URI): Promise<void> {\n\t\treturn targetProvider.writeFile(target, await sourceProvider.readFile(source), { create: true, overwrite: true, unlock: false });\n\t}\n\n\tprivate async doPipeUnbufferedToBuffered(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\t\treturn this.writeQueue.queueFor(target, this.getExtUri(targetProvider).providerExtUri).queue(() => this.doPipeUnbufferedToBufferedQueued(sourceProvider, source, targetProvider, target));\n\t}\n\n\tprivate async doPipeUnbufferedToBufferedQueued(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\n\t\t// Open handle\n\t\tconst targetHandle = await targetProvider.open(target, { create: true, unlock: false });\n\n\t\t// Read entire buffer from source and write buffered\n\t\ttry {\n\t\t\tconst buffer = await sourceProvider.readFile(source);\n\t\t\tawait this.doWriteBuffer(targetProvider, targetHandle, VSBuffer.wrap(buffer), buffer.byteLength, 0, 0);\n\t\t} catch (error) {\n\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tawait targetProvider.close(targetHandle);\n\t\t}\n\t}\n\n\tprivate async doPipeBufferedToUnbuffered(sourceProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, source: URI, targetProvider: IFileSystemProviderWithFileReadWriteCapability, target: URI): Promise<void> {\n\n\t\t// Read buffer via stream buffered\n\t\tconst buffer = await streamToBuffer(this.readFileBuffered(sourceProvider, source, CancellationToken.None));\n\n\t\t// Write buffer into target at once\n\t\tawait this.doWriteUnbuffered(targetProvider, target, undefined, buffer);\n\t}\n\n\tprotected throwIfFileSystemIsReadonly<T extends IFileSystemProvider>(provider: T, resource: URI): T {\n\t\tif (provider.capabilities & FileSystemProviderCapabilities.Readonly) {\n\t\t\tthrow new FileOperationError(localize('err.readonly', \"Unable to modify readonly file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_PERMISSION_DENIED);\n\t\t}\n\n\t\treturn provider;\n\t}\n\n\tprivate throwIfFileIsReadonly(resource: URI, stat: IStat): void {\n\t\tif ((stat.permissions ?? 0) & FilePermission.Readonly) {\n\t\t\tthrow new FileOperationError(localize('err.readonly', \"Unable to modify readonly file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_PERMISSION_DENIED);\n\t\t}\n\t}\n\n\tprivate resourceForError(resource: URI): string {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\treturn resource.fsPath;\n\t\t}\n\n\t\treturn resource.toString(true);\n\t}\n\n\t//#endregion\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { gracefulify } from 'graceful-fs';\nimport { retry } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Event } from 'vs/base/common/event';\nimport { isEqual } from 'vs/base/common/extpath';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { basename, dirname } from 'vs/base/common/path';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { joinPath } from 'vs/base/common/resources';\nimport { newWriteableStream, ReadableStreamEvents } from 'vs/base/common/stream';\nimport { URI } from 'vs/base/common/uri';\nimport { IDirent, Promises, RimRafMode, SymlinkSupport } from 'vs/base/node/pfs';\nimport { localize } from 'vs/nls';\nimport { createFileSystemProviderError, FileDeleteOptions, FileOpenOptions, FileOverwriteOptions, FileReadStreamOptions, FileSystemProviderCapabilities, FileSystemProviderError, FileSystemProviderErrorCode, FileType, FileWriteOptions, IFileSystemProviderWithFileFolderCopyCapability, IFileSystemProviderWithFileReadStreamCapability, IFileSystemProviderWithFileReadWriteCapability, IFileSystemProviderWithOpenReadWriteCloseCapability, isFileOpenForWriteOptions, IStat } from 'vs/platform/files/common/files';\nimport { readFileIntoStream } from 'vs/platform/files/common/io';\nimport { FileWatcher as NodeJSWatcherService } from 'vs/platform/files/node/watcher/nodejs/watcherService';\nimport { FileWatcher as NsfwWatcherService } from 'vs/platform/files/node/watcher/nsfw/watcherService';\nimport { FileWatcher as ParcelWatcherService } from 'vs/platform/files/node/watcher/parcel/watcherService';\nimport { IDiskFileChange, ILogMessage, IWatchRequest, WatcherService } from 'vs/platform/files/common/watcher';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { AbstractDiskFileSystemProvider } from 'vs/platform/files/common/diskFileSystemProvider';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\n\n/**\n * Enable graceful-fs very early from here to have it enabled\n * in all contexts that leverage the disk file system provider.\n */\n(() => {\n\ttry {\n\t\tgracefulify(fs);\n\t} catch (error) {\n\t\tconsole.error(`Error enabling graceful-fs: ${toErrorMessage(error)}`);\n\t}\n})();\n\nexport interface IWatcherOptions {\n\n\t/**\n\t * If `true`, will enable polling for all watchers, otherwise\n\t * will enable it for paths included in the string array.\n\t *\n\t * @deprecated this only exists for WSL1 support and should never\n\t * be used in any other case.\n\t */\n\tusePolling: boolean | string[];\n\n\t/**\n\t * If polling is enabled (via `usePolling`), defines the duration\n\t * in which the watcher will poll for changes.\n\t *\n\t * @deprecated this only exists for WSL1 support and should never\n\t * be used in any other case.\n\t */\n\tpollingInterval?: number;\n}\n\nexport interface IDiskFileSystemProviderOptions {\n\twatcher?: IWatcherOptions;\n\tlegacyWatcher?: string;\n}\n\nexport class DiskFileSystemProvider extends AbstractDiskFileSystemProvider implements\n\tIFileSystemProviderWithFileReadWriteCapability,\n\tIFileSystemProviderWithOpenReadWriteCloseCapability,\n\tIFileSystemProviderWithFileReadStreamCapability,\n\tIFileSystemProviderWithFileFolderCopyCapability {\n\n\tconstructor(\n\t\tlogService: ILogService,\n\t\tprivate readonly options?: IDiskFileSystemProviderOptions\n\t) {\n\t\tsuper(logService);\n\t}\n\n\t//#region File Capabilities\n\n\treadonly onDidChangeCapabilities: Event<void> = Event.None;\n\n\tprotected _capabilities: FileSystemProviderCapabilities | undefined;\n\tget capabilities(): FileSystemProviderCapabilities {\n\t\tif (!this._capabilities) {\n\t\t\tthis._capabilities =\n\t\t\t\tFileSystemProviderCapabilities.FileReadWrite |\n\t\t\t\tFileSystemProviderCapabilities.FileOpenReadWriteClose |\n\t\t\t\tFileSystemProviderCapabilities.FileReadStream |\n\t\t\t\tFileSystemProviderCapabilities.FileFolderCopy |\n\t\t\t\tFileSystemProviderCapabilities.FileWriteUnlock;\n\n\t\t\tif (isLinux) {\n\t\t\t\tthis._capabilities |= FileSystemProviderCapabilities.PathCaseSensitive;\n\t\t\t}\n\t\t}\n\n\t\treturn this._capabilities;\n\t}\n\n\t//#endregion\n\n\t//#region File Metadata Resolving\n\n\tasync stat(resource: URI): Promise<IStat> {\n\t\ttry {\n\t\t\tconst { stat, symbolicLink } = await SymlinkSupport.stat(this.toFilePath(resource)); // cannot use fs.stat() here to support links properly\n\n\t\t\treturn {\n\t\t\t\ttype: this.toType(stat, symbolicLink),\n\t\t\t\tctime: stat.birthtime.getTime(), // intentionally not using ctime here, we want the creation time\n\t\t\t\tmtime: stat.mtime.getTime(),\n\t\t\t\tsize: stat.size\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync readdir(resource: URI): Promise<[string, FileType][]> {\n\t\ttry {\n\t\t\tconst children = await Promises.readdir(this.toFilePath(resource), { withFileTypes: true });\n\n\t\t\tconst result: [string, FileType][] = [];\n\t\t\tawait Promise.all(children.map(async child => {\n\t\t\t\ttry {\n\t\t\t\t\tlet type: FileType;\n\t\t\t\t\tif (child.isSymbolicLink()) {\n\t\t\t\t\t\ttype = (await this.stat(joinPath(resource, child.name))).type; // always resolve target the link points to if any\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = this.toType(child);\n\t\t\t\t\t}\n\n\t\t\t\t\tresult.push([child.name, type]);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.trace(error); // ignore errors for individual entries that can arise from permission denied\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\treturn result;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprivate toType(entry: fs.Stats | IDirent, symbolicLink?: { dangling: boolean }): FileType {\n\n\t\t// Signal file type by checking for file / directory, except:\n\t\t// - symbolic links pointing to nonexistent files are FileType.Unknown\n\t\t// - files that are neither file nor directory are FileType.Unknown\n\t\tlet type: FileType;\n\t\tif (symbolicLink?.dangling) {\n\t\t\ttype = FileType.Unknown;\n\t\t} else if (entry.isFile()) {\n\t\t\ttype = FileType.File;\n\t\t} else if (entry.isDirectory()) {\n\t\t\ttype = FileType.Directory;\n\t\t} else {\n\t\t\ttype = FileType.Unknown;\n\t\t}\n\n\t\t// Always signal symbolic link as file type additionally\n\t\tif (symbolicLink) {\n\t\t\ttype |= FileType.SymbolicLink;\n\t\t}\n\n\t\treturn type;\n\t}\n\n\t//#endregion\n\n\t//#region File Reading/Writing\n\n\tasync readFile(resource: URI): Promise<Uint8Array> {\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\treturn await Promises.readFile(filePath);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\treadFileStream(resource: URI, opts: FileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array> {\n\t\tconst stream = newWriteableStream<Uint8Array>(data => VSBuffer.concat(data.map(data => VSBuffer.wrap(data))).buffer);\n\n\t\treadFileIntoStream(this, resource, stream, data => data.buffer, {\n\t\t\t...opts,\n\t\t\tbufferSize: 256 * 1024 // read into chunks of 256kb each to reduce IPC overhead\n\t\t}, token);\n\n\t\treturn stream;\n\t}\n\n\tasync writeFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void> {\n\t\tlet handle: number | undefined = undefined;\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\t// Validate target unless { create: true, overwrite: true }\n\t\t\tif (!opts.create || !opts.overwrite) {\n\t\t\t\tconst fileExists = await Promises.exists(filePath);\n\t\t\t\tif (fileExists) {\n\t\t\t\t\tif (!opts.overwrite) {\n\t\t\t\t\t\tthrow createFileSystemProviderError(localize('fileExists', \"File already exists\"), FileSystemProviderErrorCode.FileExists);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!opts.create) {\n\t\t\t\t\t\tthrow createFileSystemProviderError(localize('fileNotExists', \"File does not exist\"), FileSystemProviderErrorCode.FileNotFound);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Open\n\t\t\thandle = await this.open(resource, { create: true, unlock: opts.unlock });\n\n\t\t\t// Write content at once\n\t\t\tawait this.write(handle, 0, content, 0, content.byteLength);\n\t\t} catch (error) {\n\t\t\tthrow await this.toFileSystemProviderWriteError(resource, error);\n\t\t} finally {\n\t\t\tif (typeof handle === 'number') {\n\t\t\t\tawait this.close(handle);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate readonly mapHandleToPos = new Map<number, number>();\n\n\tprivate readonly writeHandles = new Map<number, URI>();\n\tprivate canFlush: boolean = true;\n\n\tasync open(resource: URI, opts: FileOpenOptions): Promise<number> {\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\t// Determine wether to unlock the file (write only)\n\t\t\tif (isFileOpenForWriteOptions(opts) && opts.unlock) {\n\t\t\t\ttry {\n\t\t\t\t\tconst { stat } = await SymlinkSupport.stat(filePath);\n\t\t\t\t\tif (!(stat.mode & 0o200 /* File mode indicating writable by owner */)) {\n\t\t\t\t\t\tawait Promises.chmod(filePath, stat.mode | 0o200);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.trace(error); // ignore any errors here and try to just write\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Determine file flags for opening (read vs write)\n\t\t\tlet flags: string | undefined = undefined;\n\t\t\tif (isFileOpenForWriteOptions(opts)) {\n\t\t\t\tif (isWindows) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// On Windows and if the file exists, we use a different strategy of saving the file\n\t\t\t\t\t\t// by first truncating the file and then writing with r+ flag. This helps to save hidden files on Windows\n\t\t\t\t\t\t// (see https://github.com/microsoft/vscode/issues/931) and prevent removing alternate data streams\n\t\t\t\t\t\t// (see https://github.com/microsoft/vscode/issues/6363)\n\t\t\t\t\t\tawait Promises.truncate(filePath, 0);\n\n\t\t\t\t\t\t// After a successful truncate() the flag can be set to 'r+' which will not truncate.\n\t\t\t\t\t\tflags = 'r+';\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\t\t\t\tthis.logService.trace(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// we take opts.create as a hint that the file is opened for writing\n\t\t\t\t// as such we use 'w' to truncate an existing or create the\n\t\t\t\t// file otherwise. we do not allow reading.\n\t\t\t\tif (!flags) {\n\t\t\t\t\tflags = 'w';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// otherwise we assume the file is opened for reading\n\t\t\t\t// as such we use 'r' to neither truncate, nor create\n\t\t\t\t// the file.\n\t\t\t\tflags = 'r';\n\t\t\t}\n\n\t\t\tconst handle = await Promises.open(filePath, flags);\n\n\t\t\t// remember this handle to track file position of the handle\n\t\t\t// we init the position to 0 since the file descriptor was\n\t\t\t// just created and the position was not moved so far (see\n\t\t\t// also http://man7.org/linux/man-pages/man2/open.2.html -\n\t\t\t// \"The file offset is set to the beginning of the file.\")\n\t\t\tthis.mapHandleToPos.set(handle, 0);\n\n\t\t\t// remember that this handle was used for writing\n\t\t\tif (isFileOpenForWriteOptions(opts)) {\n\t\t\t\tthis.writeHandles.set(handle, resource);\n\t\t\t}\n\n\t\t\treturn handle;\n\t\t} catch (error) {\n\t\t\tif (isFileOpenForWriteOptions(opts)) {\n\t\t\t\tthrow await this.toFileSystemProviderWriteError(resource, error);\n\t\t\t} else {\n\t\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync close(fd: number): Promise<void> {\n\t\ttry {\n\n\t\t\t// remove this handle from map of positions\n\t\t\tthis.mapHandleToPos.delete(fd);\n\n\t\t\t// if a handle is closed that was used for writing, ensure\n\t\t\t// to flush the contents to disk if possible.\n\t\t\tif (this.writeHandles.delete(fd) && this.canFlush) {\n\t\t\t\ttry {\n\t\t\t\t\tawait Promises.fdatasync(fd); // https://github.com/microsoft/vscode/issues/9589\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// In some exotic setups it is well possible that node fails to sync\n\t\t\t\t\t// In that case we disable flushing and log the error to our logger\n\t\t\t\t\tthis.canFlush = false;\n\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn await Promises.close(fd);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync read(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\tconst normalizedPos = this.normalizePos(fd, pos);\n\n\t\tlet bytesRead: number | null = null;\n\t\ttry {\n\t\t\tconst result = await Promises.read(fd, data, offset, length, normalizedPos);\n\n\t\t\tif (typeof result === 'number') {\n\t\t\t\tbytesRead = result; // node.d.ts fail\n\t\t\t} else {\n\t\t\t\tbytesRead = result.bytesRead;\n\t\t\t}\n\n\t\t\treturn bytesRead;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tthis.updatePos(fd, normalizedPos, bytesRead);\n\t\t}\n\t}\n\n\tprivate normalizePos(fd: number, pos: number): number | null {\n\n\t\t// when calling fs.read/write we try to avoid passing in the \"pos\" argument and\n\t\t// rather prefer to pass in \"null\" because this avoids an extra seek(pos)\n\t\t// call that in some cases can even fail (e.g. when opening a file over FTP -\n\t\t// see https://github.com/microsoft/vscode/issues/73884).\n\t\t//\n\t\t// as such, we compare the passed in position argument with our last known\n\t\t// position for the file descriptor and use \"null\" if they match.\n\t\tif (pos === this.mapHandleToPos.get(fd)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn pos;\n\t}\n\n\tprivate updatePos(fd: number, pos: number | null, bytesLength: number | null): void {\n\t\tconst lastKnownPos = this.mapHandleToPos.get(fd);\n\t\tif (typeof lastKnownPos === 'number') {\n\n\t\t\t// pos !== null signals that previously a position was used that is\n\t\t\t// not null. node.js documentation explains, that in this case\n\t\t\t// the internal file pointer is not moving and as such we do not move\n\t\t\t// our position pointer.\n\t\t\t//\n\t\t\t// Docs: \"If position is null, data will be read from the current file position,\n\t\t\t// and the file position will be updated. If position is an integer, the file position\n\t\t\t// will remain unchanged.\"\n\t\t\tif (typeof pos === 'number') {\n\t\t\t\t// do not modify the position\n\t\t\t}\n\n\t\t\t// bytesLength = number is a signal that the read/write operation was\n\t\t\t// successful and as such we need to advance the position in the Map\n\t\t\t//\n\t\t\t// Docs (http://man7.org/linux/man-pages/man2/read.2.html):\n\t\t\t// \"On files that support seeking, the read operation commences at the\n\t\t\t// file offset, and the file offset is incremented by the number of\n\t\t\t// bytes read.\"\n\t\t\t//\n\t\t\t// Docs (http://man7.org/linux/man-pages/man2/write.2.html):\n\t\t\t// \"For a seekable file (i.e., one to which lseek(2) may be applied, for\n\t\t\t// example, a regular file) writing takes place at the file offset, and\n\t\t\t// the file offset is incremented by the number of bytes actually\n\t\t\t// written.\"\n\t\t\telse if (typeof bytesLength === 'number') {\n\t\t\t\tthis.mapHandleToPos.set(fd, lastKnownPos + bytesLength);\n\t\t\t}\n\n\t\t\t// bytesLength = null signals an error in the read/write operation\n\t\t\t// and as such we drop the handle from the Map because the position\n\t\t\t// is unspecificed at this point.\n\t\t\telse {\n\t\t\t\tthis.mapHandleToPos.delete(fd);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync write(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\t// we know at this point that the file to write to is truncated and thus empty\n\t\t// if the write now fails, the file remains empty. as such we really try hard\n\t\t// to ensure the write succeeds by retrying up to three times.\n\t\treturn retry(() => this.doWrite(fd, pos, data, offset, length), 100 /* ms delay */, 3 /* retries */);\n\t}\n\n\tprivate async doWrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\tconst normalizedPos = this.normalizePos(fd, pos);\n\n\t\tlet bytesWritten: number | null = null;\n\t\ttry {\n\t\t\tconst result = await Promises.write(fd, data, offset, length, normalizedPos);\n\n\t\t\tif (typeof result === 'number') {\n\t\t\t\tbytesWritten = result; // node.d.ts fail\n\t\t\t} else {\n\t\t\t\tbytesWritten = result.bytesWritten;\n\t\t\t}\n\n\t\t\treturn bytesWritten;\n\t\t} catch (error) {\n\t\t\tthrow await this.toFileSystemProviderWriteError(this.writeHandles.get(fd), error);\n\t\t} finally {\n\t\t\tthis.updatePos(fd, normalizedPos, bytesWritten);\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region Move/Copy/Delete/Create Folder\n\n\tasync mkdir(resource: URI): Promise<void> {\n\t\ttry {\n\t\t\tawait Promises.mkdir(this.toFilePath(resource));\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync delete(resource: URI, opts: FileDeleteOptions): Promise<void> {\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\tawait this.doDelete(filePath, opts);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprotected async doDelete(filePath: string, opts: FileDeleteOptions): Promise<void> {\n\t\tif (opts.recursive) {\n\t\t\tawait Promises.rm(filePath, RimRafMode.MOVE);\n\t\t} else {\n\t\t\tawait Promises.unlink(filePath);\n\t\t}\n\t}\n\n\tasync rename(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\tconst fromFilePath = this.toFilePath(from);\n\t\tconst toFilePath = this.toFilePath(to);\n\n\t\tif (fromFilePath === toFilePath) {\n\t\t\treturn; // simulate node.js behaviour here and do a no-op if paths match\n\t\t}\n\n\t\ttry {\n\n\t\t\t// Ensure target does not exist\n\t\t\tawait this.validateTargetDeleted(from, to, 'move', opts.overwrite);\n\n\t\t\t// Move\n\t\t\tawait Promises.move(fromFilePath, toFilePath);\n\t\t} catch (error) {\n\n\t\t\t// rewrite some typical errors that can happen especially around symlinks\n\t\t\t// to something the user can better understand\n\t\t\tif (error.code === 'EINVAL' || error.code === 'EBUSY' || error.code === 'ENAMETOOLONG') {\n\t\t\t\terror = new Error(localize('moveError', \"Unable to move '{0}' into '{1}' ({2}).\", basename(fromFilePath), basename(dirname(toFilePath)), error.toString()));\n\t\t\t}\n\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync copy(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\tconst fromFilePath = this.toFilePath(from);\n\t\tconst toFilePath = this.toFilePath(to);\n\n\t\tif (fromFilePath === toFilePath) {\n\t\t\treturn; // simulate node.js behaviour here and do a no-op if paths match\n\t\t}\n\n\t\ttry {\n\n\t\t\t// Ensure target does not exist\n\t\t\tawait this.validateTargetDeleted(from, to, 'copy', opts.overwrite);\n\n\t\t\t// Copy\n\t\t\tawait Promises.copy(fromFilePath, toFilePath, { preserveSymlinks: true });\n\t\t} catch (error) {\n\n\t\t\t// rewrite some typical errors that can happen especially around symlinks\n\t\t\t// to something the user can better understand\n\t\t\tif (error.code === 'EINVAL' || error.code === 'EBUSY' || error.code === 'ENAMETOOLONG') {\n\t\t\t\terror = new Error(localize('copyError', \"Unable to copy '{0}' into '{1}' ({2}).\", basename(fromFilePath), basename(dirname(toFilePath)), error.toString()));\n\t\t\t}\n\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprivate async validateTargetDeleted(from: URI, to: URI, mode: 'move' | 'copy', overwrite?: boolean): Promise<void> {\n\t\tconst fromFilePath = this.toFilePath(from);\n\t\tconst toFilePath = this.toFilePath(to);\n\n\t\tlet isSameResourceWithDifferentPathCase = false;\n\t\tconst isPathCaseSensitive = !!(this.capabilities & FileSystemProviderCapabilities.PathCaseSensitive);\n\t\tif (!isPathCaseSensitive) {\n\t\t\tisSameResourceWithDifferentPathCase = isEqual(fromFilePath, toFilePath, true /* ignore case */);\n\t\t}\n\n\t\tif (isSameResourceWithDifferentPathCase && mode === 'copy') {\n\t\t\tthrow createFileSystemProviderError(localize('fileCopyErrorPathCase', \"'File cannot be copied to same path with different path case\"), FileSystemProviderErrorCode.FileExists);\n\t\t}\n\n\t\t// handle existing target (unless this is a case change)\n\t\tif (!isSameResourceWithDifferentPathCase && await Promises.exists(toFilePath)) {\n\t\t\tif (!overwrite) {\n\t\t\t\tthrow createFileSystemProviderError(localize('fileCopyErrorExists', \"File at target already exists\"), FileSystemProviderErrorCode.FileExists);\n\t\t\t}\n\n\t\t\t// Delete target\n\t\t\tawait this.delete(to, { recursive: true, useTrash: false });\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region File Watching\n\n\tprotected createRecursiveWatcher(\n\t\tonChange: (changes: IDiskFileChange[]) => void,\n\t\tonLogMessage: (msg: ILogMessage) => void,\n\t\tverboseLogging: boolean\n\t): WatcherService {\n\t\tlet watcherImpl: {\n\t\t\tnew(\n\t\t\t\tonChange: (changes: IDiskFileChange[]) => void,\n\t\t\t\tonLogMessage: (msg: ILogMessage) => void,\n\t\t\t\tverboseLogging: boolean,\n\t\t\t\twatcherOptions?: IWatcherOptions\n\t\t\t): WatcherService\n\t\t};\n\n\t\tlet enableLegacyWatcher = false;\n\t\tif (this.options?.watcher?.usePolling) {\n\t\t\tenableLegacyWatcher = false; // must use Parcel watcher for when polling is required\n\t\t} else {\n\t\t\tenableLegacyWatcher = this.options?.legacyWatcher === 'on'; // setting always wins\n\t\t}\n\n\t\tif (enableLegacyWatcher) {\n\t\t\twatcherImpl = NsfwWatcherService;\n\t\t} else {\n\t\t\twatcherImpl = ParcelWatcherService;\n\t\t}\n\n\t\treturn new watcherImpl(\n\t\t\tchanges => onChange(changes),\n\t\t\tmsg => onLogMessage(msg),\n\t\t\tverboseLogging,\n\t\t\tthis.options?.watcher\n\t\t);\n\t}\n\n\tprotected override doWatch(watcher: WatcherService, requests: IWatchRequest[]): Promise<void> {\n\t\tconst usePolling = this.options?.watcher?.usePolling;\n\t\tif (usePolling === true) {\n\t\t\tfor (const request of requests) {\n\t\t\t\trequest.pollingInterval = this.options?.watcher?.pollingInterval ?? 5000;\n\t\t\t}\n\t\t} else if (Array.isArray(usePolling)) {\n\t\t\tfor (const request of requests) {\n\t\t\t\tif (usePolling.includes(request.path)) {\n\t\t\t\t\trequest.pollingInterval = this.options?.watcher?.pollingInterval ?? 5000;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn super.doWatch(watcher, requests);\n\t}\n\n\tprotected createNonRecursiveWatcher(\n\t\tpath: string,\n\t\tonChange: (changes: IDiskFileChange[]) => void,\n\t\tonLogMessage: (msg: ILogMessage) => void,\n\t\tverboseLogging: boolean\n\t): IDisposable & { setVerboseLogging: (verboseLogging: boolean) => void } {\n\t\treturn new NodeJSWatcherService(\n\t\t\tpath,\n\t\t\tchanges => onChange(changes),\n\t\t\tmsg => onLogMessage(msg),\n\t\t\tverboseLogging\n\t\t);\n\t}\n\n\t//#endregion\n\n\t//#region Helpers\n\n\tprivate toFileSystemProviderError(error: NodeJS.ErrnoException): FileSystemProviderError {\n\t\tif (error instanceof FileSystemProviderError) {\n\t\t\treturn error; // avoid double conversion\n\t\t}\n\n\t\tlet code: FileSystemProviderErrorCode;\n\t\tswitch (error.code) {\n\t\t\tcase 'ENOENT':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileNotFound;\n\t\t\t\tbreak;\n\t\t\tcase 'EISDIR':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileIsADirectory;\n\t\t\t\tbreak;\n\t\t\tcase 'ENOTDIR':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileNotADirectory;\n\t\t\t\tbreak;\n\t\t\tcase 'EEXIST':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileExists;\n\t\t\t\tbreak;\n\t\t\tcase 'EPERM':\n\t\t\tcase 'EACCES':\n\t\t\t\tcode = FileSystemProviderErrorCode.NoPermissions;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcode = FileSystemProviderErrorCode.Unknown;\n\t\t}\n\n\t\treturn createFileSystemProviderError(error, code);\n\t}\n\n\tprivate async toFileSystemProviderWriteError(resource: URI | undefined, error: NodeJS.ErrnoException): Promise<FileSystemProviderError> {\n\t\tlet fileSystemProviderWriteError = this.toFileSystemProviderError(error);\n\n\t\t// If the write error signals permission issues, we try\n\t\t// to read the file's mode to see if the file is write\n\t\t// locked.\n\t\tif (resource && fileSystemProviderWriteError.code === FileSystemProviderErrorCode.NoPermissions) {\n\t\t\ttry {\n\t\t\t\tconst { stat } = await SymlinkSupport.stat(this.toFilePath(resource));\n\t\t\t\tif (!(stat.mode & 0o200 /* File mode indicating writable by owner */)) {\n\t\t\t\t\tfileSystemProviderWriteError = createFileSystemProviderError(error, FileSystemProviderErrorCode.FileWriteLocked);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.trace(error); // ignore - return original error\n\t\t\t}\n\t\t}\n\n\t\treturn fileSystemProviderWriteError;\n\t}\n\n\t//#endregion\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as spdlog from 'spdlog';\nimport { ByteSize } from 'vs/platform/files/common/files';\nimport { AbstractMessageLogger, ILogger, LogLevel } from 'vs/platform/log/common/log';\n\nasync function createSpdLogLogger(name: string, logfilePath: string, filesize: number, filecount: number, donotUseFormatters: boolean): Promise<spdlog.Logger | null> {\n\t// Do not crash if spdlog cannot be loaded\n\ttry {\n\t\tconst _spdlog = await import('spdlog');\n\t\t_spdlog.setFlushOn(LogLevel.Trace);\n\t\tconst logger = await _spdlog.createAsyncRotatingLogger(name, logfilePath, filesize, filecount);\n\t\tif (donotUseFormatters) {\n\t\t\tlogger.clearFormatters();\n\t\t}\n\t\treturn logger;\n\t} catch (e) {\n\t\tconsole.error(e);\n\t}\n\treturn null;\n}\n\ninterface ILog {\n\tlevel: LogLevel;\n\tmessage: string;\n}\n\nfunction log(logger: spdlog.Logger, level: LogLevel, message: string): void {\n\tswitch (level) {\n\t\tcase LogLevel.Trace: logger.trace(message); break;\n\t\tcase LogLevel.Debug: logger.debug(message); break;\n\t\tcase LogLevel.Info: logger.info(message); break;\n\t\tcase LogLevel.Warning: logger.warn(message); break;\n\t\tcase LogLevel.Error: logger.error(message); break;\n\t\tcase LogLevel.Critical: logger.critical(message); break;\n\t\tdefault: throw new Error('Invalid log level');\n\t}\n}\n\nexport class SpdLogLogger extends AbstractMessageLogger implements ILogger {\n\n\tprivate buffer: ILog[] = [];\n\tprivate readonly _loggerCreationPromise: Promise<void>;\n\tprivate _logger: spdlog.Logger | undefined;\n\n\tconstructor(\n\t\tname: string,\n\t\tfilepath: string,\n\t\trotating: boolean,\n\t\tdonotUseFormatters: boolean,\n\t\tlevel: LogLevel,\n\t) {\n\t\tsuper();\n\t\tthis.setLevel(level);\n\t\tthis._loggerCreationPromise = this._createSpdLogLogger(name, filepath, rotating, donotUseFormatters);\n\t\tthis._register(this.onDidChangeLogLevel(level => {\n\t\t\tif (this._logger) {\n\t\t\t\tthis._logger.setLevel(level);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate async _createSpdLogLogger(name: string, filepath: string, rotating: boolean, donotUseFormatters: boolean): Promise<void> {\n\t\tconst filecount = rotating ? 6 : 1;\n\t\tconst filesize = (30 / filecount) * ByteSize.MB;\n\t\tconst logger = await createSpdLogLogger(name, filepath, filesize, filecount, donotUseFormatters);\n\t\tif (logger) {\n\t\t\tthis._logger = logger;\n\t\t\tthis._logger.setLevel(this.getLevel());\n\t\t\tfor (const { level, message } of this.buffer) {\n\t\t\t\tlog(this._logger, level, message);\n\t\t\t}\n\t\t\tthis.buffer = [];\n\t\t}\n\t}\n\n\tprotected log(level: LogLevel, message: string): void {\n\t\tif (this._logger) {\n\t\t\tlog(this._logger, level, message);\n\t\t} else if (this.getLevel() <= level) {\n\t\t\tthis.buffer.push({ level, message });\n\t\t}\n\t}\n\n\toverride flush(): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.flush();\n\t\t} else {\n\t\t\tthis._loggerCreationPromise.then(() => this.flush());\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tif (this._logger) {\n\t\t\tthis.disposeLogger();\n\t\t} else {\n\t\t\tthis._loggerCreationPromise.then(() => this.disposeLogger());\n\t\t}\n\t}\n\n\tprivate disposeLogger(): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.drop();\n\t\t\tthis._logger = undefined;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IProductConfiguration } from 'vs/base/common/product';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IProductService = createDecorator<IProductService>('productService');\n\nexport interface IProductService extends Readonly<IProductConfiguration> {\n\n\treadonly _serviceBrand: undefined;\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as Assert from 'vs/base/common/assert';\nimport * as Types from 'vs/base/common/types';\n\nexport interface IRegistry {\n\n\t/**\n\t * Adds the extension functions and properties defined by data to the\n\t * platform. The provided id must be unique.\n\t * @param id a unique identifier\n\t * @param data a contribution\n\t */\n\tadd(id: string, data: any): void;\n\n\t/**\n\t * Returns true iff there is an extension with the provided id.\n\t * @param id an extension identifier\n\t */\n\tknows(id: string): boolean;\n\n\t/**\n\t * Returns the extension functions and properties defined by the specified key or null.\n\t * @param id an extension identifier\n\t */\n\tas<T>(id: string): T;\n}\n\nclass RegistryImpl implements IRegistry {\n\n\tprivate readonly data = new Map<string, any>();\n\n\tpublic add(id: string, data: any): void {\n\t\tAssert.ok(Types.isString(id));\n\t\tAssert.ok(Types.isObject(data));\n\t\tAssert.ok(!this.data.has(id), 'There is already an extension with this id');\n\n\t\tthis.data.set(id, data);\n\t}\n\n\tpublic knows(id: string): boolean {\n\t\treturn this.data.has(id);\n\t}\n\n\tpublic as(id: string): any {\n\t\treturn this.data.get(id) || null;\n\t}\n}\n\nexport const Registry: IRegistry = new RegistryImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport * as platform from 'vs/platform/registry/common/platform';\n\nexport const Extensions = {\n\tJSONContribution: 'base.contributions.json'\n};\n\nexport interface ISchemaContributions {\n\tschemas: { [id: string]: IJSONSchema };\n}\n\nexport interface IJSONContributionRegistry {\n\n\treadonly onDidChangeSchema: Event<string>;\n\n\t/**\n\t * Register a schema to the registry.\n\t */\n\tregisterSchema(uri: string, unresolvedSchemaContent: IJSONSchema): void;\n\n\n\t/**\n\t * Notifies all listeners that the content of the given schema has changed.\n\t * @param uri The id of the schema\n\t */\n\tnotifySchemaChanged(uri: string): void;\n\n\t/**\n\t * Get all schemas\n\t */\n\tgetSchemaContributions(): ISchemaContributions;\n}\n\n\n\nfunction normalizeId(id: string) {\n\tif (id.length > 0 && id.charAt(id.length - 1) === '#') {\n\t\treturn id.substring(0, id.length - 1);\n\t}\n\treturn id;\n}\n\n\n\nclass JSONContributionRegistry implements IJSONContributionRegistry {\n\n\tprivate schemasById: { [id: string]: IJSONSchema };\n\n\tprivate readonly _onDidChangeSchema = new Emitter<string>();\n\treadonly onDidChangeSchema: Event<string> = this._onDidChangeSchema.event;\n\n\tconstructor() {\n\t\tthis.schemasById = {};\n\t}\n\n\tpublic registerSchema(uri: string, unresolvedSchemaContent: IJSONSchema): void {\n\t\tthis.schemasById[normalizeId(uri)] = unresolvedSchemaContent;\n\t\tthis._onDidChangeSchema.fire(uri);\n\t}\n\n\tpublic notifySchemaChanged(uri: string): void {\n\t\tthis._onDidChangeSchema.fire(uri);\n\t}\n\n\tpublic getSchemaContributions(): ISchemaContributions {\n\t\treturn {\n\t\t\tschemas: this.schemasById,\n\t\t};\n\t}\n\n}\n\nconst jsonContributionRegistry = new JSONContributionRegistry();\nplatform.Registry.add(Extensions.JSONContribution, jsonContributionRegistry);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { distinct } from 'vs/base/common/arrays';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport * as types from 'vs/base/common/types';\nimport * as nls from 'vs/nls';\nimport { Extensions as JSONExtensions, IJSONContributionRegistry } from 'vs/platform/jsonschemas/common/jsonContributionRegistry';\nimport { Registry } from 'vs/platform/registry/common/platform';\n\nexport enum EditPresentationTypes {\n\tMultiline = 'multilineText',\n\tSingleline = 'singlelineText'\n}\n\nexport const Extensions = {\n\tConfiguration: 'base.contributions.configuration'\n};\n\nexport interface IConfigurationRegistry {\n\n\t/**\n\t * Register a configuration to the registry.\n\t */\n\tregisterConfiguration(configuration: IConfigurationNode): void;\n\n\t/**\n\t * Register multiple configurations to the registry.\n\t */\n\tregisterConfigurations(configurations: IConfigurationNode[], validate?: boolean): void;\n\n\t/**\n\t * Deregister multiple configurations from the registry.\n\t */\n\tderegisterConfigurations(configurations: IConfigurationNode[]): void;\n\n\t/**\n\t * update the configuration registry by\n\t * \t- registering the configurations to add\n\t * \t- dereigstering the configurations to remove\n\t */\n\tupdateConfigurations(configurations: { add: IConfigurationNode[], remove: IConfigurationNode[] }): void;\n\n\t/**\n\t * Register multiple default configurations to the registry.\n\t */\n\tregisterDefaultConfigurations(defaultConfigurations: IConfigurationDefaults[]): void;\n\n\t/**\n\t * Deregister multiple default configurations from the registry.\n\t */\n\tderegisterDefaultConfigurations(defaultConfigurations: IConfigurationDefaults[]): void;\n\n\t/**\n\t * Return the registered configuration defaults overrides\n\t */\n\tgetConfigurationDefaultsOverrides(): Map<string, IConfigurationDefaultOverride>;\n\n\t/**\n\t * Signal that the schema of a configuration setting has changes. It is currently only supported to change enumeration values.\n\t * Property or default value changes are not allowed.\n\t */\n\tnotifyConfigurationSchemaUpdated(...configurations: IConfigurationNode[]): void;\n\n\t/**\n\t * Event that fires whenver a configuration has been\n\t * registered.\n\t */\n\treadonly onDidSchemaChange: Event<void>;\n\n\t/**\n\t * Event that fires whenver a configuration has been\n\t * registered.\n\t */\n\treadonly onDidUpdateConfiguration: Event<{ properties: string[], defaultsOverrides?: boolean }>;\n\n\t/**\n\t * Returns all configuration nodes contributed to this registry.\n\t */\n\tgetConfigurations(): IConfigurationNode[];\n\n\t/**\n\t * Returns all configurations settings of all configuration nodes contributed to this registry.\n\t */\n\tgetConfigurationProperties(): IStringDictionary<IRegisteredConfigurationPropertySchema>;\n\n\t/**\n\t * Returns all excluded configurations settings of all configuration nodes contributed to this registry.\n\t */\n\tgetExcludedConfigurationProperties(): IStringDictionary<IRegisteredConfigurationPropertySchema>;\n\n\t/**\n\t * Register the identifiers for editor configurations\n\t */\n\tregisterOverrideIdentifiers(identifiers: string[]): void;\n}\n\nexport const enum ConfigurationScope {\n\t/**\n\t * Application specific configuration, which can be configured only in local user settings.\n\t */\n\tAPPLICATION = 1,\n\t/**\n\t * Machine specific configuration, which can be configured only in local and remote user settings.\n\t */\n\tMACHINE,\n\t/**\n\t * Window specific configuration, which can be configured in the user or workspace settings.\n\t */\n\tWINDOW,\n\t/**\n\t * Resource specific configuration, which can be configured in the user, workspace or folder settings.\n\t */\n\tRESOURCE,\n\t/**\n\t * Resource specific configuration that can be configured in language specific settings\n\t */\n\tLANGUAGE_OVERRIDABLE,\n\t/**\n\t * Machine specific configuration that can also be configured in workspace or folder settings.\n\t */\n\tMACHINE_OVERRIDABLE,\n}\n\nexport interface IConfigurationPropertySchema extends IJSONSchema {\n\n\tscope?: ConfigurationScope;\n\n\t/**\n\t * When restricted, value of this configuration will be read only from trusted sources.\n\t * For eg., If the workspace is not trusted, then the value of this configuration is not read from workspace settings file.\n\t */\n\trestricted?: boolean;\n\n\t/**\n\t * When `false` this property is excluded from the registry. Default is to include.\n\t */\n\tincluded?: boolean;\n\n\t/**\n\t * List of tags associated to the property.\n\t *  - A tag can be used for filtering\n\t *  - Use `experimental` tag for marking the setting as experimental. **Note:** Defaults of experimental settings can be changed by the running experiments.\n\t */\n\ttags?: string[];\n\n\t/**\n\t * When enabled this setting is ignored during sync and user can override this.\n\t */\n\tignoreSync?: boolean;\n\n\t/**\n\t * When enabled this setting is ignored during sync and user cannot override this.\n\t */\n\tdisallowSyncIgnore?: boolean;\n\n\t/**\n\t * Labels for enumeration items\n\t */\n\tenumItemLabels?: string[];\n\n\t/**\n\t * When specified, controls the presentation format of string settings.\n\t * Otherwise, the presentation format defaults to `singleline`.\n\t */\n\teditPresentation?: EditPresentationTypes;\n\n\t/**\n\t * When specified, gives an order number for the setting\n\t * within the settings editor. Otherwise, the setting is placed at the end.\n\t */\n\torder?: number;\n}\n\nexport interface IExtensionInfo {\n\tid: string;\n\tdisplayName?: string;\n}\n\nexport interface IConfigurationNode {\n\tid?: string;\n\torder?: number;\n\ttype?: string | string[];\n\ttitle?: string;\n\tdescription?: string;\n\tproperties?: IStringDictionary<IConfigurationPropertySchema>;\n\tallOf?: IConfigurationNode[];\n\tscope?: ConfigurationScope;\n\textensionInfo?: IExtensionInfo;\n\trestrictedProperties?: string[];\n}\n\nexport interface IConfigurationDefaults {\n\toverrides: IStringDictionary<any>;\n\tsource?: IExtensionInfo | string;\n}\n\nexport type IRegisteredConfigurationPropertySchema = IConfigurationPropertySchema & {\n\tdefaultDefaultValue?: any,\n\tsource?: IExtensionInfo,\n\tdefaultValueSource?: IExtensionInfo | string;\n};\n\nexport type IConfigurationDefaultOverride = { value: any, source?: IExtensionInfo | string };\n\nexport const allSettings: { properties: IStringDictionary<IConfigurationPropertySchema>, patternProperties: IStringDictionary<IConfigurationPropertySchema> } = { properties: {}, patternProperties: {} };\nexport const applicationSettings: { properties: IStringDictionary<IConfigurationPropertySchema>, patternProperties: IStringDictionary<IConfigurationPropertySchema> } = { properties: {}, patternProperties: {} };\nexport const machineSettings: { properties: IStringDictionary<IConfigurationPropertySchema>, patternProperties: IStringDictionary<IConfigurationPropertySchema> } = { properties: {}, patternProperties: {} };\nexport const machineOverridableSettings: { properties: IStringDictionary<IConfigurationPropertySchema>, patternProperties: IStringDictionary<IConfigurationPropertySchema> } = { properties: {}, patternProperties: {} };\nexport const windowSettings: { properties: IStringDictionary<IConfigurationPropertySchema>, patternProperties: IStringDictionary<IConfigurationPropertySchema> } = { properties: {}, patternProperties: {} };\nexport const resourceSettings: { properties: IStringDictionary<IConfigurationPropertySchema>, patternProperties: IStringDictionary<IConfigurationPropertySchema> } = { properties: {}, patternProperties: {} };\n\nexport const resourceLanguageSettingsSchemaId = 'vscode://schemas/settings/resourceLanguage';\nexport const configurationDefaultsSchemaId = 'vscode://schemas/settings/configurationDefaults';\n\nconst contributionRegistry = Registry.as<IJSONContributionRegistry>(JSONExtensions.JSONContribution);\n\nclass ConfigurationRegistry implements IConfigurationRegistry {\n\n\tprivate readonly configurationDefaultsOverrides: Map<string, IConfigurationDefaultOverride>;\n\tprivate readonly defaultLanguageConfigurationOverridesNode: IConfigurationNode;\n\tprivate readonly configurationContributors: IConfigurationNode[];\n\tprivate readonly configurationProperties: IStringDictionary<IRegisteredConfigurationPropertySchema>;\n\tprivate readonly excludedConfigurationProperties: IStringDictionary<IRegisteredConfigurationPropertySchema>;\n\tprivate readonly resourceLanguageSettingsSchema: IJSONSchema;\n\tprivate readonly overrideIdentifiers = new Set<string>();\n\n\tprivate readonly _onDidSchemaChange = new Emitter<void>();\n\treadonly onDidSchemaChange: Event<void> = this._onDidSchemaChange.event;\n\n\tprivate readonly _onDidUpdateConfiguration = new Emitter<{ properties: string[], defaultsOverrides?: boolean }>();\n\treadonly onDidUpdateConfiguration = this._onDidUpdateConfiguration.event;\n\n\tconstructor() {\n\t\tthis.configurationDefaultsOverrides = new Map<string, IConfigurationDefaultOverride>();\n\t\tthis.defaultLanguageConfigurationOverridesNode = {\n\t\t\tid: 'defaultOverrides',\n\t\t\ttitle: nls.localize('defaultLanguageConfigurationOverrides.title', \"Default Language Configuration Overrides\"),\n\t\t\tproperties: {}\n\t\t};\n\t\tthis.configurationContributors = [this.defaultLanguageConfigurationOverridesNode];\n\t\tthis.resourceLanguageSettingsSchema = { properties: {}, patternProperties: {}, additionalProperties: false, errorMessage: 'Unknown editor configuration setting', allowTrailingCommas: true, allowComments: true };\n\t\tthis.configurationProperties = {};\n\t\tthis.excludedConfigurationProperties = {};\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t\tthis.registerOverridePropertyPatternKey();\n\t}\n\n\tpublic registerConfiguration(configuration: IConfigurationNode, validate: boolean = true): void {\n\t\tthis.registerConfigurations([configuration], validate);\n\t}\n\n\tpublic registerConfigurations(configurations: IConfigurationNode[], validate: boolean = true): void {\n\t\tconst properties = this.doRegisterConfigurations(configurations, validate);\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire({ properties });\n\t}\n\n\tpublic deregisterConfigurations(configurations: IConfigurationNode[]): void {\n\t\tconst properties = this.doDeregisterConfigurations(configurations);\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire({ properties });\n\t}\n\n\tpublic updateConfigurations({ add, remove }: { add: IConfigurationNode[], remove: IConfigurationNode[] }): void {\n\t\tconst properties = [];\n\t\tproperties.push(...this.doDeregisterConfigurations(remove));\n\t\tproperties.push(...this.doRegisterConfigurations(add, false));\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire({ properties: distinct(properties) });\n\t}\n\n\tpublic registerDefaultConfigurations(configurationDefaults: IConfigurationDefaults[]): void {\n\t\tconst properties: string[] = [];\n\t\tconst overrideIdentifiers: string[] = [];\n\n\t\tfor (const { overrides, source } of configurationDefaults) {\n\t\t\tfor (const key in overrides) {\n\t\t\t\tproperties.push(key);\n\n\t\t\t\tif (OVERRIDE_PROPERTY_REGEX.test(key)) {\n\t\t\t\t\tconst defaultValue = { ...(this.configurationDefaultsOverrides.get(key)?.value || {}), ...overrides[key] };\n\t\t\t\t\tthis.configurationDefaultsOverrides.set(key, { source, value: defaultValue });\n\t\t\t\t\tconst property: IRegisteredConfigurationPropertySchema = {\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\tdefault: defaultValue,\n\t\t\t\t\t\tdescription: nls.localize('defaultLanguageConfiguration.description', \"Configure settings to be overridden for {0} language.\", key),\n\t\t\t\t\t\t$ref: resourceLanguageSettingsSchemaId,\n\t\t\t\t\t\tdefaultDefaultValue: defaultValue,\n\t\t\t\t\t\tsource: types.isString(source) ? undefined : source,\n\t\t\t\t\t};\n\t\t\t\t\toverrideIdentifiers.push(...overrideIdentifiersFromKey(key));\n\t\t\t\t\tthis.configurationProperties[key] = property;\n\t\t\t\t\tthis.defaultLanguageConfigurationOverridesNode.properties![key] = property;\n\t\t\t\t} else {\n\t\t\t\t\tthis.configurationDefaultsOverrides.set(key, { value: overrides[key], source });\n\t\t\t\t\tconst property = this.configurationProperties[key];\n\t\t\t\t\tif (property) {\n\t\t\t\t\t\tthis.updatePropertyDefaultValue(key, property);\n\t\t\t\t\t\tthis.updateSchema(key, property);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.registerOverrideIdentifiers(overrideIdentifiers);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire({ properties, defaultsOverrides: true });\n\t}\n\n\tpublic deregisterDefaultConfigurations(defaultConfigurations: IConfigurationDefaults[]): void {\n\t\tconst properties: string[] = [];\n\t\tfor (const { overrides, source } of defaultConfigurations) {\n\t\t\tfor (const key in overrides) {\n\t\t\t\tconst configurationDefaultsOverride = this.configurationDefaultsOverrides.get(key);\n\t\t\t\tconst id = types.isString(source) ? source : source?.id;\n\t\t\t\tconst configurationDefaultsOverrideSourceId = types.isString(configurationDefaultsOverride?.source) ? configurationDefaultsOverride?.source : configurationDefaultsOverride?.source?.id;\n\t\t\t\tif (id !== configurationDefaultsOverrideSourceId) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tproperties.push(key);\n\t\t\t\tthis.configurationDefaultsOverrides.delete(key);\n\t\t\t\tif (OVERRIDE_PROPERTY_REGEX.test(key)) {\n\t\t\t\t\tdelete this.configurationProperties[key];\n\t\t\t\t\tdelete this.defaultLanguageConfigurationOverridesNode.properties![key];\n\t\t\t\t} else {\n\t\t\t\t\tconst property = this.configurationProperties[key];\n\t\t\t\t\tif (property) {\n\t\t\t\t\t\tthis.updatePropertyDefaultValue(key, property);\n\t\t\t\t\t\tthis.updateSchema(key, property);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.updateOverridePropertyPatternKey();\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire({ properties, defaultsOverrides: true });\n\t}\n\n\tpublic notifyConfigurationSchemaUpdated(...configurations: IConfigurationNode[]) {\n\t\tthis._onDidSchemaChange.fire();\n\t}\n\n\tpublic registerOverrideIdentifiers(overrideIdentifiers: string[]): void {\n\t\tfor (const overrideIdentifier of overrideIdentifiers) {\n\t\t\tthis.overrideIdentifiers.add(overrideIdentifier);\n\t\t}\n\t\tthis.updateOverridePropertyPatternKey();\n\t}\n\n\tprivate doRegisterConfigurations(configurations: IConfigurationNode[], validate: boolean): string[] {\n\t\tconst properties: string[] = [];\n\t\tconfigurations.forEach(configuration => {\n\t\t\tproperties.push(...this.validateAndRegisterProperties(configuration, validate, configuration.extensionInfo, configuration.restrictedProperties)); // fills in defaults\n\t\t\tthis.configurationContributors.push(configuration);\n\t\t\tthis.registerJSONConfiguration(configuration);\n\t\t});\n\t\treturn properties;\n\t}\n\n\tprivate doDeregisterConfigurations(configurations: IConfigurationNode[]): string[] {\n\t\tconst properties: string[] = [];\n\t\tconst deregisterConfiguration = (configuration: IConfigurationNode) => {\n\t\t\tif (configuration.properties) {\n\t\t\t\tfor (const key in configuration.properties) {\n\t\t\t\t\tproperties.push(key);\n\t\t\t\t\tdelete this.configurationProperties[key];\n\t\t\t\t\tthis.removeFromSchema(key, configuration.properties[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (configuration.allOf) {\n\t\t\t\tconfiguration.allOf.forEach(node => deregisterConfiguration(node));\n\t\t\t}\n\t\t};\n\t\tfor (const configuration of configurations) {\n\t\t\tderegisterConfiguration(configuration);\n\t\t\tconst index = this.configurationContributors.indexOf(configuration);\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.configurationContributors.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\treturn properties;\n\t}\n\n\tprivate validateAndRegisterProperties(configuration: IConfigurationNode, validate: boolean = true, extensionInfo: IExtensionInfo | undefined, restrictedProperties: string[] | undefined, scope: ConfigurationScope = ConfigurationScope.WINDOW): string[] {\n\t\tscope = types.isUndefinedOrNull(configuration.scope) ? scope : configuration.scope;\n\t\tlet propertyKeys: string[] = [];\n\t\tlet properties = configuration.properties;\n\t\tif (properties) {\n\t\t\tfor (let key in properties) {\n\t\t\t\tif (validate && validateProperty(key)) {\n\t\t\t\t\tdelete properties[key];\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst property: IRegisteredConfigurationPropertySchema = properties[key];\n\t\t\t\tproperty.source = extensionInfo;\n\n\t\t\t\t// update default value\n\t\t\t\tproperty.defaultDefaultValue = properties[key].default;\n\t\t\t\tthis.updatePropertyDefaultValue(key, property);\n\n\t\t\t\t// update scope\n\t\t\t\tif (OVERRIDE_PROPERTY_REGEX.test(key)) {\n\t\t\t\t\tproperty.scope = undefined; // No scope for overridable properties `[${identifier}]`\n\t\t\t\t} else {\n\t\t\t\t\tproperty.scope = types.isUndefinedOrNull(property.scope) ? scope : property.scope;\n\t\t\t\t\tproperty.restricted = types.isUndefinedOrNull(property.restricted) ? !!restrictedProperties?.includes(key) : property.restricted;\n\t\t\t\t}\n\n\t\t\t\t// Add to properties maps\n\t\t\t\t// Property is included by default if 'included' is unspecified\n\t\t\t\tif (properties[key].hasOwnProperty('included') && !properties[key].included) {\n\t\t\t\t\tthis.excludedConfigurationProperties[key] = properties[key];\n\t\t\t\t\tdelete properties[key];\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tthis.configurationProperties[key] = properties[key];\n\t\t\t\t}\n\n\t\t\t\tif (!properties[key].deprecationMessage && properties[key].markdownDeprecationMessage) {\n\t\t\t\t\t// If not set, default deprecationMessage to the markdown source\n\t\t\t\t\tproperties[key].deprecationMessage = properties[key].markdownDeprecationMessage;\n\t\t\t\t}\n\n\t\t\t\tpropertyKeys.push(key);\n\t\t\t}\n\t\t}\n\t\tlet subNodes = configuration.allOf;\n\t\tif (subNodes) {\n\t\t\tfor (let node of subNodes) {\n\t\t\t\tpropertyKeys.push(...this.validateAndRegisterProperties(node, validate, extensionInfo, restrictedProperties, scope));\n\t\t\t}\n\t\t}\n\t\treturn propertyKeys;\n\t}\n\n\t// TODO: @sandy081 - Remove this method and include required info in getConfigurationProperties\n\tgetConfigurations(): IConfigurationNode[] {\n\t\treturn this.configurationContributors;\n\t}\n\n\tgetConfigurationProperties(): IStringDictionary<IRegisteredConfigurationPropertySchema> {\n\t\treturn this.configurationProperties;\n\t}\n\n\tgetExcludedConfigurationProperties(): IStringDictionary<IRegisteredConfigurationPropertySchema> {\n\t\treturn this.excludedConfigurationProperties;\n\t}\n\n\tgetConfigurationDefaultsOverrides(): Map<string, IConfigurationDefaultOverride> {\n\t\treturn this.configurationDefaultsOverrides;\n\t}\n\n\tprivate registerJSONConfiguration(configuration: IConfigurationNode) {\n\t\tconst register = (configuration: IConfigurationNode) => {\n\t\t\tlet properties = configuration.properties;\n\t\t\tif (properties) {\n\t\t\t\tfor (const key in properties) {\n\t\t\t\t\tthis.updateSchema(key, properties[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet subNodes = configuration.allOf;\n\t\t\tif (subNodes) {\n\t\t\t\tsubNodes.forEach(register);\n\t\t\t}\n\t\t};\n\t\tregister(configuration);\n\t}\n\n\tprivate updateSchema(key: string, property: IConfigurationPropertySchema): void {\n\t\tallSettings.properties[key] = property;\n\t\tswitch (property.scope) {\n\t\t\tcase ConfigurationScope.APPLICATION:\n\t\t\t\tapplicationSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.MACHINE:\n\t\t\t\tmachineSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.MACHINE_OVERRIDABLE:\n\t\t\t\tmachineOverridableSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.WINDOW:\n\t\t\t\twindowSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.RESOURCE:\n\t\t\t\tresourceSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.LANGUAGE_OVERRIDABLE:\n\t\t\t\tresourceSettings.properties[key] = property;\n\t\t\t\tthis.resourceLanguageSettingsSchema.properties![key] = property;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate removeFromSchema(key: string, property: IConfigurationPropertySchema): void {\n\t\tdelete allSettings.properties[key];\n\t\tswitch (property.scope) {\n\t\t\tcase ConfigurationScope.APPLICATION:\n\t\t\t\tdelete applicationSettings.properties[key];\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.MACHINE:\n\t\t\t\tdelete machineSettings.properties[key];\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.MACHINE_OVERRIDABLE:\n\t\t\t\tdelete machineOverridableSettings.properties[key];\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.WINDOW:\n\t\t\t\tdelete windowSettings.properties[key];\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.RESOURCE:\n\t\t\tcase ConfigurationScope.LANGUAGE_OVERRIDABLE:\n\t\t\t\tdelete resourceSettings.properties[key];\n\t\t\t\tdelete this.resourceLanguageSettingsSchema.properties![key];\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate updateOverridePropertyPatternKey(): void {\n\t\tfor (const overrideIdentifier of this.overrideIdentifiers.values()) {\n\t\t\tconst overrideIdentifierProperty = `[${overrideIdentifier}]`;\n\t\t\tconst resourceLanguagePropertiesSchema: IJSONSchema = {\n\t\t\t\ttype: 'object',\n\t\t\t\tdescription: nls.localize('overrideSettings.defaultDescription', \"Configure editor settings to be overridden for a language.\"),\n\t\t\t\terrorMessage: nls.localize('overrideSettings.errorMessage', \"This setting does not support per-language configuration.\"),\n\t\t\t\t$ref: resourceLanguageSettingsSchemaId,\n\t\t\t};\n\t\t\tthis.updatePropertyDefaultValue(overrideIdentifierProperty, resourceLanguagePropertiesSchema);\n\t\t\tallSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tapplicationSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tmachineSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tmachineOverridableSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\twindowSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tresourceSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t}\n\t\tthis._onDidSchemaChange.fire();\n\t}\n\n\tprivate registerOverridePropertyPatternKey(): void {\n\t\tconst resourceLanguagePropertiesSchema: IJSONSchema = {\n\t\t\ttype: 'object',\n\t\t\tdescription: nls.localize('overrideSettings.defaultDescription', \"Configure editor settings to be overridden for a language.\"),\n\t\t\terrorMessage: nls.localize('overrideSettings.errorMessage', \"This setting does not support per-language configuration.\"),\n\t\t\t$ref: resourceLanguageSettingsSchemaId,\n\t\t};\n\t\tallSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n\t\tapplicationSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n\t\tmachineSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n\t\tmachineOverridableSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n\t\twindowSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n\t\tresourceSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n\t\tthis._onDidSchemaChange.fire();\n\t}\n\n\tprivate updatePropertyDefaultValue(key: string, property: IRegisteredConfigurationPropertySchema): void {\n\t\tconst configurationdefaultOverride = this.configurationDefaultsOverrides.get(key);\n\t\tlet defaultValue = configurationdefaultOverride?.value;\n\t\tlet defaultSource = configurationdefaultOverride?.source;\n\t\tif (types.isUndefined(defaultValue)) {\n\t\t\tdefaultValue = property.defaultDefaultValue;\n\t\t\tdefaultSource = undefined;\n\t\t}\n\t\tif (types.isUndefined(defaultValue)) {\n\t\t\tdefaultValue = getDefaultValue(property.type);\n\t\t}\n\t\tproperty.default = defaultValue;\n\t\tproperty.defaultValueSource = defaultSource;\n\t}\n}\n\nconst OVERRIDE_IDENTIFIER_PATTERN = `\\\\[([^\\\\]]+)\\\\]`;\nconst OVERRIDE_IDENTIFIER_REGEX = new RegExp(OVERRIDE_IDENTIFIER_PATTERN, 'g');\nexport const OVERRIDE_PROPERTY_PATTERN = `^(${OVERRIDE_IDENTIFIER_PATTERN})+$`;\nexport const OVERRIDE_PROPERTY_REGEX = new RegExp(OVERRIDE_PROPERTY_PATTERN);\n\nexport function overrideIdentifiersFromKey(key: string): string[] {\n\tconst identifiers: string[] = [];\n\tif (OVERRIDE_PROPERTY_REGEX.test(key)) {\n\t\tlet matches = OVERRIDE_IDENTIFIER_REGEX.exec(key);\n\t\twhile (matches?.length) {\n\t\t\tconst identifier = matches[1].trim();\n\t\t\tif (identifier) {\n\t\t\t\tidentifiers.push(identifier);\n\t\t\t}\n\t\t\tmatches = OVERRIDE_IDENTIFIER_REGEX.exec(key);\n\t\t}\n\t}\n\treturn distinct(identifiers);\n}\n\nexport function keyFromOverrideIdentifiers(overrideIdentifiers: string[]): string {\n\treturn overrideIdentifiers.reduce((result, overrideIdentifier) => `${result}[${overrideIdentifier}]`, '');\n}\n\nexport function getDefaultValue(type: string | string[] | undefined): any {\n\tconst t = Array.isArray(type) ? (<string[]>type)[0] : <string>type;\n\tswitch (t) {\n\t\tcase 'boolean':\n\t\t\treturn false;\n\t\tcase 'integer':\n\t\tcase 'number':\n\t\t\treturn 0;\n\t\tcase 'string':\n\t\t\treturn '';\n\t\tcase 'array':\n\t\t\treturn [];\n\t\tcase 'object':\n\t\t\treturn {};\n\t\tdefault:\n\t\t\treturn null;\n\t}\n}\n\nconst configurationRegistry = new ConfigurationRegistry();\nRegistry.add(Extensions.Configuration, configurationRegistry);\n\nexport function validateProperty(property: string): string | null {\n\tif (!property.trim()) {\n\t\treturn nls.localize('config.property.empty', \"Cannot register an empty property\");\n\t}\n\tif (OVERRIDE_PROPERTY_REGEX.test(property)) {\n\t\treturn nls.localize('config.property.languageDefault', \"Cannot register '{0}'. This matches property pattern '\\\\\\\\[.*\\\\\\\\]$' for describing language specific editor settings. Use 'configurationDefaults' contribution.\", property);\n\t}\n\tif (configurationRegistry.getConfigurationProperties()[property] !== undefined) {\n\t\treturn nls.localize('config.property.duplicate', \"Cannot register '{0}'. This property is already registered.\", property);\n\t}\n\treturn null;\n}\n\nexport function getScopes(): [string, ConfigurationScope | undefined][] {\n\tconst scopes: [string, ConfigurationScope | undefined][] = [];\n\tconst configurationProperties = configurationRegistry.getConfigurationProperties();\n\tfor (const key of Object.keys(configurationProperties)) {\n\t\tscopes.push([key, configurationProperties[key].scope]);\n\t}\n\tscopes.push(['launch', ConfigurationScope.RESOURCE]);\n\tscopes.push(['task', ConfigurationScope.RESOURCE]);\n\treturn scopes;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as arrays from 'vs/base/common/arrays';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport * as json from 'vs/base/common/json';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { getOrSet, ResourceMap } from 'vs/base/common/map';\nimport * as objects from 'vs/base/common/objects';\nimport { IExtUri } from 'vs/base/common/resources';\nimport * as types from 'vs/base/common/types';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { addToValueTree, ConfigurationTarget, getConfigurationValue, IConfigurationChange, IConfigurationChangeEvent, IConfigurationCompareResult, IConfigurationData, IConfigurationModel, IConfigurationOverrides, IConfigurationUpdateOverrides, IConfigurationValue, IOverrides, removeFromValueTree, toValuesTree } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationScope, Extensions, IConfigurationPropertySchema, IConfigurationRegistry, overrideIdentifiersFromKey, OVERRIDE_PROPERTY_REGEX } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Workspace } from 'vs/platform/workspace/common/workspace';\n\nexport class ConfigurationModel implements IConfigurationModel {\n\n\tprivate isFrozen: boolean = false;\n\tprivate readonly overrideConfigurations = new Map<string, ConfigurationModel>();\n\n\tconstructor(\n\t\tprivate readonly _contents: any = {},\n\t\tprivate readonly _keys: string[] = [],\n\t\tprivate readonly _overrides: IOverrides[] = []\n\t) {\n\t}\n\n\tget contents(): any {\n\t\treturn this.checkAndFreeze(this._contents);\n\t}\n\n\tget overrides(): IOverrides[] {\n\t\treturn this.checkAndFreeze(this._overrides);\n\t}\n\n\tget keys(): string[] {\n\t\treturn this.checkAndFreeze(this._keys);\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._keys.length === 0 && Object.keys(this._contents).length === 0 && this._overrides.length === 0;\n\t}\n\n\tgetValue<V>(section: string | undefined): V {\n\t\treturn section ? getConfigurationValue<any>(this.contents, section) : this.contents;\n\t}\n\n\tgetOverrideValue<V>(section: string | undefined, overrideIdentifier: string): V | undefined {\n\t\tconst overrideContents = this.getContentsForOverrideIdentifer(overrideIdentifier);\n\t\treturn overrideContents\n\t\t\t? section ? getConfigurationValue<any>(overrideContents, section) : overrideContents\n\t\t\t: undefined;\n\t}\n\n\tgetKeysForOverrideIdentifier(identifier: string): string[] {\n\t\tconst keys: string[] = [];\n\t\tfor (const override of this.overrides) {\n\t\t\tif (override.identifiers.includes(identifier)) {\n\t\t\t\tkeys.push(...override.keys);\n\t\t\t}\n\t\t}\n\t\treturn arrays.distinct(keys);\n\t}\n\n\tgetAllOverrideIdentifiers(): string[] {\n\t\tconst result: string[] = [];\n\t\tfor (const override of this.overrides) {\n\t\t\tresult.push(...override.identifiers);\n\t\t}\n\t\treturn arrays.distinct(result);\n\t}\n\n\toverride(identifier: string): ConfigurationModel {\n\t\tlet overrideConfigurationModel = this.overrideConfigurations.get(identifier);\n\t\tif (!overrideConfigurationModel) {\n\t\t\toverrideConfigurationModel = this.createOverrideConfigurationModel(identifier);\n\t\t\tthis.overrideConfigurations.set(identifier, overrideConfigurationModel);\n\t\t}\n\t\treturn overrideConfigurationModel;\n\t}\n\n\tmerge(...others: ConfigurationModel[]): ConfigurationModel {\n\t\tconst contents = objects.deepClone(this.contents);\n\t\tconst overrides = objects.deepClone(this.overrides);\n\t\tconst keys = [...this.keys];\n\n\t\tfor (const other of others) {\n\t\t\tthis.mergeContents(contents, other.contents);\n\n\t\t\tfor (const otherOverride of other.overrides) {\n\t\t\t\tconst [override] = overrides.filter(o => arrays.equals(o.identifiers, otherOverride.identifiers));\n\t\t\t\tif (override) {\n\t\t\t\t\tthis.mergeContents(override.contents, otherOverride.contents);\n\t\t\t\t\toverride.keys.push(...otherOverride.keys);\n\t\t\t\t\toverride.keys = arrays.distinct(override.keys);\n\t\t\t\t} else {\n\t\t\t\t\toverrides.push(objects.deepClone(otherOverride));\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const key of other.keys) {\n\t\t\t\tif (keys.indexOf(key) === -1) {\n\t\t\t\t\tkeys.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn new ConfigurationModel(contents, keys, overrides);\n\t}\n\n\tfreeze(): ConfigurationModel {\n\t\tthis.isFrozen = true;\n\t\treturn this;\n\t}\n\n\tprivate createOverrideConfigurationModel(identifier: string): ConfigurationModel {\n\t\tconst overrideContents = this.getContentsForOverrideIdentifer(identifier);\n\n\t\tif (!overrideContents || typeof overrideContents !== 'object' || !Object.keys(overrideContents).length) {\n\t\t\t// If there are no valid overrides, return self\n\t\t\treturn this;\n\t\t}\n\n\t\tlet contents: any = {};\n\t\tfor (const key of arrays.distinct([...Object.keys(this.contents), ...Object.keys(overrideContents)])) {\n\n\t\t\tlet contentsForKey = this.contents[key];\n\t\t\tlet overrideContentsForKey = overrideContents[key];\n\n\t\t\t// If there are override contents for the key, clone and merge otherwise use base contents\n\t\t\tif (overrideContentsForKey) {\n\t\t\t\t// Clone and merge only if base contents and override contents are of type object otherwise just override\n\t\t\t\tif (typeof contentsForKey === 'object' && typeof overrideContentsForKey === 'object') {\n\t\t\t\t\tcontentsForKey = objects.deepClone(contentsForKey);\n\t\t\t\t\tthis.mergeContents(contentsForKey, overrideContentsForKey);\n\t\t\t\t} else {\n\t\t\t\t\tcontentsForKey = overrideContentsForKey;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcontents[key] = contentsForKey;\n\t\t}\n\n\t\treturn new ConfigurationModel(contents, this.keys, this.overrides);\n\t}\n\n\tprivate mergeContents(source: any, target: any): void {\n\t\tfor (const key of Object.keys(target)) {\n\t\t\tif (key in source) {\n\t\t\t\tif (types.isObject(source[key]) && types.isObject(target[key])) {\n\t\t\t\t\tthis.mergeContents(source[key], target[key]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsource[key] = objects.deepClone(target[key]);\n\t\t}\n\t}\n\n\tprivate checkAndFreeze<T>(data: T): T {\n\t\tif (this.isFrozen && !Object.isFrozen(data)) {\n\t\t\treturn objects.deepFreeze(data);\n\t\t}\n\t\treturn data;\n\t}\n\n\tprivate getContentsForOverrideIdentifer(identifier: string): any {\n\t\tlet contentsForIdentifierOnly: IStringDictionary<any> | null = null;\n\t\tlet contents: IStringDictionary<any> | null = null;\n\t\tconst mergeContents = (contentsToMerge: any) => {\n\t\t\tif (contentsToMerge) {\n\t\t\t\tif (contents) {\n\t\t\t\t\tthis.mergeContents(contents, contentsToMerge);\n\t\t\t\t} else {\n\t\t\t\t\tcontents = objects.deepClone(contentsToMerge);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tfor (const override of this.overrides) {\n\t\t\tif (arrays.equals(override.identifiers, [identifier])) {\n\t\t\t\tcontentsForIdentifierOnly = override.contents;\n\t\t\t} else if (override.identifiers.includes(identifier)) {\n\t\t\t\tmergeContents(override.contents);\n\t\t\t}\n\t\t}\n\t\t// Merge contents of the identifier only at the end to take precedence.\n\t\tmergeContents(contentsForIdentifierOnly);\n\t\treturn contents;\n\t}\n\n\ttoJSON(): IConfigurationModel {\n\t\treturn {\n\t\t\tcontents: this.contents,\n\t\t\toverrides: this.overrides,\n\t\t\tkeys: this.keys\n\t\t};\n\t}\n\n\t// Update methods\n\n\tpublic setValue(key: string, value: any) {\n\t\tthis.addKey(key);\n\t\taddToValueTree(this.contents, key, value, e => { throw new Error(e); });\n\t}\n\n\tpublic removeValue(key: string): void {\n\t\tif (this.removeKey(key)) {\n\t\t\tremoveFromValueTree(this.contents, key);\n\t\t}\n\t}\n\n\tprivate addKey(key: string): void {\n\t\tlet index = this.keys.length;\n\t\tfor (let i = 0; i < index; i++) {\n\t\t\tif (key.indexOf(this.keys[i]) === 0) {\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\tthis.keys.splice(index, 1, key);\n\t}\n\n\tprivate removeKey(key: string): boolean {\n\t\tlet index = this.keys.indexOf(key);\n\t\tif (index !== -1) {\n\t\t\tthis.keys.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n\nexport class DefaultConfigurationModel extends ConfigurationModel {\n\n\tconstructor(configurationDefaultsOverrides: IStringDictionary<any> = {}) {\n\t\tconst properties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\t\tconst keys = Object.keys(properties);\n\t\tconst contents: any = Object.create(null);\n\t\tconst overrides: IOverrides[] = [];\n\n\t\tfor (const key in properties) {\n\t\t\tconst defaultOverrideValue = configurationDefaultsOverrides[key];\n\t\t\tconst value = defaultOverrideValue !== undefined ? defaultOverrideValue : properties[key].default;\n\t\t\taddToValueTree(contents, key, value, message => console.error(`Conflict in default settings: ${message}`));\n\t\t}\n\t\tfor (const key of Object.keys(contents)) {\n\t\t\tif (OVERRIDE_PROPERTY_REGEX.test(key)) {\n\t\t\t\toverrides.push({\n\t\t\t\t\tidentifiers: overrideIdentifiersFromKey(key),\n\t\t\t\t\tkeys: Object.keys(contents[key]),\n\t\t\t\t\tcontents: toValuesTree(contents[key], message => console.error(`Conflict in default settings file: ${message}`)),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tsuper(contents, keys, overrides);\n\t}\n}\n\nexport interface ConfigurationParseOptions {\n\tscopes: ConfigurationScope[] | undefined;\n\tskipRestricted?: boolean;\n}\n\nexport class ConfigurationModelParser {\n\n\tprivate _raw: any = null;\n\tprivate _configurationModel: ConfigurationModel | null = null;\n\tprivate _restrictedConfigurations: string[] = [];\n\tprivate _parseErrors: any[] = [];\n\n\tconstructor(protected readonly _name: string) { }\n\n\tget configurationModel(): ConfigurationModel {\n\t\treturn this._configurationModel || new ConfigurationModel();\n\t}\n\n\tget restrictedConfigurations(): string[] {\n\t\treturn this._restrictedConfigurations;\n\t}\n\n\tget errors(): any[] {\n\t\treturn this._parseErrors;\n\t}\n\n\tpublic parse(content: string | null | undefined, options?: ConfigurationParseOptions): void {\n\t\tif (!types.isUndefinedOrNull(content)) {\n\t\t\tconst raw = this.doParseContent(content);\n\t\t\tthis.parseRaw(raw, options);\n\t\t}\n\t}\n\n\tpublic reparse(options: ConfigurationParseOptions): void {\n\t\tif (this._raw) {\n\t\t\tthis.parseRaw(this._raw, options);\n\t\t}\n\t}\n\n\tpublic parseRaw(raw: any, options?: ConfigurationParseOptions): void {\n\t\tthis._raw = raw;\n\t\tconst { contents, keys, overrides, restricted } = this.doParseRaw(raw, options);\n\t\tthis._configurationModel = new ConfigurationModel(contents, keys, overrides);\n\t\tthis._restrictedConfigurations = restricted || [];\n\t}\n\n\tprivate doParseContent(content: string): any {\n\t\tlet raw: any = {};\n\t\tlet currentProperty: string | null = null;\n\t\tlet currentParent: any = [];\n\t\tlet previousParents: any[] = [];\n\t\tlet parseErrors: json.ParseError[] = [];\n\n\t\tfunction onValue(value: any) {\n\t\t\tif (Array.isArray(currentParent)) {\n\t\t\t\t(<any[]>currentParent).push(value);\n\t\t\t} else if (currentProperty !== null) {\n\t\t\t\tcurrentParent[currentProperty] = value;\n\t\t\t}\n\t\t}\n\n\t\tlet visitor: json.JSONVisitor = {\n\t\t\tonObjectBegin: () => {\n\t\t\t\tlet object = {};\n\t\t\t\tonValue(object);\n\t\t\t\tpreviousParents.push(currentParent);\n\t\t\t\tcurrentParent = object;\n\t\t\t\tcurrentProperty = null;\n\t\t\t},\n\t\t\tonObjectProperty: (name: string) => {\n\t\t\t\tcurrentProperty = name;\n\t\t\t},\n\t\t\tonObjectEnd: () => {\n\t\t\t\tcurrentParent = previousParents.pop();\n\t\t\t},\n\t\t\tonArrayBegin: () => {\n\t\t\t\tlet array: any[] = [];\n\t\t\t\tonValue(array);\n\t\t\t\tpreviousParents.push(currentParent);\n\t\t\t\tcurrentParent = array;\n\t\t\t\tcurrentProperty = null;\n\t\t\t},\n\t\t\tonArrayEnd: () => {\n\t\t\t\tcurrentParent = previousParents.pop();\n\t\t\t},\n\t\t\tonLiteralValue: onValue,\n\t\t\tonError: (error: json.ParseErrorCode, offset: number, length: number) => {\n\t\t\t\tparseErrors.push({ error, offset, length });\n\t\t\t}\n\t\t};\n\t\tif (content) {\n\t\t\ttry {\n\t\t\t\tjson.visit(content, visitor);\n\t\t\t\traw = currentParent[0] || {};\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(`Error while parsing settings file ${this._name}: ${e}`);\n\t\t\t\tthis._parseErrors = [e];\n\t\t\t}\n\t\t}\n\n\t\treturn raw;\n\t}\n\n\tprotected doParseRaw(raw: any, options?: ConfigurationParseOptions): IConfigurationModel & { restricted?: string[] } {\n\t\tconst configurationProperties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\t\tconst filtered = this.filter(raw, configurationProperties, true, options);\n\t\traw = filtered.raw;\n\t\tconst contents = toValuesTree(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n\t\tconst keys = Object.keys(raw);\n\t\tconst overrides = this.toOverrides(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n\t\treturn { contents, keys, overrides, restricted: filtered.restricted };\n\t}\n\n\tprivate filter(properties: any, configurationProperties: { [qualifiedKey: string]: IConfigurationPropertySchema | undefined }, filterOverriddenProperties: boolean, options?: ConfigurationParseOptions): { raw: {}, restricted: string[] } {\n\t\tif (!options?.scopes && !options?.skipRestricted) {\n\t\t\treturn { raw: properties, restricted: [] };\n\t\t}\n\t\tconst raw: any = {};\n\t\tconst restricted: string[] = [];\n\t\tfor (let key in properties) {\n\t\t\tif (OVERRIDE_PROPERTY_REGEX.test(key) && filterOverriddenProperties) {\n\t\t\t\tconst result = this.filter(properties[key], configurationProperties, false, options);\n\t\t\t\traw[key] = result.raw;\n\t\t\t\trestricted.push(...result.restricted);\n\t\t\t} else {\n\t\t\t\tconst propertySchema = configurationProperties[key];\n\t\t\t\tconst scope = propertySchema ? typeof propertySchema.scope !== 'undefined' ? propertySchema.scope : ConfigurationScope.WINDOW : undefined;\n\t\t\t\tif (propertySchema?.restricted) {\n\t\t\t\t\trestricted.push(key);\n\t\t\t\t}\n\t\t\t\t// Load unregistered configurations always.\n\t\t\t\tif (scope === undefined || options.scopes === undefined || options.scopes.includes(scope)) {\n\t\t\t\t\tif (!(options.skipRestricted && propertySchema?.restricted)) {\n\t\t\t\t\t\traw[key] = properties[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { raw, restricted };\n\t}\n\n\tprivate toOverrides(raw: any, conflictReporter: (message: string) => void): IOverrides[] {\n\t\tconst overrides: IOverrides[] = [];\n\t\tfor (const key of Object.keys(raw)) {\n\t\t\tif (OVERRIDE_PROPERTY_REGEX.test(key)) {\n\t\t\t\tconst overrideRaw: any = {};\n\t\t\t\tfor (const keyInOverrideRaw in raw[key]) {\n\t\t\t\t\toverrideRaw[keyInOverrideRaw] = raw[key][keyInOverrideRaw];\n\t\t\t\t}\n\t\t\t\toverrides.push({\n\t\t\t\t\tidentifiers: overrideIdentifiersFromKey(key),\n\t\t\t\t\tkeys: Object.keys(overrideRaw),\n\t\t\t\t\tcontents: toValuesTree(overrideRaw, conflictReporter)\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn overrides;\n\t}\n\n}\n\nexport class UserSettings extends Disposable {\n\n\tprivate readonly parser: ConfigurationModelParser;\n\tprivate readonly parseOptions: ConfigurationParseOptions;\n\tprotected readonly _onDidChange: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tconstructor(\n\t\tprivate readonly userSettingsResource: URI,\n\t\tprivate readonly scopes: ConfigurationScope[] | undefined,\n\t\textUri: IExtUri,\n\t\tprivate readonly fileService: IFileService\n\t) {\n\t\tsuper();\n\t\tthis.parser = new ConfigurationModelParser(this.userSettingsResource.toString());\n\t\tthis.parseOptions = { scopes: this.scopes };\n\t\tthis._register(this.fileService.watch(extUri.dirname(this.userSettingsResource)));\n\t\t// Also listen to the resource incase the resource is a symlink - https://github.com/microsoft/vscode/issues/118134\n\t\tthis._register(this.fileService.watch(this.userSettingsResource));\n\t\tthis._register(Event.filter(this.fileService.onDidFilesChange, e => e.contains(this.userSettingsResource))(() => this._onDidChange.fire()));\n\t}\n\n\tasync loadConfiguration(): Promise<ConfigurationModel> {\n\t\ttry {\n\t\t\tconst content = await this.fileService.readFile(this.userSettingsResource);\n\t\t\tthis.parser.parse(content.value.toString() || '{}', this.parseOptions);\n\t\t\treturn this.parser.configurationModel;\n\t\t} catch (e) {\n\t\t\treturn new ConfigurationModel();\n\t\t}\n\t}\n\n\treparse(): ConfigurationModel {\n\t\tthis.parser.reparse(this.parseOptions);\n\t\treturn this.parser.configurationModel;\n\t}\n\n\tgetRestrictedSettings(): string[] {\n\t\treturn this.parser.restrictedConfigurations;\n\t}\n}\n\n\nexport class Configuration {\n\n\tprivate _workspaceConsolidatedConfiguration: ConfigurationModel | null = null;\n\tprivate _foldersConsolidatedConfigurations: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>();\n\n\tconstructor(\n\t\tprivate _defaultConfiguration: ConfigurationModel,\n\t\tprivate _localUserConfiguration: ConfigurationModel,\n\t\tprivate _remoteUserConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _workspaceConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _folderConfigurations: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>(),\n\t\tprivate _memoryConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _memoryConfigurationByResource: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>(),\n\t\tprivate _freeze: boolean = true) {\n\t}\n\n\tgetValue(section: string | undefined, overrides: IConfigurationOverrides, workspace: Workspace | undefined): any {\n\t\tconst consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\n\t\treturn consolidateConfigurationModel.getValue(section);\n\t}\n\n\tupdateValue(key: string, value: any, overrides: IConfigurationUpdateOverrides = {}): void {\n\t\tlet memoryConfiguration: ConfigurationModel | undefined;\n\t\tif (overrides.resource) {\n\t\t\tmemoryConfiguration = this._memoryConfigurationByResource.get(overrides.resource);\n\t\t\tif (!memoryConfiguration) {\n\t\t\t\tmemoryConfiguration = new ConfigurationModel();\n\t\t\t\tthis._memoryConfigurationByResource.set(overrides.resource, memoryConfiguration);\n\t\t\t}\n\t\t} else {\n\t\t\tmemoryConfiguration = this._memoryConfiguration;\n\t\t}\n\n\t\tif (value === undefined) {\n\t\t\tmemoryConfiguration.removeValue(key);\n\t\t} else {\n\t\t\tmemoryConfiguration.setValue(key, value);\n\t\t}\n\n\t\tif (!overrides.resource) {\n\t\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\t}\n\t}\n\n\tinspect<C>(key: string, overrides: IConfigurationOverrides, workspace: Workspace | undefined): IConfigurationValue<C> {\n\t\tconst consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\n\t\tconst folderConfigurationModel = this.getFolderConfigurationModelForResource(overrides.resource, workspace);\n\t\tconst memoryConfigurationModel = overrides.resource ? this._memoryConfigurationByResource.get(overrides.resource) || this._memoryConfiguration : this._memoryConfiguration;\n\n\t\tconst defaultValue = overrides.overrideIdentifier ? this._defaultConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this._defaultConfiguration.freeze().getValue<C>(key);\n\t\tconst userValue = overrides.overrideIdentifier ? this.userConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this.userConfiguration.freeze().getValue<C>(key);\n\t\tconst userLocalValue = overrides.overrideIdentifier ? this.localUserConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this.localUserConfiguration.freeze().getValue<C>(key);\n\t\tconst userRemoteValue = overrides.overrideIdentifier ? this.remoteUserConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this.remoteUserConfiguration.freeze().getValue<C>(key);\n\t\tconst workspaceValue = workspace ? overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this._workspaceConfiguration.freeze().getValue<C>(key) : undefined; //Check on workspace exists or not because _workspaceConfiguration is never null\n\t\tconst workspaceFolderValue = folderConfigurationModel ? overrides.overrideIdentifier ? folderConfigurationModel.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : folderConfigurationModel.freeze().getValue<C>(key) : undefined;\n\t\tconst memoryValue = overrides.overrideIdentifier ? memoryConfigurationModel.override(overrides.overrideIdentifier).getValue<C>(key) : memoryConfigurationModel.getValue<C>(key);\n\t\tconst value = consolidateConfigurationModel.getValue<C>(key);\n\t\tconst overrideIdentifiers: string[] = arrays.distinct(arrays.flatten(consolidateConfigurationModel.overrides.map(override => override.identifiers))).filter(overrideIdentifier => consolidateConfigurationModel.getOverrideValue(key, overrideIdentifier) !== undefined);\n\n\t\treturn {\n\t\t\tdefaultValue: defaultValue,\n\t\t\tuserValue: userValue,\n\t\t\tuserLocalValue: userLocalValue,\n\t\t\tuserRemoteValue: userRemoteValue,\n\t\t\tworkspaceValue: workspaceValue,\n\t\t\tworkspaceFolderValue: workspaceFolderValue,\n\t\t\tmemoryValue: memoryValue,\n\t\t\tvalue,\n\n\t\t\tdefault: defaultValue !== undefined ? { value: this._defaultConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this._defaultConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tuser: userValue !== undefined ? { value: this.userConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.userConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tuserLocal: userLocalValue !== undefined ? { value: this.localUserConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.localUserConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tuserRemote: userRemoteValue !== undefined ? { value: this.remoteUserConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.remoteUserConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tworkspace: workspaceValue !== undefined ? { value: this._workspaceConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tworkspaceFolder: workspaceFolderValue !== undefined ? { value: folderConfigurationModel?.freeze().getValue(key), override: overrides.overrideIdentifier ? folderConfigurationModel?.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tmemory: memoryValue !== undefined ? { value: memoryConfigurationModel.getValue(key), override: overrides.overrideIdentifier ? memoryConfigurationModel.getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\n\t\t\toverrideIdentifiers: overrideIdentifiers.length ? overrideIdentifiers : undefined\n\t\t};\n\t}\n\n\tkeys(workspace: Workspace | undefined): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t} {\n\t\tconst folderConfigurationModel = this.getFolderConfigurationModelForResource(undefined, workspace);\n\t\treturn {\n\t\t\tdefault: this._defaultConfiguration.freeze().keys,\n\t\t\tuser: this.userConfiguration.freeze().keys,\n\t\t\tworkspace: this._workspaceConfiguration.freeze().keys,\n\t\t\tworkspaceFolder: folderConfigurationModel ? folderConfigurationModel.freeze().keys : []\n\t\t};\n\t}\n\n\tupdateDefaultConfiguration(defaultConfiguration: ConfigurationModel): void {\n\t\tthis._defaultConfiguration = defaultConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateLocalUserConfiguration(localUserConfiguration: ConfigurationModel): void {\n\t\tthis._localUserConfiguration = localUserConfiguration;\n\t\tthis._userConfiguration = null;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateRemoteUserConfiguration(remoteUserConfiguration: ConfigurationModel): void {\n\t\tthis._remoteUserConfiguration = remoteUserConfiguration;\n\t\tthis._userConfiguration = null;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateWorkspaceConfiguration(workspaceConfiguration: ConfigurationModel): void {\n\t\tthis._workspaceConfiguration = workspaceConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateFolderConfiguration(resource: URI, configuration: ConfigurationModel): void {\n\t\tthis._folderConfigurations.set(resource, configuration);\n\t\tthis._foldersConsolidatedConfigurations.delete(resource);\n\t}\n\n\tdeleteFolderConfiguration(resource: URI): void {\n\t\tthis.folderConfigurations.delete(resource);\n\t\tthis._foldersConsolidatedConfigurations.delete(resource);\n\t}\n\n\tcompareAndUpdateDefaultConfiguration(defaults: ConfigurationModel, keys?: string[]): IConfigurationChange {\n\t\tconst overrides: [string, string[]][] = [];\n\t\tif (!keys) {\n\t\t\tconst { added, updated, removed } = compare(this._defaultConfiguration, defaults);\n\t\t\tkeys = [...added, ...updated, ...removed];\n\t\t}\n\t\tfor (const key of keys) {\n\t\t\tfor (const overrideIdentifier of overrideIdentifiersFromKey(key)) {\n\t\t\t\tconst fromKeys = this._defaultConfiguration.getKeysForOverrideIdentifier(overrideIdentifier);\n\t\t\t\tconst toKeys = defaults.getKeysForOverrideIdentifier(overrideIdentifier);\n\t\t\t\tconst keys = [\n\t\t\t\t\t...toKeys.filter(key => fromKeys.indexOf(key) === -1),\n\t\t\t\t\t...fromKeys.filter(key => toKeys.indexOf(key) === -1),\n\t\t\t\t\t...fromKeys.filter(key => !objects.equals(this._defaultConfiguration.override(overrideIdentifier).getValue(key), defaults.override(overrideIdentifier).getValue(key)))\n\t\t\t\t];\n\t\t\t\toverrides.push([overrideIdentifier, keys]);\n\t\t\t}\n\t\t}\n\t\tthis.updateDefaultConfiguration(defaults);\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateLocalUserConfiguration(user: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.localUserConfiguration, user);\n\t\tconst keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateLocalUserConfiguration(user);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateRemoteUserConfiguration(user: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.remoteUserConfiguration, user);\n\t\tlet keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateRemoteUserConfiguration(user);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateWorkspaceConfiguration(workspaceConfiguration: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.workspaceConfiguration, workspaceConfiguration);\n\t\tlet keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateWorkspaceConfiguration(workspaceConfiguration);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateFolderConfiguration(resource: URI, folderConfiguration: ConfigurationModel): IConfigurationChange {\n\t\tconst currentFolderConfiguration = this.folderConfigurations.get(resource);\n\t\tconst { added, updated, removed, overrides } = compare(currentFolderConfiguration, folderConfiguration);\n\t\tlet keys = [...added, ...updated, ...removed];\n\t\tif (keys.length || !currentFolderConfiguration) {\n\t\t\tthis.updateFolderConfiguration(resource, folderConfiguration);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndDeleteFolderConfiguration(folder: URI): IConfigurationChange {\n\t\tconst folderConfig = this.folderConfigurations.get(folder);\n\t\tif (!folderConfig) {\n\t\t\tthrow new Error('Unknown folder');\n\t\t}\n\t\tthis.deleteFolderConfiguration(folder);\n\t\tconst { added, updated, removed, overrides } = compare(folderConfig, undefined);\n\t\treturn { keys: [...added, ...updated, ...removed], overrides };\n\t}\n\n\tget defaults(): ConfigurationModel {\n\t\treturn this._defaultConfiguration;\n\t}\n\n\tprivate _userConfiguration: ConfigurationModel | null = null;\n\tget userConfiguration(): ConfigurationModel {\n\t\tif (!this._userConfiguration) {\n\t\t\tthis._userConfiguration = this._remoteUserConfiguration.isEmpty() ? this._localUserConfiguration : this._localUserConfiguration.merge(this._remoteUserConfiguration);\n\t\t\tif (this._freeze) {\n\t\t\t\tthis._userConfiguration.freeze();\n\t\t\t}\n\t\t}\n\t\treturn this._userConfiguration;\n\t}\n\n\tget localUserConfiguration(): ConfigurationModel {\n\t\treturn this._localUserConfiguration;\n\t}\n\n\tget remoteUserConfiguration(): ConfigurationModel {\n\t\treturn this._remoteUserConfiguration;\n\t}\n\n\tget workspaceConfiguration(): ConfigurationModel {\n\t\treturn this._workspaceConfiguration;\n\t}\n\n\tprotected get folderConfigurations(): ResourceMap<ConfigurationModel> {\n\t\treturn this._folderConfigurations;\n\t}\n\n\tprivate getConsolidateConfigurationModel(overrides: IConfigurationOverrides, workspace: Workspace | undefined): ConfigurationModel {\n\t\tlet configurationModel = this.getConsolidatedConfigurationModelForResource(overrides, workspace);\n\t\treturn overrides.overrideIdentifier ? configurationModel.override(overrides.overrideIdentifier) : configurationModel;\n\t}\n\n\tprivate getConsolidatedConfigurationModelForResource({ resource }: IConfigurationOverrides, workspace: Workspace | undefined): ConfigurationModel {\n\t\tlet consolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n\n\t\tif (workspace && resource) {\n\t\t\tconst root = workspace.getFolder(resource);\n\t\t\tif (root) {\n\t\t\t\tconsolidateConfiguration = this.getFolderConsolidatedConfiguration(root.uri) || consolidateConfiguration;\n\t\t\t}\n\t\t\tconst memoryConfigurationForResource = this._memoryConfigurationByResource.get(resource);\n\t\t\tif (memoryConfigurationForResource) {\n\t\t\t\tconsolidateConfiguration = consolidateConfiguration.merge(memoryConfigurationForResource);\n\t\t\t}\n\t\t}\n\n\t\treturn consolidateConfiguration;\n\t}\n\n\tprivate getWorkspaceConsolidatedConfiguration(): ConfigurationModel {\n\t\tif (!this._workspaceConsolidatedConfiguration) {\n\t\t\tthis._workspaceConsolidatedConfiguration = this._defaultConfiguration.merge(this.userConfiguration, this._workspaceConfiguration, this._memoryConfiguration);\n\t\t\tif (this._freeze) {\n\t\t\t\tthis._workspaceConfiguration = this._workspaceConfiguration.freeze();\n\t\t\t}\n\t\t}\n\t\treturn this._workspaceConsolidatedConfiguration;\n\t}\n\n\tprivate getFolderConsolidatedConfiguration(folder: URI): ConfigurationModel {\n\t\tlet folderConsolidatedConfiguration = this._foldersConsolidatedConfigurations.get(folder);\n\t\tif (!folderConsolidatedConfiguration) {\n\t\t\tconst workspaceConsolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n\t\t\tconst folderConfiguration = this._folderConfigurations.get(folder);\n\t\t\tif (folderConfiguration) {\n\t\t\t\tfolderConsolidatedConfiguration = workspaceConsolidateConfiguration.merge(folderConfiguration);\n\t\t\t\tif (this._freeze) {\n\t\t\t\t\tfolderConsolidatedConfiguration = folderConsolidatedConfiguration.freeze();\n\t\t\t\t}\n\t\t\t\tthis._foldersConsolidatedConfigurations.set(folder, folderConsolidatedConfiguration);\n\t\t\t} else {\n\t\t\t\tfolderConsolidatedConfiguration = workspaceConsolidateConfiguration;\n\t\t\t}\n\t\t}\n\t\treturn folderConsolidatedConfiguration;\n\t}\n\n\tprivate getFolderConfigurationModelForResource(resource: URI | null | undefined, workspace: Workspace | undefined): ConfigurationModel | undefined {\n\t\tif (workspace && resource) {\n\t\t\tconst root = workspace.getFolder(resource);\n\t\t\tif (root) {\n\t\t\t\treturn this._folderConfigurations.get(root.uri);\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\ttoData(): IConfigurationData {\n\t\treturn {\n\t\t\tdefaults: {\n\t\t\t\tcontents: this._defaultConfiguration.contents,\n\t\t\t\toverrides: this._defaultConfiguration.overrides,\n\t\t\t\tkeys: this._defaultConfiguration.keys\n\t\t\t},\n\t\t\tuser: {\n\t\t\t\tcontents: this.userConfiguration.contents,\n\t\t\t\toverrides: this.userConfiguration.overrides,\n\t\t\t\tkeys: this.userConfiguration.keys\n\t\t\t},\n\t\t\tworkspace: {\n\t\t\t\tcontents: this._workspaceConfiguration.contents,\n\t\t\t\toverrides: this._workspaceConfiguration.overrides,\n\t\t\t\tkeys: this._workspaceConfiguration.keys\n\t\t\t},\n\t\t\tfolders: [...this._folderConfigurations.keys()].reduce<[UriComponents, IConfigurationModel][]>((result, folder) => {\n\t\t\t\tconst { contents, overrides, keys } = this._folderConfigurations.get(folder)!;\n\t\t\t\tresult.push([folder, { contents, overrides, keys }]);\n\t\t\t\treturn result;\n\t\t\t}, [])\n\t\t};\n\t}\n\n\tallKeys(): string[] {\n\t\tconst keys: Set<string> = new Set<string>();\n\t\tthis._defaultConfiguration.freeze().keys.forEach(key => keys.add(key));\n\t\tthis.userConfiguration.freeze().keys.forEach(key => keys.add(key));\n\t\tthis._workspaceConfiguration.freeze().keys.forEach(key => keys.add(key));\n\t\tthis._folderConfigurations.forEach(folderConfiguraiton => folderConfiguraiton.freeze().keys.forEach(key => keys.add(key)));\n\t\treturn [...keys.values()];\n\t}\n\n\tprotected allOverrideIdentifiers(): string[] {\n\t\tconst keys: Set<string> = new Set<string>();\n\t\tthis._defaultConfiguration.freeze().getAllOverrideIdentifiers().forEach(key => keys.add(key));\n\t\tthis.userConfiguration.freeze().getAllOverrideIdentifiers().forEach(key => keys.add(key));\n\t\tthis._workspaceConfiguration.freeze().getAllOverrideIdentifiers().forEach(key => keys.add(key));\n\t\tthis._folderConfigurations.forEach(folderConfiguraiton => folderConfiguraiton.freeze().getAllOverrideIdentifiers().forEach(key => keys.add(key)));\n\t\treturn [...keys.values()];\n\t}\n\n\tprotected getAllKeysForOverrideIdentifier(overrideIdentifier: string): string[] {\n\t\tconst keys: Set<string> = new Set<string>();\n\t\tthis._defaultConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis.userConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis._workspaceConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis._folderConfigurations.forEach(folderConfiguraiton => folderConfiguraiton.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key)));\n\t\treturn [...keys.values()];\n\t}\n\n\tstatic parse(data: IConfigurationData): Configuration {\n\t\tconst defaultConfiguration = this.parseConfigurationModel(data.defaults);\n\t\tconst userConfiguration = this.parseConfigurationModel(data.user);\n\t\tconst workspaceConfiguration = this.parseConfigurationModel(data.workspace);\n\t\tconst folders: ResourceMap<ConfigurationModel> = data.folders.reduce((result, value) => {\n\t\t\tresult.set(URI.revive(value[0]), this.parseConfigurationModel(value[1]));\n\t\t\treturn result;\n\t\t}, new ResourceMap<ConfigurationModel>());\n\t\treturn new Configuration(defaultConfiguration, userConfiguration, new ConfigurationModel(), workspaceConfiguration, folders, new ConfigurationModel(), new ResourceMap<ConfigurationModel>(), false);\n\t}\n\n\tprivate static parseConfigurationModel(model: IConfigurationModel): ConfigurationModel {\n\t\treturn new ConfigurationModel(model.contents, model.keys, model.overrides).freeze();\n\t}\n\n}\n\nexport function mergeChanges(...changes: IConfigurationChange[]): IConfigurationChange {\n\tif (changes.length === 0) {\n\t\treturn { keys: [], overrides: [] };\n\t}\n\tif (changes.length === 1) {\n\t\treturn changes[0];\n\t}\n\tconst keysSet = new Set<string>();\n\tconst overridesMap = new Map<string, Set<string>>();\n\tfor (const change of changes) {\n\t\tchange.keys.forEach(key => keysSet.add(key));\n\t\tchange.overrides.forEach(([identifier, keys]) => {\n\t\t\tconst result = getOrSet(overridesMap, identifier, new Set<string>());\n\t\t\tkeys.forEach(key => result.add(key));\n\t\t});\n\t}\n\tconst overrides: [string, string[]][] = [];\n\toverridesMap.forEach((keys, identifier) => overrides.push([identifier, [...keys.values()]]));\n\treturn { keys: [...keysSet.values()], overrides };\n}\n\nexport class ConfigurationChangeEvent implements IConfigurationChangeEvent {\n\n\tprivate readonly affectedKeysTree: any;\n\treadonly affectedKeys: string[];\n\tsource!: ConfigurationTarget;\n\tsourceConfig: any;\n\n\tconstructor(readonly change: IConfigurationChange, private readonly previous: { workspace?: Workspace, data: IConfigurationData } | undefined, private readonly currentConfiguraiton: Configuration, private readonly currentWorkspace?: Workspace) {\n\t\tconst keysSet = new Set<string>();\n\t\tchange.keys.forEach(key => keysSet.add(key));\n\t\tchange.overrides.forEach(([, keys]) => keys.forEach(key => keysSet.add(key)));\n\t\tthis.affectedKeys = [...keysSet.values()];\n\n\t\tconst configurationModel = new ConfigurationModel();\n\t\tthis.affectedKeys.forEach(key => configurationModel.setValue(key, {}));\n\t\tthis.affectedKeysTree = configurationModel.contents;\n\t}\n\n\tprivate _previousConfiguration: Configuration | undefined = undefined;\n\tget previousConfiguration(): Configuration | undefined {\n\t\tif (!this._previousConfiguration && this.previous) {\n\t\t\tthis._previousConfiguration = Configuration.parse(this.previous.data);\n\t\t}\n\t\treturn this._previousConfiguration;\n\t}\n\n\taffectsConfiguration(section: string, overrides?: IConfigurationOverrides): boolean {\n\t\tif (this.doesAffectedKeysTreeContains(this.affectedKeysTree, section)) {\n\t\t\tif (overrides) {\n\t\t\t\tconst value1 = this.previousConfiguration ? this.previousConfiguration.getValue(section, overrides, this.previous?.workspace) : undefined;\n\t\t\t\tconst value2 = this.currentConfiguraiton.getValue(section, overrides, this.currentWorkspace);\n\t\t\t\treturn !objects.equals(value1, value2);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate doesAffectedKeysTreeContains(affectedKeysTree: any, section: string): boolean {\n\t\tlet requestedTree = toValuesTree({ [section]: true }, () => { });\n\n\t\tlet key;\n\t\twhile (typeof requestedTree === 'object' && (key = Object.keys(requestedTree)[0])) { // Only one key should present, since we added only one property\n\t\t\taffectedKeysTree = affectedKeysTree[key];\n\t\t\tif (!affectedKeysTree) {\n\t\t\t\treturn false; // Requested tree is not found\n\t\t\t}\n\t\t\trequestedTree = requestedTree[key];\n\t\t}\n\t\treturn true;\n\t}\n}\n\nexport class AllKeysConfigurationChangeEvent extends ConfigurationChangeEvent {\n\tconstructor(configuration: Configuration, workspace: Workspace, source: ConfigurationTarget, sourceConfig: any) {\n\t\tsuper({ keys: configuration.allKeys(), overrides: [] }, undefined, configuration, workspace);\n\t\tthis.source = source;\n\t\tthis.sourceConfig = sourceConfig;\n\t}\n}\n\nfunction compare(from: ConfigurationModel | undefined, to: ConfigurationModel | undefined): IConfigurationCompareResult {\n\tconst { added, removed, updated } = compareConfigurationContents(to, from);\n\tconst overrides: [string, string[]][] = [];\n\n\tconst fromOverrideIdentifiers = from?.getAllOverrideIdentifiers() || [];\n\tconst toOverrideIdentifiers = to?.getAllOverrideIdentifiers() || [];\n\n\tif (to) {\n\t\tconst addedOverrideIdentifiers = toOverrideIdentifiers.filter(key => !fromOverrideIdentifiers.includes(key));\n\t\tfor (const identifier of addedOverrideIdentifiers) {\n\t\t\toverrides.push([identifier, to.getKeysForOverrideIdentifier(identifier)]);\n\t\t}\n\t}\n\n\tif (from) {\n\t\tconst removedOverrideIdentifiers = fromOverrideIdentifiers.filter(key => !toOverrideIdentifiers.includes(key));\n\t\tfor (const identifier of removedOverrideIdentifiers) {\n\t\t\toverrides.push([identifier, from.getKeysForOverrideIdentifier(identifier)]);\n\t\t}\n\t}\n\n\tif (to && from) {\n\t\tfor (const identifier of fromOverrideIdentifiers) {\n\t\t\tif (toOverrideIdentifiers.includes(identifier)) {\n\t\t\t\tconst result = compareConfigurationContents({ contents: from.getOverrideValue(undefined, identifier) || {}, keys: from.getKeysForOverrideIdentifier(identifier) }, { contents: to.getOverrideValue(undefined, identifier) || {}, keys: to.getKeysForOverrideIdentifier(identifier) });\n\t\t\t\toverrides.push([identifier, [...result.added, ...result.removed, ...result.updated]]);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { added, removed, updated, overrides };\n}\n\nfunction compareConfigurationContents(to: { keys: string[], contents: any } | undefined, from: { keys: string[], contents: any } | undefined) {\n\tconst added = to\n\t\t? from ? to.keys.filter(key => from.keys.indexOf(key) === -1) : [...to.keys]\n\t\t: [];\n\tconst removed = from\n\t\t? to ? from.keys.filter(key => to.keys.indexOf(key) === -1) : [...from.keys]\n\t\t: [];\n\tconst updated: string[] = [];\n\n\tif (to && from) {\n\t\tfor (const key of from.keys) {\n\t\t\tif (to.keys.indexOf(key) !== -1) {\n\t\t\t\tconst value1 = getConfigurationValue(from.contents, key);\n\t\t\t\tconst value2 = getConfigurationValue(to.contents, key);\n\t\t\t\tif (!objects.equals(value1, value2)) {\n\t\t\t\t\tupdated.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn { added, removed, updated };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { extUriBiasedIgnorePathCase } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { ConfigurationTarget, IConfigurationChange, IConfigurationChangeEvent, IConfigurationData, IConfigurationOverrides, IConfigurationService, IConfigurationValue, isConfigurationOverrides } from 'vs/platform/configuration/common/configuration';\nimport { Configuration, ConfigurationChangeEvent, ConfigurationModel, DefaultConfigurationModel, UserSettings } from 'vs/platform/configuration/common/configurationModels';\nimport { Extensions, IConfigurationRegistry } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { Registry } from 'vs/platform/registry/common/platform';\n\nexport class ConfigurationService extends Disposable implements IConfigurationService, IDisposable {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate configuration: Configuration;\n\tprivate userConfiguration: UserSettings;\n\tprivate readonly reloadConfigurationScheduler: RunOnceScheduler;\n\n\tprivate readonly _onDidChangeConfiguration: Emitter<IConfigurationChangeEvent> = this._register(new Emitter<IConfigurationChangeEvent>());\n\treadonly onDidChangeConfiguration: Event<IConfigurationChangeEvent> = this._onDidChangeConfiguration.event;\n\n\tconstructor(\n\t\tprivate readonly settingsResource: URI,\n\t\tfileService: IFileService\n\t) {\n\t\tsuper();\n\t\tthis.userConfiguration = this._register(new UserSettings(this.settingsResource, undefined, extUriBiasedIgnorePathCase, fileService));\n\t\tthis.configuration = new Configuration(new DefaultConfigurationModel(), new ConfigurationModel());\n\n\t\tthis.reloadConfigurationScheduler = this._register(new RunOnceScheduler(() => this.reloadConfiguration(), 50));\n\t\tthis._register(Registry.as<IConfigurationRegistry>(Extensions.Configuration).onDidUpdateConfiguration(({ properties }) => this.onDidDefaultConfigurationChange(properties)));\n\t\tthis._register(this.userConfiguration.onDidChange(() => this.reloadConfigurationScheduler.schedule()));\n\t}\n\n\tasync initialize(): Promise<void> {\n\t\tconst userConfiguration = await this.userConfiguration.loadConfiguration();\n\t\tthis.configuration = new Configuration(new DefaultConfigurationModel(), userConfiguration);\n\t}\n\n\tgetConfigurationData(): IConfigurationData {\n\t\treturn this.configuration.toData();\n\t}\n\n\tgetValue<T>(): T;\n\tgetValue<T>(section: string): T;\n\tgetValue<T>(overrides: IConfigurationOverrides): T;\n\tgetValue<T>(section: string, overrides: IConfigurationOverrides): T;\n\tgetValue(arg1?: any, arg2?: any): any {\n\t\tconst section = typeof arg1 === 'string' ? arg1 : undefined;\n\t\tconst overrides = isConfigurationOverrides(arg1) ? arg1 : isConfigurationOverrides(arg2) ? arg2 : {};\n\t\treturn this.configuration.getValue(section, overrides, undefined);\n\t}\n\n\tupdateValue(key: string, value: any): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides): Promise<void>;\n\tupdateValue(key: string, value: any, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, arg3?: any, arg4?: any): Promise<void> {\n\t\treturn Promise.reject(new Error('not supported'));\n\t}\n\n\tinspect<T>(key: string): IConfigurationValue<T> {\n\t\treturn this.configuration.inspect<T>(key, {}, undefined);\n\t}\n\n\tkeys(): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t} {\n\t\treturn this.configuration.keys(undefined);\n\t}\n\n\tasync reloadConfiguration(): Promise<void> {\n\t\tconst configurationModel = await this.userConfiguration.loadConfiguration();\n\t\tthis.onDidChangeUserConfiguration(configurationModel);\n\t}\n\n\tprivate onDidChangeUserConfiguration(userConfigurationModel: ConfigurationModel): void {\n\t\tconst previous = this.configuration.toData();\n\t\tconst change = this.configuration.compareAndUpdateLocalUserConfiguration(userConfigurationModel);\n\t\tthis.trigger(change, previous, ConfigurationTarget.USER);\n\t}\n\n\tprivate onDidDefaultConfigurationChange(properties: string[]): void {\n\t\tconst previous = this.configuration.toData();\n\t\tconst change = this.configuration.compareAndUpdateDefaultConfiguration(new DefaultConfigurationModel(), properties);\n\t\tthis.trigger(change, previous, ConfigurationTarget.DEFAULT);\n\t}\n\n\tprivate trigger(configurationChange: IConfigurationChange, previous: IConfigurationData, source: ConfigurationTarget): void {\n\t\tconst event = new ConfigurationChangeEvent(configurationChange, { data: previous }, this.configuration);\n\t\tevent.source = source;\n\t\tevent.sourceConfig = this.getTargetConfiguration(source);\n\t\tthis._onDidChangeConfiguration.fire(event);\n\t}\n\n\tprivate getTargetConfiguration(target: ConfigurationTarget): any {\n\t\tswitch (target) {\n\t\t\tcase ConfigurationTarget.DEFAULT:\n\t\t\t\treturn this.configuration.defaults.contents;\n\t\t\tcase ConfigurationTarget.USER:\n\t\t\t\treturn this.configuration.localUserConfiguration.contents;\n\t\t}\n\t\treturn {};\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Schemas } from 'vs/base/common/network';\nimport { URI } from 'vs/base/common/uri';\nimport { IWorkspace } from 'vs/platform/workspace/common/workspace';\n\nexport function getRemoteAuthority(uri: URI): string | undefined {\n\treturn uri.scheme === Schemas.vscodeRemote ? uri.authority : undefined;\n}\n\nexport function getRemoteName(authority: string): string;\nexport function getRemoteName(authority: undefined): undefined;\nexport function getRemoteName(authority: string | undefined): string | undefined;\nexport function getRemoteName(authority: string | undefined): string | undefined {\n\tif (!authority) {\n\t\treturn undefined;\n\t}\n\tconst pos = authority.indexOf('+');\n\tif (pos < 0) {\n\t\t// e.g. localhost:8000\n\t\treturn authority;\n\t}\n\treturn authority.substr(0, pos);\n}\n\nexport function isVirtualResource(resource: URI) {\n\treturn resource.scheme !== Schemas.file && resource.scheme !== Schemas.vscodeRemote;\n}\n\nexport function getVirtualWorkspaceLocation(workspace: IWorkspace): { scheme: string, authority: string } | undefined {\n\tif (workspace.folders.length) {\n\t\treturn workspace.folders.every(f => isVirtualResource(f.uri)) ? workspace.folders[0].uri : undefined;\n\t} else if (workspace.configuration && isVirtualResource(workspace.configuration)) {\n\t\treturn workspace.configuration;\n\t}\n\treturn undefined;\n}\n\nexport function getVirtualWorkspaceScheme(workspace: IWorkspace): string | undefined {\n\treturn getVirtualWorkspaceLocation(workspace)?.scheme;\n}\n\nexport function isVirtualWorkspace(workspace: IWorkspace): boolean {\n\treturn getVirtualWorkspaceLocation(workspace) !== undefined;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ILocalization } from 'vs/platform/localizations/common/localizations';\nimport { getRemoteName } from 'vs/platform/remote/common/remoteHosts';\n\nexport const MANIFEST_CACHE_FOLDER = 'CachedExtensions';\nexport const USER_MANIFEST_CACHE_FILE = 'user';\nexport const BUILTIN_MANIFEST_CACHE_FILE = 'builtin';\n\nexport interface ICommand {\n\tcommand: string;\n\ttitle: string;\n\tcategory?: string;\n}\n\nexport interface IConfigurationProperty {\n\tdescription: string;\n\ttype: string | string[];\n\tdefault?: any;\n}\n\nexport interface IConfiguration {\n\tid?: string,\n\torder?: number,\n\ttitle?: string,\n\tproperties: { [key: string]: IConfigurationProperty; };\n}\n\nexport interface IDebugger {\n\tlabel?: string;\n\ttype: string;\n\truntime?: string;\n}\n\nexport interface IGrammar {\n\tlanguage: string;\n}\n\nexport interface IJSONValidation {\n\tfileMatch: string | string[];\n\turl: string;\n}\n\nexport interface IKeyBinding {\n\tcommand: string;\n\tkey: string;\n\twhen?: string;\n\tmac?: string;\n\tlinux?: string;\n\twin?: string;\n}\n\nexport interface ILanguage {\n\tid: string;\n\textensions: string[];\n\taliases: string[];\n}\n\nexport interface IMenu {\n\tcommand: string;\n\talt?: string;\n\twhen?: string;\n\tgroup?: string;\n}\n\nexport interface ISnippet {\n\tlanguage: string;\n}\n\nexport interface ITheme {\n\tlabel: string;\n}\n\nexport interface IViewContainer {\n\tid: string;\n\ttitle: string;\n}\n\nexport interface IView {\n\tid: string;\n\tname: string;\n}\n\nexport interface IColor {\n\tid: string;\n\tdescription: string;\n\tdefaults: { light: string, dark: string, highContrast: string };\n}\n\nexport interface IWebviewEditor {\n\treadonly viewType: string;\n\treadonly priority: string;\n\treadonly selector: readonly {\n\t\treadonly filenamePattern?: string;\n\t}[];\n}\n\nexport interface ICodeActionContributionAction {\n\treadonly kind: string;\n\treadonly title: string;\n\treadonly description?: string;\n}\n\nexport interface ICodeActionContribution {\n\treadonly languages: readonly string[];\n\treadonly actions: readonly ICodeActionContributionAction[];\n}\n\nexport interface IAuthenticationContribution {\n\treadonly id: string;\n\treadonly label: string;\n}\n\nexport interface IWalkthroughStep {\n\treadonly id: string;\n\treadonly title: string;\n\treadonly description: string | undefined;\n\treadonly media:\n\t| { image: string | { dark: string, light: string, hc: string }, altText: string, markdown?: never, svg?: never }\n\t| { markdown: string, image?: never, svg?: never }\n\t| { svg: string, altText: string, markdown?: never, image?: never }\n\treadonly completionEvents?: string[];\n\t/** @deprecated use `completionEvents: 'onCommand:...'` */\n\treadonly doneOn?: { command: string };\n\treadonly when?: string;\n}\n\nexport interface IWalkthrough {\n\treadonly id: string,\n\treadonly title: string;\n\treadonly description: string;\n\treadonly steps: IWalkthroughStep[];\n\treadonly featuredFor: string[] | undefined;\n\treadonly when?: string;\n}\n\nexport interface IStartEntry {\n\treadonly title: string;\n\treadonly description: string;\n\treadonly command: string;\n\treadonly when?: string;\n\treadonly category: 'file' | 'folder' | 'notebook';\n}\n\nexport interface INotebookEntry {\n\treadonly type: string;\n\treadonly displayName: string;\n}\n\nexport interface INotebookRendererContribution {\n\treadonly id: string;\n\treadonly displayName: string;\n\treadonly mimeTypes: string[];\n}\n\nexport interface IExtensionContributions {\n\tcommands?: ICommand[];\n\tconfiguration?: IConfiguration | IConfiguration[];\n\tdebuggers?: IDebugger[];\n\tgrammars?: IGrammar[];\n\tjsonValidation?: IJSONValidation[];\n\tkeybindings?: IKeyBinding[];\n\tlanguages?: ILanguage[];\n\tmenus?: { [context: string]: IMenu[] };\n\tsnippets?: ISnippet[];\n\tthemes?: ITheme[];\n\ticonThemes?: ITheme[];\n\tproductIconThemes?: ITheme[];\n\tviewsContainers?: { [location: string]: IViewContainer[] };\n\tviews?: { [location: string]: IView[] };\n\tcolors?: IColor[];\n\tlocalizations?: ILocalization[];\n\treadonly customEditors?: readonly IWebviewEditor[];\n\treadonly codeActions?: readonly ICodeActionContribution[];\n\tauthentication?: IAuthenticationContribution[];\n\twalkthroughs?: IWalkthrough[];\n\tstartEntries?: IStartEntry[];\n\treadonly notebooks?: INotebookEntry[];\n\treadonly notebookRenderer?: INotebookRendererContribution[];\n}\n\nexport interface IExtensionCapabilities {\n\treadonly virtualWorkspaces?: ExtensionVirtualWorkspaceSupport;\n\treadonly untrustedWorkspaces?: ExtensionUntrustedWorkspaceSupport;\n}\n\n\nexport const ALL_EXTENSION_KINDS: readonly ExtensionKind[] = ['ui', 'workspace', 'web'];\nexport type ExtensionKind = 'ui' | 'workspace' | 'web';\n\nexport type LimitedWorkspaceSupportType = 'limited';\nexport type ExtensionUntrustedWorkspaceSupportType = boolean | LimitedWorkspaceSupportType;\nexport type ExtensionUntrustedWorkspaceSupport = { supported: true; } | { supported: false, description: string } | { supported: LimitedWorkspaceSupportType, description: string, restrictedConfigurations?: string[] };\n\nexport type ExtensionVirtualWorkspaceSupportType = boolean | LimitedWorkspaceSupportType;\nexport type ExtensionVirtualWorkspaceSupport = boolean | { supported: true; } | { supported: false | LimitedWorkspaceSupportType, description: string };\n\nexport function getWorkspaceSupportTypeMessage(supportType: ExtensionUntrustedWorkspaceSupport | ExtensionVirtualWorkspaceSupport | undefined): string | undefined {\n\tif (typeof supportType === 'object' && supportType !== null) {\n\t\tif (supportType.supported !== true) {\n\t\t\treturn supportType.description;\n\t\t}\n\t}\n\treturn undefined;\n}\n\n\nexport function isIExtensionIdentifier(thing: any): thing is IExtensionIdentifier {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.id === 'string'\n\t\t&& (!thing.uuid || typeof thing.uuid === 'string');\n}\n\nexport interface IExtensionIdentifier {\n\tid: string;\n\tuuid?: string;\n}\n\nexport const EXTENSION_CATEGORIES = [\n\t'Azure',\n\t'Data Science',\n\t'Debuggers',\n\t'Extension Packs',\n\t'Education',\n\t'Formatters',\n\t'Keymaps',\n\t'Language Packs',\n\t'Linters',\n\t'Machine Learning',\n\t'Notebooks',\n\t'Programming Languages',\n\t'SCM Providers',\n\t'Snippets',\n\t'Testing',\n\t'Themes',\n\t'Visualization',\n\t'Other',\n];\n\nexport interface IExtensionManifest {\n\treadonly name: string;\n\treadonly displayName?: string;\n\treadonly publisher: string;\n\treadonly version: string;\n\treadonly engines: { readonly vscode: string };\n\treadonly description?: string;\n\treadonly main?: string;\n\treadonly browser?: string;\n\treadonly icon?: string;\n\treadonly categories?: string[];\n\treadonly keywords?: string[];\n\treadonly activationEvents?: string[];\n\treadonly extensionDependencies?: string[];\n\treadonly extensionPack?: string[];\n\treadonly extensionKind?: ExtensionKind | ExtensionKind[];\n\treadonly contributes?: IExtensionContributions;\n\treadonly repository?: { url: string; };\n\treadonly bugs?: { url: string; };\n\treadonly enabledApiProposals?: readonly string[];\n\treadonly api?: string;\n\treadonly scripts?: { [key: string]: string; };\n\treadonly capabilities?: IExtensionCapabilities;\n}\n\nexport const enum ExtensionType {\n\tSystem,\n\tUser\n}\n\nexport interface IExtension {\n\treadonly type: ExtensionType;\n\treadonly isBuiltin: boolean;\n\treadonly identifier: IExtensionIdentifier;\n\treadonly manifest: IExtensionManifest;\n\treadonly location: URI;\n\treadonly readmeUrl?: URI;\n\treadonly changelogUrl?: URI;\n}\n\n/**\n * **!Do not construct directly!**\n *\n * **!Only static methods because it gets serialized!**\n *\n * This represents the \"canonical\" version for an extension identifier. Extension ids\n * have to be case-insensitive (due to the marketplace), but we must ensure case\n * preservation because the extension API is already public at this time.\n *\n * For example, given an extension with the publisher `\"Hello\"` and the name `\"World\"`,\n * its canonical extension identifier is `\"Hello.World\"`. This extension could be\n * referenced in some other extension's dependencies using the string `\"hello.world\"`.\n *\n * To make matters more complicated, an extension can optionally have an UUID. When two\n * extensions have the same UUID, they are considered equal even if their identifier is different.\n */\nexport class ExtensionIdentifier {\n\tpublic readonly value: string;\n\tprivate readonly _lower: string;\n\n\tconstructor(value: string) {\n\t\tthis.value = value;\n\t\tthis._lower = value.toLowerCase();\n\t}\n\n\tpublic static equals(a: ExtensionIdentifier | string | null | undefined, b: ExtensionIdentifier | string | null | undefined) {\n\t\tif (typeof a === 'undefined' || a === null) {\n\t\t\treturn (typeof b === 'undefined' || b === null);\n\t\t}\n\t\tif (typeof b === 'undefined' || b === null) {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof a === 'string' || typeof b === 'string') {\n\t\t\t// At least one of the arguments is an extension id in string form,\n\t\t\t// so we have to use the string comparison which ignores case.\n\t\t\tlet aValue = (typeof a === 'string' ? a : a.value);\n\t\t\tlet bValue = (typeof b === 'string' ? b : b.value);\n\t\t\treturn strings.equalsIgnoreCase(aValue, bValue);\n\t\t}\n\n\t\t// Now we know both arguments are ExtensionIdentifier\n\t\treturn (a._lower === b._lower);\n\t}\n\n\t/**\n\t * Gives the value by which to index (for equality).\n\t */\n\tpublic static toKey(id: ExtensionIdentifier | string): string {\n\t\tif (typeof id === 'string') {\n\t\t\treturn id.toLowerCase();\n\t\t}\n\t\treturn id._lower;\n\t}\n}\n\nexport interface IExtensionDescription extends IExtensionManifest {\n\treadonly identifier: ExtensionIdentifier;\n\treadonly uuid?: string;\n\treadonly isBuiltin: boolean;\n\treadonly isUserBuiltin: boolean;\n\treadonly isUnderDevelopment: boolean;\n\treadonly extensionLocation: URI;\n}\n\nexport function isLanguagePackExtension(manifest: IExtensionManifest): boolean {\n\treturn manifest.contributes && manifest.contributes.localizations ? manifest.contributes.localizations.length > 0 : false;\n}\n\nexport function isAuthenticationProviderExtension(manifest: IExtensionManifest): boolean {\n\treturn manifest.contributes && manifest.contributes.authentication ? manifest.contributes.authentication.length > 0 : false;\n}\n\nexport function isResolverExtension(manifest: IExtensionManifest, remoteAuthority: string | undefined): boolean {\n\tif (remoteAuthority) {\n\t\tconst activationEvent = `onResolveRemoteAuthority:${getRemoteName(remoteAuthority)}`;\n\t\treturn manifest.activationEvents?.indexOf(activationEvent) !== -1;\n\t}\n\treturn false;\n}\n\nexport const IBuiltinExtensionsScannerService = createDecorator<IBuiltinExtensionsScannerService>('IBuiltinExtensionsScannerService');\nexport interface IBuiltinExtensionsScannerService {\n\treadonly _serviceBrand: undefined;\n\tscanBuiltinExtensions(): Promise<IExtension[]>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { compareIgnoreCase } from 'vs/base/common/strings';\nimport { IExtensionIdentifier, IExtensionIdentifierWithVersion, IGalleryExtension, ILocalExtension, IExtensionsControlManifest } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionIdentifier, IExtension } from 'vs/platform/extensions/common/extensions';\n\nexport function areSameExtensions(a: IExtensionIdentifier, b: IExtensionIdentifier): boolean {\n\tif (a.uuid && b.uuid) {\n\t\treturn a.uuid === b.uuid;\n\t}\n\tif (a.id === b.id) {\n\t\treturn true;\n\t}\n\treturn compareIgnoreCase(a.id, b.id) === 0;\n}\n\nexport class ExtensionIdentifierWithVersion implements IExtensionIdentifierWithVersion {\n\n\treadonly id: string;\n\treadonly uuid?: string;\n\n\tconstructor(\n\t\tidentifier: IExtensionIdentifier,\n\t\treadonly version: string\n\t) {\n\t\tthis.id = identifier.id;\n\t\tthis.uuid = identifier.uuid;\n\t}\n\n\tkey(): string {\n\t\treturn `${this.id}-${this.version}`;\n\t}\n\n\tequals(o: any): boolean {\n\t\tif (!(o instanceof ExtensionIdentifierWithVersion)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn areSameExtensions(this, o) && this.version === o.version;\n\t}\n}\n\nexport function getExtensionId(publisher: string, name: string): string {\n\treturn `${publisher}.${name}`;\n}\n\nexport function adoptToGalleryExtensionId(id: string): string {\n\treturn id.toLocaleLowerCase();\n}\n\nexport function getGalleryExtensionId(publisher: string, name: string): string {\n\treturn adoptToGalleryExtensionId(getExtensionId(publisher, name));\n}\n\nexport function groupByExtension<T>(extensions: T[], getExtensionIdentifier: (t: T) => IExtensionIdentifier): T[][] {\n\tconst byExtension: T[][] = [];\n\tconst findGroup = (extension: T) => {\n\t\tfor (const group of byExtension) {\n\t\t\tif (group.some(e => areSameExtensions(getExtensionIdentifier(e), getExtensionIdentifier(extension)))) {\n\t\t\t\treturn group;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\tfor (const extension of extensions) {\n\t\tconst group = findGroup(extension);\n\t\tif (group) {\n\t\t\tgroup.push(extension);\n\t\t} else {\n\t\t\tbyExtension.push([extension]);\n\t\t}\n\t}\n\treturn byExtension;\n}\n\nexport function getLocalExtensionTelemetryData(extension: ILocalExtension): any {\n\treturn {\n\t\tid: extension.identifier.id,\n\t\tname: extension.manifest.name,\n\t\tgalleryId: null,\n\t\tpublisherId: extension.publisherId,\n\t\tpublisherName: extension.manifest.publisher,\n\t\tpublisherDisplayName: extension.publisherDisplayName,\n\t\tdependencies: extension.manifest.extensionDependencies && extension.manifest.extensionDependencies.length > 0\n\t};\n}\n\n\n/* __GDPR__FRAGMENT__\n\t\"GalleryExtensionTelemetryData\" : {\n\t\t\"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"name\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"galleryId\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherId\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherName\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherDisplayName\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"isPreReleaseVersion\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"dependencies\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\"${include}\": [\n\t\t\t\"${GalleryExtensionTelemetryData2}\"\n\t\t]\n\t}\n*/\nexport function getGalleryExtensionTelemetryData(extension: IGalleryExtension): any {\n\treturn {\n\t\tid: extension.identifier.id,\n\t\tname: extension.name,\n\t\tgalleryId: extension.identifier.uuid,\n\t\tpublisherId: extension.publisherId,\n\t\tpublisherName: extension.publisher,\n\t\tpublisherDisplayName: extension.publisherDisplayName,\n\t\tisPreReleaseVersion: extension.properties.isPreReleaseVersion,\n\t\tdependencies: !!(extension.properties.dependencies && extension.properties.dependencies.length > 0),\n\t\t...extension.telemetryData\n\t};\n}\n\nexport const BetterMergeId = new ExtensionIdentifier('pprice.better-merge');\n\nexport function getMaliciousExtensionsSet(manifest: IExtensionsControlManifest): Set<string> {\n\tconst result = new Set<string>();\n\n\tif (manifest.malicious) {\n\t\tfor (const extension of manifest.malicious) {\n\t\t\tresult.add(extension.id);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function getExtensionDependencies(installedExtensions: ReadonlyArray<IExtension>, extension: IExtension): IExtension[] {\n\tconst dependencies: IExtension[] = [];\n\tconst extensions = extension.manifest.extensionDependencies?.slice(0) ?? [];\n\n\twhile (extensions.length) {\n\t\tconst id = extensions.shift();\n\n\t\tif (id && dependencies.every(e => !areSameExtensions(e.identifier, { id }))) {\n\t\t\tconst ext = installedExtensions.filter(e => areSameExtensions(e.identifier, { id }));\n\t\t\tif (ext.length === 1) {\n\t\t\t\tdependencies.push(ext[0]);\n\t\t\t\textensions.push(...ext[0].manifest.extensionDependencies?.slice(0) ?? []);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dependencies;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { isPromiseCanceledError } from 'vs/base/common/errors';\nimport { getBaseLabel } from 'vs/base/common/labels';\nimport { Schemas } from 'vs/base/common/network';\nimport { gt } from 'vs/base/common/semver/semver';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { CLIOutput, IExtensionGalleryService, IExtensionManagementCLIService, IExtensionManagementService, IGalleryExtension, ILocalExtension, InstallOptions } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { adoptToGalleryExtensionId, areSameExtensions, getGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { ExtensionType, EXTENSION_CATEGORIES, IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\n\nconst notFound = (id: string) => localize('notFound', \"Extension '{0}' not found.\", id);\nconst useId = localize('useId', \"Make sure you use the full extension ID, including the publisher, e.g.: {0}\", 'ms-dotnettools.csharp');\n\n\nfunction getId(manifest: IExtensionManifest, withVersion?: boolean): string {\n\tif (withVersion) {\n\t\treturn `${manifest.publisher}.${manifest.name}@${manifest.version}`;\n\t} else {\n\t\treturn `${manifest.publisher}.${manifest.name}`;\n\t}\n}\n\nconst EXTENSION_ID_REGEX = /^([^.]+\\..+)@(\\d+\\.\\d+\\.\\d+(-.*)?)$/;\n\nexport function getIdAndVersion(id: string): [string, string | undefined] {\n\tconst matches = EXTENSION_ID_REGEX.exec(id);\n\tif (matches && matches[1]) {\n\t\treturn [adoptToGalleryExtensionId(matches[1]), matches[2]];\n\t}\n\treturn [adoptToGalleryExtensionId(id), undefined];\n}\n\ntype InstallExtensionInfo = { id: string, version?: string, installOptions: InstallOptions };\n\n\nexport class ExtensionManagementCLIService implements IExtensionManagementCLIService {\n\n\t_serviceBrand: any;\n\n\tconstructor(\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IExtensionGalleryService private readonly extensionGalleryService: IExtensionGalleryService\n\t) { }\n\n\tprotected get location(): string | undefined {\n\t\treturn undefined;\n\t}\n\n\tpublic async listExtensions(showVersions: boolean, category?: string, output: CLIOutput = console): Promise<void> {\n\t\tlet extensions = await this.extensionManagementService.getInstalled(ExtensionType.User);\n\t\tconst categories = EXTENSION_CATEGORIES.map(c => c.toLowerCase());\n\t\tif (category && category !== '') {\n\t\t\tif (categories.indexOf(category.toLowerCase()) < 0) {\n\t\t\t\toutput.log('Invalid category please enter a valid category. To list valid categories run --category without a category specified');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\textensions = extensions.filter(e => {\n\t\t\t\tif (e.manifest.categories) {\n\t\t\t\t\tconst lowerCaseCategories: string[] = e.manifest.categories.map(c => c.toLowerCase());\n\t\t\t\t\treturn lowerCaseCategories.indexOf(category.toLowerCase()) > -1;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\t\t} else if (category === '') {\n\t\t\toutput.log('Possible Categories: ');\n\t\t\tcategories.forEach(category => {\n\t\t\t\toutput.log(category);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tif (this.location) {\n\t\t\toutput.log(localize('listFromLocation', \"Extensions installed on {0}:\", this.location));\n\t\t}\n\n\t\textensions = extensions.sort((e1, e2) => e1.identifier.id.localeCompare(e2.identifier.id));\n\t\tlet lastId: string | undefined = undefined;\n\t\tfor (let extension of extensions) {\n\t\t\tif (lastId !== extension.identifier.id) {\n\t\t\t\tlastId = extension.identifier.id;\n\t\t\t\toutput.log(getId(extension.manifest, showVersions));\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async installExtensions(extensions: (string | URI)[], builtinExtensionIds: string[], installOptions: InstallOptions, force: boolean, output: CLIOutput = console): Promise<void> {\n\t\tconst failed: string[] = [];\n\t\tconst installedExtensionsManifests: IExtensionManifest[] = [];\n\t\tif (extensions.length) {\n\t\t\toutput.log(this.location ? localize('installingExtensionsOnLocation', \"Installing extensions on {0}...\", this.location) : localize('installingExtensions', \"Installing extensions...\"));\n\t\t}\n\n\t\tconst installed = await this.extensionManagementService.getInstalled(ExtensionType.User);\n\t\tconst checkIfNotInstalled = (id: string, version?: string): boolean => {\n\t\t\tconst installedExtension = installed.find(i => areSameExtensions(i.identifier, { id }));\n\t\t\tif (installedExtension) {\n\t\t\t\tif (!version && !force) {\n\t\t\t\t\toutput.log(localize('alreadyInstalled-checkAndUpdate', \"Extension '{0}' v{1} is already installed. Use '--force' option to update to latest version or provide '@<version>' to install a specific version, for example: '{2}@1.2.3'.\", id, installedExtension.manifest.version, id));\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (version && installedExtension.manifest.version === version) {\n\t\t\t\t\toutput.log(localize('alreadyInstalled', \"Extension '{0}' is already installed.\", `${id}@${version}`));\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\t\tconst vsixs: URI[] = [];\n\t\tconst installExtensionInfos: InstallExtensionInfo[] = [];\n\t\tfor (const extension of extensions) {\n\t\t\tif (extension instanceof URI) {\n\t\t\t\tvsixs.push(extension);\n\t\t\t} else {\n\t\t\t\tconst [id, version] = getIdAndVersion(extension);\n\t\t\t\tif (checkIfNotInstalled(id, version)) {\n\t\t\t\t\tinstallExtensionInfos.push({ id, version, installOptions: { ...installOptions, isBuiltin: false } });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (const extension of builtinExtensionIds) {\n\t\t\tconst [id, version] = getIdAndVersion(extension);\n\t\t\tif (checkIfNotInstalled(id, version)) {\n\t\t\t\tinstallExtensionInfos.push({ id, version, installOptions: { ...installOptions, isBuiltin: true } });\n\t\t\t}\n\t\t}\n\n\t\tif (vsixs.length) {\n\t\t\tawait Promise.all(vsixs.map(async vsix => {\n\t\t\t\ttry {\n\t\t\t\t\tconst manifest = await this.installVSIX(vsix, { ...installOptions, isBuiltin: false }, force, output);\n\t\t\t\t\tif (manifest) {\n\t\t\t\t\t\tinstalledExtensionsManifests.push(manifest);\n\t\t\t\t\t}\n\t\t\t\t} catch (err) {\n\t\t\t\t\toutput.error(err.message || err.stack || err);\n\t\t\t\t\tfailed.push(vsix.toString());\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\tif (installExtensionInfos.length) {\n\n\t\t\tconst galleryExtensions = await this.getGalleryExtensions(installExtensionInfos);\n\n\t\t\tawait Promise.all(installExtensionInfos.map(async extensionInfo => {\n\t\t\t\tconst gallery = galleryExtensions.get(extensionInfo.id.toLowerCase());\n\t\t\t\tif (gallery) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst manifest = await this.installFromGallery(extensionInfo, gallery, installed, force, output);\n\t\t\t\t\t\tif (manifest) {\n\t\t\t\t\t\t\tinstalledExtensionsManifests.push(manifest);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\toutput.error(err.message || err.stack || err);\n\t\t\t\t\t\tfailed.push(extensionInfo.id);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\toutput.error(`${notFound(extensionInfo.version ? `${extensionInfo.id}@${extensionInfo.version}` : extensionInfo.id)}\\n${useId}`);\n\t\t\t\t\tfailed.push(extensionInfo.id);\n\t\t\t\t}\n\t\t\t}));\n\n\t\t}\n\n\t\tif (failed.length) {\n\t\t\tthrow new Error(localize('installation failed', \"Failed Installing Extensions: {0}\", failed.join(', ')));\n\t\t}\n\t}\n\n\tprivate async installVSIX(vsix: URI, installOptions: InstallOptions, force: boolean, output: CLIOutput): Promise<IExtensionManifest | null> {\n\n\t\tconst manifest = await this.extensionManagementService.getManifest(vsix);\n\t\tif (!manifest) {\n\t\t\tthrow new Error('Invalid vsix');\n\t\t}\n\n\t\tconst valid = await this.validateVSIX(manifest, force, output);\n\t\tif (valid) {\n\t\t\ttry {\n\t\t\t\tawait this.extensionManagementService.install(vsix, installOptions);\n\t\t\t\toutput.log(localize('successVsixInstall', \"Extension '{0}' was successfully installed.\", getBaseLabel(vsix)));\n\t\t\t\treturn manifest;\n\t\t\t} catch (error) {\n\t\t\t\tif (isPromiseCanceledError(error)) {\n\t\t\t\t\toutput.log(localize('cancelVsixInstall', \"Cancelled installing extension '{0}'.\", getBaseLabel(vsix)));\n\t\t\t\t\treturn null;\n\t\t\t\t} else {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate async getGalleryExtensions(extensions: InstallExtensionInfo[]): Promise<Map<string, IGalleryExtension>> {\n\t\tconst galleryExtensions = new Map<string, IGalleryExtension>();\n\t\tconst result = await this.extensionGalleryService.getExtensions(extensions, extensions.some(e => e.installOptions.installPreReleaseVersion), CancellationToken.None);\n\t\tfor (const extension of result) {\n\t\t\tgalleryExtensions.set(extension.identifier.id.toLowerCase(), extension);\n\t\t}\n\t\treturn galleryExtensions;\n\t}\n\n\tprivate async installFromGallery({ id, version, installOptions }: InstallExtensionInfo, galleryExtension: IGalleryExtension, installed: ILocalExtension[], force: boolean, output: CLIOutput): Promise<IExtensionManifest | null> {\n\t\tconst manifest = await this.extensionGalleryService.getManifest(galleryExtension, CancellationToken.None);\n\t\tif (manifest && !this.validateExtensionKind(manifest, output)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst installedExtension = installed.find(e => areSameExtensions(e.identifier, galleryExtension.identifier));\n\t\tif (installedExtension) {\n\t\t\tif (galleryExtension.version === installedExtension.manifest.version) {\n\t\t\t\toutput.log(localize('alreadyInstalled', \"Extension '{0}' is already installed.\", version ? `${id}@${version}` : id));\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\toutput.log(localize('updateMessage', \"Updating the extension '{0}' to the version {1}\", id, galleryExtension.version));\n\t\t}\n\n\t\ttry {\n\t\t\tif (installOptions.isBuiltin) {\n\t\t\t\toutput.log(version ? localize('installing builtin with version', \"Installing builtin extension '{0}' v{1}...\", id, version) : localize('installing builtin ', \"Installing builtin extension '{0}'...\", id));\n\t\t\t} else {\n\t\t\t\toutput.log(version ? localize('installing with version', \"Installing extension '{0}' v{1}...\", id, version) : localize('installing', \"Installing extension '{0}'...\", id));\n\t\t\t}\n\n\t\t\tawait this.extensionManagementService.installFromGallery(galleryExtension, { ...installOptions, installGivenVersion: !!version });\n\t\t\toutput.log(localize('successInstall', \"Extension '{0}' v{1} was successfully installed.\", id, galleryExtension.version));\n\t\t\treturn manifest;\n\t\t} catch (error) {\n\t\t\tif (isPromiseCanceledError(error)) {\n\t\t\t\toutput.log(localize('cancelInstall', \"Cancelled installing extension '{0}'.\", id));\n\t\t\t\treturn null;\n\t\t\t} else {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected validateExtensionKind(_manifest: IExtensionManifest, output: CLIOutput): boolean {\n\t\treturn true;\n\t}\n\n\tprivate async validateVSIX(manifest: IExtensionManifest, force: boolean, output: CLIOutput): Promise<boolean> {\n\t\tconst extensionIdentifier = { id: getGalleryExtensionId(manifest.publisher, manifest.name) };\n\t\tconst installedExtensions = await this.extensionManagementService.getInstalled(ExtensionType.User);\n\t\tconst newer = installedExtensions.find(local => areSameExtensions(extensionIdentifier, local.identifier) && gt(local.manifest.version, manifest.version));\n\n\t\tif (newer && !force) {\n\t\t\toutput.log(localize('forceDowngrade', \"A newer version of extension '{0}' v{1} is already installed. Use '--force' option to downgrade to older version.\", newer.identifier.id, newer.manifest.version, manifest.version));\n\t\t\treturn false;\n\t\t}\n\n\t\treturn this.validateExtensionKind(manifest, output);\n\t}\n\n\tpublic async uninstallExtensions(extensions: (string | URI)[], force: boolean, output: CLIOutput = console): Promise<void> {\n\t\tconst getExtensionId = async (extensionDescription: string | URI): Promise<string> => {\n\t\t\tif (extensionDescription instanceof URI) {\n\t\t\t\tconst manifest = await this.extensionManagementService.getManifest(extensionDescription);\n\t\t\t\treturn getId(manifest);\n\t\t\t}\n\t\t\treturn extensionDescription;\n\t\t};\n\n\t\tconst uninstalledExtensions: ILocalExtension[] = [];\n\t\tfor (const extension of extensions) {\n\t\t\tconst id = await getExtensionId(extension);\n\t\t\tconst installed = await this.extensionManagementService.getInstalled();\n\t\t\tconst extensionsToUninstall = installed.filter(e => areSameExtensions(e.identifier, { id }));\n\t\t\tif (!extensionsToUninstall.length) {\n\t\t\t\tthrow new Error(`${this.notInstalled(id)}\\n${useId}`);\n\t\t\t}\n\t\t\tif (extensionsToUninstall.some(e => e.type === ExtensionType.System)) {\n\t\t\t\toutput.log(localize('builtin', \"Extension '{0}' is a Built-in extension and cannot be uninstalled\", id));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!force && extensionsToUninstall.some(e => e.isBuiltin)) {\n\t\t\t\toutput.log(localize('forceUninstall', \"Extension '{0}' is marked as a Built-in extension by user. Please use '--force' option to uninstall it.\", id));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\toutput.log(localize('uninstalling', \"Uninstalling {0}...\", id));\n\t\t\tfor (const extensionToUninstall of extensionsToUninstall) {\n\t\t\t\tawait this.extensionManagementService.uninstall(extensionToUninstall);\n\t\t\t\tuninstalledExtensions.push(extensionToUninstall);\n\t\t\t}\n\n\t\t\tif (this.location) {\n\t\t\t\toutput.log(localize('successUninstallFromLocation', \"Extension '{0}' was successfully uninstalled from {1}!\", id, this.location));\n\t\t\t} else {\n\t\t\t\toutput.log(localize('successUninstall', \"Extension '{0}' was successfully uninstalled!\", id));\n\t\t\t}\n\n\t\t}\n\t}\n\n\tpublic async locateExtension(extensions: string[], output: CLIOutput = console): Promise<void> {\n\t\tconst installed = await this.extensionManagementService.getInstalled();\n\t\textensions.forEach(e => {\n\t\t\tinstalled.forEach(i => {\n\t\t\t\tif (i.identifier.id === e) {\n\t\t\t\t\tif (i.location.scheme === Schemas.file) {\n\t\t\t\t\t\toutput.log(i.location.fsPath);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate notInstalled(id: string) {\n\t\treturn this.location ? localize('notInstalleddOnLocation', \"Extension '{0}' is not installed on {1}.\", id, this.location) : localize('notInstalled', \"Extension '{0}' is not installed.\", id);\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Promises } from 'vs/base/common/async';\nimport { getErrorMessage } from 'vs/base/common/errors';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { isWindows } from 'vs/base/common/platform';\nimport { joinPath } from 'vs/base/common/resources';\nimport * as semver from 'vs/base/common/semver/semver';\nimport { URI } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { Promises as FSPromises } from 'vs/base/node/pfs';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IExtensionGalleryService, IGalleryExtension, InstallOperation, TargetPlatform } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionIdentifierWithVersion, groupByExtension } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { IFileService, IFileStatWithMetadata } from 'vs/platform/files/common/files';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nconst ExtensionIdVersionRegex = /^([^.]+\\..+)-(\\d+\\.\\d+\\.\\d+)$/;\n\nexport class ExtensionsDownloader extends Disposable {\n\n\tprivate readonly extensionsDownloadDir: URI;\n\tprivate readonly cache: number;\n\tprivate readonly cleanUpPromise: Promise<void>;\n\n\tconstructor(\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IExtensionGalleryService private readonly extensionGalleryService: IExtensionGalleryService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t\tsuper();\n\t\tthis.extensionsDownloadDir = URI.file(environmentService.extensionsDownloadPath);\n\t\tthis.cache = 20; // Cache 20 downloads\n\t\tthis.cleanUpPromise = this.cleanUp();\n\t}\n\n\tasync downloadExtension(extension: IGalleryExtension, operation: InstallOperation): Promise<URI> {\n\t\tawait this.cleanUpPromise;\n\t\tconst vsixName = this.getName(extension);\n\t\tconst location = joinPath(this.extensionsDownloadDir, vsixName);\n\n\t\t// Download only if vsix does not exist\n\t\tif (!await this.fileService.exists(location)) {\n\t\t\t// Download to temporary location first only if vsix does not exist\n\t\t\tconst tempLocation = joinPath(this.extensionsDownloadDir, `.${generateUuid()}`);\n\t\t\tif (!await this.fileService.exists(tempLocation)) {\n\t\t\t\tawait this.extensionGalleryService.download(extension, tempLocation, operation);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t// Rename temp location to original\n\t\t\t\tawait this.rename(tempLocation, location, Date.now() + (2 * 60 * 1000) /* Retry for 2 minutes */);\n\t\t\t} catch (error) {\n\t\t\t\ttry {\n\t\t\t\t\tawait this.fileService.del(tempLocation);\n\t\t\t\t} catch (e) { /* ignore */ }\n\t\t\t\tif (error.code === 'ENOTEMPTY') {\n\t\t\t\t\tthis.logService.info(`Rename failed because vsix was downloaded by another source. So ignoring renaming.`, extension.identifier.id);\n\t\t\t\t} else {\n\t\t\t\t\tthis.logService.info(`Rename failed because of ${getErrorMessage(error)}. Deleted the vsix from downloaded location`, tempLocation.path);\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\treturn location;\n\t}\n\n\tasync delete(location: URI): Promise<void> {\n\t\tawait this.cleanUpPromise;\n\t\tawait this.fileService.del(location);\n\t}\n\n\tprivate async rename(from: URI, to: URI, retryUntil: number): Promise<void> {\n\t\ttry {\n\t\t\tawait FSPromises.rename(from.fsPath, to.fsPath);\n\t\t} catch (error) {\n\t\t\tif (isWindows && error && error.code === 'EPERM' && Date.now() < retryUntil) {\n\t\t\t\tthis.logService.info(`Failed renaming ${from} to ${to} with 'EPERM' error. Trying again...`);\n\t\t\t\treturn this.rename(from, to, retryUntil);\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate async cleanUp(): Promise<void> {\n\t\ttry {\n\t\t\tif (!(await this.fileService.exists(this.extensionsDownloadDir))) {\n\t\t\t\tthis.logService.trace('Extension VSIX downlads cache dir does not exist');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst folderStat = await this.fileService.resolve(this.extensionsDownloadDir, { resolveMetadata: true });\n\t\t\tif (folderStat.children) {\n\t\t\t\tconst toDelete: URI[] = [];\n\t\t\t\tconst all: [ExtensionIdentifierWithVersion, IFileStatWithMetadata][] = [];\n\t\t\t\tfor (const stat of folderStat.children) {\n\t\t\t\t\tconst extension = this.parse(stat.name);\n\t\t\t\t\tif (extension) {\n\t\t\t\t\t\tall.push([extension, stat]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst byExtension = groupByExtension(all, ([extension]) => extension);\n\t\t\t\tconst distinct: IFileStatWithMetadata[] = [];\n\t\t\t\tfor (const p of byExtension) {\n\t\t\t\t\tp.sort((a, b) => semver.rcompare(a[0].version, b[0].version));\n\t\t\t\t\ttoDelete.push(...p.slice(1).map(e => e[1].resource)); // Delete outdated extensions\n\t\t\t\t\tdistinct.push(p[0][1]);\n\t\t\t\t}\n\t\t\t\tdistinct.sort((a, b) => a.mtime - b.mtime); // sort by modified time\n\t\t\t\ttoDelete.push(...distinct.slice(0, Math.max(0, distinct.length - this.cache)).map(s => s.resource)); // Retain minimum cacheSize and delete the rest\n\t\t\t\tawait Promises.settled(toDelete.map(resource => {\n\t\t\t\t\tthis.logService.trace('Deleting vsix from cache', resource.path);\n\t\t\t\t\treturn this.fileService.del(resource);\n\t\t\t\t}));\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t}\n\t}\n\n\tprivate getName(extension: IGalleryExtension): string {\n\t\treturn this.cache ? `${new ExtensionIdentifierWithVersion(extension.identifier, extension.version).key().toLowerCase()}${extension.properties.targetPlatform !== TargetPlatform.UNDEFINED ? `-${extension.properties.targetPlatform}` : ''}` : generateUuid();\n\t}\n\n\tprivate parse(name: string): ExtensionIdentifierWithVersion | null {\n\t\tconst matches = ExtensionIdVersionRegex.exec(name);\n\t\treturn matches && matches[1] && matches[2] ? new ExtensionIdentifierWithVersion({ id: matches[1] }, matches[2]) : null;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { join } from 'vs/base/common/path';\nimport * as pfs from 'vs/base/node/pfs';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { DidUninstallExtensionEvent, IExtensionManagementService, InstallExtensionResult } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { MANIFEST_CACHE_FOLDER, USER_MANIFEST_CACHE_FILE } from 'vs/platform/extensions/common/extensions';\n\nexport class ExtensionsManifestCache extends Disposable {\n\n\tprivate extensionsManifestCache = join(this.environmentService.userDataPath, MANIFEST_CACHE_FOLDER, USER_MANIFEST_CACHE_FILE);\n\n\tconstructor(\n\t\tprivate readonly environmentService: INativeEnvironmentService,\n\t\textensionsManagementService: IExtensionManagementService\n\t) {\n\t\tsuper();\n\t\tthis._register(extensionsManagementService.onDidInstallExtensions(e => this.onDidInstallExtensions(e)));\n\t\tthis._register(extensionsManagementService.onDidUninstallExtension(e => this.onDidUnInstallExtension(e)));\n\t}\n\n\tprivate onDidInstallExtensions(results: readonly InstallExtensionResult[]): void {\n\t\tif (results.some(r => !!r.local)) {\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tprivate onDidUnInstallExtension(e: DidUninstallExtensionEvent): void {\n\t\tif (!e.error) {\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tinvalidate(): void {\n\t\tpfs.Promises.rm(this.extensionsManifestCache, pfs.RimRafMode.MOVE).then(() => { }, () => { });\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createHash } from 'crypto';\nimport { distinct, equals } from 'vs/base/common/arrays';\nimport { Queue } from 'vs/base/common/async';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport { join } from 'vs/base/common/path';\nimport { Promises } from 'vs/base/node/pfs';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IExtensionIdentifier, IExtensionManagementService, ILocalExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { ILocalizationsService, isValidLocalization } from 'vs/platform/localizations/common/localizations';\nimport { ILogService } from 'vs/platform/log/common/log';\n\ninterface ILanguagePack {\n\thash: string;\n\textensions: {\n\t\textensionIdentifier: IExtensionIdentifier;\n\t\tversion: string;\n\t}[];\n\ttranslations: { [id: string]: string };\n}\n\nexport class LocalizationsService extends Disposable implements ILocalizationsService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly cache: LanguagePacksCache;\n\n\tconstructor(\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.cache = this._register(new LanguagePacksCache(environmentService, logService));\n\t\tthis.extensionManagementService.registerParticipant({\n\t\t\tpostInstall: async (extension: ILocalExtension): Promise<void> => {\n\t\t\t\treturn this.postInstallExtension(extension);\n\t\t\t},\n\t\t\tpostUninstall: async (extension: ILocalExtension): Promise<void> => {\n\t\t\t\treturn this.postUninstallExtension(extension);\n\t\t\t}\n\t\t});\n\t}\n\n\tasync getLanguageIds(): Promise<string[]> {\n\t\tconst languagePacks = await this.cache.getLanguagePacks();\n\t\t// Contributed languages are those installed via extension packs, so does not include English\n\t\tconst languages = ['en', ...Object.keys(languagePacks)];\n\t\treturn distinct(languages);\n\t}\n\n\tprivate async postInstallExtension(extension: ILocalExtension): Promise<void> {\n\t\tif (extension && extension.manifest && extension.manifest.contributes && extension.manifest.contributes.localizations && extension.manifest.contributes.localizations.length) {\n\t\t\tthis.logService.info('Adding language packs from the extension', extension.identifier.id);\n\t\t\tawait this.update();\n\t\t}\n\t}\n\n\tprivate async postUninstallExtension(extension: ILocalExtension): Promise<void> {\n\t\tconst languagePacks = await this.cache.getLanguagePacks();\n\t\tif (Object.keys(languagePacks).some(language => languagePacks[language] && languagePacks[language].extensions.some(e => areSameExtensions(e.extensionIdentifier, extension.identifier)))) {\n\t\t\tthis.logService.info('Removing language packs from the extension', extension.identifier.id);\n\t\t\tawait this.update();\n\t\t}\n\t}\n\n\tasync update(): Promise<boolean> {\n\t\tconst [current, installed] = await Promise.all([this.cache.getLanguagePacks(), this.extensionManagementService.getInstalled()]);\n\t\tconst updated = await this.cache.update(installed);\n\t\treturn !equals(Object.keys(current), Object.keys(updated));\n\t}\n}\n\nclass LanguagePacksCache extends Disposable {\n\n\tprivate languagePacks: { [language: string]: ILanguagePack } = {};\n\tprivate languagePacksFilePath: string;\n\tprivate languagePacksFileLimiter: Queue<any>;\n\tprivate initializedCache: boolean | undefined;\n\n\tconstructor(\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.languagePacksFilePath = join(environmentService.userDataPath, 'languagepacks.json');\n\t\tthis.languagePacksFileLimiter = new Queue();\n\t}\n\n\tgetLanguagePacks(): Promise<{ [language: string]: ILanguagePack }> {\n\t\t// if queue is not empty, fetch from disk\n\t\tif (this.languagePacksFileLimiter.size || !this.initializedCache) {\n\t\t\treturn this.withLanguagePacks()\n\t\t\t\t.then(() => this.languagePacks);\n\t\t}\n\t\treturn Promise.resolve(this.languagePacks);\n\t}\n\n\tupdate(extensions: ILocalExtension[]): Promise<{ [language: string]: ILanguagePack }> {\n\t\treturn this.withLanguagePacks(languagePacks => {\n\t\t\tObject.keys(languagePacks).forEach(language => delete languagePacks[language]);\n\t\t\tthis.createLanguagePacksFromExtensions(languagePacks, ...extensions);\n\t\t}).then(() => this.languagePacks);\n\t}\n\n\tprivate createLanguagePacksFromExtensions(languagePacks: { [language: string]: ILanguagePack }, ...extensions: ILocalExtension[]): void {\n\t\tfor (const extension of extensions) {\n\t\t\tif (extension && extension.manifest && extension.manifest.contributes && extension.manifest.contributes.localizations && extension.manifest.contributes.localizations.length) {\n\t\t\t\tthis.createLanguagePacksFromExtension(languagePacks, extension);\n\t\t\t}\n\t\t}\n\t\tObject.keys(languagePacks).forEach(languageId => this.updateHash(languagePacks[languageId]));\n\t}\n\n\tprivate createLanguagePacksFromExtension(languagePacks: { [language: string]: ILanguagePack }, extension: ILocalExtension): void {\n\t\tconst extensionIdentifier = extension.identifier;\n\t\tconst localizations = extension.manifest.contributes && extension.manifest.contributes.localizations ? extension.manifest.contributes.localizations : [];\n\t\tfor (const localizationContribution of localizations) {\n\t\t\tif (extension.location.scheme === Schemas.file && isValidLocalization(localizationContribution)) {\n\t\t\t\tlet languagePack = languagePacks[localizationContribution.languageId];\n\t\t\t\tif (!languagePack) {\n\t\t\t\t\tlanguagePack = { hash: '', extensions: [], translations: {} };\n\t\t\t\t\tlanguagePacks[localizationContribution.languageId] = languagePack;\n\t\t\t\t}\n\t\t\t\tlet extensionInLanguagePack = languagePack.extensions.filter(e => areSameExtensions(e.extensionIdentifier, extensionIdentifier))[0];\n\t\t\t\tif (extensionInLanguagePack) {\n\t\t\t\t\textensionInLanguagePack.version = extension.manifest.version;\n\t\t\t\t} else {\n\t\t\t\t\tlanguagePack.extensions.push({ extensionIdentifier, version: extension.manifest.version });\n\t\t\t\t}\n\t\t\t\tfor (const translation of localizationContribution.translations) {\n\t\t\t\t\tlanguagePack.translations[translation.id] = join(extension.location.fsPath, translation.path);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateHash(languagePack: ILanguagePack): void {\n\t\tif (languagePack) {\n\t\t\tconst md5 = createHash('md5');\n\t\t\tfor (const extension of languagePack.extensions) {\n\t\t\t\tmd5.update(extension.extensionIdentifier.uuid || extension.extensionIdentifier.id).update(extension.version);\n\t\t\t}\n\t\t\tlanguagePack.hash = md5.digest('hex');\n\t\t}\n\t}\n\n\tprivate withLanguagePacks<T>(fn: (languagePacks: { [language: string]: ILanguagePack }) => T | null = () => null): Promise<T> {\n\t\treturn this.languagePacksFileLimiter.queue(() => {\n\t\t\tlet result: T | null = null;\n\t\t\treturn Promises.readFile(this.languagePacksFilePath, 'utf8')\n\t\t\t\t.then(undefined, err => err.code === 'ENOENT' ? Promise.resolve('{}') : Promise.reject(err))\n\t\t\t\t.then<{ [language: string]: ILanguagePack }>(raw => { try { return JSON.parse(raw); } catch (e) { return {}; } })\n\t\t\t\t.then(languagePacks => { result = fn(languagePacks); return languagePacks; })\n\t\t\t\t.then(languagePacks => {\n\t\t\t\t\tfor (const language of Object.keys(languagePacks)) {\n\t\t\t\t\t\tif (!languagePacks[language]) {\n\t\t\t\t\t\t\tdelete languagePacks[language];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.languagePacks = languagePacks;\n\t\t\t\t\tthis.initializedCache = true;\n\t\t\t\t\tconst raw = JSON.stringify(this.languagePacks);\n\t\t\t\t\tthis.logService.debug('Writing language packs', raw);\n\t\t\t\t\treturn Promises.writeFile(this.languagePacksFilePath, raw);\n\t\t\t\t})\n\t\t\t\t.then(() => result, error => this.logService.error(error));\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { streamToBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IRequestContext, IRequestOptions } from 'vs/base/parts/request/common/request';\nimport { localize } from 'vs/nls';\nimport { ConfigurationScope, Extensions, IConfigurationNode, IConfigurationRegistry } from 'vs/platform/configuration/common/configurationRegistry';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Registry } from 'vs/platform/registry/common/platform';\n\nexport const IRequestService = createDecorator<IRequestService>('requestService');\n\nexport interface IRequestService {\n\treadonly _serviceBrand: undefined;\n\n\trequest(options: IRequestOptions, token: CancellationToken): Promise<IRequestContext>;\n\n\tresolveProxy(url: string): Promise<string | undefined>;\n}\n\nexport function isSuccess(context: IRequestContext): boolean {\n\treturn (context.res.statusCode && context.res.statusCode >= 200 && context.res.statusCode < 300) || context.res.statusCode === 1223;\n}\n\nfunction hasNoContent(context: IRequestContext): boolean {\n\treturn context.res.statusCode === 204;\n}\n\nexport async function asText(context: IRequestContext): Promise<string | null> {\n\tif (!isSuccess(context)) {\n\t\tthrow new Error('Server returned ' + context.res.statusCode);\n\t}\n\tif (hasNoContent(context)) {\n\t\treturn null;\n\t}\n\tconst buffer = await streamToBuffer(context.stream);\n\treturn buffer.toString();\n}\n\nexport async function asJson<T = {}>(context: IRequestContext): Promise<T | null> {\n\tif (!isSuccess(context)) {\n\t\tthrow new Error('Server returned ' + context.res.statusCode);\n\t}\n\tif (hasNoContent(context)) {\n\t\treturn null;\n\t}\n\tconst buffer = await streamToBuffer(context.stream);\n\tconst str = buffer.toString();\n\ttry {\n\t\treturn JSON.parse(str);\n\t} catch (err) {\n\t\terr.message += ':\\n' + str;\n\t\tthrow err;\n\t}\n}\n\n\nexport interface IHTTPConfiguration {\n\thttp?: {\n\t\tproxy?: string;\n\t\tproxyStrictSSL?: boolean;\n\t\tproxyAuthorization?: string;\n\t};\n}\n\nexport function updateProxyConfigurationsScope(scope: ConfigurationScope): void {\n\tregisterProxyConfigurations(scope);\n}\n\nlet proxyConfiguration: IConfigurationNode | undefined;\nfunction registerProxyConfigurations(scope: ConfigurationScope): void {\n\tconst configurationRegistry = Registry.as<IConfigurationRegistry>(Extensions.Configuration);\n\tconst oldProxyConfiguration = proxyConfiguration;\n\tproxyConfiguration = {\n\t\tid: 'http',\n\t\torder: 15,\n\t\ttitle: localize('httpConfigurationTitle', \"HTTP\"),\n\t\ttype: 'object',\n\t\tscope,\n\t\tproperties: {\n\t\t\t'http.proxy': {\n\t\t\t\ttype: 'string',\n\t\t\t\tpattern: '^https?://([^:]*(:[^@]*)?@)?([^:]+|\\\\[[:0-9a-fA-F]+\\\\])(:\\\\d+)?/?$|^$',\n\t\t\t\tmarkdownDescription: localize('proxy', \"The proxy setting to use. If not set, will be inherited from the `http_proxy` and `https_proxy` environment variables.\"),\n\t\t\t\trestricted: true\n\t\t\t},\n\t\t\t'http.proxyStrictSSL': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdescription: localize('strictSSL', \"Controls whether the proxy server certificate should be verified against the list of supplied CAs.\"),\n\t\t\t\trestricted: true\n\t\t\t},\n\t\t\t'http.proxyAuthorization': {\n\t\t\t\ttype: ['null', 'string'],\n\t\t\t\tdefault: null,\n\t\t\t\tmarkdownDescription: localize('proxyAuthorization', \"The value to send as the `Proxy-Authorization` header for every network request.\"),\n\t\t\t\trestricted: true\n\t\t\t},\n\t\t\t'http.proxySupport': {\n\t\t\t\ttype: 'string',\n\t\t\t\tenum: ['off', 'on', 'fallback', 'override'],\n\t\t\t\tenumDescriptions: [\n\t\t\t\t\tlocalize('proxySupportOff', \"Disable proxy support for extensions.\"),\n\t\t\t\t\tlocalize('proxySupportOn', \"Enable proxy support for extensions.\"),\n\t\t\t\t\tlocalize('proxySupportFallback', \"Enable proxy support for extensions, fall back to request options, when no proxy found.\"),\n\t\t\t\t\tlocalize('proxySupportOverride', \"Enable proxy support for extensions, override request options.\"),\n\t\t\t\t],\n\t\t\t\tdefault: 'override',\n\t\t\t\tdescription: localize('proxySupport', \"Use the proxy support for extensions.\"),\n\t\t\t\trestricted: true\n\t\t\t},\n\t\t\t'http.systemCertificates': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdescription: localize('systemCertificates', \"Controls whether CA certificates should be loaded from the OS. (On Windows and macOS, a reload of the window is required after turning this off.)\"),\n\t\t\t\trestricted: true\n\t\t\t}\n\t\t}\n\t};\n\tconfigurationRegistry.updateConfigurations({ add: [proxyConfiguration], remove: oldProxyConfiguration ? [oldProxyConfiguration] : [] });\n}\n\nregisterProxyConfigurations(ConfigurationScope.MACHINE);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Schemas } from 'vs/base/common/network';\nimport { URI } from 'vs/base/common/uri';\nimport { IDownloadService } from 'vs/platform/download/common/download';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { asText, IRequestService } from 'vs/platform/request/common/request';\n\nexport class DownloadService implements IDownloadService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IRequestService private readonly requestService: IRequestService,\n\t\t@IFileService private readonly fileService: IFileService\n\t) { }\n\n\tasync download(resource: URI, target: URI, cancellationToken: CancellationToken = CancellationToken.None): Promise<void> {\n\t\tif (resource.scheme === Schemas.file || resource.scheme === Schemas.vscodeRemote) {\n\t\t\t// Intentionally only support this for file|remote<->file|remote scenarios\n\t\t\tawait this.fileService.copy(resource, target);\n\t\t\treturn;\n\t\t}\n\t\tconst options = { type: 'GET', url: resource.toString() };\n\t\tconst context = await this.requestService.request(options, cancellationToken);\n\t\tif (context.res.statusCode === 200) {\n\t\t\tawait this.fileService.writeFile(target, context.stream);\n\t\t} else {\n\t\t\tconst message = await asText(context);\n\t\t\tthrow new Error(`Expected 200, got back ${context.res.statusCode} instead.\\n\\n${message}`);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { parse as parseUrl, Url } from 'url';\nimport { isBoolean } from 'vs/base/common/types';\n\nexport type Agent = any;\n\nfunction getSystemProxyURI(requestURL: Url, env: typeof process.env): string | null {\n\tif (requestURL.protocol === 'http:') {\n\t\treturn env.HTTP_PROXY || env.http_proxy || null;\n\t} else if (requestURL.protocol === 'https:') {\n\t\treturn env.HTTPS_PROXY || env.https_proxy || env.HTTP_PROXY || env.http_proxy || null;\n\t}\n\n\treturn null;\n}\n\nexport interface IOptions {\n\tproxyUrl?: string;\n\tstrictSSL?: boolean;\n}\n\nexport async function getProxyAgent(rawRequestURL: string, env: typeof process.env, options: IOptions = {}): Promise<Agent> {\n\tconst requestURL = parseUrl(rawRequestURL);\n\tconst proxyURL = options.proxyUrl || getSystemProxyURI(requestURL, env);\n\n\tif (!proxyURL) {\n\t\treturn null;\n\t}\n\n\tconst proxyEndpoint = parseUrl(proxyURL);\n\n\tif (!/^https?:$/.test(proxyEndpoint.protocol || '')) {\n\t\treturn null;\n\t}\n\n\tconst opts = {\n\t\thost: proxyEndpoint.hostname || '',\n\t\tport: proxyEndpoint.port || (proxyEndpoint.protocol === 'https' ? '443' : '80'),\n\t\tauth: proxyEndpoint.auth,\n\t\trejectUnauthorized: isBoolean(options.strictSSL) ? options.strictSSL : true,\n\t};\n\n\treturn requestURL.protocol === 'http:'\n\t\t? new (await import('http-proxy-agent'))(opts as any as Url)\n\t\t: new (await import('https-proxy-agent'))(opts);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { generateUuid, isUUID } from 'vs/base/common/uuid';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\n\nexport async function getServiceMachineId(environmentService: IEnvironmentService, fileService: IFileService, storageService: {\n\tget: (key: string, scope: StorageScope, fallbackValue?: string | undefined) => string | undefined,\n\tstore: (key: string, value: string, scope: StorageScope, target: StorageTarget) => void\n} | undefined): Promise<string> {\n\tlet uuid: string | null = storageService ? storageService.get('storage.serviceMachineId', StorageScope.GLOBAL) || null : null;\n\tif (uuid) {\n\t\treturn uuid;\n\t}\n\ttry {\n\t\tconst contents = await fileService.readFile(environmentService.serviceMachineIdResource);\n\t\tconst value = contents.value.toString();\n\t\tuuid = isUUID(value) ? value : null;\n\t} catch (e) {\n\t\tuuid = null;\n\t}\n\n\tif (!uuid) {\n\t\tuuid = generateUuid();\n\t\ttry {\n\t\t\tawait fileService.writeFile(environmentService.serviceMachineIdResource, VSBuffer.fromString(uuid));\n\t\t} catch (error) {\n\t\t\t//noop\n\t\t}\n\t}\n\tif (storageService) {\n\t\tstorageService.store('storage.serviceMachineId', uuid, StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t}\n\treturn uuid;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Promises, RunOnceScheduler, runWhenIdle } from 'vs/base/common/async';\nimport { Emitter, Event, PauseableEmitter } from 'vs/base/common/event';\nimport { Disposable, dispose, MutableDisposable } from 'vs/base/common/lifecycle';\nimport { mark } from 'vs/base/common/performance';\nimport { isUndefinedOrNull } from 'vs/base/common/types';\nimport { InMemoryStorageDatabase, IStorage, Storage } from 'vs/base/parts/storage/common/storage';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IWorkspaceInitializationPayload } from 'vs/platform/workspaces/common/workspaces';\n\nexport const IS_NEW_KEY = '__$__isNewStorageMarker';\nconst TARGET_KEY = '__$__targetStorageMarker';\n\nexport const IStorageService = createDecorator<IStorageService>('storageService');\n\nexport enum WillSaveStateReason {\n\n\t/**\n\t * No specific reason to save state.\n\t */\n\tNONE,\n\n\t/**\n\t * A hint that the workbench is about to shutdown.\n\t */\n\tSHUTDOWN\n}\n\nexport interface IWillSaveStateEvent {\n\treason: WillSaveStateReason;\n}\n\nexport interface IStorageService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Emitted whenever data is updated or deleted.\n\t */\n\treadonly onDidChangeValue: Event<IStorageValueChangeEvent>;\n\n\t/**\n\t * Emitted whenever target of a storage entry changes.\n\t */\n\treadonly onDidChangeTarget: Event<IStorageTargetChangeEvent>;\n\n\t/**\n\t * Emitted when the storage is about to persist. This is the right time\n\t * to persist data to ensure it is stored before the application shuts\n\t * down.\n\t *\n\t * The will save state event allows to optionally ask for the reason of\n\t * saving the state, e.g. to find out if the state is saved due to a\n\t * shutdown.\n\t *\n\t * Note: this event may be fired many times, not only on shutdown to prevent\n\t * loss of state in situations where the shutdown is not sufficient to\n\t * persist the data properly.\n\t */\n\treadonly onWillSaveState: Event<IWillSaveStateEvent>;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided `defaultValue` if the element is `null` or `undefined`.\n\t *\n\t * @param scope allows to define the scope of the storage operation\n\t * to either the current workspace only or all workspaces.\n\t */\n\tget(key: string, scope: StorageScope, fallbackValue: string): string;\n\tget(key: string, scope: StorageScope, fallbackValue?: string): string | undefined;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided `defaultValue` if the element is `null` or `undefined`.\n\t * The element will be converted to a `boolean`.\n\t *\n\t * @param scope allows to define the scope of the storage operation\n\t * to either the current workspace only or all workspaces.\n\t */\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue: boolean): boolean;\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue?: boolean): boolean | undefined;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided `defaultValue` if the element is `null` or `undefined`.\n\t * The element will be converted to a `number` using `parseInt` with a\n\t * base of `10`.\n\t *\n\t * @param scope allows to define the scope of the storage operation\n\t * to either the current workspace only or all workspaces.\n\t */\n\tgetNumber(key: string, scope: StorageScope, fallbackValue: number): number;\n\tgetNumber(key: string, scope: StorageScope, fallbackValue?: number): number | undefined;\n\n\t/**\n\t * Store a value under the given key to storage. The value will be\n\t * converted to a `string`. Storing either `undefined` or `null` will\n\t * remove the entry under the key.\n\t *\n\t * @param scope allows to define the scope of the storage operation\n\t * to either the current workspace only or all workspaces.\n\t *\n\t * @param target allows to define the target of the storage operation\n\t * to either the current machine or user.\n\t */\n\tstore(key: string, value: string | boolean | number | undefined | null, scope: StorageScope, target: StorageTarget): void;\n\n\t/**\n\t * Delete an element stored under the provided key from storage.\n\t *\n\t * The scope argument allows to define the scope of the storage\n\t * operation to either the current workspace only or all workspaces.\n\t */\n\tremove(key: string, scope: StorageScope): void;\n\n\t/**\n\t * Returns all the keys used in the storage for the provided `scope`\n\t * and `target`.\n\t *\n\t * Note: this will NOT return all keys stored in the storage layer.\n\t * Some keys may not have an associated `StorageTarget` and thus\n\t * will be excluded from the results.\n\t *\n\t * @param scope allows to define the scope for the keys\n\t * to either the current workspace only or all workspaces.\n\t *\n\t * @param target allows to define the target for the keys\n\t * to either the current machine or user.\n\t */\n\tkeys(scope: StorageScope, target: StorageTarget): string[];\n\n\t/**\n\t * Log the contents of the storage to the console.\n\t */\n\tlogStorage(): void;\n\n\t/**\n\t * Migrate the storage contents to another workspace.\n\t */\n\tmigrate(toWorkspace: IWorkspaceInitializationPayload): Promise<void>;\n\n\t/**\n\t * Whether the storage for the given scope was created during this session or\n\t * existed before.\n\t */\n\tisNew(scope: StorageScope): boolean;\n\n\t/**\n\t * Allows to flush state, e.g. in cases where a shutdown is\n\t * imminent. This will send out the `onWillSaveState` to ask\n\t * everyone for latest state.\n\t *\n\t * @returns a `Promise` that can be awaited on when all updates\n\t * to the underlying storage have been flushed.\n\t */\n\tflush(reason?: WillSaveStateReason): Promise<void>;\n}\n\nexport const enum StorageScope {\n\n\t/**\n\t * The stored data will be scoped to all workspaces.\n\t */\n\tGLOBAL,\n\n\t/**\n\t * The stored data will be scoped to the current workspace.\n\t */\n\tWORKSPACE\n}\n\nexport const enum StorageTarget {\n\n\t/**\n\t * The stored data is user specific and applies across machines.\n\t */\n\tUSER,\n\n\t/**\n\t * The stored data is machine specific.\n\t */\n\tMACHINE\n}\n\nexport interface IStorageValueChangeEvent {\n\n\t/**\n\t * The scope for the storage entry that changed\n\t * or was removed.\n\t */\n\treadonly scope: StorageScope;\n\n\t/**\n\t * The `key` of the storage entry that was changed\n\t * or was removed.\n\t */\n\treadonly key: string;\n\n\t/**\n\t * The `target` can be `undefined` if a key is being\n\t * removed.\n\t */\n\treadonly target: StorageTarget | undefined;\n}\n\nexport interface IStorageTargetChangeEvent {\n\n\t/**\n\t * The scope for the target that changed. Listeners\n\t * should use `keys(scope, target)` to get an updated\n\t * list of keys for the given `scope` and `target`.\n\t */\n\treadonly scope: StorageScope;\n}\n\ninterface IKeyTargets {\n\t[key: string]: StorageTarget\n}\n\nexport interface IStorageServiceOptions {\n\tflushInterval: number;\n}\n\nexport abstract class AbstractStorageService extends Disposable implements IStorageService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate static DEFAULT_FLUSH_INTERVAL = 60 * 1000; // every minute\n\n\tprivate readonly _onDidChangeValue = this._register(new PauseableEmitter<IStorageValueChangeEvent>());\n\treadonly onDidChangeValue = this._onDidChangeValue.event;\n\n\tprivate readonly _onDidChangeTarget = this._register(new PauseableEmitter<IStorageTargetChangeEvent>());\n\treadonly onDidChangeTarget = this._onDidChangeTarget.event;\n\n\tprivate readonly _onWillSaveState = this._register(new Emitter<IWillSaveStateEvent>());\n\treadonly onWillSaveState = this._onWillSaveState.event;\n\n\tprivate initializationPromise: Promise<void> | undefined;\n\n\tprivate readonly flushWhenIdleScheduler = this._register(new RunOnceScheduler(() => this.doFlushWhenIdle(), this.options.flushInterval));\n\tprivate readonly runFlushWhenIdle = this._register(new MutableDisposable());\n\n\tconstructor(private options: IStorageServiceOptions = { flushInterval: AbstractStorageService.DEFAULT_FLUSH_INTERVAL }) {\n\t\tsuper();\n\t}\n\n\tprivate doFlushWhenIdle(): void {\n\t\tthis.runFlushWhenIdle.value = runWhenIdle(() => {\n\t\t\tif (this.shouldFlushWhenIdle()) {\n\t\t\t\tthis.flush();\n\t\t\t}\n\n\t\t\t// repeat\n\t\t\tthis.flushWhenIdleScheduler.schedule();\n\t\t});\n\t}\n\n\tprotected shouldFlushWhenIdle(): boolean {\n\t\treturn true;\n\t}\n\n\tprotected stopFlushWhenIdle(): void {\n\t\tdispose([this.runFlushWhenIdle, this.flushWhenIdleScheduler]);\n\t}\n\n\tinitialize(): Promise<void> {\n\t\tif (!this.initializationPromise) {\n\t\t\tthis.initializationPromise = (async () => {\n\n\t\t\t\t// Init all storage locations\n\t\t\t\tmark('code/willInitStorage');\n\t\t\t\ttry {\n\t\t\t\t\t// Ask subclasses to initialize storage\n\t\t\t\t\tawait this.doInitialize();\n\t\t\t\t} finally {\n\t\t\t\t\tmark('code/didInitStorage');\n\t\t\t\t}\n\n\t\t\t\t// On some OS we do not get enough time to persist state on shutdown (e.g. when\n\t\t\t\t// Windows restarts after applying updates). In other cases, VSCode might crash,\n\t\t\t\t// so we periodically save state to reduce the chance of loosing any state.\n\t\t\t\t// In the browser we do not have support for long running unload sequences. As such,\n\t\t\t\t// we cannot ask for saving state in that moment, because that would result in a\n\t\t\t\t// long running operation.\n\t\t\t\t// Instead, periodically ask customers to save save. The library will be clever enough\n\t\t\t\t// to only save state that has actually changed.\n\t\t\t\tthis.flushWhenIdleScheduler.schedule();\n\t\t\t})();\n\t\t}\n\n\t\treturn this.initializationPromise;\n\t}\n\n\tprotected emitDidChangeValue(scope: StorageScope, key: string): void {\n\n\t\t// Specially handle `TARGET_KEY`\n\t\tif (key === TARGET_KEY) {\n\n\t\t\t// Clear our cached version which is now out of date\n\t\t\tif (scope === StorageScope.GLOBAL) {\n\t\t\t\tthis._globalKeyTargets = undefined;\n\t\t\t} else if (scope === StorageScope.WORKSPACE) {\n\t\t\t\tthis._workspaceKeyTargets = undefined;\n\t\t\t}\n\n\t\t\t// Emit as `didChangeTarget` event\n\t\t\tthis._onDidChangeTarget.fire({ scope });\n\t\t}\n\n\t\t// Emit any other key to outside\n\t\telse {\n\t\t\tthis._onDidChangeValue.fire({ scope, key, target: this.getKeyTargets(scope)[key] });\n\t\t}\n\t}\n\n\tprotected emitWillSaveState(reason: WillSaveStateReason): void {\n\t\tthis._onWillSaveState.fire({ reason });\n\t}\n\n\tget(key: string, scope: StorageScope, fallbackValue: string): string;\n\tget(key: string, scope: StorageScope): string | undefined;\n\tget(key: string, scope: StorageScope, fallbackValue?: string): string | undefined {\n\t\treturn this.getStorage(scope)?.get(key, fallbackValue);\n\t}\n\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue: boolean): boolean;\n\tgetBoolean(key: string, scope: StorageScope): boolean | undefined;\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue?: boolean): boolean | undefined {\n\t\treturn this.getStorage(scope)?.getBoolean(key, fallbackValue);\n\t}\n\n\tgetNumber(key: string, scope: StorageScope, fallbackValue: number): number;\n\tgetNumber(key: string, scope: StorageScope): number | undefined;\n\tgetNumber(key: string, scope: StorageScope, fallbackValue?: number): number | undefined {\n\t\treturn this.getStorage(scope)?.getNumber(key, fallbackValue);\n\t}\n\n\tstore(key: string, value: string | boolean | number | undefined | null, scope: StorageScope, target: StorageTarget): void {\n\n\t\t// We remove the key for undefined/null values\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\tthis.remove(key, scope);\n\t\t\treturn;\n\t\t}\n\n\t\t// Update our datastructures but send events only after\n\t\tthis.withPausedEmitters(() => {\n\n\t\t\t// Update key-target map\n\t\t\tthis.updateKeyTarget(key, scope, target);\n\n\t\t\t// Store actual value\n\t\t\tthis.getStorage(scope)?.set(key, value);\n\t\t});\n\t}\n\n\tremove(key: string, scope: StorageScope): void {\n\n\t\t// Update our datastructures but send events only after\n\t\tthis.withPausedEmitters(() => {\n\n\t\t\t// Update key-target map\n\t\t\tthis.updateKeyTarget(key, scope, undefined);\n\n\t\t\t// Remove actual key\n\t\t\tthis.getStorage(scope)?.delete(key);\n\t\t});\n\t}\n\n\tprivate withPausedEmitters(fn: Function): void {\n\n\t\t// Pause emitters\n\t\tthis._onDidChangeValue.pause();\n\t\tthis._onDidChangeTarget.pause();\n\n\t\ttry {\n\t\t\tfn();\n\t\t} finally {\n\n\t\t\t// Resume emitters\n\t\t\tthis._onDidChangeValue.resume();\n\t\t\tthis._onDidChangeTarget.resume();\n\t\t}\n\t}\n\n\tkeys(scope: StorageScope, target: StorageTarget): string[] {\n\t\tconst keys: string[] = [];\n\n\t\tconst keyTargets = this.getKeyTargets(scope);\n\t\tfor (const key of Object.keys(keyTargets)) {\n\t\t\tconst keyTarget = keyTargets[key];\n\t\t\tif (keyTarget === target) {\n\t\t\t\tkeys.push(key);\n\t\t\t}\n\t\t}\n\n\t\treturn keys;\n\t}\n\n\tprivate updateKeyTarget(key: string, scope: StorageScope, target: StorageTarget | undefined): void {\n\n\t\t// Add\n\t\tconst keyTargets = this.getKeyTargets(scope);\n\t\tif (typeof target === 'number') {\n\t\t\tif (keyTargets[key] !== target) {\n\t\t\t\tkeyTargets[key] = target;\n\t\t\t\tthis.getStorage(scope)?.set(TARGET_KEY, JSON.stringify(keyTargets));\n\t\t\t}\n\t\t}\n\n\t\t// Remove\n\t\telse {\n\t\t\tif (typeof keyTargets[key] === 'number') {\n\t\t\t\tdelete keyTargets[key];\n\t\t\t\tthis.getStorage(scope)?.set(TARGET_KEY, JSON.stringify(keyTargets));\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _workspaceKeyTargets: IKeyTargets | undefined = undefined;\n\tprivate get workspaceKeyTargets(): IKeyTargets {\n\t\tif (!this._workspaceKeyTargets) {\n\t\t\tthis._workspaceKeyTargets = this.loadKeyTargets(StorageScope.WORKSPACE);\n\t\t}\n\n\t\treturn this._workspaceKeyTargets;\n\t}\n\n\tprivate _globalKeyTargets: IKeyTargets | undefined = undefined;\n\tprivate get globalKeyTargets(): IKeyTargets {\n\t\tif (!this._globalKeyTargets) {\n\t\t\tthis._globalKeyTargets = this.loadKeyTargets(StorageScope.GLOBAL);\n\t\t}\n\n\t\treturn this._globalKeyTargets;\n\t}\n\n\tprivate getKeyTargets(scope: StorageScope): IKeyTargets {\n\t\treturn scope === StorageScope.GLOBAL ? this.globalKeyTargets : this.workspaceKeyTargets;\n\t}\n\n\tprivate loadKeyTargets(scope: StorageScope): { [key: string]: StorageTarget } {\n\t\tconst keysRaw = this.get(TARGET_KEY, scope);\n\t\tif (keysRaw) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(keysRaw);\n\t\t\t} catch (error) {\n\t\t\t\t// Fail gracefully\n\t\t\t}\n\t\t}\n\n\t\treturn Object.create(null);\n\t}\n\n\tisNew(scope: StorageScope): boolean {\n\t\treturn this.getBoolean(IS_NEW_KEY, scope) === true;\n\t}\n\n\tasync flush(reason = WillSaveStateReason.NONE): Promise<void> {\n\n\t\t// Signal event to collect changes\n\t\tthis._onWillSaveState.fire({ reason });\n\n\t\tconst globalStorage = this.getStorage(StorageScope.GLOBAL);\n\t\tconst workspaceStorage = this.getStorage(StorageScope.WORKSPACE);\n\n\t\tswitch (reason) {\n\n\t\t\t// Unspecific reason: just wait when data is flushed\n\t\t\tcase WillSaveStateReason.NONE:\n\t\t\t\tawait Promises.settled([\n\t\t\t\t\tglobalStorage?.whenFlushed() ?? Promise.resolve(),\n\t\t\t\t\tworkspaceStorage?.whenFlushed() ?? Promise.resolve()\n\t\t\t\t]);\n\t\t\t\tbreak;\n\n\t\t\t// Shutdown: we want to flush as soon as possible\n\t\t\t// and not hit any delays that might be there\n\t\t\tcase WillSaveStateReason.SHUTDOWN:\n\t\t\t\tawait Promises.settled([\n\t\t\t\t\tglobalStorage?.flush(0) ?? Promise.resolve(),\n\t\t\t\t\tworkspaceStorage?.flush(0) ?? Promise.resolve()\n\t\t\t\t]);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tasync logStorage(): Promise<void> {\n\t\tconst globalItems = this.getStorage(StorageScope.GLOBAL)?.items ?? new Map<string, string>();\n\t\tconst workspaceItems = this.getStorage(StorageScope.WORKSPACE)?.items ?? new Map<string, string>();\n\n\t\treturn logStorage(\n\t\t\tglobalItems,\n\t\t\tworkspaceItems,\n\t\t\tthis.getLogDetails(StorageScope.GLOBAL) ?? '',\n\t\t\tthis.getLogDetails(StorageScope.WORKSPACE) ?? ''\n\t\t);\n\t}\n\n\t// --- abstract\n\n\tprotected abstract doInitialize(): Promise<void>;\n\n\tprotected abstract getStorage(scope: StorageScope): IStorage | undefined;\n\n\tprotected abstract getLogDetails(scope: StorageScope): string | undefined;\n\n\tabstract migrate(toWorkspace: IWorkspaceInitializationPayload): Promise<void>;\n}\n\nexport class InMemoryStorageService extends AbstractStorageService {\n\n\tprivate readonly globalStorage = this._register(new Storage(new InMemoryStorageDatabase()));\n\tprivate readonly workspaceStorage = this._register(new Storage(new InMemoryStorageDatabase()));\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._register(this.workspaceStorage.onDidChangeStorage(key => this.emitDidChangeValue(StorageScope.WORKSPACE, key)));\n\t\tthis._register(this.globalStorage.onDidChangeStorage(key => this.emitDidChangeValue(StorageScope.GLOBAL, key)));\n\t}\n\n\tprotected getStorage(scope: StorageScope): IStorage {\n\t\treturn scope === StorageScope.GLOBAL ? this.globalStorage : this.workspaceStorage;\n\t}\n\n\tprotected getLogDetails(scope: StorageScope): string | undefined {\n\t\treturn scope === StorageScope.GLOBAL ? 'inMemory (global)' : 'inMemory (workspace)';\n\t}\n\n\tprotected async doInitialize(): Promise<void> { }\n\n\tasync migrate(toWorkspace: IWorkspaceInitializationPayload): Promise<void> {\n\t\t// not supported\n\t}\n}\n\nexport async function logStorage(global: Map<string, string>, workspace: Map<string, string>, globalPath: string, workspacePath: string): Promise<void> {\n\tconst safeParse = (value: string) => {\n\t\ttry {\n\t\t\treturn JSON.parse(value);\n\t\t} catch (error) {\n\t\t\treturn value;\n\t\t}\n\t};\n\n\tconst globalItems = new Map<string, string>();\n\tconst globalItemsParsed = new Map<string, string>();\n\tglobal.forEach((value, key) => {\n\t\tglobalItems.set(key, value);\n\t\tglobalItemsParsed.set(key, safeParse(value));\n\t});\n\n\tconst workspaceItems = new Map<string, string>();\n\tconst workspaceItemsParsed = new Map<string, string>();\n\tworkspace.forEach((value, key) => {\n\t\tworkspaceItems.set(key, value);\n\t\tworkspaceItemsParsed.set(key, safeParse(value));\n\t});\n\n\tconsole.group(`Storage: Global (path: ${globalPath})`);\n\tlet globalValues: { key: string, value: string }[] = [];\n\tglobalItems.forEach((value, key) => {\n\t\tglobalValues.push({ key, value });\n\t});\n\tconsole.table(globalValues);\n\tconsole.groupEnd();\n\n\tconsole.log(globalItemsParsed);\n\n\tconsole.group(`Storage: Workspace (path: ${workspacePath})`);\n\tlet workspaceValues: { key: string, value: string }[] = [];\n\tworkspaceItems.forEach((value, key) => {\n\t\tworkspaceValues.push({ key, value });\n\t});\n\tconsole.table(workspaceValues);\n\tconsole.groupEnd();\n\n\tconsole.log(workspaceItemsParsed);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isLinuxSnap, platform, Platform, PlatformToString } from 'vs/base/common/platform';\nimport { env, platform as nodePlatform } from 'vs/base/common/process';\nimport { URI } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IFileService } from 'vs/platform/files/common/files';\n\nfunction getPlatformDetail(hostname: string): string | undefined {\n\tif (platform === Platform.Linux && /^penguin(\\.|$)/i.test(hostname)) {\n\t\treturn 'chromebook';\n\t}\n\n\treturn undefined;\n}\n\nexport async function resolveCommonProperties(\n\tfileService: IFileService,\n\trelease: string,\n\thostname: string,\n\tarch: string,\n\tcommit: string | undefined,\n\tversion: string | undefined,\n\tmachineId: string | undefined,\n\tmsftInternalDomains: string[] | undefined,\n\tinstallSourcePath: string,\n\tproduct?: string\n): Promise<{ [name: string]: string | boolean | undefined; }> {\n\tconst result: { [name: string]: string | boolean | undefined; } = Object.create(null);\n\n\t// __GDPR__COMMON__ \"common.machineId\" : { \"endPoint\": \"MacAddressHash\", \"classification\": \"EndUserPseudonymizedInformation\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.machineId'] = machineId;\n\t// __GDPR__COMMON__ \"sessionID\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['sessionID'] = generateUuid() + Date.now();\n\t// __GDPR__COMMON__ \"commitHash\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['commitHash'] = commit;\n\t// __GDPR__COMMON__ \"version\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['version'] = version;\n\t// __GDPR__COMMON__ \"common.platformVersion\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.platformVersion'] = (release || '').replace(/^(\\d+)(\\.\\d+)?(\\.\\d+)?(.*)/, '$1$2$3');\n\t// __GDPR__COMMON__ \"common.platform\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.platform'] = PlatformToString(platform);\n\t// __GDPR__COMMON__ \"common.nodePlatform\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.nodePlatform'] = nodePlatform;\n\t// __GDPR__COMMON__ \"common.nodeArch\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.nodeArch'] = arch;\n\t// __GDPR__COMMON__ \"common.product\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.product'] = product || 'desktop';\n\n\tconst msftInternal = verifyMicrosoftInternalDomain(msftInternalDomains || []);\n\tif (msftInternal) {\n\t\t// __GDPR__COMMON__ \"common.msftInternal\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\tresult['common.msftInternal'] = msftInternal;\n\t}\n\n\t// dynamic properties which value differs on each call\n\tlet seq = 0;\n\tconst startTime = Date.now();\n\tObject.defineProperties(result, {\n\t\t// __GDPR__COMMON__ \"timestamp\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t'timestamp': {\n\t\t\tget: () => new Date(),\n\t\t\tenumerable: true\n\t\t},\n\t\t// __GDPR__COMMON__ \"common.timesincesessionstart\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t'common.timesincesessionstart': {\n\t\t\tget: () => Date.now() - startTime,\n\t\t\tenumerable: true\n\t\t},\n\t\t// __GDPR__COMMON__ \"common.sequence\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t'common.sequence': {\n\t\t\tget: () => seq++,\n\t\t\tenumerable: true\n\t\t}\n\t});\n\n\tif (isLinuxSnap) {\n\t\t// __GDPR__COMMON__ \"common.snap\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\tresult['common.snap'] = 'true';\n\t}\n\n\tconst platformDetail = getPlatformDetail(hostname);\n\n\tif (platformDetail) {\n\t\t// __GDPR__COMMON__ \"common.platformDetail\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\tresult['common.platformDetail'] = platformDetail;\n\t}\n\n\ttry {\n\t\tconst contents = await fileService.readFile(URI.file(installSourcePath));\n\n\t\t// __GDPR__COMMON__ \"common.source\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\tresult['common.source'] = contents.value.toString().slice(0, 30);\n\t} catch (error) {\n\t\t// ignore error\n\t}\n\n\treturn result;\n}\n\nexport function verifyMicrosoftInternalDomain(domainList: readonly string[]): boolean {\n\tconst userDnsDomain = env['USERDNSDOMAIN'];\n\tif (!userDnsDomain) {\n\t\treturn false;\n\t}\n\n\tconst domain = userDnsDomain.toLowerCase();\n\treturn domainList.some(msftDomain => domain === msftDomain);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ClassifiedEvent, GDPRClassification, StrictPropertyCheck } from 'vs/platform/telemetry/common/gdprTypings';\n\nexport const ITelemetryService = createDecorator<ITelemetryService>('telemetryService');\n\nexport interface ITelemetryInfo {\n\tsessionId: string;\n\tmachineId: string;\n\tfirstSessionDate: string;\n\tmsftInternal?: boolean;\n}\n\nexport interface ITelemetryData {\n\tfrom?: string;\n\ttarget?: string;\n\t[key: string]: any;\n}\n\nexport interface ITelemetryService {\n\n\t/**\n\t * Whether error telemetry will get sent. If false, `publicLogError` will no-op.\n\t */\n\treadonly sendErrorTelemetry: boolean;\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Sends a telemetry event that has been privacy approved.\n\t * Do not call this unless you have been given approval.\n\t */\n\tpublicLog(eventName: string, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<void>;\n\n\tpublicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>, anonymizeFilePaths?: boolean): Promise<void>;\n\n\tpublicLogError(errorEventName: string, data?: ITelemetryData): Promise<void>;\n\n\tpublicLogError2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>): Promise<void>;\n\n\tgetTelemetryInfo(): Promise<ITelemetryInfo>;\n\n\tsetExperimentProperty(name: string, value: string): void;\n\n\ttelemetryLevel: TelemetryLevel;\n}\n\nexport interface ITelemetryEndpoint {\n\tid: string;\n\taiKey: string;\n\tsendErrorTelemetry: boolean;\n}\n\nexport const ICustomEndpointTelemetryService = createDecorator<ICustomEndpointTelemetryService>('customEndpointTelemetryService');\n\nexport interface ICustomEndpointTelemetryService {\n\treadonly _serviceBrand: undefined;\n\n\tpublicLog(endpoint: ITelemetryEndpoint, eventName: string, data?: ITelemetryData): Promise<void>;\n\tpublicLogError(endpoint: ITelemetryEndpoint, errorEventName: string, data?: ITelemetryData): Promise<void>;\n}\n\n// Keys\nexport const currentSessionDateStorageKey = 'telemetry.currentSessionDate';\nexport const firstSessionDateStorageKey = 'telemetry.firstSessionDate';\nexport const lastSessionDateStorageKey = 'telemetry.lastSessionDate';\nexport const machineIdKey = 'telemetry.machineId';\n\n// Configuration Keys\nexport const TELEMETRY_SECTION_ID = 'telemetry';\nexport const TELEMETRY_SETTING_ID = 'telemetry.telemetryLevel';\nexport const TELEMETRY_OLD_SETTING_ID = 'telemetry.enableTelemetry';\n\nexport const enum TelemetryLevel {\n\tNONE = 0,\n\tCRASH = 1,\n\tERROR = 2,\n\tUSAGE = 3\n}\n\nexport const enum TelemetryConfiguration {\n\tOFF = 'off',\n\tCRASH = 'crash',\n\tERROR = 'error',\n\tON = 'all'\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isNonEmptyArray } from 'vs/base/common/arrays';\nimport { Barrier, CancelablePromise, createCancelablePromise } from 'vs/base/common/async';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled, getErrorMessage } from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { isWeb } from 'vs/base/common/platform';\nimport { isUndefined } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport * as nls from 'vs/nls';\nimport {\n\tDidUninstallExtensionEvent, ExtensionManagementError, IExtensionGalleryService, IExtensionIdentifier, IExtensionManagementParticipant, IExtensionManagementService, IGalleryExtension, IGalleryMetadata, ILocalExtension, InstallExtensionEvent, InstallExtensionResult, InstallOperation, InstallOptions,\n\tInstallVSIXOptions, IExtensionsControlManifest, StatisticType, UninstallOptions, TargetPlatform, isTargetPlatformCompatible, TargetPlatformToString, ExtensionManagementErrorCode\n} from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { areSameExtensions, ExtensionIdentifierWithVersion, getGalleryExtensionTelemetryData, getLocalExtensionTelemetryData, getMaliciousExtensionsSet } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { ExtensionType, IExtensionManifest } from 'vs/platform/extensions/common/extensions';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\n\nexport interface IInstallExtensionTask {\n\treadonly identifier: IExtensionIdentifier;\n\treadonly source: IGalleryExtension | URI;\n\treadonly operation: InstallOperation;\n\trun(): Promise<ILocalExtension>;\n\twaitUntilTaskIsFinished(): Promise<ILocalExtension>;\n\tcancel(): void;\n}\n\nexport type UninstallExtensionTaskOptions = { readonly remove?: boolean; readonly versionOnly?: boolean };\n\nexport interface IUninstallExtensionTask {\n\treadonly extension: ILocalExtension;\n\trun(): Promise<void>;\n\twaitUntilTaskIsFinished(): Promise<void>;\n\tcancel(): void;\n}\n\nexport abstract class AbstractExtensionManagementService extends Disposable implements IExtensionManagementService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate extensionsControlManifest: Promise<IExtensionsControlManifest> | undefined;\n\tprivate lastReportTimestamp = 0;\n\tprivate readonly installingExtensions = new Map<string, IInstallExtensionTask>();\n\tprivate readonly uninstallingExtensions = new Map<string, IUninstallExtensionTask>();\n\n\tprivate readonly _onInstallExtension = this._register(new Emitter<InstallExtensionEvent>());\n\treadonly onInstallExtension: Event<InstallExtensionEvent> = this._onInstallExtension.event;\n\n\tprotected readonly _onDidInstallExtensions = this._register(new Emitter<InstallExtensionResult[]>());\n\treadonly onDidInstallExtensions = this._onDidInstallExtensions.event;\n\n\tprotected readonly _onUninstallExtension = this._register(new Emitter<IExtensionIdentifier>());\n\treadonly onUninstallExtension: Event<IExtensionIdentifier> = this._onUninstallExtension.event;\n\n\tprotected _onDidUninstallExtension = this._register(new Emitter<DidUninstallExtensionEvent>());\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent> = this._onDidUninstallExtension.event;\n\n\tprivate readonly participants: IExtensionManagementParticipant[] = [];\n\n\tconstructor(\n\t\t@IExtensionGalleryService protected readonly galleryService: IExtensionGalleryService,\n\t\t@ITelemetryService protected readonly telemetryService: ITelemetryService,\n\t\t@ILogService protected readonly logService: ILogService,\n\t\t@IProductService protected readonly productService: IProductService\n\t) {\n\t\tsuper();\n\t\tthis._register(toDisposable(() => {\n\t\t\tthis.installingExtensions.forEach(task => task.cancel());\n\t\t\tthis.uninstallingExtensions.forEach(promise => promise.cancel());\n\t\t\tthis.installingExtensions.clear();\n\t\t\tthis.uninstallingExtensions.clear();\n\t\t}));\n\t}\n\n\tasync canInstall(extension: IGalleryExtension): Promise<boolean> {\n\t\tconst currentTargetPlatform = await this.getTargetPlatform();\n\t\treturn extension.allTargetPlatforms.some(targetPlatform => isTargetPlatformCompatible(targetPlatform, extension.allTargetPlatforms, currentTargetPlatform));\n\t}\n\n\tasync installFromGallery(extension: IGalleryExtension, options: InstallOptions = {}): Promise<ILocalExtension> {\n\t\ttry {\n\t\t\tif (!this.galleryService.isEnabled()) {\n\t\t\t\tthrow new ExtensionManagementError(nls.localize('MarketPlaceDisabled', \"Marketplace is not enabled\"), ExtensionManagementErrorCode.Internal);\n\t\t\t}\n\t\t\tconst compatible = await this.checkAndGetCompatibleVersion(extension, !options.installGivenVersion, !!options.installPreReleaseVersion);\n\t\t\treturn await this.installExtension(compatible.manifest, compatible.extension, options);\n\t\t} catch (error) {\n\t\t\treportTelemetry(this.telemetryService, 'extensionGallery:install', getGalleryExtensionTelemetryData(extension), undefined, error);\n\t\t\tthis.logService.error(`Failed to install extension.`, extension.identifier.id);\n\t\t\tthis.logService.error(error);\n\t\t\tthrow toExtensionManagementError(error);\n\t\t}\n\t}\n\n\tasync migrateUnsupportedExtensions(): Promise<void> {\n\t\ttry {\n\t\t\tconst extensionsControlManifest = await this.getExtensionsControlManifest();\n\t\t\tif (!extensionsControlManifest.unsupportedPreReleaseExtensions) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst installed = await this.getInstalled(ExtensionType.User);\n\t\t\tfor (const [unsupportedPreReleaseExtensionId, preReleaseExtension] of Object.entries(extensionsControlManifest.unsupportedPreReleaseExtensions)) {\n\t\t\t\tconst local = installed.find(i => areSameExtensions(i.identifier, { id: unsupportedPreReleaseExtensionId }));\n\t\t\t\tif (!local) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst gallery = await this.galleryService.getCompatibleExtension({ id: preReleaseExtension.id }, true, await this.getTargetPlatform());\n\t\t\t\tif (!gallery) {\n\t\t\t\t\tthis.logService.info(`Skipping migrating '${local.identifier.id}' extension because, the comaptible target '${preReleaseExtension.id}' extension is not found`);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst manifest = await this.galleryService.getManifest(gallery, CancellationToken.None);\n\t\t\t\tif (!manifest) {\n\t\t\t\t\tthis.logService.info(`Skipping migrating '${local.identifier.id}' extension because, the manifest for '${preReleaseExtension.id}' extension is not found`);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tthis.logService.info(`Migrating '${local.identifier.id}' extension to '${preReleaseExtension.id}' extension...`);\n\t\t\t\t\tawait Promise.allSettled([\n\t\t\t\t\t\tthis.uninstall(local),\n\t\t\t\t\t\tthis.installExtension(manifest, gallery, { installPreReleaseVersion: true, isMachineScoped: local.isMachineScoped, operation: InstallOperation.Migrate })\n\t\t\t\t\t]);\n\t\t\t\t\tthis.logService.info(`Migrated '${local.identifier.id}' extension to '${preReleaseExtension.id}' extension.`);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t}\n\t}\n\n\tasync uninstall(extension: ILocalExtension, options: UninstallOptions = {}): Promise<void> {\n\t\tthis.logService.trace('ExtensionManagementService#uninstall', extension.identifier.id);\n\t\treturn this.unininstallExtension(extension, options);\n\t}\n\n\tasync reinstallFromGallery(extension: ILocalExtension): Promise<void> {\n\t\tthis.logService.trace('ExtensionManagementService#reinstallFromGallery', extension.identifier.id);\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\tthrow new Error(nls.localize('MarketPlaceDisabled', \"Marketplace is not enabled\"));\n\t\t}\n\n\t\tconst galleryExtension = await this.findGalleryExtension(extension);\n\t\tif (!galleryExtension) {\n\t\t\tthrow new Error(nls.localize('Not a Marketplace extension', \"Only Marketplace Extensions can be reinstalled\"));\n\t\t}\n\n\t\tawait this.createUninstallExtensionTask(extension, { remove: true, versionOnly: true }).run();\n\t\tawait this.installFromGallery(galleryExtension);\n\t}\n\n\tgetExtensionsControlManifest(): Promise<IExtensionsControlManifest> {\n\t\tconst now = new Date().getTime();\n\n\t\tif (!this.extensionsControlManifest || now - this.lastReportTimestamp > 1000 * 60 * 5) { // 5 minute cache freshness\n\t\t\tthis.extensionsControlManifest = this.updateControlCache();\n\t\t\tthis.lastReportTimestamp = now;\n\t\t}\n\n\t\treturn this.extensionsControlManifest;\n\t}\n\n\tregisterParticipant(participant: IExtensionManagementParticipant): void {\n\t\tthis.participants.push(participant);\n\t}\n\n\tprotected async installExtension(manifest: IExtensionManifest, extension: URI | IGalleryExtension, options: InstallOptions & InstallVSIXOptions & { operation?: InstallOperation }): Promise<ILocalExtension> {\n\t\t// only cache gallery extensions tasks\n\t\tif (!URI.isUri(extension)) {\n\t\t\tlet installExtensionTask = this.installingExtensions.get(new ExtensionIdentifierWithVersion(extension.identifier, extension.version).key());\n\t\t\tif (installExtensionTask) {\n\t\t\t\tthis.logService.info('Extensions is already requested to install', extension.identifier.id);\n\t\t\t\treturn installExtensionTask.waitUntilTaskIsFinished();\n\t\t\t}\n\t\t\toptions = { ...options, installOnlyNewlyAddedFromExtensionPack: true /* always true for gallery extensions */ };\n\t\t}\n\n\t\tconst allInstallExtensionTasks: { task: IInstallExtensionTask, manifest: IExtensionManifest }[] = [];\n\t\tconst installResults: (InstallExtensionResult & { local: ILocalExtension })[] = [];\n\t\tconst installExtensionTask = this.createInstallExtensionTask(manifest, extension, options);\n\t\tif (!URI.isUri(extension)) {\n\t\t\tthis.installingExtensions.set(new ExtensionIdentifierWithVersion(installExtensionTask.identifier, manifest.version).key(), installExtensionTask);\n\t\t}\n\t\tthis._onInstallExtension.fire({ identifier: installExtensionTask.identifier, source: extension });\n\t\tthis.logService.info('Installing extension:', installExtensionTask.identifier.id);\n\t\tallInstallExtensionTasks.push({ task: installExtensionTask, manifest });\n\t\tlet installExtensionHasDependents: boolean = false;\n\n\t\ttry {\n\t\t\tif (options.donotIncludePackAndDependencies) {\n\t\t\t\tthis.logService.info('Installing the extension without checking dependencies and pack', installExtensionTask.identifier.id);\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tconst allDepsAndPackExtensionsToInstall = await this.getAllDepsAndPackExtensionsToInstall(installExtensionTask.identifier, manifest, !!options.installOnlyNewlyAddedFromExtensionPack, !!options.installPreReleaseVersion);\n\t\t\t\t\tfor (const { gallery, manifest } of allDepsAndPackExtensionsToInstall) {\n\t\t\t\t\t\tinstallExtensionHasDependents = installExtensionHasDependents || !!manifest.extensionDependencies?.some(id => areSameExtensions({ id }, installExtensionTask.identifier));\n\t\t\t\t\t\tif (this.installingExtensions.has(new ExtensionIdentifierWithVersion(gallery.identifier, gallery.version).key())) {\n\t\t\t\t\t\t\tthis.logService.info('Extension is already requested to install', gallery.identifier.id);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst task = this.createInstallExtensionTask(manifest, gallery, { ...options, donotIncludePackAndDependencies: true });\n\t\t\t\t\t\t\tthis.installingExtensions.set(new ExtensionIdentifierWithVersion(task.identifier, manifest.version).key(), task);\n\t\t\t\t\t\t\tthis._onInstallExtension.fire({ identifier: task.identifier, source: gallery });\n\t\t\t\t\t\t\tthis.logService.info('Installing extension:', task.identifier.id);\n\t\t\t\t\t\t\tallInstallExtensionTasks.push({ task, manifest });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// Installing through VSIX\n\t\t\t\t\tif (URI.isUri(installExtensionTask.source)) {\n\t\t\t\t\t\t// Ignore installing dependencies and packs\n\t\t\t\t\t\tif (isNonEmptyArray(manifest.extensionDependencies)) {\n\t\t\t\t\t\t\tthis.logService.warn(`Cannot install dependencies of extension:`, installExtensionTask.identifier.id, error.message);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (isNonEmptyArray(manifest.extensionPack)) {\n\t\t\t\t\t\t\tthis.logService.warn(`Cannot install packed extensions of extension:`, installExtensionTask.identifier.id, error.message);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.logService.error('Error while preparing to install dependencies and extension packs of the extension:', installExtensionTask.identifier.id);\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst extensionsToInstallMap = allInstallExtensionTasks.reduce((result, { task, manifest }) => {\n\t\t\t\tresult.set(task.identifier.id.toLowerCase(), { task, manifest });\n\t\t\t\treturn result;\n\t\t\t}, new Map<string, { task: IInstallExtensionTask, manifest: IExtensionManifest }>());\n\n\t\t\twhile (extensionsToInstallMap.size) {\n\t\t\t\tlet extensionsToInstall;\n\t\t\t\tconst extensionsWithoutDepsToInstall = [...extensionsToInstallMap.values()].filter(({ manifest }) => !manifest.extensionDependencies?.some(id => extensionsToInstallMap.has(id.toLowerCase())));\n\t\t\t\tif (extensionsWithoutDepsToInstall.length) {\n\t\t\t\t\textensionsToInstall = extensionsToInstallMap.size === 1 ? extensionsWithoutDepsToInstall\n\t\t\t\t\t\t/* If the main extension has no dependents remove it and install it at the end */\n\t\t\t\t\t\t: extensionsWithoutDepsToInstall.filter(({ task }) => !(task === installExtensionTask && !installExtensionHasDependents));\n\t\t\t\t} else {\n\t\t\t\t\tthis.logService.info('Found extensions with circular dependencies', extensionsWithoutDepsToInstall.map(({ task }) => task.identifier.id));\n\t\t\t\t\textensionsToInstall = [...extensionsToInstallMap.values()];\n\t\t\t\t}\n\n\t\t\t\t// Install extensions in parallel and wait until all extensions are installed / failed\n\t\t\t\tawait this.joinAllSettled(extensionsToInstall.map(async ({ task }) => {\n\t\t\t\t\tconst startTime = new Date().getTime();\n\t\t\t\t\tconst operation = isUndefined(options.operation) ? task.operation : options.operation;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst local = await task.run();\n\t\t\t\t\t\tawait this.joinAllSettled(this.participants.map(participant => participant.postInstall(local, task.source, options, CancellationToken.None)));\n\t\t\t\t\t\tif (!URI.isUri(task.source)) {\n\t\t\t\t\t\t\treportTelemetry(this.telemetryService, operation === InstallOperation.Update ? 'extensionGallery:update' : 'extensionGallery:install', getGalleryExtensionTelemetryData(task.source), new Date().getTime() - startTime, undefined);\n\t\t\t\t\t\t\t// In web, report extension install statistics explicitly. In Desktop, statistics are automatically updated while downloading the VSIX.\n\t\t\t\t\t\t\tif (isWeb && operation !== InstallOperation.Update) {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tawait this.galleryService.reportStatistic(local.manifest.publisher, local.manifest.name, local.manifest.version, StatisticType.Install);\n\t\t\t\t\t\t\t\t} catch (error) { /* ignore */ }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinstallResults.push({ local, identifier: task.identifier, operation, source: task.source });\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tif (!URI.isUri(task.source)) {\n\t\t\t\t\t\t\treportTelemetry(this.telemetryService, operation === InstallOperation.Update ? 'extensionGallery:update' : 'extensionGallery:install', getGalleryExtensionTelemetryData(task.source), new Date().getTime() - startTime, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.logService.error('Error while installing the extension:', task.identifier.id);\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t} finally { extensionsToInstallMap.delete(task.identifier.id.toLowerCase()); }\n\t\t\t\t}));\n\t\t\t}\n\n\t\t\tinstallResults.forEach(({ identifier }) => this.logService.info(`Extension installed successfully:`, identifier.id));\n\t\t\tthis._onDidInstallExtensions.fire(installResults);\n\t\t\treturn installResults.filter(({ identifier }) => areSameExtensions(identifier, installExtensionTask.identifier))[0].local;\n\n\t\t} catch (error) {\n\n\t\t\t// cancel all tasks\n\t\t\tallInstallExtensionTasks.forEach(({ task }) => task.cancel());\n\n\t\t\t// rollback installed extensions\n\t\t\tif (installResults.length) {\n\t\t\t\ttry {\n\t\t\t\t\tconst result = await Promise.allSettled(installResults.map(({ local }) => this.createUninstallExtensionTask(local, { versionOnly: true }).run()));\n\t\t\t\t\tfor (let index = 0; index < result.length; index++) {\n\t\t\t\t\t\tconst r = result[index];\n\t\t\t\t\t\tconst { identifier } = installResults[index];\n\t\t\t\t\t\tif (r.status === 'fulfilled') {\n\t\t\t\t\t\t\tthis.logService.info('Rollback: Uninstalled extension', identifier.id);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.logService.warn('Rollback: Error while uninstalling extension', identifier.id, getErrorMessage(r.reason));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// ignore error\n\t\t\t\t\tthis.logService.warn('Error while rolling back extensions', getErrorMessage(error), installResults.map(({ identifier }) => identifier.id));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._onDidInstallExtensions.fire(allInstallExtensionTasks.map(({ task }) => ({ identifier: task.identifier, operation: InstallOperation.Install, source: task.source })));\n\t\t\tthrow error;\n\t\t} finally {\n\t\t\t/* Remove the gallery tasks from the cache */\n\t\t\tfor (const { task, manifest } of allInstallExtensionTasks) {\n\t\t\t\tif (!URI.isUri(task.source)) {\n\t\t\t\t\tconst key = new ExtensionIdentifierWithVersion(task.identifier, manifest.version).key();\n\t\t\t\t\tif (!this.installingExtensions.delete(key)) {\n\t\t\t\t\t\tthis.logService.warn('Installation task is not found in the cache', key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async joinAllSettled<T>(promises: Promise<T>[]): Promise<T[]> {\n\t\tconst results: T[] = [];\n\t\tconst errors: any[] = [];\n\t\tconst promiseResults = await Promise.allSettled(promises);\n\t\tfor (const r of promiseResults) {\n\t\t\tif (r.status === 'fulfilled') {\n\t\t\t\tresults.push(r.value);\n\t\t\t} else {\n\t\t\t\terrors.push(r.reason);\n\t\t\t}\n\t\t}\n\t\t// If there are errors, throw the error.\n\t\tif (errors.length) { throw joinErrors(errors); }\n\t\treturn results;\n\t}\n\n\tprivate async getAllDepsAndPackExtensionsToInstall(extensionIdentifier: IExtensionIdentifier, manifest: IExtensionManifest, getOnlyNewlyAddedFromExtensionPack: boolean, installPreRelease: boolean): Promise<{ gallery: IGalleryExtension, manifest: IExtensionManifest }[]> {\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\treturn [];\n\t\t}\n\n\t\tlet installed = await this.getInstalled();\n\t\tconst knownIdentifiers = [extensionIdentifier, ...(installed).map(i => i.identifier)];\n\n\t\tconst allDependenciesAndPacks: { gallery: IGalleryExtension, manifest: IExtensionManifest }[] = [];\n\t\tconst collectDependenciesAndPackExtensionsToInstall = async (extensionIdentifier: IExtensionIdentifier, manifest: IExtensionManifest): Promise<void> => {\n\t\t\tconst dependecies: string[] = manifest.extensionDependencies || [];\n\t\t\tconst dependenciesAndPackExtensions = [...dependecies];\n\t\t\tif (manifest.extensionPack) {\n\t\t\t\tconst existing = getOnlyNewlyAddedFromExtensionPack ? installed.find(e => areSameExtensions(e.identifier, extensionIdentifier)) : undefined;\n\t\t\t\tfor (const extension of manifest.extensionPack) {\n\t\t\t\t\t// add only those extensions which are new in currently installed extension\n\t\t\t\t\tif (!(existing && existing.manifest.extensionPack && existing.manifest.extensionPack.some(old => areSameExtensions({ id: old }, { id: extension })))) {\n\t\t\t\t\t\tif (dependenciesAndPackExtensions.every(e => !areSameExtensions({ id: e }, { id: extension }))) {\n\t\t\t\t\t\t\tdependenciesAndPackExtensions.push(extension);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (dependenciesAndPackExtensions.length) {\n\t\t\t\t// filter out installed and known extensions\n\t\t\t\tconst identifiers = [...knownIdentifiers, ...allDependenciesAndPacks.map(r => r.gallery.identifier)];\n\t\t\t\tconst names = dependenciesAndPackExtensions.filter(id => identifiers.every(galleryIdentifier => !areSameExtensions(galleryIdentifier, { id })));\n\t\t\t\tif (names.length) {\n\t\t\t\t\tconst galleryResult = await this.galleryService.query({ names, pageSize: dependenciesAndPackExtensions.length }, CancellationToken.None);\n\t\t\t\t\tfor (const galleryExtension of galleryResult.firstPage) {\n\t\t\t\t\t\tif (identifiers.find(identifier => areSameExtensions(identifier, galleryExtension.identifier))) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst isDependency = dependecies.some(id => areSameExtensions({ id }, galleryExtension.identifier));\n\t\t\t\t\t\tlet compatible;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tcompatible = await this.checkAndGetCompatibleVersion(galleryExtension, true, installPreRelease);\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tif (error instanceof ExtensionManagementError && error.code === ExtensionManagementErrorCode.IncompatibleTargetPlatform && !isDependency) {\n\t\t\t\t\t\t\t\tthis.logService.info('Skipping the packed extension as it cannot be installed', galleryExtension.identifier.id);\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tallDependenciesAndPacks.push({ gallery: compatible.extension, manifest: compatible.manifest });\n\t\t\t\t\t\tawait collectDependenciesAndPackExtensionsToInstall(compatible.extension.identifier, manifest);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tawait collectDependenciesAndPackExtensionsToInstall(extensionIdentifier, manifest);\n\t\tinstalled = await this.getInstalled();\n\t\treturn allDependenciesAndPacks.filter(e => !installed.some(i => areSameExtensions(i.identifier, e.gallery.identifier)));\n\t}\n\n\tprivate async checkAndGetCompatibleVersion(extension: IGalleryExtension, fetchCompatibleVersion: boolean, installPreRelease: boolean): Promise<{ extension: IGalleryExtension, manifest: IExtensionManifest }> {\n\t\tconst report = await this.getExtensionsControlManifest();\n\t\tif (getMaliciousExtensionsSet(report).has(extension.identifier.id)) {\n\t\t\tthrow new ExtensionManagementError(nls.localize('malicious extension', \"Can't install '{0}' extension since it was reported to be problematic.\", extension.identifier.id), ExtensionManagementErrorCode.Malicious);\n\t\t}\n\n\t\tif (!!report.unsupportedPreReleaseExtensions && !!report.unsupportedPreReleaseExtensions[extension.identifier.id]) {\n\t\t\tthrow new ExtensionManagementError(nls.localize('unsupported prerelease extension', \"Can't install '{0}' extension because it is no longer supported. It is now part of the '{1}' extension as a pre-release version.\", extension.identifier.id, report.unsupportedPreReleaseExtensions[extension.identifier.id].displayName), ExtensionManagementErrorCode.UnsupportedPreRelease);\n\t\t}\n\n\t\tif (!await this.canInstall(extension)) {\n\t\t\tconst targetPlatform = await this.getTargetPlatform();\n\t\t\tthrow new ExtensionManagementError(nls.localize('incompatible platform', \"The '{0}' extension is not available in {1} for {2}.\", extension.identifier.id, this.productService.nameLong, TargetPlatformToString(targetPlatform)), ExtensionManagementErrorCode.IncompatibleTargetPlatform);\n\t\t}\n\n\t\tconst compatibleExtension = await this.getCompatibleVersion(extension, fetchCompatibleVersion, installPreRelease);\n\t\tif (compatibleExtension) {\n\t\t\tif (installPreRelease && extension.hasPreReleaseVersion && !compatibleExtension.properties.isPreReleaseVersion) {\n\t\t\t\tthrow new ExtensionManagementError(nls.localize('notFoundCompatiblePrereleaseDependency', \"Can't install pre-release version of '{0}' extension because it is not compatible with the current version of {1} (version {2}).\", extension.identifier.id, this.productService.nameLong, this.productService.version), ExtensionManagementErrorCode.IncompatiblePreRelease);\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new ExtensionManagementError(nls.localize('notFoundCompatibleDependency', \"Can't install '{0}' extension because it is not compatible with the current version of {1} (version {2}).\", extension.identifier.id, this.productService.nameLong, this.productService.version), ExtensionManagementErrorCode.Incompatible);\n\t\t}\n\n\t\tconst manifest = await this.galleryService.getManifest(compatibleExtension, CancellationToken.None);\n\t\tif (manifest === null) {\n\t\t\tthrow new ExtensionManagementError(`Missing manifest for extension ${extension.identifier.id}`, ExtensionManagementErrorCode.Invalid);\n\t\t}\n\n\t\tif (manifest.version !== compatibleExtension.version) {\n\t\t\tthrow new ExtensionManagementError(`Cannot install '${extension.identifier.id}' extension because of version mismatch in Marketplace`, ExtensionManagementErrorCode.Invalid);\n\t\t}\n\n\t\treturn { extension: compatibleExtension, manifest };\n\t}\n\n\tprotected async getCompatibleVersion(extension: IGalleryExtension, fetchCompatibleVersion: boolean, includePreRelease: boolean): Promise<IGalleryExtension | null> {\n\t\tconst targetPlatform = await this.getTargetPlatform();\n\t\tlet compatibleExtension: IGalleryExtension | null = null;\n\n\t\tif (fetchCompatibleVersion && extension.hasPreReleaseVersion && extension.properties.isPreReleaseVersion !== includePreRelease) {\n\t\t\tcompatibleExtension = await this.galleryService.getCompatibleExtension(extension.identifier, includePreRelease, targetPlatform);\n\t\t}\n\n\t\tif (!compatibleExtension && await this.galleryService.isExtensionCompatible(extension, includePreRelease, targetPlatform)) {\n\t\t\tcompatibleExtension = extension;\n\t\t}\n\n\t\tif (!compatibleExtension && fetchCompatibleVersion) {\n\t\t\tcompatibleExtension = await this.galleryService.getCompatibleExtension(extension, includePreRelease, targetPlatform);\n\t\t}\n\n\t\treturn compatibleExtension;\n\t}\n\n\tprivate async unininstallExtension(extension: ILocalExtension, options: UninstallOptions): Promise<void> {\n\t\tconst uninstallExtensionTask = this.uninstallingExtensions.get(extension.identifier.id.toLowerCase());\n\t\tif (uninstallExtensionTask) {\n\t\t\tthis.logService.info('Extensions is already requested to uninstall', extension.identifier.id);\n\t\t\treturn uninstallExtensionTask.waitUntilTaskIsFinished();\n\t\t}\n\n\t\tconst createUninstallExtensionTask = (extension: ILocalExtension, options: UninstallExtensionTaskOptions): IUninstallExtensionTask => {\n\t\t\tconst uninstallExtensionTask = this.createUninstallExtensionTask(extension, options);\n\t\t\tthis.uninstallingExtensions.set(uninstallExtensionTask.extension.identifier.id.toLowerCase(), uninstallExtensionTask);\n\t\t\tthis.logService.info('Uninstalling extension:', extension.identifier.id);\n\t\t\tthis._onUninstallExtension.fire(extension.identifier);\n\t\t\treturn uninstallExtensionTask;\n\t\t};\n\n\t\tconst postUninstallExtension = (extension: ILocalExtension, error?: ExtensionManagementError): void => {\n\t\t\tif (error) {\n\t\t\t\tthis.logService.error('Failed to uninstall extension:', extension.identifier.id, error.message);\n\t\t\t} else {\n\t\t\t\tthis.logService.info('Successfully uninstalled extension:', extension.identifier.id);\n\t\t\t}\n\t\t\treportTelemetry(this.telemetryService, 'extensionGallery:uninstall', getLocalExtensionTelemetryData(extension), undefined, error);\n\t\t\tthis._onDidUninstallExtension.fire({ identifier: extension.identifier, error: error?.code });\n\t\t};\n\n\t\tconst allTasks: IUninstallExtensionTask[] = [];\n\t\tconst processedTasks: IUninstallExtensionTask[] = [];\n\n\t\ttry {\n\t\t\tallTasks.push(createUninstallExtensionTask(extension, {}));\n\t\t\tconst installed = await this.getInstalled(ExtensionType.User);\n\n\t\t\tif (options.donotIncludePack) {\n\t\t\t\tthis.logService.info('Uninstalling the extension without including packed extension', extension.identifier.id);\n\t\t\t} else {\n\t\t\t\tconst packedExtensions = this.getAllPackExtensionsToUninstall(extension, installed);\n\t\t\t\tfor (const packedExtension of packedExtensions) {\n\t\t\t\t\tif (this.uninstallingExtensions.has(packedExtension.identifier.id.toLowerCase())) {\n\t\t\t\t\t\tthis.logService.info('Extensions is already requested to uninstall', packedExtension.identifier.id);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tallTasks.push(createUninstallExtensionTask(packedExtension, {}));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (options.donotCheckDependents) {\n\t\t\t\tthis.logService.info('Uninstalling the extension without checking dependents', extension.identifier.id);\n\t\t\t} else {\n\t\t\t\tthis.checkForDependents(allTasks.map(task => task.extension), installed, extension);\n\t\t\t}\n\n\t\t\t// Uninstall extensions in parallel and wait until all extensions are uninstalled / failed\n\t\t\tawait this.joinAllSettled(allTasks.map(async task => {\n\t\t\t\ttry {\n\t\t\t\t\tawait task.run();\n\t\t\t\t\tawait this.joinAllSettled(this.participants.map(participant => participant.postUninstall(task.extension, options, CancellationToken.None)));\n\t\t\t\t\t// only report if extension has a mapped gallery extension. UUID identifies the gallery extension.\n\t\t\t\t\tif (task.extension.identifier.uuid) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait this.galleryService.reportStatistic(task.extension.manifest.publisher, task.extension.manifest.name, task.extension.manifest.version, StatisticType.Uninstall);\n\t\t\t\t\t\t} catch (error) { /* ignore */ }\n\t\t\t\t\t}\n\t\t\t\t\tpostUninstallExtension(task.extension);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconst error = e instanceof ExtensionManagementError ? e : new ExtensionManagementError(getErrorMessage(e), ExtensionManagementErrorCode.Internal);\n\t\t\t\t\tpostUninstallExtension(task.extension, error);\n\t\t\t\t\tthrow error;\n\t\t\t\t} finally {\n\t\t\t\t\tprocessedTasks.push(task);\n\t\t\t\t}\n\t\t\t}));\n\n\t\t} catch (e) {\n\t\t\tconst error = e instanceof ExtensionManagementError ? e : new ExtensionManagementError(getErrorMessage(e), ExtensionManagementErrorCode.Internal);\n\t\t\tfor (const task of allTasks) {\n\t\t\t\t// cancel the tasks\n\t\t\t\ttry { task.cancel(); } catch (error) { /* ignore */ }\n\t\t\t\tif (!processedTasks.includes(task)) {\n\t\t\t\t\tpostUninstallExtension(task.extension, error);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrow error;\n\t\t} finally {\n\t\t\t// Remove tasks from cache\n\t\t\tfor (const task of allTasks) {\n\t\t\t\tif (!this.uninstallingExtensions.delete(task.extension.identifier.id.toLowerCase())) {\n\t\t\t\t\tthis.logService.warn('Uninstallation task is not found in the cache', task.extension.identifier.id);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate checkForDependents(extensionsToUninstall: ILocalExtension[], installed: ILocalExtension[], extensionToUninstall: ILocalExtension): void {\n\t\tfor (const extension of extensionsToUninstall) {\n\t\t\tconst dependents = this.getDependents(extension, installed);\n\t\t\tif (dependents.length) {\n\t\t\t\tconst remainingDependents = dependents.filter(dependent => !extensionsToUninstall.some(e => areSameExtensions(e.identifier, dependent.identifier)));\n\t\t\t\tif (remainingDependents.length) {\n\t\t\t\t\tthrow new Error(this.getDependentsErrorMessage(extension, remainingDependents, extensionToUninstall));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getDependentsErrorMessage(dependingExtension: ILocalExtension, dependents: ILocalExtension[], extensionToUninstall: ILocalExtension): string {\n\t\tif (extensionToUninstall === dependingExtension) {\n\t\t\tif (dependents.length === 1) {\n\t\t\t\treturn nls.localize('singleDependentError', \"Cannot uninstall '{0}' extension. '{1}' extension depends on this.\",\n\t\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name);\n\t\t\t}\n\t\t\tif (dependents.length === 2) {\n\t\t\t\treturn nls.localize('twoDependentsError', \"Cannot uninstall '{0}' extension. '{1}' and '{2}' extensions depend on this.\",\n\t\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t\t\t}\n\t\t\treturn nls.localize('multipleDependentsError', \"Cannot uninstall '{0}' extension. '{1}', '{2}' and other extension depend on this.\",\n\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t\t}\n\t\tif (dependents.length === 1) {\n\t\t\treturn nls.localize('singleIndirectDependentError', \"Cannot uninstall '{0}' extension . It includes uninstalling '{1}' extension and '{2}' extension depends on this.\",\n\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependingExtension.manifest.displayName\n\t\t\t|| dependingExtension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name);\n\t\t}\n\t\tif (dependents.length === 2) {\n\t\t\treturn nls.localize('twoIndirectDependentsError', \"Cannot uninstall '{0}' extension. It includes uninstalling '{1}' extension and '{2}' and '{3}' extensions depend on this.\",\n\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependingExtension.manifest.displayName\n\t\t\t|| dependingExtension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t\t}\n\t\treturn nls.localize('multipleIndirectDependentsError', \"Cannot uninstall '{0}' extension. It includes uninstalling '{1}' extension and '{2}', '{3}' and other extensions depend on this.\",\n\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependingExtension.manifest.displayName\n\t\t|| dependingExtension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\n\t}\n\n\tprivate getAllPackExtensionsToUninstall(extension: ILocalExtension, installed: ILocalExtension[], checked: ILocalExtension[] = []): ILocalExtension[] {\n\t\tif (checked.indexOf(extension) !== -1) {\n\t\t\treturn [];\n\t\t}\n\t\tchecked.push(extension);\n\t\tconst extensionsPack = extension.manifest.extensionPack ? extension.manifest.extensionPack : [];\n\t\tif (extensionsPack.length) {\n\t\t\tconst packedExtensions = installed.filter(i => !i.isBuiltin && extensionsPack.some(id => areSameExtensions({ id }, i.identifier)));\n\t\t\tconst packOfPackedExtensions: ILocalExtension[] = [];\n\t\t\tfor (const packedExtension of packedExtensions) {\n\t\t\t\tpackOfPackedExtensions.push(...this.getAllPackExtensionsToUninstall(packedExtension, installed, checked));\n\t\t\t}\n\t\t\treturn [...packedExtensions, ...packOfPackedExtensions];\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate getDependents(extension: ILocalExtension, installed: ILocalExtension[]): ILocalExtension[] {\n\t\treturn installed.filter(e => e.manifest.extensionDependencies && e.manifest.extensionDependencies.some(id => areSameExtensions({ id }, extension.identifier)));\n\t}\n\n\tprivate async findGalleryExtension(local: ILocalExtension): Promise<IGalleryExtension> {\n\t\tif (local.identifier.uuid) {\n\t\t\tconst galleryExtension = await this.findGalleryExtensionById(local.identifier.uuid);\n\t\t\treturn galleryExtension ? galleryExtension : this.findGalleryExtensionByName(local.identifier.id);\n\t\t}\n\t\treturn this.findGalleryExtensionByName(local.identifier.id);\n\t}\n\n\tprivate async findGalleryExtensionById(uuid: string): Promise<IGalleryExtension> {\n\t\tconst galleryResult = await this.galleryService.query({ ids: [uuid], pageSize: 1 }, CancellationToken.None);\n\t\treturn galleryResult.firstPage[0];\n\t}\n\n\tprivate async findGalleryExtensionByName(name: string): Promise<IGalleryExtension> {\n\t\tconst galleryResult = await this.galleryService.query({ names: [name], pageSize: 1 }, CancellationToken.None);\n\t\treturn galleryResult.firstPage[0];\n\t}\n\n\tprivate async updateControlCache(): Promise<IExtensionsControlManifest> {\n\t\ttry {\n\t\t\tthis.logService.trace('ExtensionManagementService.refreshReportedCache');\n\t\t\tconst manifest = await this.galleryService.getExtensionsControlManifest();\n\t\t\tthis.logService.trace(`ExtensionManagementService.refreshControlCache`, manifest);\n\t\t\treturn manifest;\n\t\t} catch (err) {\n\t\t\tthis.logService.trace('ExtensionManagementService.refreshControlCache - failed to get extension control manifest');\n\t\t\treturn { malicious: [] };\n\t\t}\n\t}\n\n\tabstract getTargetPlatform(): Promise<TargetPlatform>;\n\tabstract zip(extension: ILocalExtension): Promise<URI>;\n\tabstract unzip(zipLocation: URI): Promise<IExtensionIdentifier>;\n\tabstract getManifest(vsix: URI): Promise<IExtensionManifest>;\n\tabstract install(vsix: URI, options?: InstallVSIXOptions): Promise<ILocalExtension>;\n\tabstract getInstalled(type?: ExtensionType): Promise<ILocalExtension[]>;\n\n\tabstract updateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension>;\n\tabstract updateExtensionScope(local: ILocalExtension, isMachineScoped: boolean): Promise<ILocalExtension>;\n\n\tprotected abstract createInstallExtensionTask(manifest: IExtensionManifest, extension: URI | IGalleryExtension, options: InstallOptions & InstallVSIXOptions): IInstallExtensionTask;\n\tprotected abstract createUninstallExtensionTask(extension: ILocalExtension, options: UninstallExtensionTaskOptions): IUninstallExtensionTask;\n}\n\nexport function joinErrors(errorOrErrors: (Error | string) | (Array<Error | string>)): Error {\n\tconst errors = Array.isArray(errorOrErrors) ? errorOrErrors : [errorOrErrors];\n\tif (errors.length === 1) {\n\t\treturn errors[0] instanceof Error ? <Error>errors[0] : new Error(<string>errors[0]);\n\t}\n\treturn errors.reduce<Error>((previousValue: Error, currentValue: Error | string) => {\n\t\treturn new Error(`${previousValue.message}${previousValue.message ? ',' : ''}${currentValue instanceof Error ? currentValue.message : currentValue}`);\n\t}, new Error(''));\n}\n\nfunction toExtensionManagementError(error: Error): ExtensionManagementError {\n\tif (error instanceof ExtensionManagementError) {\n\t\treturn error;\n\t}\n\tconst e = new ExtensionManagementError(error.message, ExtensionManagementErrorCode.Internal);\n\te.stack = error.stack;\n\treturn e;\n}\n\nexport function reportTelemetry(telemetryService: ITelemetryService, eventName: string, extensionData: any, duration?: number, error?: Error): void {\n\tconst errorcode = error ? error instanceof ExtensionManagementError ? error.code : ExtensionManagementErrorCode.Internal : undefined;\n\t/* __GDPR__\n\t\t\"extensionGallery:install\" : {\n\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\"recommendationReason\": { \"retiredFromVersion\": \"1.23.0\", \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\"${include}\": [\n\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t]\n\t\t}\n\t*/\n\t/* __GDPR__\n\t\t\"extensionGallery:uninstall\" : {\n\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\"${include}\": [\n\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t]\n\t\t}\n\t*/\n\t/* __GDPR__\n\t\t\"extensionGallery:update\" : {\n\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\"${include}\": [\n\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t]\n\t\t}\n\t*/\n\ttelemetryService.publicLogError(eventName, { ...extensionData, success: !error, duration, errorcode });\n}\n\nexport abstract class AbstractExtensionTask<T> {\n\n\tprivate readonly barrier = new Barrier();\n\tprivate cancellablePromise: CancelablePromise<T> | undefined;\n\n\tasync waitUntilTaskIsFinished(): Promise<T> {\n\t\tawait this.barrier.wait();\n\t\treturn this.cancellablePromise!;\n\t}\n\n\tasync run(): Promise<T> {\n\t\tif (!this.cancellablePromise) {\n\t\t\tthis.cancellablePromise = createCancelablePromise(token => this.doRun(token));\n\t\t}\n\t\tthis.barrier.open();\n\t\treturn this.cancellablePromise;\n\t}\n\n\tcancel(): void {\n\t\tif (!this.cancellablePromise) {\n\t\t\tthis.cancellablePromise = createCancelablePromise(token => {\n\t\t\t\treturn new Promise((c, e) => {\n\t\t\t\t\tconst disposable = token.onCancellationRequested(() => {\n\t\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\t\te(canceled());\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t\tthis.barrier.open();\n\t\t}\n\t\tthis.cancellablePromise.cancel();\n\t}\n\n\tprotected abstract doRun(token: CancellationToken): Promise<T>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { safeStringify } from 'vs/base/common/objects';\nimport { isObject } from 'vs/base/common/types';\nimport { ConfigurationTarget, ConfigurationTargetToString, IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ClassifiedEvent, GDPRClassification, StrictPropertyCheck } from 'vs/platform/telemetry/common/gdprTypings';\nimport { ICustomEndpointTelemetryService, ITelemetryData, ITelemetryEndpoint, ITelemetryInfo, ITelemetryService, TelemetryConfiguration, TelemetryLevel, TELEMETRY_OLD_SETTING_ID, TELEMETRY_SETTING_ID } from 'vs/platform/telemetry/common/telemetry';\n\nexport class NullTelemetryServiceShape implements ITelemetryService {\n\tdeclare readonly _serviceBrand: undefined;\n\treadonly sendErrorTelemetry = false;\n\n\tpublicLog(eventName: string, data?: ITelemetryData) {\n\t\treturn Promise.resolve(undefined);\n\t}\n\tpublicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>) {\n\t\treturn this.publicLog(eventName, data as ITelemetryData);\n\t}\n\tpublicLogError(eventName: string, data?: ITelemetryData) {\n\t\treturn Promise.resolve(undefined);\n\t}\n\tpublicLogError2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>) {\n\t\treturn this.publicLogError(eventName, data as ITelemetryData);\n\t}\n\n\tsetExperimentProperty() { }\n\ttelemetryLevel = TelemetryLevel.NONE;\n\tgetTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\treturn Promise.resolve({\n\t\t\tinstanceId: 'someValue.instanceId',\n\t\t\tsessionId: 'someValue.sessionId',\n\t\t\tmachineId: 'someValue.machineId',\n\t\t\tfirstSessionDate: 'someValue.firstSessionDate'\n\t\t});\n\t}\n}\n\nexport const NullTelemetryService = new NullTelemetryServiceShape();\n\nexport class NullEndpointTelemetryService implements ICustomEndpointTelemetryService {\n\t_serviceBrand: undefined;\n\n\tasync publicLog(_endpoint: ITelemetryEndpoint, _eventName: string, _data?: ITelemetryData): Promise<void> {\n\t\t// noop\n\t}\n\n\tasync publicLogError(_endpoint: ITelemetryEndpoint, _errorEventName: string, _data?: ITelemetryData): Promise<void> {\n\t\t// noop\n\t}\n}\n\nexport interface ITelemetryAppender {\n\tlog(eventName: string, data: any): void;\n\tflush(): Promise<any>;\n}\n\nexport const NullAppender: ITelemetryAppender = { log: () => null, flush: () => Promise.resolve(null) };\n\n\n/* __GDPR__FRAGMENT__\n\t\"URIDescriptor\" : {\n\t\t\"mimeType\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"scheme\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"ext\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"path\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t}\n*/\nexport interface URIDescriptor {\n\tmimeType?: string;\n\tscheme?: string;\n\text?: string;\n\tpath?: string;\n}\n\nexport function configurationTelemetry(telemetryService: ITelemetryService, configurationService: IConfigurationService): IDisposable {\n\treturn configurationService.onDidChangeConfiguration(event => {\n\t\tif (event.source !== ConfigurationTarget.DEFAULT) {\n\t\t\ttype UpdateConfigurationClassification = {\n\t\t\t\tconfigurationSource: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t\tconfigurationKeys: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t};\n\t\t\ttype UpdateConfigurationEvent = {\n\t\t\t\tconfigurationSource: string;\n\t\t\t\tconfigurationKeys: string[];\n\t\t\t};\n\t\t\ttelemetryService.publicLog2<UpdateConfigurationEvent, UpdateConfigurationClassification>('updateConfiguration', {\n\t\t\t\tconfigurationSource: ConfigurationTargetToString(event.source),\n\t\t\t\tconfigurationKeys: flattenKeys(event.sourceConfig)\n\t\t\t});\n\t\t}\n\t});\n}\n\n/**\n * Determines how telemetry is handled based on the current running configuration.\n * To log telemetry locally, the client must not disable telemetry via the CLI\n * If client is a built product and telemetry is enabled via the product.json, telemetry is supported\n * This function is only used to determine if telemetry contructs should occur, but is not impacted by user configuration\n *\n * @param productService\n * @param environmentService\n * @returns false - telemetry is completely disabled, true - telemetry is logged locally, but may not be sent\n */\nexport function supportsTelemetry(productService: IProductService, environmentService: IEnvironmentService): boolean {\n\treturn !(environmentService.disableTelemetry || !productService.enableTelemetry);\n}\n\n/**\n * Determines how telemetry is handled based on the user's configuration.\n *\n * @param configurationService\n * @returns OFF, ERROR, ON\n */\nexport function getTelemetryLevel(configurationService: IConfigurationService): TelemetryLevel {\n\tconst newConfig = configurationService.getValue<TelemetryConfiguration>(TELEMETRY_SETTING_ID);\n\tconst crashReporterConfig = configurationService.getValue<boolean | undefined>('telemetry.enableCrashReporter');\n\tconst oldConfig = configurationService.getValue<boolean | undefined>(TELEMETRY_OLD_SETTING_ID);\n\n\t// If `telemetry.enableCrashReporter` is false or `telemetry.enableTelemetry' is false, disable telemetry\n\tif (oldConfig === false || crashReporterConfig === false) {\n\t\treturn TelemetryLevel.NONE;\n\t}\n\n\t// Maps new telemetry setting to a telemetry level\n\tswitch (newConfig ?? TelemetryConfiguration.ON) {\n\t\tcase TelemetryConfiguration.ON:\n\t\t\treturn TelemetryLevel.USAGE;\n\t\tcase TelemetryConfiguration.ERROR:\n\t\t\treturn TelemetryLevel.ERROR;\n\t\tcase TelemetryConfiguration.CRASH:\n\t\t\treturn TelemetryLevel.CRASH;\n\t\tcase TelemetryConfiguration.OFF:\n\t\t\treturn TelemetryLevel.NONE;\n\t}\n}\n\nexport interface Properties {\n\t[key: string]: string;\n}\n\nexport interface Measurements {\n\t[key: string]: number;\n}\n\nexport function validateTelemetryData(data?: any): { properties: Properties, measurements: Measurements } {\n\n\tconst properties: Properties = Object.create(null);\n\tconst measurements: Measurements = Object.create(null);\n\n\tconst flat = Object.create(null);\n\tflatten(data, flat);\n\n\tfor (let prop in flat) {\n\t\t// enforce property names less than 150 char, take the last 150 char\n\t\tprop = prop.length > 150 ? prop.substr(prop.length - 149) : prop;\n\t\tconst value = flat[prop];\n\n\t\tif (typeof value === 'number') {\n\t\t\tmeasurements[prop] = value;\n\n\t\t} else if (typeof value === 'boolean') {\n\t\t\tmeasurements[prop] = value ? 1 : 0;\n\n\t\t} else if (typeof value === 'string') {\n\t\t\tif (value.length > 8192) {\n\t\t\t\tconsole.warn(`Telemetry property: ${prop} has been trimmed to 8192, the original length is ${value.length}`);\n\t\t\t}\n\t\t\t//enforce property value to be less than 8192 char, take the first 8192 char\n\t\t\t// https://docs.microsoft.com/en-us/azure/azure-monitor/app/api-custom-events-metrics#limits\n\t\t\tproperties[prop] = value.substring(0, 8191);\n\n\t\t} else if (typeof value !== 'undefined' && value !== null) {\n\t\t\tproperties[prop] = value;\n\t\t}\n\t}\n\n\treturn {\n\t\tproperties,\n\t\tmeasurements\n\t};\n}\n\nexport function cleanRemoteAuthority(remoteAuthority?: string): string {\n\tif (!remoteAuthority) {\n\t\treturn 'none';\n\t}\n\n\tlet ret = 'other';\n\tconst allowedAuthorities = ['ssh-remote', 'dev-container', 'attached-container', 'wsl'];\n\tallowedAuthorities.forEach((res: string) => {\n\t\tif (remoteAuthority!.indexOf(`${res}+`) === 0) {\n\t\t\tret = res;\n\t\t}\n\t});\n\n\treturn ret;\n}\n\nfunction flatten(obj: any, result: { [key: string]: any }, order: number = 0, prefix?: string): void {\n\tif (!obj) {\n\t\treturn;\n\t}\n\n\tfor (let item of Object.getOwnPropertyNames(obj)) {\n\t\tconst value = obj[item];\n\t\tconst index = prefix ? prefix + item : item;\n\n\t\tif (Array.isArray(value)) {\n\t\t\tresult[index] = safeStringify(value);\n\n\t\t} else if (value instanceof Date) {\n\t\t\t// TODO unsure why this is here and not in _getData\n\t\t\tresult[index] = value.toISOString();\n\n\t\t} else if (isObject(value)) {\n\t\t\tif (order < 2) {\n\t\t\t\tflatten(value, result, order + 1, index + '.');\n\t\t\t} else {\n\t\t\t\tresult[index] = safeStringify(value);\n\t\t\t}\n\t\t} else {\n\t\t\tresult[index] = value;\n\t\t}\n\t}\n}\n\nfunction flattenKeys(value: Object | undefined): string[] {\n\tif (!value) {\n\t\treturn [];\n\t}\n\tconst result: string[] = [];\n\tflatKeys(result, '', value);\n\treturn result;\n}\n\nfunction flatKeys(result: string[], prefix: string, value: { [key: string]: any } | undefined): void {\n\tif (value && typeof value === 'object' && !Array.isArray(value)) {\n\t\tObject.keys(value)\n\t\t\t.forEach(key => flatKeys(result, prefix ? `${prefix}.${key}` : key, value[key]));\n\t} else {\n\t\tresult.push(prefix);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { distinct } from 'vs/base/common/arrays';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { canceled, getErrorMessage, isPromiseCanceledError } from 'vs/base/common/errors';\nimport { getOrDefault } from 'vs/base/common/objects';\nimport { IPager } from 'vs/base/common/paging';\nimport { isWeb, platform } from 'vs/base/common/platform';\nimport { arch } from 'vs/base/common/process';\nimport { isBoolean } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { IHeaders, IRequestContext, IRequestOptions } from 'vs/base/parts/request/common/request';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { DefaultIconPath, getFallbackTargetPlarforms, getTargetPlatform, IExtensionGalleryService, IExtensionIdentifier, IExtensionIdentifierWithVersion, IGalleryExtension, IGalleryExtensionAsset, IGalleryExtensionAssets, IGalleryExtensionVersion, InstallOperation, IQueryOptions, IExtensionsControlManifest, isIExtensionIdentifier, isNotWebExtensionInWebTargetPlatform, isTargetPlatformCompatible, ITranslation, SortBy, SortOrder, StatisticType, TargetPlatform, toTargetPlatform, WEB_EXTENSION_TAG, IExtensionIdentifierWithPreRelease } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { adoptToGalleryExtensionId, areSameExtensions, getGalleryExtensionId, getGalleryExtensionTelemetryData } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\nimport { isEngineValid } from 'vs/platform/extensions/common/extensionValidator';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { asJson, asText, IRequestService, isSuccess } from 'vs/platform/request/common/request';\nimport { getServiceMachineId } from 'vs/platform/serviceMachineId/common/serviceMachineId';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { ITelemetryService, TelemetryLevel } from 'vs/platform/telemetry/common/telemetry';\nimport { getTelemetryLevel, supportsTelemetry } from 'vs/platform/telemetry/common/telemetryUtils';\n\nconst CURRENT_TARGET_PLATFORM = isWeb ? TargetPlatform.WEB : getTargetPlatform(platform, arch);\n\ninterface IRawGalleryExtensionFile {\n\treadonly assetType: string;\n\treadonly source: string;\n}\n\ninterface IRawGalleryExtensionProperty {\n\treadonly key: string;\n\treadonly value: string;\n}\n\nexport interface IRawGalleryExtensionVersion {\n\treadonly version: string;\n\treadonly lastUpdated: string;\n\treadonly assetUri: string;\n\treadonly fallbackAssetUri: string;\n\treadonly files: IRawGalleryExtensionFile[];\n\treadonly properties?: IRawGalleryExtensionProperty[];\n\treadonly targetPlatform?: string;\n}\n\ninterface IRawGalleryExtensionStatistics {\n\treadonly statisticName: string;\n\treadonly value: number;\n}\n\ninterface IRawGalleryExtensionPublisher {\n\treadonly displayName: string;\n\treadonly publisherId: string;\n\treadonly publisherName: string;\n\treadonly domain?: string | null;\n\treadonly isDomainVerified?: boolean;\n}\n\ninterface IRawGalleryExtension {\n\treadonly extensionId: string;\n\treadonly extensionName: string;\n\treadonly displayName: string;\n\treadonly shortDescription: string;\n\treadonly publisher: IRawGalleryExtensionPublisher;\n\treadonly versions: IRawGalleryExtensionVersion[];\n\treadonly statistics: IRawGalleryExtensionStatistics[];\n\treadonly tags: string[] | undefined;\n\treadonly releaseDate: string;\n\treadonly publishedDate: string;\n\treadonly lastUpdated: string;\n\treadonly categories: string[] | undefined;\n\treadonly flags: string;\n}\n\ninterface IRawGalleryQueryResult {\n\treadonly results: {\n\t\treadonly extensions: IRawGalleryExtension[];\n\t\treadonly resultMetadata: {\n\t\t\treadonly metadataType: string;\n\t\t\treadonly metadataItems: {\n\t\t\t\treadonly name: string;\n\t\t\t\treadonly count: number;\n\t\t\t}[];\n\t\t}[]\n\t}[];\n}\n\nenum Flags {\n\tNone = 0x0,\n\tIncludeVersions = 0x1,\n\tIncludeFiles = 0x2,\n\tIncludeCategoryAndTags = 0x4,\n\tIncludeSharedAccounts = 0x8,\n\tIncludeVersionProperties = 0x10,\n\tExcludeNonValidated = 0x20,\n\tIncludeInstallationTargets = 0x40,\n\tIncludeAssetUri = 0x80,\n\tIncludeStatistics = 0x100,\n\tIncludeLatestVersionOnly = 0x200,\n\tUnpublished = 0x1000\n}\n\nfunction flagsToString(...flags: Flags[]): string {\n\treturn String(flags.reduce((r, f) => r | f, 0));\n}\n\nenum FilterType {\n\tTag = 1,\n\tExtensionId = 4,\n\tCategory = 5,\n\tExtensionName = 7,\n\tTarget = 8,\n\tFeatured = 9,\n\tSearchText = 10,\n\tExcludeWithFlags = 12\n}\n\nconst AssetType = {\n\tIcon: 'Microsoft.VisualStudio.Services.Icons.Default',\n\tDetails: 'Microsoft.VisualStudio.Services.Content.Details',\n\tChangelog: 'Microsoft.VisualStudio.Services.Content.Changelog',\n\tManifest: 'Microsoft.VisualStudio.Code.Manifest',\n\tVSIX: 'Microsoft.VisualStudio.Services.VSIXPackage',\n\tLicense: 'Microsoft.VisualStudio.Services.Content.License',\n\tRepository: 'Microsoft.VisualStudio.Services.Links.Source'\n};\n\nconst PropertyType = {\n\tDependency: 'Microsoft.VisualStudio.Code.ExtensionDependencies',\n\tExtensionPack: 'Microsoft.VisualStudio.Code.ExtensionPack',\n\tEngine: 'Microsoft.VisualStudio.Code.Engine',\n\tPreRelease: 'Microsoft.VisualStudio.Code.PreRelease',\n\tLocalizedLanguages: 'Microsoft.VisualStudio.Code.LocalizedLanguages',\n\tWebExtension: 'Microsoft.VisualStudio.Code.WebExtension'\n};\n\ninterface ICriterium {\n\treadonly filterType: FilterType;\n\treadonly value?: string;\n}\n\nconst DefaultPageSize = 10;\n\ninterface IQueryState {\n\treadonly pageNumber: number;\n\treadonly pageSize: number;\n\treadonly sortBy: SortBy;\n\treadonly sortOrder: SortOrder;\n\treadonly flags: Flags;\n\treadonly criteria: ICriterium[];\n\treadonly assetTypes: string[];\n}\n\nconst DefaultQueryState: IQueryState = {\n\tpageNumber: 1,\n\tpageSize: DefaultPageSize,\n\tsortBy: SortBy.NoneOrRelevance,\n\tsortOrder: SortOrder.Default,\n\tflags: Flags.None,\n\tcriteria: [],\n\tassetTypes: []\n};\n\ntype GalleryServiceQueryClassification = {\n\treadonly filterTypes: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\treadonly sortBy: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\treadonly sortOrder: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\treadonly duration: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth', 'isMeasurement': true };\n\treadonly success: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\treadonly requestBodySize: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\treadonly responseBodySize?: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\treadonly statusCode?: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\treadonly errorCode?: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\treadonly count?: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n};\n\ntype QueryTelemetryData = {\n\treadonly filterTypes: string[];\n\treadonly sortBy: string;\n\treadonly sortOrder: string;\n};\n\ntype GalleryServiceQueryEvent = QueryTelemetryData & {\n\treadonly duration: number;\n\treadonly success: boolean;\n\treadonly requestBodySize: string;\n\treadonly responseBodySize?: string;\n\treadonly statusCode?: string;\n\treadonly errorCode?: string;\n\treadonly count?: string;\n};\n\ntype GalleryServicePreReleaseQueryClassification = {\n\treadonly duration: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth', 'isMeasurement': true };\n\treadonly count: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n};\n\ntype GalleryServicePreReleasesQueryEvent = {\n\treadonly duration: number;\n\treadonly count: number;\n};\n\nclass Query {\n\n\tconstructor(private state = DefaultQueryState) { }\n\n\tget pageNumber(): number { return this.state.pageNumber; }\n\tget pageSize(): number { return this.state.pageSize; }\n\tget sortBy(): number { return this.state.sortBy; }\n\tget sortOrder(): number { return this.state.sortOrder; }\n\tget flags(): number { return this.state.flags; }\n\n\twithPage(pageNumber: number, pageSize: number = this.state.pageSize): Query {\n\t\treturn new Query({ ...this.state, pageNumber, pageSize });\n\t}\n\n\twithFilter(filterType: FilterType, ...values: string[]): Query {\n\t\tconst criteria = [\n\t\t\t...this.state.criteria,\n\t\t\t...values.length ? values.map(value => ({ filterType, value })) : [{ filterType }]\n\t\t];\n\n\t\treturn new Query({ ...this.state, criteria });\n\t}\n\n\twithSortBy(sortBy: SortBy): Query {\n\t\treturn new Query({ ...this.state, sortBy });\n\t}\n\n\twithSortOrder(sortOrder: SortOrder): Query {\n\t\treturn new Query({ ...this.state, sortOrder });\n\t}\n\n\twithFlags(...flags: Flags[]): Query {\n\t\treturn new Query({ ...this.state, flags: flags.reduce<number>((r, f) => r | f, 0) });\n\t}\n\n\twithAssetTypes(...assetTypes: string[]): Query {\n\t\treturn new Query({ ...this.state, assetTypes });\n\t}\n\n\tget raw(): any {\n\t\tconst { criteria, pageNumber, pageSize, sortBy, sortOrder, flags, assetTypes } = this.state;\n\t\tconst filters = [{ criteria, pageNumber, pageSize, sortBy, sortOrder }];\n\t\treturn { filters, assetTypes, flags };\n\t}\n\n\tget searchText(): string {\n\t\tconst criterium = this.state.criteria.filter(criterium => criterium.filterType === FilterType.SearchText)[0];\n\t\treturn criterium && criterium.value ? criterium.value : '';\n\t}\n\n\tget telemetryData(): QueryTelemetryData {\n\t\treturn {\n\t\t\tfilterTypes: this.state.criteria.map(criterium => String(criterium.filterType)),\n\t\t\tsortBy: String(this.sortBy),\n\t\t\tsortOrder: String(this.sortOrder)\n\t\t};\n\t}\n}\n\nfunction getStatistic(statistics: IRawGalleryExtensionStatistics[], name: string): number {\n\tconst result = (statistics || []).filter(s => s.statisticName === name)[0];\n\treturn result ? result.value : 0;\n}\n\nfunction getCoreTranslationAssets(version: IRawGalleryExtensionVersion): [string, IGalleryExtensionAsset][] {\n\tconst coreTranslationAssetPrefix = 'Microsoft.VisualStudio.Code.Translation.';\n\tconst result = version.files.filter(f => f.assetType.indexOf(coreTranslationAssetPrefix) === 0);\n\treturn result.reduce<[string, IGalleryExtensionAsset][]>((result, file) => {\n\t\tconst asset = getVersionAsset(version, file.assetType);\n\t\tif (asset) {\n\t\t\tresult.push([file.assetType.substring(coreTranslationAssetPrefix.length), asset]);\n\t\t}\n\t\treturn result;\n\t}, []);\n}\n\nfunction getRepositoryAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset | null {\n\tif (version.properties) {\n\t\tconst results = version.properties.filter(p => p.key === AssetType.Repository);\n\t\tconst gitRegExp = new RegExp('((git|ssh|http(s)?)|(git@[\\\\w.]+))(:(//)?)([\\\\w.@:/\\\\-~]+)(.git)(/)?');\n\n\t\tconst uri = results.filter(r => gitRegExp.test(r.value))[0];\n\t\treturn uri ? { uri: uri.value, fallbackUri: uri.value } : null;\n\t}\n\treturn getVersionAsset(version, AssetType.Repository);\n}\n\nfunction getDownloadAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset {\n\treturn {\n\t\turi: `${version.fallbackAssetUri}/${AssetType.VSIX}?redirect=true${version.targetPlatform ? `&targetPlatform=${version.targetPlatform}` : ''}`,\n\t\tfallbackUri: `${version.fallbackAssetUri}/${AssetType.VSIX}${version.targetPlatform ? `?targetPlatform=${version.targetPlatform}` : ''}`\n\t};\n}\n\nfunction getIconAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset {\n\tconst asset = getVersionAsset(version, AssetType.Icon);\n\tif (asset) {\n\t\treturn asset;\n\t}\n\tconst uri = DefaultIconPath;\n\treturn { uri, fallbackUri: uri };\n}\n\nfunction getVersionAsset(version: IRawGalleryExtensionVersion, type: string): IGalleryExtensionAsset | null {\n\tconst result = version.files.filter(f => f.assetType === type)[0];\n\treturn result ? { uri: `${version.assetUri}/${type}`, fallbackUri: `${version.fallbackAssetUri}/${type}` } : null;\n}\n\nfunction getExtensions(version: IRawGalleryExtensionVersion, property: string): string[] {\n\tconst values = version.properties ? version.properties.filter(p => p.key === property) : [];\n\tconst value = values.length > 0 && values[0].value;\n\treturn value ? value.split(',').map(v => adoptToGalleryExtensionId(v)) : [];\n}\n\nfunction getEngine(version: IRawGalleryExtensionVersion): string {\n\tconst values = version.properties ? version.properties.filter(p => p.key === PropertyType.Engine) : [];\n\treturn (values.length > 0 && values[0].value) || '';\n}\n\nfunction isPreReleaseVersion(version: IRawGalleryExtensionVersion): boolean {\n\tconst values = version.properties ? version.properties.filter(p => p.key === PropertyType.PreRelease) : [];\n\treturn values.length > 0 && values[0].value === 'true';\n}\n\nfunction getLocalizedLanguages(version: IRawGalleryExtensionVersion): string[] {\n\tconst values = version.properties ? version.properties.filter(p => p.key === PropertyType.LocalizedLanguages) : [];\n\tconst value = (values.length > 0 && values[0].value) || '';\n\treturn value ? value.split(',') : [];\n}\n\nfunction getIsPreview(flags: string): boolean {\n\treturn flags.indexOf('preview') !== -1;\n}\n\nfunction getTargetPlatformForExtensionVersion(version: IRawGalleryExtensionVersion): TargetPlatform {\n\treturn version.targetPlatform ? toTargetPlatform(version.targetPlatform) : TargetPlatform.UNDEFINED;\n}\n\nfunction getAllTargetPlatforms(rawGalleryExtension: IRawGalleryExtension): TargetPlatform[] {\n\tconst allTargetPlatforms = distinct(rawGalleryExtension.versions.map(getTargetPlatformForExtensionVersion));\n\n\t// Is a web extension only if it has WEB_EXTENSION_TAG\n\tconst isWebExtension = !!rawGalleryExtension.tags?.includes(WEB_EXTENSION_TAG);\n\n\t// Include Web Target Platform only if it is a web extension\n\tconst webTargetPlatformIndex = allTargetPlatforms.indexOf(TargetPlatform.WEB);\n\tif (isWebExtension) {\n\t\tif (webTargetPlatformIndex === -1) {\n\t\t\t// Web extension but does not has web target platform -> add it\n\t\t\tallTargetPlatforms.push(TargetPlatform.WEB);\n\t\t}\n\t} else {\n\t\tif (webTargetPlatformIndex !== -1) {\n\t\t\t// Not a web extension but has web target platform -> remove it\n\t\t\tallTargetPlatforms.splice(webTargetPlatformIndex, 1);\n\t\t}\n\t}\n\n\treturn allTargetPlatforms;\n}\n\nexport function sortExtensionVersions(versions: IRawGalleryExtensionVersion[], preferredTargetPlatform: TargetPlatform): IRawGalleryExtensionVersion[] {\n\t/* It is expected that versions from Marketplace are sorted by version. So we are just sorting by preferred targetPlatform */\n\tconst fallbackTargetPlatforms = getFallbackTargetPlarforms(preferredTargetPlatform);\n\tfor (let index = 0; index < versions.length; index++) {\n\t\tconst version = versions[index];\n\t\tif (version.version === versions[index - 1]?.version) {\n\t\t\tlet insertionIndex = index;\n\t\t\tconst versionTargetPlatform = getTargetPlatformForExtensionVersion(version);\n\t\t\t/* put it at the beginning */\n\t\t\tif (versionTargetPlatform === preferredTargetPlatform) {\n\t\t\t\twhile (insertionIndex > 0 && versions[insertionIndex - 1].version === version.version) { insertionIndex--; }\n\t\t\t}\n\t\t\t/* put it after version with preferred targetPlatform or at the beginning */\n\t\t\telse if (fallbackTargetPlatforms.includes(versionTargetPlatform)) {\n\t\t\t\twhile (insertionIndex > 0 && versions[insertionIndex - 1].version === version.version && getTargetPlatformForExtensionVersion(versions[insertionIndex - 1]) !== preferredTargetPlatform) { insertionIndex--; }\n\t\t\t}\n\t\t\tif (insertionIndex !== index) {\n\t\t\t\tversions.splice(index, 1);\n\t\t\t\tversions.splice(insertionIndex, 0, version);\n\t\t\t}\n\t\t}\n\t}\n\treturn versions;\n}\n\nfunction toExtension(galleryExtension: IRawGalleryExtension, version: IRawGalleryExtensionVersion, allTargetPlatforms: TargetPlatform[], hasReleaseVersion: boolean, telemetryData?: IStringDictionary<any>): IGalleryExtension {\n\tconst latestVersion = galleryExtension.versions[0];\n\tconst assets = <IGalleryExtensionAssets>{\n\t\tmanifest: getVersionAsset(version, AssetType.Manifest),\n\t\treadme: getVersionAsset(version, AssetType.Details),\n\t\tchangelog: getVersionAsset(version, AssetType.Changelog),\n\t\tlicense: getVersionAsset(version, AssetType.License),\n\t\trepository: getRepositoryAsset(version),\n\t\tdownload: getDownloadAsset(version),\n\t\ticon: getIconAsset(version),\n\t\tcoreTranslations: getCoreTranslationAssets(version)\n\t};\n\n\treturn {\n\t\tidentifier: {\n\t\t\tid: getGalleryExtensionId(galleryExtension.publisher.publisherName, galleryExtension.extensionName),\n\t\t\tuuid: galleryExtension.extensionId\n\t\t},\n\t\tname: galleryExtension.extensionName,\n\t\tversion: version.version,\n\t\tdisplayName: galleryExtension.displayName,\n\t\tpublisherId: galleryExtension.publisher.publisherId,\n\t\tpublisher: galleryExtension.publisher.publisherName,\n\t\tpublisherDisplayName: galleryExtension.publisher.displayName,\n\t\tpublisherDomain: galleryExtension.publisher.domain ? { link: galleryExtension.publisher.domain, verified: !!galleryExtension.publisher.isDomainVerified } : undefined,\n\t\tdescription: galleryExtension.shortDescription || '',\n\t\tinstallCount: getStatistic(galleryExtension.statistics, 'install'),\n\t\trating: getStatistic(galleryExtension.statistics, 'averagerating'),\n\t\tratingCount: getStatistic(galleryExtension.statistics, 'ratingcount'),\n\t\tcategories: galleryExtension.categories || [],\n\t\ttags: galleryExtension.tags || [],\n\t\treleaseDate: Date.parse(galleryExtension.releaseDate),\n\t\tlastUpdated: Date.parse(galleryExtension.lastUpdated),\n\t\tallTargetPlatforms,\n\t\tassets,\n\t\tproperties: {\n\t\t\tdependencies: getExtensions(version, PropertyType.Dependency),\n\t\t\textensionPack: getExtensions(version, PropertyType.ExtensionPack),\n\t\t\tengine: getEngine(version),\n\t\t\tlocalizedLanguages: getLocalizedLanguages(version),\n\t\t\ttargetPlatform: getTargetPlatformForExtensionVersion(version),\n\t\t\tisPreReleaseVersion: isPreReleaseVersion(version)\n\t\t},\n\t\thasPreReleaseVersion: isPreReleaseVersion(latestVersion),\n\t\thasReleaseVersion,\n\t\tpreview: getIsPreview(galleryExtension.flags),\n\t\t/* __GDPR__FRAGMENT__\n\t\t\t\"GalleryExtensionTelemetryData2\" : {\n\t\t\t\t\"index\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\t\"querySource\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t}\n\t\t*/\n\t\ttelemetryData,\n\t};\n}\n\ninterface IRawExtensionsControlManifest {\n\tmalicious: string[];\n\tunsupported: IStringDictionary<boolean | { preReleaseExtension: { id: string, displayName: string } }>;\n}\n\nabstract class AbstractExtensionGalleryService implements IExtensionGalleryService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate extensionsGalleryUrl: string | undefined;\n\tprivate extensionsControlUrl: string | undefined;\n\n\tprivate readonly commonHeadersPromise: Promise<{ [key: string]: string; }>;\n\n\tconstructor(\n\t\tstorageService: IStorageService | undefined,\n\t\t@IRequestService private readonly requestService: IRequestService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t) {\n\t\tconst config = productService.extensionsGallery;\n\t\tthis.extensionsGalleryUrl = config && config.serviceUrl;\n\t\tthis.extensionsControlUrl = config && config.controlUrl;\n\t\tthis.commonHeadersPromise = resolveMarketplaceHeaders(productService.version, productService, this.environmentService, this.configurationService, this.fileService, storageService);\n\t}\n\n\tprivate api(path = ''): string {\n\t\treturn `${this.extensionsGalleryUrl}${path}`;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn !!this.extensionsGalleryUrl;\n\t}\n\n\tgetExtensions(identifiers: ReadonlyArray<IExtensionIdentifier | IExtensionIdentifierWithVersion>, token: CancellationToken): Promise<IGalleryExtension[]>\n\tgetExtensions(identifiers: ReadonlyArray<IExtensionIdentifier | IExtensionIdentifierWithVersion>, includePreRelease: boolean, token: CancellationToken): Promise<IGalleryExtension[]>\n\tasync getExtensions(identifiers: ReadonlyArray<IExtensionIdentifier | IExtensionIdentifierWithVersion>, arg1: any, arg2?: any): Promise<IGalleryExtension[]> {\n\t\tconst includePreRelease = isBoolean(arg1) ? arg1 : false;\n\t\tconst token: CancellationToken = isBoolean(arg1) ? arg2 : arg1;\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeCategoryAndTags, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n\t\t\t.withPage(1, identifiers.length)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code')\n\t\t\t.withFilter(FilterType.ExtensionName, ...identifiers.map(({ id }) => id.toLowerCase()));\n\n\t\tif (identifiers.every(identifier => !(<IExtensionIdentifierWithVersion>identifier).version)) {\n\t\t\tquery = query.withFlags(Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeCategoryAndTags, Flags.IncludeFiles, Flags.IncludeVersionProperties, Flags.IncludeLatestVersionOnly);\n\t\t}\n\n\t\tconst { galleryExtensions } = await this.queryGallery(query, CURRENT_TARGET_PLATFORM, CancellationToken.None);\n\t\tconst galleryExtensionsByVersion = galleryExtensions.map(rawGalleryExtension => {\n\t\t\tconst id = getGalleryExtensionId(rawGalleryExtension.publisher.publisherName, rawGalleryExtension.extensionName);\n\t\t\treturn { rawGalleryExtension, version: (<IExtensionIdentifierWithVersion | undefined>identifiers.find(identifier => areSameExtensions(identifier, { id })))?.version, preRelease: includePreRelease };\n\t\t});\n\t\treturn this.converToGalleryExtensions(galleryExtensionsByVersion, CURRENT_TARGET_PLATFORM, () => undefined, token);\n\t}\n\n\tasync getExtensions2(identifiers: ReadonlyArray<IExtensionIdentifierWithPreRelease>): Promise<IGalleryExtension[]> {\n\t\tconst names: string[] = []; const ids: string[] = [];\n\t\tfor (const identifier of identifiers) {\n\t\t\tif (identifier.uuid) {\n\t\t\t\tids.push(identifier.uuid);\n\t\t\t} else {\n\t\t\t\tnames.push(identifier.id.toLowerCase());\n\t\t\t}\n\t\t}\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeCategoryAndTags, Flags.IncludeFiles, Flags.IncludeVersionProperties, Flags.IncludeLatestVersionOnly)\n\t\t\t.withPage(1, identifiers.length)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code');\n\t\tif (ids.length) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, ...ids);\n\t\t}\n\t\tif (names.length) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, ...names);\n\t\t}\n\n\t\tconst { galleryExtensions: rawGalleryExtensions } = await this.queryGallery(query, CURRENT_TARGET_PLATFORM, CancellationToken.None);\n\t\tconst rawGalleryExtensionsInput = rawGalleryExtensions.map(rawGalleryExtension => {\n\t\t\tconst id = getGalleryExtensionId(rawGalleryExtension.publisher.publisherName, rawGalleryExtension.extensionName);\n\t\t\tconst identifier = identifiers.find(identifier => areSameExtensions(identifier, { id, uuid: rawGalleryExtension.extensionId }));\n\t\t\treturn { rawGalleryExtension, preRelease: !!identifier?.preRelease };\n\t\t});\n\n\t\treturn this.converToGalleryExtensions(rawGalleryExtensionsInput, CURRENT_TARGET_PLATFORM, () => undefined, CancellationToken.None);\n\t}\n\n\tasync getCompatibleExtension(arg1: IExtensionIdentifier | IGalleryExtension, includePreRelease: boolean, targetPlatform: TargetPlatform): Promise<IGalleryExtension | null> {\n\t\tconst extension: IGalleryExtension | null = isIExtensionIdentifier(arg1) ? null : arg1;\n\t\tif (extension) {\n\t\t\tif (isNotWebExtensionInWebTargetPlatform(extension.allTargetPlatforms, targetPlatform)) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (await this.isExtensionCompatible(extension, includePreRelease, targetPlatform)) {\n\t\t\t\treturn extension;\n\t\t\t}\n\t\t}\n\t\tconst { id, uuid } = extension ? extension.identifier : <IExtensionIdentifier>arg1;\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeCategoryAndTags, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n\t\t\t.withPage(1, 1)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code');\n\n\t\tif (uuid) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, uuid);\n\t\t} else {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, id);\n\t\t}\n\n\t\tconst { galleryExtensions } = await this.queryGallery(query, targetPlatform, CancellationToken.None);\n\t\tconst [rawExtension] = galleryExtensions;\n\t\tif (!rawExtension || !rawExtension.versions.length) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst allTargetPlatforms = getAllTargetPlatforms(rawExtension);\n\t\tif (isNotWebExtensionInWebTargetPlatform(allTargetPlatforms, targetPlatform)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tfor (let rawVersion of rawExtension.versions) {\n\t\t\t// set engine property if does not exist\n\t\t\tif (!getEngine(rawVersion)) {\n\t\t\t\tconst engine = await this.getEngine(rawVersion);\n\t\t\t\trawVersion = {\n\t\t\t\t\t...rawVersion,\n\t\t\t\t\tproperties: [...(rawVersion.properties || []), { key: PropertyType.Engine, value: engine }]\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (await this.isRawExtensionVersionCompatible(rawVersion, includePreRelease, allTargetPlatforms, targetPlatform)) {\n\t\t\t\tconst hasReleaseVersion = rawExtension.versions.some(version => !isPreReleaseVersion(version));\n\t\t\t\treturn toExtension(rawExtension, rawVersion, allTargetPlatforms, hasReleaseVersion);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tasync isExtensionCompatible(extension: IGalleryExtension, includePreRelease: boolean, targetPlatform: TargetPlatform): Promise<boolean> {\n\t\tif (!isTargetPlatformCompatible(extension.properties.targetPlatform, extension.allTargetPlatforms, targetPlatform)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!includePreRelease && extension.properties.isPreReleaseVersion) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet engine = extension.properties.engine;\n\t\tif (!engine) {\n\t\t\tconst manifest = await this.getManifest(extension, CancellationToken.None);\n\t\t\tif (!manifest) {\n\t\t\t\tthrow new Error('Manifest was not found');\n\t\t\t}\n\t\t\tengine = manifest.engines.vscode;\n\t\t}\n\t\treturn isEngineValid(engine, this.productService.version, this.productService.date);\n\t}\n\n\tprivate async isRawExtensionVersionCompatible(rawExtensionVersion: IRawGalleryExtensionVersion, includePreRelease: boolean, allTargetPlatforms: TargetPlatform[], targetPlatform: TargetPlatform): Promise<boolean> {\n\t\tif (!isTargetPlatformCompatible(getTargetPlatformForExtensionVersion(rawExtensionVersion), allTargetPlatforms, targetPlatform)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!includePreRelease && isPreReleaseVersion(rawExtensionVersion)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst engine = await this.getEngine(rawExtensionVersion);\n\t\treturn isEngineValid(engine, this.productService.version, this.productService.date);\n\t}\n\n\tasync query(options: IQueryOptions, token: CancellationToken): Promise<IPager<IGalleryExtension>> {\n\t\tif (!this.isEnabled()) {\n\t\t\tthrow new Error('No extension gallery service configured.');\n\t\t}\n\n\t\tlet text = options.text || '';\n\t\tconst pageSize = getOrDefault(options, o => o.pageSize, 50);\n\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeLatestVersionOnly, Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeCategoryAndTags, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n\t\t\t.withPage(1, pageSize)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code');\n\n\t\tif (text) {\n\t\t\t// Use category filter instead of \"category:themes\"\n\t\t\ttext = text.replace(/\\bcategory:(\"([^\"]*)\"|([^\"]\\S*))(\\s+|\\b|$)/g, (_, quotedCategory, category) => {\n\t\t\t\tquery = query.withFilter(FilterType.Category, category || quotedCategory);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\t// Use tag filter instead of \"tag:debuggers\"\n\t\t\ttext = text.replace(/\\btag:(\"([^\"]*)\"|([^\"]\\S*))(\\s+|\\b|$)/g, (_, quotedTag, tag) => {\n\t\t\t\tquery = query.withFilter(FilterType.Tag, tag || quotedTag);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\t// Use featured filter\n\t\t\ttext = text.replace(/\\bfeatured(\\s+|\\b|$)/g, () => {\n\t\t\t\tquery = query.withFilter(FilterType.Featured);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\ttext = text.trim();\n\n\t\t\tif (text) {\n\t\t\t\ttext = text.length < 200 ? text : text.substring(0, 200);\n\t\t\t\tquery = query.withFilter(FilterType.SearchText, text);\n\t\t\t}\n\n\t\t\tquery = query.withSortBy(SortBy.NoneOrRelevance);\n\t\t} else if (options.ids) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, ...options.ids);\n\t\t} else if (options.names) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, ...options.names);\n\t\t} else {\n\t\t\tquery = query.withSortBy(SortBy.InstallCount);\n\t\t}\n\n\t\tif (typeof options.sortBy === 'number') {\n\t\t\tquery = query.withSortBy(options.sortBy);\n\t\t}\n\n\t\tif (typeof options.sortOrder === 'number') {\n\t\t\tquery = query.withSortOrder(options.sortOrder);\n\t\t}\n\n\t\tconst { galleryExtensions, total } = await this.queryGallery(query, CURRENT_TARGET_PLATFORM, token);\n\t\tconst telemetryData = (index: number) => ({ index: ((query.pageNumber - 1) * query.pageSize) + index, querySource: options.source });\n\t\tconst extensions = await this.converToGalleryExtensions(galleryExtensions.map(rawGalleryExtension => ({ rawGalleryExtension, preRelease: !!options.includePreRelease })), CURRENT_TARGET_PLATFORM, telemetryData, token);\n\t\tconst getPage = async (pageIndex: number, ct: CancellationToken) => {\n\t\t\tif (ct.isCancellationRequested) {\n\t\t\t\tthrow canceled();\n\t\t\t}\n\t\t\tconst nextPageQuery = query.withPage(pageIndex + 1);\n\t\t\tconst { galleryExtensions } = await this.queryGallery(nextPageQuery, CURRENT_TARGET_PLATFORM, ct);\n\t\t\treturn await this.converToGalleryExtensions(galleryExtensions.map(rawGalleryExtension => ({ rawGalleryExtension, preRelease: !!options.includePreRelease })), CURRENT_TARGET_PLATFORM, telemetryData, token);\n\t\t};\n\n\t\treturn { firstPage: extensions, total, pageSize: query.pageSize, getPage } as IPager<IGalleryExtension>;\n\t}\n\n\tprivate async converToGalleryExtensions(rawGalleryExtensions: { rawGalleryExtension: IRawGalleryExtension, preRelease: boolean, version?: string }[], targetPlatform: TargetPlatform, telemetryData: (index: number) => IStringDictionary<any> | undefined, token: CancellationToken): Promise<IGalleryExtension[]> {\n\t\tconst toExtensionWithLatestVersion = (galleryExtension: IRawGalleryExtension, index: number, hasReleaseVersion: boolean, preRelease: boolean): IGalleryExtension => {\n\t\t\tconst allTargetPlatforms = getAllTargetPlatforms(galleryExtension);\n\t\t\tlet latestVersion = galleryExtension.versions[0];\n\t\t\tlatestVersion = galleryExtension.versions.find(version => version.version === latestVersion.version && isTargetPlatformCompatible(getTargetPlatformForExtensionVersion(version), allTargetPlatforms, targetPlatform)) || latestVersion;\n\t\t\tif (isPreReleaseVersion(latestVersion) && !preRelease) {\n\t\t\t\tlatestVersion = galleryExtension.versions.find(version => version.version !== latestVersion.version && !isPreReleaseVersion(version)) || latestVersion;\n\t\t\t}\n\t\t\treturn toExtension(galleryExtension, latestVersion, allTargetPlatforms, hasReleaseVersion, telemetryData(index));\n\t\t};\n\t\tconst result: [number, IGalleryExtension][] = [];\n\t\tconst preReleaseVersions = new Map<string, { index: number, preRelease: boolean }>();\n\t\tfor (let index = 0; index < rawGalleryExtensions.length; index++) {\n\t\t\tconst { rawGalleryExtension, version, preRelease } = rawGalleryExtensions[index];\n\t\t\tconst hasReleaseVersion = rawGalleryExtension.versions.some(version => !isPreReleaseVersion(version));\n\t\t\tif (version) {\n\t\t\t\tconst versionAsset = rawGalleryExtension.versions.find(v => v.version === version);\n\t\t\t\tif (versionAsset) {\n\t\t\t\t\tresult.push([index, toExtension(rawGalleryExtension, versionAsset, getAllTargetPlatforms(rawGalleryExtension), hasReleaseVersion)]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst extension = toExtensionWithLatestVersion(rawGalleryExtension, index, hasReleaseVersion, preRelease);\n\t\t\t\tif (extension.properties.isPreReleaseVersion) {\n\t\t\t\t\tpreReleaseVersions.set(extension.identifier.uuid, { index, preRelease });\n\t\t\t\t} else {\n\t\t\t\t\tresult.push([index, extension]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (preReleaseVersions.size) {\n\t\t\tconst startTime = new Date().getTime();\n\t\t\tconst query = new Query()\n\t\t\t\t.withFlags(Flags.IncludeVersions, Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeCategoryAndTags, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n\t\t\t\t.withPage(1, preReleaseVersions.size)\n\t\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code')\n\t\t\t\t.withFilter(FilterType.ExtensionId, ...preReleaseVersions.keys());\n\t\t\tconst { galleryExtensions } = await this.queryGallery(query, targetPlatform, token);\n\t\t\tthis.telemetryService.publicLog2<GalleryServicePreReleasesQueryEvent, GalleryServicePreReleaseQueryClassification>('galleryService:preReleasesQuery', {\n\t\t\t\tduration: new Date().getTime() - startTime,\n\t\t\t\tcount: preReleaseVersions.size\n\t\t\t});\n\t\t\tif (galleryExtensions.length !== preReleaseVersions.size) {\n\t\t\t\tthrow new Error('Not all extensions with latest versions are returned');\n\t\t\t}\n\t\t\tfor (const rawGalleryExtension of galleryExtensions) {\n\t\t\t\tconst hasReleaseVersion = rawGalleryExtension.versions.some(version => !isPreReleaseVersion(version));\n\t\t\t\tconst { index, preRelease } = preReleaseVersions.get(rawGalleryExtension.extensionId)!;\n\t\t\t\tconst extension = toExtensionWithLatestVersion(rawGalleryExtension, index, hasReleaseVersion, preRelease);\n\t\t\t\tresult.push([index, extension]);\n\t\t\t}\n\t\t}\n\n\t\treturn result.sort((a, b) => a[0] - b[0]).map(([, extension]) => extension);\n\t}\n\n\tprivate async queryGallery(query: Query, targetPlatform: TargetPlatform, token: CancellationToken): Promise<{ galleryExtensions: IRawGalleryExtension[], total: number; }> {\n\t\tif (!this.isEnabled()) {\n\t\t\tthrow new Error('No extension gallery service configured.');\n\t\t}\n\n\t\t// Always exclude non validated and unpublished extensions\n\t\tquery = query\n\t\t\t.withFlags(query.flags, Flags.ExcludeNonValidated)\n\t\t\t.withFilter(FilterType.ExcludeWithFlags, flagsToString(Flags.Unpublished));\n\n\t\tconst commonHeaders = await this.commonHeadersPromise;\n\t\tconst data = JSON.stringify(query.raw);\n\t\tconst headers = {\n\t\t\t...commonHeaders,\n\t\t\t'Content-Type': 'application/json',\n\t\t\t'Accept': 'application/json;api-version=3.0-preview.1',\n\t\t\t'Accept-Encoding': 'gzip',\n\t\t\t'Content-Length': String(data.length)\n\t\t};\n\n\t\tconst startTime = new Date().getTime();\n\t\tlet context: IRequestContext | undefined, error: any, total: number = 0;\n\n\t\ttry {\n\t\t\tcontext = await this.requestService.request({\n\t\t\t\ttype: 'POST',\n\t\t\t\turl: this.api('/extensionquery'),\n\t\t\t\tdata,\n\t\t\t\theaders\n\t\t\t}, token);\n\n\t\t\tif (context.res.statusCode && context.res.statusCode >= 400 && context.res.statusCode < 500) {\n\t\t\t\treturn { galleryExtensions: [], total };\n\t\t\t}\n\n\t\t\tconst result = await asJson<IRawGalleryQueryResult>(context);\n\t\t\tif (result) {\n\t\t\t\tconst r = result.results[0];\n\t\t\t\tconst galleryExtensions = r.extensions;\n\t\t\t\tgalleryExtensions.forEach(e => sortExtensionVersions(e.versions, targetPlatform));\n\t\t\t\tconst resultCount = r.resultMetadata && r.resultMetadata.filter(m => m.metadataType === 'ResultCount')[0];\n\t\t\t\ttotal = resultCount && resultCount.metadataItems.filter(i => i.name === 'TotalCount')[0].count || 0;\n\n\t\t\t\treturn { galleryExtensions, total };\n\t\t\t}\n\t\t\treturn { galleryExtensions: [], total };\n\n\t\t} catch (e) {\n\t\t\terror = e;\n\t\t\tthrow e;\n\t\t} finally {\n\t\t\tthis.telemetryService.publicLog2<GalleryServiceQueryEvent, GalleryServiceQueryClassification>('galleryService:query', {\n\t\t\t\t...query.telemetryData,\n\t\t\t\trequestBodySize: String(data.length),\n\t\t\t\tduration: new Date().getTime() - startTime,\n\t\t\t\tsuccess: !!context && isSuccess(context),\n\t\t\t\tresponseBodySize: context?.res.headers['Content-Length'],\n\t\t\t\tstatusCode: context ? String(context.res.statusCode) : undefined,\n\t\t\t\terrorCode: error\n\t\t\t\t\t? isPromiseCanceledError(error) ? 'canceled' : getErrorMessage(error).startsWith('XHR timeout') ? 'timeout' : 'failed'\n\t\t\t\t\t: undefined,\n\t\t\t\tcount: String(total)\n\t\t\t});\n\t\t}\n\t}\n\n\tasync reportStatistic(publisher: string, name: string, version: string, type: StatisticType): Promise<void> {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst url = isWeb ? this.api(`/itemName/${publisher}.${name}/version/${version}/statType/${type === StatisticType.Install ? '1' : '3'}/vscodewebextension`) : this.api(`/publishers/${publisher}/extensions/${name}/${version}/stats?statType=${type}`);\n\t\tconst Accept = isWeb ? 'api-version=6.1-preview.1' : '*/*;api-version=4.0-preview.1';\n\n\t\tconst commonHeaders = await this.commonHeadersPromise;\n\t\tconst headers = { ...commonHeaders, Accept };\n\t\ttry {\n\t\t\tawait this.requestService.request({\n\t\t\t\ttype: 'POST',\n\t\t\t\turl,\n\t\t\t\theaders\n\t\t\t}, CancellationToken.None);\n\t\t} catch (error) { /* Ignore */ }\n\t}\n\n\tasync download(extension: IGalleryExtension, location: URI, operation: InstallOperation): Promise<void> {\n\t\tthis.logService.trace('ExtensionGalleryService#download', extension.identifier.id);\n\t\tconst data = getGalleryExtensionTelemetryData(extension);\n\t\tconst startTime = new Date().getTime();\n\t\t/* __GDPR__\n\t\t\t\"galleryService:downloadVSIX\" : {\n\t\t\t\t\"duration\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\tconst log = (duration: number) => this.telemetryService.publicLog('galleryService:downloadVSIX', { ...data, duration });\n\n\t\tconst operationParam = operation === InstallOperation.Install ? 'install' : operation === InstallOperation.Update ? 'update' : '';\n\t\tconst downloadAsset = operationParam ? {\n\t\t\turi: `${extension.assets.download.uri}${URI.parse(extension.assets.download.uri).query ? '&' : '?'}${operationParam}=true`,\n\t\t\tfallbackUri: `${extension.assets.download.fallbackUri}${URI.parse(extension.assets.download.fallbackUri).query ? '&' : '?'}${operationParam}=true`\n\t\t} : extension.assets.download;\n\n\t\tconst context = await this.getAsset(downloadAsset);\n\t\tawait this.fileService.writeFile(location, context.stream);\n\t\tlog(new Date().getTime() - startTime);\n\t}\n\n\tasync getReadme(extension: IGalleryExtension, token: CancellationToken): Promise<string> {\n\t\tif (extension.assets.readme) {\n\t\t\tconst context = await this.getAsset(extension.assets.readme, {}, token);\n\t\t\tconst content = await asText(context);\n\t\t\treturn content || '';\n\t\t}\n\t\treturn '';\n\t}\n\n\tasync getManifest(extension: IGalleryExtension, token: CancellationToken): Promise<IExtensionManifest | null> {\n\t\tif (extension.assets.manifest) {\n\t\t\tconst context = await this.getAsset(extension.assets.manifest, {}, token);\n\t\t\tconst text = await asText(context);\n\t\t\treturn text ? JSON.parse(text) : null;\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate async getManifestFromRawExtensionVersion(rawExtensionVersion: IRawGalleryExtensionVersion, token: CancellationToken): Promise<IExtensionManifest | null> {\n\t\tconst manifestAsset = getVersionAsset(rawExtensionVersion, AssetType.Manifest);\n\t\tif (!manifestAsset) {\n\t\t\tthrow new Error('Manifest was not found');\n\t\t}\n\t\tconst headers = { 'Accept-Encoding': 'gzip' };\n\t\tconst context = await this.getAsset(manifestAsset, { headers });\n\t\treturn await asJson<IExtensionManifest>(context);\n\t}\n\n\tasync getCoreTranslation(extension: IGalleryExtension, languageId: string): Promise<ITranslation | null> {\n\t\tconst asset = extension.assets.coreTranslations.filter(t => t[0] === languageId.toUpperCase())[0];\n\t\tif (asset) {\n\t\t\tconst context = await this.getAsset(asset[1]);\n\t\t\tconst text = await asText(context);\n\t\t\treturn text ? JSON.parse(text) : null;\n\t\t}\n\t\treturn null;\n\t}\n\n\tasync getChangelog(extension: IGalleryExtension, token: CancellationToken): Promise<string> {\n\t\tif (extension.assets.changelog) {\n\t\t\tconst context = await this.getAsset(extension.assets.changelog, {}, token);\n\t\t\tconst content = await asText(context);\n\t\t\treturn content || '';\n\t\t}\n\t\treturn '';\n\t}\n\n\tasync getAllCompatibleVersions(extension: IGalleryExtension, includePreRelease: boolean, targetPlatform: TargetPlatform): Promise<IGalleryExtensionVersion[]> {\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeVersions, Flags.IncludeCategoryAndTags, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n\t\t\t.withPage(1, 1)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code');\n\n\t\tif (extension.identifier.uuid) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, extension.identifier.uuid);\n\t\t} else {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, extension.identifier.id);\n\t\t}\n\n\t\tconst { galleryExtensions } = await this.queryGallery(query, targetPlatform, CancellationToken.None);\n\t\tif (!galleryExtensions.length) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst allTargetPlatforms = getAllTargetPlatforms(galleryExtensions[0]);\n\t\tif (isNotWebExtensionInWebTargetPlatform(allTargetPlatforms, targetPlatform)) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst result: IGalleryExtensionVersion[] = [];\n\t\tfor (const version of galleryExtensions[0].versions) {\n\t\t\ttry {\n\t\t\t\tif (result[result.length - 1]?.version !== version.version && await this.isRawExtensionVersionCompatible(version, includePreRelease, allTargetPlatforms, targetPlatform)) {\n\t\t\t\t\tresult.push({ version: version.version, date: version.lastUpdated, isPreReleaseVersion: isPreReleaseVersion(version) });\n\t\t\t\t}\n\t\t\t} catch (error) { /* Ignore error and skip version */ }\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate async getAsset(asset: IGalleryExtensionAsset, options: IRequestOptions = {}, token: CancellationToken = CancellationToken.None): Promise<IRequestContext> {\n\t\tconst commonHeaders = await this.commonHeadersPromise;\n\t\tconst baseOptions = { type: 'GET' };\n\t\tconst headers = { ...commonHeaders, ...(options.headers || {}) };\n\t\toptions = { ...options, ...baseOptions, headers };\n\n\t\tconst url = asset.uri;\n\t\tconst fallbackUrl = asset.fallbackUri;\n\t\tconst firstOptions = { ...options, url };\n\n\t\ttry {\n\t\t\tconst context = await this.requestService.request(firstOptions, token);\n\t\t\tif (context.res.statusCode === 200) {\n\t\t\t\treturn context;\n\t\t\t}\n\t\t\tconst message = await asText(context);\n\t\t\tthrow new Error(`Expected 200, got back ${context.res.statusCode} instead.\\n\\n${message}`);\n\t\t} catch (err) {\n\t\t\tif (isPromiseCanceledError(err)) {\n\t\t\t\tthrow err;\n\t\t\t}\n\n\t\t\tconst message = getErrorMessage(err);\n\t\t\ttype GalleryServiceCDNFallbackClassification = {\n\t\t\t\turl: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t\tmessage: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t};\n\t\t\ttype GalleryServiceCDNFallbackEvent = {\n\t\t\t\turl: string;\n\t\t\t\tmessage: string;\n\t\t\t};\n\t\t\tthis.telemetryService.publicLog2<GalleryServiceCDNFallbackEvent, GalleryServiceCDNFallbackClassification>('galleryService:cdnFallback', { url, message });\n\n\t\t\tconst fallbackOptions = { ...options, url: fallbackUrl };\n\t\t\treturn this.requestService.request(fallbackOptions, token);\n\t\t}\n\t}\n\n\tprivate async getEngine(rawExtensionVersion: IRawGalleryExtensionVersion): Promise<string> {\n\t\tlet engine = getEngine(rawExtensionVersion);\n\t\tif (!engine) {\n\t\t\tconst manifest = await this.getManifestFromRawExtensionVersion(rawExtensionVersion, CancellationToken.None);\n\t\t\tif (!manifest) {\n\t\t\t\tthrow new Error('Manifest was not found');\n\t\t\t}\n\t\t\tengine = manifest.engines.vscode;\n\t\t}\n\t\treturn engine;\n\t}\n\n\tasync getExtensionsControlManifest(): Promise<IExtensionsControlManifest> {\n\t\tif (!this.isEnabled()) {\n\t\t\tthrow new Error('No extension gallery service configured.');\n\t\t}\n\n\t\tif (!this.extensionsControlUrl) {\n\t\t\treturn { malicious: [] };\n\t\t}\n\n\t\tconst context = await this.requestService.request({ type: 'GET', url: this.extensionsControlUrl }, CancellationToken.None);\n\t\tif (context.res.statusCode !== 200) {\n\t\t\tthrow new Error('Could not get extensions report.');\n\t\t}\n\n\t\tconst result = await asJson<IRawExtensionsControlManifest>(context);\n\t\tconst malicious: IExtensionIdentifier[] = [];\n\t\tconst unsupportedPreReleaseExtensions: IStringDictionary<{ id: string, displayName: string }> = {};\n\n\t\tif (result) {\n\t\t\tfor (const id of result.malicious) {\n\t\t\t\tmalicious.push({ id });\n\t\t\t}\n\t\t\tif (result.unsupported) {\n\t\t\t\tfor (const extensionId of Object.keys(result.unsupported)) {\n\t\t\t\t\tconst value = result.unsupported[extensionId];\n\t\t\t\t\tif (!isBoolean(value)) {\n\t\t\t\t\t\tunsupportedPreReleaseExtensions[extensionId.toLowerCase()] = value.preReleaseExtension;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { malicious, unsupportedPreReleaseExtensions };\n\t}\n}\n\nexport class ExtensionGalleryService extends AbstractExtensionGalleryService {\n\n\tconstructor(\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IRequestService requestService: IRequestService,\n\t\t@ILogService logService: ILogService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IProductService productService: IProductService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t) {\n\t\tsuper(storageService, requestService, logService, environmentService, telemetryService, fileService, productService, configurationService);\n\t}\n}\n\nexport class ExtensionGalleryServiceWithNoStorageService extends AbstractExtensionGalleryService {\n\n\tconstructor(\n\t\t@IRequestService requestService: IRequestService,\n\t\t@ILogService logService: ILogService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IProductService productService: IProductService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t) {\n\t\tsuper(undefined, requestService, logService, environmentService, telemetryService, fileService, productService, configurationService);\n\t}\n}\n\nexport async function resolveMarketplaceHeaders(version: string, productService: IProductService, environmentService: IEnvironmentService, configurationService: IConfigurationService, fileService: IFileService, storageService: {\n\tget: (key: string, scope: StorageScope) => string | undefined,\n\tstore: (key: string, value: string, scope: StorageScope, target: StorageTarget) => void\n} | undefined): Promise<{ [key: string]: string; }> {\n\tconst headers: IHeaders = {\n\t\t'X-Market-Client-Id': `VSCode ${version}`,\n\t\t'User-Agent': `VSCode ${version}`\n\t};\n\tconst uuid = await getServiceMachineId(environmentService, fileService, storageService);\n\tif (supportsTelemetry(productService, environmentService) && getTelemetryLevel(configurationService) === TelemetryLevel.USAGE) {\n\t\theaders['X-Market-User-Id'] = uuid;\n\t}\n\treturn headers;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { cloneAndChange, mixin } from 'vs/base/common/objects';\nimport { isWeb } from 'vs/base/common/platform';\nimport { escapeRegExpCharacters } from 'vs/base/common/strings';\nimport { localize } from 'vs/nls';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationScope, Extensions, IConfigurationRegistry } from 'vs/platform/configuration/common/configurationRegistry';\nimport product from 'vs/platform/product/common/product';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { ClassifiedEvent, GDPRClassification, StrictPropertyCheck } from 'vs/platform/telemetry/common/gdprTypings';\nimport { ITelemetryData, ITelemetryInfo, ITelemetryService, TelemetryConfiguration, TelemetryLevel, TELEMETRY_OLD_SETTING_ID, TELEMETRY_SECTION_ID, TELEMETRY_SETTING_ID } from 'vs/platform/telemetry/common/telemetry';\nimport { getTelemetryLevel, ITelemetryAppender } from 'vs/platform/telemetry/common/telemetryUtils';\n\nexport interface ITelemetryServiceConfig {\n\tappenders: ITelemetryAppender[];\n\tsendErrorTelemetry?: boolean;\n\tcommonProperties?: Promise<{ [name: string]: any }>;\n\tpiiPaths?: string[];\n}\n\nexport class TelemetryService implements ITelemetryService {\n\n\tstatic readonly IDLE_START_EVENT_NAME = 'UserIdleStart';\n\tstatic readonly IDLE_STOP_EVENT_NAME = 'UserIdleStop';\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _appenders: ITelemetryAppender[];\n\tprivate _commonProperties: Promise<{ [name: string]: any; }>;\n\tprivate _experimentProperties: { [name: string]: string } = {};\n\tprivate _piiPaths: string[];\n\tprivate _telemetryLevel: TelemetryLevel;\n\tpublic readonly sendErrorTelemetry: boolean;\n\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate _cleanupPatterns: RegExp[] = [];\n\n\tconstructor(\n\t\tconfig: ITelemetryServiceConfig,\n\t\t@IConfigurationService private _configurationService: IConfigurationService\n\t) {\n\t\tthis._appenders = config.appenders;\n\t\tthis._commonProperties = config.commonProperties || Promise.resolve({});\n\t\tthis._piiPaths = config.piiPaths || [];\n\t\tthis._telemetryLevel = TelemetryLevel.USAGE;\n\t\tthis.sendErrorTelemetry = !!config.sendErrorTelemetry;\n\n\t\t// static cleanup pattern for: `file:///DANGEROUS/PATH/resources/app/Useful/Information`\n\t\tthis._cleanupPatterns = [/file:\\/\\/\\/.*?\\/resources\\/app\\//gi];\n\n\t\tfor (let piiPath of this._piiPaths) {\n\t\t\tthis._cleanupPatterns.push(new RegExp(escapeRegExpCharacters(piiPath), 'gi'));\n\t\t}\n\n\n\t\tthis._updateTelemetryLevel();\n\t\tthis._configurationService.onDidChangeConfiguration(this._updateTelemetryLevel, this, this._disposables);\n\t\ttype OptInClassification = {\n\t\t\toptIn: { classification: 'SystemMetaData', purpose: 'BusinessInsight', isMeasurement: true };\n\t\t};\n\t\ttype OptInEvent = {\n\t\t\toptIn: boolean;\n\t\t};\n\t\tthis.publicLog2<OptInEvent, OptInClassification>('optInStatus', { optIn: this._telemetryLevel === TelemetryLevel.USAGE });\n\n\t\tthis._commonProperties.then(values => {\n\t\t\tconst isHashedId = /^[a-f0-9]+$/i.test(values['common.machineId']);\n\n\t\t\ttype MachineIdFallbackClassification = {\n\t\t\t\tusingFallbackGuid: { classification: 'SystemMetaData', purpose: 'BusinessInsight', isMeasurement: true };\n\t\t\t};\n\t\t\tthis.publicLog2<{ usingFallbackGuid: boolean }, MachineIdFallbackClassification>('machineIdFallback', { usingFallbackGuid: !isHashedId });\n\t\t});\n\t}\n\n\tsetExperimentProperty(name: string, value: string): void {\n\t\tthis._experimentProperties[name] = value;\n\t}\n\n\tprivate _updateTelemetryLevel(): void {\n\t\tthis._telemetryLevel = getTelemetryLevel(this._configurationService);\n\t}\n\n\tget telemetryLevel(): TelemetryLevel {\n\t\treturn this._telemetryLevel;\n\t}\n\n\tasync getTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\tconst values = await this._commonProperties;\n\n\t\t// well known properties\n\t\tlet sessionId = values['sessionID'];\n\t\tlet machineId = values['common.machineId'];\n\t\tlet firstSessionDate = values['common.firstSessionDate'];\n\t\tlet msftInternal = values['common.msftInternal'];\n\n\t\treturn { sessionId, machineId, firstSessionDate, msftInternal };\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t}\n\n\tprivate _log(eventName: string, eventLevel: TelemetryLevel, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<any> {\n\t\t// don't send events when the user is optout\n\t\tif (this.telemetryLevel < eventLevel) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn this._commonProperties.then(values => {\n\n\t\t\t// (first) add common properties\n\t\t\tdata = mixin(data, values);\n\n\t\t\t// (next) add experiment properties\n\t\t\tdata = mixin(data, this._experimentProperties);\n\n\t\t\t// (last) remove all PII from data\n\t\t\tdata = cloneAndChange(data, value => {\n\t\t\t\tif (typeof value === 'string') {\n\t\t\t\t\treturn this._cleanupInfo(value, anonymizeFilePaths);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\n\t\t\t// Log to the appenders of sufficient level\n\t\t\tthis._appenders.forEach(a => a.log(eventName, data));\n\n\t\t}, err => {\n\t\t\t// unsure what to do now...\n\t\t\tconsole.error(err);\n\t\t});\n\t}\n\n\tpublicLog(eventName: string, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<any> {\n\t\treturn this._log(eventName, TelemetryLevel.USAGE, data, anonymizeFilePaths);\n\t}\n\n\tpublicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>, anonymizeFilePaths?: boolean): Promise<any> {\n\t\treturn this.publicLog(eventName, data as ITelemetryData, anonymizeFilePaths);\n\t}\n\n\tpublicLogError(errorEventName: string, data?: ITelemetryData): Promise<any> {\n\t\tif (!this.sendErrorTelemetry) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\t// Send error event and anonymize paths\n\t\treturn this._log(errorEventName, TelemetryLevel.ERROR, data, true);\n\t}\n\n\tpublicLogError2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>): Promise<any> {\n\t\treturn this.publicLogError(eventName, data as ITelemetryData);\n\t}\n\n\tprivate _anonymizeFilePaths(stack: string): string {\n\t\tlet updatedStack = stack;\n\n\t\tconst cleanUpIndexes: [number, number][] = [];\n\t\tfor (let regexp of this._cleanupPatterns) {\n\t\t\twhile (true) {\n\t\t\t\tconst result = regexp.exec(stack);\n\t\t\t\tif (!result) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcleanUpIndexes.push([result.index, regexp.lastIndex]);\n\t\t\t}\n\t\t}\n\n\t\tconst nodeModulesRegex = /^[\\\\\\/]?(node_modules|node_modules\\.asar)[\\\\\\/]/;\n\t\tconst fileRegex = /(file:\\/\\/)?([a-zA-Z]:(\\\\\\\\|\\\\|\\/)|(\\\\\\\\|\\\\|\\/))?([\\w-\\._]+(\\\\\\\\|\\\\|\\/))+[\\w-\\._]*/g;\n\t\tlet lastIndex = 0;\n\t\tupdatedStack = '';\n\n\t\twhile (true) {\n\t\t\tconst result = fileRegex.exec(stack);\n\t\t\tif (!result) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// Anoynimize user file paths that do not need to be retained or cleaned up.\n\t\t\tif (!nodeModulesRegex.test(result[0]) && cleanUpIndexes.every(([x, y]) => result.index < x || result.index >= y)) {\n\t\t\t\tupdatedStack += stack.substring(lastIndex, result.index) + '<REDACTED: user-file-path>';\n\t\t\t\tlastIndex = fileRegex.lastIndex;\n\t\t\t}\n\t\t}\n\t\tif (lastIndex < stack.length) {\n\t\t\tupdatedStack += stack.substr(lastIndex);\n\t\t}\n\n\t\treturn updatedStack;\n\t}\n\n\tprivate _removePropertiesWithPossibleUserInfo(property: string): string {\n\t\t// If for some reason it is undefined we skip it (this shouldn't be possible);\n\t\tif (!property) {\n\t\t\treturn property;\n\t\t}\n\n\t\tconst value = property.toLowerCase();\n\n\t\t// Regex which matches @*.site\n\t\tconst emailRegex = /@[a-zA-Z0-9-.]+/;\n\t\tconst secretRegex = /(key|token|sig|signature|password|passwd|pwd)[=\"':\\s]/;\n\n\t\t// Check for common user data in the telemetry events\n\t\tif (secretRegex.test(value)) {\n\t\t\treturn '<REDACTED: secret>';\n\t\t} else if (emailRegex.test(value)) {\n\t\t\treturn '<REDACTED: email>';\n\t\t}\n\n\t\treturn property;\n\t}\n\n\n\tprivate _cleanupInfo(property: string, anonymizeFilePaths?: boolean): string {\n\t\tlet updatedProperty = property;\n\n\t\t// anonymize file paths\n\t\tif (anonymizeFilePaths) {\n\t\t\tupdatedProperty = this._anonymizeFilePaths(updatedProperty);\n\t\t}\n\n\t\t// sanitize with configured cleanup patterns\n\t\tfor (let regexp of this._cleanupPatterns) {\n\t\t\tupdatedProperty = updatedProperty.replace(regexp, '');\n\t\t}\n\n\t\t// remove possible user info\n\t\tupdatedProperty = this._removePropertiesWithPossibleUserInfo(updatedProperty);\n\n\t\treturn updatedProperty;\n\t}\n}\n\nfunction getTelemetryLevelSettingDescription(): string {\n\tconst telemetryText = localize('telemetry.telemetryLevelMd', \"Controls all core and first party extension telemetry. This helps us to better understand how {0} is performing, where improvements need to be made, and how features are being used.\", product.nameLong);\n\tconst externalLinksStatement = !product.privacyStatementUrl ?\n\t\tlocalize(\"telemetry.docsStatement\", \"Read more about the [data we collect]({0}).\", 'https://aka.ms/vscode-telemetry') :\n\t\tlocalize(\"telemetry.docsAndPrivacyStatement\", \"Read more about the [data we collect]({0}) and our [privacy statement]({1}).\", 'https://aka.ms/vscode-telemetry', product.privacyStatementUrl);\n\tconst restartString = !isWeb ? localize('telemetry.restart', 'A full restart of the application is necessary for crash reporting changes to take effect.') : '';\n\n\tconst crashReportsHeader = localize('telemetry.crashReports', \"Crash Reports\");\n\tconst errorsHeader = localize('telemetry.errors', \"Error Telemetry\");\n\tconst usageHeader = localize('telemetry.usage', \"Usage Data\");\n\n\tconst telemetryTableDescription = localize('telemetry.telemetryLevel.tableDescription', \"The following table outlines the data sent with each setting:\");\n\tconst telemetryTable = `\n|       | ${crashReportsHeader} | ${errorsHeader} | ${usageHeader} |\n|:------|:---------------------:|:---------------:|:--------------:|\n| all   |            ✓          |        ✓        |        ✓       |\n| error |            ✓          |        ✓        |        -       |\n| crash |            ✓          |        -        |        -       |\n| off   |            -          |        -        |        -       |\n`;\n\n\tconst deprecatedSettingNote = localize('telemetry.telemetryLevel.deprecated', \"****Note:*** If this setting is 'off', no telemetry will be sent regardless of other telemetry settings. If this setting is set to anything except 'off' and telemetry is disabled with deprecated settings, no telemetry will be sent.*\");\n\tconst telemetryDescription = `\n${telemetryText} ${externalLinksStatement} ${restartString}\n\n&nbsp;\n\n${telemetryTableDescription}\n${telemetryTable}\n\n&nbsp;\n\n${deprecatedSettingNote}\n`;\n\n\treturn telemetryDescription;\n}\n\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration).registerConfiguration({\n\t'id': TELEMETRY_SECTION_ID,\n\t'order': 110,\n\t'type': 'object',\n\t'title': localize('telemetryConfigurationTitle', \"Telemetry\"),\n\t'properties': {\n\t\t[TELEMETRY_SETTING_ID]: {\n\t\t\t'type': 'string',\n\t\t\t'enum': [TelemetryConfiguration.ON, TelemetryConfiguration.ERROR, TelemetryConfiguration.CRASH, TelemetryConfiguration.OFF],\n\t\t\t'enumDescriptions': [\n\t\t\t\tlocalize('telemetry.telemetryLevel.default', \"Sends usage data, errors, and crash reports.\"),\n\t\t\t\tlocalize('telemetry.telemetryLevel.error', \"Sends general error telemetry and crash reports.\"),\n\t\t\t\tlocalize('telemetry.telemetryLevel.crash', \"Sends OS level crash reports.\"),\n\t\t\t\tlocalize('telemetry.telemetryLevel.off', \"Disables all product telemetry.\")\n\t\t\t],\n\t\t\t'markdownDescription': getTelemetryLevelSettingDescription(),\n\t\t\t'default': TelemetryConfiguration.ON,\n\t\t\t'restricted': true,\n\t\t\t'scope': ConfigurationScope.APPLICATION,\n\t\t\t'tags': ['usesOnlineServices', 'telemetry']\n\t\t}\n\t}\n});\n\n// Deprecated telemetry setting\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration).registerConfiguration({\n\t'id': TELEMETRY_SECTION_ID,\n\t'order': 110,\n\t'type': 'object',\n\t'title': localize('telemetryConfigurationTitle', \"Telemetry\"),\n\t'properties': {\n\t\t[TELEMETRY_OLD_SETTING_ID]: {\n\t\t\t'type': 'boolean',\n\t\t\t'markdownDescription':\n\t\t\t\t!product.privacyStatementUrl ?\n\t\t\t\t\tlocalize('telemetry.enableTelemetry', \"Enable diagnostic data to be collected. This helps us to better understand how {0} is performing and where improvements need to be made.\", product.nameLong) :\n\t\t\t\t\tlocalize('telemetry.enableTelemetryMd', \"Enable diagnostic data to be collected. This helps us to better understand how {0} is performing and where improvements need to be made. [Read more]({1}) about what we collect and our privacy statement.\", product.nameLong, product.privacyStatementUrl),\n\t\t\t'default': true,\n\t\t\t'restricted': true,\n\t\t\t'markdownDeprecationMessage': localize('enableTelemetryDeprecated', \"If this setting is false, no telemetry will be sent regardless of the new setting's value. Deprecated in favor of the {0} setting.\", `\\`#${TELEMETRY_SETTING_ID}#\\``),\n\t\t\t'scope': ConfigurationScope.APPLICATION,\n\t\t\t'tags': ['usesOnlineServices', 'telemetry']\n\t\t}\n\t}\n});\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { TelemetryClient } from 'applicationinsights';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { mixin } from 'vs/base/common/objects';\nimport { ITelemetryAppender, validateTelemetryData } from 'vs/platform/telemetry/common/telemetryUtils';\n\nasync function getClient(aiKey: string, testCollector: boolean): Promise<TelemetryClient> {\n\tconst appInsights = await import('applicationinsights');\n\tlet client: TelemetryClient;\n\tif (appInsights.defaultClient) {\n\t\tclient = new appInsights.TelemetryClient(aiKey);\n\t\tclient.channel.setUseDiskRetryCaching(true);\n\t} else {\n\t\tappInsights.setup(aiKey)\n\t\t\t.setAutoCollectRequests(false)\n\t\t\t.setAutoCollectPerformance(false)\n\t\t\t.setAutoCollectExceptions(false)\n\t\t\t.setAutoCollectDependencies(false)\n\t\t\t.setAutoDependencyCorrelation(false)\n\t\t\t.setAutoCollectConsole(false)\n\t\t\t.setInternalLogging(false, false)\n\t\t\t.setUseDiskRetryCaching(true)\n\t\t\t.start();\n\t\tclient = appInsights.defaultClient;\n\t}\n\n\tif (aiKey.indexOf('AIF-') === 0) {\n\t\tclient.config.endpointUrl = testCollector ? 'https://mobile.events.data.microsoft.com/collect/v1' : 'https://vortex.data.microsoft.com/collect/v1';\n\t}\n\treturn client;\n}\n\n\nexport class AppInsightsAppender implements ITelemetryAppender {\n\n\tprivate _aiClient: string | TelemetryClient | undefined;\n\tprivate _asyncAIClient: Promise<TelemetryClient> | null;\n\n\tconstructor(\n\t\tprivate _eventPrefix: string,\n\t\tprivate _defaultData: { [key: string]: any } | null,\n\t\taiKeyOrClientFactory: string | (() => TelemetryClient), // allow factory function for testing\n\t\tprivate readonly testCollector?: boolean,\n\t\tprivate readonly mirrored?: boolean\n\t) {\n\t\tif (!this._defaultData) {\n\t\t\tthis._defaultData = Object.create(null);\n\t\t}\n\n\t\tif (typeof aiKeyOrClientFactory === 'function') {\n\t\t\tthis._aiClient = aiKeyOrClientFactory();\n\t\t} else {\n\t\t\tthis._aiClient = aiKeyOrClientFactory;\n\t\t}\n\t\tthis._asyncAIClient = null;\n\t}\n\n\tprivate _withAIClient(callback: (aiClient: TelemetryClient) => void): void {\n\t\tif (!this._aiClient) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (typeof this._aiClient !== 'string') {\n\t\t\tcallback(this._aiClient);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._asyncAIClient) {\n\t\t\tthis._asyncAIClient = getClient(this._aiClient, this.testCollector ?? false);\n\t\t}\n\n\t\tthis._asyncAIClient.then(\n\t\t\t(aiClient) => {\n\t\t\t\tcallback(aiClient);\n\t\t\t},\n\t\t\t(err) => {\n\t\t\t\tonUnexpectedError(err);\n\t\t\t\tconsole.error(err);\n\t\t\t}\n\t\t);\n\t}\n\n\tlog(eventName: string, data?: any): void {\n\t\tif (!this._aiClient) {\n\t\t\treturn;\n\t\t}\n\t\tdata = mixin(data, this._defaultData);\n\t\tdata = validateTelemetryData(data);\n\n\t\tif (this.testCollector) {\n\t\t\tdata.properties['common.useragent'] = this.mirrored ? 'mirror-collector++' : 'collector++';\n\t\t}\n\n\t\tthis._withAIClient((aiClient) => aiClient.trackEvent({\n\t\t\tname: this._eventPrefix + '/' + eventName,\n\t\t\tproperties: data.properties,\n\t\t\tmeasurements: data.measurements\n\t\t}));\n\t}\n\n\tflush(): Promise<any> {\n\t\tif (this._aiClient) {\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tthis._withAIClient((aiClient) => {\n\t\t\t\t\taiClient.flush({\n\t\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\t\t// all data flushed\n\t\t\t\t\t\t\tthis._aiClient = undefined;\n\t\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { join } from 'vs/base/common/path';\nimport { Promises } from 'vs/base/node/pfs';\n\nexport async function buildTelemetryMessage(appRoot: string, extensionsPath?: string): Promise<string> {\n\tconst mergedTelemetry = Object.create(null);\n\n\t// Simple function to merge the telemetry into one json object\n\tconst mergeTelemetry = (contents: string, dirName: string) => {\n\t\tconst telemetryData = JSON.parse(contents);\n\t\tmergedTelemetry[dirName] = telemetryData;\n\t};\n\n\tif (extensionsPath) {\n\t\tconst dirs: string[] = [];\n\n\t\tconst files = await Promises.readdir(extensionsPath);\n\t\tfor (const file of files) {\n\t\t\ttry {\n\t\t\t\tconst fileStat = await Promises.stat(join(extensionsPath, file));\n\t\t\t\tif (fileStat.isDirectory()) {\n\t\t\t\t\tdirs.push(file);\n\t\t\t\t}\n\t\t\t} catch {\n\t\t\t\t// This handles case where broken symbolic links can cause statSync to throw and error\n\t\t\t}\n\t\t}\n\n\t\tconst telemetryJsonFolders: string[] = [];\n\t\tfor (const dir of dirs) {\n\t\t\tconst files = (await Promises.readdir(join(extensionsPath, dir))).filter(file => file === 'telemetry.json');\n\t\t\tif (files.length === 1) {\n\t\t\t\ttelemetryJsonFolders.push(dir); // // We know it contains a telemetry.json file so we add it to the list of folders which have one\n\t\t\t}\n\t\t}\n\n\t\tfor (const folder of telemetryJsonFolders) {\n\t\t\tconst contents = (await Promises.readFile(join(extensionsPath, folder, 'telemetry.json'))).toString();\n\t\t\tmergeTelemetry(contents, folder);\n\t\t}\n\t}\n\n\tlet contents = (await Promises.readFile(join(appRoot, 'telemetry-core.json'))).toString();\n\tmergeTelemetry(contents, 'vscode-core');\n\n\tcontents = (await Promises.readFile(join(appRoot, 'telemetry-extensions.json'))).toString();\n\tmergeTelemetry(contents, 'vscode-extensions');\n\n\treturn JSON.stringify(mergedTelemetry, null, 4);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IExtUri } from 'vs/base/common/resources';\n\n\nexport const IUriIdentityService = createDecorator<IUriIdentityService>('IUriIdentityService');\n\nexport interface IUriIdentityService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Uri extensions that are aware of casing.\n\t */\n\treadonly extUri: IExtUri;\n\n\t/**\n\t * Returns a canonical uri for the given resource. Different uris can point to the same\n\t * resource. That's because of casing or missing normalization, e.g the following uris\n\t * are different but refer to the same document (because windows paths are not case-sensitive)\n\t *\n\t * ```txt\n\t * file:///c:/foo/bar.txt\n\t * file:///c:/FOO/BAR.txt\n\t * ```\n\t *\n\t * This function should be invoked when feeding uris into the system that represent the truth,\n\t * e.g document uris or marker-to-document associations etc. This function should NOT be called\n\t * to pretty print a label nor to sanitize a uri.\n\t *\n\t * Samples:\n\t *\n\t * | in | out | |\n\t * |---|---|---|\n\t * | `file:///foo/bar/../bar` | `file:///foo/bar` | n/a |\n\t * | `file:///foo/bar/../bar#frag` | `file:///foo/bar#frag` | keep fragment |\n\t * | `file:///foo/BAR` | `file:///foo/bar` | assume ignore case |\n\t * | `file:///foo/bar/../BAR?q=2` | `file:///foo/BAR?q=2` | query makes it a different document |\n\t */\n\tasCanonicalUri(uri: URI): URI;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { DidUninstallExtensionEvent, IExtensionManagementService, ILocalExtension, InstallExtensionEvent, InstallExtensionResult } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { ExtensionType, IExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { FileChangeType, IFileChange, IFileService } from 'vs/platform/files/common/files';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\n\nexport class ExtensionsWatcher extends Disposable {\n\n\tprivate readonly _onDidChangeExtensionsByAnotherSource = this._register(new Emitter<{ added: ILocalExtension[], removed: IExtensionIdentifier[] }>());\n\treadonly onDidChangeExtensionsByAnotherSource = this._onDidChangeExtensionsByAnotherSource.event;\n\n\tprivate startTimestamp = 0;\n\tprivate installingExtensions: IExtensionIdentifier[] = [];\n\tprivate installedExtensions: IExtensionIdentifier[] | undefined;\n\n\tconstructor(\n\t\tprivate readonly extensionsManagementService: IExtensionManagementService,\n\t\t@IFileService fileService: IFileService,\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper();\n\t\tthis.extensionsManagementService.getInstalled(ExtensionType.User).then(extensions => {\n\t\t\tthis.installedExtensions = extensions.map(e => e.identifier);\n\t\t\tthis.startTimestamp = Date.now();\n\t\t});\n\t\tthis._register(extensionsManagementService.onInstallExtension(e => this.onInstallExtension(e)));\n\t\tthis._register(extensionsManagementService.onDidInstallExtensions(e => this.onDidInstallExtensions(e)));\n\t\tthis._register(extensionsManagementService.onDidUninstallExtension(e => this.onDidUninstallExtension(e)));\n\n\t\tconst extensionsResource = URI.file(environmentService.extensionsPath);\n\t\tthis._register(fileService.watch(extensionsResource));\n\t\tthis._register(Event.filter(fileService.onDidChangeFilesRaw, e => e.changes.some(change => this.doesChangeAffects(change, extensionsResource)))(() => this.onDidChange()));\n\t}\n\n\tprivate doesChangeAffects(change: IFileChange, extensionsResource: URI): boolean {\n\t\t// Is not immediate child of extensions resource\n\t\tif (!this.uriIdentityService.extUri.isEqual(this.uriIdentityService.extUri.dirname(change.resource), extensionsResource)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// .obsolete file changed\n\t\tif (this.uriIdentityService.extUri.isEqual(change.resource, this.uriIdentityService.extUri.joinPath(extensionsResource, '.obsolete'))) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Only interested in added/deleted changes\n\t\tif (change.type !== FileChangeType.ADDED && change.type !== FileChangeType.DELETED) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Ingore changes to files starting with `.`\n\t\tif (this.uriIdentityService.extUri.basename(change.resource).startsWith('.')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate onInstallExtension(e: InstallExtensionEvent): void {\n\t\tthis.addInstallingExtension(e.identifier);\n\t}\n\n\tprivate onDidInstallExtensions(results: readonly InstallExtensionResult[]): void {\n\t\tfor (const e of results) {\n\t\t\tthis.removeInstallingExtension(e.identifier);\n\t\t\tif (e.local) {\n\t\t\t\tthis.addInstalledExtension(e.identifier);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onDidUninstallExtension(e: DidUninstallExtensionEvent): void {\n\t\tif (!e.error) {\n\t\t\tthis.removeInstalledExtension(e.identifier);\n\t\t}\n\t}\n\n\tprivate addInstallingExtension(extension: IExtensionIdentifier) {\n\t\tthis.removeInstallingExtension(extension);\n\t\tthis.installingExtensions.push(extension);\n\t}\n\n\tprivate removeInstallingExtension(identifier: IExtensionIdentifier) {\n\t\tthis.installingExtensions = this.installingExtensions.filter(e => !areSameExtensions(e, identifier));\n\t}\n\n\tprivate addInstalledExtension(extension: IExtensionIdentifier): void {\n\t\tif (this.installedExtensions) {\n\t\t\tthis.removeInstalledExtension(extension);\n\t\t\tthis.installedExtensions.push(extension);\n\t\t}\n\t}\n\n\tprivate removeInstalledExtension(identifier: IExtensionIdentifier): void {\n\t\tif (this.installedExtensions) {\n\t\t\tthis.installedExtensions = this.installedExtensions.filter(e => !areSameExtensions(e, identifier));\n\t\t}\n\t}\n\n\tprivate async onDidChange(): Promise<void> {\n\t\tif (this.installedExtensions) {\n\t\t\tconst extensions = await this.extensionsManagementService.getInstalled(ExtensionType.User);\n\t\t\tconst added = extensions.filter(e => {\n\t\t\t\tif ([...this.installingExtensions, ...this.installedExtensions!].some(identifier => areSameExtensions(identifier, e.identifier))) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (e.installedTimestamp && e.installedTimestamp > this.startTimestamp) {\n\t\t\t\t\tthis.logService.info('Detected extension installed from another source', e.identifier.id);\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\tthis.logService.info('Ignored extension installed by another source because of invalid timestamp', e.identifier.id);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t\tconst removed = this.installedExtensions.filter(identifier => {\n\t\t\t\t// Extension being installed\n\t\t\t\tif (this.installingExtensions.some(installingExtension => areSameExtensions(installingExtension, identifier))) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (extensions.every(e => !areSameExtensions(e.identifier, identifier))) {\n\t\t\t\t\tthis.logService.info('Detected extension removed from another source', identifier.id);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\t\t\tthis.installedExtensions = extensions.map(e => e.identifier);\n\t\t\tif (added.length || removed.length) {\n\t\t\t\tthis._onDidChangeExtensionsByAnotherSource.fire({ added, removed });\n\t\t\t}\n\t\t}\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { URI } from 'vs/base/common/uri';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IFileService, FileSystemProviderCapabilities, IFileSystemProviderCapabilitiesChangeEvent, IFileSystemProviderRegistrationEvent } from 'vs/platform/files/common/files';\nimport { ExtUri, IExtUri, normalizePath } from 'vs/base/common/resources';\nimport { SkipList } from 'vs/base/common/skipList';\nimport { Event } from 'vs/base/common/event';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\n\nclass Entry {\n\tstatic _clock = 0;\n\ttime: number = Entry._clock++;\n\tconstructor(readonly uri: URI) { }\n\ttouch() {\n\t\tthis.time = Entry._clock++;\n\t\treturn this;\n\t}\n}\n\nexport class UriIdentityService implements IUriIdentityService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\treadonly extUri: IExtUri;\n\n\tprivate readonly _dispooables = new DisposableStore();\n\tprivate readonly _canonicalUris: SkipList<URI, Entry>;\n\tprivate readonly _limit = 2 ** 16;\n\n\tconstructor(@IFileService private readonly _fileService: IFileService) {\n\n\t\tconst schemeIgnoresPathCasingCache = new Map<string, boolean>();\n\n\t\t// assume path casing matters unless the file system provider spec'ed the opposite.\n\t\t// for all other cases path casing matters, e.g for\n\t\t// * virtual documents\n\t\t// * in-memory uris\n\t\t// * all kind of \"private\" schemes\n\t\tconst ignorePathCasing = (uri: URI): boolean => {\n\t\t\tlet ignorePathCasing = schemeIgnoresPathCasingCache.get(uri.scheme);\n\t\t\tif (ignorePathCasing === undefined) {\n\t\t\t\t// retrieve once and then case per scheme until a change happens\n\t\t\t\tignorePathCasing = _fileService.hasProvider(uri) && !this._fileService.hasCapability(uri, FileSystemProviderCapabilities.PathCaseSensitive);\n\t\t\t\tschemeIgnoresPathCasingCache.set(uri.scheme, ignorePathCasing);\n\t\t\t}\n\t\t\treturn ignorePathCasing;\n\t\t};\n\t\tthis._dispooables.add(Event.any<IFileSystemProviderCapabilitiesChangeEvent | IFileSystemProviderRegistrationEvent>(\n\t\t\t_fileService.onDidChangeFileSystemProviderRegistrations,\n\t\t\t_fileService.onDidChangeFileSystemProviderCapabilities\n\t\t)(e => {\n\t\t\t// remove from cache\n\t\t\tschemeIgnoresPathCasingCache.delete(e.scheme);\n\t\t}));\n\n\t\tthis.extUri = new ExtUri(ignorePathCasing);\n\t\tthis._canonicalUris = new SkipList((a, b) => this.extUri.compare(a, b, true), this._limit);\n\t}\n\n\tdispose(): void {\n\t\tthis._dispooables.dispose();\n\t\tthis._canonicalUris.clear();\n\t}\n\n\tasCanonicalUri(uri: URI): URI {\n\n\t\t// (1) normalize URI\n\t\tif (this._fileService.hasProvider(uri)) {\n\t\t\turi = normalizePath(uri);\n\t\t}\n\n\t\t// (2) find the uri in its canonical form or use this uri to define it\n\t\tlet item = this._canonicalUris.get(uri);\n\t\tif (item) {\n\t\t\treturn item.touch().uri.with({ fragment: uri.fragment });\n\t\t}\n\n\t\t// this uri is first and defines the canonical form\n\t\tthis._canonicalUris.set(uri, new Entry(uri));\n\t\tthis._checkTrim();\n\n\t\treturn uri;\n\t}\n\n\tprivate _checkTrim(): void {\n\t\tif (this._canonicalUris.size < this._limit) {\n\t\t\treturn;\n\t\t}\n\n\t\t// get all entries, sort by touch (MRU) and re-initalize\n\t\t// the uri cache and the entry clock. this is an expensive\n\t\t// operation and should happen rarely\n\t\tconst entries = [...this._canonicalUris.entries()].sort((a, b) => {\n\t\t\tif (a[1].touch < b[1].touch) {\n\t\t\t\treturn 1;\n\t\t\t} else if (a[1].touch > b[1].touch) {\n\t\t\t\treturn -1;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t});\n\n\t\tEntry._clock = 0;\n\t\tthis._canonicalUris.clear();\n\t\tconst newSize = this._limit * 0.5;\n\t\tfor (let i = 0; i < newSize; i++) {\n\t\t\tthis._canonicalUris.set(entries[i][0], entries[i][1].touch());\n\t\t}\n\t}\n}\n\nregisterSingleton(IUriIdentityService, UriIdentityService, true);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createWriteStream, WriteStream } from 'fs';\nimport { Readable } from 'stream';\nimport { createCancelablePromise, Sequencer } from 'vs/base/common/async';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport * as path from 'vs/base/common/path';\nimport { assertIsDefined } from 'vs/base/common/types';\nimport { Promises } from 'vs/base/node/pfs';\nimport * as nls from 'vs/nls';\nimport { Entry, open as _openZip, ZipFile } from 'yauzl';\nimport * as yazl from 'yazl';\n\nexport interface IExtractOptions {\n\toverwrite?: boolean;\n\n\t/**\n\t * Source path within the ZIP archive. Only the files contained in this\n\t * path will be extracted.\n\t */\n\tsourcePath?: string;\n}\n\ninterface IOptions {\n\tsourcePathRegex: RegExp;\n}\n\nexport type ExtractErrorType = 'CorruptZip' | 'Incomplete';\n\nexport class ExtractError extends Error {\n\n\treadonly type?: ExtractErrorType;\n\treadonly cause: Error;\n\n\tconstructor(type: ExtractErrorType | undefined, cause: Error) {\n\t\tlet message = cause.message;\n\n\t\tswitch (type) {\n\t\t\tcase 'CorruptZip': message = `Corrupt ZIP: ${message}`; break;\n\t\t}\n\n\t\tsuper(message);\n\t\tthis.type = type;\n\t\tthis.cause = cause;\n\t}\n}\n\nfunction modeFromEntry(entry: Entry) {\n\tconst attr = entry.externalFileAttributes >> 16 || 33188;\n\n\treturn [448 /* S_IRWXU */, 56 /* S_IRWXG */, 7 /* S_IRWXO */]\n\t\t.map(mask => attr & mask)\n\t\t.reduce((a, b) => a + b, attr & 61440 /* S_IFMT */);\n}\n\nfunction toExtractError(err: Error): ExtractError {\n\tif (err instanceof ExtractError) {\n\t\treturn err;\n\t}\n\n\tlet type: ExtractErrorType | undefined = undefined;\n\n\tif (/end of central directory record signature not found/.test(err.message)) {\n\t\ttype = 'CorruptZip';\n\t}\n\n\treturn new ExtractError(type, err);\n}\n\nfunction extractEntry(stream: Readable, fileName: string, mode: number, targetPath: string, options: IOptions, token: CancellationToken): Promise<void> {\n\tconst dirName = path.dirname(fileName);\n\tconst targetDirName = path.join(targetPath, dirName);\n\tif (!targetDirName.startsWith(targetPath)) {\n\t\treturn Promise.reject(new Error(nls.localize('invalid file', \"Error extracting {0}. Invalid file.\", fileName)));\n\t}\n\tconst targetFileName = path.join(targetPath, fileName);\n\n\tlet istream: WriteStream;\n\n\ttoken.onCancellationRequested(() => {\n\t\tif (istream) {\n\t\t\tistream.destroy();\n\t\t}\n\t});\n\n\treturn Promise.resolve(Promises.mkdir(targetDirName, { recursive: true })).then(() => new Promise<void>((c, e) => {\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tistream = createWriteStream(targetFileName, { mode });\n\t\t\tistream.once('close', () => c());\n\t\t\tistream.once('error', e);\n\t\t\tstream.once('error', e);\n\t\t\tstream.pipe(istream);\n\t\t} catch (error) {\n\t\t\te(error);\n\t\t}\n\t}));\n}\n\nfunction extractZip(zipfile: ZipFile, targetPath: string, options: IOptions, token: CancellationToken): Promise<void> {\n\tlet last = createCancelablePromise<void>(() => Promise.resolve());\n\tlet extractedEntriesCount = 0;\n\n\ttoken.onCancellationRequested(() => {\n\t\tlast.cancel();\n\t\tzipfile.close();\n\t});\n\n\treturn new Promise((c, e) => {\n\t\tconst throttler = new Sequencer();\n\n\t\tconst readNextEntry = (token: CancellationToken) => {\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\textractedEntriesCount++;\n\t\t\tzipfile.readEntry();\n\t\t};\n\n\t\tzipfile.once('error', e);\n\t\tzipfile.once('close', () => last.then(() => {\n\t\t\tif (token.isCancellationRequested || zipfile.entryCount === extractedEntriesCount) {\n\t\t\t\tc();\n\t\t\t} else {\n\t\t\t\te(new ExtractError('Incomplete', new Error(nls.localize('incompleteExtract', \"Incomplete. Found {0} of {1} entries\", extractedEntriesCount, zipfile.entryCount))));\n\t\t\t}\n\t\t}, e));\n\t\tzipfile.readEntry();\n\t\tzipfile.on('entry', (entry: Entry) => {\n\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!options.sourcePathRegex.test(entry.fileName)) {\n\t\t\t\treadNextEntry(token);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst fileName = entry.fileName.replace(options.sourcePathRegex, '');\n\n\t\t\t// directory file names end with '/'\n\t\t\tif (/\\/$/.test(fileName)) {\n\t\t\t\tconst targetFileName = path.join(targetPath, fileName);\n\t\t\t\tlast = createCancelablePromise(token => Promises.mkdir(targetFileName, { recursive: true }).then(() => readNextEntry(token)).then(undefined, e));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst stream = openZipStream(zipfile, entry);\n\t\t\tconst mode = modeFromEntry(entry);\n\n\t\t\tlast = createCancelablePromise(token => throttler.queue(() => stream.then(stream => extractEntry(stream, fileName, mode, targetPath, options, token).then(() => readNextEntry(token)))).then(null, e));\n\t\t});\n\t});\n}\n\nfunction openZip(zipFile: string, lazy: boolean = false): Promise<ZipFile> {\n\treturn new Promise<ZipFile>((resolve, reject) => {\n\t\t_openZip(zipFile, lazy ? { lazyEntries: true } : undefined!, (error?: Error, zipfile?: ZipFile) => {\n\t\t\tif (error) {\n\t\t\t\treject(toExtractError(error));\n\t\t\t} else {\n\t\t\t\tresolve(assertIsDefined(zipfile));\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction openZipStream(zipFile: ZipFile, entry: Entry): Promise<Readable> {\n\treturn new Promise<Readable>((resolve, reject) => {\n\t\tzipFile.openReadStream(entry, (error?: Error, stream?: Readable) => {\n\t\t\tif (error) {\n\t\t\t\treject(toExtractError(error));\n\t\t\t} else {\n\t\t\t\tresolve(assertIsDefined(stream));\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport interface IFile {\n\tpath: string;\n\tcontents?: Buffer | string;\n\tlocalPath?: string;\n}\n\nexport function zip(zipPath: string, files: IFile[]): Promise<string> {\n\treturn new Promise<string>((c, e) => {\n\t\tconst zip = new yazl.ZipFile();\n\t\tfiles.forEach(f => {\n\t\t\tif (f.contents) {\n\t\t\t\tzip.addBuffer(typeof f.contents === 'string' ? Buffer.from(f.contents, 'utf8') : f.contents, f.path);\n\t\t\t} else if (f.localPath) {\n\t\t\t\tzip.addFile(f.localPath, f.path);\n\t\t\t}\n\t\t});\n\t\tzip.end();\n\n\t\tconst zipStream = createWriteStream(zipPath);\n\t\tzip.outputStream.pipe(zipStream);\n\n\t\tzip.outputStream.once('error', e);\n\t\tzipStream.once('error', e);\n\t\tzipStream.once('finish', () => c(zipPath));\n\t});\n}\n\nexport function extract(zipPath: string, targetPath: string, options: IExtractOptions = {}, token: CancellationToken): Promise<void> {\n\tconst sourcePathRegex = new RegExp(options.sourcePath ? `^${options.sourcePath}` : '');\n\n\tlet promise = openZip(zipPath, true);\n\n\tif (options.overwrite) {\n\t\tpromise = promise.then(zipfile => Promises.rm(targetPath).then(() => zipfile));\n\t}\n\n\treturn promise.then(zipfile => extractZip(zipfile, targetPath, { sourcePathRegex }, token));\n}\n\nfunction read(zipPath: string, filePath: string): Promise<Readable> {\n\treturn openZip(zipPath).then(zipfile => {\n\t\treturn new Promise<Readable>((c, e) => {\n\t\t\tzipfile.on('entry', (entry: Entry) => {\n\t\t\t\tif (entry.fileName === filePath) {\n\t\t\t\t\topenZipStream(zipfile, entry).then(stream => c(stream), err => e(err));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tzipfile.once('close', () => e(new Error(nls.localize('notFound', \"{0} not found inside zip.\", filePath))));\n\t\t});\n\t});\n}\n\nexport function buffer(zipPath: string, filePath: string): Promise<Buffer> {\n\treturn read(zipPath, filePath).then(stream => {\n\t\treturn new Promise<Buffer>((c, e) => {\n\t\t\tconst buffers: Buffer[] = [];\n\t\t\tstream.once('error', e);\n\t\t\tstream.on('data', (b: Buffer) => buffers.push(b));\n\t\t\tstream.on('end', () => c(Buffer.concat(buffers)));\n\t\t});\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { buffer } from 'vs/base/node/zip';\nimport { localize } from 'vs/nls';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\nexport function getManifest(vsix: string): Promise<IExtensionManifest> {\n\treturn buffer(vsix, 'extension/package.json')\n\t\t.then(buffer => {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString('utf8'));\n\t\t\t} catch (err) {\n\t\t\t\tthrow new Error(localize('invalidManifest', \"VSIX invalid: package.json is not a JSON file.\"));\n\t\t\t}\n\t\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { flatten } from 'vs/base/common/arrays';\nimport { Limiter, Promises, Queue } from 'vs/base/common/async';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { getErrorMessage } from 'vs/base/common/errors';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { FileAccess } from 'vs/base/common/network';\nimport * as path from 'vs/base/common/path';\nimport { isWindows } from 'vs/base/common/platform';\nimport { basename } from 'vs/base/common/resources';\nimport * as semver from 'vs/base/common/semver/semver';\nimport { URI } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport * as pfs from 'vs/base/node/pfs';\nimport { extract, ExtractError } from 'vs/base/node/zip';\nimport { localize } from 'vs/nls';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ExtensionManagementError, ExtensionManagementErrorCode, Metadata, ILocalExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { areSameExtensions, ExtensionIdentifierWithVersion, getGalleryExtensionId, groupByExtension } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { localizeManifest } from 'vs/platform/extensionManagement/common/extensionNls';\nimport { ExtensionType, IExtensionIdentifier, IExtensionManifest } from 'vs/platform/extensions/common/extensions';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { CancellationToken } from 'vscode';\n\nexport type ILocalExtensionManifest = IExtensionManifest & { __metadata?: Metadata };\ntype IRelaxedLocalExtension = Omit<ILocalExtension, 'isBuiltin'> & { isBuiltin: boolean };\n\nexport class ExtensionsScanner extends Disposable {\n\n\tprivate readonly systemExtensionsPath: string;\n\tprivate readonly extensionsPath: string;\n\tprivate readonly uninstalledPath: string;\n\tprivate readonly uninstalledFileLimiter: Queue<any>;\n\n\tconstructor(\n\t\tprivate readonly beforeRemovingExtension: (e: ILocalExtension) => Promise<void>,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@INativeEnvironmentService private readonly environmentService: INativeEnvironmentService,\n\t\t@IProductService private readonly productService: IProductService,\n\t) {\n\t\tsuper();\n\t\tthis.systemExtensionsPath = environmentService.builtinExtensionsPath;\n\t\tthis.extensionsPath = environmentService.extensionsPath;\n\t\tthis.uninstalledPath = path.join(this.extensionsPath, '.obsolete');\n\t\tthis.uninstalledFileLimiter = new Queue();\n\t}\n\n\tasync cleanUp(): Promise<void> {\n\t\tawait this.removeUninstalledExtensions();\n\t\tawait this.removeOutdatedExtensions();\n\t}\n\n\tasync scanExtensions(type: ExtensionType | null): Promise<ILocalExtension[]> {\n\t\tconst promises: Promise<ILocalExtension[]>[] = [];\n\n\t\tif (type === null || type === ExtensionType.System) {\n\t\t\tpromises.push(this.scanSystemExtensions().then(null, e => Promise.reject(new ExtensionManagementError(this.joinErrors(e).message, ExtensionManagementErrorCode.Internal))));\n\t\t}\n\n\t\tif (type === null || type === ExtensionType.User) {\n\t\t\tpromises.push(this.scanUserExtensions(true).then(null, e => Promise.reject(new ExtensionManagementError(this.joinErrors(e).message, ExtensionManagementErrorCode.Internal))));\n\t\t}\n\n\t\ttry {\n\t\t\tconst result = await Promise.all(promises);\n\t\t\treturn flatten(result);\n\t\t} catch (error) {\n\t\t\tthrow this.joinErrors(error);\n\t\t}\n\t}\n\n\tasync scanUserExtensions(excludeOutdated: boolean): Promise<ILocalExtension[]> {\n\t\tthis.logService.trace('Started scanning user extensions');\n\t\tlet [uninstalled, extensions] = await Promise.all([this.getUninstalledExtensions(), this.scanAllUserExtensions()]);\n\t\textensions = extensions.filter(e => !uninstalled[new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version).key()]);\n\t\tif (excludeOutdated) {\n\t\t\tconst byExtension: ILocalExtension[][] = groupByExtension(extensions, e => e.identifier);\n\t\t\textensions = byExtension.map(p => p.sort((a, b) => semver.rcompare(a.manifest.version, b.manifest.version))[0]);\n\t\t}\n\t\tthis.logService.trace('Scanned user extensions:', extensions.length);\n\t\treturn extensions;\n\t}\n\n\tasync scanAllUserExtensions(): Promise<ILocalExtension[]> {\n\t\treturn this.scanExtensionsInDir(this.extensionsPath, ExtensionType.User);\n\t}\n\n\tasync extractUserExtension(identifierWithVersion: ExtensionIdentifierWithVersion, zipPath: string, metadata: Metadata | undefined, token: CancellationToken): Promise<ILocalExtension> {\n\t\tconst folderName = identifierWithVersion.key();\n\t\tconst tempPath = path.join(this.extensionsPath, `.${generateUuid()}`);\n\t\tconst extensionPath = path.join(this.extensionsPath, folderName);\n\n\t\ttry {\n\t\t\tawait pfs.Promises.rm(extensionPath);\n\t\t} catch (error) {\n\t\t\ttry {\n\t\t\t\tawait pfs.Promises.rm(extensionPath);\n\t\t\t} catch (e) { /* ignore */ }\n\t\t\tthrow new ExtensionManagementError(localize('errorDeleting', \"Unable to delete the existing folder '{0}' while installing the extension '{1}'. Please delete the folder manually and try again\", extensionPath, identifierWithVersion.id), ExtensionManagementErrorCode.Delete);\n\t\t}\n\n\t\tawait this.extractAtLocation(identifierWithVersion, zipPath, tempPath, token);\n\t\tlet local = await this.scanExtension(URI.file(tempPath), ExtensionType.User);\n\t\tif (!local) {\n\t\t\tthrow new Error(localize('cannot read', \"Cannot read the extension from {0}\", tempPath));\n\t\t}\n\t\tawait this.storeMetadata(local, { ...metadata, installedTimestamp: Date.now() });\n\n\t\ttry {\n\t\t\tawait this.rename(identifierWithVersion, tempPath, extensionPath, Date.now() + (2 * 60 * 1000) /* Retry for 2 minutes */);\n\t\t\tthis.logService.info('Renamed to', extensionPath);\n\t\t} catch (error) {\n\t\t\ttry {\n\t\t\t\tawait pfs.Promises.rm(tempPath);\n\t\t\t} catch (e) { /* ignore */ }\n\t\t\tif (error.code === 'ENOTEMPTY') {\n\t\t\t\tthis.logService.info(`Rename failed because extension was installed by another source. So ignoring renaming.`, identifierWithVersion.id);\n\t\t\t} else {\n\t\t\t\tthis.logService.info(`Rename failed because of ${getErrorMessage(error)}. Deleted from extracted location`, tempPath);\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tlocal = await this.scanExtension(URI.file(extensionPath), ExtensionType.User);\n\t\t} catch (e) { /*ignore */ }\n\n\t\tif (local) {\n\t\t\treturn local;\n\t\t}\n\t\tthrow new Error(localize('cannot read', \"Cannot read the extension from {0}\", this.extensionsPath));\n\t}\n\n\tasync saveMetadataForLocalExtension(local: ILocalExtension, metadata: Metadata): Promise<ILocalExtension> {\n\t\tthis.setMetadata(local, metadata);\n\t\tawait this.storeMetadata(local, { ...metadata, installedTimestamp: local.installedTimestamp });\n\t\treturn local;\n\t}\n\n\tprivate async storeMetadata(local: ILocalExtension, metaData: Metadata): Promise<ILocalExtension> {\n\t\t// unset if false\n\t\tmetaData.isMachineScoped = metaData.isMachineScoped || undefined;\n\t\tmetaData.isBuiltin = metaData.isBuiltin || undefined;\n\t\tmetaData.installedTimestamp = metaData.installedTimestamp || undefined;\n\t\tconst manifestPath = path.join(local.location.fsPath, 'package.json');\n\t\tconst raw = await pfs.Promises.readFile(manifestPath, 'utf8');\n\t\tconst { manifest } = await this.parseManifest(raw);\n\t\t(manifest as ILocalExtensionManifest).__metadata = metaData;\n\t\tawait pfs.Promises.writeFile(manifestPath, JSON.stringify(manifest, null, '\\t'));\n\t\treturn local;\n\t}\n\n\tgetUninstalledExtensions(): Promise<IStringDictionary<boolean>> {\n\t\treturn this.withUninstalledExtensions();\n\t}\n\n\tasync setUninstalled(...extensions: ILocalExtension[]): Promise<void> {\n\t\tconst ids: ExtensionIdentifierWithVersion[] = extensions.map(e => new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version));\n\t\tawait this.withUninstalledExtensions(uninstalled => {\n\t\t\tids.forEach(id => uninstalled[id.key()] = true);\n\t\t});\n\t}\n\n\tasync setInstalled(identifierWithVersion: ExtensionIdentifierWithVersion): Promise<ILocalExtension | null> {\n\t\tawait this.withUninstalledExtensions(uninstalled => delete uninstalled[identifierWithVersion.key()]);\n\t\tconst installed = await this.scanExtensions(ExtensionType.User);\n\t\tconst localExtension = installed.find(i => new ExtensionIdentifierWithVersion(i.identifier, i.manifest.version).equals(identifierWithVersion)) || null;\n\t\tif (!localExtension) {\n\t\t\treturn null;\n\t\t}\n\t\tawait this.storeMetadata(localExtension, { installedTimestamp: Date.now() });\n\t\treturn this.scanExtension(localExtension.location, ExtensionType.User);\n\t}\n\n\tprivate async withUninstalledExtensions(updateFn?: (uninstalled: IStringDictionary<boolean>) => void): Promise<IStringDictionary<boolean>> {\n\t\treturn this.uninstalledFileLimiter.queue(async () => {\n\t\t\tlet raw: string | undefined;\n\t\t\ttry {\n\t\t\t\traw = await pfs.Promises.readFile(this.uninstalledPath, 'utf8');\n\t\t\t} catch (err) {\n\t\t\t\tif (err.code !== 'ENOENT') {\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet uninstalled = {};\n\t\t\tif (raw) {\n\t\t\t\ttry {\n\t\t\t\t\tuninstalled = JSON.parse(raw);\n\t\t\t\t} catch (e) { /* ignore */ }\n\t\t\t}\n\n\t\t\tif (updateFn) {\n\t\t\t\tupdateFn(uninstalled);\n\t\t\t\tif (Object.keys(uninstalled).length) {\n\t\t\t\t\tawait pfs.Promises.writeFile(this.uninstalledPath, JSON.stringify(uninstalled));\n\t\t\t\t} else {\n\t\t\t\t\tawait pfs.Promises.rm(this.uninstalledPath);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn uninstalled;\n\t\t});\n\t}\n\n\tasync removeExtension(extension: ILocalExtension, type: string): Promise<void> {\n\t\tthis.logService.trace(`Deleting ${type} extension from disk`, extension.identifier.id, extension.location.fsPath);\n\t\tawait pfs.Promises.rm(extension.location.fsPath);\n\t\tthis.logService.info('Deleted from disk', extension.identifier.id, extension.location.fsPath);\n\t}\n\n\tasync removeUninstalledExtension(extension: ILocalExtension): Promise<void> {\n\t\tawait this.removeExtension(extension, 'uninstalled');\n\t\tawait this.withUninstalledExtensions(uninstalled => delete uninstalled[new ExtensionIdentifierWithVersion(extension.identifier, extension.manifest.version).key()]);\n\t}\n\n\tprivate async extractAtLocation(identifier: IExtensionIdentifier, zipPath: string, location: string, token: CancellationToken): Promise<void> {\n\t\tthis.logService.trace(`Started extracting the extension from ${zipPath} to ${location}`);\n\n\t\t// Clean the location\n\t\ttry {\n\t\t\tawait pfs.Promises.rm(location);\n\t\t} catch (e) {\n\t\t\tthrow new ExtensionManagementError(this.joinErrors(e).message, ExtensionManagementErrorCode.Delete);\n\t\t}\n\n\t\ttry {\n\t\t\tawait extract(zipPath, location, { sourcePath: 'extension', overwrite: true }, token);\n\t\t\tthis.logService.info(`Extracted extension to ${location}:`, identifier.id);\n\t\t} catch (e) {\n\t\t\ttry { await pfs.Promises.rm(location); } catch (e) { /* Ignore */ }\n\t\t\tlet errorCode = ExtensionManagementErrorCode.Extract;\n\t\t\tif (e instanceof ExtractError) {\n\t\t\t\tif (e.type === 'CorruptZip') {\n\t\t\t\t\terrorCode = ExtensionManagementErrorCode.CorruptZip;\n\t\t\t\t} else if (e.type === 'Incomplete') {\n\t\t\t\t\terrorCode = ExtensionManagementErrorCode.IncompleteZip;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrow new ExtensionManagementError(e.message, errorCode);\n\t\t}\n\t}\n\n\tprivate async rename(identifier: IExtensionIdentifier, extractPath: string, renamePath: string, retryUntil: number): Promise<void> {\n\t\ttry {\n\t\t\tawait pfs.Promises.rename(extractPath, renamePath);\n\t\t} catch (error) {\n\t\t\tif (isWindows && error && error.code === 'EPERM' && Date.now() < retryUntil) {\n\t\t\t\tthis.logService.info(`Failed renaming ${extractPath} to ${renamePath} with 'EPERM' error. Trying again...`, identifier.id);\n\t\t\t\treturn this.rename(identifier, extractPath, renamePath, retryUntil);\n\t\t\t}\n\t\t\tthrow new ExtensionManagementError(error.message || localize('renameError', \"Unknown error while renaming {0} to {1}\", extractPath, renamePath), error.code || ExtensionManagementErrorCode.Rename);\n\t\t}\n\t}\n\n\tprivate async scanSystemExtensions(): Promise<ILocalExtension[]> {\n\t\tthis.logService.trace('Started scanning system extensions');\n\t\tconst systemExtensionsPromise = this.scanDefaultSystemExtensions();\n\t\tif (this.environmentService.isBuilt) {\n\t\t\treturn systemExtensionsPromise;\n\t\t}\n\n\t\t// Scan other system extensions during development\n\t\tconst devSystemExtensionsPromise = this.scanDevSystemExtensions();\n\t\tconst [systemExtensions, devSystemExtensions] = await Promise.all([systemExtensionsPromise, devSystemExtensionsPromise]);\n\t\treturn [...systemExtensions, ...devSystemExtensions];\n\t}\n\n\tprivate async scanExtensionsInDir(dir: string, type: ExtensionType): Promise<ILocalExtension[]> {\n\t\tconst limiter = new Limiter<any>(10);\n\t\tconst stat = await this.fileService.resolve(URI.file(dir));\n\t\tif (stat.children) {\n\t\t\tconst extensions = await Promise.all<ILocalExtension>(stat.children.filter(c => c.isDirectory)\n\t\t\t\t.map(c => limiter.queue(async () => {\n\t\t\t\t\tif (type === ExtensionType.User && basename(c.resource).indexOf('.') === 0) { // Do not consider user extension folder starting with `.`\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\treturn this.scanExtension(c.resource, type);\n\t\t\t\t})));\n\t\t\treturn extensions.filter(e => e && e.identifier);\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate async scanExtension(extensionLocation: URI, type: ExtensionType): Promise<ILocalExtension | null> {\n\t\ttry {\n\t\t\tconst stat = await this.fileService.resolve(extensionLocation);\n\t\t\tif (stat.children) {\n\t\t\t\tconst { manifest, metadata } = await this.readManifest(extensionLocation.fsPath);\n\t\t\t\tconst readmeUrl = stat.children.find(({ name }) => /^readme(\\.txt|\\.md|)$/i.test(name))?.resource;\n\t\t\t\tconst changelogUrl = stat.children.find(({ name }) => /^changelog(\\.txt|\\.md|)$/i.test(name))?.resource;\n\t\t\t\tconst identifier = { id: getGalleryExtensionId(manifest.publisher, manifest.name) };\n\t\t\t\tconst local = <ILocalExtension>{ type, identifier, manifest, location: extensionLocation, readmeUrl, changelogUrl, publisherDisplayName: null, publisherId: null, isMachineScoped: false, isBuiltin: type === ExtensionType.System };\n\t\t\t\tthis.setMetadata(local, metadata);\n\t\t\t\treturn local;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tif (type !== ExtensionType.System) {\n\t\t\t\tthis.logService.trace(e);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate async scanDefaultSystemExtensions(): Promise<ILocalExtension[]> {\n\t\tconst result = await this.scanExtensionsInDir(this.systemExtensionsPath, ExtensionType.System);\n\t\tthis.logService.trace('Scanned system extensions:', result.length);\n\t\treturn result;\n\t}\n\n\tprivate async scanDevSystemExtensions(): Promise<ILocalExtension[]> {\n\t\tconst devSystemExtensionsList = this.getDevSystemExtensionsList();\n\t\tif (devSystemExtensionsList.length) {\n\t\t\tconst result = await this.scanExtensionsInDir(this.devSystemExtensionsPath, ExtensionType.System);\n\t\t\tthis.logService.trace('Scanned dev system extensions:', result.length);\n\t\t\treturn result.filter(r => devSystemExtensionsList.some(id => areSameExtensions(r.identifier, { id })));\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate setMetadata(local: IRelaxedLocalExtension, metadata: Metadata | null): void {\n\t\tlocal.publisherDisplayName = metadata?.publisherDisplayName || null;\n\t\tlocal.publisherId = metadata?.publisherId || null;\n\t\tlocal.identifier.uuid = metadata?.id;\n\t\tlocal.isMachineScoped = !!metadata?.isMachineScoped;\n\t\tlocal.isPreReleaseVersion = !!metadata?.isPreReleaseVersion;\n\t\tlocal.preRelease = !!metadata?.preRelease;\n\t\tlocal.isBuiltin = local.type === ExtensionType.System || !!metadata?.isBuiltin;\n\t\tlocal.installedTimestamp = metadata?.installedTimestamp;\n\t}\n\n\tprivate async removeUninstalledExtensions(): Promise<void> {\n\t\tconst uninstalled = await this.getUninstalledExtensions();\n\t\tconst extensions = await this.scanAllUserExtensions(); // All user extensions\n\t\tconst installed: Set<string> = new Set<string>();\n\t\tfor (const e of extensions) {\n\t\t\tif (!uninstalled[new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version).key()]) {\n\t\t\t\tinstalled.add(e.identifier.id.toLowerCase());\n\t\t\t}\n\t\t}\n\t\tconst byExtension: ILocalExtension[][] = groupByExtension(extensions, e => e.identifier);\n\t\tawait Promises.settled(byExtension.map(async e => {\n\t\t\tconst latest = e.sort((a, b) => semver.rcompare(a.manifest.version, b.manifest.version))[0];\n\t\t\tif (!installed.has(latest.identifier.id.toLowerCase())) {\n\t\t\t\tawait this.beforeRemovingExtension(latest);\n\t\t\t}\n\t\t}));\n\t\tconst toRemove: ILocalExtension[] = extensions.filter(e => uninstalled[new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version).key()]);\n\t\tawait Promises.settled(toRemove.map(e => this.removeUninstalledExtension(e)));\n\t}\n\n\tprivate async removeOutdatedExtensions(): Promise<void> {\n\t\tconst extensions = await this.scanAllUserExtensions();\n\t\tconst toRemove: ILocalExtension[] = [];\n\n\t\t// Outdated extensions\n\t\tconst byExtension: ILocalExtension[][] = groupByExtension(extensions, e => e.identifier);\n\t\ttoRemove.push(...flatten(byExtension.map(p => p.sort((a, b) => semver.rcompare(a.manifest.version, b.manifest.version)).slice(1))));\n\n\t\tawait Promises.settled(toRemove.map(extension => this.removeExtension(extension, 'outdated')));\n\t}\n\n\tprivate getDevSystemExtensionsList(): string[] {\n\t\treturn (this.productService.builtInExtensions || []).map(e => e.name);\n\t}\n\n\tprivate joinErrors(errorOrErrors: (Error | string) | (Array<Error | string>)): Error {\n\t\tconst errors = Array.isArray(errorOrErrors) ? errorOrErrors : [errorOrErrors];\n\t\tif (errors.length === 1) {\n\t\t\treturn errors[0] instanceof Error ? <Error>errors[0] : new Error(<string>errors[0]);\n\t\t}\n\t\treturn errors.reduce<Error>((previousValue: Error, currentValue: Error | string) => {\n\t\t\treturn new Error(`${previousValue.message}${previousValue.message ? ',' : ''}${currentValue instanceof Error ? currentValue.message : currentValue}`);\n\t\t}, new Error(''));\n\t}\n\n\tprivate _devSystemExtensionsPath: string | null = null;\n\tprivate get devSystemExtensionsPath(): string {\n\t\tif (!this._devSystemExtensionsPath) {\n\t\t\tthis._devSystemExtensionsPath = path.normalize(path.join(FileAccess.asFileUri('', require).fsPath, '..', '.build', 'builtInExtensions'));\n\t\t}\n\t\treturn this._devSystemExtensionsPath;\n\t}\n\n\tprivate async readManifest(extensionPath: string): Promise<{ manifest: IExtensionManifest; metadata: Metadata | null; }> {\n\t\tconst promises = [\n\t\t\tpfs.Promises.readFile(path.join(extensionPath, 'package.json'), 'utf8')\n\t\t\t\t.then(raw => this.parseManifest(raw)),\n\t\t\tpfs.Promises.readFile(path.join(extensionPath, 'package.nls.json'), 'utf8')\n\t\t\t\t.then(undefined, err => err.code !== 'ENOENT' ? Promise.reject<string>(err) : '{}')\n\t\t\t\t.then(raw => JSON.parse(raw))\n\t\t];\n\n\t\tconst [{ manifest, metadata }, translations] = await Promise.all(promises);\n\t\treturn {\n\t\t\tmanifest: localizeManifest(manifest, translations),\n\t\t\tmetadata\n\t\t};\n\t}\n\n\tprivate parseManifest(raw: string): Promise<{ manifest: IExtensionManifest; metadata: Metadata | null; }> {\n\t\treturn new Promise((c, e) => {\n\t\t\ttry {\n\t\t\t\tconst manifest = JSON.parse(raw);\n\t\t\t\tconst metadata = manifest.__metadata || null;\n\t\t\t\tc({ manifest, metadata });\n\t\t\t} catch (err) {\n\t\t\t\te(new Error(localize('invalidManifest', \"Extension invalid: package.json is not a JSON file.\")));\n\t\t\t}\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { getErrorMessage } from 'vs/base/common/errors';\nimport { Schemas } from 'vs/base/common/network';\nimport * as path from 'vs/base/common/path';\nimport { isLinux, isMacintosh, platform } from 'vs/base/common/platform';\nimport { arch } from 'vs/base/common/process';\nimport { joinPath } from 'vs/base/common/resources';\nimport * as semver from 'vs/base/common/semver/semver';\nimport { URI } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport * as pfs from 'vs/base/node/pfs';\nimport { IFile, zip } from 'vs/base/node/zip';\nimport * as nls from 'vs/nls';\nimport { IDownloadService } from 'vs/platform/download/common/download';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { AbstractExtensionManagementService, AbstractExtensionTask, IInstallExtensionTask, IUninstallExtensionTask, joinErrors, UninstallExtensionTaskOptions } from 'vs/platform/extensionManagement/common/abstractExtensionManagementService';\nimport {\n\tExtensionManagementError, ExtensionManagementErrorCode, getTargetPlatform, IExtensionGalleryService, IExtensionIdentifier, IExtensionManagementService, IGalleryExtension, IGalleryMetadata, ILocalExtension, InstallOperation, InstallOptions,\n\tInstallVSIXOptions, Metadata, TargetPlatform\n} from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { areSameExtensions, ExtensionIdentifierWithVersion, getGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { ExtensionsDownloader } from 'vs/platform/extensionManagement/node/extensionDownloader';\nimport { ExtensionsLifecycle } from 'vs/platform/extensionManagement/node/extensionLifecycle';\nimport { getManifest } from 'vs/platform/extensionManagement/node/extensionManagementUtil';\nimport { ExtensionsManifestCache } from 'vs/platform/extensionManagement/node/extensionsManifestCache';\nimport { ExtensionsScanner, ILocalExtensionManifest } from 'vs/platform/extensionManagement/node/extensionsScanner';\nimport { ExtensionsWatcher } from 'vs/platform/extensionManagement/node/extensionsWatcher';\nimport { ExtensionType, IExtensionManifest } from 'vs/platform/extensions/common/extensions';\nimport { isEngineValid } from 'vs/platform/extensions/common/extensionValidator';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\n\ninterface InstallableExtension {\n\tzipPath: string;\n\tidentifierWithVersion: ExtensionIdentifierWithVersion;\n\tmetadata?: Metadata;\n}\n\nexport class ExtensionManagementService extends AbstractExtensionManagementService implements IExtensionManagementService {\n\n\tprivate readonly extensionsScanner: ExtensionsScanner;\n\tprivate readonly manifestCache: ExtensionsManifestCache;\n\tprivate readonly extensionsDownloader: ExtensionsDownloader;\n\n\tconstructor(\n\t\t@IExtensionGalleryService galleryService: IExtensionGalleryService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@ILogService logService: ILogService,\n\t\t@INativeEnvironmentService private readonly environmentService: INativeEnvironmentService,\n\t\t@IDownloadService private downloadService: IDownloadService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IProductService productService: IProductService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService\n\t) {\n\t\tsuper(galleryService, telemetryService, logService, productService);\n\t\tconst extensionLifecycle = this._register(instantiationService.createInstance(ExtensionsLifecycle));\n\t\tthis.extensionsScanner = this._register(instantiationService.createInstance(ExtensionsScanner, extension => extensionLifecycle.postUninstall(extension)));\n\t\tthis.manifestCache = this._register(new ExtensionsManifestCache(environmentService, this));\n\t\tthis.extensionsDownloader = this._register(instantiationService.createInstance(ExtensionsDownloader));\n\t\tconst extensionsWatcher = this._register(new ExtensionsWatcher(this, fileService, environmentService, logService, uriIdentityService));\n\n\t\tthis._register(extensionsWatcher.onDidChangeExtensionsByAnotherSource(({ added, removed }) => {\n\t\t\tif (added.length) {\n\t\t\t\tthis._onDidInstallExtensions.fire(added.map(local => ({ identifier: local.identifier, operation: InstallOperation.None, local })));\n\t\t\t}\n\t\t\tremoved.forEach(extension => this._onDidUninstallExtension.fire({ identifier: extension }));\n\t\t}));\n\t}\n\n\tprivate _targetPlatformPromise: Promise<TargetPlatform> | undefined;\n\tgetTargetPlatform(): Promise<TargetPlatform> {\n\t\tif (!this._targetPlatformPromise) {\n\t\t\tthis._targetPlatformPromise = (async () => {\n\t\t\t\tconst isAlpineLinux = await this.isAlpineLinux();\n\t\t\t\tconst targetPlatform = getTargetPlatform(isAlpineLinux ? 'alpine' : platform, arch);\n\t\t\t\tthis.logService.debug('ExtensionManagementService#TargetPlatform:', targetPlatform);\n\t\t\t\treturn targetPlatform;\n\t\t\t})();\n\t\t}\n\t\treturn this._targetPlatformPromise;\n\t}\n\n\tprivate async isAlpineLinux(): Promise<boolean> {\n\t\tif (!isLinux) {\n\t\t\treturn false;\n\t\t}\n\t\tlet content: string | undefined;\n\t\ttry {\n\t\t\tconst fileContent = await this.fileService.readFile(URI.file('/etc/os-release'));\n\t\t\tcontent = fileContent.value.toString();\n\t\t} catch (error) {\n\t\t\ttry {\n\t\t\t\tconst fileContent = await this.fileService.readFile(URI.file('/usr/lib/os-release'));\n\t\t\t\tcontent = fileContent.value.toString();\n\t\t\t} catch (error) {\n\t\t\t\t/* Ignore */\n\t\t\t\tthis.logService.debug(`Error while getting the os-release file.`, getErrorMessage(error));\n\t\t\t}\n\t\t}\n\t\treturn !!content && (content.match(/^ID=([^\\u001b\\r\\n]*)/m) || [])[1] === 'alpine';\n\t}\n\n\tasync zip(extension: ILocalExtension): Promise<URI> {\n\t\tthis.logService.trace('ExtensionManagementService#zip', extension.identifier.id);\n\t\tconst files = await this.collectFiles(extension);\n\t\tconst location = await zip(joinPath(this.environmentService.tmpDir, generateUuid()).fsPath, files);\n\t\treturn URI.file(location);\n\t}\n\n\tasync unzip(zipLocation: URI): Promise<IExtensionIdentifier> {\n\t\tthis.logService.trace('ExtensionManagementService#unzip', zipLocation.toString());\n\t\tconst local = await this.install(zipLocation);\n\t\treturn local.identifier;\n\t}\n\n\tasync getManifest(vsix: URI): Promise<IExtensionManifest> {\n\t\tconst downloadLocation = await this.downloadVsix(vsix);\n\t\tconst zipPath = path.resolve(downloadLocation.fsPath);\n\t\treturn getManifest(zipPath);\n\t}\n\n\tgetInstalled(type: ExtensionType | null = null): Promise<ILocalExtension[]> {\n\t\treturn this.extensionsScanner.scanExtensions(type);\n\t}\n\n\tasync install(vsix: URI, options: InstallVSIXOptions = {}): Promise<ILocalExtension> {\n\t\tthis.logService.trace('ExtensionManagementService#install', vsix.toString());\n\n\t\tconst downloadLocation = await this.downloadVsix(vsix);\n\t\tconst manifest = await getManifest(path.resolve(downloadLocation.fsPath));\n\t\tif (manifest.engines && manifest.engines.vscode && !isEngineValid(manifest.engines.vscode, this.productService.version, this.productService.date)) {\n\t\t\tthrow new Error(nls.localize('incompatible', \"Unable to install extension '{0}' as it is not compatible with VS Code '{1}'.\", getGalleryExtensionId(manifest.publisher, manifest.name), this.productService.version));\n\t\t}\n\n\t\treturn this.installExtension(manifest, downloadLocation, options);\n\t}\n\n\tasync updateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension> {\n\t\tthis.logService.trace('ExtensionManagementService#updateMetadata', local.identifier.id);\n\t\tconst localMetadata: Metadata = { ...((<ILocalExtensionManifest>local.manifest).__metadata || {}), ...metadata };\n\t\tif (metadata.isPreReleaseVersion) {\n\t\t\tlocalMetadata.preRelease = true;\n\t\t}\n\t\tlocal = await this.extensionsScanner.saveMetadataForLocalExtension(local, localMetadata);\n\t\tthis.manifestCache.invalidate();\n\t\treturn local;\n\t}\n\n\tasync updateExtensionScope(local: ILocalExtension, isMachineScoped: boolean): Promise<ILocalExtension> {\n\t\tthis.logService.trace('ExtensionManagementService#updateExtensionScope', local.identifier.id);\n\t\tlocal = await this.extensionsScanner.saveMetadataForLocalExtension(local, { ...((<ILocalExtensionManifest>local.manifest).__metadata || {}), isMachineScoped });\n\t\tthis.manifestCache.invalidate();\n\t\treturn local;\n\t}\n\n\tremoveDeprecatedExtensions(): Promise<void> {\n\t\treturn this.extensionsScanner.cleanUp();\n\t}\n\n\tprivate async downloadVsix(vsix: URI): Promise<URI> {\n\t\tif (vsix.scheme === Schemas.file) {\n\t\t\treturn vsix;\n\t\t}\n\t\tconst downloadedLocation = joinPath(this.environmentService.tmpDir, generateUuid());\n\t\tawait this.downloadService.download(vsix, downloadedLocation);\n\t\treturn downloadedLocation;\n\t}\n\n\tprotected createInstallExtensionTask(manifest: IExtensionManifest, extension: URI | IGalleryExtension, options: InstallOptions & InstallVSIXOptions): IInstallExtensionTask {\n\t\treturn URI.isUri(extension) ? new InstallVSIXTask(manifest, extension, options, this.galleryService, this.extensionsScanner, this.logService) : new InstallGalleryExtensionTask(extension, options, this.extensionsDownloader, this.extensionsScanner, this.logService);\n\t}\n\n\tprotected createUninstallExtensionTask(extension: ILocalExtension, options: UninstallExtensionTaskOptions): IUninstallExtensionTask {\n\t\treturn new UninstallExtensionTask(extension, options, this.extensionsScanner);\n\t}\n\n\tprivate async collectFiles(extension: ILocalExtension): Promise<IFile[]> {\n\n\t\tconst collectFilesFromDirectory = async (dir: string): Promise<string[]> => {\n\t\t\tlet entries = await pfs.Promises.readdir(dir);\n\t\t\tentries = entries.map(e => path.join(dir, e));\n\t\t\tconst stats = await Promise.all(entries.map(e => pfs.Promises.stat(e)));\n\t\t\tlet promise: Promise<string[]> = Promise.resolve([]);\n\t\t\tstats.forEach((stat, index) => {\n\t\t\t\tconst entry = entries[index];\n\t\t\t\tif (stat.isFile()) {\n\t\t\t\t\tpromise = promise.then(result => ([...result, entry]));\n\t\t\t\t}\n\t\t\t\tif (stat.isDirectory()) {\n\t\t\t\t\tpromise = promise\n\t\t\t\t\t\t.then(result => collectFilesFromDirectory(entry)\n\t\t\t\t\t\t\t.then(files => ([...result, ...files])));\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn promise;\n\t\t};\n\n\t\tconst files = await collectFilesFromDirectory(extension.location.fsPath);\n\t\treturn files.map(f => (<IFile>{ path: `extension/${path.relative(extension.location.fsPath, f)}`, localPath: f }));\n\t}\n\n}\n\nabstract class AbstractInstallExtensionTask extends AbstractExtensionTask<ILocalExtension> implements IInstallExtensionTask {\n\n\tprotected _operation = InstallOperation.Install;\n\tget operation() { return this._operation; }\n\n\tconstructor(\n\t\treadonly identifier: IExtensionIdentifier,\n\t\treadonly source: URI | IGalleryExtension,\n\t\tprotected readonly extensionsScanner: ExtensionsScanner,\n\t\tprotected readonly logService: ILogService,\n\t) {\n\t\tsuper();\n\t}\n\n\tprotected async installExtension(installableExtension: InstallableExtension, token: CancellationToken): Promise<ILocalExtension> {\n\t\ttry {\n\t\t\tconst local = await this.unsetUninstalledAndGetLocal(installableExtension.identifierWithVersion);\n\t\t\tif (local) {\n\t\t\t\treturn installableExtension.metadata ? this.extensionsScanner.saveMetadataForLocalExtension(local, { ...((<ILocalExtensionManifest>local.manifest).__metadata || {}), ...installableExtension.metadata }) : local;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tif (isMacintosh) {\n\t\t\t\tthrow new ExtensionManagementError(nls.localize('quitCode', \"Unable to install the extension. Please Quit and Start VS Code before reinstalling.\"), ExtensionManagementErrorCode.Internal);\n\t\t\t} else {\n\t\t\t\tthrow new ExtensionManagementError(nls.localize('exitCode', \"Unable to install the extension. Please Exit and Start VS Code before reinstalling.\"), ExtensionManagementErrorCode.Internal);\n\t\t\t}\n\t\t}\n\t\treturn this.extract(installableExtension, token);\n\t}\n\n\tprotected async unsetUninstalledAndGetLocal(identifierWithVersion: ExtensionIdentifierWithVersion): Promise<ILocalExtension | null> {\n\t\tconst isUninstalled = await this.isUninstalled(identifierWithVersion);\n\t\tif (!isUninstalled) {\n\t\t\treturn null;\n\t\t}\n\n\t\tthis.logService.trace('Removing the extension from uninstalled list:', identifierWithVersion.id);\n\t\t// If the same version of extension is marked as uninstalled, remove it from there and return the local.\n\t\tconst local = await this.extensionsScanner.setInstalled(identifierWithVersion);\n\t\tthis.logService.info('Removed the extension from uninstalled list:', identifierWithVersion.id);\n\n\t\treturn local;\n\t}\n\n\tprivate async isUninstalled(identifier: ExtensionIdentifierWithVersion): Promise<boolean> {\n\t\tconst uninstalled = await this.extensionsScanner.getUninstalledExtensions();\n\t\treturn !!uninstalled[identifier.key()];\n\t}\n\n\tprivate async extract({ zipPath, identifierWithVersion, metadata }: InstallableExtension, token: CancellationToken): Promise<ILocalExtension> {\n\t\tlet local = await this.extensionsScanner.extractUserExtension(identifierWithVersion, zipPath, metadata, token);\n\t\tthis.logService.info('Extracting completed.', identifierWithVersion.id);\n\t\treturn local;\n\t}\n\n}\n\nclass InstallGalleryExtensionTask extends AbstractInstallExtensionTask {\n\n\tconstructor(\n\t\tprivate readonly gallery: IGalleryExtension,\n\t\tprivate readonly options: InstallOptions,\n\t\tprivate readonly extensionsDownloader: ExtensionsDownloader,\n\t\textensionsScanner: ExtensionsScanner,\n\t\tlogService: ILogService,\n\t) {\n\t\tsuper(gallery.identifier, gallery, extensionsScanner, logService);\n\t}\n\n\tprotected async doRun(token: CancellationToken): Promise<ILocalExtension> {\n\t\tconst installed = await this.extensionsScanner.scanExtensions(null);\n\t\tconst existingExtension = installed.find(i => areSameExtensions(i.identifier, this.gallery.identifier));\n\t\tif (existingExtension) {\n\t\t\tthis._operation = InstallOperation.Update;\n\t\t}\n\n\t\tconst installableExtension = await this.downloadInstallableExtension(this.gallery, this._operation);\n\t\tinstallableExtension.metadata.isMachineScoped = this.options.isMachineScoped || existingExtension?.isMachineScoped;\n\t\tinstallableExtension.metadata.isBuiltin = this.options.isBuiltin || existingExtension?.isBuiltin;\n\t\tinstallableExtension.metadata.isPreReleaseVersion = this.gallery.properties.isPreReleaseVersion;\n\t\tinstallableExtension.metadata.preRelease = this.gallery.hasPreReleaseVersion ? this.gallery.properties.isPreReleaseVersion : existingExtension?.preRelease;\n\n\t\ttry {\n\t\t\tconst local = await this.installExtension(installableExtension, token);\n\t\t\tif (existingExtension && semver.neq(existingExtension.manifest.version, this.gallery.version)) {\n\t\t\t\tawait this.extensionsScanner.setUninstalled(existingExtension);\n\t\t\t}\n\t\t\treturn local;\n\t\t} catch (error) {\n\t\t\tawait this.deleteDownloadedVSIX(installableExtension.zipPath);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate async deleteDownloadedVSIX(vsix: string): Promise<void> {\n\t\ttry {\n\t\t\tawait this.extensionsDownloader.delete(URI.file(vsix));\n\t\t} catch (error) {\n\t\t\t/* Ignore */\n\t\t\tthis.logService.warn('Error while deleting the downloaded vsix', vsix.toString(), getErrorMessage(error));\n\t\t}\n\t}\n\n\tprivate async downloadInstallableExtension(extension: IGalleryExtension, operation: InstallOperation): Promise<Required<InstallableExtension>> {\n\t\tconst metadata = <IGalleryMetadata>{\n\t\t\tid: extension.identifier.uuid,\n\t\t\tpublisherId: extension.publisherId,\n\t\t\tpublisherDisplayName: extension.publisherDisplayName,\n\t\t};\n\n\t\tlet zipPath: string | undefined;\n\t\ttry {\n\t\t\tthis.logService.trace('Started downloading extension:', extension.identifier.id);\n\t\t\tzipPath = (await this.extensionsDownloader.downloadExtension(extension, operation)).fsPath;\n\t\t\tthis.logService.info('Downloaded extension:', extension.identifier.id, zipPath);\n\t\t} catch (error) {\n\t\t\tthrow new ExtensionManagementError(joinErrors(error).message, ExtensionManagementErrorCode.Download);\n\t\t}\n\n\t\ttry {\n\t\t\tconst manifest = await getManifest(zipPath);\n\t\t\treturn (<Required<InstallableExtension>>{ zipPath, identifierWithVersion: new ExtensionIdentifierWithVersion(extension.identifier, manifest.version), metadata });\n\t\t} catch (error) {\n\t\t\tawait this.deleteDownloadedVSIX(zipPath);\n\t\t\tthrow new ExtensionManagementError(joinErrors(error).message, ExtensionManagementErrorCode.Invalid);\n\t\t}\n\t}\n}\n\nclass InstallVSIXTask extends AbstractInstallExtensionTask {\n\n\tconstructor(\n\t\tprivate readonly manifest: IExtensionManifest,\n\t\tprivate readonly location: URI,\n\t\tprivate readonly options: InstallOptions,\n\t\tprivate readonly galleryService: IExtensionGalleryService,\n\t\textensionsScanner: ExtensionsScanner,\n\t\tlogService: ILogService\n\t) {\n\t\tsuper({ id: getGalleryExtensionId(manifest.publisher, manifest.name) }, location, extensionsScanner, logService);\n\t}\n\n\tprotected async doRun(token: CancellationToken): Promise<ILocalExtension> {\n\t\tconst identifierWithVersion = new ExtensionIdentifierWithVersion(this.identifier, this.manifest.version);\n\t\tconst installedExtensions = await this.extensionsScanner.scanExtensions(ExtensionType.User);\n\t\tconst existing = installedExtensions.find(i => areSameExtensions(this.identifier, i.identifier));\n\t\tconst metadata = await this.getMetadata(this.identifier.id, this.manifest.version, token);\n\t\tmetadata.isMachineScoped = this.options.isMachineScoped || existing?.isMachineScoped;\n\t\tmetadata.isBuiltin = this.options.isBuiltin || existing?.isBuiltin;\n\n\t\tif (existing) {\n\t\t\tthis._operation = InstallOperation.Update;\n\t\t\tif (identifierWithVersion.equals(new ExtensionIdentifierWithVersion(existing.identifier, existing.manifest.version))) {\n\t\t\t\ttry {\n\t\t\t\t\tawait this.extensionsScanner.removeExtension(existing, 'existing');\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthrow new Error(nls.localize('restartCode', \"Please restart VS Code before reinstalling {0}.\", this.manifest.displayName || this.manifest.name));\n\t\t\t\t}\n\t\t\t} else if (semver.gt(existing.manifest.version, this.manifest.version)) {\n\t\t\t\tawait this.extensionsScanner.setUninstalled(existing);\n\t\t\t}\n\t\t} else {\n\t\t\t// Remove the extension with same version if it is already uninstalled.\n\t\t\t// Installing a VSIX extension shall replace the existing extension always.\n\t\t\tconst existing = await this.unsetUninstalledAndGetLocal(identifierWithVersion);\n\t\t\tif (existing) {\n\t\t\t\ttry {\n\t\t\t\t\tawait this.extensionsScanner.removeExtension(existing, 'existing');\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthrow new Error(nls.localize('restartCode', \"Please restart VS Code before reinstalling {0}.\", this.manifest.displayName || this.manifest.name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.installExtension({ zipPath: path.resolve(this.location.fsPath), identifierWithVersion, metadata }, token);\n\t}\n\n\tprivate async getMetadata(id: string, version: string, token: CancellationToken): Promise<Metadata> {\n\t\ttry {\n\t\t\tlet [galleryExtension] = await this.galleryService.getExtensions([{ id, version }], token);\n\t\t\tif (!galleryExtension) {\n\t\t\t\t[galleryExtension] = await this.galleryService.getExtensions([{ id }], token);\n\t\t\t}\n\t\t\tif (galleryExtension) {\n\t\t\t\treturn { id: galleryExtension.identifier.uuid, publisherDisplayName: galleryExtension.publisherDisplayName, publisherId: galleryExtension.publisherId, isPreReleaseVersion: galleryExtension.properties.isPreReleaseVersion, preRelease: galleryExtension.properties.isPreReleaseVersion };\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t/* Ignore Error */\n\t\t}\n\t\treturn {};\n\t}\n}\n\nclass UninstallExtensionTask extends AbstractExtensionTask<void> implements IUninstallExtensionTask {\n\n\tconstructor(\n\t\treadonly extension: ILocalExtension,\n\t\tprivate readonly options: UninstallExtensionTaskOptions,\n\t\tprivate readonly extensionsScanner: ExtensionsScanner\n\t) { super(); }\n\n\tprotected async doRun(token: CancellationToken): Promise<void> {\n\t\tconst toUninstall: ILocalExtension[] = [];\n\t\tconst userExtensions = await this.extensionsScanner.scanUserExtensions(false);\n\t\tif (this.options.versionOnly) {\n\t\t\tconst extensionIdentifierWithVersion = new ExtensionIdentifierWithVersion(this.extension.identifier, this.extension.manifest.version);\n\t\t\ttoUninstall.push(...userExtensions.filter(u => extensionIdentifierWithVersion.equals(new ExtensionIdentifierWithVersion(u.identifier, u.manifest.version))));\n\t\t} else {\n\t\t\ttoUninstall.push(...userExtensions.filter(u => areSameExtensions(u.identifier, this.extension.identifier)));\n\t\t}\n\n\t\tif (!toUninstall.length) {\n\t\t\tthrow new Error(nls.localize('notInstalled', \"Extension '{0}' is not installed.\", this.extension.manifest.displayName || this.extension.manifest.name));\n\t\t}\n\t\tawait this.extensionsScanner.setUninstalled(...toUninstall);\n\n\t\tif (this.options.remove) {\n\t\t\tfor (const extension of toUninstall) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!token.isCancellationRequested) {\n\t\t\t\t\t\tawait this.extensionsScanner.removeUninstalledExtension(extension);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthrow new Error(nls.localize('removeError', \"Error while removing the extension: {0}. Please Quit and Start VS Code before trying again.\", toErrorMessage(e)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as http from 'http';\nimport * as https from 'https';\nimport { parse as parseUrl } from 'url';\nimport { Promises } from 'vs/base/common/async';\nimport { streamToBufferReadableStream } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport * as streams from 'vs/base/common/stream';\nimport { isBoolean, isNumber } from 'vs/base/common/types';\nimport { IRequestContext, IRequestOptions } from 'vs/base/parts/request/common/request';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { getResolvedShellEnv } from 'vs/platform/environment/node/shellEnv';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IHTTPConfiguration, IRequestService } from 'vs/platform/request/common/request';\nimport { Agent, getProxyAgent } from 'vs/platform/request/node/proxy';\nimport { createGunzip } from 'zlib';\n\nexport interface IRawRequestFunction {\n\t(options: http.RequestOptions, callback?: (res: http.IncomingMessage) => void): http.ClientRequest;\n}\n\nexport interface NodeRequestOptions extends IRequestOptions {\n\tagent?: Agent;\n\tstrictSSL?: boolean;\n\tgetRawRequest?(options: IRequestOptions): IRawRequestFunction;\n}\n\n/**\n * This service exposes the `request` API, while using the global\n * or configured proxy settings.\n */\nexport class RequestService extends Disposable implements IRequestService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate proxyUrl?: string;\n\tprivate strictSSL: boolean | undefined;\n\tprivate authorization?: string;\n\tprivate shellEnvErrorLogged?: boolean;\n\n\tconstructor(\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@INativeEnvironmentService private readonly environmentService: INativeEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.configure(configurationService.getValue<IHTTPConfiguration>());\n\t\tthis._register(configurationService.onDidChangeConfiguration(() => this.configure(configurationService.getValue()), this));\n\t}\n\n\tprivate configure(config: IHTTPConfiguration) {\n\t\tthis.proxyUrl = config.http && config.http.proxy;\n\t\tthis.strictSSL = !!(config.http && config.http.proxyStrictSSL);\n\t\tthis.authorization = config.http && config.http.proxyAuthorization;\n\t}\n\n\tasync request(options: NodeRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\t\tthis.logService.trace('RequestService#request', options.url);\n\n\t\tconst { proxyUrl, strictSSL } = this;\n\n\t\tlet shellEnv: typeof process.env | undefined = undefined;\n\t\ttry {\n\t\t\tshellEnv = await getResolvedShellEnv(this.logService, this.environmentService.args, process.env);\n\t\t} catch (error) {\n\t\t\tif (!this.shellEnvErrorLogged) {\n\t\t\t\tthis.shellEnvErrorLogged = true;\n\t\t\t\tthis.logService.error('RequestService#request resolving shell environment failed', error);\n\t\t\t}\n\t\t}\n\n\t\tconst env = {\n\t\t\t...process.env,\n\t\t\t...shellEnv\n\t\t};\n\t\tconst agent = options.agent ? options.agent : await getProxyAgent(options.url || '', env, { proxyUrl, strictSSL });\n\n\t\toptions.agent = agent;\n\t\toptions.strictSSL = strictSSL;\n\n\t\tif (this.authorization) {\n\t\t\toptions.headers = {\n\t\t\t\t...(options.headers || {}),\n\t\t\t\t'Proxy-Authorization': this.authorization\n\t\t\t};\n\t\t}\n\n\t\treturn this._request(options, token);\n\t}\n\n\tprivate async getNodeRequest(options: IRequestOptions): Promise<IRawRequestFunction> {\n\t\tconst endpoint = parseUrl(options.url!);\n\t\tconst module = endpoint.protocol === 'https:' ? await import('https') : await import('http');\n\t\treturn module.request;\n\t}\n\n\tprivate _request(options: NodeRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\n\t\treturn Promises.withAsyncBody<IRequestContext>(async (c, e) => {\n\t\t\tlet req: http.ClientRequest;\n\n\t\t\tconst endpoint = parseUrl(options.url!);\n\t\t\tconst rawRequest = options.getRawRequest\n\t\t\t\t? options.getRawRequest(options)\n\t\t\t\t: await this.getNodeRequest(options);\n\n\t\t\tconst opts: https.RequestOptions = {\n\t\t\t\thostname: endpoint.hostname,\n\t\t\t\tport: endpoint.port ? parseInt(endpoint.port) : (endpoint.protocol === 'https:' ? 443 : 80),\n\t\t\t\tprotocol: endpoint.protocol,\n\t\t\t\tpath: endpoint.path,\n\t\t\t\tmethod: options.type || 'GET',\n\t\t\t\theaders: options.headers,\n\t\t\t\tagent: options.agent,\n\t\t\t\trejectUnauthorized: isBoolean(options.strictSSL) ? options.strictSSL : true\n\t\t\t};\n\n\t\t\tif (options.user && options.password) {\n\t\t\t\topts.auth = options.user + ':' + options.password;\n\t\t\t}\n\n\t\t\treq = rawRequest(opts, (res: http.IncomingMessage) => {\n\t\t\t\tconst followRedirects: number = isNumber(options.followRedirects) ? options.followRedirects : 3;\n\t\t\t\tif (res.statusCode && res.statusCode >= 300 && res.statusCode < 400 && followRedirects > 0 && res.headers['location']) {\n\t\t\t\t\tthis._request({\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\turl: res.headers['location'],\n\t\t\t\t\t\tfollowRedirects: followRedirects - 1\n\t\t\t\t\t}, token).then(c, e);\n\t\t\t\t} else {\n\t\t\t\t\tlet stream: streams.ReadableStreamEvents<Uint8Array> = res;\n\n\t\t\t\t\tif (res.headers['content-encoding'] === 'gzip') {\n\t\t\t\t\t\tstream = res.pipe(createGunzip());\n\t\t\t\t\t}\n\n\t\t\t\t\tc({ res, stream: streamToBufferReadableStream(stream) } as IRequestContext);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treq.on('error', e);\n\n\t\t\tif (options.timeout) {\n\t\t\t\treq.setTimeout(options.timeout);\n\t\t\t}\n\n\t\t\tif (options.data) {\n\t\t\t\tif (typeof options.data === 'string') {\n\t\t\t\t\treq.write(options.data);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treq.end();\n\n\t\t\ttoken.onCancellationRequested(() => {\n\t\t\t\treq.abort();\n\t\t\t\te(canceled());\n\t\t\t});\n\t\t});\n\t}\n\n\tasync resolveProxy(url: string): Promise<string | undefined> {\n\t\treturn undefined; // currently not implemented in node\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { hostname, release } from 'os';\nimport { raceTimeout } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { onUnexpectedError, setUnexpectedErrorHandler } from 'vs/base/common/errors';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport { isAbsolute, join } from 'vs/base/common/path';\nimport { cwd } from 'vs/base/common/process';\nimport { URI } from 'vs/base/common/uri';\nimport { Promises } from 'vs/base/node/pfs';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationService } from 'vs/platform/configuration/common/configurationService';\nimport { IDownloadService } from 'vs/platform/download/common/download';\nimport { DownloadService } from 'vs/platform/download/common/downloadService';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { NativeEnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { ExtensionGalleryServiceWithNoStorageService } from 'vs/platform/extensionManagement/common/extensionGalleryService';\nimport { IExtensionGalleryService, IExtensionManagementCLIService, IExtensionManagementService, InstallOptions } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionManagementCLIService } from 'vs/platform/extensionManagement/common/extensionManagementCLIService';\nimport { ExtensionManagementService } from 'vs/platform/extensionManagement/node/extensionManagementService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { DiskFileSystemProvider } from 'vs/platform/files/node/diskFileSystemProvider';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { InstantiationService } from 'vs/platform/instantiation/common/instantiationService';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { ILocalizationsService } from 'vs/platform/localizations/common/localizations';\nimport { LocalizationsService } from 'vs/platform/localizations/node/localizations';\nimport { ConsoleLogger, getLogLevel, ILogger, ILogService, LogLevel, MultiplexLogService } from 'vs/platform/log/common/log';\nimport { SpdLogLogger } from 'vs/platform/log/node/spdlogLog';\nimport product from 'vs/platform/product/common/product';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IRequestService } from 'vs/platform/request/common/request';\nimport { RequestService } from 'vs/platform/request/node/requestService';\nimport { resolveCommonProperties } from 'vs/platform/telemetry/common/commonProperties';\nimport { ITelemetryService, machineIdKey } from 'vs/platform/telemetry/common/telemetry';\nimport { ITelemetryServiceConfig, TelemetryService } from 'vs/platform/telemetry/common/telemetryService';\nimport { supportsTelemetry, NullTelemetryService } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { AppInsightsAppender } from 'vs/platform/telemetry/node/appInsightsAppender';\nimport { buildTelemetryMessage } from 'vs/platform/telemetry/node/telemetry';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { UriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentityService';\n\nclass CliMain extends Disposable {\n\n\tconstructor(\n\t\tprivate argv: NativeParsedArgs\n\t) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// Dispose on exit\n\t\tprocess.once('exit', () => this.dispose());\n\t}\n\n\tasync run(): Promise<void> {\n\n\t\t// Services\n\t\tconst [instantiationService, appenders] = await this.initServices();\n\n\t\treturn instantiationService.invokeFunction(async accessor => {\n\t\t\tconst logService = accessor.get(ILogService);\n\t\t\tconst fileService = accessor.get(IFileService);\n\t\t\tconst environmentService = accessor.get(INativeEnvironmentService);\n\t\t\tconst extensionManagementCLIService = accessor.get(IExtensionManagementCLIService);\n\n\t\t\t// Log info\n\t\t\tlogService.info('CLI main', this.argv);\n\n\t\t\t// Error handler\n\t\t\tthis.registerErrorHandler(logService);\n\n\t\t\t// Run based on argv\n\t\t\tawait this.doRun(environmentService, extensionManagementCLIService, fileService);\n\n\t\t\t// Flush the remaining data in AI adapter (with 1s timeout)\n\t\t\tawait Promise.all(appenders.map(a => {\n\t\t\t\traceTimeout(a.flush(), 1000);\n\t\t\t}));\n\t\t\treturn;\n\t\t});\n\t}\n\n\tprivate async initServices(): Promise<[IInstantiationService, AppInsightsAppender[]]> {\n\t\tconst services = new ServiceCollection();\n\n\t\t// Product\n\t\tconst productService = { _serviceBrand: undefined, ...product };\n\t\tservices.set(IProductService, productService);\n\n\t\t// Environment\n\t\tconst environmentService = new NativeEnvironmentService(this.argv, productService);\n\t\tservices.set(INativeEnvironmentService, environmentService);\n\n\t\t// Init folders\n\t\tawait Promise.all([environmentService.appSettingsHome.fsPath, environmentService.extensionsPath].map(path => path ? Promises.mkdir(path, { recursive: true }) : undefined));\n\n\t\t// Log\n\t\tconst logLevel = getLogLevel(environmentService);\n\t\tconst loggers: ILogger[] = [];\n\t\tloggers.push(new SpdLogLogger('cli', join(environmentService.logsPath, 'cli.log'), true, false, logLevel));\n\t\tif (logLevel === LogLevel.Trace) {\n\t\t\tloggers.push(new ConsoleLogger(logLevel));\n\t\t}\n\n\t\tconst logService = this._register(new MultiplexLogService(loggers));\n\t\tservices.set(ILogService, logService);\n\n\t\t// Files\n\t\tconst fileService = this._register(new FileService(logService));\n\t\tservices.set(IFileService, fileService);\n\n\t\tconst diskFileSystemProvider = this._register(new DiskFileSystemProvider(logService));\n\t\tfileService.registerProvider(Schemas.file, diskFileSystemProvider);\n\n\t\t// Configuration\n\t\tconst configurationService = this._register(new ConfigurationService(environmentService.settingsResource, fileService));\n\t\tservices.set(IConfigurationService, configurationService);\n\n\t\t// Init config\n\t\tawait configurationService.initialize();\n\n\t\t// URI Identity\n\t\tservices.set(IUriIdentityService, new UriIdentityService(fileService));\n\n\t\t// Request\n\t\tservices.set(IRequestService, new SyncDescriptor(RequestService));\n\n\t\t// Download Service\n\t\tservices.set(IDownloadService, new SyncDescriptor(DownloadService));\n\n\t\t// Extensions\n\t\tservices.set(IExtensionManagementService, new SyncDescriptor(ExtensionManagementService));\n\t\tservices.set(IExtensionGalleryService, new SyncDescriptor(ExtensionGalleryServiceWithNoStorageService));\n\t\tservices.set(IExtensionManagementCLIService, new SyncDescriptor(ExtensionManagementCLIService));\n\n\t\t// Localizations\n\t\tservices.set(ILocalizationsService, new SyncDescriptor(LocalizationsService));\n\n\t\t// Telemetry\n\t\tconst appenders: AppInsightsAppender[] = [];\n\t\tif (supportsTelemetry(productService, environmentService)) {\n\t\t\tif (productService.aiConfig && productService.aiConfig.asimovKey) {\n\t\t\t\tappenders.push(new AppInsightsAppender('monacoworkbench', null, productService.aiConfig.asimovKey));\n\t\t\t}\n\n\t\t\tconst { appRoot, extensionsPath, installSourcePath } = environmentService;\n\n\t\t\tconst config: ITelemetryServiceConfig = {\n\t\t\t\tappenders,\n\t\t\t\tsendErrorTelemetry: false,\n\t\t\t\tcommonProperties: (async () => {\n\t\t\t\t\tlet machineId: string | undefined = undefined;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst storageContents = await Promises.readFile(join(environmentService.userDataPath, 'storage.json'));\n\t\t\t\t\t\tmachineId = JSON.parse(storageContents.toString())[machineIdKey];\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\t\t\t\tlogService.error(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn resolveCommonProperties(fileService, release(), hostname(), process.arch, productService.commit, productService.version, machineId, productService.msftInternalDomains, installSourcePath);\n\t\t\t\t})(),\n\t\t\t\tpiiPaths: [appRoot, extensionsPath]\n\t\t\t};\n\n\t\t\tservices.set(ITelemetryService, new SyncDescriptor(TelemetryService, [config]));\n\n\t\t} else {\n\t\t\tservices.set(ITelemetryService, NullTelemetryService);\n\t\t}\n\n\t\treturn [new InstantiationService(services), appenders];\n\t}\n\n\tprivate registerErrorHandler(logService: ILogService): void {\n\n\t\t// Install handler for unexpected errors\n\t\tsetUnexpectedErrorHandler(error => {\n\t\t\tconst message = toErrorMessage(error, true);\n\t\t\tif (!message) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlogService.error(`[uncaught exception in CLI]: ${message}`);\n\t\t});\n\n\t\t// Handle unhandled errors that can occur\n\t\tprocess.on('uncaughtException', err => onUnexpectedError(err));\n\t\tprocess.on('unhandledRejection', (reason: unknown) => onUnexpectedError(reason));\n\t}\n\n\tprivate async doRun(environmentService: INativeEnvironmentService, extensionManagementCLIService: IExtensionManagementCLIService, fileService: IFileService): Promise<void> {\n\n\t\t// Install Source\n\t\tif (this.argv['install-source']) {\n\t\t\treturn this.setInstallSource(environmentService, fileService, this.argv['install-source']);\n\t\t}\n\n\t\t// List Extensions\n\t\tif (this.argv['list-extensions']) {\n\t\t\treturn extensionManagementCLIService.listExtensions(!!this.argv['show-versions'], this.argv['category']);\n\t\t}\n\n\t\t// Install Extension\n\t\telse if (this.argv['install-extension'] || this.argv['install-builtin-extension']) {\n\t\t\tconst installOptions: InstallOptions = { isMachineScoped: !!this.argv['do-not-sync'], installPreReleaseVersion: !!this.argv['pre-release'] };\n\t\t\treturn extensionManagementCLIService.installExtensions(this.asExtensionIdOrVSIX(this.argv['install-extension'] || []), this.argv['install-builtin-extension'] || [], installOptions, !!this.argv['force']);\n\t\t}\n\n\t\t// Uninstall Extension\n\t\telse if (this.argv['uninstall-extension']) {\n\t\t\treturn extensionManagementCLIService.uninstallExtensions(this.asExtensionIdOrVSIX(this.argv['uninstall-extension']), !!this.argv['force']);\n\t\t}\n\n\t\t// Locate Extension\n\t\telse if (this.argv['locate-extension']) {\n\t\t\treturn extensionManagementCLIService.locateExtension(this.argv['locate-extension']);\n\t\t}\n\n\t\t// Telemetry\n\t\telse if (this.argv['telemetry']) {\n\t\t\tconsole.log(await buildTelemetryMessage(environmentService.appRoot, environmentService.extensionsPath));\n\t\t}\n\t}\n\n\tprivate asExtensionIdOrVSIX(inputs: string[]): (string | URI)[] {\n\t\treturn inputs.map(input => /\\.vsix$/i.test(input) ? URI.file(isAbsolute(input) ? input : join(cwd(), input)) : input);\n\t}\n\n\tprivate async setInstallSource(environmentService: INativeEnvironmentService, fileService: IFileService, installSource: string): Promise<void> {\n\t\tawait fileService.writeFile(URI.file(environmentService.installSourcePath), VSBuffer.fromString(installSource.slice(0, 30)));\n\t}\n}\n\nexport async function main(argv: NativeParsedArgs): Promise<void> {\n\tconst cliMain = new CliMain(argv);\n\n\ttry {\n\t\tawait cliMain.run();\n\t} finally {\n\t\tcliMain.dispose();\n\t}\n}\n"],"mappings":"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A,IAAA,KACA,EAAA,EAAA,GAAA,IAAA,KACA,EAAA,EAAA,GAAA,IAAA,KACA,EAAA,EAAA,GAAA,IAAA,KACA,EAAA,EAAA,GAAA,IAAA,KACA,EAAA,EAAA,GAAA,IAAA,KACA,EAAA,EAAA,GAAA,IAAA,KACA,EAAA,EAAA,GAAA,IAAA,KACA,EAAA,EAAA,GAAA,IAAA,KACA,EAAA,EAAA,GAAA,IAAA,KAEA,EAAA,EAAA,EAAA,IAAA,IACA,EAAA,EAAA,EAAA,IAAA,IACA,EAAA,EAAA,EAAA,IAAA,IACA,EAAA,EAAA,EAAA,KAAA,IACA,EAAA,EAAA,EAAA,KAAA,IACA,EAAA,EAAA,EAAA,KAAA,IACA,EAAA,EAAA,EAAA,KAAA,IACA,EAAA,EAAA,EAAA,KAAA,IACA,EAAA,EAAA,EAAA,KAAA,IACA,EAAA,EAAA,EAAA,KAAA,IACA,EAAA,EAAA,EAAA,KAAA,IACA,EAAA,EAAA,EAAA,KAAA,IACA,EAAA,EAAA,EAAA,KAAA,IACA,EAAA,EAAA,EAAA,KAAA,IACA,EAAA,EAAA,EAAA,KAAA,IACA,EAAA,EAAA,EAAA,KAAA,IACA,EAAA,EAAA,EAAA,KAAA,IACA,EAAA,EAAA,EAAA,KAAA,IACA,EAAA,EAAA,EAAA,KAAA,IACA,EAAA,EAAA,EAAA,KAAA,IACA,EAAA,EAAA,EAAA,KAAA,IACA,EAAA,EAAA,EAAA,KAAA,IACA,EAAA,EAAA,EAAA,KAAA,IACA,EAAA,EAAA,EAAA,KAAA,IACA,EAAA,EAAA,EAAA,KAAA,IACA,EAAA,EAAA,EAAA,KAAA,IAEA,EAAA,EAAA,EAAA,IAAA,IACA,EAAA,EAAA,EAAA,IAAA,IACA,EAAA,EAAA,EAAA,IAAA,IACA,EAAA,EAAA,EAAA,IAAA,IACA,EAAA,EAAA,EAAA,IAAA,IACA,EAAA,EAAA,EAAA,IAAA,IACA,EAAA,EAAA,EAAA,IAAA,IACA,EAAA,EAAA,EAAA,IAAA,IACA,EAAA,EAAA,EAAA,IAAA,IACA,EAAA,EAAA,EAAA,IAAA,IACA,EAAA,EAAA,EAAA,IAAA,IACA,EAAA,EAAA,EAAA,IAAA,IACA,EAAA,EAAA,EAA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","names":[],"file":"cliProcessMain.js"}