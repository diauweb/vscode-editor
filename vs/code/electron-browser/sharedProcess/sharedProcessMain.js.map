{"version":3,"sources":["out-vscode/vs/code/electron-browser/sharedProcess/fake","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/assert.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/collections.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/decorators.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/errors.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/arrays.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/functional.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/iterator.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/json.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/jsonFormatter.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/jsonEdit.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/lifecycle.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/linkedList.ts","out-vscode/vs/code/electron-browser/sharedProcess/vs/base/common/performance.js","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/platform.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/process.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/path.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/processes.ts","out-vscode/vs/code/electron-browser/sharedProcess/vs/base/common/semver/semver.js","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/skipList.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/stopwatch.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/event.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/cancellation.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/codicons.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/stream.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/buffer.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/strings.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/hash.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/map.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/normalization.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/types.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/extpath.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/objects.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/uri.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/console.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/marshalling.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/network.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/resources.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/async.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/glob.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/mime.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/uriIpc.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/uuid.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/node/decoder.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/node/macAddress.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/node/id.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/node/pfs.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/node/extpath.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/node/ports.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/node/powershell.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/node/ps.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/node/watcher.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/parts/ipc/common/ipc.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/parts/ipc/common/ipc.mp.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/parts/ipc/common/ipc.net.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/parts/ipc/electron-browser/ipc.mp.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/parts/request/browser/request.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/parts/storage/common/storage.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/date.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/errorMessage.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/node/processes.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/node/shell.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/parts/ipc/node/ipc.cp.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/assignment/common/assignment.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/environment/common/environmentService.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/environment/node/argv.ts","out-vscode/vs/code/electron-browser/sharedProcess/vs/platform/environment/node/userDataPath.js","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/environment/node/environmentService.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensionManagement/common/configRemotes.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensionManagement/common/extensionNls.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensionRecommendations/electron-sandbox/extensionRecommendationsIpc.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensions/common/extensionValidator.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/instantiation/common/descriptors.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/instantiation/common/extensions.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/instantiation/common/graph.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/instantiation/common/instantiation.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/checksum/common/checksumService.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/configuration/common/configuration.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/contextkey/common/contextkey.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/diagnostics/common/diagnostics.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/download/common/download.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/environment/common/environment.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensionManagement/common/extensionManagement.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/code/electron-browser/sharedProcess/contrib/extensionsCleaner.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensionManagement/common/extensionManagementIpc.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensionRecommendations/common/extensionRecommendations.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/files/common/files.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/checksum/node/checksumService.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/environment/node/argvHelper.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/environment/node/shellEnv.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/files/common/io.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/files/common/watcher.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/files/node/watcher/nodejs/watcherService.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/files/node/watcher/nsfw/watcherService.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/files/node/watcher/parcel/watcherService.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/instantiation/common/serviceCollection.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/instantiation/common/instantiationService.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/ipc/electron-browser/mainProcessService.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/ipc/electron-sandbox/services.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/localizations/common/localizations.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/code/electron-browser/sharedProcess/contrib/localizationsUpdater.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/log/common/log.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/code/electron-browser/sharedProcess/contrib/logsDataCleaner.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/code/electron-browser/sharedProcess/contrib/storageDataCleaner.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/configuration/common/userConfigurationFileService.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensionManagement/node/extensionLifecycle.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/files/common/diskFileSystemProvider.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/files/common/fileService.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/files/node/diskFileSystemProvider.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/log/common/logIpc.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/native/electron-sandbox/native.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/product/common/product.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/product/common/productService.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/code/electron-browser/sharedProcess/contrib/codeCacheCleaner.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/code/electron-browser/sharedProcess/contrib/languagePackCachedDataCleaner.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/registry/common/platform.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/jsonschemas/common/jsonContributionRegistry.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/configuration/common/configurationRegistry.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/configuration/common/configurationModels.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/configuration/common/configurationService.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/remote/common/remoteAuthorityResolver.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/remote/common/remoteAgentConnection.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/remote/common/remoteHosts.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensions/common/extensions.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensionManagement/common/extensionManagementUtil.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensionManagement/node/extensionDownloader.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensionManagement/node/extensionsManifestCache.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/localizations/node/localizations.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/remote/common/sharedProcessTunnelService.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/remote/common/tunnel.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/remote/node/sharedProcessTunnelService.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/request/browser/requestService.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/request/common/request.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/download/common/downloadService.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensionManagement/common/extensionTipsService.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/serviceMachineId/common/serviceMachineId.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/sharedProcess/common/sharedProcessWorkerService.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/sharedProcess/electron-browser/sharedProcessWorker.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/sharedProcess/electron-browser/sharedProcessWorkerService.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/sign/common/sign.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/sign/node/signService.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/storage/common/storage.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensionManagement/common/extensionEnablementService.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/storage/common/storageIpc.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/storage/electron-sandbox/storageService.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/telemetry/common/commonProperties.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/telemetry/common/telemetry.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/diagnostics/node/diagnosticsService.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensionManagement/common/abstractExtensionManagementService.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensionManagement/electron-sandbox/extensionTipsService.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/telemetry/common/telemetryIpc.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/telemetry/common/telemetryUtils.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/assignment/common/assignmentService.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensionManagement/common/extensionGalleryService.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/telemetry/common/telemetryLogAppender.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/telemetry/common/telemetryService.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/telemetry/node/appInsightsAppender.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/telemetry/node/customEndpointTelemetryService.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/terminal/common/requestStore.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/terminal/common/terminal.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/terminal/electron-sandbox/terminal.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/terminal/node/terminalEnvironment.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/theme/common/theme.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/theme/common/themeService.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/terminal/common/terminalProfiles.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/terminal/common/terminalPlatformConfiguration.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/terminal/node/terminalProfiles.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/terminal/node/ptyHostService.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/uriIdentity/common/uriIdentity.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensionManagement/node/extensionsWatcher.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/uriIdentity/common/uriIdentityService.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/userDataSync/common/content.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/userDataSync/common/extensionsMerge.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/userDataSync/common/extensionsStorageSync.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/userDataSync/common/ignoredExtensions.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/userDataSync/common/keybindingsMerge.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/userDataSync/common/snippetsMerge.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/userDataSync/common/userDataSync.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/userDataSync/common/abstractSynchronizer.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/userDataSync/common/extensionsSync.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/userDataSync/common/globalStateMerge.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/userDataSync/common/globalStateSync.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/userDataSync/common/keybindingsSync.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/userDataSync/common/settingsMerge.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/userDataSync/common/settingsSync.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/userDataSync/common/snippetsSync.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/userDataSync/common/userDataSyncAccount.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/userDataSync/common/userDataSyncBackupStoreService.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/userDataSync/common/userDataSyncIpc.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/userDataSync/common/userDataSyncLog.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/userDataSync/common/userDataSyncMachines.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/userDataSync/common/userDataAutoSyncService.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/userDataSync/common/userDataSyncResourceEnablementService.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/userDataSync/common/userDataSyncService.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/userDataSync/common/userDataSyncServiceIpc.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/userDataSync/common/userDataSyncStoreService.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/userDataSync/electron-sandbox/userDataAutoSyncService.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/windows/node/windowTracker.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/node/zip.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensionManagement/node/extensionManagementUtil.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensionManagement/node/extensionsScanner.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensionManagement/node/extensionManagementService.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/parts/ipc/node/ipc.net.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/remote/node/nodeSocketFactory.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/remote/node/tunnelService.ts","out-vscode/vs/code/electron-browser/sharedProcess/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/code/electron-browser/sharedProcess/sharedProcessMain.ts"],"sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Throws an error with the provided message if the provided value does not evaluate to a true Javascript value.\n */\nexport function ok(value?: unknown, message?: string) {\n\tif (!value) {\n\t\tthrow new Error(message ? `Assertion failed (${message})` : 'Assertion Failed');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * An interface for a JavaScript object that\n * acts a dictionary. The keys are strings.\n */\nexport type IStringDictionary<V> = Record<string, V>;\n\n\n/**\n * An interface for a JavaScript object that\n * acts a dictionary. The keys are numbers.\n */\nexport type INumberDictionary<V> = Record<number, V>;\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Returns an array which contains all values that reside\n * in the given dictionary.\n */\nexport function values<T>(from: IStringDictionary<T> | INumberDictionary<T>): T[] {\n\tconst result: T[] = [];\n\tfor (let key in from) {\n\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\tresult.push((from as any)[key]);\n\t\t}\n\t}\n\treturn result;\n}\n\n/**\n * Iterates over each entry in the provided dictionary. The iterator allows\n * to remove elements and will stop when the callback returns {{false}}.\n */\nexport function forEach<T>(from: IStringDictionary<T> | INumberDictionary<T>, callback: (entry: { key: any; value: T; }, remove: () => void) => any): void {\n\tfor (let key in from) {\n\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\tconst result = callback({ key: key, value: (from as any)[key] }, function () {\n\t\t\t\tdelete (from as any)[key];\n\t\t\t});\n\t\t\tif (result === false) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Groups the collection into a dictionary based on the provided\n * group function.\n */\nexport function groupBy<K extends string | number | symbol, V>(data: V[], groupFn: (element: V) => K): Record<K, V[]> {\n\tconst result: Record<K, V[]> = Object.create(null);\n\tfor (const element of data) {\n\t\tconst key = groupFn(element);\n\t\tlet target = result[key];\n\t\tif (!target) {\n\t\t\ttarget = result[key] = [];\n\t\t}\n\t\ttarget.push(element);\n\t}\n\treturn result;\n}\n\nexport function fromMap<T>(original: Map<string, T>): IStringDictionary<T> {\n\tconst result: IStringDictionary<T> = Object.create(null);\n\tif (original) {\n\t\toriginal.forEach((value, key) => {\n\t\t\tresult[key] = value;\n\t\t});\n\t}\n\treturn result;\n}\n\nexport function diffSets<T>(before: Set<T>, after: Set<T>): { removed: T[], added: T[] } {\n\tconst removed: T[] = [];\n\tconst added: T[] = [];\n\tfor (let element of before) {\n\t\tif (!after.has(element)) {\n\t\t\tremoved.push(element);\n\t\t}\n\t}\n\tfor (let element of after) {\n\t\tif (!before.has(element)) {\n\t\t\tadded.push(element);\n\t\t}\n\t}\n\treturn { removed, added };\n}\n\nexport function diffMaps<K, V>(before: Map<K, V>, after: Map<K, V>): { removed: V[], added: V[] } {\n\tconst removed: V[] = [];\n\tconst added: V[] = [];\n\tfor (let [index, value] of before) {\n\t\tif (!after.has(index)) {\n\t\t\tremoved.push(value);\n\t\t}\n\t}\n\tfor (let [index, value] of after) {\n\t\tif (!before.has(index)) {\n\t\t\tadded.push(value);\n\t\t}\n\t}\n\treturn { removed, added };\n}\nexport class SetMap<K, V> {\n\n\tprivate map = new Map<K, Set<V>>();\n\n\tadd(key: K, value: V): void {\n\t\tlet values = this.map.get(key);\n\n\t\tif (!values) {\n\t\t\tvalues = new Set<V>();\n\t\t\tthis.map.set(key, values);\n\t\t}\n\n\t\tvalues.add(value);\n\t}\n\n\tdelete(key: K, value: V): void {\n\t\tconst values = this.map.get(key);\n\n\t\tif (!values) {\n\t\t\treturn;\n\t\t}\n\n\t\tvalues.delete(value);\n\n\t\tif (values.size === 0) {\n\t\t\tthis.map.delete(key);\n\t\t}\n\t}\n\n\tforEach(key: K, fn: (value: V) => void): void {\n\t\tconst values = this.map.get(key);\n\n\t\tif (!values) {\n\t\t\treturn;\n\t\t}\n\n\t\tvalues.forEach(fn);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function createDecorator(mapFn: (fn: Function, key: string) => Function): Function {\n\treturn (target: any, key: string, descriptor: any) => {\n\t\tlet fnKey: string | null = null;\n\t\tlet fn: Function | null = null;\n\n\t\tif (typeof descriptor.value === 'function') {\n\t\t\tfnKey = 'value';\n\t\t\tfn = descriptor.value;\n\t\t} else if (typeof descriptor.get === 'function') {\n\t\t\tfnKey = 'get';\n\t\t\tfn = descriptor.get;\n\t\t}\n\n\t\tif (!fn) {\n\t\t\tthrow new Error('not supported');\n\t\t}\n\n\t\tdescriptor[fnKey!] = mapFn(fn, key);\n\t};\n}\n\nexport function memoize(_target: any, key: string, descriptor: any) {\n\tlet fnKey: string | null = null;\n\tlet fn: Function | null = null;\n\n\tif (typeof descriptor.value === 'function') {\n\t\tfnKey = 'value';\n\t\tfn = descriptor.value;\n\n\t\tif (fn!.length !== 0) {\n\t\t\tconsole.warn('Memoize should only be used in functions with zero parameters');\n\t\t}\n\t} else if (typeof descriptor.get === 'function') {\n\t\tfnKey = 'get';\n\t\tfn = descriptor.get;\n\t}\n\n\tif (!fn) {\n\t\tthrow new Error('not supported');\n\t}\n\n\tconst memoizeKey = `$memoize$${key}`;\n\tdescriptor[fnKey!] = function (...args: any[]) {\n\t\tif (!this.hasOwnProperty(memoizeKey)) {\n\t\t\tObject.defineProperty(this, memoizeKey, {\n\t\t\t\tconfigurable: false,\n\t\t\t\tenumerable: false,\n\t\t\t\twritable: false,\n\t\t\t\tvalue: fn!.apply(this, args)\n\t\t\t});\n\t\t}\n\n\t\treturn this[memoizeKey];\n\t};\n}\n\nexport interface IDebounceReducer<T> {\n\t(previousValue: T, ...args: any[]): T;\n}\n\nexport function debounce<T>(delay: number, reducer?: IDebounceReducer<T>, initialValueProvider?: () => T): Function {\n\treturn createDecorator((fn, key) => {\n\t\tconst timerKey = `$debounce$${key}`;\n\t\tconst resultKey = `$debounce$result$${key}`;\n\n\t\treturn function (this: any, ...args: any[]) {\n\t\t\tif (!this[resultKey]) {\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}\n\n\t\t\tclearTimeout(this[timerKey]);\n\n\t\t\tif (reducer) {\n\t\t\t\tthis[resultKey] = reducer(this[resultKey], ...args);\n\t\t\t\targs = [this[resultKey]];\n\t\t\t}\n\n\t\t\tthis[timerKey] = setTimeout(() => {\n\t\t\t\tfn.apply(this, args);\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}, delay);\n\t\t};\n\t});\n}\n\nexport function throttle<T>(delay: number, reducer?: IDebounceReducer<T>, initialValueProvider?: () => T): Function {\n\treturn createDecorator((fn, key) => {\n\t\tconst timerKey = `$throttle$timer$${key}`;\n\t\tconst resultKey = `$throttle$result$${key}`;\n\t\tconst lastRunKey = `$throttle$lastRun$${key}`;\n\t\tconst pendingKey = `$throttle$pending$${key}`;\n\n\t\treturn function (this: any, ...args: any[]) {\n\t\t\tif (!this[resultKey]) {\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}\n\t\t\tif (this[lastRunKey] === null || this[lastRunKey] === undefined) {\n\t\t\t\tthis[lastRunKey] = -Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tif (reducer) {\n\t\t\t\tthis[resultKey] = reducer(this[resultKey], ...args);\n\t\t\t}\n\n\t\t\tif (this[pendingKey]) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst nextTime = this[lastRunKey] + delay;\n\t\t\tif (nextTime <= Date.now()) {\n\t\t\t\tthis[lastRunKey] = Date.now();\n\t\t\t\tfn.apply(this, [this[resultKey]]);\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t} else {\n\t\t\t\tthis[pendingKey] = true;\n\t\t\t\tthis[timerKey] = setTimeout(() => {\n\t\t\t\t\tthis[pendingKey] = false;\n\t\t\t\t\tthis[lastRunKey] = Date.now();\n\t\t\t\t\tfn.apply(this, [this[resultKey]]);\n\t\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t\t}, nextTime - Date.now());\n\t\t\t}\n\t\t};\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IAction } from 'vs/base/common/actions';\n\nexport interface ErrorListenerCallback {\n\t(error: any): void;\n}\n\nexport interface ErrorListenerUnbind {\n\t(): void;\n}\n\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n\tprivate unexpectedErrorHandler: (e: any) => void;\n\tprivate listeners: ErrorListenerCallback[];\n\n\tconstructor() {\n\n\t\tthis.listeners = [];\n\n\t\tthis.unexpectedErrorHandler = function (e: any) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (e.stack) {\n\t\t\t\t\tthrow new Error(e.message + '\\n\\n' + e.stack);\n\t\t\t\t}\n\n\t\t\t\tthrow e;\n\t\t\t}, 0);\n\t\t};\n\t}\n\n\taddListener(listener: ErrorListenerCallback): ErrorListenerUnbind {\n\t\tthis.listeners.push(listener);\n\n\t\treturn () => {\n\t\t\tthis._removeListener(listener);\n\t\t};\n\t}\n\n\tprivate emit(e: any): void {\n\t\tthis.listeners.forEach((listener) => {\n\t\t\tlistener(e);\n\t\t});\n\t}\n\n\tprivate _removeListener(listener: ErrorListenerCallback): void {\n\t\tthis.listeners.splice(this.listeners.indexOf(listener), 1);\n\t}\n\n\tsetUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\t\tthis.unexpectedErrorHandler = newUnexpectedErrorHandler;\n\t}\n\n\tgetUnexpectedErrorHandler(): (e: any) => void {\n\t\treturn this.unexpectedErrorHandler;\n\t}\n\n\tonUnexpectedError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t\tthis.emit(e);\n\t}\n\n\t// For external errors, we don't want the listeners to be called\n\tonUnexpectedExternalError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t}\n}\n\nexport const errorHandler = new ErrorHandler();\n\nexport function setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\terrorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\n\nexport function onUnexpectedError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedError(e);\n\t}\n\treturn undefined;\n}\n\nexport function onUnexpectedExternalError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedExternalError(e);\n\t}\n\treturn undefined;\n}\n\nexport interface SerializedError {\n\treadonly $isError: true;\n\treadonly name: string;\n\treadonly message: string;\n\treadonly stack: string;\n}\n\nexport function transformErrorForSerialization(error: Error): SerializedError;\nexport function transformErrorForSerialization(error: any): any;\nexport function transformErrorForSerialization(error: any): any {\n\tif (error instanceof Error) {\n\t\tlet { name, message } = error;\n\t\tconst stack: string = (<any>error).stacktrace || (<any>error).stack;\n\t\treturn {\n\t\t\t$isError: true,\n\t\t\tname,\n\t\t\tmessage,\n\t\t\tstack\n\t\t};\n\t}\n\n\t// return as is\n\treturn error;\n}\n\n// see https://github.com/v8/v8/wiki/Stack%20Trace%20API#basic-stack-traces\nexport interface V8CallSite {\n\tgetThis(): any;\n\tgetTypeName(): string;\n\tgetFunction(): string;\n\tgetFunctionName(): string;\n\tgetMethodName(): string;\n\tgetFileName(): string;\n\tgetLineNumber(): number;\n\tgetColumnNumber(): number;\n\tgetEvalOrigin(): string;\n\tisToplevel(): boolean;\n\tisEval(): boolean;\n\tisNative(): boolean;\n\tisConstructor(): boolean;\n\ttoString(): string;\n}\n\nconst canceledName = 'Canceled';\n\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error: any): boolean {\n\treturn error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n\n// !!!IMPORTANT!!!\n// Do NOT change this class because it is also used as an API-type.\nexport class CancellationError extends Error {\n\tconstructor() {\n\t\tsuper(canceledName);\n\t\tthis.name = this.message;\n\t}\n}\n\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled(): Error {\n\tconst error = new Error(canceledName);\n\terror.name = error.message;\n\treturn error;\n}\n\nexport function illegalArgument(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal argument: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal argument');\n\t}\n}\n\nexport function illegalState(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal state: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal state');\n\t}\n}\n\nexport function readonly(name?: string): Error {\n\treturn name\n\t\t? new Error(`readonly property '${name} cannot be changed'`)\n\t\t: new Error('readonly property cannot be changed');\n}\n\nexport function disposed(what: string): Error {\n\tconst result = new Error(`${what} has been disposed`);\n\tresult.name = 'DISPOSED';\n\treturn result;\n}\n\nexport function getErrorMessage(err: any): string {\n\tif (!err) {\n\t\treturn 'Error';\n\t}\n\n\tif (err.message) {\n\t\treturn err.message;\n\t}\n\n\tif (err.stack) {\n\t\treturn err.stack.split('\\n')[0];\n\t}\n\n\treturn String(err);\n}\n\nexport class NotImplementedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotImplemented');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n\nexport class NotSupportedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotSupported');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n\nexport class ExpectedError extends Error {\n\treadonly isExpected = true;\n}\n\nexport interface IErrorOptions {\n\tactions?: readonly IAction[];\n}\n\nexport interface IErrorWithActions {\n\tactions?: readonly IAction[];\n}\n\nexport function isErrorWithActions(obj: unknown): obj is IErrorWithActions {\n\tconst candidate = obj as IErrorWithActions | undefined;\n\n\treturn candidate instanceof Error && Array.isArray(candidate.actions);\n}\n\nexport function createErrorWithActions(message: string, options: IErrorOptions = Object.create(null)): Error & IErrorWithActions {\n\tconst result = new Error(message);\n\n\tif (options.actions) {\n\t\t(result as IErrorWithActions).actions = options.actions;\n\t}\n\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { ISplice } from 'vs/base/common/sequence';\n\n/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail<T>(array: ArrayLike<T>, n: number = 0): T {\n\treturn array[array.length - (1 + n)];\n}\n\nexport function tail2<T>(arr: T[]): [T[], T] {\n\tif (arr.length === 0) {\n\t\tthrow new Error('Invalid tail call');\n\t}\n\n\treturn [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\n\nexport function equals<T>(one: ReadonlyArray<T> | undefined, other: ReadonlyArray<T> | undefined, itemEquals: (a: T, b: T) => boolean = (a, b) => a === b): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\n\tif (!one || !other) {\n\t\treturn false;\n\t}\n\n\tif (one.length !== other.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0, len = one.length; i < len; i++) {\n\t\tif (!itemEquals(one[i], other[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function binarySearch<T>(array: ReadonlyArray<T>, key: T, comparator: (op1: T, op2: T) => number): number {\n\tlet low = 0,\n\t\thigh = array.length - 1;\n\n\twhile (low <= high) {\n\t\tconst mid = ((low + high) / 2) | 0;\n\t\tconst comp = comparator(array[mid], key);\n\t\tif (comp < 0) {\n\t\t\tlow = mid + 1;\n\t\t} else if (comp > 0) {\n\t\t\thigh = mid - 1;\n\t\t} else {\n\t\t\treturn mid;\n\t\t}\n\t}\n\treturn -(low + 1);\n}\n\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirstInSorted<T>(array: ReadonlyArray<T>, p: (x: T) => boolean): number {\n\tlet low = 0, high = array.length;\n\tif (high === 0) {\n\t\treturn 0; // no children\n\t}\n\twhile (low < high) {\n\t\tconst mid = Math.floor((low + high) / 2);\n\t\tif (p(array[mid])) {\n\t\t\thigh = mid;\n\t\t} else {\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn low;\n}\n\ntype Compare<T> = (a: T, b: T) => number;\n\n\nexport function quickSelect<T>(nth: number, data: T[], compare: Compare<T>): T {\n\n\tnth = nth | 0;\n\n\tif (nth >= data.length) {\n\t\tthrow new TypeError('invalid index');\n\t}\n\n\tlet pivotValue = data[Math.floor(data.length * Math.random())];\n\tlet lower: T[] = [];\n\tlet higher: T[] = [];\n\tlet pivots: T[] = [];\n\n\tfor (let value of data) {\n\t\tconst val = compare(value, pivotValue);\n\t\tif (val < 0) {\n\t\t\tlower.push(value);\n\t\t} else if (val > 0) {\n\t\t\thigher.push(value);\n\t\t} else {\n\t\t\tpivots.push(value);\n\t\t}\n\t}\n\n\tif (nth < lower.length) {\n\t\treturn quickSelect(nth, lower, compare);\n\t} else if (nth < lower.length + pivots.length) {\n\t\treturn pivots[0];\n\t} else {\n\t\treturn quickSelect(nth - (lower.length + pivots.length), higher, compare);\n\t}\n}\n\nexport function groupBy<T>(data: ReadonlyArray<T>, compare: (a: T, b: T) => number): T[][] {\n\tconst result: T[][] = [];\n\tlet currentGroup: T[] | undefined = undefined;\n\tfor (const element of data.slice(0).sort(compare)) {\n\t\tif (!currentGroup || compare(currentGroup[0], element) !== 0) {\n\t\t\tcurrentGroup = [element];\n\t\t\tresult.push(currentGroup);\n\t\t} else {\n\t\t\tcurrentGroup.push(element);\n\t\t}\n\t}\n\treturn result;\n}\n\ninterface IMutableSplice<T> extends ISplice<T> {\n\tdeleteCount: number;\n}\n\n/**\n * Diffs two *sorted* arrays and computes the splices which apply the diff.\n */\nexport function sortedDiff<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): ISplice<T>[] {\n\tconst result: IMutableSplice<T>[] = [];\n\n\tfunction pushSplice(start: number, deleteCount: number, toInsert: T[]): void {\n\t\tif (deleteCount === 0 && toInsert.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst latest = result[result.length - 1];\n\n\t\tif (latest && latest.start + latest.deleteCount === start) {\n\t\t\tlatest.deleteCount += deleteCount;\n\t\t\tlatest.toInsert.push(...toInsert);\n\t\t} else {\n\t\t\tresult.push({ start, deleteCount, toInsert });\n\t\t}\n\t}\n\n\tlet beforeIdx = 0;\n\tlet afterIdx = 0;\n\n\twhile (true) {\n\t\tif (beforeIdx === before.length) {\n\t\t\tpushSplice(beforeIdx, 0, after.slice(afterIdx));\n\t\t\tbreak;\n\t\t}\n\t\tif (afterIdx === after.length) {\n\t\t\tpushSplice(beforeIdx, before.length - beforeIdx, []);\n\t\t\tbreak;\n\t\t}\n\n\t\tconst beforeElement = before[beforeIdx];\n\t\tconst afterElement = after[afterIdx];\n\t\tconst n = compare(beforeElement, afterElement);\n\t\tif (n === 0) {\n\t\t\t// equal\n\t\t\tbeforeIdx += 1;\n\t\t\tafterIdx += 1;\n\t\t} else if (n < 0) {\n\t\t\t// beforeElement is smaller -> before element removed\n\t\t\tpushSplice(beforeIdx, 1, []);\n\t\t\tbeforeIdx += 1;\n\t\t} else if (n > 0) {\n\t\t\t// beforeElement is greater -> after element added\n\t\t\tpushSplice(beforeIdx, 0, [afterElement]);\n\t\t\tafterIdx += 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Takes two *sorted* arrays and computes their delta (removed, added elements).\n * Finishes in `Math.min(before.length, after.length)` steps.\n */\nexport function delta<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): { removed: T[], added: T[] } {\n\tconst splices = sortedDiff(before, after, compare);\n\tconst removed: T[] = [];\n\tconst added: T[] = [];\n\n\tfor (const splice of splices) {\n\t\tremoved.push(...before.slice(splice.start, splice.start + splice.deleteCount));\n\t\tadded.push(...splice.toInsert);\n\t}\n\n\treturn { removed, added };\n}\n\n/**\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @return The first n elements from array when sorted with compare.\n */\nexport function top<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, n: number): T[] {\n\tif (n === 0) {\n\t\treturn [];\n\t}\n\tconst result = array.slice(0, n).sort(compare);\n\ttopStep(array, compare, result, n, array.length);\n\treturn result;\n}\n\n/**\n * Asynchronous variant of `top()` allowing for splitting up work in batches between which the event loop can run.\n *\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @param batch The number of elements to examine before yielding to the event loop.\n * @return The first n elements from array when sorted with compare.\n */\nexport function topAsync<T>(array: T[], compare: (a: T, b: T) => number, n: number, batch: number, token?: CancellationToken): Promise<T[]> {\n\tif (n === 0) {\n\t\treturn Promise.resolve([]);\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\t(async () => {\n\t\t\tconst o = array.length;\n\t\t\tconst result = array.slice(0, n).sort(compare);\n\t\t\tfor (let i = n, m = Math.min(n + batch, o); i < o; i = m, m = Math.min(m + batch, o)) {\n\t\t\t\tif (i > n) {\n\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve)); // any other delay function would starve I/O\n\t\t\t\t}\n\t\t\t\tif (token && token.isCancellationRequested) {\n\t\t\t\t\tthrow canceled();\n\t\t\t\t}\n\t\t\t\ttopStep(array, compare, result, i, m);\n\t\t\t}\n\t\t\treturn result;\n\t\t})()\n\t\t\t.then(resolve, reject);\n\t});\n}\n\nfunction topStep<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, result: T[], i: number, m: number): void {\n\tfor (const n = result.length; i < m; i++) {\n\t\tconst element = array[i];\n\t\tif (compare(element, result[n - 1]) < 0) {\n\t\t\tresult.pop();\n\t\t\tconst j = findFirstInSorted(result, e => compare(element, e) < 0);\n\t\t\tresult.splice(j, 0, element);\n\t\t}\n\t}\n}\n\n/**\n * @returns New array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce<T>(array: ReadonlyArray<T | undefined | null>): T[] {\n\treturn <T[]>array.filter(e => !!e);\n}\n\n/**\n * Remove all falsy values from `array`. The original array IS modified.\n */\nexport function coalesceInPlace<T>(array: Array<T | undefined | null>): void {\n\tlet to = 0;\n\tfor (let i = 0; i < array.length; i++) {\n\t\tif (!!array[i]) {\n\t\t\tarray[to] = array[i];\n\t\t\tto += 1;\n\t\t}\n\t}\n\tarray.length = to;\n}\n\n/**\n * Moves the element in the array for the provided positions.\n */\nexport function move(array: any[], from: number, to: number): void {\n\tarray.splice(to, 0, array.splice(from, 1)[0]);\n}\n\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj: any): boolean {\n\treturn !Array.isArray(obj) || obj.length === 0;\n}\n\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nexport function isNonEmptyArray<T>(obj: T[] | undefined | null): obj is T[];\nexport function isNonEmptyArray<T>(obj: readonly T[] | undefined | null): obj is readonly T[];\nexport function isNonEmptyArray<T>(obj: T[] | readonly T[] | undefined | null): obj is T[] | readonly T[] {\n\treturn Array.isArray(obj) && obj.length > 0;\n}\n\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equality by returning an alternate value for each.\n */\nexport function distinct<T>(array: ReadonlyArray<T>, keyFn: (value: T) => any = value => value): T[] {\n\tconst seen = new Set<any>();\n\n\treturn array.filter(element => {\n\t\tconst key = keyFn!(element);\n\t\tif (seen.has(key)) {\n\t\t\treturn false;\n\t\t}\n\t\tseen.add(key);\n\t\treturn true;\n\t});\n}\n\nexport function uniqueFilter<T>(keyFn: (t: T) => string): (t: T) => boolean {\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\n\treturn element => {\n\t\tconst key = keyFn(element);\n\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\t\treturn true;\n\t};\n}\n\nexport function findLast<T>(arr: readonly T[], predicate: (item: T) => boolean): T | undefined {\n\tconst idx = lastIndex(arr, predicate);\n\tif (idx === -1) {\n\t\treturn undefined;\n\t}\n\treturn arr[idx];\n}\n\nexport function lastIndex<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): number {\n\tfor (let i = array.length - 1; i >= 0; i--) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue: NotFound): T | NotFound;\nexport function firstOrDefault<T>(array: ReadonlyArray<T>): T | undefined;\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue?: NotFound): T | NotFound | undefined {\n\treturn array.length > 0 ? array[0] : notFoundValue;\n}\n\nexport function commonPrefixLength<T>(one: ReadonlyArray<T>, other: ReadonlyArray<T>, equals: (a: T, b: T) => boolean = (a, b) => a === b): number {\n\tlet result = 0;\n\n\tfor (let i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {\n\t\tresult++;\n\t}\n\n\treturn result;\n}\n\nexport function flatten<T>(arr: T[][]): T[] {\n\treturn (<T[]>[]).concat(...arr);\n}\n\nexport function range(to: number): number[];\nexport function range(from: number, to: number): number[];\nexport function range(arg: number, to?: number): number[] {\n\tlet from = typeof to === 'number' ? arg : 0;\n\n\tif (typeof to === 'number') {\n\t\tfrom = arg;\n\t} else {\n\t\tfrom = 0;\n\t\tto = arg;\n\t}\n\n\tconst result: number[] = [];\n\n\tif (from <= to) {\n\t\tfor (let i = from; i < to; i++) {\n\t\t\tresult.push(i);\n\t\t}\n\t} else {\n\t\tfor (let i = from; i > to; i--) {\n\t\t\tresult.push(i);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function index<T>(array: ReadonlyArray<T>, indexer: (t: T) => string): { [key: string]: T; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, mapper: (t: T) => R): { [key: string]: R; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, mapper?: (t: T) => R): { [key: string]: R; } {\n\treturn array.reduce((r, t) => {\n\t\tr[indexer(t)] = mapper ? mapper(t) : t;\n\t\treturn r;\n\t}, Object.create(null));\n}\n\n/**\n * Inserts an element into an array. Returns a function which, when\n * called, will remove that element from the array.\n */\nexport function insert<T>(array: T[], element: T): () => void {\n\tarray.push(element);\n\n\treturn () => remove(array, element);\n}\n\n/**\n * Removes an element from an array if it can be found.\n */\nexport function remove<T>(array: T[], element: T): T | undefined {\n\tconst index = array.indexOf(element);\n\tif (index > -1) {\n\t\tarray.splice(index, 1);\n\n\t\treturn element;\n\t}\n\n\treturn undefined;\n}\n\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert<T>(target: T[], insertIndex: number, insertArr: T[]): T[] {\n\tconst before = target.slice(0, insertIndex);\n\tconst after = target.slice(insertIndex);\n\treturn before.concat(insertArr, after);\n}\n\n/**\n * Uses Fisher-Yates shuffle to shuffle the given array\n */\nexport function shuffle<T>(array: T[], _seed?: number): void {\n\tlet rand: () => number;\n\n\tif (typeof _seed === 'number') {\n\t\tlet seed = _seed;\n\t\t// Seeded random number generator in JS. Modified from:\n\t\t// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\n\t\trand = () => {\n\t\t\tconst x = Math.sin(seed++) * 179426549; // throw away most significant digits and reduce any potential bias\n\t\t\treturn x - Math.floor(x);\n\t\t};\n\t} else {\n\t\trand = Math.random;\n\t}\n\n\tfor (let i = array.length - 1; i > 0; i -= 1) {\n\t\tconst j = Math.floor(rand() * (i + 1));\n\t\tconst temp = array[i];\n\t\tarray[i] = array[j];\n\t\tarray[j] = temp;\n\t}\n}\n\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.unshift(value);\n\t}\n}\n\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.push(value);\n\t}\n}\n\nexport function mapArrayOrNot<T, U>(items: T | T[], fn: (_: T) => U): U | U[] {\n\treturn Array.isArray(items) ?\n\t\titems.map(fn) :\n\t\tfn(items);\n}\n\nexport function asArray<T>(x: T | T[]): T[];\nexport function asArray<T>(x: T | readonly T[]): readonly T[];\nexport function asArray<T>(x: T | T[]): T[] {\n\treturn Array.isArray(x) ? x : [x];\n}\n\nexport function getRandomElement<T>(arr: T[]): T | undefined {\n\treturn arr[Math.floor(Math.random() * arr.length)];\n}\n\n/**\n * Returns the first mapped value of the array which is not undefined.\n */\nexport function mapFind<T, R>(array: Iterable<T>, mapFn: (value: T) => R | undefined): R | undefined {\n\tfor (const value of array) {\n\t\tconst mapped = mapFn(value);\n\t\tif (mapped !== undefined) {\n\t\t\treturn mapped;\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\n/**\n * Insert the new items in the array.\n * @param array The original array.\n * @param start The zero-based location in the array from which to start inserting elements.\n * @param newItems The items to be inserted\n */\nexport function insertInto<T>(array: T[], start: number, newItems: T[]): void {\n\tconst startIdx = getActualStartIndex(array, start);\n\tconst originalLength = array.length;\n\tconst newItemsLength = newItems.length;\n\tarray.length = originalLength + newItemsLength;\n\t// Move the items after the start index, start from the end so that we don't overwrite any value.\n\tfor (let i = originalLength - 1; i >= startIdx; i--) {\n\t\tarray[i + newItemsLength] = array[i];\n\t}\n\n\tfor (let i = 0; i < newItemsLength; i++) {\n\t\tarray[i + startIdx] = newItems[i];\n\t}\n}\n\n/**\n * Removes elements from an array and inserts new elements in their place, returning the deleted elements. Alternative to the native Array.splice method, it\n * can only support limited number of items due to the maximum call stack size limit.\n * @param array The original array.\n * @param start The zero-based location in the array from which to start removing elements.\n * @param deleteCount The number of elements to remove.\n * @returns An array containing the elements that were deleted.\n */\nexport function splice<T>(array: T[], start: number, deleteCount: number, newItems: T[]): T[] {\n\tconst index = getActualStartIndex(array, start);\n\tconst result = array.splice(index, deleteCount);\n\tinsertInto(array, index, newItems);\n\treturn result;\n}\n\n/**\n * Determine the actual start index (same logic as the native splice() or slice())\n * If greater than the length of the array, start will be set to the length of the array. In this case, no element will be deleted but the method will behave as an adding function, adding as many element as item[n*] provided.\n * If negative, it will begin that many elements from the end of the array. (In this case, the origin -1, meaning -n is the index of the nth last element, and is therefore equivalent to the index of array.length - n.) If array.length + start is less than 0, it will begin from index 0.\n * @param array The target array.\n * @param start The operation index.\n */\nfunction getActualStartIndex<T>(array: T[], start: number): number {\n\treturn start < 0 ? Math.max(start + array.length, 0) : Math.min(start, array.length);\n}\n\n/**\n * Like Math.min with a delegate, and returns the winning index\n */\nexport function minIndex<T>(array: readonly T[], fn: (value: T) => number): number {\n\tlet minValue = Number.MAX_SAFE_INTEGER;\n\tlet minIdx = 0;\n\tarray.forEach((value, i) => {\n\t\tconst thisValue = fn(value);\n\t\tif (thisValue < minValue) {\n\t\t\tminValue = thisValue;\n\t\t\tminIdx = i;\n\t\t}\n\t});\n\n\treturn minIdx;\n}\n\n/**\n * Like Math.max with a delegate, and returns the winning index\n */\nexport function maxIndex<T>(array: readonly T[], fn: (value: T) => number): number {\n\tlet minValue = Number.MIN_SAFE_INTEGER;\n\tlet maxIdx = 0;\n\tarray.forEach((value, i) => {\n\t\tconst thisValue = fn(value);\n\t\tif (thisValue > minValue) {\n\t\t\tminValue = thisValue;\n\t\t\tmaxIdx = i;\n\t\t}\n\t});\n\n\treturn maxIdx;\n}\n\nexport class ArrayQueue<T> {\n\tprivate firstIdx = 0;\n\tprivate lastIdx = this.items.length - 1;\n\n\t/**\n\t * Constructs a queue that is backed by the given array. Runtime is O(1).\n\t*/\n\tconstructor(private readonly items: T[]) { }\n\n\tget length(): number {\n\t\treturn this.lastIdx - this.firstIdx + 1;\n\t}\n\n\t/**\n\t * Consumes elements from the beginning of the queue as long as the predicate returns true.\n\t * If no elements were consumed, `null` is returned. Has a runtime of O(result.length).\n\t*/\n\ttakeWhile(predicate: (value: T) => boolean): T[] | null {\n\t\t// P(k) := k <= this.lastIdx && predicate(this.items[k])\n\t\t// Find s := min { k | k >= this.firstIdx && !P(k) } and return this.data[this.firstIdx...s)\n\n\t\tlet startIdx = this.firstIdx;\n\t\twhile (startIdx < this.items.length && predicate(this.items[startIdx])) {\n\t\t\tstartIdx++;\n\t\t}\n\t\tconst result = startIdx === this.firstIdx ? null : this.items.slice(this.firstIdx, startIdx);\n\t\tthis.firstIdx = startIdx;\n\t\treturn result;\n\t}\n\n\t/**\n\t * Consumes elements from the end of the queue as long as the predicate returns true.\n\t * If no elements were consumed, `null` is returned.\n\t * The result has the same order as the underlying array!\n\t*/\n\ttakeFromEndWhile(predicate: (value: T) => boolean): T[] | null {\n\t\t// P(k) := this.firstIdx >= k && predicate(this.items[k])\n\t\t// Find s := max { k | k <= this.lastIdx && !P(k) } and return this.data(s...this.lastIdx]\n\n\t\tlet endIdx = this.lastIdx;\n\t\twhile (endIdx >= 0 && predicate(this.items[endIdx])) {\n\t\t\tendIdx--;\n\t\t}\n\t\tconst result = endIdx === this.lastIdx ? null : this.items.slice(endIdx + 1, this.lastIdx + 1);\n\t\tthis.lastIdx = endIdx;\n\t\treturn result;\n\t}\n\n\tpeek(): T | undefined {\n\t\treturn this.items[this.firstIdx];\n\t}\n\n\tdequeue(): T | undefined {\n\t\tconst result = this.items[this.firstIdx];\n\t\tthis.firstIdx++;\n\t\treturn result;\n\t}\n\n\ttakeCount(count: number): T[] {\n\t\tconst result = this.items.slice(this.firstIdx, this.firstIdx + count);\n\t\tthis.firstIdx += count;\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function once<T extends Function>(this: unknown, fn: T): T {\n\tconst _this = this;\n\tlet didCall = false;\n\tlet result: unknown;\n\n\treturn function () {\n\t\tif (didCall) {\n\t\t\treturn result;\n\t\t}\n\n\t\tdidCall = true;\n\t\tresult = fn.apply(_this, arguments);\n\n\t\treturn result;\n\t} as unknown as T;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport namespace Iterable {\n\n\texport function is<T = any>(thing: any): thing is IterableIterator<T> {\n\t\treturn thing && typeof thing === 'object' && typeof thing[Symbol.iterator] === 'function';\n\t}\n\n\tconst _empty: Iterable<any> = Object.freeze([]);\n\texport function empty<T = any>(): Iterable<T> {\n\t\treturn _empty;\n\t}\n\n\texport function* single<T>(element: T): Iterable<T> {\n\t\tyield element;\n\t}\n\n\texport function from<T>(iterable: Iterable<T> | undefined | null): Iterable<T> {\n\t\treturn iterable || _empty;\n\t}\n\n\texport function isEmpty<T>(iterable: Iterable<T> | undefined | null): boolean {\n\t\treturn !iterable || iterable[Symbol.iterator]().next().done === true;\n\t}\n\n\texport function first<T>(iterable: Iterable<T>): T | undefined {\n\t\treturn iterable[Symbol.iterator]().next().value;\n\t}\n\n\texport function some<T>(iterable: Iterable<T>, predicate: (t: T) => unknown): boolean {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\texport function find<T, R extends T>(iterable: Iterable<T>, predicate: (t: T) => t is R): T | undefined;\n\texport function find<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): T | undefined;\n\texport function find<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): T | undefined {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\treturn element;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\texport function filter<T, R extends T>(iterable: Iterable<T>, predicate: (t: T) => t is R): Iterable<R>;\n\texport function filter<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): Iterable<T>;\n\texport function* filter<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): Iterable<T> {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function* map<T, R>(iterable: Iterable<T>, fn: (t: T, index: number) => R): Iterable<R> {\n\t\tlet index = 0;\n\t\tfor (const element of iterable) {\n\t\t\tyield fn(element, index++);\n\t\t}\n\t}\n\n\texport function* concat<T>(...iterables: Iterable<T>[]): Iterable<T> {\n\t\tfor (const iterable of iterables) {\n\t\t\tfor (const element of iterable) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function* concatNested<T>(iterables: Iterable<Iterable<T>>): Iterable<T> {\n\t\tfor (const iterable of iterables) {\n\t\t\tfor (const element of iterable) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function reduce<T, R>(iterable: Iterable<T>, reducer: (previousValue: R, currentValue: T) => R, initialValue: R): R {\n\t\tlet value = initialValue;\n\t\tfor (const element of iterable) {\n\t\t\tvalue = reducer(value, element);\n\t\t}\n\t\treturn value;\n\t}\n\n\t/**\n\t * Returns an iterable slice of the array, with the same semantics as `array.slice()`.\n\t */\n\texport function* slice<T>(arr: ReadonlyArray<T>, from: number, to = arr.length): Iterable<T> {\n\t\tif (from < 0) {\n\t\t\tfrom += arr.length;\n\t\t}\n\n\t\tif (to < 0) {\n\t\t\tto += arr.length;\n\t\t} else if (to > arr.length) {\n\t\t\tto = arr.length;\n\t\t}\n\n\t\tfor (; from < to; from++) {\n\t\t\tyield arr[from];\n\t\t}\n\t}\n\n\t/**\n\t * Consumes `atMost` elements from iterable and returns the consumed elements,\n\t * and an iterable for the rest of the elements.\n\t */\n\texport function consume<T>(iterable: Iterable<T>, atMost: number = Number.POSITIVE_INFINITY): [T[], Iterable<T>] {\n\t\tconst consumed: T[] = [];\n\n\t\tif (atMost === 0) {\n\t\t\treturn [consumed, iterable];\n\t\t}\n\n\t\tconst iterator = iterable[Symbol.iterator]();\n\n\t\tfor (let i = 0; i < atMost; i++) {\n\t\t\tconst next = iterator.next();\n\n\t\t\tif (next.done) {\n\t\t\t\treturn [consumed, Iterable.empty()];\n\t\t\t}\n\n\t\t\tconsumed.push(next.value);\n\t\t}\n\n\t\treturn [consumed, { [Symbol.iterator]() { return iterator; } }];\n\t}\n\n\t/**\n\t * Returns whether the iterables are the same length and all items are\n\t * equal using the comparator function.\n\t */\n\texport function equals<T>(a: Iterable<T>, b: Iterable<T>, comparator = (at: T, bt: T) => at === bt) {\n\t\tconst ai = a[Symbol.iterator]();\n\t\tconst bi = b[Symbol.iterator]();\n\t\twhile (true) {\n\t\t\tconst an = ai.next();\n\t\t\tconst bn = bi.next();\n\n\t\t\tif (an.done !== bn.done) {\n\t\t\t\treturn false;\n\t\t\t} else if (an.done) {\n\t\t\t\treturn true;\n\t\t\t} else if (!comparator(an.value, bn.value)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const enum ScanError {\n\tNone = 0,\n\tUnexpectedEndOfComment = 1,\n\tUnexpectedEndOfString = 2,\n\tUnexpectedEndOfNumber = 3,\n\tInvalidUnicode = 4,\n\tInvalidEscapeCharacter = 5,\n\tInvalidCharacter = 6\n}\n\nexport const enum SyntaxKind {\n\tOpenBraceToken = 1,\n\tCloseBraceToken = 2,\n\tOpenBracketToken = 3,\n\tCloseBracketToken = 4,\n\tCommaToken = 5,\n\tColonToken = 6,\n\tNullKeyword = 7,\n\tTrueKeyword = 8,\n\tFalseKeyword = 9,\n\tStringLiteral = 10,\n\tNumericLiteral = 11,\n\tLineCommentTrivia = 12,\n\tBlockCommentTrivia = 13,\n\tLineBreakTrivia = 14,\n\tTrivia = 15,\n\tUnknown = 16,\n\tEOF = 17\n}\n\n/**\n * The scanner object, representing a JSON scanner at a position in the input string.\n */\nexport interface JSONScanner {\n\t/**\n\t * Sets the scan position to a new offset. A call to 'scan' is needed to get the first token.\n\t */\n\tsetPosition(pos: number): void;\n\t/**\n\t * Read the next token. Returns the token code.\n\t */\n\tscan(): SyntaxKind;\n\t/**\n\t * Returns the current scan position, which is after the last read token.\n\t */\n\tgetPosition(): number;\n\t/**\n\t * Returns the last read token.\n\t */\n\tgetToken(): SyntaxKind;\n\t/**\n\t * Returns the last read token value. The value for strings is the decoded string content. For numbers its of type number, for boolean it's true or false.\n\t */\n\tgetTokenValue(): string;\n\t/**\n\t * The start offset of the last read token.\n\t */\n\tgetTokenOffset(): number;\n\t/**\n\t * The length of the last read token.\n\t */\n\tgetTokenLength(): number;\n\t/**\n\t * An error code of the last scan.\n\t */\n\tgetTokenError(): ScanError;\n}\n\n\n\nexport interface ParseError {\n\terror: ParseErrorCode;\n\toffset: number;\n\tlength: number;\n}\n\nexport const enum ParseErrorCode {\n\tInvalidSymbol = 1,\n\tInvalidNumberFormat = 2,\n\tPropertyNameExpected = 3,\n\tValueExpected = 4,\n\tColonExpected = 5,\n\tCommaExpected = 6,\n\tCloseBraceExpected = 7,\n\tCloseBracketExpected = 8,\n\tEndOfFileExpected = 9,\n\tInvalidCommentToken = 10,\n\tUnexpectedEndOfComment = 11,\n\tUnexpectedEndOfString = 12,\n\tUnexpectedEndOfNumber = 13,\n\tInvalidUnicode = 14,\n\tInvalidEscapeCharacter = 15,\n\tInvalidCharacter = 16\n}\n\nexport type NodeType = 'object' | 'array' | 'property' | 'string' | 'number' | 'boolean' | 'null';\n\nexport interface Node {\n\treadonly type: NodeType;\n\treadonly value?: any;\n\treadonly offset: number;\n\treadonly length: number;\n\treadonly colonOffset?: number;\n\treadonly parent?: Node;\n\treadonly children?: Node[];\n}\n\nexport type Segment = string | number;\nexport type JSONPath = Segment[];\n\nexport interface Location {\n\t/**\n\t * The previous property key or literal value (string, number, boolean or null) or undefined.\n\t */\n\tpreviousNode?: Node;\n\t/**\n\t * The path describing the location in the JSON document. The path consists of a sequence strings\n\t * representing an object property or numbers for array indices.\n\t */\n\tpath: JSONPath;\n\t/**\n\t * Matches the locations path against a pattern consisting of strings (for properties) and numbers (for array indices).\n\t * '*' will match a single segment, of any property name or index.\n\t * '**' will match a sequence of segments or no segment, of any property name or index.\n\t */\n\tmatches: (patterns: JSONPath) => boolean;\n\t/**\n\t * If set, the location's offset is at a property key.\n\t */\n\tisAtPropertyKey: boolean;\n}\n\nexport interface ParseOptions {\n\tdisallowComments?: boolean;\n\tallowTrailingComma?: boolean;\n\tallowEmptyContent?: boolean;\n}\n\nexport namespace ParseOptions {\n\texport const DEFAULT = {\n\t\tallowTrailingComma: true\n\t};\n}\n\nexport interface JSONVisitor {\n\t/**\n\t * Invoked when an open brace is encountered and an object is started. The offset and length represent the location of the open brace.\n\t */\n\tonObjectBegin?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a property is encountered. The offset and length represent the location of the property name.\n\t */\n\tonObjectProperty?: (property: string, offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a closing brace is encountered and an object is completed. The offset and length represent the location of the closing brace.\n\t */\n\tonObjectEnd?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when an open bracket is encountered. The offset and length represent the location of the open bracket.\n\t */\n\tonArrayBegin?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a closing bracket is encountered. The offset and length represent the location of the closing bracket.\n\t */\n\tonArrayEnd?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a literal value is encountered. The offset and length represent the location of the literal value.\n\t */\n\tonLiteralValue?: (value: any, offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a comma or colon separator is encountered. The offset and length represent the location of the separator.\n\t */\n\tonSeparator?: (character: string, offset: number, length: number) => void;\n\n\t/**\n\t * When comments are allowed, invoked when a line or block comment is encountered. The offset and length represent the location of the comment.\n\t */\n\tonComment?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked on an error.\n\t */\n\tonError?: (error: ParseErrorCode, offset: number, length: number) => void;\n}\n\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text: string, ignoreTrivia: boolean = false): JSONScanner {\n\n\tlet pos = 0,\n\t\tlen = text.length,\n\t\tvalue: string = '',\n\t\ttokenOffset = 0,\n\t\ttoken: SyntaxKind = SyntaxKind.Unknown,\n\t\tscanError: ScanError = ScanError.None;\n\n\tfunction scanHexDigits(count: number): number {\n\t\tlet digits = 0;\n\t\tlet hexValue = 0;\n\t\twhile (digits < count) {\n\t\t\tconst ch = text.charCodeAt(pos);\n\t\t\tif (ch >= CharacterCodes._0 && ch <= CharacterCodes._9) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes._0;\n\t\t\t}\n\t\t\telse if (ch >= CharacterCodes.A && ch <= CharacterCodes.F) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes.A + 10;\n\t\t\t}\n\t\t\telse if (ch >= CharacterCodes.a && ch <= CharacterCodes.f) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes.a + 10;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpos++;\n\t\t\tdigits++;\n\t\t}\n\t\tif (digits < count) {\n\t\t\thexValue = -1;\n\t\t}\n\t\treturn hexValue;\n\t}\n\n\tfunction setPosition(newPosition: number) {\n\t\tpos = newPosition;\n\t\tvalue = '';\n\t\ttokenOffset = 0;\n\t\ttoken = SyntaxKind.Unknown;\n\t\tscanError = ScanError.None;\n\t}\n\n\tfunction scanNumber(): string {\n\t\tconst start = pos;\n\t\tif (text.charCodeAt(pos) === CharacterCodes._0) {\n\t\t\tpos++;\n\t\t} else {\n\t\t\tpos++;\n\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t}\n\t\t}\n\t\tif (pos < text.length && text.charCodeAt(pos) === CharacterCodes.dot) {\n\t\t\tpos++;\n\t\t\tif (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tscanError = ScanError.UnexpectedEndOfNumber;\n\t\t\t\treturn text.substring(start, pos);\n\t\t\t}\n\t\t}\n\t\tlet end = pos;\n\t\tif (pos < text.length && (text.charCodeAt(pos) === CharacterCodes.E || text.charCodeAt(pos) === CharacterCodes.e)) {\n\t\t\tpos++;\n\t\t\tif (pos < text.length && text.charCodeAt(pos) === CharacterCodes.plus || text.charCodeAt(pos) === CharacterCodes.minus) {\n\t\t\t\tpos++;\n\t\t\t}\n\t\t\tif (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t\tend = pos;\n\t\t\t} else {\n\t\t\t\tscanError = ScanError.UnexpectedEndOfNumber;\n\t\t\t}\n\t\t}\n\t\treturn text.substring(start, end);\n\t}\n\n\tfunction scanString(): string {\n\n\t\tlet result = '',\n\t\t\tstart = pos;\n\n\t\twhile (true) {\n\t\t\tif (pos >= len) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst ch = text.charCodeAt(pos);\n\t\t\tif (ch === CharacterCodes.doubleQuote) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tpos++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (ch === CharacterCodes.backslash) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tpos++;\n\t\t\t\tif (pos >= len) {\n\t\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tconst ch2 = text.charCodeAt(pos++);\n\t\t\t\tswitch (ch2) {\n\t\t\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\t\t\t\tresult += '\\\"';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.backslash:\n\t\t\t\t\t\tresult += '\\\\';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.slash:\n\t\t\t\t\t\tresult += '/';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.b:\n\t\t\t\t\t\tresult += '\\b';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.f:\n\t\t\t\t\t\tresult += '\\f';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.n:\n\t\t\t\t\t\tresult += '\\n';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.r:\n\t\t\t\t\t\tresult += '\\r';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.t:\n\t\t\t\t\t\tresult += '\\t';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.u:\n\t\t\t\t\t\tconst ch3 = scanHexDigits(4);\n\t\t\t\t\t\tif (ch3 >= 0) {\n\t\t\t\t\t\t\tresult += String.fromCharCode(ch3);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscanError = ScanError.InvalidUnicode;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tscanError = ScanError.InvalidEscapeCharacter;\n\t\t\t\t}\n\t\t\t\tstart = pos;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (ch >= 0 && ch <= 0x1F) {\n\t\t\t\tif (isLineBreak(ch)) {\n\t\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tscanError = ScanError.InvalidCharacter;\n\t\t\t\t\t// mark as error but continue with string\n\t\t\t\t}\n\t\t\t}\n\t\t\tpos++;\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction scanNext(): SyntaxKind {\n\n\t\tvalue = '';\n\t\tscanError = ScanError.None;\n\n\t\ttokenOffset = pos;\n\n\t\tif (pos >= len) {\n\t\t\t// at the end\n\t\t\ttokenOffset = len;\n\t\t\treturn token = SyntaxKind.EOF;\n\t\t}\n\n\t\tlet code = text.charCodeAt(pos);\n\t\t// trivia: whitespace\n\t\tif (isWhitespace(code)) {\n\t\t\tdo {\n\t\t\t\tpos++;\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tcode = text.charCodeAt(pos);\n\t\t\t} while (isWhitespace(code));\n\n\t\t\treturn token = SyntaxKind.Trivia;\n\t\t}\n\n\t\t// trivia: newlines\n\t\tif (isLineBreak(code)) {\n\t\t\tpos++;\n\t\t\tvalue += String.fromCharCode(code);\n\t\t\tif (code === CharacterCodes.carriageReturn && text.charCodeAt(pos) === CharacterCodes.lineFeed) {\n\t\t\t\tpos++;\n\t\t\t\tvalue += '\\n';\n\t\t\t}\n\t\t\treturn token = SyntaxKind.LineBreakTrivia;\n\t\t}\n\n\t\tswitch (code) {\n\t\t\t// tokens: []{}:,\n\t\t\tcase CharacterCodes.openBrace:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.OpenBraceToken;\n\t\t\tcase CharacterCodes.closeBrace:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CloseBraceToken;\n\t\t\tcase CharacterCodes.openBracket:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.OpenBracketToken;\n\t\t\tcase CharacterCodes.closeBracket:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CloseBracketToken;\n\t\t\tcase CharacterCodes.colon:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.ColonToken;\n\t\t\tcase CharacterCodes.comma:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CommaToken;\n\n\t\t\t// strings\n\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\t\tpos++;\n\t\t\t\tvalue = scanString();\n\t\t\t\treturn token = SyntaxKind.StringLiteral;\n\n\t\t\t// comments\n\t\t\tcase CharacterCodes.slash:\n\t\t\t\tconst start = pos - 1;\n\t\t\t\t// Single-line comment\n\t\t\t\tif (text.charCodeAt(pos + 1) === CharacterCodes.slash) {\n\t\t\t\t\tpos += 2;\n\n\t\t\t\t\twhile (pos < len) {\n\t\t\t\t\t\tif (isLineBreak(text.charCodeAt(pos))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos++;\n\n\t\t\t\t\t}\n\t\t\t\t\tvalue = text.substring(start, pos);\n\t\t\t\t\treturn token = SyntaxKind.LineCommentTrivia;\n\t\t\t\t}\n\n\t\t\t\t// Multi-line comment\n\t\t\t\tif (text.charCodeAt(pos + 1) === CharacterCodes.asterisk) {\n\t\t\t\t\tpos += 2;\n\n\t\t\t\t\tconst safeLength = len - 1; // For lookahead.\n\t\t\t\t\tlet commentClosed = false;\n\t\t\t\t\twhile (pos < safeLength) {\n\t\t\t\t\t\tconst ch = text.charCodeAt(pos);\n\n\t\t\t\t\t\tif (ch === CharacterCodes.asterisk && text.charCodeAt(pos + 1) === CharacterCodes.slash) {\n\t\t\t\t\t\t\tpos += 2;\n\t\t\t\t\t\t\tcommentClosed = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!commentClosed) {\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t\tscanError = ScanError.UnexpectedEndOfComment;\n\t\t\t\t\t}\n\n\t\t\t\t\tvalue = text.substring(start, pos);\n\t\t\t\t\treturn token = SyntaxKind.BlockCommentTrivia;\n\t\t\t\t}\n\t\t\t\t// just a single slash\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.Unknown;\n\n\t\t\t// numbers\n\t\t\tcase CharacterCodes.minus:\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\tif (pos === len || !isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t\t\t}\n\t\t\t// found a minus, followed by a number so\n\t\t\t// we fall through to proceed with scanning\n\t\t\t// numbers\n\t\t\tcase CharacterCodes._0:\n\t\t\tcase CharacterCodes._1:\n\t\t\tcase CharacterCodes._2:\n\t\t\tcase CharacterCodes._3:\n\t\t\tcase CharacterCodes._4:\n\t\t\tcase CharacterCodes._5:\n\t\t\tcase CharacterCodes._6:\n\t\t\tcase CharacterCodes._7:\n\t\t\tcase CharacterCodes._8:\n\t\t\tcase CharacterCodes._9:\n\t\t\t\tvalue += scanNumber();\n\t\t\t\treturn token = SyntaxKind.NumericLiteral;\n\t\t\t// literals and unknown symbols\n\t\t\tdefault:\n\t\t\t\t// is a literal? Read the full word.\n\t\t\t\twhile (pos < len && isUnknownContentCharacter(code)) {\n\t\t\t\t\tpos++;\n\t\t\t\t\tcode = text.charCodeAt(pos);\n\t\t\t\t}\n\t\t\t\tif (tokenOffset !== pos) {\n\t\t\t\t\tvalue = text.substring(tokenOffset, pos);\n\t\t\t\t\t// keywords: true, false, null\n\t\t\t\t\tswitch (value) {\n\t\t\t\t\t\tcase 'true': return token = SyntaxKind.TrueKeyword;\n\t\t\t\t\t\tcase 'false': return token = SyntaxKind.FalseKeyword;\n\t\t\t\t\t\tcase 'null': return token = SyntaxKind.NullKeyword;\n\t\t\t\t\t}\n\t\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t\t\t}\n\t\t\t\t// some\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t}\n\t}\n\n\tfunction isUnknownContentCharacter(code: CharacterCodes) {\n\t\tif (isWhitespace(code) || isLineBreak(code)) {\n\t\t\treturn false;\n\t\t}\n\t\tswitch (code) {\n\t\t\tcase CharacterCodes.closeBrace:\n\t\t\tcase CharacterCodes.closeBracket:\n\t\t\tcase CharacterCodes.openBrace:\n\t\t\tcase CharacterCodes.openBracket:\n\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\tcase CharacterCodes.colon:\n\t\t\tcase CharacterCodes.comma:\n\t\t\tcase CharacterCodes.slash:\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\n\tfunction scanNextNonTrivia(): SyntaxKind {\n\t\tlet result: SyntaxKind;\n\t\tdo {\n\t\t\tresult = scanNext();\n\t\t} while (result >= SyntaxKind.LineCommentTrivia && result <= SyntaxKind.Trivia);\n\t\treturn result;\n\t}\n\n\treturn {\n\t\tsetPosition: setPosition,\n\t\tgetPosition: () => pos,\n\t\tscan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n\t\tgetToken: () => token,\n\t\tgetTokenValue: () => value,\n\t\tgetTokenOffset: () => tokenOffset,\n\t\tgetTokenLength: () => pos - tokenOffset,\n\t\tgetTokenError: () => scanError\n\t};\n}\n\nfunction isWhitespace(ch: number): boolean {\n\treturn ch === CharacterCodes.space || ch === CharacterCodes.tab || ch === CharacterCodes.verticalTab || ch === CharacterCodes.formFeed ||\n\t\tch === CharacterCodes.nonBreakingSpace || ch === CharacterCodes.ogham || ch >= CharacterCodes.enQuad && ch <= CharacterCodes.zeroWidthSpace ||\n\t\tch === CharacterCodes.narrowNoBreakSpace || ch === CharacterCodes.mathematicalSpace || ch === CharacterCodes.ideographicSpace || ch === CharacterCodes.byteOrderMark;\n}\n\nfunction isLineBreak(ch: number): boolean {\n\treturn ch === CharacterCodes.lineFeed || ch === CharacterCodes.carriageReturn || ch === CharacterCodes.lineSeparator || ch === CharacterCodes.paragraphSeparator;\n}\n\nfunction isDigit(ch: number): boolean {\n\treturn ch >= CharacterCodes._0 && ch <= CharacterCodes._9;\n}\n\nconst enum CharacterCodes {\n\tnullCharacter = 0,\n\tmaxAsciiCharacter = 0x7F,\n\n\tlineFeed = 0x0A,              // \\n\n\tcarriageReturn = 0x0D,        // \\r\n\tlineSeparator = 0x2028,\n\tparagraphSeparator = 0x2029,\n\n\t// REVIEW: do we need to support this?  The scanner doesn't, but our IText does.  This seems\n\t// like an odd disparity?  (Or maybe it's completely fine for them to be different).\n\tnextLine = 0x0085,\n\n\t// Unicode 3.0 space characters\n\tspace = 0x0020,   // \" \"\n\tnonBreakingSpace = 0x00A0,   //\n\tenQuad = 0x2000,\n\temQuad = 0x2001,\n\tenSpace = 0x2002,\n\temSpace = 0x2003,\n\tthreePerEmSpace = 0x2004,\n\tfourPerEmSpace = 0x2005,\n\tsixPerEmSpace = 0x2006,\n\tfigureSpace = 0x2007,\n\tpunctuationSpace = 0x2008,\n\tthinSpace = 0x2009,\n\thairSpace = 0x200A,\n\tzeroWidthSpace = 0x200B,\n\tnarrowNoBreakSpace = 0x202F,\n\tideographicSpace = 0x3000,\n\tmathematicalSpace = 0x205F,\n\togham = 0x1680,\n\n\t_ = 0x5F,\n\t$ = 0x24,\n\n\t_0 = 0x30,\n\t_1 = 0x31,\n\t_2 = 0x32,\n\t_3 = 0x33,\n\t_4 = 0x34,\n\t_5 = 0x35,\n\t_6 = 0x36,\n\t_7 = 0x37,\n\t_8 = 0x38,\n\t_9 = 0x39,\n\n\ta = 0x61,\n\tb = 0x62,\n\tc = 0x63,\n\td = 0x64,\n\te = 0x65,\n\tf = 0x66,\n\tg = 0x67,\n\th = 0x68,\n\ti = 0x69,\n\tj = 0x6A,\n\tk = 0x6B,\n\tl = 0x6C,\n\tm = 0x6D,\n\tn = 0x6E,\n\to = 0x6F,\n\tp = 0x70,\n\tq = 0x71,\n\tr = 0x72,\n\ts = 0x73,\n\tt = 0x74,\n\tu = 0x75,\n\tv = 0x76,\n\tw = 0x77,\n\tx = 0x78,\n\ty = 0x79,\n\tz = 0x7A,\n\n\tA = 0x41,\n\tB = 0x42,\n\tC = 0x43,\n\tD = 0x44,\n\tE = 0x45,\n\tF = 0x46,\n\tG = 0x47,\n\tH = 0x48,\n\tI = 0x49,\n\tJ = 0x4A,\n\tK = 0x4B,\n\tL = 0x4C,\n\tM = 0x4D,\n\tN = 0x4E,\n\tO = 0x4F,\n\tP = 0x50,\n\tQ = 0x51,\n\tR = 0x52,\n\tS = 0x53,\n\tT = 0x54,\n\tU = 0x55,\n\tV = 0x56,\n\tW = 0x57,\n\tX = 0x58,\n\tY = 0x59,\n\tZ = 0x5A,\n\n\tampersand = 0x26,             // &\n\tasterisk = 0x2A,              // *\n\tat = 0x40,                    // @\n\tbackslash = 0x5C,             // \\\n\tbar = 0x7C,                   // |\n\tcaret = 0x5E,                 // ^\n\tcloseBrace = 0x7D,            // }\n\tcloseBracket = 0x5D,          // ]\n\tcloseParen = 0x29,            // )\n\tcolon = 0x3A,                 // :\n\tcomma = 0x2C,                 // ,\n\tdot = 0x2E,                   // .\n\tdoubleQuote = 0x22,           // \"\n\tequals = 0x3D,                // =\n\texclamation = 0x21,           // !\n\tgreaterThan = 0x3E,           // >\n\tlessThan = 0x3C,              // <\n\tminus = 0x2D,                 // -\n\topenBrace = 0x7B,             // {\n\topenBracket = 0x5B,           // [\n\topenParen = 0x28,             // (\n\tpercent = 0x25,               // %\n\tplus = 0x2B,                  // +\n\tquestion = 0x3F,              // ?\n\tsemicolon = 0x3B,             // ;\n\tsingleQuote = 0x27,           // '\n\tslash = 0x2F,                 // /\n\ttilde = 0x7E,                 // ~\n\n\tbackspace = 0x08,             // \\b\n\tformFeed = 0x0C,              // \\f\n\tbyteOrderMark = 0xFEFF,\n\ttab = 0x09,                   // \\t\n\tverticalTab = 0x0B,           // \\v\n}\n\ninterface NodeImpl extends Node {\n\ttype: NodeType;\n\tvalue?: any;\n\toffset: number;\n\tlength: number;\n\tcolonOffset?: number;\n\tparent?: NodeImpl;\n\tchildren?: NodeImpl[];\n}\n\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport function getLocation(text: string, position: number): Location {\n\tconst segments: Segment[] = []; // strings or numbers\n\tconst earlyReturnException = new Object();\n\tlet previousNode: NodeImpl | undefined = undefined;\n\tconst previousNodeInst: NodeImpl = {\n\t\tvalue: {},\n\t\toffset: 0,\n\t\tlength: 0,\n\t\ttype: 'object',\n\t\tparent: undefined\n\t};\n\tlet isAtPropertyKey = false;\n\tfunction setPreviousNode(value: string, offset: number, length: number, type: NodeType) {\n\t\tpreviousNodeInst.value = value;\n\t\tpreviousNodeInst.offset = offset;\n\t\tpreviousNodeInst.length = length;\n\t\tpreviousNodeInst.type = type;\n\t\tpreviousNodeInst.colonOffset = undefined;\n\t\tpreviousNode = previousNodeInst;\n\t}\n\ttry {\n\n\t\tvisit(text, {\n\t\t\tonObjectBegin: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tisAtPropertyKey = position > offset;\n\t\t\t\tsegments.push(''); // push a placeholder (will be replaced)\n\t\t\t},\n\t\t\tonObjectProperty: (name: string, offset: number, length: number) => {\n\t\t\t\tif (position < offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tsetPreviousNode(name, offset, length, 'property');\n\t\t\t\tsegments[segments.length - 1] = name;\n\t\t\t\tif (position <= offset + length) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonObjectEnd: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.pop();\n\t\t\t},\n\t\t\tonArrayBegin: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.push(0);\n\t\t\t},\n\t\t\tonArrayEnd: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.pop();\n\t\t\t},\n\t\t\tonLiteralValue: (value: any, offset: number, length: number) => {\n\t\t\t\tif (position < offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tsetPreviousNode(value, offset, length, getNodeType(value));\n\n\t\t\t\tif (position <= offset + length) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonSeparator: (sep: string, offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tif (sep === ':' && previousNode && previousNode.type === 'property') {\n\t\t\t\t\tpreviousNode.colonOffset = offset;\n\t\t\t\t\tisAtPropertyKey = false;\n\t\t\t\t\tpreviousNode = undefined;\n\t\t\t\t} else if (sep === ',') {\n\t\t\t\t\tconst last = segments[segments.length - 1];\n\t\t\t\t\tif (typeof last === 'number') {\n\t\t\t\t\t\tsegments[segments.length - 1] = last + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisAtPropertyKey = true;\n\t\t\t\t\t\tsegments[segments.length - 1] = '';\n\t\t\t\t\t}\n\t\t\t\t\tpreviousNode = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} catch (e) {\n\t\tif (e !== earlyReturnException) {\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\treturn {\n\t\tpath: segments,\n\t\tpreviousNode,\n\t\tisAtPropertyKey,\n\t\tmatches: (pattern: Segment[]) => {\n\t\t\tlet k = 0;\n\t\t\tfor (let i = 0; k < pattern.length && i < segments.length; i++) {\n\t\t\t\tif (pattern[k] === segments[i] || pattern[k] === '*') {\n\t\t\t\t\tk++;\n\t\t\t\t} else if (pattern[k] !== '**') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn k === pattern.length;\n\t\t}\n\t};\n}\n\n\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport function parse(text: string, errors: ParseError[] = [], options: ParseOptions = ParseOptions.DEFAULT): any {\n\tlet currentProperty: string | null = null;\n\tlet currentParent: any = [];\n\tconst previousParents: any[] = [];\n\n\tfunction onValue(value: any) {\n\t\tif (Array.isArray(currentParent)) {\n\t\t\t(<any[]>currentParent).push(value);\n\t\t} else if (currentProperty !== null) {\n\t\t\tcurrentParent[currentProperty] = value;\n\t\t}\n\t}\n\n\tconst visitor: JSONVisitor = {\n\t\tonObjectBegin: () => {\n\t\t\tconst object = {};\n\t\t\tonValue(object);\n\t\t\tpreviousParents.push(currentParent);\n\t\t\tcurrentParent = object;\n\t\t\tcurrentProperty = null;\n\t\t},\n\t\tonObjectProperty: (name: string) => {\n\t\t\tcurrentProperty = name;\n\t\t},\n\t\tonObjectEnd: () => {\n\t\t\tcurrentParent = previousParents.pop();\n\t\t},\n\t\tonArrayBegin: () => {\n\t\t\tconst array: any[] = [];\n\t\t\tonValue(array);\n\t\t\tpreviousParents.push(currentParent);\n\t\t\tcurrentParent = array;\n\t\t\tcurrentProperty = null;\n\t\t},\n\t\tonArrayEnd: () => {\n\t\t\tcurrentParent = previousParents.pop();\n\t\t},\n\t\tonLiteralValue: onValue,\n\t\tonError: (error: ParseErrorCode, offset: number, length: number) => {\n\t\t\terrors.push({ error, offset, length });\n\t\t}\n\t};\n\tvisit(text, visitor, options);\n\treturn currentParent[0];\n}\n\n\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport function parseTree(text: string, errors: ParseError[] = [], options: ParseOptions = ParseOptions.DEFAULT): Node {\n\tlet currentParent: NodeImpl = { type: 'array', offset: -1, length: -1, children: [], parent: undefined }; // artificial root\n\n\tfunction ensurePropertyComplete(endOffset: number) {\n\t\tif (currentParent.type === 'property') {\n\t\t\tcurrentParent.length = endOffset - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t}\n\t}\n\n\tfunction onValue(valueNode: Node): Node {\n\t\tcurrentParent.children!.push(valueNode);\n\t\treturn valueNode;\n\t}\n\n\tconst visitor: JSONVisitor = {\n\t\tonObjectBegin: (offset: number) => {\n\t\t\tcurrentParent = onValue({ type: 'object', offset, length: -1, parent: currentParent, children: [] });\n\t\t},\n\t\tonObjectProperty: (name: string, offset: number, length: number) => {\n\t\t\tcurrentParent = onValue({ type: 'property', offset, length: -1, parent: currentParent, children: [] });\n\t\t\tcurrentParent.children!.push({ type: 'string', value: name, offset, length, parent: currentParent });\n\t\t},\n\t\tonObjectEnd: (offset: number, length: number) => {\n\t\t\tcurrentParent.length = offset + length - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonArrayBegin: (offset: number, length: number) => {\n\t\t\tcurrentParent = onValue({ type: 'array', offset, length: -1, parent: currentParent, children: [] });\n\t\t},\n\t\tonArrayEnd: (offset: number, length: number) => {\n\t\t\tcurrentParent.length = offset + length - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonLiteralValue: (value: any, offset: number, length: number) => {\n\t\t\tonValue({ type: getNodeType(value), offset, length, parent: currentParent, value });\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonSeparator: (sep: string, offset: number, length: number) => {\n\t\t\tif (currentParent.type === 'property') {\n\t\t\t\tif (sep === ':') {\n\t\t\t\t\tcurrentParent.colonOffset = offset;\n\t\t\t\t} else if (sep === ',') {\n\t\t\t\t\tensurePropertyComplete(offset);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonError: (error: ParseErrorCode, offset: number, length: number) => {\n\t\t\terrors.push({ error, offset, length });\n\t\t}\n\t};\n\tvisit(text, visitor, options);\n\n\tconst result = currentParent.children![0];\n\tif (result) {\n\t\tdelete result.parent;\n\t}\n\treturn result;\n}\n\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport function findNodeAtLocation(root: Node, path: JSONPath): Node | undefined {\n\tif (!root) {\n\t\treturn undefined;\n\t}\n\tlet node = root;\n\tfor (let segment of path) {\n\t\tif (typeof segment === 'string') {\n\t\t\tif (node.type !== 'object' || !Array.isArray(node.children)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tlet found = false;\n\t\t\tfor (const propertyNode of node.children) {\n\t\t\t\tif (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment) {\n\t\t\t\t\tnode = propertyNode.children[1];\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!found) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t} else {\n\t\t\tconst index = <number>segment;\n\t\t\tif (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tnode = node.children[index];\n\t\t}\n\t}\n\treturn node;\n}\n\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport function getNodePath(node: Node): JSONPath {\n\tif (!node.parent || !node.parent.children) {\n\t\treturn [];\n\t}\n\tconst path = getNodePath(node.parent);\n\tif (node.parent.type === 'property') {\n\t\tconst key = node.parent.children[0].value;\n\t\tpath.push(key);\n\t} else if (node.parent.type === 'array') {\n\t\tconst index = node.parent.children.indexOf(node);\n\t\tif (index !== -1) {\n\t\t\tpath.push(index);\n\t\t}\n\t}\n\treturn path;\n}\n\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport function getNodeValue(node: Node): any {\n\tswitch (node.type) {\n\t\tcase 'array':\n\t\t\treturn node.children!.map(getNodeValue);\n\t\tcase 'object':\n\t\t\tconst obj = Object.create(null);\n\t\t\tfor (let prop of node.children!) {\n\t\t\t\tconst valueNode = prop.children![1];\n\t\t\t\tif (valueNode) {\n\t\t\t\t\tobj[prop.children![0].value] = getNodeValue(valueNode);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn obj;\n\t\tcase 'null':\n\t\tcase 'string':\n\t\tcase 'number':\n\t\tcase 'boolean':\n\t\t\treturn node.value;\n\t\tdefault:\n\t\t\treturn undefined;\n\t}\n\n}\n\nexport function contains(node: Node, offset: number, includeRightBound = false): boolean {\n\treturn (offset >= node.offset && offset < (node.offset + node.length)) || includeRightBound && (offset === (node.offset + node.length));\n}\n\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport function findNodeAtOffset(node: Node, offset: number, includeRightBound = false): Node | undefined {\n\tif (contains(node, offset, includeRightBound)) {\n\t\tconst children = node.children;\n\t\tif (Array.isArray(children)) {\n\t\t\tfor (let i = 0; i < children.length && children[i].offset <= offset; i++) {\n\t\t\t\tconst item = findNodeAtOffset(children[i], offset, includeRightBound);\n\t\t\t\tif (item) {\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\treturn node;\n\t}\n\treturn undefined;\n}\n\n\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport function visit(text: string, visitor: JSONVisitor, options: ParseOptions = ParseOptions.DEFAULT): any {\n\n\tconst _scanner = createScanner(text, false);\n\n\tfunction toNoArgVisit(visitFunction?: (offset: number, length: number) => void): () => void {\n\t\treturn visitFunction ? () => visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength()) : () => true;\n\t}\n\tfunction toOneArgVisit<T>(visitFunction?: (arg: T, offset: number, length: number) => void): (arg: T) => void {\n\t\treturn visitFunction ? (arg: T) => visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength()) : () => true;\n\t}\n\n\tconst onObjectBegin = toNoArgVisit(visitor.onObjectBegin),\n\t\tonObjectProperty = toOneArgVisit(visitor.onObjectProperty),\n\t\tonObjectEnd = toNoArgVisit(visitor.onObjectEnd),\n\t\tonArrayBegin = toNoArgVisit(visitor.onArrayBegin),\n\t\tonArrayEnd = toNoArgVisit(visitor.onArrayEnd),\n\t\tonLiteralValue = toOneArgVisit(visitor.onLiteralValue),\n\t\tonSeparator = toOneArgVisit(visitor.onSeparator),\n\t\tonComment = toNoArgVisit(visitor.onComment),\n\t\tonError = toOneArgVisit(visitor.onError);\n\n\tconst disallowComments = options && options.disallowComments;\n\tconst allowTrailingComma = options && options.allowTrailingComma;\n\tfunction scanNext(): SyntaxKind {\n\t\twhile (true) {\n\t\t\tconst token = _scanner.scan();\n\t\t\tswitch (_scanner.getTokenError()) {\n\t\t\t\tcase ScanError.InvalidUnicode:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidUnicode);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.InvalidEscapeCharacter:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidEscapeCharacter);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfNumber:\n\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfNumber);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfComment:\n\t\t\t\t\tif (!disallowComments) {\n\t\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfComment);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfString:\n\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfString);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.InvalidCharacter:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidCharacter);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tswitch (token) {\n\t\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\t\t\tif (disallowComments) {\n\t\t\t\t\t\thandleError(ParseErrorCode.InvalidCommentToken);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tonComment();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Unknown:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidSymbol);\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Trivia:\n\t\t\t\tcase SyntaxKind.LineBreakTrivia:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn token;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleError(error: ParseErrorCode, skipUntilAfter: SyntaxKind[] = [], skipUntil: SyntaxKind[] = []): void {\n\t\tonError(error);\n\t\tif (skipUntilAfter.length + skipUntil.length > 0) {\n\t\t\tlet token = _scanner.getToken();\n\t\t\twhile (token !== SyntaxKind.EOF) {\n\t\t\t\tif (skipUntilAfter.indexOf(token) !== -1) {\n\t\t\t\t\tscanNext();\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (skipUntil.indexOf(token) !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttoken = scanNext();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction parseString(isValue: boolean): boolean {\n\t\tconst value = _scanner.getTokenValue();\n\t\tif (isValue) {\n\t\t\tonLiteralValue(value);\n\t\t} else {\n\t\t\tonObjectProperty(value);\n\t\t}\n\t\tscanNext();\n\t\treturn true;\n\t}\n\n\tfunction parseLiteral(): boolean {\n\t\tswitch (_scanner.getToken()) {\n\t\t\tcase SyntaxKind.NumericLiteral:\n\t\t\t\tlet value = 0;\n\t\t\t\ttry {\n\t\t\t\t\tvalue = JSON.parse(_scanner.getTokenValue());\n\t\t\t\t\tif (typeof value !== 'number') {\n\t\t\t\t\t\thandleError(ParseErrorCode.InvalidNumberFormat);\n\t\t\t\t\t\tvalue = 0;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\thandleError(ParseErrorCode.InvalidNumberFormat);\n\t\t\t\t}\n\t\t\t\tonLiteralValue(value);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.NullKeyword:\n\t\t\t\tonLiteralValue(null);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.TrueKeyword:\n\t\t\t\tonLiteralValue(true);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.FalseKeyword:\n\t\t\t\tonLiteralValue(false);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t\tscanNext();\n\t\treturn true;\n\t}\n\n\tfunction parseProperty(): boolean {\n\t\tif (_scanner.getToken() !== SyntaxKind.StringLiteral) {\n\t\t\thandleError(ParseErrorCode.PropertyNameExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\treturn false;\n\t\t}\n\t\tparseString(false);\n\t\tif (_scanner.getToken() === SyntaxKind.ColonToken) {\n\t\t\tonSeparator(':');\n\t\t\tscanNext(); // consume colon\n\n\t\t\tif (!parseValue()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t} else {\n\t\t\thandleError(ParseErrorCode.ColonExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseObject(): boolean {\n\t\tonObjectBegin();\n\t\tscanNext(); // consume open brace\n\n\t\tlet needsComma = false;\n\t\twhile (_scanner.getToken() !== SyntaxKind.CloseBraceToken && _scanner.getToken() !== SyntaxKind.EOF) {\n\t\t\tif (_scanner.getToken() === SyntaxKind.CommaToken) {\n\t\t\t\tif (!needsComma) {\n\t\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\t\t\t}\n\t\t\t\tonSeparator(',');\n\t\t\t\tscanNext(); // consume comma\n\t\t\t\tif (_scanner.getToken() === SyntaxKind.CloseBraceToken && allowTrailingComma) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (needsComma) {\n\t\t\t\thandleError(ParseErrorCode.CommaExpected, [], []);\n\t\t\t}\n\t\t\tif (!parseProperty()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t\tneedsComma = true;\n\t\t}\n\t\tonObjectEnd();\n\t\tif (_scanner.getToken() !== SyntaxKind.CloseBraceToken) {\n\t\t\thandleError(ParseErrorCode.CloseBraceExpected, [SyntaxKind.CloseBraceToken], []);\n\t\t} else {\n\t\t\tscanNext(); // consume close brace\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseArray(): boolean {\n\t\tonArrayBegin();\n\t\tscanNext(); // consume open bracket\n\n\t\tlet needsComma = false;\n\t\twhile (_scanner.getToken() !== SyntaxKind.CloseBracketToken && _scanner.getToken() !== SyntaxKind.EOF) {\n\t\t\tif (_scanner.getToken() === SyntaxKind.CommaToken) {\n\t\t\t\tif (!needsComma) {\n\t\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\t\t\t}\n\t\t\t\tonSeparator(',');\n\t\t\t\tscanNext(); // consume comma\n\t\t\t\tif (_scanner.getToken() === SyntaxKind.CloseBracketToken && allowTrailingComma) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (needsComma) {\n\t\t\t\thandleError(ParseErrorCode.CommaExpected, [], []);\n\t\t\t}\n\t\t\tif (!parseValue()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBracketToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t\tneedsComma = true;\n\t\t}\n\t\tonArrayEnd();\n\t\tif (_scanner.getToken() !== SyntaxKind.CloseBracketToken) {\n\t\t\thandleError(ParseErrorCode.CloseBracketExpected, [SyntaxKind.CloseBracketToken], []);\n\t\t} else {\n\t\t\tscanNext(); // consume close bracket\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseValue(): boolean {\n\t\tswitch (_scanner.getToken()) {\n\t\t\tcase SyntaxKind.OpenBracketToken:\n\t\t\t\treturn parseArray();\n\t\t\tcase SyntaxKind.OpenBraceToken:\n\t\t\t\treturn parseObject();\n\t\t\tcase SyntaxKind.StringLiteral:\n\t\t\t\treturn parseString(true);\n\t\t\tdefault:\n\t\t\t\treturn parseLiteral();\n\t\t}\n\t}\n\n\tscanNext();\n\tif (_scanner.getToken() === SyntaxKind.EOF) {\n\t\tif (options.allowEmptyContent) {\n\t\t\treturn true;\n\t\t}\n\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\treturn false;\n\t}\n\tif (!parseValue()) {\n\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\treturn false;\n\t}\n\tif (_scanner.getToken() !== SyntaxKind.EOF) {\n\t\thandleError(ParseErrorCode.EndOfFileExpected, [], []);\n\t}\n\treturn true;\n}\n\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text: string, replaceCh?: string): string {\n\n\tlet _scanner = createScanner(text),\n\t\tparts: string[] = [],\n\t\tkind: SyntaxKind,\n\t\toffset = 0,\n\t\tpos: number;\n\n\tdo {\n\t\tpos = _scanner.getPosition();\n\t\tkind = _scanner.scan();\n\t\tswitch (kind) {\n\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\tcase SyntaxKind.EOF:\n\t\t\t\tif (offset !== pos) {\n\t\t\t\t\tparts.push(text.substring(offset, pos));\n\t\t\t\t}\n\t\t\t\tif (replaceCh !== undefined) {\n\t\t\t\t\tparts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n\t\t\t\t}\n\t\t\t\toffset = _scanner.getPosition();\n\t\t\t\tbreak;\n\t\t}\n\t} while (kind !== SyntaxKind.EOF);\n\n\treturn parts.join('');\n}\n\nexport function getNodeType(value: any): NodeType {\n\tswitch (typeof value) {\n\t\tcase 'boolean': return 'boolean';\n\t\tcase 'number': return 'number';\n\t\tcase 'string': return 'string';\n\t\tcase 'object': {\n\t\t\tif (!value) {\n\t\t\t\treturn 'null';\n\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\treturn 'array';\n\t\t\t}\n\t\t\treturn 'object';\n\t\t}\n\t\tdefault: return 'null';\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createScanner, ScanError, SyntaxKind } from './json';\n\nexport interface FormattingOptions {\n\t/**\n\t * If indentation is based on spaces (`insertSpaces` = true), then what is the number of spaces that make an indent?\n\t */\n\ttabSize?: number;\n\t/**\n\t * Is indentation based on spaces?\n\t */\n\tinsertSpaces?: boolean;\n\t/**\n\t * The default 'end of line' character. If not set, '\\n' is used as default.\n\t */\n\teol?: string;\n}\n\n/**\n * Represents a text modification\n */\nexport interface Edit {\n\t/**\n\t * The start offset of the modification.\n\t */\n\toffset: number;\n\t/**\n\t * The length of the modification. Must not be negative. Empty length represents an *insert*.\n\t */\n\tlength: number;\n\t/**\n\t * The new content. Empty content represents a *remove*.\n\t */\n\tcontent: string;\n}\n\n/**\n * A text range in the document\n*/\nexport interface Range {\n\t/**\n\t * The start offset of the range.\n\t */\n\toffset: number;\n\t/**\n\t * The length of the range. Must not be negative.\n\t */\n\tlength: number;\n}\n\n\nexport function format(documentText: string, range: Range | undefined, options: FormattingOptions): Edit[] {\n\tlet initialIndentLevel: number;\n\tlet formatText: string;\n\tlet formatTextStart: number;\n\tlet rangeStart: number;\n\tlet rangeEnd: number;\n\tif (range) {\n\t\trangeStart = range.offset;\n\t\trangeEnd = rangeStart + range.length;\n\n\t\tformatTextStart = rangeStart;\n\t\twhile (formatTextStart > 0 && !isEOL(documentText, formatTextStart - 1)) {\n\t\t\tformatTextStart--;\n\t\t}\n\t\tlet endOffset = rangeEnd;\n\t\twhile (endOffset < documentText.length && !isEOL(documentText, endOffset)) {\n\t\t\tendOffset++;\n\t\t}\n\t\tformatText = documentText.substring(formatTextStart, endOffset);\n\t\tinitialIndentLevel = computeIndentLevel(formatText, options);\n\t} else {\n\t\tformatText = documentText;\n\t\tinitialIndentLevel = 0;\n\t\tformatTextStart = 0;\n\t\trangeStart = 0;\n\t\trangeEnd = documentText.length;\n\t}\n\tconst eol = getEOL(options, documentText);\n\n\tlet lineBreak = false;\n\tlet indentLevel = 0;\n\tlet indentValue: string;\n\tif (options.insertSpaces) {\n\t\tindentValue = repeat(' ', options.tabSize || 4);\n\t} else {\n\t\tindentValue = '\\t';\n\t}\n\n\tconst scanner = createScanner(formatText, false);\n\tlet hasError = false;\n\n\tfunction newLineAndIndent(): string {\n\t\treturn eol + repeat(indentValue, initialIndentLevel + indentLevel);\n\t}\n\tfunction scanNext(): SyntaxKind {\n\t\tlet token = scanner.scan();\n\t\tlineBreak = false;\n\t\twhile (token === SyntaxKind.Trivia || token === SyntaxKind.LineBreakTrivia) {\n\t\t\tlineBreak = lineBreak || (token === SyntaxKind.LineBreakTrivia);\n\t\t\ttoken = scanner.scan();\n\t\t}\n\t\thasError = token === SyntaxKind.Unknown || scanner.getTokenError() !== ScanError.None;\n\t\treturn token;\n\t}\n\tconst editOperations: Edit[] = [];\n\tfunction addEdit(text: string, startOffset: number, endOffset: number) {\n\t\tif (!hasError && startOffset < rangeEnd && endOffset > rangeStart && documentText.substring(startOffset, endOffset) !== text) {\n\t\t\teditOperations.push({ offset: startOffset, length: endOffset - startOffset, content: text });\n\t\t}\n\t}\n\n\tlet firstToken = scanNext();\n\n\tif (firstToken !== SyntaxKind.EOF) {\n\t\tconst firstTokenStart = scanner.getTokenOffset() + formatTextStart;\n\t\tconst initialIndent = repeat(indentValue, initialIndentLevel);\n\t\taddEdit(initialIndent, formatTextStart, firstTokenStart);\n\t}\n\n\twhile (firstToken !== SyntaxKind.EOF) {\n\t\tlet firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n\t\tlet secondToken = scanNext();\n\n\t\tlet replaceContent = '';\n\t\twhile (!lineBreak && (secondToken === SyntaxKind.LineCommentTrivia || secondToken === SyntaxKind.BlockCommentTrivia)) {\n\t\t\t// comments on the same line: keep them on the same line, but ignore them otherwise\n\t\t\tconst commentTokenStart = scanner.getTokenOffset() + formatTextStart;\n\t\t\taddEdit(' ', firstTokenEnd, commentTokenStart);\n\t\t\tfirstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n\t\t\treplaceContent = secondToken === SyntaxKind.LineCommentTrivia ? newLineAndIndent() : '';\n\t\t\tsecondToken = scanNext();\n\t\t}\n\n\t\tif (secondToken === SyntaxKind.CloseBraceToken) {\n\t\t\tif (firstToken !== SyntaxKind.OpenBraceToken) {\n\t\t\t\tindentLevel--;\n\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t}\n\t\t} else if (secondToken === SyntaxKind.CloseBracketToken) {\n\t\t\tif (firstToken !== SyntaxKind.OpenBracketToken) {\n\t\t\t\tindentLevel--;\n\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (firstToken) {\n\t\t\t\tcase SyntaxKind.OpenBracketToken:\n\t\t\t\tcase SyntaxKind.OpenBraceToken:\n\t\t\t\t\tindentLevel++;\n\t\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.CommaToken:\n\t\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\t\t\tif (lineBreak) {\n\t\t\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// symbol following comment on the same line: keep on same line, separate with ' '\n\t\t\t\t\t\treplaceContent = ' ';\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.ColonToken:\n\t\t\t\t\treplaceContent = ' ';\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.StringLiteral:\n\t\t\t\t\tif (secondToken === SyntaxKind.ColonToken) {\n\t\t\t\t\t\treplaceContent = '';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t// fall through\n\t\t\t\tcase SyntaxKind.NullKeyword:\n\t\t\t\tcase SyntaxKind.TrueKeyword:\n\t\t\t\tcase SyntaxKind.FalseKeyword:\n\t\t\t\tcase SyntaxKind.NumericLiteral:\n\t\t\t\tcase SyntaxKind.CloseBraceToken:\n\t\t\t\tcase SyntaxKind.CloseBracketToken:\n\t\t\t\t\tif (secondToken === SyntaxKind.LineCommentTrivia || secondToken === SyntaxKind.BlockCommentTrivia) {\n\t\t\t\t\t\treplaceContent = ' ';\n\t\t\t\t\t} else if (secondToken !== SyntaxKind.CommaToken && secondToken !== SyntaxKind.EOF) {\n\t\t\t\t\t\thasError = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Unknown:\n\t\t\t\t\thasError = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (lineBreak && (secondToken === SyntaxKind.LineCommentTrivia || secondToken === SyntaxKind.BlockCommentTrivia)) {\n\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t}\n\n\t\t}\n\t\tconst secondTokenStart = scanner.getTokenOffset() + formatTextStart;\n\t\taddEdit(replaceContent, firstTokenEnd, secondTokenStart);\n\t\tfirstToken = secondToken;\n\t}\n\treturn editOperations;\n}\n\nfunction repeat(s: string, count: number): string {\n\tlet result = '';\n\tfor (let i = 0; i < count; i++) {\n\t\tresult += s;\n\t}\n\treturn result;\n}\n\nfunction computeIndentLevel(content: string, options: FormattingOptions): number {\n\tlet i = 0;\n\tlet nChars = 0;\n\tconst tabSize = options.tabSize || 4;\n\twhile (i < content.length) {\n\t\tconst ch = content.charAt(i);\n\t\tif (ch === ' ') {\n\t\t\tnChars++;\n\t\t} else if (ch === '\\t') {\n\t\t\tnChars += tabSize;\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\treturn Math.floor(nChars / tabSize);\n}\n\nexport function getEOL(options: FormattingOptions, text: string): string {\n\tfor (let i = 0; i < text.length; i++) {\n\t\tconst ch = text.charAt(i);\n\t\tif (ch === '\\r') {\n\t\t\tif (i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n\t\t\t\treturn '\\r\\n';\n\t\t\t}\n\t\t\treturn '\\r';\n\t\t} else if (ch === '\\n') {\n\t\t\treturn '\\n';\n\t\t}\n\t}\n\treturn (options && options.eol) || '\\n';\n}\n\nexport function isEOL(text: string, offset: number) {\n\treturn '\\r\\n'.indexOf(text.charAt(offset)) !== -1;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { findNodeAtLocation, JSONPath, Node, ParseError, parseTree, Segment } from './json';\nimport { Edit, format, FormattingOptions, isEOL } from './jsonFormatter';\n\n\nexport function removeProperty(text: string, path: JSONPath, formattingOptions: FormattingOptions): Edit[] {\n\treturn setProperty(text, path, undefined, formattingOptions);\n}\n\nexport function setProperty(text: string, originalPath: JSONPath, value: any, formattingOptions: FormattingOptions, getInsertionIndex?: (properties: string[]) => number): Edit[] {\n\tconst path = originalPath.slice();\n\tconst errors: ParseError[] = [];\n\tconst root = parseTree(text, errors);\n\tlet parent: Node | undefined = undefined;\n\n\tlet lastSegment: Segment | undefined = undefined;\n\twhile (path.length > 0) {\n\t\tlastSegment = path.pop();\n\t\tparent = findNodeAtLocation(root, path);\n\t\tif (parent === undefined && value !== undefined) {\n\t\t\tif (typeof lastSegment === 'string') {\n\t\t\t\tvalue = { [lastSegment]: value };\n\t\t\t} else {\n\t\t\t\tvalue = [value];\n\t\t\t}\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (!parent) {\n\t\t// empty document\n\t\tif (value === undefined) { // delete\n\t\t\tthrow new Error('Can not delete in empty document');\n\t\t}\n\t\treturn withFormatting(text, { offset: root ? root.offset : 0, length: root ? root.length : 0, content: JSON.stringify(value) }, formattingOptions);\n\t} else if (parent.type === 'object' && typeof lastSegment === 'string' && Array.isArray(parent.children)) {\n\t\tconst existing = findNodeAtLocation(parent, [lastSegment]);\n\t\tif (existing !== undefined) {\n\t\t\tif (value === undefined) { // delete\n\t\t\t\tif (!existing.parent) {\n\t\t\t\t\tthrow new Error('Malformed AST');\n\t\t\t\t}\n\t\t\t\tconst propertyIndex = parent.children.indexOf(existing.parent);\n\t\t\t\tlet removeBegin: number;\n\t\t\t\tlet removeEnd = existing.parent.offset + existing.parent.length;\n\t\t\t\tif (propertyIndex > 0) {\n\t\t\t\t\t// remove the comma of the previous node\n\t\t\t\t\tconst previous = parent.children[propertyIndex - 1];\n\t\t\t\t\tremoveBegin = previous.offset + previous.length;\n\t\t\t\t} else {\n\t\t\t\t\tremoveBegin = parent.offset + 1;\n\t\t\t\t\tif (parent.children.length > 1) {\n\t\t\t\t\t\t// remove the comma of the next node\n\t\t\t\t\t\tconst next = parent.children[1];\n\t\t\t\t\t\tremoveEnd = next.offset;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn withFormatting(text, { offset: removeBegin, length: removeEnd - removeBegin, content: '' }, formattingOptions);\n\t\t\t} else {\n\t\t\t\t// set value of existing property\n\t\t\t\treturn withFormatting(text, { offset: existing.offset, length: existing.length, content: JSON.stringify(value) }, formattingOptions);\n\t\t\t}\n\t\t} else {\n\t\t\tif (value === undefined) { // delete\n\t\t\t\treturn []; // property does not exist, nothing to do\n\t\t\t}\n\t\t\tconst newProperty = `${JSON.stringify(lastSegment)}: ${JSON.stringify(value)}`;\n\t\t\tconst index = getInsertionIndex ? getInsertionIndex(parent.children.map(p => p.children![0].value)) : parent.children.length;\n\t\t\tlet edit: Edit;\n\t\t\tif (index > 0) {\n\t\t\t\tconst previous = parent.children[index - 1];\n\t\t\t\tedit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n\t\t\t} else if (parent.children.length === 0) {\n\t\t\t\tedit = { offset: parent.offset + 1, length: 0, content: newProperty };\n\t\t\t} else {\n\t\t\t\tedit = { offset: parent.offset + 1, length: 0, content: newProperty + ',' };\n\t\t\t}\n\t\t\treturn withFormatting(text, edit, formattingOptions);\n\t\t}\n\t} else if (parent.type === 'array' && typeof lastSegment === 'number' && Array.isArray(parent.children)) {\n\t\tif (value !== undefined) {\n\t\t\t// Insert\n\t\t\tconst newProperty = `${JSON.stringify(value)}`;\n\t\t\tlet edit: Edit;\n\t\t\tif (parent.children.length === 0 || lastSegment === 0) {\n\t\t\t\tedit = { offset: parent.offset + 1, length: 0, content: parent.children.length === 0 ? newProperty : newProperty + ',' };\n\t\t\t} else {\n\t\t\t\tconst index = lastSegment === -1 || lastSegment > parent.children.length ? parent.children.length : lastSegment;\n\t\t\t\tconst previous = parent.children[index - 1];\n\t\t\t\tedit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n\t\t\t}\n\t\t\treturn withFormatting(text, edit, formattingOptions);\n\t\t} else {\n\t\t\t//Removal\n\t\t\tconst removalIndex = lastSegment;\n\t\t\tconst toRemove = parent.children[removalIndex];\n\t\t\tlet edit: Edit;\n\t\t\tif (parent.children.length === 1) {\n\t\t\t\t// only item\n\t\t\t\tedit = { offset: parent.offset + 1, length: parent.length - 2, content: '' };\n\t\t\t} else if (parent.children.length - 1 === removalIndex) {\n\t\t\t\t// last item\n\t\t\t\tconst previous = parent.children[removalIndex - 1];\n\t\t\t\tconst offset = previous.offset + previous.length;\n\t\t\t\tconst parentEndOffset = parent.offset + parent.length;\n\t\t\t\tedit = { offset, length: parentEndOffset - 2 - offset, content: '' };\n\t\t\t} else {\n\t\t\t\tedit = { offset: toRemove.offset, length: parent.children[removalIndex + 1].offset - toRemove.offset, content: '' };\n\t\t\t}\n\t\t\treturn withFormatting(text, edit, formattingOptions);\n\t\t}\n\t} else {\n\t\tthrow new Error(`Can not add ${typeof lastSegment !== 'number' ? 'index' : 'property'} to parent of type ${parent.type}`);\n\t}\n}\n\nexport function withFormatting(text: string, edit: Edit, formattingOptions: FormattingOptions): Edit[] {\n\t// apply the edit\n\tlet newText = applyEdit(text, edit);\n\n\t// format the new text\n\tlet begin = edit.offset;\n\tlet end = edit.offset + edit.content.length;\n\tif (edit.length === 0 || edit.content.length === 0) { // insert or remove\n\t\twhile (begin > 0 && !isEOL(newText, begin - 1)) {\n\t\t\tbegin--;\n\t\t}\n\t\twhile (end < newText.length && !isEOL(newText, end)) {\n\t\t\tend++;\n\t\t}\n\t}\n\n\tconst edits = format(newText, { offset: begin, length: end - begin }, formattingOptions);\n\n\t// apply the formatting edits and track the begin and end offsets of the changes\n\tfor (let i = edits.length - 1; i >= 0; i--) {\n\t\tconst curr = edits[i];\n\t\tnewText = applyEdit(newText, curr);\n\t\tbegin = Math.min(begin, curr.offset);\n\t\tend = Math.max(end, curr.offset + curr.length);\n\t\tend += curr.content.length - curr.length;\n\t}\n\t// create a single edit with all changes\n\tconst editLength = text.length - (newText.length - end) - begin;\n\treturn [{ offset: begin, length: editLength, content: newText.substring(begin, end) }];\n}\n\nexport function applyEdit(text: string, edit: Edit): string {\n\treturn text.substring(0, edit.offset) + edit.content + text.substring(edit.offset + edit.length);\n}\n\nexport function applyEdits(text: string, edits: Edit[]): string {\n\tlet sortedEdits = edits.slice(0).sort((a, b) => {\n\t\tconst diff = a.offset - b.offset;\n\t\tif (diff === 0) {\n\t\t\treturn a.length - b.length;\n\t\t}\n\t\treturn diff;\n\t});\n\tlet lastModifiedOffset = text.length;\n\tfor (let i = sortedEdits.length - 1; i >= 0; i--) {\n\t\tlet e = sortedEdits[i];\n\t\tif (e.offset + e.length <= lastModifiedOffset) {\n\t\t\ttext = applyEdit(text, e);\n\t\t} else {\n\t\t\tthrow new Error('Overlapping edit');\n\t\t}\n\t\tlastModifiedOffset = e.offset;\n\t}\n\treturn text;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { once } from 'vs/base/common/functional';\nimport { Iterable } from 'vs/base/common/iterator';\n\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\nlet disposableTracker: IDisposableTracker | null = null;\n\nexport interface IDisposableTracker {\n\t/**\n\t * Is called on construction of a disposable.\n\t*/\n\ttrackDisposable(disposable: IDisposable): void;\n\n\t/**\n\t * Is called when a disposable is registered as child of another disposable (e.g. {@link DisposableStore}).\n\t * If parent is `null`, the disposable is removed from its former parent.\n\t*/\n\tsetParent(child: IDisposable, parent: IDisposable | null): void;\n\n\t/**\n\t * Is called after a disposable is disposed.\n\t*/\n\tmarkAsDisposed(disposable: IDisposable): void;\n\n\t/**\n\t * Indicates that the given object is a singleton which does not need to be disposed.\n\t*/\n\tmarkAsSingleton(disposable: IDisposable): void;\n}\n\nexport function setDisposableTracker(tracker: IDisposableTracker | null): void {\n\tdisposableTracker = tracker;\n}\n\nif (TRACK_DISPOSABLES) {\n\tconst __is_disposable_tracked__ = '__is_disposable_tracked__';\n\tsetDisposableTracker(new class implements IDisposableTracker {\n\t\ttrackDisposable(x: IDisposable): void {\n\t\t\tconst stack = new Error('Potentially leaked disposable').stack!;\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (!(x as any)[__is_disposable_tracked__]) {\n\t\t\t\t\tconsole.log(stack);\n\t\t\t\t}\n\t\t\t}, 3000);\n\t\t}\n\n\t\tsetParent(child: IDisposable, parent: IDisposable | null): void {\n\t\t\tif (child && child !== Disposable.None) {\n\t\t\t\ttry {\n\t\t\t\t\t(child as any)[__is_disposable_tracked__] = true;\n\t\t\t\t} catch {\n\t\t\t\t\t// noop\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tmarkAsDisposed(disposable: IDisposable): void {\n\t\t\tif (disposable && disposable !== Disposable.None) {\n\t\t\t\ttry {\n\t\t\t\t\t(disposable as any)[__is_disposable_tracked__] = true;\n\t\t\t\t} catch {\n\t\t\t\t\t// noop\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tmarkAsSingleton(disposable: IDisposable): void { }\n\t});\n}\n\nfunction trackDisposable<T extends IDisposable>(x: T): T {\n\tdisposableTracker?.trackDisposable(x);\n\treturn x;\n}\n\nfunction markAsDisposed(disposable: IDisposable): void {\n\tdisposableTracker?.markAsDisposed(disposable);\n}\n\nfunction setParentOfDisposable(child: IDisposable, parent: IDisposable | null): void {\n\tdisposableTracker?.setParent(child, parent);\n}\n\nfunction setParentOfDisposables(children: IDisposable[], parent: IDisposable | null): void {\n\tif (!disposableTracker) {\n\t\treturn;\n\t}\n\tfor (const child of children) {\n\t\tdisposableTracker.setParent(child, parent);\n\t}\n}\n\n/**\n * Indicates that the given object is a singleton which does not need to be disposed.\n*/\nexport function markAsSingleton<T extends IDisposable>(singleton: T): T {\n\tdisposableTracker?.markAsSingleton(singleton);\n\treturn singleton;\n}\n\nexport class MultiDisposeError extends Error {\n\tconstructor(\n\t\tpublic readonly errors: any[]\n\t) {\n\t\tsuper(`Encountered errors while disposing of store. Errors: [${errors.join(', ')}]`);\n\t}\n}\n\nexport interface IDisposable {\n\tdispose(): void;\n}\n\nexport function isDisposable<E extends object>(thing: E): thing is E & IDisposable {\n\treturn typeof (<IDisposable>thing).dispose === 'function' && (<IDisposable>thing).dispose.length === 0;\n}\n\nexport function dispose<T extends IDisposable>(disposable: T): T;\nexport function dispose<T extends IDisposable>(disposable: T | undefined): T | undefined;\nexport function dispose<T extends IDisposable, A extends IterableIterator<T> = IterableIterator<T>>(disposables: IterableIterator<T>): A;\nexport function dispose<T extends IDisposable>(disposables: Array<T>): Array<T>;\nexport function dispose<T extends IDisposable>(disposables: ReadonlyArray<T>): ReadonlyArray<T>;\nexport function dispose<T extends IDisposable>(arg: T | IterableIterator<T> | undefined): any {\n\tif (Iterable.is(arg)) {\n\t\tlet errors: any[] = [];\n\n\t\tfor (const d of arg) {\n\t\t\tif (d) {\n\t\t\t\ttry {\n\t\t\t\t\td.dispose();\n\t\t\t\t} catch (e) {\n\t\t\t\t\terrors.push(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (errors.length === 1) {\n\t\t\tthrow errors[0];\n\t\t} else if (errors.length > 1) {\n\t\t\tthrow new MultiDisposeError(errors);\n\t\t}\n\n\t\treturn Array.isArray(arg) ? [] : arg;\n\t} else if (arg) {\n\t\targ.dispose();\n\t\treturn arg;\n\t}\n}\n\n\nexport function combinedDisposable(...disposables: IDisposable[]): IDisposable {\n\tconst parent = toDisposable(() => dispose(disposables));\n\tsetParentOfDisposables(disposables, parent);\n\treturn parent;\n}\n\nexport function toDisposable(fn: () => void): IDisposable {\n\tconst self = trackDisposable({\n\t\tdispose: once(() => {\n\t\t\tmarkAsDisposed(self);\n\t\t\tfn();\n\t\t})\n\t});\n\treturn self;\n}\n\nexport class DisposableStore implements IDisposable {\n\n\tstatic DISABLE_DISPOSED_WARNING = false;\n\n\tprivate _toDispose = new Set<IDisposable>();\n\tprivate _isDisposed = false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\t/**\n\t * Dispose of all registered disposables and mark this object as disposed.\n\t *\n\t * Any future disposables added to this object will be disposed of on `add`.\n\t */\n\tpublic dispose(): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tmarkAsDisposed(this);\n\t\tthis._isDisposed = true;\n\t\tthis.clear();\n\t}\n\n\t/**\n\t * Dispose of all registered disposables but do not mark this object as disposed.\n\t */\n\tpublic clear(): void {\n\t\ttry {\n\t\t\tdispose(this._toDispose.values());\n\t\t} finally {\n\t\t\tthis._toDispose.clear();\n\t\t}\n\t}\n\n\tpublic add<T extends IDisposable>(o: T): T {\n\t\tif (!o) {\n\t\t\treturn o;\n\t\t}\n\t\tif ((o as unknown as DisposableStore) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\n\t\tsetParentOfDisposable(o, this);\n\t\tif (this._isDisposed) {\n\t\t\tif (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n\t\t\t\tconsole.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._toDispose.add(o);\n\t\t}\n\n\t\treturn o;\n\t}\n}\n\nexport abstract class Disposable implements IDisposable {\n\n\tstatic readonly None = Object.freeze<IDisposable>({ dispose() { } });\n\n\tprivate readonly _store = new DisposableStore();\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t\tsetParentOfDisposable(this._store, this);\n\t}\n\n\tpublic dispose(): void {\n\t\tmarkAsDisposed(this);\n\n\t\tthis._store.dispose();\n\t}\n\n\tprotected _register<T extends IDisposable>(o: T): T {\n\t\tif ((o as unknown as Disposable) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\t\treturn this._store.add(o);\n\t}\n}\n\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n\tprivate _value?: T;\n\tprivate _isDisposed = false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tget value(): T | undefined {\n\t\treturn this._isDisposed ? undefined : this._value;\n\t}\n\n\tset value(value: T | undefined) {\n\t\tif (this._isDisposed || value === this._value) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._value?.dispose();\n\t\tif (value) {\n\t\t\tsetParentOfDisposable(value, this);\n\t\t}\n\t\tthis._value = value;\n\t}\n\n\tclear() {\n\t\tthis.value = undefined;\n\t}\n\n\tdispose(): void {\n\t\tthis._isDisposed = true;\n\t\tmarkAsDisposed(this);\n\t\tthis._value?.dispose();\n\t\tthis._value = undefined;\n\t}\n\n\t/**\n\t * Clears the value, but does not dispose it.\n\t * The old value is returned.\n\t*/\n\tclearAndLeak(): T | undefined {\n\t\tconst oldValue = this._value;\n\t\tthis._value = undefined;\n\t\tif (oldValue) {\n\t\t\tsetParentOfDisposable(oldValue, null);\n\t\t}\n\t\treturn oldValue;\n\t}\n}\n\nexport class RefCountedDisposable {\n\n\tprivate _counter: number = 1;\n\n\tconstructor(\n\t\tprivate readonly _disposable: IDisposable,\n\t) { }\n\n\tacquire() {\n\t\tthis._counter++;\n\t\treturn this;\n\t}\n\n\trelease() {\n\t\tif (--this._counter === 0) {\n\t\t\tthis._disposable.dispose();\n\t\t}\n\t\treturn this;\n\t}\n}\n\nexport interface IReference<T> extends IDisposable {\n\treadonly object: T;\n}\n\nexport abstract class ReferenceCollection<T> {\n\n\tprivate readonly references: Map<string, { readonly object: T; counter: number; }> = new Map();\n\n\tacquire(key: string, ...args: any[]): IReference<T> {\n\t\tlet reference = this.references.get(key);\n\n\t\tif (!reference) {\n\t\t\treference = { counter: 0, object: this.createReferencedObject(key, ...args) };\n\t\t\tthis.references.set(key, reference);\n\t\t}\n\n\t\tconst { object } = reference;\n\t\tconst dispose = once(() => {\n\t\t\tif (--reference!.counter === 0) {\n\t\t\t\tthis.destroyReferencedObject(key, reference!.object);\n\t\t\t\tthis.references.delete(key);\n\t\t\t}\n\t\t});\n\n\t\treference.counter++;\n\n\t\treturn { object, dispose };\n\t}\n\n\tprotected abstract createReferencedObject(key: string, ...args: any[]): T;\n\tprotected abstract destroyReferencedObject(key: string, object: T): void;\n}\n\n/**\n * Unwraps a reference collection of promised values. Makes sure\n * references are disposed whenever promises get rejected.\n */\nexport class AsyncReferenceCollection<T> {\n\n\tconstructor(private referenceCollection: ReferenceCollection<Promise<T>>) { }\n\n\tasync acquire(key: string, ...args: any[]): Promise<IReference<T>> {\n\t\tconst ref = this.referenceCollection.acquire(key, ...args);\n\n\t\ttry {\n\t\t\tconst object = await ref.object;\n\n\t\t\treturn {\n\t\t\t\tobject,\n\t\t\t\tdispose: () => ref.dispose()\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tref.dispose();\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport class ImmortalReference<T> implements IReference<T> {\n\tconstructor(public object: T) { }\n\tdispose(): void { /* noop */ }\n}\n\nexport function disposeOnReturn(fn: (store: DisposableStore) => void): void {\n\tconst store = new DisposableStore();\n\ttry {\n\t\tfn(store);\n\t} finally {\n\t\tstore.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nclass Node<E> {\n\n\tstatic readonly Undefined = new Node<any>(undefined);\n\n\telement: E;\n\tnext: Node<E>;\n\tprev: Node<E>;\n\n\tconstructor(element: E) {\n\t\tthis.element = element;\n\t\tthis.next = Node.Undefined;\n\t\tthis.prev = Node.Undefined;\n\t}\n}\n\nexport class LinkedList<E> {\n\n\tprivate _first: Node<E> = Node.Undefined;\n\tprivate _last: Node<E> = Node.Undefined;\n\tprivate _size: number = 0;\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._first === Node.Undefined;\n\t}\n\n\tclear(): void {\n\t\tlet node = this._first;\n\t\twhile (node !== Node.Undefined) {\n\t\t\tconst next = node.next;\n\t\t\tnode.prev = Node.Undefined;\n\t\t\tnode.next = Node.Undefined;\n\t\t\tnode = next;\n\t\t}\n\n\t\tthis._first = Node.Undefined;\n\t\tthis._last = Node.Undefined;\n\t\tthis._size = 0;\n\t}\n\n\tunshift(element: E): () => void {\n\t\treturn this._insert(element, false);\n\t}\n\n\tpush(element: E): () => void {\n\t\treturn this._insert(element, true);\n\t}\n\n\tprivate _insert(element: E, atTheEnd: boolean): () => void {\n\t\tconst newNode = new Node(element);\n\t\tif (this._first === Node.Undefined) {\n\t\t\tthis._first = newNode;\n\t\t\tthis._last = newNode;\n\n\t\t} else if (atTheEnd) {\n\t\t\t// push\n\t\t\tconst oldLast = this._last!;\n\t\t\tthis._last = newNode;\n\t\t\tnewNode.prev = oldLast;\n\t\t\toldLast.next = newNode;\n\n\t\t} else {\n\t\t\t// unshift\n\t\t\tconst oldFirst = this._first;\n\t\t\tthis._first = newNode;\n\t\t\tnewNode.next = oldFirst;\n\t\t\toldFirst.prev = newNode;\n\t\t}\n\t\tthis._size += 1;\n\n\t\tlet didRemove = false;\n\t\treturn () => {\n\t\t\tif (!didRemove) {\n\t\t\t\tdidRemove = true;\n\t\t\t\tthis._remove(newNode);\n\t\t\t}\n\t\t};\n\t}\n\n\tshift(): E | undefined {\n\t\tif (this._first === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._first.element;\n\t\t\tthis._remove(this._first);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tpop(): E | undefined {\n\t\tif (this._last === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._last.element;\n\t\t\tthis._remove(this._last);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tprivate _remove(node: Node<E>): void {\n\t\tif (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n\t\t\t// middle\n\t\t\tconst anchor = node.prev;\n\t\t\tanchor.next = node.next;\n\t\t\tnode.next.prev = anchor;\n\n\t\t} else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n\t\t\t// only node\n\t\t\tthis._first = Node.Undefined;\n\t\t\tthis._last = Node.Undefined;\n\n\t\t} else if (node.next === Node.Undefined) {\n\t\t\t// last\n\t\t\tthis._last = this._last!.prev!;\n\t\t\tthis._last.next = Node.Undefined;\n\n\t\t} else if (node.prev === Node.Undefined) {\n\t\t\t// first\n\t\t\tthis._first = this._first!.next!;\n\t\t\tthis._first.prev = Node.Undefined;\n\t\t}\n\n\t\t// done\n\t\tthis._size -= 1;\n\t}\n\n\t*[Symbol.iterator](): Iterator<E> {\n\t\tlet node = this._first;\n\t\twhile (node !== Node.Undefined) {\n\t\t\tyield node.element;\n\t\t\tnode = node.next;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\n//@ts-check\n\n(function () {\n\n\t/**\n\t * @returns {{mark(name:string):void, getMarks():{name:string, startTime:number}[]}}\n\t */\n\tfunction _definePolyfillMarks(timeOrigin) {\n\n\t\tconst _data = [];\n\t\tif (typeof timeOrigin === 'number') {\n\t\t\t_data.push('code/timeOrigin', timeOrigin);\n\t\t}\n\n\t\tfunction mark(name) {\n\t\t\t_data.push(name, Date.now());\n\t\t}\n\t\tfunction getMarks() {\n\t\t\tconst result = [];\n\t\t\tfor (let i = 0; i < _data.length; i += 2) {\n\t\t\t\tresult.push({\n\t\t\t\t\tname: _data[i],\n\t\t\t\t\tstartTime: _data[i + 1],\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\treturn { mark, getMarks };\n\t}\n\n\t/**\n\t * @returns {{mark(name:string):void, getMarks():{name:string, startTime:number}[]}}\n\t */\n\tfunction _define() {\n\n\t\t// Identify browser environment when following property is not present\n\t\t// https://nodejs.org/dist/latest-v16.x/docs/api/perf_hooks.html#performancenodetiming\n\t\tif (typeof performance === 'object' && typeof performance.mark === 'function' && !performance.nodeTiming) {\n\t\t\t// in a browser context, reuse performance-util\n\n\t\t\tif (typeof performance.timeOrigin !== 'number' && !performance.timing) {\n\t\t\t\t// safari & webworker: because there is no timeOrigin and no workaround\n\t\t\t\t// we use the `Date.now`-based polyfill.\n\t\t\t\treturn _definePolyfillMarks();\n\n\t\t\t} else {\n\t\t\t\t// use \"native\" performance for mark and getMarks\n\t\t\t\treturn {\n\t\t\t\t\tmark(name) {\n\t\t\t\t\t\tperformance.mark(name);\n\t\t\t\t\t},\n\t\t\t\t\tgetMarks() {\n\t\t\t\t\t\tlet timeOrigin = performance.timeOrigin;\n\t\t\t\t\t\tif (typeof timeOrigin !== 'number') {\n\t\t\t\t\t\t\t// safari: there is no timerOrigin but in renderers there is the timing-property\n\t\t\t\t\t\t\t// see https://bugs.webkit.org/show_bug.cgi?id=174862\n\t\t\t\t\t\t\ttimeOrigin = performance.timing.navigationStart || performance.timing.redirectStart || performance.timing.fetchStart;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst result = [{ name: 'code/timeOrigin', startTime: Math.round(timeOrigin) }];\n\t\t\t\t\t\tfor (const entry of performance.getEntriesByType('mark')) {\n\t\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\t\tname: entry.name,\n\t\t\t\t\t\t\t\tstartTime: Math.round(timeOrigin + entry.startTime)\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t} else if (typeof process === 'object') {\n\t\t\t// node.js: use the normal polyfill but add the timeOrigin\n\t\t\t// from the node perf_hooks API as very first mark\n\t\t\tconst timeOrigin = Math.round((require.nodeRequire || require)('perf_hooks').performance.timeOrigin);\n\t\t\treturn _definePolyfillMarks(timeOrigin);\n\n\t\t} else {\n\t\t\t// unknown environment\n\t\t\tconsole.trace('perf-util loaded in UNKNOWN environment');\n\t\t\treturn _definePolyfillMarks();\n\t\t}\n\t}\n\n\tfunction _factory(sharedObj) {\n\t\tif (!sharedObj.MonacoPerformanceMarks) {\n\t\t\tsharedObj.MonacoPerformanceMarks = _define();\n\t\t}\n\t\treturn sharedObj.MonacoPerformanceMarks;\n\t}\n\n\t// This module can be loaded in an amd and commonjs-context.\n\t// Because we want both instances to use the same perf-data\n\t// we store them globally\n\n\t// eslint-disable-next-line no-var\n\tvar sharedObj;\n\tif (typeof global === 'object') {\n\t\t// nodejs\n\t\tsharedObj = global;\n\t} else if (typeof self === 'object') {\n\t\t// browser\n\t\tsharedObj = self;\n\t} else {\n\t\tsharedObj = {};\n\t}\n\n\tif (typeof define === 'function') {\n\t\t// amd\n\t\tdefine(\"vs/base/common/performance\", [], function () { return _factory(sharedObj); });\n\t} else if (typeof module === 'object' && typeof module.exports === 'object') {\n\t\t// commonjs\n\t\tmodule.exports = _factory(sharedObj);\n\t} else {\n\t\tconsole.trace('perf-util defined in UNKNOWN context (neither requirejs or commonjs)');\n\t\tsharedObj.perf = _factory(sharedObj);\n\t}\n\n})();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nconst LANGUAGE_DEFAULT = 'en';\n\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isLinuxSnap = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isElectron = false;\nlet _isIOS = false;\nlet _locale: string | undefined = undefined;\nlet _language: string = LANGUAGE_DEFAULT;\nlet _translationsConfigFile: string | undefined = undefined;\nlet _userAgent: string | undefined = undefined;\n\ninterface NLSConfig {\n\tlocale: string;\n\tavailableLanguages: { [key: string]: string; };\n\t_translationsConfigFile: string;\n}\n\nexport interface IProcessEnvironment {\n\t[key: string]: string | undefined;\n}\n\n/**\n * This interface is intentionally not identical to node.js\n * process because it also works in sandboxed environments\n * where the process object is implemented differently. We\n * define the properties here that we need for `platform`\n * to work and nothing else.\n */\nexport interface INodeProcess {\n\tplatform: string;\n\tarch: string;\n\tenv: IProcessEnvironment;\n\tnextTick?: (callback: (...args: any[]) => void) => void;\n\tversions?: {\n\t\telectron?: string;\n\t};\n\tsandboxed?: boolean;\n\ttype?: string;\n\tcwd: () => string;\n}\n\ndeclare const process: INodeProcess;\ndeclare const global: unknown;\ndeclare const self: unknown;\n\nexport const globals: any = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});\n\nlet nodeProcess: INodeProcess | undefined = undefined;\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n\t// Native environment (sandboxed)\n\tnodeProcess = globals.vscode.process;\n} else if (typeof process !== 'undefined') {\n\t// Native environment (non-sandboxed)\n\tnodeProcess = process;\n}\n\nconst isElectronProcess = typeof nodeProcess?.versions?.electron === 'string';\nconst isElectronRenderer = isElectronProcess && nodeProcess?.type === 'renderer';\nexport const isElectronSandboxed = isElectronRenderer && nodeProcess?.sandboxed;\n\ninterface INavigator {\n\tuserAgent: string;\n\tlanguage: string;\n\tmaxTouchPoints?: number;\n}\ndeclare const navigator: INavigator;\n\n// Web environment\nif (typeof navigator === 'object' && !isElectronRenderer) {\n\t_userAgent = navigator.userAgent;\n\t_isWindows = _userAgent.indexOf('Windows') >= 0;\n\t_isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n\t_isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n\t_isLinux = _userAgent.indexOf('Linux') >= 0;\n\t_isWeb = true;\n\t_locale = navigator.language;\n\t_language = _locale;\n}\n\n// Native environment\nelse if (typeof nodeProcess === 'object') {\n\t_isWindows = (nodeProcess.platform === 'win32');\n\t_isMacintosh = (nodeProcess.platform === 'darwin');\n\t_isLinux = (nodeProcess.platform === 'linux');\n\t_isLinuxSnap = _isLinux && !!nodeProcess.env['SNAP'] && !!nodeProcess.env['SNAP_REVISION'];\n\t_isElectron = isElectronProcess;\n\t_locale = LANGUAGE_DEFAULT;\n\t_language = LANGUAGE_DEFAULT;\n\tconst rawNlsConfig = nodeProcess.env['VSCODE_NLS_CONFIG'];\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\tconst resolved = nlsConfig.availableLanguages['*'];\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t// VSCode's default language is 'en'\n\t\t\t_language = resolved ? resolved : LANGUAGE_DEFAULT;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t} catch (e) {\n\t\t}\n\t}\n\t_isNative = true;\n}\n\n// Unknown environment\nelse {\n\tconsole.error('Unable to resolve platform.');\n}\n\nexport const enum Platform {\n\tWeb,\n\tMac,\n\tLinux,\n\tWindows\n}\nexport function PlatformToString(platform: Platform) {\n\tswitch (platform) {\n\t\tcase Platform.Web: return 'Web';\n\t\tcase Platform.Mac: return 'Mac';\n\t\tcase Platform.Linux: return 'Linux';\n\t\tcase Platform.Windows: return 'Windows';\n\t}\n}\n\nlet _platform: Platform = Platform.Web;\nif (_isMacintosh) {\n\t_platform = Platform.Mac;\n} else if (_isWindows) {\n\t_platform = Platform.Windows;\n} else if (_isLinux) {\n\t_platform = Platform.Linux;\n}\n\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isLinuxSnap = _isLinuxSnap;\nexport const isNative = _isNative;\nexport const isElectron = _isElectron;\nexport const isWeb = _isWeb;\nexport const isIOS = _isIOS;\nexport const platform = _platform;\nexport const userAgent = _userAgent;\n\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nexport const language = _language;\n\nexport namespace Language {\n\n\texport function value(): string {\n\t\treturn language;\n\t}\n\n\texport function isDefaultVariant(): boolean {\n\t\tif (language.length === 2) {\n\t\t\treturn language === 'en';\n\t\t} else if (language.length >= 3) {\n\t\t\treturn language[0] === 'e' && language[1] === 'n' && language[2] === '-';\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\texport function isDefault(): boolean {\n\t\treturn language === 'en';\n\t}\n}\n\n/**\n * The OS locale or the locale specified by --locale. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese). The UI is not necessarily shown in the provided locale.\n */\nexport const locale = _locale;\n\n/**\n * The translations that are available through language packs.\n */\nexport const translationsConfigFile = _translationsConfigFile;\n\ninterface ISetImmediate {\n\t(callback: (...args: unknown[]) => void): void;\n}\n\n/**\n * See https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#:~:text=than%204%2C%20then-,set%20timeout%20to%204,-.\n *\n * Works similarly to `setTimeout(0)` but doesn't suffer from the 4ms artificial delay\n * that browsers set when the nesting level is > 5.\n */\nexport const setTimeout0 = (() => {\n\tif (typeof globals.postMessage === 'function' && !globals.importScripts) {\n\t\tinterface IQueueElement {\n\t\t\tid: number;\n\t\t\tcallback: () => void;\n\t\t}\n\t\tlet pending: IQueueElement[] = [];\n\t\tglobals.addEventListener('message', (e: MessageEvent) => {\n\t\t\tif (e.data && e.data.vscodeScheduleAsyncWork) {\n\t\t\t\tfor (let i = 0, len = pending.length; i < len; i++) {\n\t\t\t\t\tconst candidate = pending[i];\n\t\t\t\t\tif (candidate.id === e.data.vscodeScheduleAsyncWork) {\n\t\t\t\t\t\tpending.splice(i, 1);\n\t\t\t\t\t\tcandidate.callback();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tlet lastId = 0;\n\t\treturn (callback: () => void) => {\n\t\t\tconst myId = ++lastId;\n\t\t\tpending.push({\n\t\t\t\tid: myId,\n\t\t\t\tcallback: callback\n\t\t\t});\n\t\t\tglobals.postMessage({ vscodeScheduleAsyncWork: myId }, '*');\n\t\t};\n\t}\n\treturn (callback: () => void) => setTimeout(callback);\n})();\n\nexport const setImmediate: ISetImmediate = (function defineSetImmediate() {\n\tif (globals.setImmediate) {\n\t\treturn globals.setImmediate.bind(globals);\n\t}\n\tif (typeof globals.postMessage === 'function' && !globals.importScripts) {\n\t\treturn setTimeout0;\n\t}\n\tif (typeof nodeProcess?.nextTick === 'function') {\n\t\treturn nodeProcess.nextTick.bind(nodeProcess);\n\t}\n\tconst _promise = Promise.resolve();\n\treturn (callback: (...args: unknown[]) => void) => _promise.then(callback);\n})();\n\nexport const enum OperatingSystem {\n\tWindows = 1,\n\tMacintosh = 2,\n\tLinux = 3\n}\nexport const OS = (_isMacintosh || _isIOS ? OperatingSystem.Macintosh : (_isWindows ? OperatingSystem.Windows : OperatingSystem.Linux));\n\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nexport function isLittleEndian(): boolean {\n\tif (!_isLittleEndianComputed) {\n\t\t_isLittleEndianComputed = true;\n\t\tconst test = new Uint8Array(2);\n\t\ttest[0] = 1;\n\t\ttest[1] = 2;\n\t\tconst view = new Uint16Array(test.buffer);\n\t\t_isLittleEndian = (view[0] === (2 << 8) + 1);\n\t}\n\treturn _isLittleEndian;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { globals, INodeProcess, isMacintosh, isWindows } from 'vs/base/common/platform';\n\nlet safeProcess: Omit<INodeProcess, 'arch'> & { arch: string | undefined; };\ndeclare const process: INodeProcess;\n\n// Native sandbox environment\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n\tconst sandboxProcess: INodeProcess = globals.vscode.process;\n\tsafeProcess = {\n\t\tget platform() { return sandboxProcess.platform; },\n\t\tget arch() { return sandboxProcess.arch; },\n\t\tget env() { return sandboxProcess.env; },\n\t\tcwd() { return sandboxProcess.cwd(); }\n\t};\n}\n\n// Native node.js environment\nelse if (typeof process !== 'undefined') {\n\tsafeProcess = {\n\t\tget platform() { return process.platform; },\n\t\tget arch() { return process.arch; },\n\t\tget env() { return process.env; },\n\t\tcwd() { return process.env['VSCODE_CWD'] || process.cwd(); }\n\t};\n}\n\n// Web environment\nelse {\n\tsafeProcess = {\n\n\t\t// Supported\n\t\tget platform() { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n\t\tget arch() { return undefined; /* arch is undefined in web */ },\n\n\t\t// Unsupported\n\t\tget env() { return {}; },\n\t\tcwd() { return '/'; }\n\t};\n}\n\n/**\n * Provides safe access to the `cwd` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `/`.\n */\nexport const cwd = safeProcess.cwd;\n\n/**\n * Provides safe access to the `env` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `{}`.\n */\nexport const env = safeProcess.env;\n\n/**\n * Provides safe access to the `platform` property in node.js, sandboxed or web\n * environments.\n */\nexport const platform = safeProcess.platform;\n\n/**\n * Provides safe access to the `arch` method in node.js, sandboxed or web\n * environments.\n * Note: `arch` is `undefined` in web\n */\nexport const arch = safeProcess.arch;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/blob/v14.16.0/lib/path.js\n\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as process from 'vs/base/common/process';\n\nconst CHAR_UPPERCASE_A = 65;/* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\n\nclass ErrorInvalidArgType extends Error {\n\tcode: 'ERR_INVALID_ARG_TYPE';\n\tconstructor(name: string, expected: string, actual: unknown) {\n\t\t// determiner: 'must be' or 'must not be'\n\t\tlet determiner;\n\t\tif (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n\t\t\tdeterminer = 'must not be';\n\t\t\texpected = expected.replace(/^not /, '');\n\t\t} else {\n\t\t\tdeterminer = 'must be';\n\t\t}\n\n\t\tconst type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n\t\tlet msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n\n\t\tmsg += `. Received type ${typeof actual}`;\n\t\tsuper(msg);\n\n\t\tthis.code = 'ERR_INVALID_ARG_TYPE';\n\t}\n}\n\nfunction validateString(value: string, name: string) {\n\tif (typeof value !== 'string') {\n\t\tthrow new ErrorInvalidArgType(name, 'string', value);\n\t}\n}\n\nfunction isPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH;\n}\n\nfunction isWindowsDeviceRoot(code: number) {\n\treturn (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\n\t\t(code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path: string, allowAboveRoot: boolean, separator: string, isPathSeparator: (code?: number) => boolean) {\n\tlet res = '';\n\tlet lastSegmentLength = 0;\n\tlet lastSlash = -1;\n\tlet dots = 0;\n\tlet code = 0;\n\tfor (let i = 0; i <= path.length; ++i) {\n\t\tif (i < path.length) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t}\n\t\telse if (isPathSeparator(code)) {\n\t\t\tbreak;\n\t\t}\n\t\telse {\n\t\t\tcode = CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\tif (isPathSeparator(code)) {\n\t\t\tif (lastSlash === i - 1 || dots === 1) {\n\t\t\t\t// NOOP\n\t\t\t} else if (dots === 2) {\n\t\t\t\tif (res.length < 2 || lastSegmentLength !== 2 ||\n\t\t\t\t\tres.charCodeAt(res.length - 1) !== CHAR_DOT ||\n\t\t\t\t\tres.charCodeAt(res.length - 2) !== CHAR_DOT) {\n\t\t\t\t\tif (res.length > 2) {\n\t\t\t\t\t\tconst lastSlashIndex = res.lastIndexOf(separator);\n\t\t\t\t\t\tif (lastSlashIndex === -1) {\n\t\t\t\t\t\t\tres = '';\n\t\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tres = res.slice(0, lastSlashIndex);\n\t\t\t\t\t\t\tlastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (res.length !== 0) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (allowAboveRoot) {\n\t\t\t\t\tres += res.length > 0 ? `${separator}..` : '..';\n\t\t\t\t\tlastSegmentLength = 2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (res.length > 0) {\n\t\t\t\t\tres += `${separator}${path.slice(lastSlash + 1, i)}`;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tres = path.slice(lastSlash + 1, i);\n\t\t\t\t}\n\t\t\t\tlastSegmentLength = i - lastSlash - 1;\n\t\t\t}\n\t\t\tlastSlash = i;\n\t\t\tdots = 0;\n\t\t} else if (code === CHAR_DOT && dots !== -1) {\n\t\t\t++dots;\n\t\t} else {\n\t\t\tdots = -1;\n\t\t}\n\t}\n\treturn res;\n}\n\nfunction _format(sep: string, pathObject: ParsedPath) {\n\tif (pathObject === null || typeof pathObject !== 'object') {\n\t\tthrow new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n\t}\n\tconst dir = pathObject.dir || pathObject.root;\n\tconst base = pathObject.base ||\n\t\t`${pathObject.name || ''}${pathObject.ext || ''}`;\n\tif (!dir) {\n\t\treturn base;\n\t}\n\treturn dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\n\nexport interface ParsedPath {\n\troot: string;\n\tdir: string;\n\tbase: string;\n\text: string;\n\tname: string;\n}\n\nexport interface IPath {\n\tnormalize(path: string): string;\n\tisAbsolute(path: string): boolean;\n\tjoin(...paths: string[]): string;\n\tresolve(...pathSegments: string[]): string;\n\trelative(from: string, to: string): string;\n\tdirname(path: string): string;\n\tbasename(path: string, ext?: string): string;\n\textname(path: string): string;\n\tformat(pathObject: ParsedPath): string;\n\tparse(path: string): ParsedPath;\n\ttoNamespacedPath(path: string): string;\n\tsep: '\\\\' | '/';\n\tdelimiter: string;\n\twin32: IPath | null;\n\tposix: IPath | null;\n}\n\nexport const win32: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedDevice = '';\n\t\tlet resolvedTail = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1; i--) {\n\t\t\tlet path;\n\t\t\tif (i >= 0) {\n\t\t\t\tpath = pathSegments[i];\n\t\t\t\tvalidateString(path, 'path');\n\n\t\t\t\t// Skip empty entries\n\t\t\t\tif (path.length === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t} else if (resolvedDevice.length === 0) {\n\t\t\t\tpath = process.cwd();\n\t\t\t} else {\n\t\t\t\t// Windows has the concept of drive-specific current working\n\t\t\t\t// directories. If we've resolved a drive letter but not yet an\n\t\t\t\t// absolute path, get cwd for that drive, or the process cwd if\n\t\t\t\t// the drive cwd is not available. We're sure the device is not\n\t\t\t\t// a UNC path at this points, because UNC paths are always absolute.\n\t\t\t\tpath = process.env[`=${resolvedDevice}`] || process.cwd();\n\n\t\t\t\t// Verify that a cwd was found and that it actually points\n\t\t\t\t// to our drive. If not, default to the drive's root.\n\t\t\t\tif (path === undefined ||\n\t\t\t\t\t(path.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n\t\t\t\t\t\tpath.charCodeAt(2) === CHAR_BACKWARD_SLASH)) {\n\t\t\t\t\tpath = `${resolvedDevice}\\\\`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst len = path.length;\n\t\t\tlet rootEnd = 0;\n\t\t\tlet device = '';\n\t\t\tlet isAbsolute = false;\n\t\t\tconst code = path.charCodeAt(0);\n\n\t\t\t// Try to match a root\n\t\t\tif (len === 1) {\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// `path` contains just a path separator\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t}\n\t\t\t} else if (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\t// If we started with a separator, we know we at least have an\n\t\t\t\t// absolute path of some kind (UNC or otherwise)\n\t\t\t\tisAbsolute = true;\n\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len || j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root\n\t\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code) &&\n\t\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t// Possible device root\n\t\t\t\tdevice = path.slice(0, 2);\n\t\t\t\trootEnd = 2;\n\t\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t\t// indicator\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t\trootEnd = 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (device.length > 0) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tif (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n\t\t\t\t\t\t// This path points to another device so it is not applicable\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresolvedDevice = device;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (resolvedAbsolute) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n\t\t\t\tresolvedAbsolute = isAbsolute;\n\t\t\t\tif (isAbsolute && resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path,\n\t\t// but handle relative paths to be safe (might happen when process.cwd()\n\t\t// fails)\n\n\t\t// Normalize the tail path\n\t\tresolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\',\n\t\t\tisPathSeparator);\n\n\t\treturn resolvedAbsolute ?\n\t\t\t`${resolvedDevice}\\\\${resolvedTail}` :\n\t\t\t`${resolvedDevice}${resolvedTail}` || '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = 0;\n\t\tlet device;\n\t\tlet isAbsolute = false;\n\t\tconst code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a single char, exit early to avoid\n\t\t\t// unnecessary work\n\t\t\treturn isPosixPathSeparator(code) ? '\\\\' : path;\n\t\t}\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\t// If we started with a separator, we know we at least have an absolute\n\t\t\t// path of some kind (UNC or otherwise)\n\t\t\tisAbsolute = true;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\t// Return the normalized version of the UNC root since there\n\t\t\t\t\t\t\t// is nothing left to process\n\t\t\t\t\t\t\treturn `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trootEnd = 1;\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tdevice = path.slice(0, 2);\n\t\t\trootEnd = 2;\n\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t// indicator\n\t\t\t\tisAbsolute = true;\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\n\t\tlet tail = rootEnd < len ?\n\t\t\tnormalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n\t\t\t'';\n\t\tif (tail.length === 0 && !isAbsolute) {\n\t\t\ttail = '.';\n\t\t}\n\t\tif (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n\t\t\ttail += '\\\\';\n\t\t}\n\t\tif (device === undefined) {\n\t\t\treturn isAbsolute ? `\\\\${tail}` : tail;\n\t\t}\n\t\treturn isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst code = path.charCodeAt(0);\n\t\treturn isPathSeparator(code) ||\n\t\t\t// Possible device root\n\t\t\t(len > 2 &&\n\t\t\t\tisWindowsDeviceRoot(code) &&\n\t\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\t\tisPathSeparator(path.charCodeAt(2)));\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tlet joined;\n\t\tlet firstPart: string | undefined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = firstPart = arg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjoined += `\\\\${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\n\t\t// Make sure that the joined path doesn't start with two slashes, because\n\t\t// normalize() will mistake it for a UNC path then.\n\t\t//\n\t\t// This step is skipped when it is very clear that the user actually\n\t\t// intended to point at a UNC path. This is assumed when the first\n\t\t// non-empty string arguments starts with exactly two slashes followed by\n\t\t// at least one more non-slash character.\n\t\t//\n\t\t// Note that for normalize() to treat a path as a UNC path it needs to\n\t\t// have at least 2 components, so we don't filter for that here.\n\t\t// This means that the user can use join to construct UNC paths from\n\t\t// a server name and a share name; for example:\n\t\t//   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n\t\tlet needsReplace = true;\n\t\tlet slashCount = 0;\n\t\tif (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n\t\t\t++slashCount;\n\t\t\tconst firstLen = firstPart.length;\n\t\t\tif (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n\t\t\t\t++slashCount;\n\t\t\t\tif (firstLen > 2) {\n\t\t\t\t\tif (isPathSeparator(firstPart.charCodeAt(2))) {\n\t\t\t\t\t\t++slashCount;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// We matched a UNC path in the first part\n\t\t\t\t\t\tneedsReplace = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (needsReplace) {\n\t\t\t// Find any more consecutive slashes we need to replace\n\t\t\twhile (slashCount < joined.length &&\n\t\t\t\tisPathSeparator(joined.charCodeAt(slashCount))) {\n\t\t\t\tslashCount++;\n\t\t\t}\n\n\t\t\t// Replace the slashes if needed\n\t\t\tif (slashCount >= 2) {\n\t\t\t\tjoined = `\\\\${joined.slice(slashCount)}`;\n\t\t\t}\n\t\t}\n\n\t\treturn win32.normalize(joined);\n\t},\n\n\n\t// It will solve the relative path from `from` to `to`, for instance:\n\t//  from = 'C:\\\\orandea\\\\test\\\\aaa'\n\t//  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n\t// The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromOrig = win32.resolve(from);\n\t\tconst toOrig = win32.resolve(to);\n\n\t\tif (fromOrig === toOrig) {\n\t\t\treturn '';\n\t\t}\n\n\t\tfrom = fromOrig.toLowerCase();\n\t\tto = toOrig.toLowerCase();\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim any leading backslashes\n\t\tlet fromStart = 0;\n\t\twhile (fromStart < from.length &&\n\t\t\tfrom.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet fromEnd = from.length;\n\t\twhile (fromEnd - 1 > fromStart &&\n\t\t\tfrom.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromEnd--;\n\t\t}\n\t\tconst fromLen = fromEnd - fromStart;\n\n\t\t// Trim any leading backslashes\n\t\tlet toStart = 0;\n\t\twhile (toStart < to.length &&\n\t\t\tto.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet toEnd = to.length;\n\t\twhile (toEnd - 1 > toStart &&\n\t\t\tto.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoEnd--;\n\t\t}\n\t\tconst toLen = toEnd - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = fromLen < toLen ? fromLen : toLen;\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_BACKWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\n\t\t// We found a mismatch before the first common path separator was seen, so\n\t\t// return the original `to`.\n\t\tif (i !== length) {\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\treturn toOrig;\n\t\t\t}\n\t\t} else {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n\t\t\t\t\treturn toOrig.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 2) {\n\t\t\t\t\t// We get here if `from` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\'; to='C:\\\\foo'\n\t\t\t\t\treturn toOrig.slice(toStart + i);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 2) {\n\t\t\t\t\t// We get here if `to` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n\t\t\t\t\tlastCommonSep = 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\tlastCommonSep = 0;\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to` and\n\t\t// `from`\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '\\\\..';\n\t\t\t}\n\t\t}\n\n\t\ttoStart += lastCommonSep;\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts\n\t\tif (out.length > 0) {\n\t\t\treturn `${out}${toOrig.slice(toStart, toEnd)}`;\n\t\t}\n\n\t\tif (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\t++toStart;\n\t\t}\n\n\t\treturn toOrig.slice(toStart, toEnd);\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Note: this will *probably* throw somewhere.\n\t\tif (typeof path !== 'string') {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (path.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst resolvedPath = win32.resolve(path);\n\n\t\tif (resolvedPath.length <= 2) {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Possible UNC root\n\t\t\tif (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tconst code = resolvedPath.charCodeAt(2);\n\t\t\t\tif (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n\t\t\t\t\t// Matched non-long UNC root, convert the path to a long UNC path\n\t\t\t\t\treturn `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n\t\t\tresolvedPath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tresolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Matched device root, convert the path to a long UNC path\n\t\t\treturn `\\\\\\\\?\\\\${resolvedPath}`;\n\t\t}\n\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = -1;\n\t\tlet offset = 0;\n\t\tconst code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t// unnecessary work or a dot.\n\t\t\treturn isPathSeparator(code) ? path : '.';\n\t\t}\n\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = offset = 1;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\treturn path;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t// Offset by 1 to include the separator after the UNC root to\n\t\t\t\t\t\t\t// treat it as a \"normal root\" on top of a (UNC) root\n\t\t\t\t\t\t\trootEnd = offset = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Possible device root\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\trootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n\t\t\toffset = rootEnd;\n\t\t}\n\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = len - 1; i >= offset; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\tif (rootEnd === -1) {\n\t\t\t\treturn '.';\n\t\t\t}\n\n\t\t\tend = rootEnd;\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\t\tif (path.length >= 2 &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0)) &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\tstart = 2;\n\t\t}\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\n\t\tif (path.length >= 2 &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0))) {\n\t\t\tstart = startPart = 2;\n\t\t}\n\n\t\tfor (let i = path.length - 1; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '\\\\'),\n\n\tparse(path) {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tconst len = path.length;\n\t\tlet rootEnd = 0;\n\t\tlet code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\tret.base = ret.name = path;\n\t\t\treturn ret;\n\t\t}\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = 1;\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\trootEnd = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tif (len <= 2) {\n\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\trootEnd = 2;\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tif (len === 3) {\n\t\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t\t// unnecessary work\n\t\t\t\t\tret.root = ret.dir = path;\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\t\tif (rootEnd > 0) {\n\t\t\tret.root = path.slice(0, rootEnd);\n\t\t}\n\n\t\tlet startDot = -1;\n\t\tlet startPart = rootEnd;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= rootEnd; --i) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(startPart, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(startPart, startDot);\n\t\t\t\tret.base = path.slice(startPart, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\t// If the directory is the root, use the entire root as the `dir` including\n\t\t// the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n\t\t// trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n\t\tif (startPart > 0 && startPart !== rootEnd) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else {\n\t\t\tret.dir = ret.root;\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '\\\\',\n\tdelimiter: ';',\n\twin32: null,\n\tposix: null\n};\n\nexport const posix: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedPath = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n\t\t\tconst path = i >= 0 ? pathSegments[i] : process.cwd();\n\n\t\t\tvalidateString(path, 'path');\n\n\t\t\t// Skip empty entries\n\t\t\tif (path.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tresolvedPath = `${path}/${resolvedPath}`;\n\t\t\tresolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path, but\n\t\t// handle relative paths to be safe (might happen when process.cwd() fails)\n\n\t\t// Normalize the path\n\t\tresolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/',\n\t\t\tisPosixPathSeparator);\n\n\t\tif (resolvedAbsolute) {\n\t\t\treturn `/${resolvedPath}`;\n\t\t}\n\t\treturn resolvedPath.length > 0 ? resolvedPath : '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tconst trailingSeparator =\n\t\t\tpath.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n\n\t\t// Normalize the path\n\t\tpath = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n\n\t\tif (path.length === 0) {\n\t\t\tif (isAbsolute) {\n\t\t\t\treturn '/';\n\t\t\t}\n\t\t\treturn trailingSeparator ? './' : '.';\n\t\t}\n\t\tif (trailingSeparator) {\n\t\t\tpath += '/';\n\t\t}\n\n\t\treturn isAbsolute ? `/${path}` : path;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\treturn path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet joined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = arg;\n\t\t\t\t} else {\n\t\t\t\t\tjoined += `/${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\t\treturn posix.normalize(joined);\n\t},\n\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim leading forward slashes.\n\t\tfrom = posix.resolve(from);\n\t\tto = posix.resolve(to);\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromStart = 1;\n\t\tconst fromEnd = from.length;\n\t\tconst fromLen = fromEnd - fromStart;\n\t\tconst toStart = 1;\n\t\tconst toLen = to.length - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = (fromLen < toLen ? fromLen : toLen);\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_FORWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\t\tif (i === length) {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/foo/bar/baz'\n\t\t\t\t\treturn to.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\t// We get here if `from` is the root\n\t\t\t\t\t// For example: from='/'; to='/foo'\n\t\t\t\t\treturn to.slice(toStart + i);\n\t\t\t\t}\n\t\t\t} else if (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='/foo/bar/baz'; to='/foo/bar'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t// We get here if `to` is the root.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/'\n\t\t\t\t\tlastCommonSep = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to`\n\t\t// and `from`.\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '/..';\n\t\t\t}\n\t\t}\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts.\n\t\treturn `${out}${to.slice(toStart + lastCommonSep)}`;\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Non-op on posix systems\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tconst hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = path.length - 1; i >= 1; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn hasRoot ? '/' : '.';\n\t\t}\n\t\tif (hasRoot && end === 1) {\n\t\t\treturn '//';\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\t\tfor (let i = path.length - 1; i >= 0; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '/'),\n\n\tparse(path: string): ParsedPath {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet start;\n\t\tif (isAbsolute) {\n\t\t\tret.root = '/';\n\t\t\tstart = 1;\n\t\t} else {\n\t\t\tstart = 0;\n\t\t}\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tconst start = startPart === 0 && isAbsolute ? 1 : startPart;\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(start, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(start, startDot);\n\t\t\t\tret.base = path.slice(start, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\tif (startPart > 0) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else if (isAbsolute) {\n\t\t\tret.dir = '/';\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '/',\n\tdelimiter: ':',\n\twin32: null,\n\tposix: null\n};\n\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\n\nexport const normalize = (process.platform === 'win32' ? win32.normalize : posix.normalize);\nexport const isAbsolute = (process.platform === 'win32' ? win32.isAbsolute : posix.isAbsolute);\nexport const join = (process.platform === 'win32' ? win32.join : posix.join);\nexport const resolve = (process.platform === 'win32' ? win32.resolve : posix.resolve);\nexport const relative = (process.platform === 'win32' ? win32.relative : posix.relative);\nexport const dirname = (process.platform === 'win32' ? win32.dirname : posix.dirname);\nexport const basename = (process.platform === 'win32' ? win32.basename : posix.basename);\nexport const extname = (process.platform === 'win32' ? win32.extname : posix.extname);\nexport const format = (process.platform === 'win32' ? win32.format : posix.format);\nexport const parse = (process.platform === 'win32' ? win32.parse : posix.parse);\nexport const toNamespacedPath = (process.platform === 'win32' ? win32.toNamespacedPath : posix.toNamespacedPath);\nexport const sep = (process.platform === 'win32' ? win32.sep : posix.sep);\nexport const delimiter = (process.platform === 'win32' ? win32.delimiter : posix.delimiter);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IProcessEnvironment } from 'vs/base/common/platform';\n\n/**\n * Options to be passed to the external program or shell.\n */\nexport interface CommandOptions {\n\t/**\n\t * The current working directory of the executed program or shell.\n\t * If omitted VSCode's current workspace root is used.\n\t */\n\tcwd?: string;\n\n\t/**\n\t * The environment of the executed program or shell. If omitted\n\t * the parent process' environment is used.\n\t */\n\tenv?: { [key: string]: string; };\n}\n\nexport interface Executable {\n\t/**\n\t * The command to be executed. Can be an external program or a shell\n\t * command.\n\t */\n\tcommand: string;\n\n\t/**\n\t * Specifies whether the command is a shell command and therefore must\n\t * be executed in a shell interpreter (e.g. cmd.exe, bash, ...).\n\t */\n\tisShellCommand: boolean;\n\n\t/**\n\t * The arguments passed to the command.\n\t */\n\targs: string[];\n\n\t/**\n\t * The command options used when the command is executed. Can be omitted.\n\t */\n\toptions?: CommandOptions;\n}\n\nexport interface ForkOptions extends CommandOptions {\n\texecArgv?: string[];\n}\n\nexport const enum Source {\n\tstdout,\n\tstderr\n}\n\n/**\n * The data send via a success callback\n */\nexport interface SuccessData {\n\terror?: Error;\n\tcmdCode?: number;\n\tterminated?: boolean;\n}\n\n/**\n * The data send via a error callback\n */\nexport interface ErrorData {\n\terror?: Error;\n\tterminated?: boolean;\n\tstdout?: string;\n\tstderr?: string;\n}\n\nexport interface TerminateResponse {\n\tsuccess: boolean;\n\tcode?: TerminateResponseCode;\n\terror?: any;\n}\n\nexport const enum TerminateResponseCode {\n\tSuccess = 0,\n\tUnknown = 1,\n\tAccessDenied = 2,\n\tProcessNotFound = 3,\n}\n\nexport interface ProcessItem {\n\tname: string;\n\tcmd: string;\n\tpid: number;\n\tppid: number;\n\tload: number;\n\tmem: number;\n\n\tchildren?: ProcessItem[];\n}\n\n/**\n * Sanitizes a VS Code process environment by removing all Electron/VS Code-related values.\n */\nexport function sanitizeProcessEnvironment(env: IProcessEnvironment, ...preserve: string[]): void {\n\tconst set = preserve.reduce((set, key) => {\n\t\tset[key] = true;\n\t\treturn set;\n\t}, {} as Record<string, boolean>);\n\tconst keysToRemove = [\n\t\t/^ELECTRON_.+$/,\n\t\t/^VSCODE_.+$/,\n\t\t/^SNAP(|_.*)$/,\n\t\t/^GDK_PIXBUF_.+$/,\n\t];\n\tconst envKeys = Object.keys(env);\n\tenvKeys\n\t\t.filter(key => !set[key])\n\t\t.forEach(envKey => {\n\t\t\tfor (let i = 0; i < keysToRemove.length; i++) {\n\t\t\t\tif (envKey.search(keysToRemove[i]) !== -1) {\n\t\t\t\t\tdelete env[envKey];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n}\n","/**\n * Semver UMD module\n * Copyright (c) Isaac Z. Schlueter and Contributors\n * https://github.com/npm/node-semver\n */\n\n/**\n * DO NOT EDIT THIS FILE\n */\n\n!function(e,r){if(\"object\"==typeof exports&&\"object\"==typeof module)module.exports=r();else if(\"function\"==typeof define&&define.amd)define(\"vs/base/common/semver/semver\", [],r);else{var t=r();for(var n in t)(\"object\"==typeof exports?exports:e)[n]=t[n]}}(\"undefined\"!=typeof self?self:this,(function(){return function(e){var r={};function t(n){if(r[n])return r[n].exports;var o=r[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,t),o.l=!0,o.exports}return t.m=e,t.c=r,t.d=function(e,r,n){t.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:n})},t.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},t.t=function(e,r){if(1&r&&(e=t(e)),8&r)return e;if(4&r&&\"object\"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(t.r(n),Object.defineProperty(n,\"default\",{enumerable:!0,value:e}),2&r&&\"string\"!=typeof e)for(var o in e)t.d(n,o,function(r){return e[r]}.bind(null,o));return n},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,\"a\",r),r},t.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},t.p=\"\",t(t.s=0)}([function(e,r,t){(function(t){var n;r=e.exports=H,n=\"object\"==typeof t&&t.env&&t.env.NODE_DEBUG&&/\\bsemver\\b/i.test(t.env.NODE_DEBUG)?function(){var e=Array.prototype.slice.call(arguments,0);e.unshift(\"SEMVER\"),console.log.apply(console,e)}:function(){},r.SEMVER_SPEC_VERSION=\"2.0.0\";var o=256,i=Number.MAX_SAFE_INTEGER||9007199254740991,s=r.re=[],a=r.src=[],u=0,c=u++;a[c]=\"0|[1-9]\\\\d*\";var p=u++;a[p]=\"[0-9]+\";var f=u++;a[f]=\"\\\\d*[a-zA-Z-][a-zA-Z0-9-]*\";var l=u++;a[l]=\"(\"+a[c]+\")\\\\.(\"+a[c]+\")\\\\.(\"+a[c]+\")\";var h=u++;a[h]=\"(\"+a[p]+\")\\\\.(\"+a[p]+\")\\\\.(\"+a[p]+\")\";var v=u++;a[v]=\"(?:\"+a[c]+\"|\"+a[f]+\")\";var m=u++;a[m]=\"(?:\"+a[p]+\"|\"+a[f]+\")\";var w=u++;a[w]=\"(?:-(\"+a[v]+\"(?:\\\\.\"+a[v]+\")*))\";var g=u++;a[g]=\"(?:-?(\"+a[m]+\"(?:\\\\.\"+a[m]+\")*))\";var y=u++;a[y]=\"[0-9A-Za-z-]+\";var d=u++;a[d]=\"(?:\\\\+(\"+a[y]+\"(?:\\\\.\"+a[y]+\")*))\";var b=u++,j=\"v?\"+a[l]+a[w]+\"?\"+a[d]+\"?\";a[b]=\"^\"+j+\"$\";var E=\"[v=\\\\s]*\"+a[h]+a[g]+\"?\"+a[d]+\"?\",T=u++;a[T]=\"^\"+E+\"$\";var x=u++;a[x]=\"((?:<|>)?=?)\";var $=u++;a[$]=a[p]+\"|x|X|\\\\*\";var k=u++;a[k]=a[c]+\"|x|X|\\\\*\";var S=u++;a[S]=\"[v=\\\\s]*(\"+a[k]+\")(?:\\\\.(\"+a[k]+\")(?:\\\\.(\"+a[k]+\")(?:\"+a[w]+\")?\"+a[d]+\"?)?)?\";var R=u++;a[R]=\"[v=\\\\s]*(\"+a[$]+\")(?:\\\\.(\"+a[$]+\")(?:\\\\.(\"+a[$]+\")(?:\"+a[g]+\")?\"+a[d]+\"?)?)?\";var I=u++;a[I]=\"^\"+a[x]+\"\\\\s*\"+a[S]+\"$\";var _=u++;a[_]=\"^\"+a[x]+\"\\\\s*\"+a[R]+\"$\";var O=u++;a[O]=\"(?:^|[^\\\\d])(\\\\d{1,16})(?:\\\\.(\\\\d{1,16}))?(?:\\\\.(\\\\d{1,16}))?(?:$|[^\\\\d])\";var A=u++;a[A]=\"(?:~>?)\";var M=u++;a[M]=\"(\\\\s*)\"+a[A]+\"\\\\s+\",s[M]=new RegExp(a[M],\"g\");var V=u++;a[V]=\"^\"+a[A]+a[S]+\"$\";var P=u++;a[P]=\"^\"+a[A]+a[R]+\"$\";var C=u++;a[C]=\"(?:\\\\^)\";var L=u++;a[L]=\"(\\\\s*)\"+a[C]+\"\\\\s+\",s[L]=new RegExp(a[L],\"g\");var N=u++;a[N]=\"^\"+a[C]+a[S]+\"$\";var q=u++;a[q]=\"^\"+a[C]+a[R]+\"$\";var D=u++;a[D]=\"^\"+a[x]+\"\\\\s*(\"+E+\")$|^$\";var X=u++;a[X]=\"^\"+a[x]+\"\\\\s*(\"+j+\")$|^$\";var z=u++;a[z]=\"(\\\\s*)\"+a[x]+\"\\\\s*(\"+E+\"|\"+a[S]+\")\",s[z]=new RegExp(a[z],\"g\");var G=u++;a[G]=\"^\\\\s*(\"+a[S]+\")\\\\s+-\\\\s+(\"+a[S]+\")\\\\s*$\";var Z=u++;a[Z]=\"^\\\\s*(\"+a[R]+\")\\\\s+-\\\\s+(\"+a[R]+\")\\\\s*$\";var B=u++;a[B]=\"(<|>)?=?\\\\s*\\\\*\";for(var U=0;U<35;U++)n(U,a[U]),s[U]||(s[U]=new RegExp(a[U]));function F(e,r){if(e instanceof H)return e;if(\"string\"!=typeof e)return null;if(e.length>o)return null;if(!(r?s[T]:s[b]).test(e))return null;try{return new H(e,r)}catch(e){return null}}function H(e,r){if(e instanceof H){if(e.loose===r)return e;e=e.version}else if(\"string\"!=typeof e)throw new TypeError(\"Invalid Version: \"+e);if(e.length>o)throw new TypeError(\"version is longer than \"+o+\" characters\");if(!(this instanceof H))return new H(e,r);n(\"SemVer\",e,r),this.loose=r;var t=e.trim().match(r?s[T]:s[b]);if(!t)throw new TypeError(\"Invalid Version: \"+e);if(this.raw=e,this.major=+t[1],this.minor=+t[2],this.patch=+t[3],this.major>i||this.major<0)throw new TypeError(\"Invalid major version\");if(this.minor>i||this.minor<0)throw new TypeError(\"Invalid minor version\");if(this.patch>i||this.patch<0)throw new TypeError(\"Invalid patch version\");t[4]?this.prerelease=t[4].split(\".\").map((function(e){if(/^[0-9]+$/.test(e)){var r=+e;if(r>=0&&r<i)return r}return e})):this.prerelease=[],this.build=t[5]?t[5].split(\".\"):[],this.format()}r.parse=F,r.valid=function(e,r){var t=F(e,r);return t?t.version:null},r.clean=function(e,r){var t=F(e.trim().replace(/^[=v]+/,\"\"),r);return t?t.version:null},r.SemVer=H,H.prototype.format=function(){return this.version=this.major+\".\"+this.minor+\".\"+this.patch,this.prerelease.length&&(this.version+=\"-\"+this.prerelease.join(\".\")),this.version},H.prototype.toString=function(){return this.version},H.prototype.compare=function(e){return n(\"SemVer.compare\",this.version,this.loose,e),e instanceof H||(e=new H(e,this.loose)),this.compareMain(e)||this.comparePre(e)},H.prototype.compareMain=function(e){return e instanceof H||(e=new H(e,this.loose)),K(this.major,e.major)||K(this.minor,e.minor)||K(this.patch,e.patch)},H.prototype.comparePre=function(e){if(e instanceof H||(e=new H(e,this.loose)),this.prerelease.length&&!e.prerelease.length)return-1;if(!this.prerelease.length&&e.prerelease.length)return 1;if(!this.prerelease.length&&!e.prerelease.length)return 0;var r=0;do{var t=this.prerelease[r],o=e.prerelease[r];if(n(\"prerelease compare\",r,t,o),void 0===t&&void 0===o)return 0;if(void 0===o)return 1;if(void 0===t)return-1;if(t!==o)return K(t,o)}while(++r)},H.prototype.inc=function(e,r){switch(e){case\"premajor\":this.prerelease.length=0,this.patch=0,this.minor=0,this.major++,this.inc(\"pre\",r);break;case\"preminor\":this.prerelease.length=0,this.patch=0,this.minor++,this.inc(\"pre\",r);break;case\"prepatch\":this.prerelease.length=0,this.inc(\"patch\",r),this.inc(\"pre\",r);break;case\"prerelease\":0===this.prerelease.length&&this.inc(\"patch\",r),this.inc(\"pre\",r);break;case\"major\":0===this.minor&&0===this.patch&&0!==this.prerelease.length||this.major++,this.minor=0,this.patch=0,this.prerelease=[];break;case\"minor\":0===this.patch&&0!==this.prerelease.length||this.minor++,this.patch=0,this.prerelease=[];break;case\"patch\":0===this.prerelease.length&&this.patch++,this.prerelease=[];break;case\"pre\":if(0===this.prerelease.length)this.prerelease=[0];else{for(var t=this.prerelease.length;--t>=0;)\"number\"==typeof this.prerelease[t]&&(this.prerelease[t]++,t=-2);-1===t&&this.prerelease.push(0)}r&&(this.prerelease[0]===r?isNaN(this.prerelease[1])&&(this.prerelease=[r,0]):this.prerelease=[r,0]);break;default:throw new Error(\"invalid increment argument: \"+e)}return this.format(),this.raw=this.version,this},r.inc=function(e,r,t,n){\"string\"==typeof t&&(n=t,t=void 0);try{return new H(e,t).inc(r,n).version}catch(e){return null}},r.diff=function(e,r){if(ee(e,r))return null;var t=F(e),n=F(r);if(t.prerelease.length||n.prerelease.length){for(var o in t)if((\"major\"===o||\"minor\"===o||\"patch\"===o)&&t[o]!==n[o])return\"pre\"+o;return\"prerelease\"}for(var o in t)if((\"major\"===o||\"minor\"===o||\"patch\"===o)&&t[o]!==n[o])return o},r.compareIdentifiers=K;var J=/^[0-9]+$/;function K(e,r){var t=J.test(e),n=J.test(r);return t&&n&&(e=+e,r=+r),t&&!n?-1:n&&!t?1:e<r?-1:e>r?1:0}function Q(e,r,t){return new H(e,t).compare(new H(r,t))}function W(e,r,t){return Q(e,r,t)>0}function Y(e,r,t){return Q(e,r,t)<0}function ee(e,r,t){return 0===Q(e,r,t)}function re(e,r,t){return 0!==Q(e,r,t)}function te(e,r,t){return Q(e,r,t)>=0}function ne(e,r,t){return Q(e,r,t)<=0}function oe(e,r,t,n){var o;switch(r){case\"===\":\"object\"==typeof e&&(e=e.version),\"object\"==typeof t&&(t=t.version),o=e===t;break;case\"!==\":\"object\"==typeof e&&(e=e.version),\"object\"==typeof t&&(t=t.version),o=e!==t;break;case\"\":case\"=\":case\"==\":o=ee(e,t,n);break;case\"!=\":o=re(e,t,n);break;case\">\":o=W(e,t,n);break;case\">=\":o=te(e,t,n);break;case\"<\":o=Y(e,t,n);break;case\"<=\":o=ne(e,t,n);break;default:throw new TypeError(\"Invalid operator: \"+r)}return o}function ie(e,r){if(e instanceof ie){if(e.loose===r)return e;e=e.value}if(!(this instanceof ie))return new ie(e,r);n(\"comparator\",e,r),this.loose=r,this.parse(e),this.semver===se?this.value=\"\":this.value=this.operator+this.semver.version,n(\"comp\",this)}r.rcompareIdentifiers=function(e,r){return K(r,e)},r.major=function(e,r){return new H(e,r).major},r.minor=function(e,r){return new H(e,r).minor},r.patch=function(e,r){return new H(e,r).patch},r.compare=Q,r.compareLoose=function(e,r){return Q(e,r,!0)},r.rcompare=function(e,r,t){return Q(r,e,t)},r.sort=function(e,t){return e.sort((function(e,n){return r.compare(e,n,t)}))},r.rsort=function(e,t){return e.sort((function(e,n){return r.rcompare(e,n,t)}))},r.gt=W,r.lt=Y,r.eq=ee,r.neq=re,r.gte=te,r.lte=ne,r.cmp=oe,r.Comparator=ie;var se={};function ae(e,r){if(e instanceof ae)return e.loose===r?e:new ae(e.raw,r);if(e instanceof ie)return new ae(e.value,r);if(!(this instanceof ae))return new ae(e,r);if(this.loose=r,this.raw=e,this.set=e.split(/\\s*\\|\\|\\s*/).map((function(e){return this.parseRange(e.trim())}),this).filter((function(e){return e.length})),!this.set.length)throw new TypeError(\"Invalid SemVer Range: \"+e);this.format()}function ue(e){return!e||\"x\"===e.toLowerCase()||\"*\"===e}function ce(e,r,t,n,o,i,s,a,u,c,p,f,l){return((r=ue(t)?\"\":ue(n)?\">=\"+t+\".0.0\":ue(o)?\">=\"+t+\".\"+n+\".0\":\">=\"+r)+\" \"+(a=ue(u)?\"\":ue(c)?\"<\"+(+u+1)+\".0.0\":ue(p)?\"<\"+u+\".\"+(+c+1)+\".0\":f?\"<=\"+u+\".\"+c+\".\"+p+\"-\"+f:\"<=\"+a)).trim()}function pe(e,r){for(var t=0;t<e.length;t++)if(!e[t].test(r))return!1;if(r.prerelease.length){for(t=0;t<e.length;t++)if(n(e[t].semver),e[t].semver!==se&&e[t].semver.prerelease.length>0){var o=e[t].semver;if(o.major===r.major&&o.minor===r.minor&&o.patch===r.patch)return!0}return!1}return!0}function fe(e,r,t){try{r=new ae(r,t)}catch(e){return!1}return r.test(e)}function le(e,r,t,n){var o,i,s,a,u;switch(e=new H(e,n),r=new ae(r,n),t){case\">\":o=W,i=ne,s=Y,a=\">\",u=\">=\";break;case\"<\":o=Y,i=te,s=W,a=\"<\",u=\"<=\";break;default:throw new TypeError('Must provide a hilo val of \"<\" or \">\"')}if(fe(e,r,n))return!1;for(var c=0;c<r.set.length;++c){var p=r.set[c],f=null,l=null;if(p.forEach((function(e){e.semver===se&&(e=new ie(\">=0.0.0\")),f=f||e,l=l||e,o(e.semver,f.semver,n)?f=e:s(e.semver,l.semver,n)&&(l=e)})),f.operator===a||f.operator===u)return!1;if((!l.operator||l.operator===a)&&i(e,l.semver))return!1;if(l.operator===u&&s(e,l.semver))return!1}return!0}ie.prototype.parse=function(e){var r=this.loose?s[D]:s[X],t=e.match(r);if(!t)throw new TypeError(\"Invalid comparator: \"+e);this.operator=t[1],\"=\"===this.operator&&(this.operator=\"\"),t[2]?this.semver=new H(t[2],this.loose):this.semver=se},ie.prototype.toString=function(){return this.value},ie.prototype.test=function(e){return n(\"Comparator.test\",e,this.loose),this.semver===se||(\"string\"==typeof e&&(e=new H(e,this.loose)),oe(e,this.operator,this.semver,this.loose))},ie.prototype.intersects=function(e,r){if(!(e instanceof ie))throw new TypeError(\"a Comparator is required\");var t;if(\"\"===this.operator)return t=new ae(e.value,r),fe(this.value,t,r);if(\"\"===e.operator)return t=new ae(this.value,r),fe(e.semver,t,r);var n=!(\">=\"!==this.operator&&\">\"!==this.operator||\">=\"!==e.operator&&\">\"!==e.operator),o=!(\"<=\"!==this.operator&&\"<\"!==this.operator||\"<=\"!==e.operator&&\"<\"!==e.operator),i=this.semver.version===e.semver.version,s=!(\">=\"!==this.operator&&\"<=\"!==this.operator||\">=\"!==e.operator&&\"<=\"!==e.operator),a=oe(this.semver,\"<\",e.semver,r)&&(\">=\"===this.operator||\">\"===this.operator)&&(\"<=\"===e.operator||\"<\"===e.operator),u=oe(this.semver,\">\",e.semver,r)&&(\"<=\"===this.operator||\"<\"===this.operator)&&(\">=\"===e.operator||\">\"===e.operator);return n||o||i&&s||a||u},r.Range=ae,ae.prototype.format=function(){return this.range=this.set.map((function(e){return e.join(\" \").trim()})).join(\"||\").trim(),this.range},ae.prototype.toString=function(){return this.range},ae.prototype.parseRange=function(e){var r=this.loose;e=e.trim(),n(\"range\",e,r);var t=r?s[Z]:s[G];e=e.replace(t,ce),n(\"hyphen replace\",e),e=e.replace(s[z],\"$1$2$3\"),n(\"comparator trim\",e,s[z]),e=(e=(e=e.replace(s[M],\"$1~\")).replace(s[L],\"$1^\")).split(/\\s+/).join(\" \");var o=r?s[D]:s[X],i=e.split(\" \").map((function(e){return function(e,r){return n(\"comp\",e),e=function(e,r){return e.trim().split(/\\s+/).map((function(e){return function(e,r){n(\"caret\",e,r);var t=r?s[q]:s[N];return e.replace(t,(function(r,t,o,i,s){var a;return n(\"caret\",e,r,t,o,i,s),ue(t)?a=\"\":ue(o)?a=\">=\"+t+\".0.0 <\"+(+t+1)+\".0.0\":ue(i)?a=\"0\"===t?\">=\"+t+\".\"+o+\".0 <\"+t+\".\"+(+o+1)+\".0\":\">=\"+t+\".\"+o+\".0 <\"+(+t+1)+\".0.0\":s?(n(\"replaceCaret pr\",s),\"-\"!==s.charAt(0)&&(s=\"-\"+s),a=\"0\"===t?\"0\"===o?\">=\"+t+\".\"+o+\".\"+i+s+\" <\"+t+\".\"+o+\".\"+(+i+1):\">=\"+t+\".\"+o+\".\"+i+s+\" <\"+t+\".\"+(+o+1)+\".0\":\">=\"+t+\".\"+o+\".\"+i+s+\" <\"+(+t+1)+\".0.0\"):(n(\"no pr\"),a=\"0\"===t?\"0\"===o?\">=\"+t+\".\"+o+\".\"+i+\" <\"+t+\".\"+o+\".\"+(+i+1):\">=\"+t+\".\"+o+\".\"+i+\" <\"+t+\".\"+(+o+1)+\".0\":\">=\"+t+\".\"+o+\".\"+i+\" <\"+(+t+1)+\".0.0\"),n(\"caret return\",a),a}))}(e,r)})).join(\" \")}(e,r),n(\"caret\",e),e=function(e,r){return e.trim().split(/\\s+/).map((function(e){return function(e,r){var t=r?s[P]:s[V];return e.replace(t,(function(r,t,o,i,s){var a;return n(\"tilde\",e,r,t,o,i,s),ue(t)?a=\"\":ue(o)?a=\">=\"+t+\".0.0 <\"+(+t+1)+\".0.0\":ue(i)?a=\">=\"+t+\".\"+o+\".0 <\"+t+\".\"+(+o+1)+\".0\":s?(n(\"replaceTilde pr\",s),\"-\"!==s.charAt(0)&&(s=\"-\"+s),a=\">=\"+t+\".\"+o+\".\"+i+s+\" <\"+t+\".\"+(+o+1)+\".0\"):a=\">=\"+t+\".\"+o+\".\"+i+\" <\"+t+\".\"+(+o+1)+\".0\",n(\"tilde return\",a),a}))}(e,r)})).join(\" \")}(e,r),n(\"tildes\",e),e=function(e,r){return n(\"replaceXRanges\",e,r),e.split(/\\s+/).map((function(e){return function(e,r){e=e.trim();var t=r?s[_]:s[I];return e.replace(t,(function(r,t,o,i,s,a){n(\"xRange\",e,r,t,o,i,s,a);var u=ue(o),c=u||ue(i),p=c||ue(s);return\"=\"===t&&p&&(t=\"\"),u?r=\">\"===t||\"<\"===t?\"<0.0.0\":\"*\":t&&p?(c&&(i=0),p&&(s=0),\">\"===t?(t=\">=\",c?(o=+o+1,i=0,s=0):p&&(i=+i+1,s=0)):\"<=\"===t&&(t=\"<\",c?o=+o+1:i=+i+1),r=t+o+\".\"+i+\".\"+s):c?r=\">=\"+o+\".0.0 <\"+(+o+1)+\".0.0\":p&&(r=\">=\"+o+\".\"+i+\".0 <\"+o+\".\"+(+i+1)+\".0\"),n(\"xRange return\",r),r}))}(e,r)})).join(\" \")}(e,r),n(\"xrange\",e),e=function(e,r){return n(\"replaceStars\",e,r),e.trim().replace(s[B],\"\")}(e,r),n(\"stars\",e),e}(e,r)})).join(\" \").split(/\\s+/);return this.loose&&(i=i.filter((function(e){return!!e.match(o)}))),i=i.map((function(e){return new ie(e,r)}))},ae.prototype.intersects=function(e,r){if(!(e instanceof ae))throw new TypeError(\"a Range is required\");return this.set.some((function(t){return t.every((function(t){return e.set.some((function(e){return e.every((function(e){return t.intersects(e,r)}))}))}))}))},r.toComparators=function(e,r){return new ae(e,r).set.map((function(e){return e.map((function(e){return e.value})).join(\" \").trim().split(\" \")}))},ae.prototype.test=function(e){if(!e)return!1;\"string\"==typeof e&&(e=new H(e,this.loose));for(var r=0;r<this.set.length;r++)if(pe(this.set[r],e))return!0;return!1},r.satisfies=fe,r.maxSatisfying=function(e,r,t){var n=null,o=null;try{var i=new ae(r,t)}catch(e){return null}return e.forEach((function(e){i.test(e)&&(n&&-1!==o.compare(e)||(o=new H(n=e,t)))})),n},r.minSatisfying=function(e,r,t){var n=null,o=null;try{var i=new ae(r,t)}catch(e){return null}return e.forEach((function(e){i.test(e)&&(n&&1!==o.compare(e)||(o=new H(n=e,t)))})),n},r.validRange=function(e,r){try{return new ae(e,r).range||\"*\"}catch(e){return null}},r.ltr=function(e,r,t){return le(e,r,\"<\",t)},r.gtr=function(e,r,t){return le(e,r,\">\",t)},r.outside=le,r.prerelease=function(e,r){var t=F(e,r);return t&&t.prerelease.length?t.prerelease:null},r.intersects=function(e,r,t){return e=new ae(e,t),r=new ae(r,t),e.intersects(r)},r.coerce=function(e){if(e instanceof H)return e;if(\"string\"!=typeof e)return null;var r=e.match(s[O]);return null==r?null:F((r[1]||\"0\")+\".\"+(r[2]||\"0\")+\".\"+(r[3]||\"0\"))}}).call(this,t(1))},function(e,r){var t,n,o=e.exports={};function i(){throw new Error(\"setTimeout has not been defined\")}function s(){throw new Error(\"clearTimeout has not been defined\")}function a(e){if(t===setTimeout)return setTimeout(e,0);if((t===i||!t)&&setTimeout)return t=setTimeout,setTimeout(e,0);try{return t(e,0)}catch(r){try{return t.call(null,e,0)}catch(r){return t.call(this,e,0)}}}!function(){try{t=\"function\"==typeof setTimeout?setTimeout:i}catch(e){t=i}try{n=\"function\"==typeof clearTimeout?clearTimeout:s}catch(e){n=s}}();var u,c=[],p=!1,f=-1;function l(){p&&u&&(p=!1,u.length?c=u.concat(c):f=-1,c.length&&h())}function h(){if(!p){var e=a(l);p=!0;for(var r=c.length;r;){for(u=c,c=[];++f<r;)u&&u[f].run();f=-1,r=c.length}u=null,p=!1,function(e){if(n===clearTimeout)return clearTimeout(e);if((n===s||!n)&&clearTimeout)return n=clearTimeout,clearTimeout(e);try{n(e)}catch(r){try{return n.call(null,e)}catch(r){return n.call(this,e)}}}(e)}}function v(e,r){this.fun=e,this.array=r}function m(){}o.nextTick=function(e){var r=new Array(arguments.length-1);if(arguments.length>1)for(var t=1;t<arguments.length;t++)r[t-1]=arguments[t];c.push(new v(e,r)),1!==c.length||p||a(h)},v.prototype.run=function(){this.fun.apply(null,this.array)},o.title=\"browser\",o.browser=!0,o.env={},o.argv=[],o.version=\"\",o.versions={},o.on=m,o.addListener=m,o.once=m,o.off=m,o.removeListener=m,o.removeAllListeners=m,o.emit=m,o.prependListener=m,o.prependOnceListener=m,o.listeners=function(e){return[]},o.binding=function(e){throw new Error(\"process.binding is not supported\")},o.cwd=function(){return\"/\"},o.chdir=function(e){throw new Error(\"process.chdir is not supported\")},o.umask=function(){return 0}}])}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nclass Node<K, V> {\n\treadonly forward: Node<K, V>[];\n\tconstructor(readonly level: number, readonly key: K, public value: V) {\n\t\tthis.forward = [];\n\t}\n}\n\nconst NIL: undefined = undefined;\n\ninterface Comparator<K> {\n\t(a: K, b: K): number;\n}\n\nexport class SkipList<K, V> implements Map<K, V> {\n\n\treadonly [Symbol.toStringTag] = 'SkipList';\n\n\tprivate _maxLevel: number;\n\tprivate _level: number = 0;\n\tprivate _header: Node<K, V>;\n\tprivate _size: number = 0;\n\n\t/**\n\t *\n\t * @param capacity Capacity at which the list performs best\n\t */\n\tconstructor(\n\t\treadonly comparator: (a: K, b: K) => number,\n\t\tcapacity: number = 2 ** 16\n\t) {\n\t\tthis._maxLevel = Math.max(1, Math.log2(capacity) | 0);\n\t\tthis._header = <any>new Node(this._maxLevel, NIL, NIL);\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tclear(): void {\n\t\tthis._header = <any>new Node(this._maxLevel, NIL, NIL);\n\t}\n\n\thas(key: K): boolean {\n\t\treturn Boolean(SkipList._search(this, key, this.comparator));\n\t}\n\n\tget(key: K): V | undefined {\n\t\treturn SkipList._search(this, key, this.comparator)?.value;\n\t}\n\n\tset(key: K, value: V): this {\n\t\tif (SkipList._insert(this, key, value, this.comparator)) {\n\t\t\tthis._size += 1;\n\t\t}\n\t\treturn this;\n\t}\n\n\tdelete(key: K): boolean {\n\t\tconst didDelete = SkipList._delete(this, key, this.comparator);\n\t\tif (didDelete) {\n\t\t\tthis._size -= 1;\n\t\t}\n\t\treturn didDelete;\n\t}\n\n\t// --- iteration\n\n\tforEach(callbackfn: (value: V, key: K, map: Map<K, V>) => void, thisArg?: any): void {\n\t\tlet node = this._header.forward[0];\n\t\twhile (node) {\n\t\t\tcallbackfn.call(thisArg, node.value, node.key, this);\n\t\t\tnode = node.forward[0];\n\t\t}\n\t}\n\n\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\treturn this.entries();\n\t}\n\n\t*entries(): IterableIterator<[K, V]> {\n\t\tlet node = this._header.forward[0];\n\t\twhile (node) {\n\t\t\tyield [node.key, node.value];\n\t\t\tnode = node.forward[0];\n\t\t}\n\t}\n\n\t*keys(): IterableIterator<K> {\n\t\tlet node = this._header.forward[0];\n\t\twhile (node) {\n\t\t\tyield node.key;\n\t\t\tnode = node.forward[0];\n\t\t}\n\t}\n\n\t*values(): IterableIterator<V> {\n\t\tlet node = this._header.forward[0];\n\t\twhile (node) {\n\t\t\tyield node.value;\n\t\t\tnode = node.forward[0];\n\t\t}\n\t}\n\n\ttoString(): string {\n\t\t// debug string...\n\t\tlet result = '[SkipList]:';\n\t\tlet node = this._header.forward[0];\n\t\twhile (node) {\n\t\t\tresult += `node(${node.key}, ${node.value}, lvl:${node.level})`;\n\t\t\tnode = node.forward[0];\n\t\t}\n\t\treturn result;\n\t}\n\n\t// from https://www.epaperpress.com/sortsearch/download/skiplist.pdf\n\n\tprivate static _search<K, V>(list: SkipList<K, V>, searchKey: K, comparator: Comparator<K>) {\n\t\tlet x = list._header;\n\t\tfor (let i = list._level - 1; i >= 0; i--) {\n\t\t\twhile (x.forward[i] && comparator(x.forward[i].key, searchKey) < 0) {\n\t\t\t\tx = x.forward[i];\n\t\t\t}\n\t\t}\n\t\tx = x.forward[0];\n\t\tif (x && comparator(x.key, searchKey) === 0) {\n\t\t\treturn x;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate static _insert<K, V>(list: SkipList<K, V>, searchKey: K, value: V, comparator: Comparator<K>) {\n\t\tlet update: Node<K, V>[] = [];\n\t\tlet x = list._header;\n\t\tfor (let i = list._level - 1; i >= 0; i--) {\n\t\t\twhile (x.forward[i] && comparator(x.forward[i].key, searchKey) < 0) {\n\t\t\t\tx = x.forward[i];\n\t\t\t}\n\t\t\tupdate[i] = x;\n\t\t}\n\t\tx = x.forward[0];\n\t\tif (x && comparator(x.key, searchKey) === 0) {\n\t\t\t// update\n\t\t\tx.value = value;\n\t\t\treturn false;\n\t\t} else {\n\t\t\t// insert\n\t\t\tlet lvl = SkipList._randomLevel(list);\n\t\t\tif (lvl > list._level) {\n\t\t\t\tfor (let i = list._level; i < lvl; i++) {\n\t\t\t\t\tupdate[i] = list._header;\n\t\t\t\t}\n\t\t\t\tlist._level = lvl;\n\t\t\t}\n\t\t\tx = new Node<K, V>(lvl, searchKey, value);\n\t\t\tfor (let i = 0; i < lvl; i++) {\n\t\t\t\tx.forward[i] = update[i].forward[i];\n\t\t\t\tupdate[i].forward[i] = x;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tprivate static _randomLevel(list: SkipList<any, any>, p: number = 0.5): number {\n\t\tlet lvl = 1;\n\t\twhile (Math.random() < p && lvl < list._maxLevel) {\n\t\t\tlvl += 1;\n\t\t}\n\t\treturn lvl;\n\t}\n\n\tprivate static _delete<K, V>(list: SkipList<K, V>, searchKey: K, comparator: Comparator<K>) {\n\t\tlet update: Node<K, V>[] = [];\n\t\tlet x = list._header;\n\t\tfor (let i = list._level - 1; i >= 0; i--) {\n\t\t\twhile (x.forward[i] && comparator(x.forward[i].key, searchKey) < 0) {\n\t\t\t\tx = x.forward[i];\n\t\t\t}\n\t\t\tupdate[i] = x;\n\t\t}\n\t\tx = x.forward[0];\n\t\tif (!x || comparator(x.key, searchKey) !== 0) {\n\t\t\t// not found\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0; i < list._level; i++) {\n\t\t\tif (update[i].forward[i] !== x) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tupdate[i].forward[i] = x.forward[i];\n\t\t}\n\t\twhile (list._level > 0 && list._header.forward[list._level - 1] === NIL) {\n\t\t\tlist._level -= 1;\n\t\t}\n\t\treturn true;\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { globals } from 'vs/base/common/platform';\n\nconst hasPerformanceNow = (globals.performance && typeof globals.performance.now === 'function');\n\nexport class StopWatch {\n\n\tprivate _highResolution: boolean;\n\tprivate _startTime: number;\n\tprivate _stopTime: number;\n\n\tpublic static create(highResolution: boolean = true): StopWatch {\n\t\treturn new StopWatch(highResolution);\n\t}\n\n\tconstructor(highResolution: boolean) {\n\t\tthis._highResolution = hasPerformanceNow && highResolution;\n\t\tthis._startTime = this._now();\n\t\tthis._stopTime = -1;\n\t}\n\n\tpublic stop(): void {\n\t\tthis._stopTime = this._now();\n\t}\n\n\tpublic elapsed(): number {\n\t\tif (this._stopTime !== -1) {\n\t\t\treturn this._stopTime - this._startTime;\n\t\t}\n\t\treturn this._now() - this._startTime;\n\t}\n\n\tprivate _now(): number {\n\t\treturn this._highResolution ? globals.performance.now() : Date.now();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { once as onceFn } from 'vs/base/common/functional';\nimport { combinedDisposable, Disposable, DisposableStore, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { LinkedList } from 'vs/base/common/linkedList';\nimport { StopWatch } from 'vs/base/common/stopwatch';\n\n/**\n * To an event a function with one or zero parameters\n * can be subscribed. The event is the subscriber function itself.\n */\nexport interface Event<T> {\n\t(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n}\n\nexport namespace Event {\n\texport const None: Event<any> = () => Disposable.None;\n\n\t/**\n\t * Given an event, returns another event which only fires once.\n\t */\n\texport function once<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => {\n\t\t\t// we need this, in case the event fires during the listener call\n\t\t\tlet didFire = false;\n\t\t\tlet result: IDisposable;\n\t\t\tresult = event(e => {\n\t\t\t\tif (didFire) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (result) {\n\t\t\t\t\tresult.dispose();\n\t\t\t\t} else {\n\t\t\t\t\tdidFire = true;\n\t\t\t\t}\n\n\t\t\t\treturn listener.call(thisArgs, e);\n\t\t\t}, null, disposables);\n\n\t\t\tif (didFire) {\n\t\t\t\tresult.dispose();\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t}\n\n\t/**\n\t * @deprecated DO NOT use, this leaks memory\n\t */\n\texport function map<I, O>(event: Event<I>, map: (i: I) => O): Event<O> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => listener.call(thisArgs, map(i)), null, disposables));\n\t}\n\n\t/**\n\t * @deprecated DO NOT use, this leaks memory\n\t */\n\texport function forEach<I>(event: Event<I>, each: (i: I) => void): Event<I> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables));\n\t}\n\n\t/**\n\t * @deprecated DO NOT use, this leaks memory\n\t */\n\texport function filter<T, U>(event: Event<T | U>, filter: (e: T | U) => e is T): Event<T>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T>;\n\texport function filter<T, R>(event: Event<T | R>, filter: (e: T | R) => e is R): Event<R>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables));\n\t}\n\n\t/**\n\t * Given an event, returns the same event but typed as `Event<void>`.\n\t */\n\texport function signal<T>(event: Event<T>): Event<void> {\n\t\treturn event as Event<any> as Event<void>;\n\t}\n\n\t/**\n\t * Given a collection of events, returns a single event which emits\n\t * whenever any of the provided events emit.\n\t */\n\texport function any<T>(...events: Event<T>[]): Event<T>;\n\texport function any(...events: Event<any>[]): Event<void>;\n\texport function any<T>(...events: Event<T>[]): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e), null, disposables)));\n\t}\n\n\t/**\n\t * @deprecated DO NOT use, this leaks memory\n\t */\n\texport function reduce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, initial?: O): Event<O> {\n\t\tlet output: O | undefined = initial;\n\n\t\treturn map<I, O>(event, e => {\n\t\t\toutput = merge(output, e);\n\t\t\treturn output;\n\t\t});\n\t}\n\n\t/**\n\t * @deprecated DO NOT use, this leaks memory\n\t */\n\tfunction snapshot<T>(event: Event<T>): Event<T> {\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tlistener.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * @deprecated DO NOT use, this leaks memory\n\t */\n\texport function debounce<T>(event: Event<T>, merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<T>;\n\t/**\n\t * @deprecated DO NOT use, this leaks memory\n\t */\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<O>;\n\t/**\n\t * @deprecated DO NOT use, this leaks memory\n\t */\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay: number = 100, leading = false, leakWarningThreshold?: number): Event<O> {\n\n\t\tlet subscription: IDisposable;\n\t\tlet output: O | undefined = undefined;\n\t\tlet handle: any = undefined;\n\t\tlet numDebouncedCalls = 0;\n\n\t\tconst emitter = new Emitter<O>({\n\t\t\tleakWarningThreshold,\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tsubscription = event(cur => {\n\t\t\t\t\tnumDebouncedCalls++;\n\t\t\t\t\toutput = merge(output, cur);\n\n\t\t\t\t\tif (leading && !handle) {\n\t\t\t\t\t\temitter.fire(output);\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t\thandle = setTimeout(() => {\n\t\t\t\t\t\tconst _output = output;\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t\thandle = undefined;\n\t\t\t\t\t\tif (!leading || numDebouncedCalls > 1) {\n\t\t\t\t\t\t\temitter.fire(_output!);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnumDebouncedCalls = 0;\n\t\t\t\t\t}, delay);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tsubscription.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * @deprecated DO NOT use, this leaks memory\n\t */\n\texport function latch<T>(event: Event<T>, equals: (a: T, b: T) => boolean = (a, b) => a === b): Event<T> {\n\t\tlet firstCall = true;\n\t\tlet cache: T;\n\n\t\treturn filter(event, value => {\n\t\t\tconst shouldEmit = firstCall || !equals(value, cache);\n\t\t\tfirstCall = false;\n\t\t\tcache = value;\n\t\t\treturn shouldEmit;\n\t\t});\n\t}\n\n\t/**\n\t * @deprecated DO NOT use, this leaks memory\n\t */\n\texport function split<T, U>(event: Event<T | U>, isT: (e: T | U) => e is T): [Event<T>, Event<U>] {\n\t\treturn [\n\t\t\tEvent.filter(event, isT),\n\t\t\tEvent.filter(event, e => !isT(e)) as Event<U>,\n\t\t];\n\t}\n\n\t/**\n\t * @deprecated DO NOT use, this leaks memory\n\t */\n\texport function buffer<T>(event: Event<T>, flushAfterTimeout = false, _buffer: T[] = []): Event<T> {\n\t\tlet buffer: T[] | null = _buffer.slice();\n\n\t\tlet listener: IDisposable | null = event(e => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.push(e);\n\t\t\t} else {\n\t\t\t\temitter.fire(e);\n\t\t\t}\n\t\t});\n\n\t\tconst flush = () => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.forEach(e => emitter.fire(e));\n\t\t\t}\n\t\t\tbuffer = null;\n\t\t};\n\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tif (!listener) {\n\t\t\t\t\tlistener = event(e => emitter.fire(e));\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonFirstListenerDidAdd() {\n\t\t\t\tif (buffer) {\n\t\t\t\t\tif (flushAfterTimeout) {\n\t\t\t\t\t\tsetTimeout(flush);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tflush();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonLastListenerRemove() {\n\t\t\t\tif (listener) {\n\t\t\t\t\tlistener.dispose();\n\t\t\t\t}\n\t\t\t\tlistener = null;\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\texport interface IChainableEvent<T> {\n\t\tevent: Event<T>;\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O>;\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R>;\n\t\tlatch(): IChainableEvent<T>;\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\ton(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n\t\tonce(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n\t}\n\n\tclass ChainableEvent<T> implements IChainableEvent<T> {\n\n\t\tconstructor(readonly event: Event<T>) { }\n\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O> {\n\t\t\treturn new ChainableEvent(map(this.event, fn));\n\t\t}\n\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(forEach(this.event, fn));\n\t\t}\n\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(filter(this.event, fn));\n\t\t}\n\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(reduce(this.event, merge, initial));\n\t\t}\n\n\t\tlatch(): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(latch(this.event));\n\t\t}\n\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay: number = 100, leading = false, leakWarningThreshold?: number): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(debounce(this.event, merge, delay, leading, leakWarningThreshold));\n\t\t}\n\n\t\ton(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[] | DisposableStore) {\n\t\t\treturn this.event(listener, thisArgs, disposables);\n\t\t}\n\n\t\tonce(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[]) {\n\t\t\treturn once(this.event)(listener, thisArgs, disposables);\n\t\t}\n\t}\n\n\t/**\n\t * @deprecated DO NOT use, this leaks memory\n\t */\n\texport function chain<T>(event: Event<T>): IChainableEvent<T> {\n\t\treturn new ChainableEvent(event);\n\t}\n\n\texport interface NodeEventEmitter {\n\t\ton(event: string | symbol, listener: Function): unknown;\n\t\tremoveListener(event: string | symbol, listener: Function): unknown;\n\t}\n\n\texport function fromNodeEventEmitter<T>(emitter: NodeEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.on(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport interface DOMEventEmitter {\n\t\taddEventListener(event: string | symbol, listener: Function): void;\n\t\tremoveEventListener(event: string | symbol, listener: Function): void;\n\t}\n\n\texport function fromDOMEventEmitter<T>(emitter: DOMEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport function toPromise<T>(event: Event<T>): Promise<T> {\n\t\treturn new Promise(resolve => once(event)(resolve));\n\t}\n}\n\nexport type Listener<T> = [(e: T) => void, any] | ((e: T) => void);\n\nexport interface EmitterOptions {\n\tonFirstListenerAdd?: Function;\n\tonFirstListenerDidAdd?: Function;\n\tonListenerDidAdd?: Function;\n\tonLastListenerRemove?: Function;\n\tleakWarningThreshold?: number;\n\n\t/** ONLY enable this during development */\n\t_profName?: string\n}\n\n\nclass EventProfiling {\n\n\tprivate static _idPool = 0;\n\n\tprivate _name: string;\n\tprivate _stopWatch?: StopWatch;\n\tprivate _listenerCount: number = 0;\n\tprivate _invocationCount = 0;\n\tprivate _elapsedOverall = 0;\n\n\tconstructor(name: string) {\n\t\tthis._name = `${name}_${EventProfiling._idPool++}`;\n\t}\n\n\tstart(listenerCount: number): void {\n\t\tthis._stopWatch = new StopWatch(true);\n\t\tthis._listenerCount = listenerCount;\n\t}\n\n\tstop(): void {\n\t\tif (this._stopWatch) {\n\t\t\tconst elapsed = this._stopWatch.elapsed();\n\t\t\tthis._elapsedOverall += elapsed;\n\t\t\tthis._invocationCount += 1;\n\n\t\t\tconsole.info(`did FIRE ${this._name}: elapsed_ms: ${elapsed.toFixed(5)}, listener: ${this._listenerCount} (elapsed_overall: ${this._elapsedOverall.toFixed(2)}, invocations: ${this._invocationCount})`);\n\t\t\tthis._stopWatch = undefined;\n\t\t}\n\t}\n}\n\nlet _globalLeakWarningThreshold = -1;\nexport function setGlobalLeakWarningThreshold(n: number): IDisposable {\n\tconst oldValue = _globalLeakWarningThreshold;\n\t_globalLeakWarningThreshold = n;\n\treturn {\n\t\tdispose() {\n\t\t\t_globalLeakWarningThreshold = oldValue;\n\t\t}\n\t};\n}\n\nclass LeakageMonitor {\n\n\tprivate _stacks: Map<string, number> | undefined;\n\tprivate _warnCountdown: number = 0;\n\n\tconstructor(\n\t\treadonly customThreshold?: number,\n\t\treadonly name: string = Math.random().toString(18).slice(2, 5),\n\t) { }\n\n\tdispose(): void {\n\t\tif (this._stacks) {\n\t\t\tthis._stacks.clear();\n\t\t}\n\t}\n\n\tcheck(listenerCount: number): undefined | (() => void) {\n\n\t\tlet threshold = _globalLeakWarningThreshold;\n\t\tif (typeof this.customThreshold === 'number') {\n\t\t\tthreshold = this.customThreshold;\n\t\t}\n\n\t\tif (threshold <= 0 || listenerCount < threshold) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this._stacks) {\n\t\t\tthis._stacks = new Map();\n\t\t}\n\t\tconst stack = new Error().stack!.split('\\n').slice(3).join('\\n');\n\t\tconst count = (this._stacks.get(stack) || 0);\n\t\tthis._stacks.set(stack, count + 1);\n\t\tthis._warnCountdown -= 1;\n\n\t\tif (this._warnCountdown <= 0) {\n\t\t\t// only warn on first exceed and then every time the limit\n\t\t\t// is exceeded by 50% again\n\t\t\tthis._warnCountdown = threshold * 0.5;\n\n\t\t\t// find most frequent listener and print warning\n\t\t\tlet topStack: string | undefined;\n\t\t\tlet topCount: number = 0;\n\t\t\tfor (const [stack, count] of this._stacks) {\n\t\t\t\tif (!topStack || topCount < count) {\n\t\t\t\t\ttopStack = stack;\n\t\t\t\t\ttopCount = count;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconsole.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n\t\t\tconsole.warn(topStack!);\n\t\t}\n\n\t\treturn () => {\n\t\t\tconst count = (this._stacks!.get(stack) || 0);\n\t\t\tthis._stacks!.set(stack, count - 1);\n\t\t};\n\t}\n}\n\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n\tclass Document {\n\n\t\tprivate readonly _onDidChange = new Emitter<(value:string)=>any>();\n\n\t\tpublic onDidChange = this._onDidChange.event;\n\n\t\t// getter-style\n\t\t// get onDidChange(): Event<(value:string)=>any> {\n\t\t// \treturn this._onDidChange.event;\n\t\t// }\n\n\t\tprivate _doIt() {\n\t\t\t//...\n\t\t\tthis._onDidChange.fire(value);\n\t\t}\n\t}\n */\nexport class Emitter<T> {\n\tprivate readonly _options?: EmitterOptions;\n\tprivate readonly _leakageMon?: LeakageMonitor;\n\tprivate readonly _perfMon?: EventProfiling;\n\tprivate _disposed: boolean = false;\n\tprivate _event?: Event<T>;\n\tprivate _deliveryQueue?: LinkedList<[Listener<T>, T]>;\n\tprotected _listeners?: LinkedList<Listener<T>>;\n\n\tconstructor(options?: EmitterOptions) {\n\t\tthis._options = options;\n\t\tthis._leakageMon = _globalLeakWarningThreshold > 0 ? new LeakageMonitor(this._options && this._options.leakWarningThreshold) : undefined;\n\t\tthis._perfMon = this._options?._profName ? new EventProfiling(this._options._profName) : undefined;\n\t}\n\n\t/**\n\t * For the public to allow to subscribe\n\t * to events from this Emitter\n\t */\n\tget event(): Event<T> {\n\t\tif (!this._event) {\n\t\t\tthis._event = (listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore) => {\n\t\t\t\tif (!this._listeners) {\n\t\t\t\t\tthis._listeners = new LinkedList();\n\t\t\t\t}\n\n\t\t\t\tconst firstListener = this._listeners.isEmpty();\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerAdd) {\n\t\t\t\t\tthis._options.onFirstListenerAdd(this);\n\t\t\t\t}\n\n\t\t\t\tconst remove = this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerDidAdd) {\n\t\t\t\t\tthis._options.onFirstListenerDidAdd(this);\n\t\t\t\t}\n\n\t\t\t\tif (this._options && this._options.onListenerDidAdd) {\n\t\t\t\t\tthis._options.onListenerDidAdd(this, listener, thisArgs);\n\t\t\t\t}\n\n\t\t\t\t// check and record this emitter for potential leakage\n\t\t\t\tconst removeMonitor = this._leakageMon?.check(this._listeners.size);\n\n\t\t\t\tconst result = toDisposable(() => {\n\t\t\t\t\tif (removeMonitor) {\n\t\t\t\t\t\tremoveMonitor();\n\t\t\t\t\t}\n\t\t\t\t\tif (!this._disposed) {\n\t\t\t\t\t\tremove();\n\t\t\t\t\t\tif (this._options && this._options.onLastListenerRemove) {\n\t\t\t\t\t\t\tconst hasListeners = (this._listeners && !this._listeners.isEmpty());\n\t\t\t\t\t\t\tif (!hasListeners) {\n\t\t\t\t\t\t\t\tthis._options.onLastListenerRemove(this);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (disposables instanceof DisposableStore) {\n\t\t\t\t\tdisposables.add(result);\n\t\t\t\t} else if (Array.isArray(disposables)) {\n\t\t\t\t\tdisposables.push(result);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\treturn this._event;\n\t}\n\n\t/**\n\t * To be kept private to fire an event to\n\t * subscribers\n\t */\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\t// put all [listener,event]-pairs into delivery queue\n\t\t\t// then emit all event. an inner/nested event might be\n\t\t\t// the driver of this\n\n\t\t\tif (!this._deliveryQueue) {\n\t\t\t\tthis._deliveryQueue = new LinkedList();\n\t\t\t}\n\n\t\t\tfor (let listener of this._listeners) {\n\t\t\t\tthis._deliveryQueue.push([listener, event]);\n\t\t\t}\n\n\t\t\t// start/stop performance insight collection\n\t\t\tthis._perfMon?.start(this._deliveryQueue.size);\n\n\t\t\twhile (this._deliveryQueue.size > 0) {\n\t\t\t\tconst [listener, event] = this._deliveryQueue.shift()!;\n\t\t\t\ttry {\n\t\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tonUnexpectedError(e);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._perfMon?.stop();\n\t\t}\n\t}\n\n\tdispose() {\n\t\tif (!this._disposed) {\n\t\t\tthis._disposed = true;\n\t\t\tthis._listeners?.clear();\n\t\t\tthis._deliveryQueue?.clear();\n\t\t\tthis._options?.onLastListenerRemove?.();\n\t\t\tthis._leakageMon?.dispose();\n\t\t}\n\t}\n}\n\n\nexport interface IWaitUntil {\n\twaitUntil(thenable: Promise<unknown>): void;\n}\n\nexport class AsyncEmitter<T extends IWaitUntil> extends Emitter<T> {\n\n\tprivate _asyncDeliveryQueue?: LinkedList<[Listener<T>, Omit<T, 'waitUntil'>]>;\n\n\tasync fireAsync(data: Omit<T, 'waitUntil'>, token: CancellationToken, promiseJoin?: (p: Promise<unknown>, listener: Function) => Promise<unknown>): Promise<void> {\n\t\tif (!this._listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._asyncDeliveryQueue) {\n\t\t\tthis._asyncDeliveryQueue = new LinkedList();\n\t\t}\n\n\t\tfor (const listener of this._listeners) {\n\t\t\tthis._asyncDeliveryQueue.push([listener, data]);\n\t\t}\n\n\t\twhile (this._asyncDeliveryQueue.size > 0 && !token.isCancellationRequested) {\n\n\t\t\tconst [listener, data] = this._asyncDeliveryQueue.shift()!;\n\t\t\tconst thenables: Promise<unknown>[] = [];\n\n\t\t\tconst event = <T>{\n\t\t\t\t...data,\n\t\t\t\twaitUntil: (p: Promise<unknown>): void => {\n\t\t\t\t\tif (Object.isFrozen(thenables)) {\n\t\t\t\t\t\tthrow new Error('waitUntil can NOT be called asynchronous');\n\t\t\t\t\t}\n\t\t\t\t\tif (promiseJoin) {\n\t\t\t\t\t\tp = promiseJoin(p, typeof listener === 'function' ? listener : listener[0]);\n\t\t\t\t\t}\n\t\t\t\t\tthenables.push(p);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t} else {\n\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// freeze thenables-collection to enforce sync-calls to\n\t\t\t// wait until and then wait for all thenables to resolve\n\t\t\tObject.freeze(thenables);\n\n\t\t\tawait Promise.allSettled(thenables).then(values => {\n\t\t\t\tfor (const value of values) {\n\t\t\t\t\tif (value.status === 'rejected') {\n\t\t\t\t\t\tonUnexpectedError(value.reason);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\n\nexport class PauseableEmitter<T> extends Emitter<T> {\n\n\tprivate _isPaused = 0;\n\tprotected _eventQueue = new LinkedList<T>();\n\tprivate _mergeFn?: (input: T[]) => T;\n\n\tconstructor(options?: EmitterOptions & { merge?: (input: T[]) => T }) {\n\t\tsuper(options);\n\t\tthis._mergeFn = options?.merge;\n\t}\n\n\tpause(): void {\n\t\tthis._isPaused++;\n\t}\n\n\tresume(): void {\n\t\tif (this._isPaused !== 0 && --this._isPaused === 0) {\n\t\t\tif (this._mergeFn) {\n\t\t\t\t// use the merge function to create a single composite\n\t\t\t\t// event. make a copy in case firing pauses this emitter\n\t\t\t\tconst events = Array.from(this._eventQueue);\n\t\t\t\tthis._eventQueue.clear();\n\t\t\t\tsuper.fire(this._mergeFn(events));\n\n\t\t\t} else {\n\t\t\t\t// no merging, fire each event individually and test\n\t\t\t\t// that this emitter isn't paused halfway through\n\t\t\t\twhile (!this._isPaused && this._eventQueue.size !== 0) {\n\t\t\t\t\tsuper.fire(this._eventQueue.shift()!);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\toverride fire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\tif (this._isPaused !== 0) {\n\t\t\t\tthis._eventQueue.push(event);\n\t\t\t} else {\n\t\t\t\tsuper.fire(event);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class DebounceEmitter<T> extends PauseableEmitter<T> {\n\n\tprivate readonly _delay: number;\n\tprivate _handle: any | undefined;\n\n\tconstructor(options: EmitterOptions & { merge: (input: T[]) => T, delay?: number }) {\n\t\tsuper(options);\n\t\tthis._delay = options.delay ?? 100;\n\t}\n\n\toverride fire(event: T): void {\n\t\tif (!this._handle) {\n\t\t\tthis.pause();\n\t\t\tthis._handle = setTimeout(() => {\n\t\t\t\tthis._handle = undefined;\n\t\t\t\tthis.resume();\n\t\t\t}, this._delay);\n\t\t}\n\t\tsuper.fire(event);\n\t}\n}\n\n/**\n * An emitter which queue all events and then process them at the\n * end of the event loop.\n */\nexport class MicrotaskEmitter<T> extends Emitter<T> {\n\tprivate _queuedEvents: T[] = [];\n\tprivate _mergeFn?: (input: T[]) => T;\n\n\tconstructor(options?: EmitterOptions & { merge?: (input: T[]) => T }) {\n\t\tsuper(options);\n\t\tthis._mergeFn = options?.merge;\n\t}\n\toverride fire(event: T): void {\n\t\tthis._queuedEvents.push(event);\n\t\tif (this._queuedEvents.length === 1) {\n\t\t\tqueueMicrotask(() => {\n\t\t\t\tif (this._mergeFn) {\n\t\t\t\t\tsuper.fire(this._mergeFn(this._queuedEvents));\n\t\t\t\t} else {\n\t\t\t\t\tthis._queuedEvents.forEach(e => super.fire(e));\n\t\t\t\t}\n\t\t\t\tthis._queuedEvents = [];\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport class EventMultiplexer<T> implements IDisposable {\n\n\tprivate readonly emitter: Emitter<T>;\n\tprivate hasListeners = false;\n\tprivate events: { event: Event<T>; listener: IDisposable | null; }[] = [];\n\n\tconstructor() {\n\t\tthis.emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => this.onFirstListenerAdd(),\n\t\t\tonLastListenerRemove: () => this.onLastListenerRemove()\n\t\t});\n\t}\n\n\tget event(): Event<T> {\n\t\treturn this.emitter.event;\n\t}\n\n\tadd(event: Event<T>): IDisposable {\n\t\tconst e = { event: event, listener: null };\n\t\tthis.events.push(e);\n\n\t\tif (this.hasListeners) {\n\t\t\tthis.hook(e);\n\t\t}\n\n\t\tconst dispose = () => {\n\t\t\tif (this.hasListeners) {\n\t\t\t\tthis.unhook(e);\n\t\t\t}\n\n\t\t\tconst idx = this.events.indexOf(e);\n\t\t\tthis.events.splice(idx, 1);\n\t\t};\n\n\t\treturn toDisposable(onceFn(dispose));\n\t}\n\n\tprivate onFirstListenerAdd(): void {\n\t\tthis.hasListeners = true;\n\t\tthis.events.forEach(e => this.hook(e));\n\t}\n\n\tprivate onLastListenerRemove(): void {\n\t\tthis.hasListeners = false;\n\t\tthis.events.forEach(e => this.unhook(e));\n\t}\n\n\tprivate hook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\te.listener = e.event(r => this.emitter.fire(r));\n\t}\n\n\tprivate unhook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\tif (e.listener) {\n\t\t\te.listener.dispose();\n\t\t}\n\t\te.listener = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.emitter.dispose();\n\t}\n}\n\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n\n\tprivate buffers: Function[][] = [];\n\n\twrapEvent<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs?, disposables?) => {\n\t\t\treturn event(i => {\n\t\t\t\tconst buffer = this.buffers[this.buffers.length - 1];\n\n\t\t\t\tif (buffer) {\n\t\t\t\t\tbuffer.push(() => listener.call(thisArgs, i));\n\t\t\t\t} else {\n\t\t\t\t\tlistener.call(thisArgs, i);\n\t\t\t\t}\n\t\t\t}, undefined, disposables);\n\t\t};\n\t}\n\n\tbufferEvents<R = void>(fn: () => R): R {\n\t\tconst buffer: Array<() => R> = [];\n\t\tthis.buffers.push(buffer);\n\t\tconst r = fn();\n\t\tthis.buffers.pop();\n\t\tbuffer.forEach(flush => flush());\n\t\treturn r;\n\t}\n}\n\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay<T> implements IDisposable {\n\n\tprivate listening = false;\n\tprivate inputEvent: Event<T> = Event.None;\n\tprivate inputEventListener: IDisposable = Disposable.None;\n\n\tprivate readonly emitter = new Emitter<T>({\n\t\tonFirstListenerDidAdd: () => {\n\t\t\tthis.listening = true;\n\t\t\tthis.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n\t\t},\n\t\tonLastListenerRemove: () => {\n\t\t\tthis.listening = false;\n\t\t\tthis.inputEventListener.dispose();\n\t\t}\n\t});\n\n\treadonly event: Event<T> = this.emitter.event;\n\n\tset input(event: Event<T>) {\n\t\tthis.inputEvent = event;\n\n\t\tif (this.listening) {\n\t\t\tthis.inputEventListener.dispose();\n\t\t\tthis.inputEventListener = event(this.emitter.fire, this.emitter);\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.inputEventListener.dispose();\n\t\tthis.emitter.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport interface CancellationToken {\n\n\t/**\n\t * A flag signalling is cancellation has been requested.\n\t */\n\treadonly isCancellationRequested: boolean;\n\n\t/**\n\t * An event which fires when cancellation is requested. This event\n\t * only ever fires `once` as cancellation can only happen once. Listeners\n\t * that are registered after cancellation will be called (next event loop run),\n\t * but also only once.\n\t *\n\t * @event\n\t */\n\treadonly onCancellationRequested: (listener: (e: any) => any, thisArgs?: any, disposables?: IDisposable[]) => IDisposable;\n}\n\nconst shortcutEvent: Event<any> = Object.freeze(function (callback, context?): IDisposable {\n\tconst handle = setTimeout(callback.bind(context), 0);\n\treturn { dispose() { clearTimeout(handle); } };\n});\n\nexport namespace CancellationToken {\n\n\texport function isCancellationToken(thing: unknown): thing is CancellationToken {\n\t\tif (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n\t\t\treturn true;\n\t\t}\n\t\tif (thing instanceof MutableToken) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing || typeof thing !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (thing as CancellationToken).isCancellationRequested === 'boolean'\n\t\t\t&& typeof (thing as CancellationToken).onCancellationRequested === 'function';\n\t}\n\n\n\texport const None: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: false,\n\t\tonCancellationRequested: Event.None\n\t});\n\n\texport const Cancelled: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: true,\n\t\tonCancellationRequested: shortcutEvent\n\t});\n}\n\nclass MutableToken implements CancellationToken {\n\n\tprivate _isCancelled: boolean = false;\n\tprivate _emitter: Emitter<any> | null = null;\n\n\tpublic cancel() {\n\t\tif (!this._isCancelled) {\n\t\t\tthis._isCancelled = true;\n\t\t\tif (this._emitter) {\n\t\t\t\tthis._emitter.fire(undefined);\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tget isCancellationRequested(): boolean {\n\t\treturn this._isCancelled;\n\t}\n\n\tget onCancellationRequested(): Event<any> {\n\t\tif (this._isCancelled) {\n\t\t\treturn shortcutEvent;\n\t\t}\n\t\tif (!this._emitter) {\n\t\t\tthis._emitter = new Emitter<any>();\n\t\t}\n\t\treturn this._emitter.event;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._emitter) {\n\t\t\tthis._emitter.dispose();\n\t\t\tthis._emitter = null;\n\t\t}\n\t}\n}\n\nexport class CancellationTokenSource {\n\n\tprivate _token?: CancellationToken = undefined;\n\tprivate _parentListener?: IDisposable = undefined;\n\n\tconstructor(parent?: CancellationToken) {\n\t\tthis._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n\t}\n\n\tget token(): CancellationToken {\n\t\tif (!this._token) {\n\t\t\t// be lazy and create the token only when\n\t\t\t// actually needed\n\t\t\tthis._token = new MutableToken();\n\t\t}\n\t\treturn this._token;\n\t}\n\n\tcancel(): void {\n\t\tif (!this._token) {\n\t\t\t// save an object by returning the default\n\t\t\t// cancelled token when cancellation happens\n\t\t\t// before someone asks for the token\n\t\t\tthis._token = CancellationToken.Cancelled;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually cancel\n\t\t\tthis._token.cancel();\n\t\t}\n\t}\n\n\tdispose(cancel: boolean = false): void {\n\t\tif (cancel) {\n\t\t\tthis.cancel();\n\t\t}\n\t\tif (this._parentListener) {\n\t\t\tthis._parentListener.dispose();\n\t\t}\n\t\tif (!this._token) {\n\t\t\t// ensure to initialize with an empty token if we had none\n\t\t\tthis._token = CancellationToken.None;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually dispose\n\t\t\tthis._token.dispose();\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\n\nexport interface IIconRegistry {\n\treadonly all: IterableIterator<Codicon>;\n\treadonly onDidRegister: Event<Codicon>;\n\tget(id: string): Codicon | undefined;\n}\n\nclass Registry implements IIconRegistry {\n\n\tprivate readonly _icons = new Map<string, Codicon>();\n\tprivate readonly _onDidRegister = new Emitter<Codicon>();\n\n\tpublic add(icon: Codicon) {\n\t\tconst existing = this._icons.get(icon.id);\n\t\tif (!existing) {\n\t\t\tthis._icons.set(icon.id, icon);\n\t\t\tthis._onDidRegister.fire(icon);\n\t\t} else if (icon.description) {\n\t\t\texisting.description = icon.description;\n\t\t} else {\n\t\t\tconsole.error(`Duplicate registration of codicon ${icon.id}`);\n\t\t}\n\t}\n\n\tpublic get(id: string): Codicon | undefined {\n\t\treturn this._icons.get(id);\n\t}\n\n\tpublic get all(): IterableIterator<Codicon> {\n\t\treturn this._icons.values();\n\t}\n\n\tpublic get onDidRegister(): Event<Codicon> {\n\t\treturn this._onDidRegister.event;\n\t}\n}\n\nconst _registry = new Registry();\n\nexport const iconRegistry: IIconRegistry = _registry;\n\n// Selects all codicon names encapsulated in the `$()` syntax and wraps the\n// results with spaces so that screen readers can read the text better.\nexport function getCodiconAriaLabel(text: string | undefined) {\n\tif (!text) {\n\t\treturn '';\n\t}\n\n\treturn text.replace(/\\$\\((.*?)\\)/g, (_match, codiconName) => ` ${codiconName} `).trim();\n}\n\n/**\n * The Codicon library is a set of default icons that are built-in in VS Code.\n *\n * In the product (outside of base) Codicons should only be used as defaults. In order to have all icons in VS Code\n * themeable, component should ise define new, component specific icons using `iconRegistry.registerIcon`.\n * In that call a Codicon can be names as default.\n */\nexport class Codicon implements CSSIcon {\n\tprivate constructor(public readonly id: string, public readonly definition: IconDefinition, public description?: string) {\n\t\t_registry.add(this);\n\t}\n\tpublic get classNames() { return 'codicon codicon-' + this.id; }\n\t// classNamesArray is useful for migrating to ES6 classlist\n\tpublic get classNamesArray() { return ['codicon', 'codicon-' + this.id]; }\n\tpublic get cssSelector() { return '.codicon.codicon-' + this.id; }\n\n\n\t// built-in icons, with image name\n\tpublic static readonly add = new Codicon('add', { fontCharacter: '\\\\ea60' });\n\tpublic static readonly plus = new Codicon('plus', Codicon.add.definition);\n\tpublic static readonly gistNew = new Codicon('gist-new', Codicon.add.definition);\n\tpublic static readonly repoCreate = new Codicon('repo-create', Codicon.add.definition);\n\tpublic static readonly lightbulb = new Codicon('lightbulb', { fontCharacter: '\\\\ea61' });\n\tpublic static readonly lightBulb = new Codicon('light-bulb', { fontCharacter: '\\\\ea61' });\n\tpublic static readonly repo = new Codicon('repo', { fontCharacter: '\\\\ea62' });\n\tpublic static readonly repoDelete = new Codicon('repo-delete', { fontCharacter: '\\\\ea62' });\n\tpublic static readonly gistFork = new Codicon('gist-fork', { fontCharacter: '\\\\ea63' });\n\tpublic static readonly repoForked = new Codicon('repo-forked', { fontCharacter: '\\\\ea63' });\n\tpublic static readonly gitPullRequest = new Codicon('git-pull-request', { fontCharacter: '\\\\ea64' });\n\tpublic static readonly gitPullRequestAbandoned = new Codicon('git-pull-request-abandoned', { fontCharacter: '\\\\ea64' });\n\tpublic static readonly recordKeys = new Codicon('record-keys', { fontCharacter: '\\\\ea65' });\n\tpublic static readonly keyboard = new Codicon('keyboard', { fontCharacter: '\\\\ea65' });\n\tpublic static readonly tag = new Codicon('tag', { fontCharacter: '\\\\ea66' });\n\tpublic static readonly tagAdd = new Codicon('tag-add', { fontCharacter: '\\\\ea66' });\n\tpublic static readonly tagRemove = new Codicon('tag-remove', { fontCharacter: '\\\\ea66' });\n\tpublic static readonly person = new Codicon('person', { fontCharacter: '\\\\ea67' });\n\tpublic static readonly personFollow = new Codicon('person-follow', { fontCharacter: '\\\\ea67' });\n\tpublic static readonly personOutline = new Codicon('person-outline', { fontCharacter: '\\\\ea67' });\n\tpublic static readonly personFilled = new Codicon('person-filled', { fontCharacter: '\\\\ea67' });\n\tpublic static readonly gitBranch = new Codicon('git-branch', { fontCharacter: '\\\\ea68' });\n\tpublic static readonly gitBranchCreate = new Codicon('git-branch-create', { fontCharacter: '\\\\ea68' });\n\tpublic static readonly gitBranchDelete = new Codicon('git-branch-delete', { fontCharacter: '\\\\ea68' });\n\tpublic static readonly sourceControl = new Codicon('source-control', { fontCharacter: '\\\\ea68' });\n\tpublic static readonly mirror = new Codicon('mirror', { fontCharacter: '\\\\ea69' });\n\tpublic static readonly mirrorPublic = new Codicon('mirror-public', { fontCharacter: '\\\\ea69' });\n\tpublic static readonly star = new Codicon('star', { fontCharacter: '\\\\ea6a' });\n\tpublic static readonly starAdd = new Codicon('star-add', { fontCharacter: '\\\\ea6a' });\n\tpublic static readonly starDelete = new Codicon('star-delete', { fontCharacter: '\\\\ea6a' });\n\tpublic static readonly starEmpty = new Codicon('star-empty', { fontCharacter: '\\\\ea6a' });\n\tpublic static readonly comment = new Codicon('comment', { fontCharacter: '\\\\ea6b' });\n\tpublic static readonly commentAdd = new Codicon('comment-add', { fontCharacter: '\\\\ea6b' });\n\tpublic static readonly alert = new Codicon('alert', { fontCharacter: '\\\\ea6c' });\n\tpublic static readonly warning = new Codicon('warning', { fontCharacter: '\\\\ea6c' });\n\tpublic static readonly search = new Codicon('search', { fontCharacter: '\\\\ea6d' });\n\tpublic static readonly searchSave = new Codicon('search-save', { fontCharacter: '\\\\ea6d' });\n\tpublic static readonly logOut = new Codicon('log-out', { fontCharacter: '\\\\ea6e' });\n\tpublic static readonly signOut = new Codicon('sign-out', { fontCharacter: '\\\\ea6e' });\n\tpublic static readonly logIn = new Codicon('log-in', { fontCharacter: '\\\\ea6f' });\n\tpublic static readonly signIn = new Codicon('sign-in', { fontCharacter: '\\\\ea6f' });\n\tpublic static readonly eye = new Codicon('eye', { fontCharacter: '\\\\ea70' });\n\tpublic static readonly eyeUnwatch = new Codicon('eye-unwatch', { fontCharacter: '\\\\ea70' });\n\tpublic static readonly eyeWatch = new Codicon('eye-watch', { fontCharacter: '\\\\ea70' });\n\tpublic static readonly circleFilled = new Codicon('circle-filled', { fontCharacter: '\\\\ea71' });\n\tpublic static readonly primitiveDot = new Codicon('primitive-dot', { fontCharacter: '\\\\ea71' });\n\tpublic static readonly closeDirty = new Codicon('close-dirty', { fontCharacter: '\\\\ea71' });\n\tpublic static readonly debugBreakpoint = new Codicon('debug-breakpoint', { fontCharacter: '\\\\ea71' });\n\tpublic static readonly debugBreakpointDisabled = new Codicon('debug-breakpoint-disabled', { fontCharacter: '\\\\ea71' });\n\tpublic static readonly debugHint = new Codicon('debug-hint', { fontCharacter: '\\\\ea71' });\n\tpublic static readonly primitiveSquare = new Codicon('primitive-square', { fontCharacter: '\\\\ea72' });\n\tpublic static readonly edit = new Codicon('edit', { fontCharacter: '\\\\ea73' });\n\tpublic static readonly pencil = new Codicon('pencil', { fontCharacter: '\\\\ea73' });\n\tpublic static readonly info = new Codicon('info', { fontCharacter: '\\\\ea74' });\n\tpublic static readonly issueOpened = new Codicon('issue-opened', { fontCharacter: '\\\\ea74' });\n\tpublic static readonly gistPrivate = new Codicon('gist-private', { fontCharacter: '\\\\ea75' });\n\tpublic static readonly gitForkPrivate = new Codicon('git-fork-private', { fontCharacter: '\\\\ea75' });\n\tpublic static readonly lock = new Codicon('lock', { fontCharacter: '\\\\ea75' });\n\tpublic static readonly mirrorPrivate = new Codicon('mirror-private', { fontCharacter: '\\\\ea75' });\n\tpublic static readonly close = new Codicon('close', { fontCharacter: '\\\\ea76' });\n\tpublic static readonly removeClose = new Codicon('remove-close', { fontCharacter: '\\\\ea76' });\n\tpublic static readonly x = new Codicon('x', { fontCharacter: '\\\\ea76' });\n\tpublic static readonly repoSync = new Codicon('repo-sync', { fontCharacter: '\\\\ea77' });\n\tpublic static readonly sync = new Codicon('sync', { fontCharacter: '\\\\ea77' });\n\tpublic static readonly clone = new Codicon('clone', { fontCharacter: '\\\\ea78' });\n\tpublic static readonly desktopDownload = new Codicon('desktop-download', { fontCharacter: '\\\\ea78' });\n\tpublic static readonly beaker = new Codicon('beaker', { fontCharacter: '\\\\ea79' });\n\tpublic static readonly microscope = new Codicon('microscope', { fontCharacter: '\\\\ea79' });\n\tpublic static readonly vm = new Codicon('vm', { fontCharacter: '\\\\ea7a' });\n\tpublic static readonly deviceDesktop = new Codicon('device-desktop', { fontCharacter: '\\\\ea7a' });\n\tpublic static readonly file = new Codicon('file', { fontCharacter: '\\\\ea7b' });\n\tpublic static readonly fileText = new Codicon('file-text', { fontCharacter: '\\\\ea7b' });\n\tpublic static readonly more = new Codicon('more', { fontCharacter: '\\\\ea7c' });\n\tpublic static readonly ellipsis = new Codicon('ellipsis', { fontCharacter: '\\\\ea7c' });\n\tpublic static readonly kebabHorizontal = new Codicon('kebab-horizontal', { fontCharacter: '\\\\ea7c' });\n\tpublic static readonly mailReply = new Codicon('mail-reply', { fontCharacter: '\\\\ea7d' });\n\tpublic static readonly reply = new Codicon('reply', { fontCharacter: '\\\\ea7d' });\n\tpublic static readonly organization = new Codicon('organization', { fontCharacter: '\\\\ea7e' });\n\tpublic static readonly organizationFilled = new Codicon('organization-filled', { fontCharacter: '\\\\ea7e' });\n\tpublic static readonly organizationOutline = new Codicon('organization-outline', { fontCharacter: '\\\\ea7e' });\n\tpublic static readonly newFile = new Codicon('new-file', { fontCharacter: '\\\\ea7f' });\n\tpublic static readonly fileAdd = new Codicon('file-add', { fontCharacter: '\\\\ea7f' });\n\tpublic static readonly newFolder = new Codicon('new-folder', { fontCharacter: '\\\\ea80' });\n\tpublic static readonly fileDirectoryCreate = new Codicon('file-directory-create', { fontCharacter: '\\\\ea80' });\n\tpublic static readonly trash = new Codicon('trash', { fontCharacter: '\\\\ea81' });\n\tpublic static readonly trashcan = new Codicon('trashcan', { fontCharacter: '\\\\ea81' });\n\tpublic static readonly history = new Codicon('history', { fontCharacter: '\\\\ea82' });\n\tpublic static readonly clock = new Codicon('clock', { fontCharacter: '\\\\ea82' });\n\tpublic static readonly folder = new Codicon('folder', { fontCharacter: '\\\\ea83' });\n\tpublic static readonly fileDirectory = new Codicon('file-directory', { fontCharacter: '\\\\ea83' });\n\tpublic static readonly symbolFolder = new Codicon('symbol-folder', { fontCharacter: '\\\\ea83' });\n\tpublic static readonly logoGithub = new Codicon('logo-github', { fontCharacter: '\\\\ea84' });\n\tpublic static readonly markGithub = new Codicon('mark-github', { fontCharacter: '\\\\ea84' });\n\tpublic static readonly github = new Codicon('github', { fontCharacter: '\\\\ea84' });\n\tpublic static readonly terminal = new Codicon('terminal', { fontCharacter: '\\\\ea85' });\n\tpublic static readonly console = new Codicon('console', { fontCharacter: '\\\\ea85' });\n\tpublic static readonly repl = new Codicon('repl', { fontCharacter: '\\\\ea85' });\n\tpublic static readonly zap = new Codicon('zap', { fontCharacter: '\\\\ea86' });\n\tpublic static readonly symbolEvent = new Codicon('symbol-event', { fontCharacter: '\\\\ea86' });\n\tpublic static readonly error = new Codicon('error', { fontCharacter: '\\\\ea87' });\n\tpublic static readonly stop = new Codicon('stop', { fontCharacter: '\\\\ea87' });\n\tpublic static readonly variable = new Codicon('variable', { fontCharacter: '\\\\ea88' });\n\tpublic static readonly symbolVariable = new Codicon('symbol-variable', { fontCharacter: '\\\\ea88' });\n\tpublic static readonly array = new Codicon('array', { fontCharacter: '\\\\ea8a' });\n\tpublic static readonly symbolArray = new Codicon('symbol-array', { fontCharacter: '\\\\ea8a' });\n\tpublic static readonly symbolModule = new Codicon('symbol-module', { fontCharacter: '\\\\ea8b' });\n\tpublic static readonly symbolPackage = new Codicon('symbol-package', { fontCharacter: '\\\\ea8b' });\n\tpublic static readonly symbolNamespace = new Codicon('symbol-namespace', { fontCharacter: '\\\\ea8b' });\n\tpublic static readonly symbolObject = new Codicon('symbol-object', { fontCharacter: '\\\\ea8b' });\n\tpublic static readonly symbolMethod = new Codicon('symbol-method', { fontCharacter: '\\\\ea8c' });\n\tpublic static readonly symbolFunction = new Codicon('symbol-function', { fontCharacter: '\\\\ea8c' });\n\tpublic static readonly symbolConstructor = new Codicon('symbol-constructor', { fontCharacter: '\\\\ea8c' });\n\tpublic static readonly symbolBoolean = new Codicon('symbol-boolean', { fontCharacter: '\\\\ea8f' });\n\tpublic static readonly symbolNull = new Codicon('symbol-null', { fontCharacter: '\\\\ea8f' });\n\tpublic static readonly symbolNumeric = new Codicon('symbol-numeric', { fontCharacter: '\\\\ea90' });\n\tpublic static readonly symbolNumber = new Codicon('symbol-number', { fontCharacter: '\\\\ea90' });\n\tpublic static readonly symbolStructure = new Codicon('symbol-structure', { fontCharacter: '\\\\ea91' });\n\tpublic static readonly symbolStruct = new Codicon('symbol-struct', { fontCharacter: '\\\\ea91' });\n\tpublic static readonly symbolParameter = new Codicon('symbol-parameter', { fontCharacter: '\\\\ea92' });\n\tpublic static readonly symbolTypeParameter = new Codicon('symbol-type-parameter', { fontCharacter: '\\\\ea92' });\n\tpublic static readonly symbolKey = new Codicon('symbol-key', { fontCharacter: '\\\\ea93' });\n\tpublic static readonly symbolText = new Codicon('symbol-text', { fontCharacter: '\\\\ea93' });\n\tpublic static readonly symbolReference = new Codicon('symbol-reference', { fontCharacter: '\\\\ea94' });\n\tpublic static readonly goToFile = new Codicon('go-to-file', { fontCharacter: '\\\\ea94' });\n\tpublic static readonly symbolEnum = new Codicon('symbol-enum', { fontCharacter: '\\\\ea95' });\n\tpublic static readonly symbolValue = new Codicon('symbol-value', { fontCharacter: '\\\\ea95' });\n\tpublic static readonly symbolRuler = new Codicon('symbol-ruler', { fontCharacter: '\\\\ea96' });\n\tpublic static readonly symbolUnit = new Codicon('symbol-unit', { fontCharacter: '\\\\ea96' });\n\tpublic static readonly activateBreakpoints = new Codicon('activate-breakpoints', { fontCharacter: '\\\\ea97' });\n\tpublic static readonly archive = new Codicon('archive', { fontCharacter: '\\\\ea98' });\n\tpublic static readonly arrowBoth = new Codicon('arrow-both', { fontCharacter: '\\\\ea99' });\n\tpublic static readonly arrowDown = new Codicon('arrow-down', { fontCharacter: '\\\\ea9a' });\n\tpublic static readonly arrowLeft = new Codicon('arrow-left', { fontCharacter: '\\\\ea9b' });\n\tpublic static readonly arrowRight = new Codicon('arrow-right', { fontCharacter: '\\\\ea9c' });\n\tpublic static readonly arrowSmallDown = new Codicon('arrow-small-down', { fontCharacter: '\\\\ea9d' });\n\tpublic static readonly arrowSmallLeft = new Codicon('arrow-small-left', { fontCharacter: '\\\\ea9e' });\n\tpublic static readonly arrowSmallRight = new Codicon('arrow-small-right', { fontCharacter: '\\\\ea9f' });\n\tpublic static readonly arrowSmallUp = new Codicon('arrow-small-up', { fontCharacter: '\\\\eaa0' });\n\tpublic static readonly arrowUp = new Codicon('arrow-up', { fontCharacter: '\\\\eaa1' });\n\tpublic static readonly bell = new Codicon('bell', { fontCharacter: '\\\\eaa2' });\n\tpublic static readonly bold = new Codicon('bold', { fontCharacter: '\\\\eaa3' });\n\tpublic static readonly book = new Codicon('book', { fontCharacter: '\\\\eaa4' });\n\tpublic static readonly bookmark = new Codicon('bookmark', { fontCharacter: '\\\\eaa5' });\n\tpublic static readonly debugBreakpointConditionalUnverified = new Codicon('debug-breakpoint-conditional-unverified', { fontCharacter: '\\\\eaa6' });\n\tpublic static readonly debugBreakpointConditional = new Codicon('debug-breakpoint-conditional', { fontCharacter: '\\\\eaa7' });\n\tpublic static readonly debugBreakpointConditionalDisabled = new Codicon('debug-breakpoint-conditional-disabled', { fontCharacter: '\\\\eaa7' });\n\tpublic static readonly debugBreakpointDataUnverified = new Codicon('debug-breakpoint-data-unverified', { fontCharacter: '\\\\eaa8' });\n\tpublic static readonly debugBreakpointData = new Codicon('debug-breakpoint-data', { fontCharacter: '\\\\eaa9' });\n\tpublic static readonly debugBreakpointDataDisabled = new Codicon('debug-breakpoint-data-disabled', { fontCharacter: '\\\\eaa9' });\n\tpublic static readonly debugBreakpointLogUnverified = new Codicon('debug-breakpoint-log-unverified', { fontCharacter: '\\\\eaaa' });\n\tpublic static readonly debugBreakpointLog = new Codicon('debug-breakpoint-log', { fontCharacter: '\\\\eaab' });\n\tpublic static readonly debugBreakpointLogDisabled = new Codicon('debug-breakpoint-log-disabled', { fontCharacter: '\\\\eaab' });\n\tpublic static readonly briefcase = new Codicon('briefcase', { fontCharacter: '\\\\eaac' });\n\tpublic static readonly broadcast = new Codicon('broadcast', { fontCharacter: '\\\\eaad' });\n\tpublic static readonly browser = new Codicon('browser', { fontCharacter: '\\\\eaae' });\n\tpublic static readonly bug = new Codicon('bug', { fontCharacter: '\\\\eaaf' });\n\tpublic static readonly calendar = new Codicon('calendar', { fontCharacter: '\\\\eab0' });\n\tpublic static readonly caseSensitive = new Codicon('case-sensitive', { fontCharacter: '\\\\eab1' });\n\tpublic static readonly check = new Codicon('check', { fontCharacter: '\\\\eab2' });\n\tpublic static readonly checklist = new Codicon('checklist', { fontCharacter: '\\\\eab3' });\n\tpublic static readonly chevronDown = new Codicon('chevron-down', { fontCharacter: '\\\\eab4' });\n\tpublic static readonly dropDownButton = new Codicon('drop-down-button', Codicon.chevronDown.definition);\n\tpublic static readonly chevronLeft = new Codicon('chevron-left', { fontCharacter: '\\\\eab5' });\n\tpublic static readonly chevronRight = new Codicon('chevron-right', { fontCharacter: '\\\\eab6' });\n\tpublic static readonly chevronUp = new Codicon('chevron-up', { fontCharacter: '\\\\eab7' });\n\tpublic static readonly chromeClose = new Codicon('chrome-close', { fontCharacter: '\\\\eab8' });\n\tpublic static readonly chromeMaximize = new Codicon('chrome-maximize', { fontCharacter: '\\\\eab9' });\n\tpublic static readonly chromeMinimize = new Codicon('chrome-minimize', { fontCharacter: '\\\\eaba' });\n\tpublic static readonly chromeRestore = new Codicon('chrome-restore', { fontCharacter: '\\\\eabb' });\n\tpublic static readonly circleOutline = new Codicon('circle-outline', { fontCharacter: '\\\\eabc' });\n\tpublic static readonly debugBreakpointUnverified = new Codicon('debug-breakpoint-unverified', { fontCharacter: '\\\\eabc' });\n\tpublic static readonly circleSlash = new Codicon('circle-slash', { fontCharacter: '\\\\eabd' });\n\tpublic static readonly circuitBoard = new Codicon('circuit-board', { fontCharacter: '\\\\eabe' });\n\tpublic static readonly clearAll = new Codicon('clear-all', { fontCharacter: '\\\\eabf' });\n\tpublic static readonly clippy = new Codicon('clippy', { fontCharacter: '\\\\eac0' });\n\tpublic static readonly closeAll = new Codicon('close-all', { fontCharacter: '\\\\eac1' });\n\tpublic static readonly cloudDownload = new Codicon('cloud-download', { fontCharacter: '\\\\eac2' });\n\tpublic static readonly cloudUpload = new Codicon('cloud-upload', { fontCharacter: '\\\\eac3' });\n\tpublic static readonly code = new Codicon('code', { fontCharacter: '\\\\eac4' });\n\tpublic static readonly collapseAll = new Codicon('collapse-all', { fontCharacter: '\\\\eac5' });\n\tpublic static readonly colorMode = new Codicon('color-mode', { fontCharacter: '\\\\eac6' });\n\tpublic static readonly commentDiscussion = new Codicon('comment-discussion', { fontCharacter: '\\\\eac7' });\n\tpublic static readonly compareChanges = new Codicon('compare-changes', { fontCharacter: '\\\\eafd' });\n\tpublic static readonly creditCard = new Codicon('credit-card', { fontCharacter: '\\\\eac9' });\n\tpublic static readonly dash = new Codicon('dash', { fontCharacter: '\\\\eacc' });\n\tpublic static readonly dashboard = new Codicon('dashboard', { fontCharacter: '\\\\eacd' });\n\tpublic static readonly database = new Codicon('database', { fontCharacter: '\\\\eace' });\n\tpublic static readonly debugContinue = new Codicon('debug-continue', { fontCharacter: '\\\\eacf' });\n\tpublic static readonly debugDisconnect = new Codicon('debug-disconnect', { fontCharacter: '\\\\ead0' });\n\tpublic static readonly debugPause = new Codicon('debug-pause', { fontCharacter: '\\\\ead1' });\n\tpublic static readonly debugRestart = new Codicon('debug-restart', { fontCharacter: '\\\\ead2' });\n\tpublic static readonly debugStart = new Codicon('debug-start', { fontCharacter: '\\\\ead3' });\n\tpublic static readonly debugStepInto = new Codicon('debug-step-into', { fontCharacter: '\\\\ead4' });\n\tpublic static readonly debugStepOut = new Codicon('debug-step-out', { fontCharacter: '\\\\ead5' });\n\tpublic static readonly debugStepOver = new Codicon('debug-step-over', { fontCharacter: '\\\\ead6' });\n\tpublic static readonly debugStop = new Codicon('debug-stop', { fontCharacter: '\\\\ead7' });\n\tpublic static readonly debug = new Codicon('debug', { fontCharacter: '\\\\ead8' });\n\tpublic static readonly deviceCameraVideo = new Codicon('device-camera-video', { fontCharacter: '\\\\ead9' });\n\tpublic static readonly deviceCamera = new Codicon('device-camera', { fontCharacter: '\\\\eada' });\n\tpublic static readonly deviceMobile = new Codicon('device-mobile', { fontCharacter: '\\\\eadb' });\n\tpublic static readonly diffAdded = new Codicon('diff-added', { fontCharacter: '\\\\eadc' });\n\tpublic static readonly diffIgnored = new Codicon('diff-ignored', { fontCharacter: '\\\\eadd' });\n\tpublic static readonly diffModified = new Codicon('diff-modified', { fontCharacter: '\\\\eade' });\n\tpublic static readonly diffRemoved = new Codicon('diff-removed', { fontCharacter: '\\\\eadf' });\n\tpublic static readonly diffRenamed = new Codicon('diff-renamed', { fontCharacter: '\\\\eae0' });\n\tpublic static readonly diff = new Codicon('diff', { fontCharacter: '\\\\eae1' });\n\tpublic static readonly discard = new Codicon('discard', { fontCharacter: '\\\\eae2' });\n\tpublic static readonly editorLayout = new Codicon('editor-layout', { fontCharacter: '\\\\eae3' });\n\tpublic static readonly emptyWindow = new Codicon('empty-window', { fontCharacter: '\\\\eae4' });\n\tpublic static readonly exclude = new Codicon('exclude', { fontCharacter: '\\\\eae5' });\n\tpublic static readonly extensions = new Codicon('extensions', { fontCharacter: '\\\\eae6' });\n\tpublic static readonly eyeClosed = new Codicon('eye-closed', { fontCharacter: '\\\\eae7' });\n\tpublic static readonly fileBinary = new Codicon('file-binary', { fontCharacter: '\\\\eae8' });\n\tpublic static readonly fileCode = new Codicon('file-code', { fontCharacter: '\\\\eae9' });\n\tpublic static readonly fileMedia = new Codicon('file-media', { fontCharacter: '\\\\eaea' });\n\tpublic static readonly filePdf = new Codicon('file-pdf', { fontCharacter: '\\\\eaeb' });\n\tpublic static readonly fileSubmodule = new Codicon('file-submodule', { fontCharacter: '\\\\eaec' });\n\tpublic static readonly fileSymlinkDirectory = new Codicon('file-symlink-directory', { fontCharacter: '\\\\eaed' });\n\tpublic static readonly fileSymlinkFile = new Codicon('file-symlink-file', { fontCharacter: '\\\\eaee' });\n\tpublic static readonly fileZip = new Codicon('file-zip', { fontCharacter: '\\\\eaef' });\n\tpublic static readonly files = new Codicon('files', { fontCharacter: '\\\\eaf0' });\n\tpublic static readonly filter = new Codicon('filter', { fontCharacter: '\\\\eaf1' });\n\tpublic static readonly flame = new Codicon('flame', { fontCharacter: '\\\\eaf2' });\n\tpublic static readonly foldDown = new Codicon('fold-down', { fontCharacter: '\\\\eaf3' });\n\tpublic static readonly foldUp = new Codicon('fold-up', { fontCharacter: '\\\\eaf4' });\n\tpublic static readonly fold = new Codicon('fold', { fontCharacter: '\\\\eaf5' });\n\tpublic static readonly folderActive = new Codicon('folder-active', { fontCharacter: '\\\\eaf6' });\n\tpublic static readonly folderOpened = new Codicon('folder-opened', { fontCharacter: '\\\\eaf7' });\n\tpublic static readonly gear = new Codicon('gear', { fontCharacter: '\\\\eaf8' });\n\tpublic static readonly gift = new Codicon('gift', { fontCharacter: '\\\\eaf9' });\n\tpublic static readonly gistSecret = new Codicon('gist-secret', { fontCharacter: '\\\\eafa' });\n\tpublic static readonly gist = new Codicon('gist', { fontCharacter: '\\\\eafb' });\n\tpublic static readonly gitCommit = new Codicon('git-commit', { fontCharacter: '\\\\eafc' });\n\tpublic static readonly gitCompare = new Codicon('git-compare', { fontCharacter: '\\\\eafd' });\n\tpublic static readonly gitMerge = new Codicon('git-merge', { fontCharacter: '\\\\eafe' });\n\tpublic static readonly githubAction = new Codicon('github-action', { fontCharacter: '\\\\eaff' });\n\tpublic static readonly githubAlt = new Codicon('github-alt', { fontCharacter: '\\\\eb00' });\n\tpublic static readonly globe = new Codicon('globe', { fontCharacter: '\\\\eb01' });\n\tpublic static readonly grabber = new Codicon('grabber', { fontCharacter: '\\\\eb02' });\n\tpublic static readonly graph = new Codicon('graph', { fontCharacter: '\\\\eb03' });\n\tpublic static readonly gripper = new Codicon('gripper', { fontCharacter: '\\\\eb04' });\n\tpublic static readonly heart = new Codicon('heart', { fontCharacter: '\\\\eb05' });\n\tpublic static readonly home = new Codicon('home', { fontCharacter: '\\\\eb06' });\n\tpublic static readonly horizontalRule = new Codicon('horizontal-rule', { fontCharacter: '\\\\eb07' });\n\tpublic static readonly hubot = new Codicon('hubot', { fontCharacter: '\\\\eb08' });\n\tpublic static readonly inbox = new Codicon('inbox', { fontCharacter: '\\\\eb09' });\n\tpublic static readonly issueClosed = new Codicon('issue-closed', { fontCharacter: '\\\\eba4' });\n\tpublic static readonly issueReopened = new Codicon('issue-reopened', { fontCharacter: '\\\\eb0b' });\n\tpublic static readonly issues = new Codicon('issues', { fontCharacter: '\\\\eb0c' });\n\tpublic static readonly italic = new Codicon('italic', { fontCharacter: '\\\\eb0d' });\n\tpublic static readonly jersey = new Codicon('jersey', { fontCharacter: '\\\\eb0e' });\n\tpublic static readonly json = new Codicon('json', { fontCharacter: '\\\\eb0f' });\n\tpublic static readonly kebabVertical = new Codicon('kebab-vertical', { fontCharacter: '\\\\eb10' });\n\tpublic static readonly key = new Codicon('key', { fontCharacter: '\\\\eb11' });\n\tpublic static readonly law = new Codicon('law', { fontCharacter: '\\\\eb12' });\n\tpublic static readonly lightbulbAutofix = new Codicon('lightbulb-autofix', { fontCharacter: '\\\\eb13' });\n\tpublic static readonly linkExternal = new Codicon('link-external', { fontCharacter: '\\\\eb14' });\n\tpublic static readonly link = new Codicon('link', { fontCharacter: '\\\\eb15' });\n\tpublic static readonly listOrdered = new Codicon('list-ordered', { fontCharacter: '\\\\eb16' });\n\tpublic static readonly listUnordered = new Codicon('list-unordered', { fontCharacter: '\\\\eb17' });\n\tpublic static readonly liveShare = new Codicon('live-share', { fontCharacter: '\\\\eb18' });\n\tpublic static readonly loading = new Codicon('loading', { fontCharacter: '\\\\eb19' });\n\tpublic static readonly location = new Codicon('location', { fontCharacter: '\\\\eb1a' });\n\tpublic static readonly mailRead = new Codicon('mail-read', { fontCharacter: '\\\\eb1b' });\n\tpublic static readonly mail = new Codicon('mail', { fontCharacter: '\\\\eb1c' });\n\tpublic static readonly markdown = new Codicon('markdown', { fontCharacter: '\\\\eb1d' });\n\tpublic static readonly megaphone = new Codicon('megaphone', { fontCharacter: '\\\\eb1e' });\n\tpublic static readonly mention = new Codicon('mention', { fontCharacter: '\\\\eb1f' });\n\tpublic static readonly milestone = new Codicon('milestone', { fontCharacter: '\\\\eb20' });\n\tpublic static readonly mortarBoard = new Codicon('mortar-board', { fontCharacter: '\\\\eb21' });\n\tpublic static readonly move = new Codicon('move', { fontCharacter: '\\\\eb22' });\n\tpublic static readonly multipleWindows = new Codicon('multiple-windows', { fontCharacter: '\\\\eb23' });\n\tpublic static readonly mute = new Codicon('mute', { fontCharacter: '\\\\eb24' });\n\tpublic static readonly noNewline = new Codicon('no-newline', { fontCharacter: '\\\\eb25' });\n\tpublic static readonly note = new Codicon('note', { fontCharacter: '\\\\eb26' });\n\tpublic static readonly octoface = new Codicon('octoface', { fontCharacter: '\\\\eb27' });\n\tpublic static readonly openPreview = new Codicon('open-preview', { fontCharacter: '\\\\eb28' });\n\tpublic static readonly package_ = new Codicon('package', { fontCharacter: '\\\\eb29' });\n\tpublic static readonly paintcan = new Codicon('paintcan', { fontCharacter: '\\\\eb2a' });\n\tpublic static readonly pin = new Codicon('pin', { fontCharacter: '\\\\eb2b' });\n\tpublic static readonly play = new Codicon('play', { fontCharacter: '\\\\eb2c' });\n\tpublic static readonly run = new Codicon('run', { fontCharacter: '\\\\eb2c' });\n\tpublic static readonly plug = new Codicon('plug', { fontCharacter: '\\\\eb2d' });\n\tpublic static readonly preserveCase = new Codicon('preserve-case', { fontCharacter: '\\\\eb2e' });\n\tpublic static readonly preview = new Codicon('preview', { fontCharacter: '\\\\eb2f' });\n\tpublic static readonly project = new Codicon('project', { fontCharacter: '\\\\eb30' });\n\tpublic static readonly pulse = new Codicon('pulse', { fontCharacter: '\\\\eb31' });\n\tpublic static readonly question = new Codicon('question', { fontCharacter: '\\\\eb32' });\n\tpublic static readonly quote = new Codicon('quote', { fontCharacter: '\\\\eb33' });\n\tpublic static readonly radioTower = new Codicon('radio-tower', { fontCharacter: '\\\\eb34' });\n\tpublic static readonly reactions = new Codicon('reactions', { fontCharacter: '\\\\eb35' });\n\tpublic static readonly references = new Codicon('references', { fontCharacter: '\\\\eb36' });\n\tpublic static readonly refresh = new Codicon('refresh', { fontCharacter: '\\\\eb37' });\n\tpublic static readonly regex = new Codicon('regex', { fontCharacter: '\\\\eb38' });\n\tpublic static readonly remoteExplorer = new Codicon('remote-explorer', { fontCharacter: '\\\\eb39' });\n\tpublic static readonly remote = new Codicon('remote', { fontCharacter: '\\\\eb3a' });\n\tpublic static readonly remove = new Codicon('remove', { fontCharacter: '\\\\eb3b' });\n\tpublic static readonly replaceAll = new Codicon('replace-all', { fontCharacter: '\\\\eb3c' });\n\tpublic static readonly replace = new Codicon('replace', { fontCharacter: '\\\\eb3d' });\n\tpublic static readonly repoClone = new Codicon('repo-clone', { fontCharacter: '\\\\eb3e' });\n\tpublic static readonly repoForcePush = new Codicon('repo-force-push', { fontCharacter: '\\\\eb3f' });\n\tpublic static readonly repoPull = new Codicon('repo-pull', { fontCharacter: '\\\\eb40' });\n\tpublic static readonly repoPush = new Codicon('repo-push', { fontCharacter: '\\\\eb41' });\n\tpublic static readonly report = new Codicon('report', { fontCharacter: '\\\\eb42' });\n\tpublic static readonly requestChanges = new Codicon('request-changes', { fontCharacter: '\\\\eb43' });\n\tpublic static readonly rocket = new Codicon('rocket', { fontCharacter: '\\\\eb44' });\n\tpublic static readonly rootFolderOpened = new Codicon('root-folder-opened', { fontCharacter: '\\\\eb45' });\n\tpublic static readonly rootFolder = new Codicon('root-folder', { fontCharacter: '\\\\eb46' });\n\tpublic static readonly rss = new Codicon('rss', { fontCharacter: '\\\\eb47' });\n\tpublic static readonly ruby = new Codicon('ruby', { fontCharacter: '\\\\eb48' });\n\tpublic static readonly saveAll = new Codicon('save-all', { fontCharacter: '\\\\eb49' });\n\tpublic static readonly saveAs = new Codicon('save-as', { fontCharacter: '\\\\eb4a' });\n\tpublic static readonly save = new Codicon('save', { fontCharacter: '\\\\eb4b' });\n\tpublic static readonly screenFull = new Codicon('screen-full', { fontCharacter: '\\\\eb4c' });\n\tpublic static readonly screenNormal = new Codicon('screen-normal', { fontCharacter: '\\\\eb4d' });\n\tpublic static readonly searchStop = new Codicon('search-stop', { fontCharacter: '\\\\eb4e' });\n\tpublic static readonly server = new Codicon('server', { fontCharacter: '\\\\eb50' });\n\tpublic static readonly settingsGear = new Codicon('settings-gear', { fontCharacter: '\\\\eb51' });\n\tpublic static readonly settings = new Codicon('settings', { fontCharacter: '\\\\eb52' });\n\tpublic static readonly shield = new Codicon('shield', { fontCharacter: '\\\\eb53' });\n\tpublic static readonly smiley = new Codicon('smiley', { fontCharacter: '\\\\eb54' });\n\tpublic static readonly sortPrecedence = new Codicon('sort-precedence', { fontCharacter: '\\\\eb55' });\n\tpublic static readonly splitHorizontal = new Codicon('split-horizontal', { fontCharacter: '\\\\eb56' });\n\tpublic static readonly splitVertical = new Codicon('split-vertical', { fontCharacter: '\\\\eb57' });\n\tpublic static readonly squirrel = new Codicon('squirrel', { fontCharacter: '\\\\eb58' });\n\tpublic static readonly starFull = new Codicon('star-full', { fontCharacter: '\\\\eb59' });\n\tpublic static readonly starHalf = new Codicon('star-half', { fontCharacter: '\\\\eb5a' });\n\tpublic static readonly symbolClass = new Codicon('symbol-class', { fontCharacter: '\\\\eb5b' });\n\tpublic static readonly symbolColor = new Codicon('symbol-color', { fontCharacter: '\\\\eb5c' });\n\tpublic static readonly symbolConstant = new Codicon('symbol-constant', { fontCharacter: '\\\\eb5d' });\n\tpublic static readonly symbolEnumMember = new Codicon('symbol-enum-member', { fontCharacter: '\\\\eb5e' });\n\tpublic static readonly symbolField = new Codicon('symbol-field', { fontCharacter: '\\\\eb5f' });\n\tpublic static readonly symbolFile = new Codicon('symbol-file', { fontCharacter: '\\\\eb60' });\n\tpublic static readonly symbolInterface = new Codicon('symbol-interface', { fontCharacter: '\\\\eb61' });\n\tpublic static readonly symbolKeyword = new Codicon('symbol-keyword', { fontCharacter: '\\\\eb62' });\n\tpublic static readonly symbolMisc = new Codicon('symbol-misc', { fontCharacter: '\\\\eb63' });\n\tpublic static readonly symbolOperator = new Codicon('symbol-operator', { fontCharacter: '\\\\eb64' });\n\tpublic static readonly symbolProperty = new Codicon('symbol-property', { fontCharacter: '\\\\eb65' });\n\tpublic static readonly wrench = new Codicon('wrench', { fontCharacter: '\\\\eb65' });\n\tpublic static readonly wrenchSubaction = new Codicon('wrench-subaction', { fontCharacter: '\\\\eb65' });\n\tpublic static readonly symbolSnippet = new Codicon('symbol-snippet', { fontCharacter: '\\\\eb66' });\n\tpublic static readonly tasklist = new Codicon('tasklist', { fontCharacter: '\\\\eb67' });\n\tpublic static readonly telescope = new Codicon('telescope', { fontCharacter: '\\\\eb68' });\n\tpublic static readonly textSize = new Codicon('text-size', { fontCharacter: '\\\\eb69' });\n\tpublic static readonly threeBars = new Codicon('three-bars', { fontCharacter: '\\\\eb6a' });\n\tpublic static readonly thumbsdown = new Codicon('thumbsdown', { fontCharacter: '\\\\eb6b' });\n\tpublic static readonly thumbsup = new Codicon('thumbsup', { fontCharacter: '\\\\eb6c' });\n\tpublic static readonly tools = new Codicon('tools', { fontCharacter: '\\\\eb6d' });\n\tpublic static readonly triangleDown = new Codicon('triangle-down', { fontCharacter: '\\\\eb6e' });\n\tpublic static readonly triangleLeft = new Codicon('triangle-left', { fontCharacter: '\\\\eb6f' });\n\tpublic static readonly triangleRight = new Codicon('triangle-right', { fontCharacter: '\\\\eb70' });\n\tpublic static readonly triangleUp = new Codicon('triangle-up', { fontCharacter: '\\\\eb71' });\n\tpublic static readonly twitter = new Codicon('twitter', { fontCharacter: '\\\\eb72' });\n\tpublic static readonly unfold = new Codicon('unfold', { fontCharacter: '\\\\eb73' });\n\tpublic static readonly unlock = new Codicon('unlock', { fontCharacter: '\\\\eb74' });\n\tpublic static readonly unmute = new Codicon('unmute', { fontCharacter: '\\\\eb75' });\n\tpublic static readonly unverified = new Codicon('unverified', { fontCharacter: '\\\\eb76' });\n\tpublic static readonly verified = new Codicon('verified', { fontCharacter: '\\\\eb77' });\n\tpublic static readonly versions = new Codicon('versions', { fontCharacter: '\\\\eb78' });\n\tpublic static readonly vmActive = new Codicon('vm-active', { fontCharacter: '\\\\eb79' });\n\tpublic static readonly vmOutline = new Codicon('vm-outline', { fontCharacter: '\\\\eb7a' });\n\tpublic static readonly vmRunning = new Codicon('vm-running', { fontCharacter: '\\\\eb7b' });\n\tpublic static readonly watch = new Codicon('watch', { fontCharacter: '\\\\eb7c' });\n\tpublic static readonly whitespace = new Codicon('whitespace', { fontCharacter: '\\\\eb7d' });\n\tpublic static readonly wholeWord = new Codicon('whole-word', { fontCharacter: '\\\\eb7e' });\n\tpublic static readonly window = new Codicon('window', { fontCharacter: '\\\\eb7f' });\n\tpublic static readonly wordWrap = new Codicon('word-wrap', { fontCharacter: '\\\\eb80' });\n\tpublic static readonly zoomIn = new Codicon('zoom-in', { fontCharacter: '\\\\eb81' });\n\tpublic static readonly zoomOut = new Codicon('zoom-out', { fontCharacter: '\\\\eb82' });\n\tpublic static readonly listFilter = new Codicon('list-filter', { fontCharacter: '\\\\eb83' });\n\tpublic static readonly listFlat = new Codicon('list-flat', { fontCharacter: '\\\\eb84' });\n\tpublic static readonly listSelection = new Codicon('list-selection', { fontCharacter: '\\\\eb85' });\n\tpublic static readonly selection = new Codicon('selection', { fontCharacter: '\\\\eb85' });\n\tpublic static readonly listTree = new Codicon('list-tree', { fontCharacter: '\\\\eb86' });\n\tpublic static readonly debugBreakpointFunctionUnverified = new Codicon('debug-breakpoint-function-unverified', { fontCharacter: '\\\\eb87' });\n\tpublic static readonly debugBreakpointFunction = new Codicon('debug-breakpoint-function', { fontCharacter: '\\\\eb88' });\n\tpublic static readonly debugBreakpointFunctionDisabled = new Codicon('debug-breakpoint-function-disabled', { fontCharacter: '\\\\eb88' });\n\tpublic static readonly debugStackframeActive = new Codicon('debug-stackframe-active', { fontCharacter: '\\\\eb89' });\n\tpublic static readonly debugStackframeDot = new Codicon('debug-stackframe-dot', { fontCharacter: '\\\\eb8a' });\n\tpublic static readonly debugStackframe = new Codicon('debug-stackframe', { fontCharacter: '\\\\eb8b' });\n\tpublic static readonly debugStackframeFocused = new Codicon('debug-stackframe-focused', { fontCharacter: '\\\\eb8b' });\n\tpublic static readonly debugBreakpointUnsupported = new Codicon('debug-breakpoint-unsupported', { fontCharacter: '\\\\eb8c' });\n\tpublic static readonly symbolString = new Codicon('symbol-string', { fontCharacter: '\\\\eb8d' });\n\tpublic static readonly debugReverseContinue = new Codicon('debug-reverse-continue', { fontCharacter: '\\\\eb8e' });\n\tpublic static readonly debugStepBack = new Codicon('debug-step-back', { fontCharacter: '\\\\eb8f' });\n\tpublic static readonly debugRestartFrame = new Codicon('debug-restart-frame', { fontCharacter: '\\\\eb90' });\n\tpublic static readonly callIncoming = new Codicon('call-incoming', { fontCharacter: '\\\\eb92' });\n\tpublic static readonly callOutgoing = new Codicon('call-outgoing', { fontCharacter: '\\\\eb93' });\n\tpublic static readonly menu = new Codicon('menu', { fontCharacter: '\\\\eb94' });\n\tpublic static readonly expandAll = new Codicon('expand-all', { fontCharacter: '\\\\eb95' });\n\tpublic static readonly feedback = new Codicon('feedback', { fontCharacter: '\\\\eb96' });\n\tpublic static readonly groupByRefType = new Codicon('group-by-ref-type', { fontCharacter: '\\\\eb97' });\n\tpublic static readonly ungroupByRefType = new Codicon('ungroup-by-ref-type', { fontCharacter: '\\\\eb98' });\n\tpublic static readonly account = new Codicon('account', { fontCharacter: '\\\\eb99' });\n\tpublic static readonly bellDot = new Codicon('bell-dot', { fontCharacter: '\\\\eb9a' });\n\tpublic static readonly debugConsole = new Codicon('debug-console', { fontCharacter: '\\\\eb9b' });\n\tpublic static readonly library = new Codicon('library', { fontCharacter: '\\\\eb9c' });\n\tpublic static readonly output = new Codicon('output', { fontCharacter: '\\\\eb9d' });\n\tpublic static readonly runAll = new Codicon('run-all', { fontCharacter: '\\\\eb9e' });\n\tpublic static readonly syncIgnored = new Codicon('sync-ignored', { fontCharacter: '\\\\eb9f' });\n\tpublic static readonly pinned = new Codicon('pinned', { fontCharacter: '\\\\eba0' });\n\tpublic static readonly githubInverted = new Codicon('github-inverted', { fontCharacter: '\\\\eba1' });\n\tpublic static readonly debugAlt = new Codicon('debug-alt', { fontCharacter: '\\\\eb91' });\n\tpublic static readonly serverProcess = new Codicon('server-process', { fontCharacter: '\\\\eba2' });\n\tpublic static readonly serverEnvironment = new Codicon('server-environment', { fontCharacter: '\\\\eba3' });\n\tpublic static readonly pass = new Codicon('pass', { fontCharacter: '\\\\eba4' });\n\tpublic static readonly stopCircle = new Codicon('stop-circle', { fontCharacter: '\\\\eba5' });\n\tpublic static readonly playCircle = new Codicon('play-circle', { fontCharacter: '\\\\eba6' });\n\tpublic static readonly record = new Codicon('record', { fontCharacter: '\\\\eba7' });\n\tpublic static readonly debugAltSmall = new Codicon('debug-alt-small', { fontCharacter: '\\\\eba8' });\n\tpublic static readonly vmConnect = new Codicon('vm-connect', { fontCharacter: '\\\\eba9' });\n\tpublic static readonly cloud = new Codicon('cloud', { fontCharacter: '\\\\ebaa' });\n\tpublic static readonly merge = new Codicon('merge', { fontCharacter: '\\\\ebab' });\n\tpublic static readonly exportIcon = new Codicon('export', { fontCharacter: '\\\\ebac' });\n\tpublic static readonly graphLeft = new Codicon('graph-left', { fontCharacter: '\\\\ebad' });\n\tpublic static readonly magnet = new Codicon('magnet', { fontCharacter: '\\\\ebae' });\n\tpublic static readonly notebook = new Codicon('notebook', { fontCharacter: '\\\\ebaf' });\n\tpublic static readonly redo = new Codicon('redo', { fontCharacter: '\\\\ebb0' });\n\tpublic static readonly checkAll = new Codicon('check-all', { fontCharacter: '\\\\ebb1' });\n\tpublic static readonly pinnedDirty = new Codicon('pinned-dirty', { fontCharacter: '\\\\ebb2' });\n\tpublic static readonly passFilled = new Codicon('pass-filled', { fontCharacter: '\\\\ebb3' });\n\tpublic static readonly circleLargeFilled = new Codicon('circle-large-filled', { fontCharacter: '\\\\ebb4' });\n\tpublic static readonly circleLargeOutline = new Codicon('circle-large-outline', { fontCharacter: '\\\\ebb5' });\n\tpublic static readonly combine = new Codicon('combine', { fontCharacter: '\\\\ebb6' });\n\tpublic static readonly gather = new Codicon('gather', { fontCharacter: '\\\\ebb6' });\n\tpublic static readonly table = new Codicon('table', { fontCharacter: '\\\\ebb7' });\n\tpublic static readonly variableGroup = new Codicon('variable-group', { fontCharacter: '\\\\ebb8' });\n\tpublic static readonly typeHierarchy = new Codicon('type-hierarchy', { fontCharacter: '\\\\ebb9' });\n\tpublic static readonly typeHierarchySub = new Codicon('type-hierarchy-sub', { fontCharacter: '\\\\ebba' });\n\tpublic static readonly typeHierarchySuper = new Codicon('type-hierarchy-super', { fontCharacter: '\\\\ebbb' });\n\tpublic static readonly gitPullRequestCreate = new Codicon('git-pull-request-create', { fontCharacter: '\\\\ebbc' });\n\tpublic static readonly runAbove = new Codicon('run-above', { fontCharacter: '\\\\ebbd' });\n\tpublic static readonly runBelow = new Codicon('run-below', { fontCharacter: '\\\\ebbe' });\n\tpublic static readonly notebookTemplate = new Codicon('notebook-template', { fontCharacter: '\\\\ebbf' });\n\tpublic static readonly debugRerun = new Codicon('debug-rerun', { fontCharacter: '\\\\ebc0' });\n\tpublic static readonly workspaceTrusted = new Codicon('workspace-trusted', { fontCharacter: '\\\\ebc1' });\n\tpublic static readonly workspaceUntrusted = new Codicon('workspace-untrusted', { fontCharacter: '\\\\ebc2' });\n\tpublic static readonly workspaceUnspecified = new Codicon('workspace-unspecified', { fontCharacter: '\\\\ebc3' });\n\tpublic static readonly terminalCmd = new Codicon('terminal-cmd', { fontCharacter: '\\\\ebc4' });\n\tpublic static readonly terminalDebian = new Codicon('terminal-debian', { fontCharacter: '\\\\ebc5' });\n\tpublic static readonly terminalLinux = new Codicon('terminal-linux', { fontCharacter: '\\\\ebc6' });\n\tpublic static readonly terminalPowershell = new Codicon('terminal-powershell', { fontCharacter: '\\\\ebc7' });\n\tpublic static readonly terminalTmux = new Codicon('terminal-tmux', { fontCharacter: '\\\\ebc8' });\n\tpublic static readonly terminalUbuntu = new Codicon('terminal-ubuntu', { fontCharacter: '\\\\ebc9' });\n\tpublic static readonly terminalBash = new Codicon('terminal-bash', { fontCharacter: '\\\\ebca' });\n\tpublic static readonly arrowSwap = new Codicon('arrow-swap', { fontCharacter: '\\\\ebcb' });\n\tpublic static readonly copy = new Codicon('copy', { fontCharacter: '\\\\ebcc' });\n\tpublic static readonly personAdd = new Codicon('person-add', { fontCharacter: '\\\\ebcd' });\n\tpublic static readonly filterFilled = new Codicon('filter-filled', { fontCharacter: '\\\\ebce' });\n\tpublic static readonly wand = new Codicon('wand', { fontCharacter: '\\\\ebcf' });\n\tpublic static readonly debugLineByLine = new Codicon('debug-line-by-line', { fontCharacter: '\\\\ebd0' });\n\tpublic static readonly inspect = new Codicon('inspect', { fontCharacter: '\\\\ebd1' });\n\tpublic static readonly layers = new Codicon('layers', { fontCharacter: '\\\\ebd2' });\n\tpublic static readonly layersDot = new Codicon('layers-dot', { fontCharacter: '\\\\ebd3' });\n\tpublic static readonly layersActive = new Codicon('layers-active', { fontCharacter: '\\\\ebd4' });\n\tpublic static readonly compass = new Codicon('compass', { fontCharacter: '\\\\ebd5' });\n\tpublic static readonly compassDot = new Codicon('compass-dot', { fontCharacter: '\\\\ebd6' });\n\tpublic static readonly compassActive = new Codicon('compass-active', { fontCharacter: '\\\\ebd7' });\n\tpublic static readonly azure = new Codicon('azure', { fontCharacter: '\\\\ebd8' });\n\tpublic static readonly issueDraft = new Codicon('issue-draft', { fontCharacter: '\\\\ebd9' });\n\tpublic static readonly gitPullRequestClosed = new Codicon('git-pull-request-closed', { fontCharacter: '\\\\ebda' });\n\tpublic static readonly gitPullRequestDraft = new Codicon('git-pull-request-draft', { fontCharacter: '\\\\ebdb' });\n\tpublic static readonly debugAll = new Codicon('debug-all', { fontCharacter: '\\\\ebdc' });\n\tpublic static readonly debugCoverage = new Codicon('debug-coverage', { fontCharacter: '\\\\ebdd' });\n\tpublic static readonly runErrors = new Codicon('run-errors', { fontCharacter: '\\\\ebde' });\n\tpublic static readonly folderLibrary = new Codicon('folder-library', { fontCharacter: '\\\\ebdf' });\n\tpublic static readonly debugContinueSmall = new Codicon('debug-continue-small', { fontCharacter: '\\\\ebe0' });\n\tpublic static readonly beakerStop = new Codicon('beaker-stop', { fontCharacter: '\\\\ebe1' });\n\tpublic static readonly graphLine = new Codicon('graph-line', { fontCharacter: '\\\\ebe2' });\n\tpublic static readonly graphScatter = new Codicon('graph-scatter', { fontCharacter: '\\\\ebe3' });\n\tpublic static readonly pieChart = new Codicon('pie-chart', { fontCharacter: '\\\\ebe4' });\n\tpublic static readonly bracket = new Codicon('bracket', Codicon.json.definition);\n\tpublic static readonly bracketDot = new Codicon('bracket-dot', { fontCharacter: '\\\\ebe5' });\n\tpublic static readonly bracketError = new Codicon('bracket-error', { fontCharacter: '\\\\ebe6' });\n\tpublic static readonly lockSmall = new Codicon('lock-small', { fontCharacter: '\\\\ebe7' });\n\tpublic static readonly azureDevops = new Codicon('azure-devops', { fontCharacter: '\\\\ebe8' });\n\tpublic static readonly verifiedFilled = new Codicon('verified-filled', { fontCharacter: '\\\\ebe9' });\n\tpublic static readonly newLine = new Codicon('newline', { fontCharacter: '\\\\ebea' });\n\tpublic static readonly layout = new Codicon('layout', { fontCharacter: '\\\\ebeb' });\n\n\t// derived icons, that could become separate icons\n\n\tpublic static readonly dialogError = new Codicon('dialog-error', Codicon.error.definition);\n\tpublic static readonly dialogWarning = new Codicon('dialog-warning', Codicon.warning.definition);\n\tpublic static readonly dialogInfo = new Codicon('dialog-info', Codicon.info.definition);\n\tpublic static readonly dialogClose = new Codicon('dialog-close', Codicon.close.definition);\n\n\tpublic static readonly treeItemExpanded = new Codicon('tree-item-expanded', Codicon.chevronDown.definition); // collapsed is done with rotation\n\n\tpublic static readonly treeFilterOnTypeOn = new Codicon('tree-filter-on-type-on', Codicon.listFilter.definition);\n\tpublic static readonly treeFilterOnTypeOff = new Codicon('tree-filter-on-type-off', Codicon.listSelection.definition);\n\tpublic static readonly treeFilterClear = new Codicon('tree-filter-clear', Codicon.close.definition);\n\n\tpublic static readonly treeItemLoading = new Codicon('tree-item-loading', Codicon.loading.definition);\n\n\tpublic static readonly menuSelection = new Codicon('menu-selection', Codicon.check.definition);\n\tpublic static readonly menuSubmenu = new Codicon('menu-submenu', Codicon.chevronRight.definition);\n\n\tpublic static readonly menuBarMore = new Codicon('menubar-more', Codicon.more.definition);\n\n\tpublic static readonly scrollbarButtonLeft = new Codicon('scrollbar-button-left', Codicon.triangleLeft.definition);\n\tpublic static readonly scrollbarButtonRight = new Codicon('scrollbar-button-right', Codicon.triangleRight.definition);\n\n\tpublic static readonly scrollbarButtonUp = new Codicon('scrollbar-button-up', Codicon.triangleUp.definition);\n\tpublic static readonly scrollbarButtonDown = new Codicon('scrollbar-button-down', Codicon.triangleDown.definition);\n\n\tpublic static readonly toolBarMore = new Codicon('toolbar-more', Codicon.more.definition);\n\n\tpublic static readonly quickInputBack = new Codicon('quick-input-back', Codicon.arrowLeft.definition);\n}\n\nexport function getClassNamesArray(id: string, modifier?: string) {\n\tconst classNames = ['codicon', 'codicon-' + id];\n\tif (modifier) {\n\t\tclassNames.push('codicon-modifier-' + modifier);\n\t}\n\treturn classNames;\n}\n\nexport interface CSSIcon {\n\treadonly id: string;\n}\n\n\nexport namespace CSSIcon {\n\texport const iconNameSegment = '[A-Za-z0-9]+';\n\texport const iconNameExpression = '[A-Za-z0-9-]+';\n\texport const iconModifierExpression = '~[A-Za-z]+';\n\texport const iconNameCharacter = '[A-Za-z0-9~-]';\n\n\tconst cssIconIdRegex = new RegExp(`^(${iconNameExpression})(${iconModifierExpression})?$`);\n\n\texport function asClassNameArray(icon: CSSIcon): string[] {\n\t\tif (icon instanceof Codicon) {\n\t\t\treturn ['codicon', 'codicon-' + icon.id];\n\t\t}\n\t\tconst match = cssIconIdRegex.exec(icon.id);\n\t\tif (!match) {\n\t\t\treturn asClassNameArray(Codicon.error);\n\t\t}\n\t\tlet [, id, modifier] = match;\n\t\tconst classNames = ['codicon', 'codicon-' + id];\n\t\tif (modifier) {\n\t\t\tclassNames.push('codicon-modifier-' + modifier.substr(1));\n\t\t}\n\t\treturn classNames;\n\t}\n\n\texport function asClassName(icon: CSSIcon): string {\n\t\treturn asClassNameArray(icon).join(' ');\n\t}\n\n\texport function asCSSSelector(icon: CSSIcon): string {\n\t\treturn '.' + asClassNameArray(icon).join('.');\n\t}\n}\n\n\ninterface IconDefinition {\n\tfontCharacter: string;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { DisposableStore, toDisposable } from 'vs/base/common/lifecycle';\n\n/**\n * The payload that flows in readable stream events.\n */\nexport type ReadableStreamEventPayload<T> = T | Error | 'end';\n\nexport interface ReadableStreamEvents<T> {\n\n\t/**\n\t * The 'data' event is emitted whenever the stream is\n\t * relinquishing ownership of a chunk of data to a consumer.\n\t *\n\t * NOTE: PLEASE UNDERSTAND THAT ADDING A DATA LISTENER CAN\n\t * TURN THE STREAM INTO FLOWING MODE. IT IS THEREFOR THE\n\t * LAST LISTENER THAT SHOULD BE ADDED AND NOT THE FIRST\n\t *\n\t * Use `listenStream` as a helper method to listen to\n\t * stream events in the right order.\n\t */\n\ton(event: 'data', callback: (data: T) => void): void;\n\n\t/**\n\t * Emitted when any error occurs.\n\t */\n\ton(event: 'error', callback: (err: Error) => void): void;\n\n\t/**\n\t * The 'end' event is emitted when there is no more data\n\t * to be consumed from the stream. The 'end' event will\n\t * not be emitted unless the data is completely consumed.\n\t */\n\ton(event: 'end', callback: () => void): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * stream for use in native and web environments.\n */\nexport interface ReadableStream<T> extends ReadableStreamEvents<T> {\n\n\t/**\n\t * Stops emitting any events until resume() is called.\n\t */\n\tpause(): void;\n\n\t/**\n\t * Starts emitting events again after pause() was called.\n\t */\n\tresume(): void;\n\n\t/**\n\t * Destroys the stream and stops emitting any event.\n\t */\n\tdestroy(): void;\n\n\t/**\n\t * Allows to remove a listener that was previously added.\n\t */\n\tremoveListener(event: string, callback: Function): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * for use in native and web environments.\n */\nexport interface Readable<T> {\n\n\t/**\n\t * Read data from the underlying source. Will return\n\t * null to indicate that no more data can be read.\n\t */\n\tread(): T | null;\n}\n\n/**\n * A interface that emulates the API shape of a node.js writeable\n * stream for use in native and web environments.\n */\nexport interface WriteableStream<T> extends ReadableStream<T> {\n\n\t/**\n\t * Writing data to the stream will trigger the on('data')\n\t * event listener if the stream is flowing and buffer the\n\t * data otherwise until the stream is flowing.\n\t *\n\t * If a `highWaterMark` is configured and writing to the\n\t * stream reaches this mark, a promise will be returned\n\t * that should be awaited on before writing more data.\n\t * Otherwise there is a risk of buffering a large number\n\t * of data chunks without consumer.\n\t */\n\twrite(data: T): void | Promise<void>;\n\n\t/**\n\t * Signals an error to the consumer of the stream via the\n\t * on('error') handler if the stream is flowing.\n\t *\n\t * NOTE: call `end` to signal that the stream has ended,\n\t * this DOES NOT happen automatically from `error`.\n\t */\n\terror(error: Error): void;\n\n\t/**\n\t * Signals the end of the stream to the consumer. If the\n\t * result is provided, will trigger the on('data') event\n\t * listener if the stream is flowing and buffer the data\n\t * otherwise until the stream is flowing.\n\t */\n\tend(result?: T): void;\n}\n\n/**\n * A stream that has a buffer already read. Returns the original stream\n * that was read as well as the chunks that got read.\n *\n * The `ended` flag indicates if the stream has been fully consumed.\n */\nexport interface ReadableBufferedStream<T> {\n\n\t/**\n\t * The original stream that is being read.\n\t */\n\tstream: ReadableStream<T>;\n\n\t/**\n\t * An array of chunks already read from this stream.\n\t */\n\tbuffer: T[];\n\n\t/**\n\t * Signals if the stream has ended or not. If not, consumers\n\t * should continue to read from the stream until consumed.\n\t */\n\tended: boolean;\n}\n\nexport function isReadableStream<T>(obj: unknown): obj is ReadableStream<T> {\n\tconst candidate = obj as ReadableStream<T> | undefined;\n\tif (!candidate) {\n\t\treturn false;\n\t}\n\n\treturn [candidate.on, candidate.pause, candidate.resume, candidate.destroy].every(fn => typeof fn === 'function');\n}\n\nexport function isReadableBufferedStream<T>(obj: unknown): obj is ReadableBufferedStream<T> {\n\tconst candidate = obj as ReadableBufferedStream<T> | undefined;\n\tif (!candidate) {\n\t\treturn false;\n\t}\n\n\treturn isReadableStream(candidate.stream) && Array.isArray(candidate.buffer) && typeof candidate.ended === 'boolean';\n}\n\nexport interface IReducer<T> {\n\t(data: T[]): T;\n}\n\nexport interface IDataTransformer<Original, Transformed> {\n\t(data: Original): Transformed;\n}\n\nexport interface IErrorTransformer {\n\t(error: Error): Error;\n}\n\nexport interface ITransformer<Original, Transformed> {\n\tdata: IDataTransformer<Original, Transformed>;\n\terror?: IErrorTransformer;\n}\n\nexport function newWriteableStream<T>(reducer: IReducer<T>, options?: WriteableStreamOptions): WriteableStream<T> {\n\treturn new WriteableStreamImpl<T>(reducer, options);\n}\n\nexport interface WriteableStreamOptions {\n\n\t/**\n\t * The number of objects to buffer before WriteableStream#write()\n\t * signals back that the buffer is full. Can be used to reduce\n\t * the memory pressure when the stream is not flowing.\n\t */\n\thighWaterMark?: number;\n}\n\nclass WriteableStreamImpl<T> implements WriteableStream<T> {\n\n\tprivate readonly state = {\n\t\tflowing: false,\n\t\tended: false,\n\t\tdestroyed: false\n\t};\n\n\tprivate readonly buffer = {\n\t\tdata: [] as T[],\n\t\terror: [] as Error[]\n\t};\n\n\tprivate readonly listeners = {\n\t\tdata: [] as { (data: T): void }[],\n\t\terror: [] as { (error: Error): void }[],\n\t\tend: [] as { (): void }[]\n\t};\n\n\tprivate readonly pendingWritePromises: Function[] = [];\n\n\tconstructor(private reducer: IReducer<T>, private options?: WriteableStreamOptions) { }\n\n\tpause(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state.flowing = false;\n\t}\n\n\tresume(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.state.flowing) {\n\t\t\tthis.state.flowing = true;\n\n\t\t\t// emit buffered events\n\t\t\tthis.flowData();\n\t\t\tthis.flowErrors();\n\t\t\tthis.flowEnd();\n\t\t}\n\t}\n\n\twrite(data: T): void | Promise<void> {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the data to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.emitData(data);\n\t\t}\n\n\t\t// not yet flowing: buffer data until flowing\n\t\telse {\n\t\t\tthis.buffer.data.push(data);\n\n\t\t\t// highWaterMark: if configured, signal back when buffer reached limits\n\t\t\tif (typeof this.options?.highWaterMark === 'number' && this.buffer.data.length > this.options.highWaterMark) {\n\t\t\t\treturn new Promise(resolve => this.pendingWritePromises.push(resolve));\n\t\t\t}\n\t\t}\n\t}\n\n\terror(error: Error): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the error to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.emitError(error);\n\t\t}\n\n\t\t// not yet flowing: buffer errors until flowing\n\t\telse {\n\t\t\tthis.buffer.error.push(error);\n\t\t}\n\t}\n\n\tend(result?: T): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// end with data if provided\n\t\tif (typeof result !== 'undefined') {\n\t\t\tthis.write(result);\n\t\t}\n\n\t\t// flowing: send end event to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.emitEnd();\n\n\t\t\tthis.destroy();\n\t\t}\n\n\t\t// not yet flowing: remember state\n\t\telse {\n\t\t\tthis.state.ended = true;\n\t\t}\n\t}\n\n\tprivate emitData(data: T): void {\n\t\tthis.listeners.data.slice(0).forEach(listener => listener(data)); // slice to avoid listener mutation from delivering event\n\t}\n\n\tprivate emitError(error: Error): void {\n\t\tif (this.listeners.error.length === 0) {\n\t\t\tonUnexpectedError(error); // nobody listened to this error so we log it as unexpected\n\t\t} else {\n\t\t\tthis.listeners.error.slice(0).forEach(listener => listener(error)); // slice to avoid listener mutation from delivering event\n\t\t}\n\t}\n\n\tprivate emitEnd(): void {\n\t\tthis.listeners.end.slice(0).forEach(listener => listener()); // slice to avoid listener mutation from delivering event\n\t}\n\n\ton(event: 'data', callback: (data: T) => void): void;\n\ton(event: 'error', callback: (err: Error) => void): void;\n\ton(event: 'end', callback: () => void): void;\n\ton(event: 'data' | 'error' | 'end', callback: (arg0?: any) => void): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tthis.listeners.data.push(callback);\n\n\t\t\t\t// switch into flowing mode as soon as the first 'data'\n\t\t\t\t// listener is added and we are not yet in flowing mode\n\t\t\t\tthis.resume();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tthis.listeners.end.push(callback);\n\n\t\t\t\t// emit 'end' event directly if we are flowing\n\t\t\t\t// and the end has already been reached\n\t\t\t\t//\n\t\t\t\t// finish() when it went through\n\t\t\t\tif (this.state.flowing && this.flowEnd()) {\n\t\t\t\t\tthis.destroy();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tthis.listeners.error.push(callback);\n\n\t\t\t\t// emit buffered 'error' events unless done already\n\t\t\t\t// now that we know that we have at least one listener\n\t\t\t\tif (this.state.flowing) {\n\t\t\t\t\tthis.flowErrors();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tremoveListener(event: string, callback: Function): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet listeners: unknown[] | undefined = undefined;\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tlisteners = this.listeners.data;\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tlisteners = this.listeners.end;\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tlisteners = this.listeners.error;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (listeners) {\n\t\t\tconst index = listeners.indexOf(callback);\n\t\t\tif (index >= 0) {\n\t\t\t\tlisteners.splice(index, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate flowData(): void {\n\t\tif (this.buffer.data.length > 0) {\n\t\t\tconst fullDataBuffer = this.reducer(this.buffer.data);\n\n\t\t\tthis.emitData(fullDataBuffer);\n\n\t\t\tthis.buffer.data.length = 0;\n\n\t\t\t// When the buffer is empty, resolve all pending writers\n\t\t\tconst pendingWritePromises = [...this.pendingWritePromises];\n\t\t\tthis.pendingWritePromises.length = 0;\n\t\t\tpendingWritePromises.forEach(pendingWritePromise => pendingWritePromise());\n\t\t}\n\t}\n\n\tprivate flowErrors(): void {\n\t\tif (this.listeners.error.length > 0) {\n\t\t\tfor (const error of this.buffer.error) {\n\t\t\t\tthis.emitError(error);\n\t\t\t}\n\n\t\t\tthis.buffer.error.length = 0;\n\t\t}\n\t}\n\n\tprivate flowEnd(): boolean {\n\t\tif (this.state.ended) {\n\t\t\tthis.emitEnd();\n\n\t\t\treturn this.listeners.end.length > 0;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tdestroy(): void {\n\t\tif (!this.state.destroyed) {\n\t\t\tthis.state.destroyed = true;\n\t\t\tthis.state.ended = true;\n\n\t\t\tthis.buffer.data.length = 0;\n\t\t\tthis.buffer.error.length = 0;\n\n\t\t\tthis.listeners.data.length = 0;\n\t\t\tthis.listeners.error.length = 0;\n\t\t\tthis.listeners.end.length = 0;\n\n\t\t\tthis.pendingWritePromises.length = 0;\n\t\t}\n\t}\n}\n\n/**\n * Helper to fully read a T readable into a T.\n */\nexport function consumeReadable<T>(readable: Readable<T>, reducer: IReducer<T>): T {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null;\n\twhile ((chunk = readable.read()) !== null) {\n\t\tchunks.push(chunk);\n\t}\n\n\treturn reducer(chunks);\n}\n\n/**\n * Helper to read a T readable up to a maximum of chunks. If the limit is\n * reached, will return a readable instead to ensure all data can still\n * be read.\n */\nexport function peekReadable<T>(readable: Readable<T>, reducer: IReducer<T>, maxChunks: number): T | Readable<T> {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null | undefined = undefined;\n\twhile ((chunk = readable.read()) !== null && chunks.length < maxChunks) {\n\t\tchunks.push(chunk);\n\t}\n\n\t// If the last chunk is null, it means we reached the end of\n\t// the readable and return all the data at once\n\tif (chunk === null && chunks.length > 0) {\n\t\treturn reducer(chunks);\n\t}\n\n\t// Otherwise, we still have a chunk, it means we reached the maxChunks\n\t// value and as such we return a new Readable that first returns\n\t// the existing read chunks and then continues with reading from\n\t// the underlying readable.\n\treturn {\n\t\tread: () => {\n\n\t\t\t// First consume chunks from our array\n\t\t\tif (chunks.length > 0) {\n\t\t\t\treturn chunks.shift()!;\n\t\t\t}\n\n\t\t\t// Then ensure to return our last read chunk\n\t\t\tif (typeof chunk !== 'undefined') {\n\t\t\t\tconst lastReadChunk = chunk;\n\n\t\t\t\t// explicitly use undefined here to indicate that we consumed\n\t\t\t\t// the chunk, which could have either been null or valued.\n\t\t\t\tchunk = undefined;\n\n\t\t\t\treturn lastReadChunk;\n\t\t\t}\n\n\t\t\t// Finally delegate back to the Readable\n\t\t\treturn readable.read();\n\t\t}\n\t};\n}\n\n/**\n * Helper to fully read a T stream into a T or consuming\n * a stream fully, awaiting all the events without caring\n * about the data.\n */\nexport function consumeStream<T>(stream: ReadableStreamEvents<T>, reducer: IReducer<T>): Promise<T>;\nexport function consumeStream(stream: ReadableStreamEvents<unknown>): Promise<undefined>;\nexport function consumeStream<T>(stream: ReadableStreamEvents<T>, reducer?: IReducer<T>): Promise<T | undefined> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst chunks: T[] = [];\n\n\t\tlistenStream(stream, {\n\t\t\tonData: chunk => {\n\t\t\t\tif (reducer) {\n\t\t\t\t\tchunks.push(chunk);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonError: error => {\n\t\t\t\tif (reducer) {\n\t\t\t\t\treject(error);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(undefined);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonEnd: () => {\n\t\t\t\tif (reducer) {\n\t\t\t\t\tresolve(reducer(chunks));\n\t\t\t\t} else {\n\t\t\t\t\tresolve(undefined);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport interface IStreamListener<T> {\n\n\t/**\n\t * The 'data' event is emitted whenever the stream is\n\t * relinquishing ownership of a chunk of data to a consumer.\n\t */\n\tonData(data: T): void;\n\n\t/**\n\t * Emitted when any error occurs.\n\t */\n\tonError(err: Error): void;\n\n\t/**\n\t * The 'end' event is emitted when there is no more data\n\t * to be consumed from the stream. The 'end' event will\n\t * not be emitted unless the data is completely consumed.\n\t */\n\tonEnd(): void;\n}\n\n/**\n * Helper to listen to all events of a T stream in proper order.\n */\nexport function listenStream<T>(stream: ReadableStreamEvents<T>, listener: IStreamListener<T>): void {\n\tstream.on('error', error => listener.onError(error));\n\tstream.on('end', () => listener.onEnd());\n\n\t// Adding the `data` listener will turn the stream\n\t// into flowing mode. As such it is important to\n\t// add this listener last (DO NOT CHANGE!)\n\tstream.on('data', data => listener.onData(data));\n}\n\n/**\n * Helper to peek up to `maxChunks` into a stream. The return type signals if\n * the stream has ended or not. If not, caller needs to add a `data` listener\n * to continue reading.\n */\nexport function peekStream<T>(stream: ReadableStream<T>, maxChunks: number): Promise<ReadableBufferedStream<T>> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst streamListeners = new DisposableStore();\n\t\tconst buffer: T[] = [];\n\n\t\t// Data Listener\n\t\tconst dataListener = (chunk: T) => {\n\n\t\t\t// Add to buffer\n\t\t\tbuffer.push(chunk);\n\n\t\t\t// We reached maxChunks and thus need to return\n\t\t\tif (buffer.length > maxChunks) {\n\n\t\t\t\t// Dispose any listeners and ensure to pause the\n\t\t\t\t// stream so that it can be consumed again by caller\n\t\t\t\tstreamListeners.dispose();\n\t\t\t\tstream.pause();\n\n\t\t\t\treturn resolve({ stream, buffer, ended: false });\n\t\t\t}\n\t\t};\n\n\t\t// Error Listener\n\t\tconst errorListener = (error: Error) => {\n\t\t\treturn reject(error);\n\t\t};\n\n\t\t// End Listener\n\t\tconst endListener = () => {\n\t\t\treturn resolve({ stream, buffer, ended: true });\n\t\t};\n\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('error', errorListener)));\n\t\tstream.on('error', errorListener);\n\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('end', endListener)));\n\t\tstream.on('end', endListener);\n\n\t\t// Important: leave the `data` listener last because\n\t\t// this can turn the stream into flowing mode and we\n\t\t// want `error` events to be received as well.\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('data', dataListener)));\n\t\tstream.on('data', dataListener);\n\t});\n}\n\n/**\n * Helper to create a readable stream from an existing T.\n */\nexport function toStream<T>(t: T, reducer: IReducer<T>): ReadableStream<T> {\n\tconst stream = newWriteableStream<T>(reducer);\n\n\tstream.end(t);\n\n\treturn stream;\n}\n\n/**\n * Helper to create an empty stream\n */\nexport function emptyStream(): ReadableStream<never> {\n\tconst stream = newWriteableStream<never>(() => { throw new Error('not supported'); });\n\tstream.end();\n\n\treturn stream;\n}\n\n/**\n * Helper to convert a T into a Readable<T>.\n */\nexport function toReadable<T>(t: T): Readable<T> {\n\tlet consumed = false;\n\n\treturn {\n\t\tread: () => {\n\t\t\tif (consumed) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconsumed = true;\n\n\t\t\treturn t;\n\t\t}\n\t};\n}\n\n/**\n * Helper to transform a readable stream into another stream.\n */\nexport function transform<Original, Transformed>(stream: ReadableStreamEvents<Original>, transformer: ITransformer<Original, Transformed>, reducer: IReducer<Transformed>): ReadableStream<Transformed> {\n\tconst target = newWriteableStream<Transformed>(reducer);\n\n\tlistenStream(stream, {\n\t\tonData: data => target.write(transformer.data(data)),\n\t\tonError: error => target.error(transformer.error ? transformer.error(error) : error),\n\t\tonEnd: () => target.end()\n\t});\n\n\treturn target;\n}\n\n/**\n * Helper to take an existing readable that will\n * have a prefix injected to the beginning.\n */\nexport function prefixedReadable<T>(prefix: T, readable: Readable<T>, reducer: IReducer<T>): Readable<T> {\n\tlet prefixHandled = false;\n\n\treturn {\n\t\tread: () => {\n\t\t\tconst chunk = readable.read();\n\n\t\t\t// Handle prefix only once\n\t\t\tif (!prefixHandled) {\n\t\t\t\tprefixHandled = true;\n\n\t\t\t\t// If we have also a read-result, make\n\t\t\t\t// sure to reduce it to a single result\n\t\t\t\tif (chunk !== null) {\n\t\t\t\t\treturn reducer([prefix, chunk]);\n\t\t\t\t}\n\n\t\t\t\t// Otherwise, just return prefix directly\n\t\t\t\treturn prefix;\n\t\t\t}\n\n\t\t\treturn chunk;\n\t\t}\n\t};\n}\n\n/**\n * Helper to take an existing stream that will\n * have a prefix injected to the beginning.\n */\nexport function prefixedStream<T>(prefix: T, stream: ReadableStream<T>, reducer: IReducer<T>): ReadableStream<T> {\n\tlet prefixHandled = false;\n\n\tconst target = newWriteableStream<T>(reducer);\n\n\tlistenStream(stream, {\n\t\tonData: data => {\n\n\t\t\t// Handle prefix only once\n\t\t\tif (!prefixHandled) {\n\t\t\t\tprefixHandled = true;\n\n\t\t\t\treturn target.write(reducer([prefix, data]));\n\t\t\t}\n\n\t\t\treturn target.write(data);\n\t\t},\n\t\tonError: error => target.error(error),\n\t\tonEnd: () => {\n\n\t\t\t// Handle prefix only once\n\t\t\tif (!prefixHandled) {\n\t\t\t\tprefixHandled = true;\n\n\t\t\t\ttarget.write(prefix);\n\t\t\t}\n\n\t\t\ttarget.end();\n\t\t}\n\t});\n\n\treturn target;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as streams from 'vs/base/common/stream';\n\ndeclare const Buffer: any;\n\nconst hasBuffer = (typeof Buffer !== 'undefined');\n\nlet textEncoder: TextEncoder | null;\nlet textDecoder: TextDecoder | null;\n\nexport class VSBuffer {\n\n\tstatic alloc(byteLength: number): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.allocUnsafe(byteLength));\n\t\t} else {\n\t\t\treturn new VSBuffer(new Uint8Array(byteLength));\n\t\t}\n\t}\n\n\tstatic wrap(actual: Uint8Array): VSBuffer {\n\t\tif (hasBuffer && !(Buffer.isBuffer(actual))) {\n\t\t\t// https://nodejs.org/dist/latest-v10.x/docs/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length\n\t\t\t// Create a zero-copy Buffer wrapper around the ArrayBuffer pointed to by the Uint8Array\n\t\t\tactual = Buffer.from(actual.buffer, actual.byteOffset, actual.byteLength);\n\t\t}\n\t\treturn new VSBuffer(actual);\n\t}\n\n\tstatic fromString(source: string, options?: { dontUseNodeBuffer?: boolean; }): VSBuffer {\n\t\tconst dontUseNodeBuffer = options?.dontUseNodeBuffer || false;\n\t\tif (!dontUseNodeBuffer && hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.from(source));\n\t\t} else {\n\t\t\tif (!textEncoder) {\n\t\t\t\ttextEncoder = new TextEncoder();\n\t\t\t}\n\t\t\treturn new VSBuffer(textEncoder.encode(source));\n\t\t}\n\t}\n\n\tstatic fromByteArray(source: number[]): VSBuffer {\n\t\tconst result = VSBuffer.alloc(source.length);\n\t\tfor (let i = 0, len = source.length; i < len; i++) {\n\t\t\tresult.buffer[i] = source[i];\n\t\t}\n\t\treturn result;\n\t}\n\n\tstatic concat(buffers: VSBuffer[], totalLength?: number): VSBuffer {\n\t\tif (typeof totalLength === 'undefined') {\n\t\t\ttotalLength = 0;\n\t\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\t\ttotalLength += buffers[i].byteLength;\n\t\t\t}\n\t\t}\n\n\t\tconst ret = VSBuffer.alloc(totalLength);\n\t\tlet offset = 0;\n\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\tconst element = buffers[i];\n\t\t\tret.set(element, offset);\n\t\t\toffset += element.byteLength;\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\treadonly buffer: Uint8Array;\n\treadonly byteLength: number;\n\n\tprivate constructor(buffer: Uint8Array) {\n\t\tthis.buffer = buffer;\n\t\tthis.byteLength = this.buffer.byteLength;\n\t}\n\n\tclone(): VSBuffer {\n\t\tconst result = VSBuffer.alloc(this.byteLength);\n\t\tresult.set(this);\n\t\treturn result;\n\t}\n\n\ttoString(): string {\n\t\tif (hasBuffer) {\n\t\t\treturn this.buffer.toString();\n\t\t} else {\n\t\t\tif (!textDecoder) {\n\t\t\t\ttextDecoder = new TextDecoder();\n\t\t\t}\n\t\t\treturn textDecoder.decode(this.buffer);\n\t\t}\n\t}\n\n\tslice(start?: number, end?: number): VSBuffer {\n\t\t// IMPORTANT: use subarray instead of slice because TypedArray#slice\n\t\t// creates shallow copy and NodeBuffer#slice doesn't. The use of subarray\n\t\t// ensures the same, performance, behaviour.\n\t\treturn new VSBuffer(this.buffer.subarray(start, end));\n\t}\n\n\tset(array: VSBuffer, offset?: number): void;\n\tset(array: Uint8Array, offset?: number): void;\n\tset(array: ArrayBuffer, offset?: number): void;\n\tset(array: ArrayBufferView, offset?: number): void;\n\tset(array: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView, offset?: number): void;\n\tset(array: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView, offset?: number): void {\n\t\tif (array instanceof VSBuffer) {\n\t\t\tthis.buffer.set(array.buffer, offset);\n\t\t} else if (array instanceof Uint8Array) {\n\t\t\tthis.buffer.set(array, offset);\n\t\t} else if (array instanceof ArrayBuffer) {\n\t\t\tthis.buffer.set(new Uint8Array(array), offset);\n\t\t} else if (ArrayBuffer.isView(array)) {\n\t\t\tthis.buffer.set(new Uint8Array(array.buffer, array.byteOffset, array.byteLength), offset);\n\t\t} else {\n\t\t\tthrow new Error(`Unkown argument 'array'`);\n\t\t}\n\t}\n\n\treadUInt32BE(offset: number): number {\n\t\treturn readUInt32BE(this.buffer, offset);\n\t}\n\n\twriteUInt32BE(value: number, offset: number): void {\n\t\twriteUInt32BE(this.buffer, value, offset);\n\t}\n\n\treadUInt32LE(offset: number): number {\n\t\treturn readUInt32LE(this.buffer, offset);\n\t}\n\n\twriteUInt32LE(value: number, offset: number): void {\n\t\twriteUInt32LE(this.buffer, value, offset);\n\t}\n\n\treadUInt8(offset: number): number {\n\t\treturn readUInt8(this.buffer, offset);\n\t}\n\n\twriteUInt8(value: number, offset: number): void {\n\t\twriteUInt8(this.buffer, value, offset);\n\t}\n}\n\nexport function readUInt16LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0)\n\t);\n}\n\nexport function writeUInt16LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n}\n\nexport function readUInt32BE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\tsource[offset] * 2 ** 24\n\t\t+ source[offset + 1] * 2 ** 16\n\t\t+ source[offset + 2] * 2 ** 8\n\t\t+ source[offset + 3]\n\t);\n}\n\nexport function writeUInt32BE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 3] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = value;\n\tvalue = value >>> 8;\n\tdestination[offset] = value;\n}\n\nexport function readUInt32LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0) |\n\t\t((source[offset + 2] << 16) >>> 0) |\n\t\t((source[offset + 3] << 24) >>> 0)\n\t);\n}\n\nexport function writeUInt32LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 3] = (value & 0b11111111);\n}\n\nexport function readUInt8(source: Uint8Array, offset: number): number {\n\treturn source[offset];\n}\n\nexport function writeUInt8(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset] = value;\n}\n\nexport interface VSBufferReadable extends streams.Readable<VSBuffer> { }\n\nexport interface VSBufferReadableStream extends streams.ReadableStream<VSBuffer> { }\n\nexport interface VSBufferWriteableStream extends streams.WriteableStream<VSBuffer> { }\n\nexport interface VSBufferReadableBufferedStream extends streams.ReadableBufferedStream<VSBuffer> { }\n\nexport function readableToBuffer(readable: VSBufferReadable): VSBuffer {\n\treturn streams.consumeReadable<VSBuffer>(readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function bufferToReadable(buffer: VSBuffer): VSBufferReadable {\n\treturn streams.toReadable<VSBuffer>(buffer);\n}\n\nexport function streamToBuffer(stream: streams.ReadableStream<VSBuffer>): Promise<VSBuffer> {\n\treturn streams.consumeStream<VSBuffer>(stream, chunks => VSBuffer.concat(chunks));\n}\n\nexport async function bufferedStreamToBuffer(bufferedStream: streams.ReadableBufferedStream<VSBuffer>): Promise<VSBuffer> {\n\tif (bufferedStream.ended) {\n\t\treturn VSBuffer.concat(bufferedStream.buffer);\n\t}\n\n\treturn VSBuffer.concat([\n\n\t\t// Include already read chunks...\n\t\t...bufferedStream.buffer,\n\n\t\t// ...and all additional chunks\n\t\tawait streamToBuffer(bufferedStream.stream)\n\t]);\n}\n\nexport function bufferToStream(buffer: VSBuffer): streams.ReadableStream<VSBuffer> {\n\treturn streams.toStream<VSBuffer>(buffer, chunks => VSBuffer.concat(chunks));\n}\n\nexport function streamToBufferReadableStream(stream: streams.ReadableStreamEvents<Uint8Array | string>): streams.ReadableStream<VSBuffer> {\n\treturn streams.transform<Uint8Array | string, VSBuffer>(stream, { data: data => typeof data === 'string' ? VSBuffer.fromString(data) : VSBuffer.wrap(data) }, chunks => VSBuffer.concat(chunks));\n}\n\nexport function newWriteableBufferStream(options?: streams.WriteableStreamOptions): streams.WriteableStream<VSBuffer> {\n\treturn streams.newWriteableStream<VSBuffer>(chunks => VSBuffer.concat(chunks), options);\n}\n\nexport function prefixedBufferReadable(prefix: VSBuffer, readable: VSBufferReadable): VSBufferReadable {\n\treturn streams.prefixedReadable(prefix, readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function prefixedBufferStream(prefix: VSBuffer, stream: VSBufferReadableStream): VSBufferReadableStream {\n\treturn streams.prefixedStream(prefix, stream, chunks => VSBuffer.concat(chunks));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport * as platform from 'vs/base/common/platform';\nimport { Constants } from 'vs/base/common/uint';\n\nexport function isFalsyOrWhitespace(str: string | undefined): boolean {\n\tif (!str || typeof str !== 'string') {\n\t\treturn true;\n\t}\n\treturn str.trim().length === 0;\n}\n\nconst _formatRegexp = /{(\\d+)}/g;\n\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value: string, ...args: any[]): string {\n\tif (args.length === 0) {\n\t\treturn value;\n\t}\n\treturn value.replace(_formatRegexp, function (match, group) {\n\t\tconst idx = parseInt(group, 10);\n\t\treturn isNaN(idx) || idx < 0 || idx >= args.length ?\n\t\t\tmatch :\n\t\t\targs[idx];\n\t});\n}\n\nconst _format2Regexp = /{([^}]+)}/g;\n\n/**\n * Helper to create a string from a template and a string record.\n * Similar to `format` but with objects instead of positional arguments.\n */\nexport function format2(template: string, values: Record<string, unknown>): string {\n\treturn template.replace(_format2Regexp, (match, group) => (values[group] ?? match) as string);\n}\n\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html: string): string {\n\treturn html.replace(/[<>&]/g, function (match) {\n\t\tswitch (match) {\n\t\t\tcase '<': return '&lt;';\n\t\t\tcase '>': return '&gt;';\n\t\t\tcase '&': return '&amp;';\n\t\t\tdefault: return match;\n\t\t}\n\t});\n}\n\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value: string): string {\n\treturn value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n\n/**\n * Counts how often `character` occurs inside `value`.\n */\nexport function count(value: string, character: string): number {\n\tlet result = 0;\n\tconst ch = character.charCodeAt(0);\n\tfor (let i = value.length - 1; i >= 0; i--) {\n\t\tif (value.charCodeAt(i) === ch) {\n\t\t\tresult++;\n\t\t}\n\t}\n\treturn result;\n}\n\nexport function truncate(value: string, maxLength: number, suffix = '…'): string {\n\tif (value.length <= maxLength) {\n\t\treturn value;\n\t}\n\n\treturn `${value.substr(0, maxLength)}${suffix}`;\n}\n\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack: string, needle: string = ' '): string {\n\tconst trimmed = ltrim(haystack, needle);\n\treturn rtrim(trimmed, needle);\n}\n\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length;\n\tif (needleLen === 0 || haystack.length === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = 0;\n\n\twhile (haystack.indexOf(needle, offset) === offset) {\n\t\toffset = offset + needleLen;\n\t}\n\treturn haystack.substring(offset);\n}\n\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length,\n\t\thaystackLen = haystack.length;\n\n\tif (needleLen === 0 || haystackLen === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = haystackLen,\n\t\tidx = -1;\n\n\twhile (true) {\n\t\tidx = haystack.lastIndexOf(needle, offset - 1);\n\t\tif (idx === -1 || idx + needleLen !== offset) {\n\t\t\tbreak;\n\t\t}\n\t\tif (idx === 0) {\n\t\t\treturn '';\n\t\t}\n\t\toffset = idx;\n\t}\n\n\treturn haystack.substring(0, offset);\n}\n\nexport function convertSimple2RegExpPattern(pattern: string): string {\n\treturn pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n\nexport function stripWildcards(pattern: string): string {\n\treturn pattern.replace(/\\*/g, '');\n}\n\nexport interface RegExpOptions {\n\tmatchCase?: boolean;\n\twholeWord?: boolean;\n\tmultiline?: boolean;\n\tglobal?: boolean;\n\tunicode?: boolean;\n}\n\nexport function createRegExp(searchString: string, isRegex: boolean, options: RegExpOptions = {}): RegExp {\n\tif (!searchString) {\n\t\tthrow new Error('Cannot create regex from empty string');\n\t}\n\tif (!isRegex) {\n\t\tsearchString = escapeRegExpCharacters(searchString);\n\t}\n\tif (options.wholeWord) {\n\t\tif (!/\\B/.test(searchString.charAt(0))) {\n\t\t\tsearchString = '\\\\b' + searchString;\n\t\t}\n\t\tif (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n\t\t\tsearchString = searchString + '\\\\b';\n\t\t}\n\t}\n\tlet modifiers = '';\n\tif (options.global) {\n\t\tmodifiers += 'g';\n\t}\n\tif (!options.matchCase) {\n\t\tmodifiers += 'i';\n\t}\n\tif (options.multiline) {\n\t\tmodifiers += 'm';\n\t}\n\tif (options.unicode) {\n\t\tmodifiers += 'u';\n\t}\n\n\treturn new RegExp(searchString, modifiers);\n}\n\nexport function regExpLeadsToEndlessLoop(regexp: RegExp): boolean {\n\t// Exit early if it's one of these special cases which are meant to match\n\t// against an empty string\n\tif (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n\t\treturn false;\n\t}\n\n\t// We check against an empty string. If the regular expression doesn't advance\n\t// (e.g. ends in an endless loop) it will match an empty string.\n\tconst match = regexp.exec('');\n\treturn !!(match && regexp.lastIndex === 0);\n}\n\nexport function regExpContainsBackreference(regexpValue: string): boolean {\n\treturn !!regexpValue.match(/([^\\\\]|^)(\\\\\\\\)*\\\\\\d+/);\n}\n\nexport function regExpFlags(regexp: RegExp): string {\n\treturn (regexp.global ? 'g' : '')\n\t\t+ (regexp.ignoreCase ? 'i' : '')\n\t\t+ (regexp.multiline ? 'm' : '')\n\t\t+ ((regexp as any /* standalone editor compilation */).unicode ? 'u' : '');\n}\n\nexport function splitLines(str: string): string[] {\n\treturn str.split(/\\r\\n|\\r|\\n/);\n}\n\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str: string): number {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str: string, start: number = 0, end: number = str.length): string {\n\tfor (let i = start; i < end; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn str.substring(start, i);\n\t\t}\n\t}\n\treturn str.substring(start, end);\n}\n\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str: string, startIndex: number = str.length - 1): number {\n\tfor (let i = startIndex; i >= 0; i--) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nexport function compare(a: string, b: string): number {\n\tif (a < b) {\n\t\treturn -1;\n\t} else if (a > b) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function compareSubstring(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\t\tlet codeA = a.charCodeAt(aStart);\n\t\tlet codeB = b.charCodeAt(bStart);\n\t\tif (codeA < codeB) {\n\t\t\treturn -1;\n\t\t} else if (codeA > codeB) {\n\t\t\treturn 1;\n\t\t}\n\t}\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\nexport function compareIgnoreCase(a: string, b: string): number {\n\treturn compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\n\nexport function compareSubstringIgnoreCase(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\n\t\tlet codeA = a.charCodeAt(aStart);\n\t\tlet codeB = b.charCodeAt(bStart);\n\n\t\tif (codeA === codeB) {\n\t\t\t// equal\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (codeA >= 128 || codeB >= 128) {\n\t\t\t// not ASCII letters -> fallback to lower-casing strings\n\t\t\treturn compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n\t\t}\n\n\t\t// mapper lower-case ascii letter onto upper-case varinats\n\t\t// [97-122] (lower ascii) --> [65-90] (upper ascii)\n\t\tif (isLowerAsciiLetter(codeA)) {\n\t\t\tcodeA -= 32;\n\t\t}\n\t\tif (isLowerAsciiLetter(codeB)) {\n\t\t\tcodeB -= 32;\n\t\t}\n\n\t\t// compare both code points\n\t\tconst diff = codeA - codeB;\n\t\tif (diff === 0) {\n\t\t\tcontinue;\n\t\t}\n\n\t\treturn diff;\n\t}\n\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\n\treturn 0;\n}\n\nexport function isLowerAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.a && code <= CharCode.z;\n}\n\nexport function isUpperAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.A && code <= CharCode.Z;\n}\n\nexport function equalsIgnoreCase(a: string, b: string): boolean {\n\treturn a.length === b.length && compareSubstringIgnoreCase(a, b) === 0;\n}\n\nexport function startsWithIgnoreCase(str: string, candidate: string): boolean {\n\tconst candidateLength = candidate.length;\n\tif (candidate.length > str.length) {\n\t\treturn false;\n\t}\n\n\treturn compareSubstringIgnoreCase(str, candidate, 0, candidateLength) === 0;\n}\n\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(i) !== b.charCodeAt(i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tconst aLastIndex = a.length - 1;\n\tconst bLastIndex = b.length - 1;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isHighSurrogate(charCode: number): boolean {\n\treturn (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isLowSurrogate(charCode: number): boolean {\n\treturn (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function computeCodePoint(highSurrogate: number, lowSurrogate: number): number {\n\treturn ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\n\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str: string, len: number, offset: number): number {\n\tconst charCode = str.charCodeAt(offset);\n\tif (isHighSurrogate(charCode) && offset + 1 < len) {\n\t\tconst nextCharCode = str.charCodeAt(offset + 1);\n\t\tif (isLowSurrogate(nextCharCode)) {\n\t\t\treturn computeCodePoint(charCode, nextCharCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str: string, offset: number): number {\n\tconst charCode = str.charCodeAt(offset - 1);\n\tif (isLowSurrogate(charCode) && offset > 1) {\n\t\tconst prevCharCode = str.charCodeAt(offset - 2);\n\t\tif (isHighSurrogate(prevCharCode)) {\n\t\t\treturn computeCodePoint(prevCharCode, charCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\nexport function nextCharLength(str: string, offset: number): number {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst initialOffset = offset;\n\tconst len = str.length;\n\n\tconst initialCodePoint = getNextCodePoint(str, len, offset);\n\toffset += (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\twhile (offset < len) {\n\t\tconst nextCodePoint = getNextCodePoint(str, len, offset);\n\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset += (nextCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t}\n\n\treturn (offset - initialOffset);\n}\n\nexport function prevCharLength(str: string, offset: number): number {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst initialOffset = offset;\n\n\tconst initialCodePoint = getPrevCodePoint(str, offset);\n\toffset -= (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\twhile (offset > 0) {\n\t\tconst prevCodePoint = getPrevCodePoint(str, offset);\n\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset -= (prevCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t}\n\n\treturn (initialOffset - offset);\n}\n\nfunction _getCharContainingOffset(str: string, offset: number): [number, number] {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst len = str.length;\n\tconst initialOffset = offset;\n\tconst initialCodePoint = getNextCodePoint(str, len, offset);\n\tconst initialGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\toffset += (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t// extend to the right\n\tlet graphemeBreakType = initialGraphemeBreakType;\n\twhile (offset < len) {\n\t\tconst nextCodePoint = getNextCodePoint(str, len, offset);\n\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset += (nextCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t}\n\tconst endOffset = offset;\n\n\t// extend to the left\n\toffset = initialOffset;\n\tgraphemeBreakType = initialGraphemeBreakType;\n\twhile (offset > 0) {\n\t\tconst prevCodePoint = getPrevCodePoint(str, offset);\n\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset -= (prevCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t}\n\n\treturn [offset, endOffset];\n}\n\nexport function getCharContainingOffset(str: string, offset: number): [number, number] {\n\tif (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n\t\treturn _getCharContainingOffset(str, offset - 1);\n\t}\n\treturn _getCharContainingOffset(str, offset);\n}\n\n/**\n * Generated using https://github.com/alexdima/unicode-utils/blob/main/rtl-test.js\n */\nconst CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u088E\\u08A0-\\u08C9\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE35\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDD23\\uDE80-\\uDEA9\\uDEAD-\\uDF45\\uDF51-\\uDF81\\uDF86-\\uDFF6]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD4B-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str: string): boolean {\n\treturn CONTAINS_RTL.test(str);\n}\n\n/**\n * Generated using https://github.com/alexdima/unicode-utils/blob/main/emoji-test.js\n */\nconst CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEFC\\uDFE0-\\uDFF0]|\\uD83E[\\uDD00-\\uDDFF\\uDE70-\\uDEF6])/;\n\nexport function containsEmoji(str: string): boolean {\n\treturn CONTAINS_EMOJI.test(str);\n}\n\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str: string): boolean {\n\treturn IS_BASIC_ASCII.test(str);\n}\n\nexport const UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/; // LINE SEPARATOR (LS) or PARAGRAPH SEPARATOR (PS)\n/**\n * Returns true if `str` contains unusual line terminators, like LS or PS\n */\nexport function containsUnusualLineTerminators(str: string): boolean {\n\treturn UNUSUAL_LINE_TERMINATORS.test(str);\n}\n\nexport function containsFullWidthCharacter(str: string): boolean {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tif (isFullWidthCharacter(str.charCodeAt(i))) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport function isFullWidthCharacter(charCode: number): boolean {\n\t// Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n\t// http://jrgraphix.net/research/unicode_blocks.php\n\t//          2E80 - 2EFF   CJK Radicals Supplement\n\t//          2F00 - 2FDF   Kangxi Radicals\n\t//          2FF0 - 2FFF   Ideographic Description Characters\n\t//          3000 - 303F   CJK Symbols and Punctuation\n\t//          3040 - 309F   Hiragana\n\t//          30A0 - 30FF   Katakana\n\t//          3100 - 312F   Bopomofo\n\t//          3130 - 318F   Hangul Compatibility Jamo\n\t//          3190 - 319F   Kanbun\n\t//          31A0 - 31BF   Bopomofo Extended\n\t//          31F0 - 31FF   Katakana Phonetic Extensions\n\t//          3200 - 32FF   Enclosed CJK Letters and Months\n\t//          3300 - 33FF   CJK Compatibility\n\t//          3400 - 4DBF   CJK Unified Ideographs Extension A\n\t//          4DC0 - 4DFF   Yijing Hexagram Symbols\n\t//          4E00 - 9FFF   CJK Unified Ideographs\n\t//          A000 - A48F   Yi Syllables\n\t//          A490 - A4CF   Yi Radicals\n\t//          AC00 - D7AF   Hangul Syllables\n\t// [IGNORE] D800 - DB7F   High Surrogates\n\t// [IGNORE] DB80 - DBFF   High Private Use Surrogates\n\t// [IGNORE] DC00 - DFFF   Low Surrogates\n\t// [IGNORE] E000 - F8FF   Private Use Area\n\t//          F900 - FAFF   CJK Compatibility Ideographs\n\t// [IGNORE] FB00 - FB4F   Alphabetic Presentation Forms\n\t// [IGNORE] FB50 - FDFF   Arabic Presentation Forms-A\n\t// [IGNORE] FE00 - FE0F   Variation Selectors\n\t// [IGNORE] FE20 - FE2F   Combining Half Marks\n\t// [IGNORE] FE30 - FE4F   CJK Compatibility Forms\n\t// [IGNORE] FE50 - FE6F   Small Form Variants\n\t// [IGNORE] FE70 - FEFF   Arabic Presentation Forms-B\n\t//          FF00 - FFEF   Halfwidth and Fullwidth Forms\n\t//               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n\t//               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n\t// [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n\t// [IGNORE] FFF0 - FFFF   Specials\n\treturn (\n\t\t(charCode >= 0x2E80 && charCode <= 0xD7AF)\n\t\t|| (charCode >= 0xF900 && charCode <= 0xFAFF)\n\t\t|| (charCode >= 0xFF01 && charCode <= 0xFF5E)\n\t);\n}\n\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexdima/unicode-utils/blob/main/emoji-test.js\n */\nexport function isEmojiImprecise(x: number): boolean {\n\treturn (\n\t\t(x >= 0x1F1E6 && x <= 0x1F1FF) || (x === 8986) || (x === 8987) || (x === 9200)\n\t\t|| (x === 9203) || (x >= 9728 && x <= 10175) || (x === 11088) || (x === 11093)\n\t\t|| (x >= 127744 && x <= 128591) || (x >= 128640 && x <= 128764)\n\t\t|| (x >= 128992 && x <= 129008) || (x >= 129280 && x <= 129535)\n\t\t|| (x >= 129648 && x <= 129782)\n\t);\n}\n\n/**\n * Given a string and a max length returns a shorted version. Shorting\n * happens at favorable positions - such as whitespace or punctuation characters.\n */\nexport function lcut(text: string, n: number) {\n\tif (text.length < n) {\n\t\treturn text;\n\t}\n\n\tconst re = /\\b/g;\n\tlet i = 0;\n\twhile (re.test(text)) {\n\t\tif (text.length - re.lastIndex < n) {\n\t\t\tbreak;\n\t\t}\n\n\t\ti = re.lastIndex;\n\t\tre.lastIndex += 1;\n\t}\n\n\treturn text.substring(i).replace(/^\\s/, '');\n}\n\n// Escape codes\n// http://en.wikipedia.org/wiki/ANSI_escape_code\nconst EL = /\\x1B\\x5B[12]?K/g; // Erase in line\nconst COLOR_START = /\\x1b\\[\\d+m/g; // Color\nconst COLOR_END = /\\x1b\\[0?m/g; // Color\n\nexport function removeAnsiEscapeCodes(str: string): string {\n\tif (str) {\n\t\tstr = str.replace(EL, '');\n\t\tstr = str.replace(COLOR_START, '');\n\t\tstr = str.replace(COLOR_END, '');\n\t}\n\n\treturn str;\n}\n\n// -- UTF-8 BOM\n\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(CharCode.UTF8_BOM);\n\nexport function startsWithUTF8BOM(str: string): boolean {\n\treturn !!(str && str.length > 0 && str.charCodeAt(0) === CharCode.UTF8_BOM);\n}\n\nexport function stripUTF8BOM(str: string): string {\n\treturn startsWithUTF8BOM(str) ? str.substr(1) : str;\n}\n\n/**\n * Checks if the characters of the provided query string are included in the\n * target string. The characters do not have to be contiguous within the string.\n */\nexport function fuzzyContains(target: string, query: string): boolean {\n\tif (!target || !query) {\n\t\treturn false; // return early if target or query are undefined\n\t}\n\n\tif (target.length < query.length) {\n\t\treturn false; // impossible for query to be contained in target\n\t}\n\n\tconst queryLen = query.length;\n\tconst targetLower = target.toLowerCase();\n\n\tlet index = 0;\n\tlet lastIndexOf = -1;\n\twhile (index < queryLen) {\n\t\tconst indexOf = targetLower.indexOf(query[index], lastIndexOf + 1);\n\t\tif (indexOf < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlastIndexOf = indexOf;\n\n\t\tindex++;\n\t}\n\n\treturn true;\n}\n\nexport function containsUppercaseCharacter(target: string, ignoreEscapedChars = false): boolean {\n\tif (!target) {\n\t\treturn false;\n\t}\n\n\tif (ignoreEscapedChars) {\n\t\ttarget = target.replace(/\\\\./g, '');\n\t}\n\n\treturn target.toLowerCase() !== target;\n}\n\nexport function uppercaseFirstLetter(str: string): string {\n\treturn str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function getNLines(str: string, n = 1): string {\n\tif (n === 0) {\n\t\treturn '';\n\t}\n\n\tlet idx = -1;\n\tdo {\n\t\tidx = str.indexOf('\\n', idx + 1);\n\t\tn--;\n\t} while (n > 0 && idx >= 0);\n\n\tif (idx === -1) {\n\t\treturn str;\n\t}\n\n\tif (str[idx - 1] === '\\r') {\n\t\tidx--;\n\t}\n\n\treturn str.substr(0, idx);\n}\n\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n: number): string {\n\tconst LETTERS_CNT = (CharCode.Z - CharCode.A + 1);\n\n\tn = n % (2 * LETTERS_CNT);\n\n\tif (n < LETTERS_CNT) {\n\t\treturn String.fromCharCode(CharCode.a + n);\n\t}\n\n\treturn String.fromCharCode(CharCode.A + n - LETTERS_CNT);\n}\n\n//#region Unicode Grapheme Break\n\nexport function getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\treturn graphemeBreakTree.getGraphemeBreakType(codePoint);\n}\n\nexport function breakBetweenGraphemeBreakType(breakTypeA: GraphemeBreakType, breakTypeB: GraphemeBreakType): boolean {\n\t// http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n\n\t// !!! Let's make the common case a bit faster\n\tif (breakTypeA === GraphemeBreakType.Other) {\n\t\t// see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n\t\treturn (breakTypeB !== GraphemeBreakType.Extend && breakTypeB !== GraphemeBreakType.SpacingMark);\n\t}\n\n\t// Do not break between a CR and LF. Otherwise, break before and after controls.\n\t// GB3                                        CR × LF\n\t// GB4                       (Control | CR | LF) ÷\n\t// GB5                                           ÷ (Control | CR | LF)\n\tif (breakTypeA === GraphemeBreakType.CR) {\n\t\tif (breakTypeB === GraphemeBreakType.LF) {\n\t\t\treturn false; // GB3\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.Control || breakTypeA === GraphemeBreakType.CR || breakTypeA === GraphemeBreakType.LF) {\n\t\treturn true; // GB4\n\t}\n\tif (breakTypeB === GraphemeBreakType.Control || breakTypeB === GraphemeBreakType.CR || breakTypeB === GraphemeBreakType.LF) {\n\t\treturn true; // GB5\n\t}\n\n\t// Do not break Hangul syllable sequences.\n\t// GB6                                         L × (L | V | LV | LVT)\n\t// GB7                                  (LV | V) × (V | T)\n\t// GB8                                 (LVT | T) × T\n\tif (breakTypeA === GraphemeBreakType.L) {\n\t\tif (breakTypeB === GraphemeBreakType.L || breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.LV || breakTypeB === GraphemeBreakType.LVT) {\n\t\t\treturn false; // GB6\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LV || breakTypeA === GraphemeBreakType.V) {\n\t\tif (breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB7\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LVT || breakTypeA === GraphemeBreakType.T) {\n\t\tif (breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB8\n\t\t}\n\t}\n\n\t// Do not break before extending characters or ZWJ.\n\t// GB9                                           × (Extend | ZWJ)\n\tif (breakTypeB === GraphemeBreakType.Extend || breakTypeB === GraphemeBreakType.ZWJ) {\n\t\treturn false; // GB9\n\t}\n\n\t// The GB9a and GB9b rules only apply to extended grapheme clusters:\n\t// Do not break before SpacingMarks, or after Prepend characters.\n\t// GB9a                                          × SpacingMark\n\t// GB9b                                  Prepend ×\n\tif (breakTypeB === GraphemeBreakType.SpacingMark) {\n\t\treturn false; // GB9a\n\t}\n\tif (breakTypeA === GraphemeBreakType.Prepend) {\n\t\treturn false; // GB9b\n\t}\n\n\t// Do not break within emoji modifier sequences or emoji zwj sequences.\n\t// GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n\tif (breakTypeA === GraphemeBreakType.ZWJ && breakTypeB === GraphemeBreakType.Extended_Pictographic) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB11\n\t}\n\n\t// GB12                          sot (RI RI)* RI × RI\n\t// GB13                        [^RI] (RI RI)* RI × RI\n\tif (breakTypeA === GraphemeBreakType.Regional_Indicator && breakTypeB === GraphemeBreakType.Regional_Indicator) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB12 & GB13\n\t}\n\n\t// GB999                                     Any ÷ Any\n\treturn true;\n}\n\nexport const enum GraphemeBreakType {\n\tOther = 0,\n\tPrepend = 1,\n\tCR = 2,\n\tLF = 3,\n\tControl = 4,\n\tExtend = 5,\n\tRegional_Indicator = 6,\n\tSpacingMark = 7,\n\tL = 8,\n\tV = 9,\n\tT = 10,\n\tLV = 11,\n\tLVT = 12,\n\tZWJ = 13,\n\tExtended_Pictographic = 14\n}\n\nclass GraphemeBreakTree {\n\n\tprivate static _INSTANCE: GraphemeBreakTree | null = null;\n\tpublic static getInstance(): GraphemeBreakTree {\n\t\tif (!GraphemeBreakTree._INSTANCE) {\n\t\t\tGraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n\t\t}\n\t\treturn GraphemeBreakTree._INSTANCE;\n\t}\n\n\tprivate readonly _data: number[];\n\n\tconstructor() {\n\t\tthis._data = getGraphemeBreakRawData();\n\t}\n\n\tpublic getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\t\t// !!! Let's make 7bit ASCII a bit faster: 0..31\n\t\tif (codePoint < 32) {\n\t\t\tif (codePoint === CharCode.LineFeed) {\n\t\t\t\treturn GraphemeBreakType.LF;\n\t\t\t}\n\t\t\tif (codePoint === CharCode.CarriageReturn) {\n\t\t\t\treturn GraphemeBreakType.CR;\n\t\t\t}\n\t\t\treturn GraphemeBreakType.Control;\n\t\t}\n\t\t// !!! Let's make 7bit ASCII a bit faster: 32..126\n\t\tif (codePoint < 127) {\n\t\t\treturn GraphemeBreakType.Other;\n\t\t}\n\n\t\tconst data = this._data;\n\t\tconst nodeCount = data.length / 3;\n\t\tlet nodeIndex = 1;\n\t\twhile (nodeIndex <= nodeCount) {\n\t\t\tif (codePoint < data[3 * nodeIndex]) {\n\t\t\t\t// go left\n\t\t\t\tnodeIndex = 2 * nodeIndex;\n\t\t\t} else if (codePoint > data[3 * nodeIndex + 1]) {\n\t\t\t\t// go right\n\t\t\t\tnodeIndex = 2 * nodeIndex + 1;\n\t\t\t} else {\n\t\t\t\t// hit\n\t\t\t\treturn data[3 * nodeIndex + 2];\n\t\t\t}\n\t\t}\n\n\t\treturn GraphemeBreakType.Other;\n\t}\n}\n\nfunction getGraphemeBreakRawData(): number[] {\n\t// generated using https://github.com/alexdima/unicode-utils/blob/main/grapheme-break.js\n\treturn JSON.parse('[0,0,0,51229,51255,12,44061,44087,12,127462,127487,6,7083,7085,5,47645,47671,12,54813,54839,12,128678,128678,14,3270,3270,5,9919,9923,14,45853,45879,12,49437,49463,12,53021,53047,12,71216,71218,7,128398,128399,14,129360,129374,14,2519,2519,5,4448,4519,9,9742,9742,14,12336,12336,14,44957,44983,12,46749,46775,12,48541,48567,12,50333,50359,12,52125,52151,12,53917,53943,12,69888,69890,5,73018,73018,5,127990,127990,14,128558,128559,14,128759,128760,14,129653,129655,14,2027,2035,5,2891,2892,7,3761,3761,5,6683,6683,5,8293,8293,4,9825,9826,14,9999,9999,14,43452,43453,5,44509,44535,12,45405,45431,12,46301,46327,12,47197,47223,12,48093,48119,12,48989,49015,12,49885,49911,12,50781,50807,12,51677,51703,12,52573,52599,12,53469,53495,12,54365,54391,12,65279,65279,4,70471,70472,7,72145,72147,7,119173,119179,5,127799,127818,14,128240,128244,14,128512,128512,14,128652,128652,14,128721,128722,14,129292,129292,14,129445,129450,14,129734,129743,14,1476,1477,5,2366,2368,7,2750,2752,7,3076,3076,5,3415,3415,5,4141,4144,5,6109,6109,5,6964,6964,5,7394,7400,5,9197,9198,14,9770,9770,14,9877,9877,14,9968,9969,14,10084,10084,14,43052,43052,5,43713,43713,5,44285,44311,12,44733,44759,12,45181,45207,12,45629,45655,12,46077,46103,12,46525,46551,12,46973,46999,12,47421,47447,12,47869,47895,12,48317,48343,12,48765,48791,12,49213,49239,12,49661,49687,12,50109,50135,12,50557,50583,12,51005,51031,12,51453,51479,12,51901,51927,12,52349,52375,12,52797,52823,12,53245,53271,12,53693,53719,12,54141,54167,12,54589,54615,12,55037,55063,12,69506,69509,5,70191,70193,5,70841,70841,7,71463,71467,5,72330,72342,5,94031,94031,5,123628,123631,5,127763,127765,14,127941,127941,14,128043,128062,14,128302,128317,14,128465,128467,14,128539,128539,14,128640,128640,14,128662,128662,14,128703,128703,14,128745,128745,14,129004,129007,14,129329,129330,14,129402,129402,14,129483,129483,14,129686,129704,14,130048,131069,14,173,173,4,1757,1757,1,2200,2207,5,2434,2435,7,2631,2632,5,2817,2817,5,3008,3008,5,3201,3201,5,3387,3388,5,3542,3542,5,3902,3903,7,4190,4192,5,6002,6003,5,6439,6440,5,6765,6770,7,7019,7027,5,7154,7155,7,8205,8205,13,8505,8505,14,9654,9654,14,9757,9757,14,9792,9792,14,9852,9853,14,9890,9894,14,9937,9937,14,9981,9981,14,10035,10036,14,11035,11036,14,42654,42655,5,43346,43347,7,43587,43587,5,44006,44007,7,44173,44199,12,44397,44423,12,44621,44647,12,44845,44871,12,45069,45095,12,45293,45319,12,45517,45543,12,45741,45767,12,45965,45991,12,46189,46215,12,46413,46439,12,46637,46663,12,46861,46887,12,47085,47111,12,47309,47335,12,47533,47559,12,47757,47783,12,47981,48007,12,48205,48231,12,48429,48455,12,48653,48679,12,48877,48903,12,49101,49127,12,49325,49351,12,49549,49575,12,49773,49799,12,49997,50023,12,50221,50247,12,50445,50471,12,50669,50695,12,50893,50919,12,51117,51143,12,51341,51367,12,51565,51591,12,51789,51815,12,52013,52039,12,52237,52263,12,52461,52487,12,52685,52711,12,52909,52935,12,53133,53159,12,53357,53383,12,53581,53607,12,53805,53831,12,54029,54055,12,54253,54279,12,54477,54503,12,54701,54727,12,54925,54951,12,55149,55175,12,68101,68102,5,69762,69762,7,70067,70069,7,70371,70378,5,70720,70721,7,71087,71087,5,71341,71341,5,71995,71996,5,72249,72249,7,72850,72871,5,73109,73109,5,118576,118598,5,121505,121519,5,127245,127247,14,127568,127569,14,127777,127777,14,127872,127891,14,127956,127967,14,128015,128016,14,128110,128172,14,128259,128259,14,128367,128368,14,128424,128424,14,128488,128488,14,128530,128532,14,128550,128551,14,128566,128566,14,128647,128647,14,128656,128656,14,128667,128673,14,128691,128693,14,128715,128715,14,128728,128732,14,128752,128752,14,128765,128767,14,129096,129103,14,129311,129311,14,129344,129349,14,129394,129394,14,129413,129425,14,129466,129471,14,129511,129535,14,129664,129666,14,129719,129722,14,129760,129767,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2307,2307,7,2382,2383,7,2497,2500,5,2563,2563,7,2677,2677,5,2763,2764,7,2879,2879,5,2914,2915,5,3021,3021,5,3142,3144,5,3263,3263,5,3285,3286,5,3398,3400,7,3530,3530,5,3633,3633,5,3864,3865,5,3974,3975,5,4155,4156,7,4229,4230,5,5909,5909,7,6078,6085,7,6277,6278,5,6451,6456,7,6744,6750,5,6846,6846,5,6972,6972,5,7074,7077,5,7146,7148,7,7222,7223,5,7416,7417,5,8234,8238,4,8417,8417,5,9000,9000,14,9203,9203,14,9730,9731,14,9748,9749,14,9762,9763,14,9776,9783,14,9800,9811,14,9831,9831,14,9872,9873,14,9882,9882,14,9900,9903,14,9929,9933,14,9941,9960,14,9974,9974,14,9989,9989,14,10006,10006,14,10062,10062,14,10160,10160,14,11647,11647,5,12953,12953,14,43019,43019,5,43232,43249,5,43443,43443,5,43567,43568,7,43696,43696,5,43765,43765,7,44013,44013,5,44117,44143,12,44229,44255,12,44341,44367,12,44453,44479,12,44565,44591,12,44677,44703,12,44789,44815,12,44901,44927,12,45013,45039,12,45125,45151,12,45237,45263,12,45349,45375,12,45461,45487,12,45573,45599,12,45685,45711,12,45797,45823,12,45909,45935,12,46021,46047,12,46133,46159,12,46245,46271,12,46357,46383,12,46469,46495,12,46581,46607,12,46693,46719,12,46805,46831,12,46917,46943,12,47029,47055,12,47141,47167,12,47253,47279,12,47365,47391,12,47477,47503,12,47589,47615,12,47701,47727,12,47813,47839,12,47925,47951,12,48037,48063,12,48149,48175,12,48261,48287,12,48373,48399,12,48485,48511,12,48597,48623,12,48709,48735,12,48821,48847,12,48933,48959,12,49045,49071,12,49157,49183,12,49269,49295,12,49381,49407,12,49493,49519,12,49605,49631,12,49717,49743,12,49829,49855,12,49941,49967,12,50053,50079,12,50165,50191,12,50277,50303,12,50389,50415,12,50501,50527,12,50613,50639,12,50725,50751,12,50837,50863,12,50949,50975,12,51061,51087,12,51173,51199,12,51285,51311,12,51397,51423,12,51509,51535,12,51621,51647,12,51733,51759,12,51845,51871,12,51957,51983,12,52069,52095,12,52181,52207,12,52293,52319,12,52405,52431,12,52517,52543,12,52629,52655,12,52741,52767,12,52853,52879,12,52965,52991,12,53077,53103,12,53189,53215,12,53301,53327,12,53413,53439,12,53525,53551,12,53637,53663,12,53749,53775,12,53861,53887,12,53973,53999,12,54085,54111,12,54197,54223,12,54309,54335,12,54421,54447,12,54533,54559,12,54645,54671,12,54757,54783,12,54869,54895,12,54981,55007,12,55093,55119,12,55243,55291,10,66045,66045,5,68325,68326,5,69688,69702,5,69817,69818,5,69957,69958,7,70089,70092,5,70198,70199,5,70462,70462,5,70502,70508,5,70750,70750,5,70846,70846,7,71100,71101,5,71230,71230,7,71351,71351,5,71737,71738,5,72000,72000,7,72160,72160,5,72273,72278,5,72752,72758,5,72882,72883,5,73031,73031,5,73461,73462,7,94192,94193,7,119149,119149,7,121403,121452,5,122915,122916,5,126980,126980,14,127358,127359,14,127535,127535,14,127759,127759,14,127771,127771,14,127792,127793,14,127825,127867,14,127897,127899,14,127945,127945,14,127985,127986,14,128000,128007,14,128021,128021,14,128066,128100,14,128184,128235,14,128249,128252,14,128266,128276,14,128335,128335,14,128379,128390,14,128407,128419,14,128444,128444,14,128481,128481,14,128499,128499,14,128526,128526,14,128536,128536,14,128543,128543,14,128556,128556,14,128564,128564,14,128577,128580,14,128643,128645,14,128649,128649,14,128654,128654,14,128660,128660,14,128664,128664,14,128675,128675,14,128686,128689,14,128695,128696,14,128705,128709,14,128717,128719,14,128725,128725,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129009,129023,14,129160,129167,14,129296,129304,14,129320,129327,14,129340,129342,14,129356,129356,14,129388,129392,14,129399,129400,14,129404,129407,14,129432,129442,14,129454,129455,14,129473,129474,14,129485,129487,14,129648,129651,14,129659,129660,14,129671,129679,14,129709,129711,14,129728,129730,14,129751,129753,14,129776,129782,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2274,2274,1,2363,2363,7,2377,2380,7,2402,2403,5,2494,2494,5,2507,2508,7,2558,2558,5,2622,2624,7,2641,2641,5,2691,2691,7,2759,2760,5,2786,2787,5,2876,2876,5,2881,2884,5,2901,2902,5,3006,3006,5,3014,3016,7,3072,3072,5,3134,3136,5,3157,3158,5,3260,3260,5,3266,3266,5,3274,3275,7,3328,3329,5,3391,3392,7,3405,3405,5,3457,3457,5,3536,3537,7,3551,3551,5,3636,3642,5,3764,3772,5,3895,3895,5,3967,3967,7,3993,4028,5,4146,4151,5,4182,4183,7,4226,4226,5,4253,4253,5,4957,4959,5,5940,5940,7,6070,6070,7,6087,6088,7,6158,6158,4,6432,6434,5,6448,6449,7,6679,6680,5,6742,6742,5,6754,6754,5,6783,6783,5,6912,6915,5,6966,6970,5,6978,6978,5,7042,7042,7,7080,7081,5,7143,7143,7,7150,7150,7,7212,7219,5,7380,7392,5,7412,7412,5,8203,8203,4,8232,8232,4,8265,8265,14,8400,8412,5,8421,8432,5,8617,8618,14,9167,9167,14,9200,9200,14,9410,9410,14,9723,9726,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9774,14,9786,9786,14,9794,9794,14,9823,9823,14,9828,9828,14,9833,9850,14,9855,9855,14,9875,9875,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9935,9935,14,9939,9939,14,9962,9962,14,9972,9972,14,9978,9978,14,9986,9986,14,9997,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10133,10135,14,10548,10549,14,11093,11093,14,12330,12333,5,12441,12442,5,42608,42610,5,43010,43010,5,43045,43046,5,43188,43203,7,43302,43309,5,43392,43394,5,43446,43449,5,43493,43493,5,43571,43572,7,43597,43597,7,43703,43704,5,43756,43757,5,44003,44004,7,44009,44010,7,44033,44059,12,44089,44115,12,44145,44171,12,44201,44227,12,44257,44283,12,44313,44339,12,44369,44395,12,44425,44451,12,44481,44507,12,44537,44563,12,44593,44619,12,44649,44675,12,44705,44731,12,44761,44787,12,44817,44843,12,44873,44899,12,44929,44955,12,44985,45011,12,45041,45067,12,45097,45123,12,45153,45179,12,45209,45235,12,45265,45291,12,45321,45347,12,45377,45403,12,45433,45459,12,45489,45515,12,45545,45571,12,45601,45627,12,45657,45683,12,45713,45739,12,45769,45795,12,45825,45851,12,45881,45907,12,45937,45963,12,45993,46019,12,46049,46075,12,46105,46131,12,46161,46187,12,46217,46243,12,46273,46299,12,46329,46355,12,46385,46411,12,46441,46467,12,46497,46523,12,46553,46579,12,46609,46635,12,46665,46691,12,46721,46747,12,46777,46803,12,46833,46859,12,46889,46915,12,46945,46971,12,47001,47027,12,47057,47083,12,47113,47139,12,47169,47195,12,47225,47251,12,47281,47307,12,47337,47363,12,47393,47419,12,47449,47475,12,47505,47531,12,47561,47587,12,47617,47643,12,47673,47699,12,47729,47755,12,47785,47811,12,47841,47867,12,47897,47923,12,47953,47979,12,48009,48035,12,48065,48091,12,48121,48147,12,48177,48203,12,48233,48259,12,48289,48315,12,48345,48371,12,48401,48427,12,48457,48483,12,48513,48539,12,48569,48595,12,48625,48651,12,48681,48707,12,48737,48763,12,48793,48819,12,48849,48875,12,48905,48931,12,48961,48987,12,49017,49043,12,49073,49099,12,49129,49155,12,49185,49211,12,49241,49267,12,49297,49323,12,49353,49379,12,49409,49435,12,49465,49491,12,49521,49547,12,49577,49603,12,49633,49659,12,49689,49715,12,49745,49771,12,49801,49827,12,49857,49883,12,49913,49939,12,49969,49995,12,50025,50051,12,50081,50107,12,50137,50163,12,50193,50219,12,50249,50275,12,50305,50331,12,50361,50387,12,50417,50443,12,50473,50499,12,50529,50555,12,50585,50611,12,50641,50667,12,50697,50723,12,50753,50779,12,50809,50835,12,50865,50891,12,50921,50947,12,50977,51003,12,51033,51059,12,51089,51115,12,51145,51171,12,51201,51227,12,51257,51283,12,51313,51339,12,51369,51395,12,51425,51451,12,51481,51507,12,51537,51563,12,51593,51619,12,51649,51675,12,51705,51731,12,51761,51787,12,51817,51843,12,51873,51899,12,51929,51955,12,51985,52011,12,52041,52067,12,52097,52123,12,52153,52179,12,52209,52235,12,52265,52291,12,52321,52347,12,52377,52403,12,52433,52459,12,52489,52515,12,52545,52571,12,52601,52627,12,52657,52683,12,52713,52739,12,52769,52795,12,52825,52851,12,52881,52907,12,52937,52963,12,52993,53019,12,53049,53075,12,53105,53131,12,53161,53187,12,53217,53243,12,53273,53299,12,53329,53355,12,53385,53411,12,53441,53467,12,53497,53523,12,53553,53579,12,53609,53635,12,53665,53691,12,53721,53747,12,53777,53803,12,53833,53859,12,53889,53915,12,53945,53971,12,54001,54027,12,54057,54083,12,54113,54139,12,54169,54195,12,54225,54251,12,54281,54307,12,54337,54363,12,54393,54419,12,54449,54475,12,54505,54531,12,54561,54587,12,54617,54643,12,54673,54699,12,54729,54755,12,54785,54811,12,54841,54867,12,54897,54923,12,54953,54979,12,55009,55035,12,55065,55091,12,55121,55147,12,55177,55203,12,65024,65039,5,65520,65528,4,66422,66426,5,68152,68154,5,69291,69292,5,69633,69633,5,69747,69748,5,69811,69814,5,69826,69826,5,69932,69932,7,70016,70017,5,70079,70080,7,70095,70095,5,70196,70196,5,70367,70367,5,70402,70403,7,70464,70464,5,70487,70487,5,70709,70711,7,70725,70725,7,70833,70834,7,70843,70844,7,70849,70849,7,71090,71093,5,71103,71104,5,71227,71228,7,71339,71339,5,71344,71349,5,71458,71461,5,71727,71735,5,71985,71989,7,71998,71998,5,72002,72002,7,72154,72155,5,72193,72202,5,72251,72254,5,72281,72283,5,72344,72345,5,72766,72766,7,72874,72880,5,72885,72886,5,73023,73029,5,73104,73105,5,73111,73111,5,92912,92916,5,94095,94098,5,113824,113827,4,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,125252,125258,5,127183,127183,14,127340,127343,14,127377,127386,14,127491,127503,14,127548,127551,14,127744,127756,14,127761,127761,14,127769,127769,14,127773,127774,14,127780,127788,14,127796,127797,14,127820,127823,14,127869,127869,14,127894,127895,14,127902,127903,14,127943,127943,14,127947,127950,14,127972,127972,14,127988,127988,14,127992,127994,14,128009,128011,14,128019,128019,14,128023,128041,14,128064,128064,14,128102,128107,14,128174,128181,14,128238,128238,14,128246,128247,14,128254,128254,14,128264,128264,14,128278,128299,14,128329,128330,14,128348,128359,14,128371,128377,14,128392,128393,14,128401,128404,14,128421,128421,14,128433,128434,14,128450,128452,14,128476,128478,14,128483,128483,14,128495,128495,14,128506,128506,14,128519,128520,14,128528,128528,14,128534,128534,14,128538,128538,14,128540,128542,14,128544,128549,14,128552,128555,14,128557,128557,14,128560,128563,14,128565,128565,14,128567,128576,14,128581,128591,14,128641,128642,14,128646,128646,14,128648,128648,14,128650,128651,14,128653,128653,14,128655,128655,14,128657,128659,14,128661,128661,14,128663,128663,14,128665,128666,14,128674,128674,14,128676,128677,14,128679,128685,14,128690,128690,14,128694,128694,14,128697,128702,14,128704,128704,14,128710,128714,14,128716,128716,14,128720,128720,14,128723,128724,14,128726,128727,14,128733,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129008,129008,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129661,129663,14,129667,129670,14,129680,129685,14,129705,129708,14,129712,129718,14,129723,129727,14,129731,129733,14,129744,129750,14,129754,129759,14,129768,129775,14,129783,129791,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2192,2193,1,2250,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3132,3132,5,3137,3140,7,3146,3149,5,3170,3171,5,3202,3203,7,3262,3262,7,3264,3265,7,3267,3268,7,3271,3272,7,3276,3277,5,3298,3299,5,3330,3331,7,3390,3390,5,3393,3396,5,3402,3404,7,3406,3406,1,3426,3427,5,3458,3459,7,3535,3535,5,3538,3540,5,3544,3550,7,3570,3571,7,3635,3635,7,3655,3662,5,3763,3763,7,3784,3789,5,3893,3893,5,3897,3897,5,3953,3966,5,3968,3972,5,3981,3991,5,4038,4038,5,4145,4145,7,4153,4154,5,4157,4158,5,4184,4185,5,4209,4212,5,4228,4228,7,4237,4237,5,4352,4447,8,4520,4607,10,5906,5908,5,5938,5939,5,5970,5971,5,6068,6069,5,6071,6077,5,6086,6086,5,6089,6099,5,6155,6157,5,6159,6159,5,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6862,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7679,5,8204,8204,5,8206,8207,4,8233,8233,4,8252,8252,14,8288,8292,4,8294,8303,4,8413,8416,5,8418,8420,5,8482,8482,14,8596,8601,14,8986,8987,14,9096,9096,14,9193,9196,14,9199,9199,14,9201,9202,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9729,14,9732,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9775,9775,14,9784,9785,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9874,14,9876,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9934,14,9936,9936,14,9938,9938,14,9940,9940,14,9961,9961,14,9963,9967,14,9970,9971,14,9973,9973,14,9975,9977,14,9979,9980,14,9982,9985,14,9987,9988,14,9992,9996,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10083,14,10085,10087,14,10145,10145,14,10175,10175,14,11013,11015,14,11088,11088,14,11503,11505,5,11744,11775,5,12334,12335,5,12349,12349,14,12951,12951,14,42607,42607,5,42612,42621,5,42736,42737,5,43014,43014,5,43043,43044,7,43047,43047,7,43136,43137,7,43204,43205,5,43263,43263,5,43335,43345,5,43360,43388,8,43395,43395,7,43444,43445,7,43450,43451,7,43454,43456,7,43561,43566,5,43569,43570,5,43573,43574,5,43596,43596,5,43644,43644,5,43698,43700,5,43710,43711,5,43755,43755,7,43758,43759,7,43766,43766,5,44005,44005,5,44008,44008,5,44012,44012,7,44032,44032,11,44060,44060,11,44088,44088,11,44116,44116,11,44144,44144,11,44172,44172,11,44200,44200,11,44228,44228,11,44256,44256,11,44284,44284,11,44312,44312,11,44340,44340,11,44368,44368,11,44396,44396,11,44424,44424,11,44452,44452,11,44480,44480,11,44508,44508,11,44536,44536,11,44564,44564,11,44592,44592,11,44620,44620,11,44648,44648,11,44676,44676,11,44704,44704,11,44732,44732,11,44760,44760,11,44788,44788,11,44816,44816,11,44844,44844,11,44872,44872,11,44900,44900,11,44928,44928,11,44956,44956,11,44984,44984,11,45012,45012,11,45040,45040,11,45068,45068,11,45096,45096,11,45124,45124,11,45152,45152,11,45180,45180,11,45208,45208,11,45236,45236,11,45264,45264,11,45292,45292,11,45320,45320,11,45348,45348,11,45376,45376,11,45404,45404,11,45432,45432,11,45460,45460,11,45488,45488,11,45516,45516,11,45544,45544,11,45572,45572,11,45600,45600,11,45628,45628,11,45656,45656,11,45684,45684,11,45712,45712,11,45740,45740,11,45768,45768,11,45796,45796,11,45824,45824,11,45852,45852,11,45880,45880,11,45908,45908,11,45936,45936,11,45964,45964,11,45992,45992,11,46020,46020,11,46048,46048,11,46076,46076,11,46104,46104,11,46132,46132,11,46160,46160,11,46188,46188,11,46216,46216,11,46244,46244,11,46272,46272,11,46300,46300,11,46328,46328,11,46356,46356,11,46384,46384,11,46412,46412,11,46440,46440,11,46468,46468,11,46496,46496,11,46524,46524,11,46552,46552,11,46580,46580,11,46608,46608,11,46636,46636,11,46664,46664,11,46692,46692,11,46720,46720,11,46748,46748,11,46776,46776,11,46804,46804,11,46832,46832,11,46860,46860,11,46888,46888,11,46916,46916,11,46944,46944,11,46972,46972,11,47000,47000,11,47028,47028,11,47056,47056,11,47084,47084,11,47112,47112,11,47140,47140,11,47168,47168,11,47196,47196,11,47224,47224,11,47252,47252,11,47280,47280,11,47308,47308,11,47336,47336,11,47364,47364,11,47392,47392,11,47420,47420,11,47448,47448,11,47476,47476,11,47504,47504,11,47532,47532,11,47560,47560,11,47588,47588,11,47616,47616,11,47644,47644,11,47672,47672,11,47700,47700,11,47728,47728,11,47756,47756,11,47784,47784,11,47812,47812,11,47840,47840,11,47868,47868,11,47896,47896,11,47924,47924,11,47952,47952,11,47980,47980,11,48008,48008,11,48036,48036,11,48064,48064,11,48092,48092,11,48120,48120,11,48148,48148,11,48176,48176,11,48204,48204,11,48232,48232,11,48260,48260,11,48288,48288,11,48316,48316,11,48344,48344,11,48372,48372,11,48400,48400,11,48428,48428,11,48456,48456,11,48484,48484,11,48512,48512,11,48540,48540,11,48568,48568,11,48596,48596,11,48624,48624,11,48652,48652,11,48680,48680,11,48708,48708,11,48736,48736,11,48764,48764,11,48792,48792,11,48820,48820,11,48848,48848,11,48876,48876,11,48904,48904,11,48932,48932,11,48960,48960,11,48988,48988,11,49016,49016,11,49044,49044,11,49072,49072,11,49100,49100,11,49128,49128,11,49156,49156,11,49184,49184,11,49212,49212,11,49240,49240,11,49268,49268,11,49296,49296,11,49324,49324,11,49352,49352,11,49380,49380,11,49408,49408,11,49436,49436,11,49464,49464,11,49492,49492,11,49520,49520,11,49548,49548,11,49576,49576,11,49604,49604,11,49632,49632,11,49660,49660,11,49688,49688,11,49716,49716,11,49744,49744,11,49772,49772,11,49800,49800,11,49828,49828,11,49856,49856,11,49884,49884,11,49912,49912,11,49940,49940,11,49968,49968,11,49996,49996,11,50024,50024,11,50052,50052,11,50080,50080,11,50108,50108,11,50136,50136,11,50164,50164,11,50192,50192,11,50220,50220,11,50248,50248,11,50276,50276,11,50304,50304,11,50332,50332,11,50360,50360,11,50388,50388,11,50416,50416,11,50444,50444,11,50472,50472,11,50500,50500,11,50528,50528,11,50556,50556,11,50584,50584,11,50612,50612,11,50640,50640,11,50668,50668,11,50696,50696,11,50724,50724,11,50752,50752,11,50780,50780,11,50808,50808,11,50836,50836,11,50864,50864,11,50892,50892,11,50920,50920,11,50948,50948,11,50976,50976,11,51004,51004,11,51032,51032,11,51060,51060,11,51088,51088,11,51116,51116,11,51144,51144,11,51172,51172,11,51200,51200,11,51228,51228,11,51256,51256,11,51284,51284,11,51312,51312,11,51340,51340,11,51368,51368,11,51396,51396,11,51424,51424,11,51452,51452,11,51480,51480,11,51508,51508,11,51536,51536,11,51564,51564,11,51592,51592,11,51620,51620,11,51648,51648,11,51676,51676,11,51704,51704,11,51732,51732,11,51760,51760,11,51788,51788,11,51816,51816,11,51844,51844,11,51872,51872,11,51900,51900,11,51928,51928,11,51956,51956,11,51984,51984,11,52012,52012,11,52040,52040,11,52068,52068,11,52096,52096,11,52124,52124,11,52152,52152,11,52180,52180,11,52208,52208,11,52236,52236,11,52264,52264,11,52292,52292,11,52320,52320,11,52348,52348,11,52376,52376,11,52404,52404,11,52432,52432,11,52460,52460,11,52488,52488,11,52516,52516,11,52544,52544,11,52572,52572,11,52600,52600,11,52628,52628,11,52656,52656,11,52684,52684,11,52712,52712,11,52740,52740,11,52768,52768,11,52796,52796,11,52824,52824,11,52852,52852,11,52880,52880,11,52908,52908,11,52936,52936,11,52964,52964,11,52992,52992,11,53020,53020,11,53048,53048,11,53076,53076,11,53104,53104,11,53132,53132,11,53160,53160,11,53188,53188,11,53216,53216,11,53244,53244,11,53272,53272,11,53300,53300,11,53328,53328,11,53356,53356,11,53384,53384,11,53412,53412,11,53440,53440,11,53468,53468,11,53496,53496,11,53524,53524,11,53552,53552,11,53580,53580,11,53608,53608,11,53636,53636,11,53664,53664,11,53692,53692,11,53720,53720,11,53748,53748,11,53776,53776,11,53804,53804,11,53832,53832,11,53860,53860,11,53888,53888,11,53916,53916,11,53944,53944,11,53972,53972,11,54000,54000,11,54028,54028,11,54056,54056,11,54084,54084,11,54112,54112,11,54140,54140,11,54168,54168,11,54196,54196,11,54224,54224,11,54252,54252,11,54280,54280,11,54308,54308,11,54336,54336,11,54364,54364,11,54392,54392,11,54420,54420,11,54448,54448,11,54476,54476,11,54504,54504,11,54532,54532,11,54560,54560,11,54588,54588,11,54616,54616,11,54644,54644,11,54672,54672,11,54700,54700,11,54728,54728,11,54756,54756,11,54784,54784,11,54812,54812,11,54840,54840,11,54868,54868,11,54896,54896,11,54924,54924,11,54952,54952,11,54980,54980,11,55008,55008,11,55036,55036,11,55064,55064,11,55092,55092,11,55120,55120,11,55148,55148,11,55176,55176,11,55216,55238,9,64286,64286,5,65056,65071,5,65438,65439,5,65529,65531,4,66272,66272,5,68097,68099,5,68108,68111,5,68159,68159,5,68900,68903,5,69446,69456,5,69632,69632,7,69634,69634,7,69744,69744,5,69759,69761,5,69808,69810,7,69815,69816,7,69821,69821,1,69837,69837,1,69927,69931,5,69933,69940,5,70003,70003,5,70018,70018,7,70070,70078,5,70082,70083,1,70094,70094,7,70188,70190,7,70194,70195,7,70197,70197,7,70206,70206,5,70368,70370,7,70400,70401,5,70459,70460,5,70463,70463,7,70465,70468,7,70475,70477,7,70498,70499,7,70512,70516,5,70712,70719,5,70722,70724,5,70726,70726,5,70832,70832,5,70835,70840,5,70842,70842,5,70845,70845,5,70847,70848,5,70850,70851,5,71088,71089,7,71096,71099,7,71102,71102,7,71132,71133,5,71219,71226,5,71229,71229,5,71231,71232,5,71340,71340,7,71342,71343,7,71350,71350,7,71453,71455,5,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,118528,118573,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123566,123566,5,125136,125142,5,126976,126979,14,126981,127182,14,127184,127231,14,127279,127279,14,127344,127345,14,127374,127374,14,127405,127461,14,127489,127490,14,127514,127514,14,127538,127546,14,127561,127567,14,127570,127743,14,127757,127758,14,127760,127760,14,127762,127762,14,127766,127768,14,127770,127770,14,127772,127772,14,127775,127776,14,127778,127779,14,127789,127791,14,127794,127795,14,127798,127798,14,127819,127819,14,127824,127824,14,127868,127868,14,127870,127871,14,127892,127893,14,127896,127896,14,127900,127901,14,127904,127940,14,127942,127942,14,127944,127944,14,127946,127946,14,127951,127955,14,127968,127971,14,127973,127984,14,127987,127987,14,127989,127989,14,127991,127991,14,127995,127999,5,128008,128008,14,128012,128014,14,128017,128018,14,128020,128020,14,128022,128022,14,128042,128042,14,128063,128063,14,128065,128065,14,128101,128101,14,128108,128109,14,128173,128173,14,128182,128183,14,128236,128237,14,128239,128239,14,128245,128245,14,128248,128248,14,128253,128253,14,128255,128258,14,128260,128263,14,128265,128265,14,128277,128277,14,128300,128301,14,128326,128328,14,128331,128334,14,128336,128347,14,128360,128366,14,128369,128370,14,128378,128378,14,128391,128391,14,128394,128397,14,128400,128400,14,128405,128406,14,128420,128420,14,128422,128423,14,128425,128432,14,128435,128443,14,128445,128449,14,128453,128464,14,128468,128475,14,128479,128480,14,128482,128482,14,128484,128487,14,128489,128494,14,128496,128498,14,128500,128505,14,128507,128511,14,128513,128518,14,128521,128525,14,128527,128527,14,128529,128529,14,128533,128533,14,128535,128535,14,128537,128537,14]');\n}\n\n//#endregion\n\n/**\n * Computes the offset after performing a left delete on the given string,\n * while considering unicode grapheme/emoji rules.\n*/\nexport function getLeftDeleteOffset(offset: number, str: string): number {\n\tif (offset === 0) {\n\t\treturn 0;\n\t}\n\n\t// Try to delete emoji part.\n\tconst emojiOffset = getOffsetBeforeLastEmojiComponent(offset, str);\n\tif (emojiOffset !== undefined) {\n\t\treturn emojiOffset;\n\t}\n\n\t// Otherwise, just skip a single code point.\n\tconst codePoint = getPrevCodePoint(str, offset);\n\toffset -= getUTF16Length(codePoint);\n\treturn offset;\n}\n\nfunction getOffsetBeforeLastEmojiComponent(offset: number, str: string): number | undefined {\n\t// See https://www.unicode.org/reports/tr51/tr51-14.html#EBNF_and_Regex for the\n\t// structure of emojis.\n\tlet codePoint = getPrevCodePoint(str, offset);\n\toffset -= getUTF16Length(codePoint);\n\n\t// Skip modifiers\n\twhile ((isEmojiModifier(codePoint) || codePoint === CodePoint.emojiVariantSelector || codePoint === CodePoint.enclosingKeyCap)) {\n\t\tif (offset === 0) {\n\t\t\t// Cannot skip modifier, no preceding emoji base.\n\t\t\treturn undefined;\n\t\t}\n\t\tcodePoint = getPrevCodePoint(str, offset);\n\t\toffset -= getUTF16Length(codePoint);\n\t}\n\n\t// Expect base emoji\n\tif (!isEmojiImprecise(codePoint)) {\n\t\t// Unexpected code point, not a valid emoji.\n\t\treturn undefined;\n\t}\n\n\tif (offset >= 0) {\n\t\t// Skip optional ZWJ code points that combine multiple emojis.\n\t\t// In theory, we should check if that ZWJ actually combines multiple emojis\n\t\t// to prevent deleting ZWJs in situations we didn't account for.\n\t\tconst optionalZwjCodePoint = getPrevCodePoint(str, offset);\n\t\tif (optionalZwjCodePoint === CodePoint.zwj) {\n\t\t\toffset -= getUTF16Length(optionalZwjCodePoint);\n\t\t}\n\t}\n\n\treturn offset;\n}\n\nfunction getUTF16Length(codePoint: number) {\n\treturn codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1;\n}\n\nfunction isEmojiModifier(codePoint: number): boolean {\n\treturn 0x1F3FB <= codePoint && codePoint <= 0x1F3FF;\n}\n\nconst enum CodePoint {\n\tzwj = 0x200D,\n\n\t/**\n\t * Variation Selector-16 (VS16)\n\t*/\n\temojiVariantSelector = 0xFE0F,\n\n\t/**\n\t * Combining Enclosing Keycap\n\t */\n\tenclosingKeyCap = 0x20E3,\n}\n\nexport const noBreakWhitespace = '\\xa0';\n\nexport class AmbiguousCharacters {\n\tprivate static getData(): Record<string | '_common', number[]> {\n\t\t// Stored as key1, value1, key2, value2, ...\n\t\treturn JSON.parse('{\\\"_common\\\":[8232,32,8233,32,5760,32,8192,32,8193,32,8194,32,8195,32,8196,32,8197,32,8198,32,8200,32,8201,32,8202,32,8287,32,8199,32,8239,32,2042,95,65101,95,65102,95,65103,95,8208,45,8209,45,8210,45,65112,45,1748,45,8259,45,727,45,8722,45,10134,45,11450,45,1549,44,1643,44,8218,44,184,44,42233,44,894,59,2307,58,2691,58,1417,58,1795,58,1796,58,5868,58,65072,58,6147,58,6153,58,8282,58,1475,58,760,58,42889,58,8758,58,720,58,42237,58,451,33,11601,33,660,63,577,63,2429,63,5038,63,42731,63,119149,46,8228,46,1793,46,1794,46,42510,46,68176,46,1632,46,1776,46,42232,46,1373,96,65287,96,8219,96,8242,96,1370,96,1523,96,8175,96,65344,96,900,96,8189,96,8125,96,8127,96,8190,96,697,96,884,96,712,96,714,96,715,96,756,96,699,96,701,96,700,96,702,96,42892,96,1497,96,2036,96,2037,96,5194,96,5836,96,94033,96,94034,96,65339,40,10088,40,10098,40,12308,40,64830,40,65341,41,10089,41,10099,41,12309,41,64831,41,10100,123,119060,123,10101,125,8270,42,1645,42,8727,42,66335,42,5941,47,8257,47,8725,47,8260,47,9585,47,10187,47,10744,47,119354,47,12755,47,12339,47,11462,47,20031,47,12035,47,65340,92,65128,92,8726,92,10189,92,10741,92,10745,92,119311,92,119355,92,12756,92,20022,92,12034,92,42872,38,708,94,710,94,5869,43,10133,43,66203,43,8249,60,10094,60,706,60,119350,60,5176,60,5810,60,5120,61,11840,61,12448,61,42239,61,8250,62,10095,62,707,62,119351,62,5171,62,94015,62,8275,126,732,126,8128,126,8764,126,120784,50,120794,50,120804,50,120814,50,120824,50,130034,50,42842,50,423,50,1000,50,42564,50,5311,50,42735,50,119302,51,120785,51,120795,51,120805,51,120815,51,120825,51,130035,51,42923,51,540,51,439,51,42858,51,11468,51,1248,51,94011,51,71882,51,120786,52,120796,52,120806,52,120816,52,120826,52,130036,52,5070,52,71855,52,120787,53,120797,53,120807,53,120817,53,120827,53,130037,53,444,53,71867,53,120788,54,120798,54,120808,54,120818,54,120828,54,130038,54,11474,54,5102,54,71893,54,119314,55,120789,55,120799,55,120809,55,120819,55,120829,55,130039,55,66770,55,71878,55,2819,56,2538,56,2666,56,125131,56,120790,56,120800,56,120810,56,120820,56,120830,56,130040,56,547,56,546,56,66330,56,2663,57,2920,57,2541,57,3437,57,120791,57,120801,57,120811,57,120821,57,120831,57,130041,57,42862,57,11466,57,71884,57,71852,57,71894,57,9082,97,65345,97,119834,97,119886,97,119938,97,119990,97,120042,97,120094,97,120146,97,120198,97,120250,97,120302,97,120354,97,120406,97,120458,97,593,97,945,97,120514,97,120572,97,120630,97,120688,97,120746,97,65313,65,119808,65,119860,65,119912,65,119964,65,120016,65,120068,65,120120,65,120172,65,120224,65,120276,65,120328,65,120380,65,120432,65,913,65,120488,65,120546,65,120604,65,120662,65,120720,65,5034,65,5573,65,42222,65,94016,65,66208,65,119835,98,119887,98,119939,98,119991,98,120043,98,120095,98,120147,98,120199,98,120251,98,120303,98,120355,98,120407,98,120459,98,388,98,5071,98,5234,98,5551,98,65314,66,8492,66,119809,66,119861,66,119913,66,120017,66,120069,66,120121,66,120173,66,120225,66,120277,66,120329,66,120381,66,120433,66,42932,66,914,66,120489,66,120547,66,120605,66,120663,66,120721,66,5108,66,5623,66,42192,66,66178,66,66209,66,66305,66,65347,99,8573,99,119836,99,119888,99,119940,99,119992,99,120044,99,120096,99,120148,99,120200,99,120252,99,120304,99,120356,99,120408,99,120460,99,7428,99,1010,99,11429,99,43951,99,66621,99,128844,67,71922,67,71913,67,65315,67,8557,67,8450,67,8493,67,119810,67,119862,67,119914,67,119966,67,120018,67,120174,67,120226,67,120278,67,120330,67,120382,67,120434,67,1017,67,11428,67,5087,67,42202,67,66210,67,66306,67,66581,67,66844,67,8574,100,8518,100,119837,100,119889,100,119941,100,119993,100,120045,100,120097,100,120149,100,120201,100,120253,100,120305,100,120357,100,120409,100,120461,100,1281,100,5095,100,5231,100,42194,100,8558,68,8517,68,119811,68,119863,68,119915,68,119967,68,120019,68,120071,68,120123,68,120175,68,120227,68,120279,68,120331,68,120383,68,120435,68,5024,68,5598,68,5610,68,42195,68,8494,101,65349,101,8495,101,8519,101,119838,101,119890,101,119942,101,120046,101,120098,101,120150,101,120202,101,120254,101,120306,101,120358,101,120410,101,120462,101,43826,101,1213,101,8959,69,65317,69,8496,69,119812,69,119864,69,119916,69,120020,69,120072,69,120124,69,120176,69,120228,69,120280,69,120332,69,120384,69,120436,69,917,69,120492,69,120550,69,120608,69,120666,69,120724,69,11577,69,5036,69,42224,69,71846,69,71854,69,66182,69,119839,102,119891,102,119943,102,119995,102,120047,102,120099,102,120151,102,120203,102,120255,102,120307,102,120359,102,120411,102,120463,102,43829,102,42905,102,383,102,7837,102,1412,102,119315,70,8497,70,119813,70,119865,70,119917,70,120021,70,120073,70,120125,70,120177,70,120229,70,120281,70,120333,70,120385,70,120437,70,42904,70,988,70,120778,70,5556,70,42205,70,71874,70,71842,70,66183,70,66213,70,66853,70,65351,103,8458,103,119840,103,119892,103,119944,103,120048,103,120100,103,120152,103,120204,103,120256,103,120308,103,120360,103,120412,103,120464,103,609,103,7555,103,397,103,1409,103,119814,71,119866,71,119918,71,119970,71,120022,71,120074,71,120126,71,120178,71,120230,71,120282,71,120334,71,120386,71,120438,71,1292,71,5056,71,5107,71,42198,71,65352,104,8462,104,119841,104,119945,104,119997,104,120049,104,120101,104,120153,104,120205,104,120257,104,120309,104,120361,104,120413,104,120465,104,1211,104,1392,104,5058,104,65320,72,8459,72,8460,72,8461,72,119815,72,119867,72,119919,72,120023,72,120179,72,120231,72,120283,72,120335,72,120387,72,120439,72,919,72,120494,72,120552,72,120610,72,120668,72,120726,72,11406,72,5051,72,5500,72,42215,72,66255,72,731,105,9075,105,65353,105,8560,105,8505,105,8520,105,119842,105,119894,105,119946,105,119998,105,120050,105,120102,105,120154,105,120206,105,120258,105,120310,105,120362,105,120414,105,120466,105,120484,105,618,105,617,105,953,105,8126,105,890,105,120522,105,120580,105,120638,105,120696,105,120754,105,1110,105,42567,105,1231,105,43893,105,5029,105,71875,105,65354,106,8521,106,119843,106,119895,106,119947,106,119999,106,120051,106,120103,106,120155,106,120207,106,120259,106,120311,106,120363,106,120415,106,120467,106,1011,106,1112,106,65322,74,119817,74,119869,74,119921,74,119973,74,120025,74,120077,74,120129,74,120181,74,120233,74,120285,74,120337,74,120389,74,120441,74,42930,74,895,74,1032,74,5035,74,5261,74,42201,74,119844,107,119896,107,119948,107,120000,107,120052,107,120104,107,120156,107,120208,107,120260,107,120312,107,120364,107,120416,107,120468,107,8490,75,65323,75,119818,75,119870,75,119922,75,119974,75,120026,75,120078,75,120130,75,120182,75,120234,75,120286,75,120338,75,120390,75,120442,75,922,75,120497,75,120555,75,120613,75,120671,75,120729,75,11412,75,5094,75,5845,75,42199,75,66840,75,1472,124,8739,124,9213,124,65512,124,1633,124,1777,124,66336,124,125127,124,120783,124,120793,124,120803,124,120813,124,120823,124,130033,124,65321,124,8544,124,8464,124,8465,124,119816,124,119868,124,119920,124,120024,124,120128,124,120180,124,120232,124,120284,124,120336,124,120388,124,120440,124,406,124,65356,124,8572,124,8467,124,119845,124,119897,124,119949,124,120001,124,120053,124,120105,124,120157,124,120209,124,120261,124,120313,124,120365,124,120417,124,120469,124,448,124,120496,124,120554,124,120612,124,120670,124,120728,124,11410,124,1030,124,1216,124,1493,124,1503,124,1575,124,126464,124,126592,124,65166,124,65165,124,1994,124,11599,124,5825,124,42226,124,93992,124,66186,124,66313,124,119338,76,8556,76,8466,76,119819,76,119871,76,119923,76,120027,76,120079,76,120131,76,120183,76,120235,76,120287,76,120339,76,120391,76,120443,76,11472,76,5086,76,5290,76,42209,76,93974,76,71843,76,71858,76,66587,76,66854,76,65325,77,8559,77,8499,77,119820,77,119872,77,119924,77,120028,77,120080,77,120132,77,120184,77,120236,77,120288,77,120340,77,120392,77,120444,77,924,77,120499,77,120557,77,120615,77,120673,77,120731,77,1018,77,11416,77,5047,77,5616,77,5846,77,42207,77,66224,77,66321,77,119847,110,119899,110,119951,110,120003,110,120055,110,120107,110,120159,110,120211,110,120263,110,120315,110,120367,110,120419,110,120471,110,1400,110,1404,110,65326,78,8469,78,119821,78,119873,78,119925,78,119977,78,120029,78,120081,78,120185,78,120237,78,120289,78,120341,78,120393,78,120445,78,925,78,120500,78,120558,78,120616,78,120674,78,120732,78,11418,78,42208,78,66835,78,3074,111,3202,111,3330,111,3458,111,2406,111,2662,111,2790,111,3046,111,3174,111,3302,111,3430,111,3664,111,3792,111,4160,111,1637,111,1781,111,65359,111,8500,111,119848,111,119900,111,119952,111,120056,111,120108,111,120160,111,120212,111,120264,111,120316,111,120368,111,120420,111,120472,111,7439,111,7441,111,43837,111,959,111,120528,111,120586,111,120644,111,120702,111,120760,111,963,111,120532,111,120590,111,120648,111,120706,111,120764,111,11423,111,4351,111,1413,111,1505,111,1607,111,126500,111,126564,111,126596,111,65259,111,65260,111,65258,111,65257,111,1726,111,64428,111,64429,111,64427,111,64426,111,1729,111,64424,111,64425,111,64423,111,64422,111,1749,111,3360,111,4125,111,66794,111,71880,111,71895,111,66604,111,1984,79,2534,79,2918,79,12295,79,70864,79,71904,79,120782,79,120792,79,120802,79,120812,79,120822,79,130032,79,65327,79,119822,79,119874,79,119926,79,119978,79,120030,79,120082,79,120134,79,120186,79,120238,79,120290,79,120342,79,120394,79,120446,79,927,79,120502,79,120560,79,120618,79,120676,79,120734,79,11422,79,1365,79,11604,79,4816,79,2848,79,66754,79,42227,79,71861,79,66194,79,66219,79,66564,79,66838,79,9076,112,65360,112,119849,112,119901,112,119953,112,120005,112,120057,112,120109,112,120161,112,120213,112,120265,112,120317,112,120369,112,120421,112,120473,112,961,112,120530,112,120544,112,120588,112,120602,112,120646,112,120660,112,120704,112,120718,112,120762,112,120776,112,11427,112,65328,80,8473,80,119823,80,119875,80,119927,80,119979,80,120031,80,120083,80,120187,80,120239,80,120291,80,120343,80,120395,80,120447,80,929,80,120504,80,120562,80,120620,80,120678,80,120736,80,11426,80,5090,80,5229,80,42193,80,66197,80,119850,113,119902,113,119954,113,120006,113,120058,113,120110,113,120162,113,120214,113,120266,113,120318,113,120370,113,120422,113,120474,113,1307,113,1379,113,1382,113,8474,81,119824,81,119876,81,119928,81,119980,81,120032,81,120084,81,120188,81,120240,81,120292,81,120344,81,120396,81,120448,81,11605,81,119851,114,119903,114,119955,114,120007,114,120059,114,120111,114,120163,114,120215,114,120267,114,120319,114,120371,114,120423,114,120475,114,43847,114,43848,114,7462,114,11397,114,43905,114,119318,82,8475,82,8476,82,8477,82,119825,82,119877,82,119929,82,120033,82,120189,82,120241,82,120293,82,120345,82,120397,82,120449,82,422,82,5025,82,5074,82,66740,82,5511,82,42211,82,94005,82,65363,115,119852,115,119904,115,119956,115,120008,115,120060,115,120112,115,120164,115,120216,115,120268,115,120320,115,120372,115,120424,115,120476,115,42801,115,445,115,1109,115,43946,115,71873,115,66632,115,65331,83,119826,83,119878,83,119930,83,119982,83,120034,83,120086,83,120138,83,120190,83,120242,83,120294,83,120346,83,120398,83,120450,83,1029,83,1359,83,5077,83,5082,83,42210,83,94010,83,66198,83,66592,83,119853,116,119905,116,119957,116,120009,116,120061,116,120113,116,120165,116,120217,116,120269,116,120321,116,120373,116,120425,116,120477,116,8868,84,10201,84,128872,84,65332,84,119827,84,119879,84,119931,84,119983,84,120035,84,120087,84,120139,84,120191,84,120243,84,120295,84,120347,84,120399,84,120451,84,932,84,120507,84,120565,84,120623,84,120681,84,120739,84,11430,84,5026,84,42196,84,93962,84,71868,84,66199,84,66225,84,66325,84,119854,117,119906,117,119958,117,120010,117,120062,117,120114,117,120166,117,120218,117,120270,117,120322,117,120374,117,120426,117,120478,117,42911,117,7452,117,43854,117,43858,117,651,117,965,117,120534,117,120592,117,120650,117,120708,117,120766,117,1405,117,66806,117,71896,117,8746,85,8899,85,119828,85,119880,85,119932,85,119984,85,120036,85,120088,85,120140,85,120192,85,120244,85,120296,85,120348,85,120400,85,120452,85,1357,85,4608,85,66766,85,5196,85,42228,85,94018,85,71864,85,8744,118,8897,118,65366,118,8564,118,119855,118,119907,118,119959,118,120011,118,120063,118,120115,118,120167,118,120219,118,120271,118,120323,118,120375,118,120427,118,120479,118,7456,118,957,118,120526,118,120584,118,120642,118,120700,118,120758,118,1141,118,1496,118,71430,118,43945,118,71872,118,119309,86,1639,86,1783,86,8548,86,119829,86,119881,86,119933,86,119985,86,120037,86,120089,86,120141,86,120193,86,120245,86,120297,86,120349,86,120401,86,120453,86,1140,86,11576,86,5081,86,5167,86,42719,86,42214,86,93960,86,71840,86,66845,86,623,119,119856,119,119908,119,119960,119,120012,119,120064,119,120116,119,120168,119,120220,119,120272,119,120324,119,120376,119,120428,119,120480,119,7457,119,1121,119,1309,119,1377,119,71434,119,71438,119,71439,119,43907,119,71919,87,71910,87,119830,87,119882,87,119934,87,119986,87,120038,87,120090,87,120142,87,120194,87,120246,87,120298,87,120350,87,120402,87,120454,87,1308,87,5043,87,5076,87,42218,87,5742,120,10539,120,10540,120,10799,120,65368,120,8569,120,119857,120,119909,120,119961,120,120013,120,120065,120,120117,120,120169,120,120221,120,120273,120,120325,120,120377,120,120429,120,120481,120,5441,120,5501,120,5741,88,9587,88,66338,88,71916,88,65336,88,8553,88,119831,88,119883,88,119935,88,119987,88,120039,88,120091,88,120143,88,120195,88,120247,88,120299,88,120351,88,120403,88,120455,88,42931,88,935,88,120510,88,120568,88,120626,88,120684,88,120742,88,11436,88,11613,88,5815,88,42219,88,66192,88,66228,88,66327,88,66855,88,611,121,7564,121,65369,121,119858,121,119910,121,119962,121,120014,121,120066,121,120118,121,120170,121,120222,121,120274,121,120326,121,120378,121,120430,121,120482,121,655,121,7935,121,43866,121,947,121,8509,121,120516,121,120574,121,120632,121,120690,121,120748,121,1199,121,4327,121,71900,121,65337,89,119832,89,119884,89,119936,89,119988,89,120040,89,120092,89,120144,89,120196,89,120248,89,120300,89,120352,89,120404,89,120456,89,933,89,978,89,120508,89,120566,89,120624,89,120682,89,120740,89,11432,89,1198,89,5033,89,5053,89,42220,89,94019,89,71844,89,66226,89,119859,122,119911,122,119963,122,120015,122,120067,122,120119,122,120171,122,120223,122,120275,122,120327,122,120379,122,120431,122,120483,122,7458,122,43923,122,71876,122,66293,90,71909,90,65338,90,8484,90,8488,90,119833,90,119885,90,119937,90,119989,90,120041,90,120197,90,120249,90,120301,90,120353,90,120405,90,120457,90,918,90,120493,90,120551,90,120609,90,120667,90,120725,90,5059,90,42204,90,71849,90],\\\"_default\\\":[160,32,8211,45,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,124,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89],\\\"cs\\\":[65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,124,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89],\\\"de\\\":[65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,124,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89],\\\"es\\\":[8211,45,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89],\\\"fr\\\":[65306,58,65281,33,8216,96,8245,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,124,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89],\\\"it\\\":[160,32,8211,45,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,124,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89],\\\"ja\\\":[8211,45,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,124,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89],\\\"ko\\\":[8211,45,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,124,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89],\\\"pl\\\":[65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,124,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89],\\\"pt-BR\\\":[65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,124,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89],\\\"qps-ploc\\\":[160,32,8211,45,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,124,1052,77,1086,111,1054,79,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89],\\\"ru\\\":[65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,305,105,921,124,1009,112,215,120],\\\"tr\\\":[160,32,8211,45,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,1050,75,921,124,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89],\\\"zh-hans\\\":[65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,124,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89],\\\"zh-hant\\\":[8211,45,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,124,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89]}');\n\t}\n\n\tprivate static map: Map<number, number> | undefined;\n\n\tprivate static getConfusablesForCurrentLocale(): Map<number, number> {\n\t\tif (!AmbiguousCharacters.map) {\n\t\t\tconst data = AmbiguousCharacters.getData();\n\n\t\t\tlet locale = platform.locale;\n\t\t\tif (!locale || !(locale in data)) {\n\t\t\t\tlocale = platform.language;\n\t\t\t}\n\t\t\tif (!locale || !(locale in data)) {\n\t\t\t\tlocale = '_default';\n\t\t\t}\n\n\t\t\tfunction arrayToMap(arr: number[]): Map<number, number> {\n\t\t\t\tconst result = new Map<number, number>();\n\t\t\t\tfor (let i = 0; i < arr.length; i += 2) {\n\t\t\t\t\tresult.set(arr[i], arr[i + 1]);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tconst set = arrayToMap(data['_common']);\n\n\t\t\tconst additionalConfusables = arrayToMap(data[locale]);\n\t\t\tfor (const [codePoint, originalCodePoint] of additionalConfusables) {\n\t\t\t\tset.set(codePoint, originalCodePoint);\n\t\t\t}\n\n\n\t\t\tAmbiguousCharacters.map = set;\n\t\t}\n\t\treturn AmbiguousCharacters.map;\n\t}\n\n\tpublic static isAmbiguous(codePoint: number): boolean {\n\t\treturn AmbiguousCharacters.getConfusablesForCurrentLocale().has(codePoint);\n\t}\n\n\t/**\n\t * Returns the non basic ASCII code point that the given code point can be confused,\n\t * or undefined if such code point does note exist.\n\t*/\n\tpublic static getPrimaryConfusable(codePoint: number): number | undefined {\n\t\treturn AmbiguousCharacters.getConfusablesForCurrentLocale().get(codePoint);\n\t}\n\n\tpublic static getPrimaryConfusableCodePoints(): ReadonlySet<number> {\n\t\treturn new Set(AmbiguousCharacters.getConfusablesForCurrentLocale().keys());\n\t}\n}\n\nexport class InvisibleCharacters {\n\tprivate static getRawData(): number[] {\n\t\treturn JSON.parse('[9,10,11,12,13,32,127,160,173,847,1564,4447,4448,6068,6069,6155,6156,6157,6158,7355,7356,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,8234,8235,8236,8237,8238,8239,8287,8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,10240,12288,12644,65024,65025,65026,65027,65028,65029,65030,65031,65032,65033,65034,65035,65036,65037,65038,65039,65279,65440,65520,65521,65522,65523,65524,65525,65526,65527,65528,65532,78844,119155,119156,119157,119158,119159,119160,119161,119162,917504,917505,917506,917507,917508,917509,917510,917511,917512,917513,917514,917515,917516,917517,917518,917519,917520,917521,917522,917523,917524,917525,917526,917527,917528,917529,917530,917531,917532,917533,917534,917535,917536,917537,917538,917539,917540,917541,917542,917543,917544,917545,917546,917547,917548,917549,917550,917551,917552,917553,917554,917555,917556,917557,917558,917559,917560,917561,917562,917563,917564,917565,917566,917567,917568,917569,917570,917571,917572,917573,917574,917575,917576,917577,917578,917579,917580,917581,917582,917583,917584,917585,917586,917587,917588,917589,917590,917591,917592,917593,917594,917595,917596,917597,917598,917599,917600,917601,917602,917603,917604,917605,917606,917607,917608,917609,917610,917611,917612,917613,917614,917615,917616,917617,917618,917619,917620,917621,917622,917623,917624,917625,917626,917627,917628,917629,917630,917631,917760,917761,917762,917763,917764,917765,917766,917767,917768,917769,917770,917771,917772,917773,917774,917775,917776,917777,917778,917779,917780,917781,917782,917783,917784,917785,917786,917787,917788,917789,917790,917791,917792,917793,917794,917795,917796,917797,917798,917799,917800,917801,917802,917803,917804,917805,917806,917807,917808,917809,917810,917811,917812,917813,917814,917815,917816,917817,917818,917819,917820,917821,917822,917823,917824,917825,917826,917827,917828,917829,917830,917831,917832,917833,917834,917835,917836,917837,917838,917839,917840,917841,917842,917843,917844,917845,917846,917847,917848,917849,917850,917851,917852,917853,917854,917855,917856,917857,917858,917859,917860,917861,917862,917863,917864,917865,917866,917867,917868,917869,917870,917871,917872,917873,917874,917875,917876,917877,917878,917879,917880,917881,917882,917883,917884,917885,917886,917887,917888,917889,917890,917891,917892,917893,917894,917895,917896,917897,917898,917899,917900,917901,917902,917903,917904,917905,917906,917907,917908,917909,917910,917911,917912,917913,917914,917915,917916,917917,917918,917919,917920,917921,917922,917923,917924,917925,917926,917927,917928,917929,917930,917931,917932,917933,917934,917935,917936,917937,917938,917939,917940,917941,917942,917943,917944,917945,917946,917947,917948,917949,917950,917951,917952,917953,917954,917955,917956,917957,917958,917959,917960,917961,917962,917963,917964,917965,917966,917967,917968,917969,917970,917971,917972,917973,917974,917975,917976,917977,917978,917979,917980,917981,917982,917983,917984,917985,917986,917987,917988,917989,917990,917991,917992,917993,917994,917995,917996,917997,917998,917999]');\n\t}\n\n\tprivate static _data: Set<number> | undefined = undefined;\n\n\tprivate static getData() {\n\t\tif (!this._data) {\n\t\t\tthis._data = new Set(InvisibleCharacters.getRawData());\n\t\t}\n\t\treturn this._data;\n\t}\n\n\tpublic static isInvisibleCharacter(codePoint: number): boolean {\n\t\treturn InvisibleCharacters.getData().has(codePoint);\n\t}\n\n\tpublic static get codePoints(): ReadonlySet<number> {\n\t\treturn InvisibleCharacters.getData();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\n\n/**\n * Return a hash value for an object.\n */\nexport function hash(obj: any): number {\n\treturn doHash(obj, 0);\n}\n\nexport function doHash(obj: any, hashVal: number): number {\n\tswitch (typeof obj) {\n\t\tcase 'object':\n\t\t\tif (obj === null) {\n\t\t\t\treturn numberHash(349, hashVal);\n\t\t\t} else if (Array.isArray(obj)) {\n\t\t\t\treturn arrayHash(obj, hashVal);\n\t\t\t}\n\t\t\treturn objectHash(obj, hashVal);\n\t\tcase 'string':\n\t\t\treturn stringHash(obj, hashVal);\n\t\tcase 'boolean':\n\t\t\treturn booleanHash(obj, hashVal);\n\t\tcase 'number':\n\t\t\treturn numberHash(obj, hashVal);\n\t\tcase 'undefined':\n\t\t\treturn numberHash(937, hashVal);\n\t\tdefault:\n\t\t\treturn numberHash(617, hashVal);\n\t}\n}\n\nexport function numberHash(val: number, initialHashVal: number): number {\n\treturn (((initialHashVal << 5) - initialHashVal) + val) | 0;  // hashVal * 31 + ch, keep as int32\n}\n\nfunction booleanHash(b: boolean, initialHashVal: number): number {\n\treturn numberHash(b ? 433 : 863, initialHashVal);\n}\n\nexport function stringHash(s: string, hashVal: number) {\n\thashVal = numberHash(149417, hashVal);\n\tfor (let i = 0, length = s.length; i < length; i++) {\n\t\thashVal = numberHash(s.charCodeAt(i), hashVal);\n\t}\n\treturn hashVal;\n}\n\nfunction arrayHash(arr: any[], initialHashVal: number): number {\n\tinitialHashVal = numberHash(104579, initialHashVal);\n\treturn arr.reduce((hashVal, item) => doHash(item, hashVal), initialHashVal);\n}\n\nfunction objectHash(obj: any, initialHashVal: number): number {\n\tinitialHashVal = numberHash(181387, initialHashVal);\n\treturn Object.keys(obj).sort().reduce((hashVal, key) => {\n\t\thashVal = stringHash(key, hashVal);\n\t\treturn doHash(obj[key], hashVal);\n\t}, initialHashVal);\n}\n\nexport class Hasher {\n\n\tprivate _value = 0;\n\n\tget value(): number {\n\t\treturn this._value;\n\t}\n\n\thash(obj: any): number {\n\t\tthis._value = doHash(obj, this._value);\n\t\treturn this._value;\n\t}\n}\n\nconst enum SHA1Constant {\n\tBLOCK_SIZE = 64, // 512 / 8\n\tUNICODE_REPLACEMENT = 0xFFFD,\n}\n\nfunction leftRotate(value: number, bits: number, totalBits: number = 32): number {\n\t// delta + bits = totalBits\n\tconst delta = totalBits - bits;\n\n\t// All ones, expect `delta` zeros aligned to the right\n\tconst mask = ~((1 << delta) - 1);\n\n\t// Join (value left-shifted `bits` bits) with (masked value right-shifted `delta` bits)\n\treturn ((value << bits) | ((mask & value) >>> delta)) >>> 0;\n}\n\nfunction fill(dest: Uint8Array, index: number = 0, count: number = dest.byteLength, value: number = 0): void {\n\tfor (let i = 0; i < count; i++) {\n\t\tdest[index + i] = value;\n\t}\n}\n\nfunction leftPad(value: string, length: number, char: string = '0'): string {\n\twhile (value.length < length) {\n\t\tvalue = char + value;\n\t}\n\treturn value;\n}\n\nexport function toHexString(buffer: ArrayBuffer): string;\nexport function toHexString(value: number, bitsize?: number): string;\nexport function toHexString(bufferOrValue: ArrayBuffer | number, bitsize: number = 32): string {\n\tif (bufferOrValue instanceof ArrayBuffer) {\n\t\treturn Array.from(new Uint8Array(bufferOrValue)).map(b => b.toString(16).padStart(2, '0')).join('');\n\t}\n\n\treturn leftPad((bufferOrValue >>> 0).toString(16), bitsize / 4);\n}\n\n/**\n * A SHA1 implementation that works with strings and does not allocate.\n */\nexport class StringSHA1 {\n\tprivate static _bigBlock32 = new DataView(new ArrayBuffer(320)); // 80 * 4 = 320\n\n\tprivate _h0 = 0x67452301;\n\tprivate _h1 = 0xEFCDAB89;\n\tprivate _h2 = 0x98BADCFE;\n\tprivate _h3 = 0x10325476;\n\tprivate _h4 = 0xC3D2E1F0;\n\n\tprivate readonly _buff: Uint8Array;\n\tprivate readonly _buffDV: DataView;\n\tprivate _buffLen: number;\n\tprivate _totalLen: number;\n\tprivate _leftoverHighSurrogate: number;\n\tprivate _finished: boolean;\n\n\tconstructor() {\n\t\tthis._buff = new Uint8Array(SHA1Constant.BLOCK_SIZE + 3 /* to fit any utf-8 */);\n\t\tthis._buffDV = new DataView(this._buff.buffer);\n\t\tthis._buffLen = 0;\n\t\tthis._totalLen = 0;\n\t\tthis._leftoverHighSurrogate = 0;\n\t\tthis._finished = false;\n\t}\n\n\tpublic update(str: string): void {\n\t\tconst strLen = str.length;\n\t\tif (strLen === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst buff = this._buff;\n\t\tlet buffLen = this._buffLen;\n\t\tlet leftoverHighSurrogate = this._leftoverHighSurrogate;\n\t\tlet charCode: number;\n\t\tlet offset: number;\n\n\t\tif (leftoverHighSurrogate !== 0) {\n\t\t\tcharCode = leftoverHighSurrogate;\n\t\t\toffset = -1;\n\t\t\tleftoverHighSurrogate = 0;\n\t\t} else {\n\t\t\tcharCode = str.charCodeAt(0);\n\t\t\toffset = 0;\n\t\t}\n\n\t\twhile (true) {\n\t\t\tlet codePoint = charCode;\n\t\t\tif (strings.isHighSurrogate(charCode)) {\n\t\t\t\tif (offset + 1 < strLen) {\n\t\t\t\t\tconst nextCharCode = str.charCodeAt(offset + 1);\n\t\t\t\t\tif (strings.isLowSurrogate(nextCharCode)) {\n\t\t\t\t\t\toffset++;\n\t\t\t\t\t\tcodePoint = strings.computeCodePoint(charCode, nextCharCode);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// illegal => unicode replacement character\n\t\t\t\t\t\tcodePoint = SHA1Constant.UNICODE_REPLACEMENT;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// last character is a surrogate pair\n\t\t\t\t\tleftoverHighSurrogate = charCode;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (strings.isLowSurrogate(charCode)) {\n\t\t\t\t// illegal => unicode replacement character\n\t\t\t\tcodePoint = SHA1Constant.UNICODE_REPLACEMENT;\n\t\t\t}\n\n\t\t\tbuffLen = this._push(buff, buffLen, codePoint);\n\t\t\toffset++;\n\t\t\tif (offset < strLen) {\n\t\t\t\tcharCode = str.charCodeAt(offset);\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._buffLen = buffLen;\n\t\tthis._leftoverHighSurrogate = leftoverHighSurrogate;\n\t}\n\n\tprivate _push(buff: Uint8Array, buffLen: number, codePoint: number): number {\n\t\tif (codePoint < 0x0080) {\n\t\t\tbuff[buffLen++] = codePoint;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tbuff[buffLen++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tbuff[buffLen++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else {\n\t\t\tbuff[buffLen++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t}\n\n\t\tif (buffLen >= SHA1Constant.BLOCK_SIZE) {\n\t\t\tthis._step();\n\t\t\tbuffLen -= SHA1Constant.BLOCK_SIZE;\n\t\t\tthis._totalLen += SHA1Constant.BLOCK_SIZE;\n\t\t\t// take last 3 in case of UTF8 overflow\n\t\t\tbuff[0] = buff[SHA1Constant.BLOCK_SIZE + 0];\n\t\t\tbuff[1] = buff[SHA1Constant.BLOCK_SIZE + 1];\n\t\t\tbuff[2] = buff[SHA1Constant.BLOCK_SIZE + 2];\n\t\t}\n\n\t\treturn buffLen;\n\t}\n\n\tpublic digest(): string {\n\t\tif (!this._finished) {\n\t\t\tthis._finished = true;\n\t\t\tif (this._leftoverHighSurrogate) {\n\t\t\t\t// illegal => unicode replacement character\n\t\t\t\tthis._leftoverHighSurrogate = 0;\n\t\t\t\tthis._buffLen = this._push(this._buff, this._buffLen, SHA1Constant.UNICODE_REPLACEMENT);\n\t\t\t}\n\t\t\tthis._totalLen += this._buffLen;\n\t\t\tthis._wrapUp();\n\t\t}\n\n\t\treturn toHexString(this._h0) + toHexString(this._h1) + toHexString(this._h2) + toHexString(this._h3) + toHexString(this._h4);\n\t}\n\n\tprivate _wrapUp(): void {\n\t\tthis._buff[this._buffLen++] = 0x80;\n\t\tfill(this._buff, this._buffLen);\n\n\t\tif (this._buffLen > 56) {\n\t\t\tthis._step();\n\t\t\tfill(this._buff);\n\t\t}\n\n\t\t// this will fit because the mantissa can cover up to 52 bits\n\t\tconst ml = 8 * this._totalLen;\n\n\t\tthis._buffDV.setUint32(56, Math.floor(ml / 4294967296), false);\n\t\tthis._buffDV.setUint32(60, ml % 4294967296, false);\n\n\t\tthis._step();\n\t}\n\n\tprivate _step(): void {\n\t\tconst bigBlock32 = StringSHA1._bigBlock32;\n\t\tconst data = this._buffDV;\n\n\t\tfor (let j = 0; j < 64 /* 16*4 */; j += 4) {\n\t\t\tbigBlock32.setUint32(j, data.getUint32(j, false), false);\n\t\t}\n\n\t\tfor (let j = 64; j < 320 /* 80*4 */; j += 4) {\n\t\t\tbigBlock32.setUint32(j, leftRotate((bigBlock32.getUint32(j - 12, false) ^ bigBlock32.getUint32(j - 32, false) ^ bigBlock32.getUint32(j - 56, false) ^ bigBlock32.getUint32(j - 64, false)), 1), false);\n\t\t}\n\n\t\tlet a = this._h0;\n\t\tlet b = this._h1;\n\t\tlet c = this._h2;\n\t\tlet d = this._h3;\n\t\tlet e = this._h4;\n\n\t\tlet f: number, k: number;\n\t\tlet temp: number;\n\n\t\tfor (let j = 0; j < 80; j++) {\n\t\t\tif (j < 20) {\n\t\t\t\tf = (b & c) | ((~b) & d);\n\t\t\t\tk = 0x5A827999;\n\t\t\t} else if (j < 40) {\n\t\t\t\tf = b ^ c ^ d;\n\t\t\t\tk = 0x6ED9EBA1;\n\t\t\t} else if (j < 60) {\n\t\t\t\tf = (b & c) | (b & d) | (c & d);\n\t\t\t\tk = 0x8F1BBCDC;\n\t\t\t} else {\n\t\t\t\tf = b ^ c ^ d;\n\t\t\t\tk = 0xCA62C1D6;\n\t\t\t}\n\n\t\t\ttemp = (leftRotate(a, 5) + f + e + k + bigBlock32.getUint32(j * 4, false)) & 0xffffffff;\n\t\t\te = d;\n\t\t\td = c;\n\t\t\tc = leftRotate(b, 30);\n\t\t\tb = a;\n\t\t\ta = temp;\n\t\t}\n\n\t\tthis._h0 = (this._h0 + a) & 0xffffffff;\n\t\tthis._h1 = (this._h1 + b) & 0xffffffff;\n\t\tthis._h2 = (this._h2 + c) & 0xffffffff;\n\t\tthis._h3 = (this._h3 + d) & 0xffffffff;\n\t\tthis._h4 = (this._h4 + e) & 0xffffffff;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { shuffle } from 'vs/base/common/arrays';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { compare, compareIgnoreCase, compareSubstring, compareSubstringIgnoreCase } from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\n\nexport function getOrSet<K, V>(map: Map<K, V>, key: K, value: V): V {\n\tlet result = map.get(key);\n\tif (result === undefined) {\n\t\tresult = value;\n\t\tmap.set(key, result);\n\t}\n\n\treturn result;\n}\n\nexport function mapToString<K, V>(map: Map<K, V>): string {\n\tconst entries: string[] = [];\n\tmap.forEach((value, key) => {\n\t\tentries.push(`${key} => ${value}`);\n\t});\n\n\treturn `Map(${map.size}) {${entries.join(', ')}}`;\n}\n\nexport function setToString<K>(set: Set<K>): string {\n\tconst entries: K[] = [];\n\tset.forEach(value => {\n\t\tentries.push(value);\n\t});\n\n\treturn `Set(${set.size}) {${entries.join(', ')}}`;\n}\n\nexport interface IKeyIterator<K> {\n\treset(key: K): this;\n\tnext(): this;\n\n\thasNext(): boolean;\n\tcmp(a: string): number;\n\tvalue(): string;\n}\n\nexport class StringIterator implements IKeyIterator<string> {\n\n\tprivate _value: string = '';\n\tprivate _pos: number = 0;\n\n\treset(key: string): this {\n\t\tthis._value = key;\n\t\tthis._pos = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tthis._pos += 1;\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._pos < this._value.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tconst aCode = a.charCodeAt(0);\n\t\tconst thisCode = this._value.charCodeAt(this._pos);\n\t\treturn aCode - thisCode;\n\t}\n\n\tvalue(): string {\n\t\treturn this._value[this._pos];\n\t}\n}\n\nexport class ConfigKeysIterator implements IKeyIterator<string> {\n\n\tprivate _value!: string;\n\tprivate _from!: number;\n\tprivate _to!: number;\n\n\tconstructor(\n\t\tprivate readonly _caseSensitive: boolean = true\n\t) { }\n\n\treset(key: string): this {\n\t\tthis._value = key;\n\t\tthis._from = 0;\n\t\tthis._to = 0;\n\t\treturn this.next();\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._to < this._value.length;\n\t}\n\n\tnext(): this {\n\t\t// this._data = key.split(/[\\\\/]/).filter(s => !!s);\n\t\tthis._from = this._to;\n\t\tlet justSeps = true;\n\t\tfor (; this._to < this._value.length; this._to++) {\n\t\t\tconst ch = this._value.charCodeAt(this._to);\n\t\t\tif (ch === CharCode.Period) {\n\t\t\t\tif (justSeps) {\n\t\t\t\t\tthis._from++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tjustSeps = false;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tcmp(a: string): number {\n\t\treturn this._caseSensitive\n\t\t\t? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n\t\t\t: compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n\t}\n\n\tvalue(): string {\n\t\treturn this._value.substring(this._from, this._to);\n\t}\n}\n\nexport class PathIterator implements IKeyIterator<string> {\n\n\tprivate _value!: string;\n\tprivate _from!: number;\n\tprivate _to!: number;\n\n\tconstructor(\n\t\tprivate readonly _splitOnBackslash: boolean = true,\n\t\tprivate readonly _caseSensitive: boolean = true\n\t) { }\n\n\treset(key: string): this {\n\t\tthis._value = key.replace(/\\\\$|\\/$/, '');\n\t\tthis._from = 0;\n\t\tthis._to = 0;\n\t\treturn this.next();\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._to < this._value.length;\n\t}\n\n\tnext(): this {\n\t\t// this._data = key.split(/[\\\\/]/).filter(s => !!s);\n\t\tthis._from = this._to;\n\t\tlet justSeps = true;\n\t\tfor (; this._to < this._value.length; this._to++) {\n\t\t\tconst ch = this._value.charCodeAt(this._to);\n\t\t\tif (ch === CharCode.Slash || this._splitOnBackslash && ch === CharCode.Backslash) {\n\t\t\t\tif (justSeps) {\n\t\t\t\t\tthis._from++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tjustSeps = false;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tcmp(a: string): number {\n\t\treturn this._caseSensitive\n\t\t\t? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n\t\t\t: compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n\t}\n\n\tvalue(): string {\n\t\treturn this._value.substring(this._from, this._to);\n\t}\n}\n\nconst enum UriIteratorState {\n\tScheme = 1, Authority = 2, Path = 3, Query = 4, Fragment = 5\n}\n\nexport class UriIterator implements IKeyIterator<URI> {\n\n\tprivate _pathIterator!: PathIterator;\n\tprivate _value!: URI;\n\tprivate _states: UriIteratorState[] = [];\n\tprivate _stateIdx: number = 0;\n\n\tconstructor(private readonly _ignorePathCasing: (uri: URI) => boolean) { }\n\n\treset(key: URI): this {\n\t\tthis._value = key;\n\t\tthis._states = [];\n\t\tif (this._value.scheme) {\n\t\t\tthis._states.push(UriIteratorState.Scheme);\n\t\t}\n\t\tif (this._value.authority) {\n\t\t\tthis._states.push(UriIteratorState.Authority);\n\t\t}\n\t\tif (this._value.path) {\n\t\t\tthis._pathIterator = new PathIterator(false, !this._ignorePathCasing(key));\n\t\t\tthis._pathIterator.reset(key.path);\n\t\t\tif (this._pathIterator.value()) {\n\t\t\t\tthis._states.push(UriIteratorState.Path);\n\t\t\t}\n\t\t}\n\t\tif (this._value.query) {\n\t\t\tthis._states.push(UriIteratorState.Query);\n\t\t}\n\t\tif (this._value.fragment) {\n\t\t\tthis._states.push(UriIteratorState.Fragment);\n\t\t}\n\t\tthis._stateIdx = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Path && this._pathIterator.hasNext()) {\n\t\t\tthis._pathIterator.next();\n\t\t} else {\n\t\t\tthis._stateIdx += 1;\n\t\t}\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn (this._states[this._stateIdx] === UriIteratorState.Path && this._pathIterator.hasNext())\n\t\t\t|| this._stateIdx < this._states.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Scheme) {\n\t\t\treturn compareIgnoreCase(a, this._value.scheme);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Authority) {\n\t\t\treturn compareIgnoreCase(a, this._value.authority);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Path) {\n\t\t\treturn this._pathIterator.cmp(a);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Query) {\n\t\t\treturn compare(a, this._value.query);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Fragment) {\n\t\t\treturn compare(a, this._value.fragment);\n\t\t}\n\t\tthrow new Error();\n\t}\n\n\tvalue(): string {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Scheme) {\n\t\t\treturn this._value.scheme;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Authority) {\n\t\t\treturn this._value.authority;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Path) {\n\t\t\treturn this._pathIterator.value();\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Query) {\n\t\t\treturn this._value.query;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Fragment) {\n\t\t\treturn this._value.fragment;\n\t\t}\n\t\tthrow new Error();\n\t}\n}\n\nclass TernarySearchTreeNode<K, V> {\n\theight: number = 1;\n\tsegment!: string;\n\tvalue: V | undefined;\n\tkey: K | undefined;\n\tleft: TernarySearchTreeNode<K, V> | undefined;\n\tmid: TernarySearchTreeNode<K, V> | undefined;\n\tright: TernarySearchTreeNode<K, V> | undefined;\n\n\tisEmpty(): boolean {\n\t\treturn !this.left && !this.mid && !this.right && !this.value;\n\t}\n\n\trotateLeft() {\n\t\tconst tmp = this.right!;\n\t\tthis.right = tmp.left;\n\t\ttmp.left = this;\n\t\tthis.updateHeight();\n\t\ttmp.updateHeight();\n\t\treturn tmp;\n\t}\n\n\trotateRight() {\n\t\tconst tmp = this.left!;\n\t\tthis.left = tmp.right;\n\t\ttmp.right = this;\n\t\tthis.updateHeight();\n\t\ttmp.updateHeight();\n\t\treturn tmp;\n\t}\n\n\tupdateHeight() {\n\t\tthis.height = 1 + Math.max(this.heightLeft, this.heightRight);\n\t}\n\n\tbalanceFactor() {\n\t\treturn this.heightRight - this.heightLeft;\n\t}\n\n\tget heightLeft() {\n\t\treturn this.left?.height ?? 0;\n\t}\n\n\tget heightRight() {\n\t\treturn this.right?.height ?? 0;\n\t}\n}\n\nconst enum Dir {\n\tLeft = -1,\n\tMid = 0,\n\tRight = 1,\n}\n\nexport class TernarySearchTree<K, V> {\n\n\tstatic forUris<E>(ignorePathCasing: (key: URI) => boolean = () => false): TernarySearchTree<URI, E> {\n\t\treturn new TernarySearchTree<URI, E>(new UriIterator(ignorePathCasing));\n\t}\n\n\tstatic forPaths<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new PathIterator());\n\t}\n\n\tstatic forStrings<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new StringIterator());\n\t}\n\n\tstatic forConfigKeys<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new ConfigKeysIterator());\n\t}\n\n\tprivate _iter: IKeyIterator<K>;\n\tprivate _root: TernarySearchTreeNode<K, V> | undefined;\n\n\tconstructor(segments: IKeyIterator<K>) {\n\t\tthis._iter = segments;\n\t}\n\n\tclear(): void {\n\t\tthis._root = undefined;\n\t}\n\n\t/**\n\t * Fill the tree with the same value of the given keys\n\t */\n\tfill(element: V, keys: readonly K[]): void;\n\t/**\n\t * Fill the tree with given [key,value]-tuples\n\t */\n\tfill(values: readonly [K, V][]): void;\n\tfill(values: readonly [K, V][] | V, keys?: readonly K[]): void {\n\t\tif (keys) {\n\t\t\tconst arr = keys.slice(0);\n\t\t\tshuffle(arr);\n\t\t\tfor (let k of arr) {\n\t\t\t\tthis.set(k, (<V>values));\n\t\t\t}\n\t\t} else {\n\t\t\tconst arr = (<[K, V][]>values).slice(0);\n\t\t\tshuffle(arr);\n\t\t\tfor (let entry of arr) {\n\t\t\t\tthis.set(entry[0], entry[1]);\n\t\t\t}\n\t\t}\n\t}\n\n\tset(key: K, element: V): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node: TernarySearchTreeNode<K, V>;\n\n\t\tif (!this._root) {\n\t\t\tthis._root = new TernarySearchTreeNode<K, V>();\n\t\t\tthis._root.segment = iter.value();\n\t\t}\n\t\tconst stack: [Dir, TernarySearchTreeNode<K, V>][] = [];\n\n\t\t// find insert_node\n\t\tnode = this._root;\n\t\twhile (true) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tif (!node.left) {\n\t\t\t\t\tnode.left = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.left.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tstack.push([Dir.Left, node]);\n\t\t\t\tnode = node.left;\n\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tif (!node.right) {\n\t\t\t\t\tnode.right = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.right.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tstack.push([Dir.Right, node]);\n\t\t\t\tnode = node.right;\n\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\tnode.mid = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.mid.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tstack.push([Dir.Mid, node]);\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// set value\n\t\tconst oldElement = node.value;\n\t\tnode.value = element;\n\t\tnode.key = key;\n\n\t\t// balance\n\t\tfor (let i = stack.length - 1; i >= 0; i--) {\n\t\t\tconst node = stack[i][1];\n\n\t\t\tnode.updateHeight();\n\t\t\tconst bf = node.balanceFactor();\n\n\t\t\tif (bf < -1 || bf > 1) {\n\t\t\t\t// needs rotate\n\t\t\t\tconst d1 = stack[i][0];\n\t\t\t\tconst d2 = stack[i + 1][0];\n\n\t\t\t\tif (d1 === Dir.Right && d2 === Dir.Right) {\n\t\t\t\t\t//right, right -> rotate left\n\t\t\t\t\tstack[i][1] = node.rotateLeft();\n\n\t\t\t\t} else if (d1 === Dir.Left && d2 === Dir.Left) {\n\t\t\t\t\t// left, left -> rotate right\n\t\t\t\t\tstack[i][1] = node.rotateRight();\n\n\t\t\t\t} else if (d1 === Dir.Right && d2 === Dir.Left) {\n\t\t\t\t\t// right, left -> double rotate right, left\n\t\t\t\t\tnode.right = stack[i + 1][1] = stack[i + 1][1].rotateRight();\n\t\t\t\t\tstack[i][1] = node.rotateLeft();\n\n\t\t\t\t} else if (d1 === Dir.Left && d2 === Dir.Right) {\n\t\t\t\t\t// left, right -> double rotate left, right\n\t\t\t\t\tnode.left = stack[i + 1][1] = stack[i + 1][1].rotateLeft();\n\t\t\t\t\tstack[i][1] = node.rotateRight();\n\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t}\n\n\t\t\t\t// patch path to parent\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tswitch (stack[i - 1][0]) {\n\t\t\t\t\t\tcase Dir.Left:\n\t\t\t\t\t\t\tstack[i - 1][1].left = stack[i][1];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase Dir.Right:\n\t\t\t\t\t\t\tstack[i - 1][1].right = stack[i][1];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase Dir.Mid:\n\t\t\t\t\t\t\tstack[i - 1][1].mid = stack[i][1];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis._root = stack[0][1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn oldElement;\n\t}\n\n\tget(key: K): V | undefined {\n\t\treturn this._getNode(key)?.value;\n\t}\n\n\tprivate _getNode(key: K) {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\thas(key: K): boolean {\n\t\tconst node = this._getNode(key);\n\t\treturn !(node?.value === undefined && node?.mid === undefined);\n\t}\n\n\tdelete(key: K): void {\n\t\treturn this._delete(key, false);\n\t}\n\n\tdeleteSuperstr(key: K): void {\n\t\treturn this._delete(key, true);\n\t}\n\n\tprivate _delete(key: K, superStr: boolean): void {\n\t\tconst iter = this._iter.reset(key);\n\t\tconst stack: [Dir, TernarySearchTreeNode<K, V>][] = [];\n\t\tlet node = this._root;\n\n\t\t// find node\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tstack.push([Dir.Left, node]);\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tstack.push([Dir.Right, node]);\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tstack.push([Dir.Mid, node]);\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!node) {\n\t\t\t// node not found\n\t\t\treturn;\n\t\t}\n\n\t\tif (superStr) {\n\t\t\t// removing children, reset height\n\t\t\tnode.left = undefined;\n\t\t\tnode.mid = undefined;\n\t\t\tnode.right = undefined;\n\t\t\tnode.height = 1;\n\t\t} else {\n\t\t\t// removing element\n\t\t\tnode.key = undefined;\n\t\t\tnode.value = undefined;\n\t\t}\n\n\t\t// BST node removal\n\t\tif (!node.mid && !node.value) {\n\t\t\tif (node.left && node.right) {\n\t\t\t\t// full node\n\t\t\t\tconst min = this._min(node.right);\n\t\t\t\tconst { key, value, segment } = min;\n\t\t\t\tthis._delete(min.key!, false);\n\t\t\t\tnode.key = key;\n\t\t\t\tnode.value = value;\n\t\t\t\tnode.segment = segment;\n\n\t\t\t} else {\n\t\t\t\t// empty or half empty\n\t\t\t\tconst newChild = node.left ?? node.right;\n\t\t\t\tif (stack.length > 0) {\n\t\t\t\t\tconst [dir, parent] = stack[stack.length - 1];\n\t\t\t\t\tswitch (dir) {\n\t\t\t\t\t\tcase Dir.Left: parent.left = newChild; break;\n\t\t\t\t\t\tcase Dir.Mid: parent.mid = newChild; break;\n\t\t\t\t\t\tcase Dir.Right: parent.right = newChild; break;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis._root = newChild;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// AVL balance\n\t\tfor (let i = stack.length - 1; i >= 0; i--) {\n\t\t\tconst node = stack[i][1];\n\n\t\t\tnode.updateHeight();\n\t\t\tconst bf = node.balanceFactor();\n\t\t\tif (bf > 1) {\n\t\t\t\t// right heavy\n\t\t\t\tif (node.right!.balanceFactor() >= 0) {\n\t\t\t\t\t// right, right -> rotate left\n\t\t\t\t\tstack[i][1] = node.rotateLeft();\n\t\t\t\t} else {\n\t\t\t\t\t// right, left -> double rotate\n\t\t\t\t\tnode.right = stack[i + 1][1] = stack[i + 1][1].rotateRight();\n\t\t\t\t\tstack[i][1] = node.rotateLeft();\n\t\t\t\t}\n\n\t\t\t} else if (bf < -1) {\n\t\t\t\t// left heavy\n\t\t\t\tif (node.left!.balanceFactor() <= 0) {\n\t\t\t\t\t// left, left -> rotate right\n\t\t\t\t\tstack[i][1] = node.rotateRight();\n\t\t\t\t} else {\n\t\t\t\t\t// left, right -> double rotate\n\t\t\t\t\tnode.left = stack[i + 1][1] = stack[i + 1][1].rotateLeft();\n\t\t\t\t\tstack[i][1] = node.rotateRight();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// patch path to parent\n\t\t\tif (i > 0) {\n\t\t\t\tswitch (stack[i - 1][0]) {\n\t\t\t\t\tcase Dir.Left:\n\t\t\t\t\t\tstack[i - 1][1].left = stack[i][1];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase Dir.Right:\n\t\t\t\t\t\tstack[i - 1][1].right = stack[i][1];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase Dir.Mid:\n\t\t\t\t\t\tstack[i - 1][1].mid = stack[i][1];\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._root = stack[0][1];\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _min(node: TernarySearchTreeNode<K, V>): TernarySearchTreeNode<K, V> {\n\t\twhile (node.left) {\n\t\t\tnode = node.left;\n\t\t}\n\t\treturn node;\n\t}\n\n\tfindSubstr(key: K): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\tlet candidate: V | undefined = undefined;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tcandidate = node.value || candidate;\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node && node.value || candidate;\n\t}\n\n\tfindSuperstr(key: K): IterableIterator<[K, V]> | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// collect\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t} else {\n\t\t\t\t\treturn this._entries(node.mid);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tforEach(callback: (value: V, index: K) => any): void {\n\t\tfor (const [key, value] of this) {\n\t\t\tcallback(value, key);\n\t\t}\n\t}\n\n\t*[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\tyield* this._entries(this._root);\n\t}\n\n\tprivate *_entries(node: TernarySearchTreeNode<K, V> | undefined): IterableIterator<[K, V]> {\n\t\t// DFS\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tif (node.left) {\n\t\t\tyield* this._entries(node.left);\n\t\t}\n\t\tif (node.value) {\n\t\t\tyield [node.key!, node.value];\n\t\t}\n\t\tif (node.mid) {\n\t\t\tyield* this._entries(node.mid);\n\t\t}\n\t\tif (node.right) {\n\t\t\tyield* this._entries(node.right);\n\t\t}\n\t}\n\n\t// for debug/testing\n\t_isBalanced(): boolean {\n\t\tconst nodeIsBalanced = (node: TernarySearchTreeNode<any, any> | undefined): boolean => {\n\t\t\tif (!node) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tconst bf = node.balanceFactor();\n\t\t\tif (bf < -1 || bf > 1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn nodeIsBalanced(node.left) && nodeIsBalanced(node.right);\n\t\t};\n\t\treturn nodeIsBalanced(this._root);\n\t}\n}\n\ninterface ResourceMapKeyFn {\n\t(resource: URI): string;\n}\n\nclass ResourceMapEntry<T> {\n\tconstructor(readonly uri: URI, readonly value: T) { }\n}\n\nexport class ResourceMap<T> implements Map<URI, T> {\n\n\tprivate static readonly defaultToKey = (resource: URI) => resource.toString();\n\n\treadonly [Symbol.toStringTag] = 'ResourceMap';\n\n\tprivate readonly map: Map<string, ResourceMapEntry<T>>;\n\tprivate readonly toKey: ResourceMapKeyFn;\n\n\t/**\n\t *\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(toKey?: ResourceMapKeyFn);\n\n\t/**\n\t *\n\t * @param other Another resource which this maps is created from\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(other?: ResourceMap<T>, toKey?: ResourceMapKeyFn);\n\n\tconstructor(mapOrKeyFn?: ResourceMap<T> | ResourceMapKeyFn, toKey?: ResourceMapKeyFn) {\n\t\tif (mapOrKeyFn instanceof ResourceMap) {\n\t\t\tthis.map = new Map(mapOrKeyFn.map);\n\t\t\tthis.toKey = toKey ?? ResourceMap.defaultToKey;\n\t\t} else {\n\t\t\tthis.map = new Map();\n\t\t\tthis.toKey = mapOrKeyFn ?? ResourceMap.defaultToKey;\n\t\t}\n\t}\n\n\tset(resource: URI, value: T): this {\n\t\tthis.map.set(this.toKey(resource), new ResourceMapEntry(resource, value));\n\t\treturn this;\n\t}\n\n\tget(resource: URI): T | undefined {\n\t\treturn this.map.get(this.toKey(resource))?.value;\n\t}\n\n\thas(resource: URI): boolean {\n\t\treturn this.map.has(this.toKey(resource));\n\t}\n\n\tget size(): number {\n\t\treturn this.map.size;\n\t}\n\n\tclear(): void {\n\t\tthis.map.clear();\n\t}\n\n\tdelete(resource: URI): boolean {\n\t\treturn this.map.delete(this.toKey(resource));\n\t}\n\n\tforEach(clb: (value: T, key: URI, map: Map<URI, T>) => void, thisArg?: any): void {\n\t\tif (typeof thisArg !== 'undefined') {\n\t\t\tclb = clb.bind(thisArg);\n\t\t}\n\t\tfor (let [_, entry] of this.map) {\n\t\t\tclb(entry.value, entry.uri, <any>this);\n\t\t}\n\t}\n\n\t*values(): IterableIterator<T> {\n\t\tfor (let entry of this.map.values()) {\n\t\t\tyield entry.value;\n\t\t}\n\t}\n\n\t*keys(): IterableIterator<URI> {\n\t\tfor (let entry of this.map.values()) {\n\t\t\tyield entry.uri;\n\t\t}\n\t}\n\n\t*entries(): IterableIterator<[URI, T]> {\n\t\tfor (let entry of this.map.values()) {\n\t\t\tyield [entry.uri, entry.value];\n\t\t}\n\t}\n\n\t*[Symbol.iterator](): IterableIterator<[URI, T]> {\n\t\tfor (let [, entry] of this.map) {\n\t\t\tyield [entry.uri, entry.value];\n\t\t}\n\t}\n}\n\ninterface Item<K, V> {\n\tprevious: Item<K, V> | undefined;\n\tnext: Item<K, V> | undefined;\n\tkey: K;\n\tvalue: V;\n}\n\nexport const enum Touch {\n\tNone = 0,\n\tAsOld = 1,\n\tAsNew = 2\n}\n\nexport class LinkedMap<K, V> implements Map<K, V> {\n\n\treadonly [Symbol.toStringTag] = 'LinkedMap';\n\n\tprivate _map: Map<K, Item<K, V>>;\n\tprivate _head: Item<K, V> | undefined;\n\tprivate _tail: Item<K, V> | undefined;\n\tprivate _size: number;\n\n\tprivate _state: number;\n\n\tconstructor() {\n\t\tthis._map = new Map<K, Item<K, V>>();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t\tthis._state = 0;\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t\tthis._state++;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn !this._head && !this._tail;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tget first(): V | undefined {\n\t\treturn this._head?.value;\n\t}\n\n\tget last(): V | undefined {\n\t\treturn this._tail?.value;\n\t}\n\n\thas(key: K): boolean {\n\t\treturn this._map.has(key);\n\t}\n\n\tget(key: K, touch: Touch = Touch.None): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (touch !== Touch.None) {\n\t\t\tthis.touch(item, touch);\n\t\t}\n\t\treturn item.value;\n\t}\n\n\tset(key: K, value: V, touch: Touch = Touch.None): this {\n\t\tlet item = this._map.get(key);\n\t\tif (item) {\n\t\t\titem.value = value;\n\t\t\tif (touch !== Touch.None) {\n\t\t\t\tthis.touch(item, touch);\n\t\t\t}\n\t\t} else {\n\t\t\titem = { key, value, next: undefined, previous: undefined };\n\t\t\tswitch (touch) {\n\t\t\t\tcase Touch.None:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsOld:\n\t\t\t\t\tthis.addItemFirst(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsNew:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._map.set(key, item);\n\t\t\tthis._size++;\n\t\t}\n\t\treturn this;\n\t}\n\n\tdelete(key: K): boolean {\n\t\treturn !!this.remove(key);\n\t}\n\n\tremove(key: K): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._map.delete(key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tshift(): V | undefined {\n\t\tif (!this._head && !this._tail) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tconst item = this._head;\n\t\tthis._map.delete(item.key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tforEach(callbackfn: (value: V, key: K, map: LinkedMap<K, V>) => void, thisArg?: any): void {\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tif (thisArg) {\n\t\t\t\tcallbackfn.bind(thisArg)(current.value, current.key, this);\n\t\t\t} else {\n\t\t\t\tcallbackfn(current.value, current.key, this);\n\t\t\t}\n\t\t\tif (this._state !== state) {\n\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n\n\tkeys(): IterableIterator<K> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<K> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<K> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.key, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<V> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<V> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.value, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tentries(): IterableIterator<[K, V]> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<[K, V]> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<[K, V]> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result: IteratorResult<[K, V]> = { value: [current.key, current.value], done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\treturn this.entries();\n\t}\n\n\tprotected trimOld(newSize: number) {\n\t\tif (newSize >= this.size) {\n\t\t\treturn;\n\t\t}\n\t\tif (newSize === 0) {\n\t\t\tthis.clear();\n\t\t\treturn;\n\t\t}\n\t\tlet current = this._head;\n\t\tlet currentSize = this.size;\n\t\twhile (current && currentSize > newSize) {\n\t\t\tthis._map.delete(current.key);\n\t\t\tcurrent = current.next;\n\t\t\tcurrentSize--;\n\t\t}\n\t\tthis._head = current;\n\t\tthis._size = currentSize;\n\t\tif (current) {\n\t\t\tcurrent.previous = undefined;\n\t\t}\n\t\tthis._state++;\n\t}\n\n\tprivate addItemFirst(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._tail = item;\n\t\t} else if (!this._head) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t}\n\t\tthis._head = item;\n\t\tthis._state++;\n\t}\n\n\tprivate addItemLast(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._head = item;\n\t\t} else if (!this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t}\n\t\tthis._tail = item;\n\t\tthis._state++;\n\t}\n\n\tprivate removeItem(item: Item<K, V>): void {\n\t\tif (item === this._head && item === this._tail) {\n\t\t\tthis._head = undefined;\n\t\t\tthis._tail = undefined;\n\t\t}\n\t\telse if (item === this._head) {\n\t\t\t// This can only happen if size === 1 which is handled\n\t\t\t// by the case above.\n\t\t\tif (!item.next) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.next.previous = undefined;\n\t\t\tthis._head = item.next;\n\t\t}\n\t\telse if (item === this._tail) {\n\t\t\t// This can only happen if size === 1 which is handled\n\t\t\t// by the case above.\n\t\t\tif (!item.previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.previous.next = undefined;\n\t\t\tthis._tail = item.previous;\n\t\t}\n\t\telse {\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\t\t\tif (!next || !previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\tnext.previous = previous;\n\t\t\tprevious.next = next;\n\t\t}\n\t\titem.next = undefined;\n\t\titem.previous = undefined;\n\t\tthis._state++;\n\t}\n\n\tprivate touch(item: Item<K, V>, touch: Touch): void {\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tif ((touch !== Touch.AsOld && touch !== Touch.AsNew)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (touch === Touch.AsOld) {\n\t\t\tif (item === this._head) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item\n\t\t\tif (item === this._tail) {\n\t\t\t\t// previous must be defined since item was not head but is tail\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tprevious!.next = undefined;\n\t\t\t\tthis._tail = previous;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\n\t\t\t// Insert the node at head\n\t\t\titem.previous = undefined;\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t\tthis._head = item;\n\t\t\tthis._state++;\n\t\t} else if (touch === Touch.AsNew) {\n\t\t\tif (item === this._tail) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item.\n\t\t\tif (item === this._head) {\n\t\t\t\t// next must be defined since item was not tail but is head\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tnext!.previous = undefined;\n\t\t\t\tthis._head = next;\n\t\t\t} else {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\t\t\titem.next = undefined;\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t\tthis._tail = item;\n\t\t\tthis._state++;\n\t\t}\n\t}\n\n\ttoJSON(): [K, V][] {\n\t\tconst data: [K, V][] = [];\n\n\t\tthis.forEach((value, key) => {\n\t\t\tdata.push([key, value]);\n\t\t});\n\n\t\treturn data;\n\t}\n\n\tfromJSON(data: [K, V][]): void {\n\t\tthis.clear();\n\n\t\tfor (const [key, value] of data) {\n\t\t\tthis.set(key, value);\n\t\t}\n\t}\n}\n\nexport class LRUCache<K, V> extends LinkedMap<K, V> {\n\n\tprivate _limit: number;\n\tprivate _ratio: number;\n\n\tconstructor(limit: number, ratio: number = 1) {\n\t\tsuper();\n\t\tthis._limit = limit;\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t}\n\n\tget limit(): number {\n\t\treturn this._limit;\n\t}\n\n\tset limit(limit: number) {\n\t\tthis._limit = limit;\n\t\tthis.checkTrim();\n\t}\n\n\tget ratio(): number {\n\t\treturn this._ratio;\n\t}\n\n\tset ratio(ratio: number) {\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t\tthis.checkTrim();\n\t}\n\n\toverride get(key: K, touch: Touch = Touch.AsNew): V | undefined {\n\t\treturn super.get(key, touch);\n\t}\n\n\tpeek(key: K): V | undefined {\n\t\treturn super.get(key, Touch.None);\n\t}\n\n\toverride set(key: K, value: V): this {\n\t\tsuper.set(key, value, Touch.AsNew);\n\t\tthis.checkTrim();\n\t\treturn this;\n\t}\n\n\tprivate checkTrim() {\n\t\tif (this.size > this._limit) {\n\t\t\tthis.trimOld(Math.round(this._limit * this._ratio));\n\t\t}\n\t}\n}\n\n/**\n * Wraps the map in type that only implements readonly properties. Useful\n * in the extension host to prevent the consumer from making any mutations.\n */\nexport class ReadonlyMapView<K, V> implements ReadonlyMap<K, V>{\n\treadonly #source: ReadonlyMap<K, V>;\n\n\tpublic get size() {\n\t\treturn this.#source.size;\n\t}\n\n\tconstructor(source: ReadonlyMap<K, V>) {\n\t\tthis.#source = source;\n\t}\n\n\tforEach(callbackfn: (value: V, key: K, map: ReadonlyMap<K, V>) => void, thisArg?: any): void {\n\t\tthis.#source.forEach(callbackfn, thisArg);\n\t}\n\n\tget(key: K): V | undefined {\n\t\treturn this.#source.get(key);\n\t}\n\n\thas(key: K): boolean {\n\t\treturn this.#source.has(key);\n\t}\n\n\tentries(): IterableIterator<[K, V]> {\n\t\treturn this.#source.entries();\n\t}\n\n\tkeys(): IterableIterator<K> {\n\t\treturn this.#source.keys();\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\treturn this.#source.values();\n\t}\n\n\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\treturn this.#source.entries();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LRUCache } from 'vs/base/common/map';\n\nconst nfcCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFC(str: string): string {\n\treturn normalize(str, 'NFC', nfcCache);\n}\n\nconst nfdCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFD(str: string): string {\n\treturn normalize(str, 'NFD', nfdCache);\n}\n\nconst nonAsciiCharactersPattern = /[^\\u0000-\\u0080]/;\nfunction normalize(str: string, form: string, normalizedCache: LRUCache<string, string>): string {\n\tif (!str) {\n\t\treturn str;\n\t}\n\n\tconst cached = normalizedCache.get(str);\n\tif (cached) {\n\t\treturn cached;\n\t}\n\n\tlet res: string;\n\tif (nonAsciiCharactersPattern.test(str)) {\n\t\tres = str.normalize(form);\n\t} else {\n\t\tres = str;\n\t}\n\n\t// Use the cache for fast lookup\n\tnormalizedCache.set(str, res);\n\n\treturn res;\n}\n\nexport const removeAccents: (str: string) => string = (function () {\n\t// transform into NFD form and remove accents\n\t// see: https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript/37511463#37511463\n\tconst regex = /[\\u0300-\\u036f]/g;\n\treturn function (str: string) {\n\t\treturn normalizeNFD(str).replace(regex, '');\n\t};\n})();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\n\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray(array: any): array is any[] {\n\treturn Array.isArray(array);\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str: unknown): str is string {\n\treturn (typeof str === 'string');\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Array and each element in the array is a string.\n */\nexport function isStringArray(value: unknown): value is string[] {\n\treturn Array.isArray(value) && (<unknown[]>value).every(elem => isString(elem));\n}\n\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj: unknown): obj is Object {\n\t// The method can't do a type cast since there are type (like strings) which\n\t// are subclasses of any put not positvely matched by the function. Hence type\n\t// narrowing results in wrong results.\n\treturn typeof obj === 'object'\n\t\t&& obj !== null\n\t\t&& !Array.isArray(obj)\n\t\t&& !(obj instanceof RegExp)\n\t\t&& !(obj instanceof Date);\n}\n\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj: unknown): obj is number {\n\treturn (typeof obj === 'number' && !isNaN(obj));\n}\n\n/**\n * @returns whether the provided parameter is an Iterable, casting to the given generic\n */\nexport function isIterable<T>(obj: unknown): obj is Iterable<T> {\n\treturn !!obj && typeof (obj as any)[Symbol.iterator] === 'function';\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj: unknown): obj is boolean {\n\treturn (obj === true || obj === false);\n}\n\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj: unknown): obj is undefined {\n\treturn (typeof obj === 'undefined');\n}\n\n/**\n * @returns whether the provided parameter is defined.\n */\nexport function isDefined<T>(arg: T | null | undefined): arg is T {\n\treturn !isUndefinedOrNull(arg);\n}\n\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj: unknown): obj is undefined | null {\n\treturn (isUndefined(obj) || obj === null);\n}\n\n\nexport function assertType(condition: unknown, type?: string): asserts condition {\n\tif (!condition) {\n\t\tthrow new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n\t}\n}\n\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined<T>(arg: T | null | undefined): T {\n\tif (isUndefinedOrNull(arg)) {\n\t\tthrow new Error('Assertion Failed: argument is undefined or null');\n\t}\n\n\treturn arg;\n}\n\n/**\n * Asserts that each argument passed in is neither undefined nor null.\n */\nexport function assertAllDefined<T1, T2>(t1: T1 | null | undefined, t2: T2 | null | undefined): [T1, T2];\nexport function assertAllDefined<T1, T2, T3>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined): [T1, T2, T3];\nexport function assertAllDefined<T1, T2, T3, T4>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined, t4: T4 | null | undefined): [T1, T2, T3, T4];\nexport function assertAllDefined(...args: (unknown | null | undefined)[]): unknown[] {\n\tconst result = [];\n\n\tfor (let i = 0; i < args.length; i++) {\n\t\tconst arg = args[i];\n\n\t\tif (isUndefinedOrNull(arg)) {\n\t\t\tthrow new Error(`Assertion Failed: argument at index ${i} is undefined or null`);\n\t\t}\n\n\t\tresult.push(arg);\n\t}\n\n\treturn result;\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj: unknown): obj is object {\n\tif (!isObject(obj)) {\n\t\treturn false;\n\t}\n\n\tfor (let key in obj) {\n\t\tif (hasOwnProperty.call(obj, key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj: unknown): obj is Function {\n\treturn (typeof obj === 'function');\n}\n\n/**\n * @returns whether the provided parameters is are JavaScript Function or not.\n */\nexport function areFunctions(...objects: unknown[]): boolean {\n\treturn objects.length > 0 && objects.every(isFunction);\n}\n\nexport type TypeConstraint = string | Function;\n\nexport function validateConstraints(args: unknown[], constraints: Array<TypeConstraint | undefined>): void {\n\tconst len = Math.min(args.length, constraints.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tvalidateConstraint(args[i], constraints[i]);\n\t}\n}\n\nexport function validateConstraint(arg: unknown, constraint: TypeConstraint | undefined): void {\n\n\tif (isString(constraint)) {\n\t\tif (typeof arg !== constraint) {\n\t\t\tthrow new Error(`argument does not match constraint: typeof ${constraint}`);\n\t\t}\n\t} else if (isFunction(constraint)) {\n\t\ttry {\n\t\t\tif (arg instanceof constraint) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch {\n\t\t\t// ignore\n\t\t}\n\t\tif (!isUndefinedOrNull(arg) && (arg as any).constructor === constraint) {\n\t\t\treturn;\n\t\t}\n\t\tif (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n\t\t\treturn;\n\t\t}\n\t\tthrow new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n\t}\n}\n\nexport function getAllPropertyNames(obj: object): string[] {\n\tlet res: string[] = [];\n\tlet proto = Object.getPrototypeOf(obj);\n\twhile (Object.prototype !== proto) {\n\t\tres = res.concat(Object.getOwnPropertyNames(proto));\n\t\tproto = Object.getPrototypeOf(proto);\n\t}\n\treturn res;\n}\n\nexport function getAllMethodNames(obj: object): string[] {\n\tconst methods: string[] = [];\n\tfor (const prop of getAllPropertyNames(obj)) {\n\t\tif (typeof (obj as any)[prop] === 'function') {\n\t\t\tmethods.push(prop);\n\t\t}\n\t}\n\treturn methods;\n}\n\nexport function createProxyObject<T extends object>(methodNames: string[], invoke: (method: string, args: unknown[]) => unknown): T {\n\tconst createProxyMethod = (method: string): () => unknown => {\n\t\treturn function () {\n\t\t\tconst args = Array.prototype.slice.call(arguments, 0);\n\t\t\treturn invoke(method, args);\n\t\t};\n\t};\n\n\tlet result = {} as T;\n\tfor (const methodName of methodNames) {\n\t\t(<any>result)[methodName] = createProxyMethod(methodName);\n\t}\n\treturn result;\n}\n\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined<T>(x: T | null): T | undefined {\n\treturn x === null ? undefined : x;\n}\n\n/**\n * Converts undefined to null, passes all other values through.\n */\nexport function withUndefinedAsNull<T>(x: T | undefined): T | null {\n\treturn typeof x === 'undefined' ? null : x;\n}\n\ntype AddFirstParameterToFunction<T, TargetFunctionsReturnType, FirstParameter> = T extends (...args: any[]) => TargetFunctionsReturnType ?\n\t// Function: add param to function\n\t(firstArg: FirstParameter, ...args: Parameters<T>) => ReturnType<T> :\n\n\t// Else: just leave as is\n\tT;\n\n/**\n * Allows to add a first parameter to functions of a type.\n */\nexport type AddFirstParameterToFunctions<Target, TargetFunctionsReturnType, FirstParameter> = {\n\t// For every property\n\t[K in keyof Target]: AddFirstParameterToFunction<Target[K], TargetFunctionsReturnType, FirstParameter>;\n};\n\n/**\n * Mapped-type that replaces all occurrences of URI with UriComponents\n */\nexport type UriDto<T> = { [K in keyof T]: T[K] extends URI\n\t? UriComponents\n\t: UriDto<T[K]> };\n\n/**\n * Mapped-type that replaces all occurrences of URI with UriComponents and\n * drops all functions.\n */\nexport type Dto<T> = T extends { toJSON(): infer U }\n\t? U\n\t: T extends object\n\t? { [k in keyof T]: Dto<T[k]>; }\n\t: T;\n\nexport function NotImplementedProxy<T>(name: string): { new(): T } {\n\treturn <any>class {\n\t\tconstructor() {\n\t\t\treturn new Proxy({}, {\n\t\t\t\tget(target: any, prop: PropertyKey) {\n\t\t\t\t\tif (target[prop]) {\n\t\t\t\t\t\treturn target[prop];\n\t\t\t\t\t}\n\t\t\t\t\tthrow new Error(`Not Implemented: ${name}->${String(prop)}`);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n}\n\nexport function assertNever(value: never, message = 'Unreachable'): never {\n\tthrow new Error(message);\n}\n\nexport function isPromise<T>(obj: unknown): obj is Promise<T> {\n\treturn !!obj && typeof (obj as Promise<T>).then === 'function' && typeof (obj as Promise<T>).catch === 'function';\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { isAbsolute, join, normalize, posix, sep } from 'vs/base/common/path';\nimport { isWindows } from 'vs/base/common/platform';\nimport { equalsIgnoreCase, rtrim, startsWithIgnoreCase } from 'vs/base/common/strings';\nimport { isNumber } from 'vs/base/common/types';\n\nexport function isPathSeparator(code: number) {\n\treturn code === CharCode.Slash || code === CharCode.Backslash;\n}\n\n/**\n * Takes a Windows OS path and changes backward slashes to forward slashes.\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toSlashes(osPath: string) {\n\treturn osPath.replace(/[\\\\/]/g, posix.sep);\n}\n\n/**\n * Takes a Windows OS path (using backward or forward slashes) and turns it into a posix path:\n * - turns backward slashes into forward slashes\n * - makes it absolute if it starts with a drive letter\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toPosixPath(osPath: string) {\n\tif (osPath.indexOf('/') === -1) {\n\t\tosPath = toSlashes(osPath);\n\t}\n\tif (/^[a-zA-Z]:(\\/|$)/.test(osPath)) { // starts with a drive letter\n\t\tosPath = '/' + osPath;\n\t}\n\treturn osPath;\n}\n\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\nexport function getRoot(path: string, sep: string = posix.sep): string {\n\tif (!path) {\n\t\treturn '';\n\t}\n\n\tconst len = path.length;\n\tconst firstLetter = path.charCodeAt(0);\n\tif (isPathSeparator(firstLetter)) {\n\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t// UNC candidate \\\\localhost\\shares\\ddd\n\t\t\t//               ^^^^^^^^^^^^^^^^^^^\n\t\t\tif (!isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tlet pos = 3;\n\t\t\t\tconst start = pos;\n\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\t\treturn path.slice(0, pos + 1) // consume this separator\n\t\t\t\t\t\t\t\t.replace(/[\\\\/]/g, sep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// /user/far\n\t\t// ^\n\t\treturn sep;\n\n\t} else if (isWindowsDriveLetter(firstLetter)) {\n\t\t// check for windows drive letter c:\\ or c:\n\n\t\tif (path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// C:\\fff\n\t\t\t\t// ^^^\n\t\t\t\treturn path.slice(0, 2) + sep;\n\t\t\t} else {\n\t\t\t\t// C:\n\t\t\t\t// ^^\n\t\t\t\treturn path.slice(0, 2);\n\t\t\t}\n\t\t}\n\t}\n\n\t// check for URI\n\t// scheme://authority/path\n\t// ^^^^^^^^^^^^^^^^^^^\n\tlet pos = path.indexOf('://');\n\tif (pos !== -1) {\n\t\tpos += 3; // 3 -> \"://\".length\n\t\tfor (; pos < len; pos++) {\n\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\treturn path.slice(0, pos + 1); // consume this separator\n\t\t\t}\n\t\t}\n\t}\n\n\treturn '';\n}\n\n/**\n * Check if the path follows this pattern: `\\\\hostname\\sharename`.\n *\n * @see https://msdn.microsoft.com/en-us/library/gg465305.aspx\n * @return A boolean indication if the path is a UNC path, on none-windows\n * always false.\n */\nexport function isUNC(path: string): boolean {\n\tif (!isWindows) {\n\t\t// UNC is a windows concept\n\t\treturn false;\n\t}\n\n\tif (!path || path.length < 5) {\n\t\t// at least \\\\a\\b\n\t\treturn false;\n\t}\n\n\tlet code = path.charCodeAt(0);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(1);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tlet pos = 2;\n\tconst start = pos;\n\tfor (; pos < path.length; pos++) {\n\t\tcode = path.charCodeAt(pos);\n\t\tif (code === CharCode.Backslash) {\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (start === pos) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(pos + 1);\n\tif (isNaN(code) || code === CharCode.Backslash) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n// Reference: https://en.wikipedia.org/wiki/Filename\nconst WINDOWS_INVALID_FILE_CHARS = /[\\\\/:\\*\\?\"<>\\|]/g;\nconst UNIX_INVALID_FILE_CHARS = /[\\\\/]/g;\nconst WINDOWS_FORBIDDEN_NAMES = /^(con|prn|aux|clock\\$|nul|lpt[0-9]|com[0-9])(\\.(.*?))?$/i;\nexport function isValidBasename(name: string | null | undefined, isWindowsOS: boolean = isWindows): boolean {\n\tconst invalidFileChars = isWindowsOS ? WINDOWS_INVALID_FILE_CHARS : UNIX_INVALID_FILE_CHARS;\n\n\tif (!name || name.length === 0 || /^\\s+$/.test(name)) {\n\t\treturn false; // require a name that is not just whitespace\n\t}\n\n\tinvalidFileChars.lastIndex = 0; // the holy grail of software development\n\tif (invalidFileChars.test(name)) {\n\t\treturn false; // check for certain invalid file characters\n\t}\n\n\tif (isWindowsOS && WINDOWS_FORBIDDEN_NAMES.test(name)) {\n\t\treturn false; // check for certain invalid file names\n\t}\n\n\tif (name === '.' || name === '..') {\n\t\treturn false; // check for reserved values\n\t}\n\n\tif (isWindowsOS && name[name.length - 1] === '.') {\n\t\treturn false; // Windows: file cannot end with a \".\"\n\t}\n\n\tif (isWindowsOS && name.length !== name.trim().length) {\n\t\treturn false; // Windows: file cannot end with a whitespace\n\t}\n\n\tif (name.length > 255) {\n\t\treturn false; // most file systems do not allow files > 255 length\n\t}\n\n\treturn true;\n}\n\nexport function isEqual(pathA: string, pathB: string, ignoreCase?: boolean): boolean {\n\tconst identityEquals = (pathA === pathB);\n\tif (!ignoreCase || identityEquals) {\n\t\treturn identityEquals;\n\t}\n\n\tif (!pathA || !pathB) {\n\t\treturn false;\n\t}\n\n\treturn equalsIgnoreCase(pathA, pathB);\n}\n\nexport function isEqualOrParent(base: string, parentCandidate: string, ignoreCase?: boolean, separator = sep): boolean {\n\tif (base === parentCandidate) {\n\t\treturn true;\n\t}\n\n\tif (!base || !parentCandidate) {\n\t\treturn false;\n\t}\n\n\tif (parentCandidate.length > base.length) {\n\t\treturn false;\n\t}\n\n\tif (ignoreCase) {\n\t\tconst beginsWith = startsWithIgnoreCase(base, parentCandidate);\n\t\tif (!beginsWith) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (parentCandidate.length === base.length) {\n\t\t\treturn true; // same path, different casing\n\t\t}\n\n\t\tlet sepOffset = parentCandidate.length;\n\t\tif (parentCandidate.charAt(parentCandidate.length - 1) === separator) {\n\t\t\tsepOffset--; // adjust the expected sep offset in case our candidate already ends in separator character\n\t\t}\n\n\t\treturn base.charAt(sepOffset) === separator;\n\t}\n\n\tif (parentCandidate.charAt(parentCandidate.length - 1) !== separator) {\n\t\tparentCandidate += separator;\n\t}\n\n\treturn base.indexOf(parentCandidate) === 0;\n}\n\nexport function isWindowsDriveLetter(char0: number): boolean {\n\treturn char0 >= CharCode.A && char0 <= CharCode.Z || char0 >= CharCode.a && char0 <= CharCode.z;\n}\n\nexport function sanitizeFilePath(candidate: string, cwd: string): string {\n\n\t// Special case: allow to open a drive letter without trailing backslash\n\tif (isWindows && candidate.endsWith(':')) {\n\t\tcandidate += sep;\n\t}\n\n\t// Ensure absolute\n\tif (!isAbsolute(candidate)) {\n\t\tcandidate = join(cwd, candidate);\n\t}\n\n\t// Ensure normalized\n\tcandidate = normalize(candidate);\n\n\t// Ensure no trailing slash/backslash\n\tif (isWindows) {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open drive root ('C:\\')\n\t\tif (candidate.endsWith(':')) {\n\t\t\tcandidate += sep;\n\t\t}\n\n\t} else {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open root ('/')\n\t\tif (!candidate) {\n\t\t\tcandidate = sep;\n\t\t}\n\t}\n\n\treturn candidate;\n}\n\nexport function isRootOrDriveLetter(path: string): boolean {\n\tconst pathNormalized = normalize(path);\n\n\tif (isWindows) {\n\t\tif (path.length > 3) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn hasDriveLetter(pathNormalized) &&\n\t\t\t(path.length === 2 || pathNormalized.charCodeAt(2) === CharCode.Backslash);\n\t}\n\n\treturn pathNormalized === posix.sep;\n}\n\nexport function hasDriveLetter(path: string, continueAsWindows?: boolean): boolean {\n\tconst isWindowsPath: boolean = ((continueAsWindows !== undefined) ? continueAsWindows : isWindows);\n\tif (isWindowsPath) {\n\t\treturn isWindowsDriveLetter(path.charCodeAt(0)) && path.charCodeAt(1) === CharCode.Colon;\n\t}\n\n\treturn false;\n}\n\nexport function getDriveLetter(path: string): string | undefined {\n\treturn hasDriveLetter(path) ? path[0] : undefined;\n}\n\nexport function indexOfPath(path: string, candidate: string, ignoreCase?: boolean): number {\n\tif (candidate.length > path.length) {\n\t\treturn -1;\n\t}\n\n\tif (path === candidate) {\n\t\treturn 0;\n\t}\n\n\tif (ignoreCase) {\n\t\tpath = path.toLowerCase();\n\t\tcandidate = candidate.toLowerCase();\n\t}\n\n\treturn path.indexOf(candidate);\n}\n\nexport interface IPathWithLineAndColumn {\n\tpath: string;\n\tline?: number;\n\tcolumn?: number;\n}\n\nexport function parseLineAndColumnAware(rawPath: string): IPathWithLineAndColumn {\n\tconst segments = rawPath.split(':'); // C:\\file.txt:<line>:<column>\n\n\tlet path: string | undefined = undefined;\n\tlet line: number | undefined = undefined;\n\tlet column: number | undefined = undefined;\n\n\tsegments.forEach(segment => {\n\t\tconst segmentAsNumber = Number(segment);\n\t\tif (!isNumber(segmentAsNumber)) {\n\t\t\tpath = !!path ? [path, segment].join(':') : segment; // a colon can well be part of a path (e.g. C:\\...)\n\t\t} else if (line === undefined) {\n\t\t\tline = segmentAsNumber;\n\t\t} else if (column === undefined) {\n\t\t\tcolumn = segmentAsNumber;\n\t\t}\n\t});\n\n\tif (!path) {\n\t\tthrow new Error('Format for `--goto` should be: `FILE:LINE(:COLUMN)`');\n\t}\n\n\treturn {\n\t\tpath,\n\t\tline: line !== undefined ? line : undefined,\n\t\tcolumn: column !== undefined ? column : line !== undefined ? 1 : undefined // if we have a line, make sure column is also set\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isArray, isObject, isUndefinedOrNull } from 'vs/base/common/types';\n\nexport function deepClone<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tif (obj instanceof RegExp) {\n\t\t// See https://github.com/microsoft/TypeScript/issues/10990\n\t\treturn obj as any;\n\t}\n\tconst result: any = Array.isArray(obj) ? [] : {};\n\tObject.keys(<any>obj).forEach((key: string) => {\n\t\tif ((<any>obj)[key] && typeof (<any>obj)[key] === 'object') {\n\t\t\tresult[key] = deepClone((<any>obj)[key]);\n\t\t} else {\n\t\t\tresult[key] = (<any>obj)[key];\n\t\t}\n\t});\n\treturn result;\n}\n\nexport function deepFreeze<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tconst stack: any[] = [obj];\n\twhile (stack.length > 0) {\n\t\tconst obj = stack.shift();\n\t\tObject.freeze(obj);\n\t\tfor (const key in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst prop = obj[key];\n\t\t\t\tif (typeof prop === 'object' && !Object.isFrozen(prop)) {\n\t\t\t\t\tstack.push(prop);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn obj;\n}\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport function cloneAndChange(obj: any, changer: (orig: any) => any): any {\n\treturn _cloneAndChange(obj, changer, new Set());\n}\n\nfunction _cloneAndChange(obj: any, changer: (orig: any) => any, seen: Set<any>): any {\n\tif (isUndefinedOrNull(obj)) {\n\t\treturn obj;\n\t}\n\n\tconst changed = changer(obj);\n\tif (typeof changed !== 'undefined') {\n\t\treturn changed;\n\t}\n\n\tif (isArray(obj)) {\n\t\tconst r1: any[] = [];\n\t\tfor (const e of obj) {\n\t\t\tr1.push(_cloneAndChange(e, changer, seen));\n\t\t}\n\t\treturn r1;\n\t}\n\n\tif (isObject(obj)) {\n\t\tif (seen.has(obj)) {\n\t\t\tthrow new Error('Cannot clone recursive data-structure');\n\t\t}\n\t\tseen.add(obj);\n\t\tconst r2 = {};\n\t\tfor (let i2 in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, i2)) {\n\t\t\t\t(r2 as any)[i2] = _cloneAndChange(obj[i2], changer, seen);\n\t\t\t}\n\t\t}\n\t\tseen.delete(obj);\n\t\treturn r2;\n\t}\n\n\treturn obj;\n}\n\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination: any, source: any, overwrite: boolean = true): any {\n\tif (!isObject(destination)) {\n\t\treturn source;\n\t}\n\n\tif (isObject(source)) {\n\t\tObject.keys(source).forEach(key => {\n\t\t\tif (key in destination) {\n\t\t\t\tif (overwrite) {\n\t\t\t\t\tif (isObject(destination[key]) && isObject(source[key])) {\n\t\t\t\t\t\tmixin(destination[key], source[key], overwrite);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdestination[key] = source[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdestination[key] = source[key];\n\t\t\t}\n\t\t});\n\t}\n\treturn destination;\n}\n\nexport function equals(one: any, other: any): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\tif (one === null || one === undefined || other === null || other === undefined) {\n\t\treturn false;\n\t}\n\tif (typeof one !== typeof other) {\n\t\treturn false;\n\t}\n\tif (typeof one !== 'object') {\n\t\treturn false;\n\t}\n\tif ((Array.isArray(one)) !== (Array.isArray(other))) {\n\t\treturn false;\n\t}\n\n\tlet i: number;\n\tlet key: string;\n\n\tif (Array.isArray(one)) {\n\t\tif (one.length !== other.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < one.length; i++) {\n\t\t\tif (!equals(one[i], other[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tconst oneKeys: string[] = [];\n\n\t\tfor (key in one) {\n\t\t\toneKeys.push(key);\n\t\t}\n\t\toneKeys.sort();\n\t\tconst otherKeys: string[] = [];\n\t\tfor (key in other) {\n\t\t\totherKeys.push(key);\n\t\t}\n\t\totherKeys.sort();\n\t\tif (!equals(oneKeys, otherKeys)) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < oneKeys.length; i++) {\n\t\t\tif (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n * Calls `JSON.Stringify` with a replacer to break apart any circular references.\n * This prevents `JSON`.stringify` from throwing the exception\n *  \"Uncaught TypeError: Converting circular structure to JSON\"\n */\nexport function safeStringify(obj: any): string {\n\tconst seen = new Set<any>();\n\treturn JSON.stringify(obj, (key, value) => {\n\t\tif (isObject(value) || Array.isArray(value)) {\n\t\t\tif (seen.has(value)) {\n\t\t\t\treturn '[Circular]';\n\t\t\t} else {\n\t\t\t\tseen.add(value);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t});\n}\n\nexport function getOrDefault<T, R>(obj: T, fn: (obj: T) => R | undefined, defaultValue: R): R {\n\tconst result = fn(obj);\n\treturn typeof result === 'undefined' ? defaultValue : result;\n}\n\ntype obj = { [key: string]: any; };\n/**\n * Returns an object that has keys for each value that is different in the base object. Keys\n * that do not exist in the target but in the base object are not considered.\n *\n * Note: This is not a deep-diffing method, so the values are strictly taken into the resulting\n * object if they differ.\n *\n * @param base the object to diff against\n * @param obj the object to use for diffing\n */\nexport function distinct(base: obj, target: obj): obj {\n\tconst result = Object.create(null);\n\n\tif (!base || !target) {\n\t\treturn result;\n\t}\n\n\tconst targetKeys = Object.keys(target);\n\ttargetKeys.forEach(k => {\n\t\tconst baseValue = base[k];\n\t\tconst targetValue = target[k];\n\n\t\tif (!equals(baseValue, targetValue)) {\n\t\t\tresult[k] = targetValue;\n\t\t}\n\t});\n\n\treturn result;\n}\n\nexport function getCaseInsensitive(target: obj, key: string): any {\n\tconst lowercaseKey = key.toLowerCase();\n\tconst equivalentKey = Object.keys(target).find(k => k.toLowerCase() === lowercaseKey);\n\treturn equivalentKey ? target[equivalentKey] : target[key];\n}\n\nexport function filter(obj: obj, predicate: (key: string, value: any) => boolean): obj {\n\tconst result = Object.create(null);\n\tfor (const [key, value] of Object.entries(obj)) {\n\t\tif (predicate(key, value)) {\n\t\t\tresult[key] = value;\n\t\t}\n\t}\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { MarshalledId } from 'vs/base/common/marshalling';\nimport * as paths from 'vs/base/common/path';\nimport { isWindows } from 'vs/base/common/platform';\n\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\n\nfunction _validateUri(ret: URI, _strict?: boolean): void {\n\n\t// scheme, must be set\n\tif (!ret.scheme && _strict) {\n\t\tthrow new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n\t}\n\n\t// scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n\t// ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\tif (ret.scheme && !_schemePattern.test(ret.scheme)) {\n\t\tthrow new Error('[UriError]: Scheme contains illegal characters.');\n\t}\n\n\t// path, http://tools.ietf.org/html/rfc3986#section-3.3\n\t// If a URI contains an authority component, then the path component\n\t// must either be empty or begin with a slash (\"/\") character.  If a URI\n\t// does not contain an authority component, then the path cannot begin\n\t// with two slash characters (\"//\").\n\tif (ret.path) {\n\t\tif (ret.authority) {\n\t\t\tif (!_singleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n\t\t\t}\n\t\t} else {\n\t\t\tif (_doubleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n\t\t\t}\n\t\t}\n\t}\n}\n\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme: string, _strict: boolean): string {\n\tif (!scheme && !_strict) {\n\t\treturn 'file';\n\t}\n\treturn scheme;\n}\n\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme: string, path: string): string {\n\n\t// the slash-character is our 'default base' as we don't\n\t// support constructing URIs relative to other URIs. This\n\t// also means that we alter and potentially break paths.\n\t// see https://tools.ietf.org/html/rfc3986#section-5.1.4\n\tswitch (scheme) {\n\t\tcase 'https':\n\t\tcase 'http':\n\t\tcase 'file':\n\t\t\tif (!path) {\n\t\t\t\tpath = _slash;\n\t\t\t} else if (path[0] !== _slash) {\n\t\t\t\tpath = _slash + path;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\treturn path;\n}\n\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI implements UriComponents {\n\n\tstatic isUri(thing: any): thing is URI {\n\t\tif (thing instanceof URI) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<URI>thing).authority === 'string'\n\t\t\t&& typeof (<URI>thing).fragment === 'string'\n\t\t\t&& typeof (<URI>thing).path === 'string'\n\t\t\t&& typeof (<URI>thing).query === 'string'\n\t\t\t&& typeof (<URI>thing).scheme === 'string'\n\t\t\t&& typeof (<URI>thing).fsPath === 'string'\n\t\t\t&& typeof (<URI>thing).with === 'function'\n\t\t\t&& typeof (<URI>thing).toString === 'function';\n\t}\n\n\t/**\n\t * scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part before the first colon.\n\t */\n\treadonly scheme: string;\n\n\t/**\n\t * authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part between the first double slashes and the next slash.\n\t */\n\treadonly authority: string;\n\n\t/**\n\t * path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly path: string;\n\n\t/**\n\t * query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly query: string;\n\n\t/**\n\t * fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly fragment: string;\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(scheme: string, authority?: string, path?: string, query?: string, fragment?: string, _strict?: boolean);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(components: UriComponents);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(schemeOrData: string | UriComponents, authority?: string, path?: string, query?: string, fragment?: string, _strict: boolean = false) {\n\n\t\tif (typeof schemeOrData === 'object') {\n\t\t\tthis.scheme = schemeOrData.scheme || _empty;\n\t\t\tthis.authority = schemeOrData.authority || _empty;\n\t\t\tthis.path = schemeOrData.path || _empty;\n\t\t\tthis.query = schemeOrData.query || _empty;\n\t\t\tthis.fragment = schemeOrData.fragment || _empty;\n\t\t\t// no validation because it's this URI\n\t\t\t// that creates uri components.\n\t\t\t// _validateUri(this);\n\t\t} else {\n\t\t\tthis.scheme = _schemeFix(schemeOrData, _strict);\n\t\t\tthis.authority = authority || _empty;\n\t\t\tthis.path = _referenceResolution(this.scheme, path || _empty);\n\t\t\tthis.query = query || _empty;\n\t\t\tthis.fragment = fragment || _empty;\n\n\t\t\t_validateUri(this, _strict);\n\t\t}\n\t}\n\n\t// ---- filesystem path -----------------------\n\n\t/**\n\t * Returns a string representing the corresponding file system path of this URI.\n\t * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n\t * platform specific path separator.\n\t *\n\t * * Will *not* validate the path for invalid characters and semantics.\n\t * * Will *not* look at the scheme of this URI.\n\t * * The result shall *not* be used for display purposes but for accessing a file on disk.\n\t *\n\t *\n\t * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n\t * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n\t *\n\t * ```ts\n\t\tconst u = URI.parse('file://server/c$/folder/file.txt')\n\t\tu.authority === 'server'\n\t\tu.path === '/shares/c$/file.txt'\n\t\tu.fsPath === '\\\\server\\c$\\folder\\file.txt'\n\t```\n\t *\n\t * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n\t * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n\t * with URIs that represent files on disk (`file` scheme).\n\t */\n\tget fsPath(): string {\n\t\t// if (this.scheme !== 'file') {\n\t\t// \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n\t\t// }\n\t\treturn uriToFsPath(this, false);\n\t}\n\n\t// ---- modify to new -------------------------\n\n\twith(change: { scheme?: string; authority?: string | null; path?: string | null; query?: string | null; fragment?: string | null }): URI {\n\n\t\tif (!change) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet { scheme, authority, path, query, fragment } = change;\n\t\tif (scheme === undefined) {\n\t\t\tscheme = this.scheme;\n\t\t} else if (scheme === null) {\n\t\t\tscheme = _empty;\n\t\t}\n\t\tif (authority === undefined) {\n\t\t\tauthority = this.authority;\n\t\t} else if (authority === null) {\n\t\t\tauthority = _empty;\n\t\t}\n\t\tif (path === undefined) {\n\t\t\tpath = this.path;\n\t\t} else if (path === null) {\n\t\t\tpath = _empty;\n\t\t}\n\t\tif (query === undefined) {\n\t\t\tquery = this.query;\n\t\t} else if (query === null) {\n\t\t\tquery = _empty;\n\t\t}\n\t\tif (fragment === undefined) {\n\t\t\tfragment = this.fragment;\n\t\t} else if (fragment === null) {\n\t\t\tfragment = _empty;\n\t\t}\n\n\t\tif (scheme === this.scheme\n\t\t\t&& authority === this.authority\n\t\t\t&& path === this.path\n\t\t\t&& query === this.query\n\t\t\t&& fragment === this.fragment) {\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn new Uri(scheme, authority, path, query, fragment);\n\t}\n\n\t// ---- parse & validate ------------------------\n\n\t/**\n\t * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n\t * `file:///usr/home`, or `scheme:with/path`.\n\t *\n\t * @param value A string which represents an URI (see `URI#toString`).\n\t */\n\tstatic parse(value: string, _strict: boolean = false): URI {\n\t\tconst match = _regexp.exec(value);\n\t\tif (!match) {\n\t\t\treturn new Uri(_empty, _empty, _empty, _empty, _empty);\n\t\t}\n\t\treturn new Uri(\n\t\t\tmatch[2] || _empty,\n\t\t\tpercentDecode(match[4] || _empty),\n\t\t\tpercentDecode(match[5] || _empty),\n\t\t\tpercentDecode(match[7] || _empty),\n\t\t\tpercentDecode(match[9] || _empty),\n\t\t\t_strict\n\t\t);\n\t}\n\n\t/**\n\t * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n\t * `/usr/home`, or `\\\\server\\share\\some\\path`.\n\t *\n\t * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n\t * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n\t * `URI.parse('file://' + path)` because the path might contain characters that are\n\t * interpreted (# and ?). See the following sample:\n\t * ```ts\n\tconst good = URI.file('/coding/c#/project1');\n\tgood.scheme === 'file';\n\tgood.path === '/coding/c#/project1';\n\tgood.fragment === '';\n\tconst bad = URI.parse('file://' + '/coding/c#/project1');\n\tbad.scheme === 'file';\n\tbad.path === '/coding/c'; // path is now broken\n\tbad.fragment === '/project1';\n\t```\n\t *\n\t * @param path A file system path (see `URI#fsPath`)\n\t */\n\tstatic file(path: string): URI {\n\n\t\tlet authority = _empty;\n\n\t\t// normalize to fwd-slashes on windows,\n\t\t// on other systems bwd-slashes are valid\n\t\t// filename character, eg /f\\oo/ba\\r.txt\n\t\tif (isWindows) {\n\t\t\tpath = path.replace(/\\\\/g, _slash);\n\t\t}\n\n\t\t// check for authority as used in UNC shares\n\t\t// or use the path as given\n\t\tif (path[0] === _slash && path[1] === _slash) {\n\t\t\tconst idx = path.indexOf(_slash, 2);\n\t\t\tif (idx === -1) {\n\t\t\t\tauthority = path.substring(2);\n\t\t\t\tpath = _slash;\n\t\t\t} else {\n\t\t\t\tauthority = path.substring(2, idx);\n\t\t\t\tpath = path.substring(idx) || _slash;\n\t\t\t}\n\t\t}\n\n\t\treturn new Uri('file', authority, path, _empty, _empty);\n\t}\n\n\tstatic from(components: { scheme: string; authority?: string; path?: string; query?: string; fragment?: string }): URI {\n\t\tconst result = new Uri(\n\t\t\tcomponents.scheme,\n\t\t\tcomponents.authority,\n\t\t\tcomponents.path,\n\t\t\tcomponents.query,\n\t\t\tcomponents.fragment,\n\t\t);\n\t\t_validateUri(result, true);\n\t\treturn result;\n\t}\n\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param uri The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tstatic joinPath(uri: URI, ...pathFragment: string[]): URI {\n\t\tif (!uri.path) {\n\t\t\tthrow new Error(`[UriError]: cannot call joinPath on URI without path`);\n\t\t}\n\t\tlet newPath: string;\n\t\tif (isWindows && uri.scheme === 'file') {\n\t\t\tnewPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n\t\t} else {\n\t\t\tnewPath = paths.posix.join(uri.path, ...pathFragment);\n\t\t}\n\t\treturn uri.with({ path: newPath });\n\t}\n\n\t// ---- printing/externalize ---------------------------\n\n\t/**\n\t * Creates a string representation for this URI. It's guaranteed that calling\n\t * `URI.parse` with the result of this function creates an URI which is equal\n\t * to this URI.\n\t *\n\t * * The result shall *not* be used for display purposes but for externalization or transport.\n\t * * The result will be encoded using the percentage encoding and encoding happens mostly\n\t * ignore the scheme-specific encoding rules.\n\t *\n\t * @param skipEncoding Do not encode the result, default is `false`\n\t */\n\ttoString(skipEncoding: boolean = false): string {\n\t\treturn _asFormatted(this, skipEncoding);\n\t}\n\n\ttoJSON(): UriComponents {\n\t\treturn this;\n\t}\n\n\tstatic revive(data: UriComponents | URI): URI;\n\tstatic revive(data: UriComponents | URI | undefined): URI | undefined;\n\tstatic revive(data: UriComponents | URI | null): URI | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null {\n\t\tif (!data) {\n\t\t\treturn data;\n\t\t} else if (data instanceof URI) {\n\t\t\treturn data;\n\t\t} else {\n\t\t\tconst result = new Uri(data);\n\t\t\tresult._formatted = (<UriState>data).external;\n\t\t\tresult._fsPath = (<UriState>data)._sep === _pathSepMarker ? (<UriState>data).fsPath : null;\n\t\t\treturn result;\n\t\t}\n\t}\n}\n\nexport interface UriComponents {\n\tscheme: string;\n\tauthority: string;\n\tpath: string;\n\tquery: string;\n\tfragment: string;\n}\n\ninterface UriState extends UriComponents {\n\t$mid: MarshalledId.Uri;\n\texternal: string;\n\tfsPath: string;\n\t_sep: 1 | undefined;\n}\n\nconst _pathSepMarker = isWindows ? 1 : undefined;\n\n// This class exists so that URI is compatible with vscode.Uri (API).\nclass Uri extends URI {\n\n\t_formatted: string | null = null;\n\t_fsPath: string | null = null;\n\n\toverride get fsPath(): string {\n\t\tif (!this._fsPath) {\n\t\t\tthis._fsPath = uriToFsPath(this, false);\n\t\t}\n\t\treturn this._fsPath;\n\t}\n\n\toverride toString(skipEncoding: boolean = false): string {\n\t\tif (!skipEncoding) {\n\t\t\tif (!this._formatted) {\n\t\t\t\tthis._formatted = _asFormatted(this, false);\n\t\t\t}\n\t\t\treturn this._formatted;\n\t\t} else {\n\t\t\t// we don't cache that\n\t\t\treturn _asFormatted(this, true);\n\t\t}\n\t}\n\n\toverride toJSON(): UriComponents {\n\t\tconst res = <UriState>{\n\t\t\t$mid: MarshalledId.Uri\n\t\t};\n\t\t// cached state\n\t\tif (this._fsPath) {\n\t\t\tres.fsPath = this._fsPath;\n\t\t\tres._sep = _pathSepMarker;\n\t\t}\n\t\tif (this._formatted) {\n\t\t\tres.external = this._formatted;\n\t\t}\n\t\t// uri components\n\t\tif (this.path) {\n\t\t\tres.path = this.path;\n\t\t}\n\t\tif (this.scheme) {\n\t\t\tres.scheme = this.scheme;\n\t\t}\n\t\tif (this.authority) {\n\t\t\tres.authority = this.authority;\n\t\t}\n\t\tif (this.query) {\n\t\t\tres.query = this.query;\n\t\t}\n\t\tif (this.fragment) {\n\t\t\tres.fragment = this.fragment;\n\t\t}\n\t\treturn res;\n\t}\n}\n\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable: { [ch: number]: string } = {\n\t[CharCode.Colon]: '%3A', // gen-delims\n\t[CharCode.Slash]: '%2F',\n\t[CharCode.QuestionMark]: '%3F',\n\t[CharCode.Hash]: '%23',\n\t[CharCode.OpenSquareBracket]: '%5B',\n\t[CharCode.CloseSquareBracket]: '%5D',\n\t[CharCode.AtSign]: '%40',\n\n\t[CharCode.ExclamationMark]: '%21', // sub-delims\n\t[CharCode.DollarSign]: '%24',\n\t[CharCode.Ampersand]: '%26',\n\t[CharCode.SingleQuote]: '%27',\n\t[CharCode.OpenParen]: '%28',\n\t[CharCode.CloseParen]: '%29',\n\t[CharCode.Asterisk]: '%2A',\n\t[CharCode.Plus]: '%2B',\n\t[CharCode.Comma]: '%2C',\n\t[CharCode.Semicolon]: '%3B',\n\t[CharCode.Equals]: '%3D',\n\n\t[CharCode.Space]: '%20',\n};\n\nfunction encodeURIComponentFast(uriComponent: string, allowSlash: boolean): string {\n\tlet res: string | undefined = undefined;\n\tlet nativeEncodePos = -1;\n\n\tfor (let pos = 0; pos < uriComponent.length; pos++) {\n\t\tconst code = uriComponent.charCodeAt(pos);\n\n\t\t// unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n\t\tif (\n\t\t\t(code >= CharCode.a && code <= CharCode.z)\n\t\t\t|| (code >= CharCode.A && code <= CharCode.Z)\n\t\t\t|| (code >= CharCode.Digit0 && code <= CharCode.Digit9)\n\t\t\t|| code === CharCode.Dash\n\t\t\t|| code === CharCode.Period\n\t\t\t|| code === CharCode.Underline\n\t\t\t|| code === CharCode.Tilde\n\t\t\t|| (allowSlash && code === CharCode.Slash)\n\t\t) {\n\t\t\t// check if we are delaying native encode\n\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\tnativeEncodePos = -1;\n\t\t\t}\n\t\t\t// check if we write into a new string (by default we try to return the param)\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += uriComponent.charAt(pos);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// encoding needed, we need to allocate a new string\n\t\t\tif (res === undefined) {\n\t\t\t\tres = uriComponent.substr(0, pos);\n\t\t\t}\n\n\t\t\t// check with default table first\n\t\t\tconst escaped = encodeTable[code];\n\t\t\tif (escaped !== undefined) {\n\n\t\t\t\t// check if we are delaying native encode\n\t\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\t\tnativeEncodePos = -1;\n\t\t\t\t}\n\n\t\t\t\t// append escaped variant to result\n\t\t\t\tres += escaped;\n\n\t\t\t} else if (nativeEncodePos === -1) {\n\t\t\t\t// use native encode only when needed\n\t\t\t\tnativeEncodePos = pos;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (nativeEncodePos !== -1) {\n\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n\t}\n\n\treturn res !== undefined ? res : uriComponent;\n}\n\nfunction encodeURIComponentMinimal(path: string): string {\n\tlet res: string | undefined = undefined;\n\tfor (let pos = 0; pos < path.length; pos++) {\n\t\tconst code = path.charCodeAt(pos);\n\t\tif (code === CharCode.Hash || code === CharCode.QuestionMark) {\n\t\t\tif (res === undefined) {\n\t\t\t\tres = path.substr(0, pos);\n\t\t\t}\n\t\t\tres += encodeTable[code];\n\t\t} else {\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += path[pos];\n\t\t\t}\n\t\t}\n\t}\n\treturn res !== undefined ? res : path;\n}\n\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri: URI, keepDriveLetterCasing: boolean): string {\n\n\tlet value: string;\n\tif (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uri.path}`;\n\t} else if (\n\t\turi.path.charCodeAt(0) === CharCode.Slash\n\t\t&& (uri.path.charCodeAt(1) >= CharCode.A && uri.path.charCodeAt(1) <= CharCode.Z || uri.path.charCodeAt(1) >= CharCode.a && uri.path.charCodeAt(1) <= CharCode.z)\n\t\t&& uri.path.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\tif (!keepDriveLetterCasing) {\n\t\t\t// windows drive letter: file:///c:/far/boo\n\t\t\tvalue = uri.path[1].toLowerCase() + uri.path.substr(2);\n\t\t} else {\n\t\t\tvalue = uri.path.substr(1);\n\t\t}\n\t} else {\n\t\t// other path\n\t\tvalue = uri.path;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri: URI, skipEncoding: boolean): string {\n\n\tconst encoder = !skipEncoding\n\t\t? encodeURIComponentFast\n\t\t: encodeURIComponentMinimal;\n\n\tlet res = '';\n\tlet { scheme, authority, path, query, fragment } = uri;\n\tif (scheme) {\n\t\tres += scheme;\n\t\tres += ':';\n\t}\n\tif (authority || scheme === 'file') {\n\t\tres += _slash;\n\t\tres += _slash;\n\t}\n\tif (authority) {\n\t\tlet idx = authority.indexOf('@');\n\t\tif (idx !== -1) {\n\t\t\t// <user>@<auth>\n\t\t\tconst userinfo = authority.substr(0, idx);\n\t\t\tauthority = authority.substr(idx + 1);\n\t\t\tidx = userinfo.indexOf(':');\n\t\t\tif (idx === -1) {\n\t\t\t\tres += encoder(userinfo, false);\n\t\t\t} else {\n\t\t\t\t// <user>:<pass>@<auth>\n\t\t\t\tres += encoder(userinfo.substr(0, idx), false);\n\t\t\t\tres += ':';\n\t\t\t\tres += encoder(userinfo.substr(idx + 1), false);\n\t\t\t}\n\t\t\tres += '@';\n\t\t}\n\t\tauthority = authority.toLowerCase();\n\t\tidx = authority.indexOf(':');\n\t\tif (idx === -1) {\n\t\t\tres += encoder(authority, false);\n\t\t} else {\n\t\t\t// <auth>:<port>\n\t\t\tres += encoder(authority.substr(0, idx), false);\n\t\t\tres += authority.substr(idx);\n\t\t}\n\t}\n\tif (path) {\n\t\t// lower-case windows drive letters in /C:/fff or C:/fff\n\t\tif (path.length >= 3 && path.charCodeAt(0) === CharCode.Slash && path.charCodeAt(2) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(1);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t} else if (path.length >= 2 && path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(0);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t}\n\t\t// encode the rest of the path\n\t\tres += encoder(path, true);\n\t}\n\tif (query) {\n\t\tres += '?';\n\t\tres += encoder(query, false);\n\t}\n\tif (fragment) {\n\t\tres += '#';\n\t\tres += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n\t}\n\treturn res;\n}\n\n// --- decode\n\nfunction decodeURIComponentGraceful(str: string): string {\n\ttry {\n\t\treturn decodeURIComponent(str);\n\t} catch {\n\t\tif (str.length > 3) {\n\t\t\treturn str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n\t\t} else {\n\t\t\treturn str;\n\t\t}\n\t}\n}\n\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\n\nfunction percentDecode(str: string): string {\n\tif (!str.match(_rEncodedAsHex)) {\n\t\treturn str;\n\t}\n\treturn str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\n\nexport interface IRemoteConsoleLog {\n\ttype: string;\n\tseverity: string;\n\targuments: string;\n}\n\ninterface IStackArgument {\n\t__$stack: string;\n}\n\nexport interface IStackFrame {\n\turi: URI;\n\tline: number;\n\tcolumn: number;\n}\n\nexport function isRemoteConsoleLog(obj: any): obj is IRemoteConsoleLog {\n\tconst entry = obj as IRemoteConsoleLog;\n\n\treturn entry && typeof entry.type === 'string' && typeof entry.severity === 'string';\n}\n\nexport function parse(entry: IRemoteConsoleLog): { args: any[], stack?: string } {\n\tconst args: any[] = [];\n\tlet stack: string | undefined;\n\n\t// Parse Entry\n\ttry {\n\t\tconst parsedArguments: any[] = JSON.parse(entry.arguments);\n\n\t\t// Check for special stack entry as last entry\n\t\tconst stackArgument = parsedArguments[parsedArguments.length - 1] as IStackArgument;\n\t\tif (stackArgument && stackArgument.__$stack) {\n\t\t\tparsedArguments.pop(); // stack is handled specially\n\t\t\tstack = stackArgument.__$stack;\n\t\t}\n\n\t\targs.push(...parsedArguments);\n\t} catch (error) {\n\t\targs.push('Unable to log remote console arguments', entry.arguments);\n\t}\n\n\treturn { args, stack };\n}\n\nexport function getFirstFrame(entry: IRemoteConsoleLog): IStackFrame | undefined;\nexport function getFirstFrame(stack: string | undefined): IStackFrame | undefined;\nexport function getFirstFrame(arg0: IRemoteConsoleLog | string | undefined): IStackFrame | undefined {\n\tif (typeof arg0 !== 'string') {\n\t\treturn getFirstFrame(parse(arg0!).stack);\n\t}\n\n\t// Parse a source information out of the stack if we have one. Format can be:\n\t// at vscode.commands.registerCommand (/Users/someone/Desktop/test-ts/out/src/extension.js:18:17)\n\t// or\n\t// at /Users/someone/Desktop/test-ts/out/src/extension.js:18:17\n\t// or\n\t// at c:\\Users\\someone\\Desktop\\end-js\\extension.js:19:17\n\t// or\n\t// at e.$executeContributedCommand(c:\\Users\\someone\\Desktop\\end-js\\extension.js:19:17)\n\tconst stack = arg0;\n\tif (stack) {\n\t\tconst topFrame = findFirstFrame(stack);\n\n\t\t// at [^\\/]* => line starts with \"at\" followed by any character except '/' (to not capture unix paths too late)\n\t\t// (?:(?:[a-zA-Z]+:)|(?:[\\/])|(?:\\\\\\\\) => windows drive letter OR unix root OR unc root\n\t\t// (?:.+) => simple pattern for the path, only works because of the line/col pattern after\n\t\t// :(?:\\d+):(?:\\d+) => :line:column data\n\t\tconst matches = /at [^\\/]*((?:(?:[a-zA-Z]+:)|(?:[\\/])|(?:\\\\\\\\))(?:.+)):(\\d+):(\\d+)/.exec(topFrame || '');\n\t\tif (matches && matches.length === 4) {\n\t\t\treturn {\n\t\t\t\turi: URI.file(matches[1]),\n\t\t\t\tline: Number(matches[2]),\n\t\t\t\tcolumn: Number(matches[3])\n\t\t\t};\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nfunction findFirstFrame(stack: string | undefined): string | undefined {\n\tif (!stack) {\n\t\treturn stack;\n\t}\n\n\tconst newlineIndex = stack.indexOf('\\n');\n\tif (newlineIndex === -1) {\n\t\treturn stack;\n\t}\n\n\treturn stack.substring(0, newlineIndex);\n}\n\nexport function log(entry: IRemoteConsoleLog, label: string): void {\n\tconst { args, stack } = parse(entry);\n\n\tconst isOneStringArg = typeof args[0] === 'string' && args.length === 1;\n\n\tlet topFrame = findFirstFrame(stack);\n\tif (topFrame) {\n\t\ttopFrame = `(${topFrame.trim()})`;\n\t}\n\n\tlet consoleArgs: string[] = [];\n\n\t// First arg is a string\n\tif (typeof args[0] === 'string') {\n\t\tif (topFrame && isOneStringArg) {\n\t\t\tconsoleArgs = [`%c[${label}] %c${args[0]} %c${topFrame}`, color('blue'), color(''), color('grey')];\n\t\t} else {\n\t\t\tconsoleArgs = [`%c[${label}] %c${args[0]}`, color('blue'), color(''), ...args.slice(1)];\n\t\t}\n\t}\n\n\t// First arg is something else, just apply all\n\telse {\n\t\tconsoleArgs = [`%c[${label}]%`, color('blue'), ...args];\n\t}\n\n\t// Stack: add to args unless already aded\n\tif (topFrame && !isOneStringArg) {\n\t\tconsoleArgs.push(topFrame);\n\t}\n\n\t// Log it\n\tif (typeof (console as any)[entry.severity] !== 'function') {\n\t\tthrow new Error('Unknown console method');\n\t}\n\t(console as any)[entry.severity].apply(console, consoleArgs);\n}\n\nfunction color(color: string): string {\n\treturn `color: ${color}`;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { regExpFlags } from 'vs/base/common/strings';\nimport { URI, UriComponents } from 'vs/base/common/uri';\n\nexport function stringify(obj: any): string {\n\treturn JSON.stringify(obj, replacer);\n}\n\nexport function parse(text: string): any {\n\tlet data = JSON.parse(text);\n\tdata = revive(data);\n\treturn data;\n}\n\nexport const enum MarshalledId {\n\tUri = 1,\n\tRegexp,\n\tScmResource,\n\tScmResourceGroup,\n\tScmProvider,\n\tCommentController,\n\tCommentThread,\n\tCommentThreadReply,\n\tCommentNode,\n\tCommentThreadNode,\n\tTimelineActionContext,\n\tNotebookCellActionContext,\n\tTestItemContext,\n}\n\nexport interface MarshalledObject {\n\t$mid: MarshalledId;\n}\n\nfunction replacer(key: string, value: any): any {\n\t// URI is done via toJSON-member\n\tif (value instanceof RegExp) {\n\t\treturn {\n\t\t\t$mid: MarshalledId.Regexp,\n\t\t\tsource: value.source,\n\t\t\tflags: regExpFlags(value),\n\t\t};\n\t}\n\treturn value;\n}\n\n\ntype Deserialize<T> = T extends UriComponents ? URI\n\t: T extends VSBuffer ? VSBuffer\n\t: T extends object\n\t? Revived<T>\n\t: T;\n\nexport type Revived<T> = { [K in keyof T]: Deserialize<T[K]> };\n\nexport function revive<T = any>(obj: any, depth = 0): Revived<T> {\n\tif (!obj || depth > 200) {\n\t\treturn obj;\n\t}\n\n\tif (typeof obj === 'object') {\n\n\t\tswitch ((<MarshalledObject>obj).$mid) {\n\t\t\tcase MarshalledId.Uri: return <any>URI.revive(obj);\n\t\t\tcase MarshalledId.Regexp: return <any>new RegExp(obj.source, obj.flags);\n\t\t}\n\n\t\tif (\n\t\t\tobj instanceof VSBuffer\n\t\t\t|| obj instanceof Uint8Array\n\t\t) {\n\t\t\treturn <any>obj;\n\t\t}\n\n\t\tif (Array.isArray(obj)) {\n\t\t\tfor (let i = 0; i < obj.length; ++i) {\n\t\t\t\tobj[i] = revive(obj[i], depth + 1);\n\t\t\t}\n\t\t} else {\n\t\t\t// walk object\n\t\t\tfor (const key in obj) {\n\t\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\t\tobj[key] = revive(obj[key], depth + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn obj;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as platform from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\n\nexport namespace Schemas {\n\n\t/**\n\t * A schema that is used for models that exist in memory\n\t * only and that have no correspondence on a server or such.\n\t */\n\texport const inMemory = 'inmemory';\n\n\t/**\n\t * A schema that is used for setting files\n\t */\n\texport const vscode = 'vscode';\n\n\t/**\n\t * A schema that is used for internal private files\n\t */\n\texport const internal = 'private';\n\n\t/**\n\t * A walk-through document.\n\t */\n\texport const walkThrough = 'walkThrough';\n\n\t/**\n\t * An embedded code snippet.\n\t */\n\texport const walkThroughSnippet = 'walkThroughSnippet';\n\n\texport const http = 'http';\n\n\texport const https = 'https';\n\n\texport const file = 'file';\n\n\texport const mailto = 'mailto';\n\n\texport const untitled = 'untitled';\n\n\texport const data = 'data';\n\n\texport const command = 'command';\n\n\texport const vscodeRemote = 'vscode-remote';\n\n\texport const vscodeRemoteResource = 'vscode-remote-resource';\n\n\texport const userData = 'vscode-userdata';\n\n\texport const vscodeCustomEditor = 'vscode-custom-editor';\n\n\texport const vscodeNotebook = 'vscode-notebook';\n\n\texport const vscodeNotebookCell = 'vscode-notebook-cell';\n\n\texport const vscodeNotebookCellMetadata = 'vscode-notebook-cell-metadata';\n\texport const vscodeNotebookCellOutput = 'vscode-notebook-cell-output';\n\texport const vscodeInteractive = 'vscode-interactive';\n\texport const vscodeInteractiveInput = 'vscode-interactive-input';\n\n\texport const vscodeSettings = 'vscode-settings';\n\n\texport const vscodeWorkspaceTrust = 'vscode-workspace-trust';\n\n\texport const vscodeTerminal = 'vscode-terminal';\n\n\t/**\n\t * Scheme used internally for webviews that aren't linked to a resource (i.e. not custom editors)\n\t */\n\texport const webviewPanel = 'webview-panel';\n\n\t/**\n\t * Scheme used for loading the wrapper html and script in webviews.\n\t */\n\texport const vscodeWebview = 'vscode-webview';\n\n\t/**\n\t * Scheme used for extension pages\n\t */\n\texport const extension = 'extension';\n\n\t/**\n\t * Scheme used as a replacement of `file` scheme to load\n\t * files with our custom protocol handler (desktop only).\n\t */\n\texport const vscodeFileResource = 'vscode-file';\n\n\t/**\n\t * Scheme used for temporary resources\n\t */\n\texport const tmp = 'tmp';\n\n\t/**\n\t * Scheme used vs live share\n\t */\n\texport const vsls = 'vsls';\n}\n\nclass RemoteAuthoritiesImpl {\n\tprivate readonly _hosts: { [authority: string]: string | undefined; } = Object.create(null);\n\tprivate readonly _ports: { [authority: string]: number | undefined; } = Object.create(null);\n\tprivate readonly _connectionTokens: { [authority: string]: string | undefined; } = Object.create(null);\n\tprivate _preferredWebSchema: 'http' | 'https' = 'http';\n\tprivate _delegate: ((uri: URI) => URI) | null = null;\n\n\tsetPreferredWebSchema(schema: 'http' | 'https') {\n\t\tthis._preferredWebSchema = schema;\n\t}\n\n\tsetDelegate(delegate: (uri: URI) => URI): void {\n\t\tthis._delegate = delegate;\n\t}\n\n\tset(authority: string, host: string, port: number): void {\n\t\tthis._hosts[authority] = host;\n\t\tthis._ports[authority] = port;\n\t}\n\n\tsetConnectionToken(authority: string, connectionToken: string): void {\n\t\tthis._connectionTokens[authority] = connectionToken;\n\t}\n\n\trewrite(uri: URI): URI {\n\t\tif (this._delegate) {\n\t\t\treturn this._delegate(uri);\n\t\t}\n\t\tconst authority = uri.authority;\n\t\tlet host = this._hosts[authority];\n\t\tif (host && host.indexOf(':') !== -1) {\n\t\t\thost = `[${host}]`;\n\t\t}\n\t\tconst port = this._ports[authority];\n\t\tconst connectionToken = this._connectionTokens[authority];\n\t\tlet query = `path=${encodeURIComponent(uri.path)}`;\n\t\tif (typeof connectionToken === 'string') {\n\t\t\tquery += `&tkn=${encodeURIComponent(connectionToken)}`;\n\t\t}\n\t\treturn URI.from({\n\t\t\tscheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n\t\t\tauthority: `${host}:${port}`,\n\t\t\tpath: `/vscode-remote-resource`,\n\t\t\tquery\n\t\t});\n\t}\n}\n\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\n\nclass FileAccessImpl {\n\n\tprivate static readonly FALLBACK_AUTHORITY = 'vscode-app';\n\n\t/**\n\t * Returns a URI to use in contexts where the browser is responsible\n\t * for loading (e.g. fetch()) or when used within the DOM.\n\t *\n\t * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n\t */\n\tasBrowserUri(uri: URI): URI;\n\tasBrowserUri(moduleId: string, moduleIdToUrl: { toUrl(moduleId: string): string }): URI;\n\tasBrowserUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }): URI {\n\t\tconst uri = this.toUri(uriOrModule, moduleIdToUrl);\n\n\t\t// Handle remote URIs via `RemoteAuthorities`\n\t\tif (uri.scheme === Schemas.vscodeRemote) {\n\t\t\treturn RemoteAuthorities.rewrite(uri);\n\t\t}\n\n\t\t// Convert to `vscode-file` resource..\n\t\tif (\n\t\t\t// ...only ever for `file` resources\n\t\t\turi.scheme === Schemas.file &&\n\t\t\t(\n\t\t\t\t// ...and we run in native environments\n\t\t\t\tplatform.isNative ||\n\t\t\t\t// ...or web worker extensions on desktop\n\t\t\t\t(typeof platform.globals.importScripts === 'function' && platform.globals.origin === `${Schemas.vscodeFileResource}://${FileAccessImpl.FALLBACK_AUTHORITY}`)\n\t\t\t)\n\t\t) {\n\t\t\treturn uri.with({\n\t\t\t\tscheme: Schemas.vscodeFileResource,\n\t\t\t\t// We need to provide an authority here so that it can serve\n\t\t\t\t// as origin for network and loading matters in chromium.\n\t\t\t\t// If the URI is not coming with an authority already, we\n\t\t\t\t// add our own\n\t\t\t\tauthority: uri.authority || FileAccessImpl.FALLBACK_AUTHORITY,\n\t\t\t\tquery: null,\n\t\t\t\tfragment: null\n\t\t\t});\n\t\t}\n\n\t\treturn uri;\n\t}\n\n\t/**\n\t * Returns the `file` URI to use in contexts where node.js\n\t * is responsible for loading.\n\t */\n\tasFileUri(uri: URI): URI;\n\tasFileUri(moduleId: string, moduleIdToUrl: { toUrl(moduleId: string): string }): URI;\n\tasFileUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }): URI {\n\t\tconst uri = this.toUri(uriOrModule, moduleIdToUrl);\n\n\t\t// Only convert the URI if it is `vscode-file:` scheme\n\t\tif (uri.scheme === Schemas.vscodeFileResource) {\n\t\t\treturn uri.with({\n\t\t\t\tscheme: Schemas.file,\n\t\t\t\t// Only preserve the `authority` if it is different from\n\t\t\t\t// our fallback authority. This ensures we properly preserve\n\t\t\t\t// Windows UNC paths that come with their own authority.\n\t\t\t\tauthority: uri.authority !== FileAccessImpl.FALLBACK_AUTHORITY ? uri.authority : null,\n\t\t\t\tquery: null,\n\t\t\t\tfragment: null\n\t\t\t});\n\t\t}\n\n\t\treturn uri;\n\t}\n\n\tprivate toUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }): URI {\n\t\tif (URI.isUri(uriOrModule)) {\n\t\t\treturn uriOrModule;\n\t\t}\n\n\t\treturn URI.parse(moduleIdToUrl!.toUrl(uriOrModule));\n\t}\n}\n\nexport const FileAccess = new FileAccessImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport * as extpath from 'vs/base/common/extpath';\nimport { Schemas } from 'vs/base/common/network';\nimport * as paths from 'vs/base/common/path';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { compare as strCompare, equalsIgnoreCase } from 'vs/base/common/strings';\nimport { URI, uriToFsPath } from 'vs/base/common/uri';\n\nexport function originalFSPath(uri: URI): string {\n\treturn uriToFsPath(uri, true);\n}\n\n//#region IExtUri\n\nexport interface IExtUri {\n\n\t// --- identity\n\n\t/**\n\t * Compares two uris.\n\t *\n\t * @param uri1 Uri\n\t * @param uri2 Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tcompare(uri1: URI, uri2: URI, ignoreFragment?: boolean): number;\n\n\t/**\n\t * Tests whether two uris are equal\n\t *\n\t * @param uri1 Uri\n\t * @param uri2 Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tisEqual(uri1: URI | undefined, uri2: URI | undefined, ignoreFragment?: boolean): boolean;\n\n\t/**\n\t * Tests whether a `candidate` URI is a parent or equal of a given `base` URI.\n\t *\n\t * @param base A uri which is \"longer\" or at least same length as `parentCandidate`\n\t * @param parentCandidate A uri which is \"shorter\" or up to same length as `base`\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tisEqualOrParent(base: URI, parentCandidate: URI, ignoreFragment?: boolean): boolean;\n\n\t/**\n\t * Creates a key from a resource URI to be used to resource comparison and for resource maps.\n\t * @see {@link ResourceMap}\n\t * @param uri Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tgetComparisonKey(uri: URI, ignoreFragment?: boolean): string;\n\n\t/**\n\t * Whether the casing of the path-component of the uri should be ignored.\n\t */\n\tignorePathCasing(uri: URI): boolean;\n\n\t// --- path math\n\n\tbasenameOrAuthority(resource: URI): string;\n\n\t/**\n\t * Returns the basename of the path component of an uri.\n\t * @param resource\n\t */\n\tbasename(resource: URI): string;\n\n\t/**\n\t * Returns the extension of the path component of an uri.\n\t * @param resource\n\t */\n\textname(resource: URI): string;\n\t/**\n\t * Return a URI representing the directory of a URI path.\n\t *\n\t * @param resource The input URI.\n\t * @returns The URI representing the directory of the input URI.\n\t */\n\tdirname(resource: URI): URI;\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param resource The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tjoinPath(resource: URI, ...pathFragment: string[]): URI\n\t/**\n\t * Normalizes the path part of a URI: Resolves `.` and `..` elements with directory names.\n\t *\n\t * @param resource The URI to normalize the path.\n\t * @returns The URI with the normalized path.\n\t */\n\tnormalizePath(resource: URI): URI;\n\t/**\n\t *\n\t * @param from\n\t * @param to\n\t */\n\trelativePath(from: URI, to: URI): string | undefined;\n\t/**\n\t * Resolves an absolute or relative path against a base URI.\n\t * The path can be relative or absolute posix or a Windows path\n\t */\n\tresolvePath(base: URI, path: string): URI;\n\n\t// --- misc\n\n\t/**\n\t * Returns true if the URI path is absolute.\n\t */\n\tisAbsolutePath(resource: URI): boolean;\n\t/**\n\t * Tests whether the two authorities are the same\n\t */\n\tisEqualAuthority(a1: string, a2: string): boolean;\n\t/**\n\t * Returns true if the URI path has a trailing path separator\n\t */\n\thasTrailingPathSeparator(resource: URI, sep?: string): boolean;\n\t/**\n\t * Removes a trailing path separator, if there's one.\n\t * Important: Doesn't remove the first slash, it would make the URI invalid\n\t */\n\tremoveTrailingPathSeparator(resource: URI, sep?: string): URI;\n\t/**\n\t * Adds a trailing path separator to the URI if there isn't one already.\n\t * For example, c:\\ would be unchanged, but c:\\users would become c:\\users\\\n\t */\n\taddTrailingPathSeparator(resource: URI, sep?: string): URI;\n}\n\nexport class ExtUri implements IExtUri {\n\n\tconstructor(private _ignorePathCasing: (uri: URI) => boolean) { }\n\n\tcompare(uri1: URI, uri2: URI, ignoreFragment: boolean = false): number {\n\t\tif (uri1 === uri2) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn strCompare(this.getComparisonKey(uri1, ignoreFragment), this.getComparisonKey(uri2, ignoreFragment));\n\t}\n\n\tisEqual(uri1: URI | undefined, uri2: URI | undefined, ignoreFragment: boolean = false): boolean {\n\t\tif (uri1 === uri2) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!uri1 || !uri2) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.getComparisonKey(uri1, ignoreFragment) === this.getComparisonKey(uri2, ignoreFragment);\n\t}\n\n\tgetComparisonKey(uri: URI, ignoreFragment: boolean = false): string {\n\t\treturn uri.with({\n\t\t\tpath: this._ignorePathCasing(uri) ? uri.path.toLowerCase() : undefined,\n\t\t\tfragment: ignoreFragment ? null : undefined\n\t\t}).toString();\n\t}\n\n\tignorePathCasing(uri: URI): boolean {\n\t\treturn this._ignorePathCasing(uri);\n\t}\n\n\tisEqualOrParent(base: URI, parentCandidate: URI, ignoreFragment: boolean = false): boolean {\n\t\tif (base.scheme === parentCandidate.scheme) {\n\t\t\tif (base.scheme === Schemas.file) {\n\t\t\t\treturn extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), this._ignorePathCasing(base)) && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n\t\t\t}\n\t\t\tif (isEqualAuthority(base.authority, parentCandidate.authority)) {\n\t\t\t\treturn extpath.isEqualOrParent(base.path, parentCandidate.path, this._ignorePathCasing(base), '/') && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t// --- path math\n\n\tjoinPath(resource: URI, ...pathFragment: string[]): URI {\n\t\treturn URI.joinPath(resource, ...pathFragment);\n\t}\n\n\tbasenameOrAuthority(resource: URI): string {\n\t\treturn basename(resource) || resource.authority;\n\t}\n\n\tbasename(resource: URI): string {\n\t\treturn paths.posix.basename(resource.path);\n\t}\n\n\textname(resource: URI): string {\n\t\treturn paths.posix.extname(resource.path);\n\t}\n\n\tdirname(resource: URI): URI {\n\t\tif (resource.path.length === 0) {\n\t\t\treturn resource;\n\t\t}\n\t\tlet dirname;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tdirname = URI.file(paths.dirname(originalFSPath(resource))).path;\n\t\t} else {\n\t\t\tdirname = paths.posix.dirname(resource.path);\n\t\t\tif (resource.authority && dirname.length && dirname.charCodeAt(0) !== CharCode.Slash) {\n\t\t\t\tconsole.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n\t\t\t\tdirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n\t\t\t}\n\t\t}\n\t\treturn resource.with({\n\t\t\tpath: dirname\n\t\t});\n\t}\n\n\tnormalizePath(resource: URI): URI {\n\t\tif (!resource.path.length) {\n\t\t\treturn resource;\n\t\t}\n\t\tlet normalizedPath: string;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tnormalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n\t\t} else {\n\t\t\tnormalizedPath = paths.posix.normalize(resource.path);\n\t\t}\n\t\treturn resource.with({\n\t\t\tpath: normalizedPath\n\t\t});\n\t}\n\n\trelativePath(from: URI, to: URI): string | undefined {\n\t\tif (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (from.scheme === Schemas.file) {\n\t\t\tconst relativePath = paths.relative(originalFSPath(from), originalFSPath(to));\n\t\t\treturn isWindows ? extpath.toSlashes(relativePath) : relativePath;\n\t\t}\n\t\tlet fromPath = from.path || '/', toPath = to.path || '/';\n\t\tif (this._ignorePathCasing(from)) {\n\t\t\t// make casing of fromPath match toPath\n\t\t\tlet i = 0;\n\t\t\tfor (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n\t\t\t\tif (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n\t\t\t\t\tif (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfromPath = toPath.substr(0, i) + fromPath.substr(i);\n\t\t}\n\t\treturn paths.posix.relative(fromPath, toPath);\n\t}\n\n\tresolvePath(base: URI, path: string): URI {\n\t\tif (base.scheme === Schemas.file) {\n\t\t\tconst newURI = URI.file(paths.resolve(originalFSPath(base), path));\n\t\t\treturn base.with({\n\t\t\t\tauthority: newURI.authority,\n\t\t\t\tpath: newURI.path\n\t\t\t});\n\t\t}\n\t\tpath = extpath.toPosixPath(path); // we allow path to be a windows path\n\t\treturn base.with({\n\t\t\tpath: paths.posix.resolve(base.path, path)\n\t\t});\n\t}\n\n\t// --- misc\n\n\tisAbsolutePath(resource: URI): boolean {\n\t\treturn !!resource.path && resource.path[0] === '/';\n\t}\n\n\tisEqualAuthority(a1: string | undefined, a2: string | undefined) {\n\t\treturn a1 === a2 || (a1 !== undefined && a2 !== undefined && equalsIgnoreCase(a1, a2));\n\t}\n\n\thasTrailingPathSeparator(resource: URI, sep: string = paths.sep): boolean {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tconst fsp = originalFSPath(resource);\n\t\t\treturn fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === sep;\n\t\t} else {\n\t\t\tconst p = resource.path;\n\t\t\treturn (p.length > 1 && p.charCodeAt(p.length - 1) === CharCode.Slash) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath)); // ignore the slash at offset 0\n\t\t}\n\t}\n\n\tremoveTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t\t// Make sure that the path isn't a drive letter. A trailing separator there is not removable.\n\t\tif (hasTrailingPathSeparator(resource, sep)) {\n\t\t\treturn resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n\t\t}\n\t\treturn resource;\n\t}\n\n\taddTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t\tlet isRootSep: boolean = false;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tconst fsp = originalFSPath(resource);\n\t\t\tisRootSep = ((fsp !== undefined) && (fsp.length === extpath.getRoot(fsp).length) && (fsp[fsp.length - 1] === sep));\n\t\t} else {\n\t\t\tsep = '/';\n\t\t\tconst p = resource.path;\n\t\t\tisRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === CharCode.Slash;\n\t\t}\n\t\tif (!isRootSep && !hasTrailingPathSeparator(resource, sep)) {\n\t\t\treturn resource.with({ path: resource.path + '/' });\n\t\t}\n\t\treturn resource;\n\t}\n}\n\n\n/**\n * Unbiased utility that takes uris \"as they are\". This means it can be interchanged with\n * uri#toString() usages. The following is true\n * ```\n * assertEqual(aUri.toString() === bUri.toString(), exturi.isEqual(aUri, bUri))\n * ```\n */\nexport const extUri = new ExtUri(() => false);\n\n/**\n * BIASED utility that _mostly_ ignored the case of urs paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriBiasedIgnorePathCase = new ExtUri(uri => {\n\t// A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n\t// Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n\treturn uri.scheme === Schemas.file ? !isLinux : true;\n});\n\n\n/**\n * BIASED utility that always ignores the casing of uris paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriIgnorePathCase = new ExtUri(_ => true);\n\nexport const isEqual = extUri.isEqual.bind(extUri);\nexport const isEqualOrParent = extUri.isEqualOrParent.bind(extUri);\nexport const getComparisonKey = extUri.getComparisonKey.bind(extUri);\nexport const basenameOrAuthority = extUri.basenameOrAuthority.bind(extUri);\nexport const basename = extUri.basename.bind(extUri);\nexport const extname = extUri.extname.bind(extUri);\nexport const dirname = extUri.dirname.bind(extUri);\nexport const joinPath = extUri.joinPath.bind(extUri);\nexport const normalizePath = extUri.normalizePath.bind(extUri);\nexport const relativePath = extUri.relativePath.bind(extUri);\nexport const resolvePath = extUri.resolvePath.bind(extUri);\nexport const isAbsolutePath = extUri.isAbsolutePath.bind(extUri);\nexport const isEqualAuthority = extUri.isEqualAuthority.bind(extUri);\nexport const hasTrailingPathSeparator = extUri.hasTrailingPathSeparator.bind(extUri);\nexport const removeTrailingPathSeparator = extUri.removeTrailingPathSeparator.bind(extUri);\nexport const addTrailingPathSeparator = extUri.addTrailingPathSeparator.bind(extUri);\n\n//#endregion\n\nexport function distinctParents<T>(items: T[], resourceAccessor: (item: T) => URI): T[] {\n\tconst distinctParents: T[] = [];\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst candidateResource = resourceAccessor(items[i]);\n\t\tif (items.some((otherItem, index) => {\n\t\t\tif (index === i) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn isEqualOrParent(candidateResource, resourceAccessor(otherItem));\n\t\t})) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdistinctParents.push(items[i]);\n\t}\n\n\treturn distinctParents;\n}\n\n/**\n * Data URI related helpers.\n */\nexport namespace DataUri {\n\n\texport const META_DATA_LABEL = 'label';\n\texport const META_DATA_DESCRIPTION = 'description';\n\texport const META_DATA_SIZE = 'size';\n\texport const META_DATA_MIME = 'mime';\n\n\texport function parseMetaData(dataUri: URI): Map<string, string> {\n\t\tconst metadata = new Map<string, string>();\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n\t\tconst meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n\t\tmeta.split(';').forEach(property => {\n\t\t\tconst [key, value] = property.split(':');\n\t\t\tif (key && value) {\n\t\t\t\tmetadata.set(key, value);\n\t\t\t}\n\t\t});\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the mime is: image/png\n\t\tconst mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n\t\tif (mime) {\n\t\t\tmetadata.set(META_DATA_MIME, mime);\n\t\t}\n\n\t\treturn metadata;\n\t}\n}\n\nexport function toLocalResource(resource: URI, authority: string | undefined, localScheme: string): URI {\n\tif (authority) {\n\t\tlet path = resource.path;\n\t\tif (path && path[0] !== paths.posix.sep) {\n\t\t\tpath = paths.posix.sep + path;\n\t\t}\n\n\t\treturn resource.with({ scheme: localScheme, authority, path });\n\t}\n\n\treturn resource.with({ scheme: localScheme });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable, MutableDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { extUri as defaultExtUri, IExtUri } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { setTimeout0 } from 'vs/base/common/platform';\n\nexport function isThenable<T>(obj: unknown): obj is Promise<T> {\n\treturn !!obj && typeof (obj as unknown as Promise<T>).then === 'function';\n}\n\nexport interface CancelablePromise<T> extends Promise<T> {\n\tcancel(): void;\n}\n\nexport function createCancelablePromise<T>(callback: (token: CancellationToken) => Promise<T>): CancelablePromise<T> {\n\tconst source = new CancellationTokenSource();\n\n\tconst thenable = callback(source.token);\n\tconst promise = new Promise<T>((resolve, reject) => {\n\t\tconst subscription = source.token.onCancellationRequested(() => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\treject(canceled());\n\t\t});\n\t\tPromise.resolve(thenable).then(value => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\tresolve(value);\n\t\t}, err => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\treject(err);\n\t\t});\n\t});\n\n\treturn <CancelablePromise<T>>new class {\n\t\tcancel() {\n\t\t\tsource.cancel();\n\t\t}\n\t\tthen<TResult1 = T, TResult2 = never>(resolve?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, reject?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2> {\n\t\t\treturn promise.then(resolve, reject);\n\t\t}\n\t\tcatch<TResult = never>(reject?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult> {\n\t\t\treturn this.then(undefined, reject);\n\t\t}\n\t\tfinally(onfinally?: (() => void) | undefined | null): Promise<T> {\n\t\t\treturn promise.finally(onfinally);\n\t\t}\n\t};\n}\n\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken): Promise<T | undefined>;\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue: T): Promise<T>;\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue?: T): Promise<T | undefined> {\n\treturn Promise.race([promise, new Promise<T | undefined>(resolve => token.onCancellationRequested(() => resolve(defaultValue)))]);\n}\n\n/**\n * Returns as soon as one of the promises is resolved and cancels remaining promises\n */\nexport async function raceCancellablePromises<T>(cancellablePromises: CancelablePromise<T>[]): Promise<T> {\n\tlet resolvedPromiseIndex = -1;\n\tconst promises = cancellablePromises.map((promise, index) => promise.then(result => { resolvedPromiseIndex = index; return result; }));\n\tconst result = await Promise.race(promises);\n\tcancellablePromises.forEach((cancellablePromise, index) => {\n\t\tif (index !== resolvedPromiseIndex) {\n\t\t\tcancellablePromise.cancel();\n\t\t}\n\t});\n\treturn result;\n}\n\nexport function raceTimeout<T>(promise: Promise<T>, timeout: number, onTimeout?: () => void): Promise<T | undefined> {\n\tlet promiseResolve: ((value: T | undefined) => void) | undefined = undefined;\n\n\tconst timer = setTimeout(() => {\n\t\tpromiseResolve?.(undefined);\n\t\tonTimeout?.();\n\t}, timeout);\n\n\treturn Promise.race([\n\t\tpromise.finally(() => clearTimeout(timer)),\n\t\tnew Promise<T | undefined>(resolve => promiseResolve = resolve)\n\t]);\n}\n\nexport function asPromise<T>(callback: () => T | Thenable<T>): Promise<T> {\n\treturn new Promise<T>((resolve, reject) => {\n\t\tconst item = callback();\n\t\tif (isThenable<T>(item)) {\n\t\t\titem.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(item);\n\t\t}\n\t});\n}\n\nexport interface ITask<T> {\n\t(): T;\n}\n\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nexport class Throttler {\n\n\tprivate activePromise: Promise<any> | null;\n\tprivate queuedPromise: Promise<any> | null;\n\tprivate queuedPromiseFactory: ITask<Promise<any>> | null;\n\n\tconstructor() {\n\t\tthis.activePromise = null;\n\t\tthis.queuedPromise = null;\n\t\tthis.queuedPromiseFactory = null;\n\t}\n\n\tqueue<T>(promiseFactory: ITask<Promise<T>>): Promise<T> {\n\t\tif (this.activePromise) {\n\t\t\tthis.queuedPromiseFactory = promiseFactory;\n\n\t\t\tif (!this.queuedPromise) {\n\t\t\t\tconst onComplete = () => {\n\t\t\t\t\tthis.queuedPromise = null;\n\n\t\t\t\t\tconst result = this.queue(this.queuedPromiseFactory!);\n\t\t\t\t\tthis.queuedPromiseFactory = null;\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\n\t\t\t\tthis.queuedPromise = new Promise(resolve => {\n\t\t\t\t\tthis.activePromise!.then(onComplete, onComplete).then(resolve);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.queuedPromise!.then(resolve, reject);\n\t\t\t});\n\t\t}\n\n\t\tthis.activePromise = promiseFactory();\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.activePromise!.then((result: T) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\tresolve(result);\n\t\t\t}, (err: unknown) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\treject(err);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class Sequencer {\n\n\tprivate current: Promise<unknown> = Promise.resolve(null);\n\n\tqueue<T>(promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\treturn this.current = this.current.then(() => promiseTask(), () => promiseTask());\n\t}\n}\n\nexport class SequencerByKey<TKey> {\n\n\tprivate promiseMap = new Map<TKey, Promise<unknown>>();\n\n\tqueue<T>(key: TKey, promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\tconst runningPromise = this.promiseMap.get(key) ?? Promise.resolve();\n\t\tconst newPromise = runningPromise\n\t\t\t.catch(() => { })\n\t\t\t.then(promiseTask)\n\t\t\t.finally(() => {\n\t\t\t\tif (this.promiseMap.get(key) === newPromise) {\n\t\t\t\t\tthis.promiseMap.delete(key);\n\t\t\t\t}\n\t\t\t});\n\t\tthis.promiseMap.set(key, newPromise);\n\t\treturn newPromise;\n\t}\n}\n\n/**\n * A helper to delay (debounce) execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer<T> implements IDisposable {\n\n\tprivate timeout: any;\n\tprivate completionPromise: Promise<any> | null;\n\tprivate doResolve: ((value?: any | Promise<any>) => void) | null;\n\tprivate doReject: ((err: any) => void) | null;\n\tprivate task: ITask<T | Promise<T>> | null;\n\n\tconstructor(public defaultDelay: number) {\n\t\tthis.timeout = null;\n\t\tthis.completionPromise = null;\n\t\tthis.doResolve = null;\n\t\tthis.doReject = null;\n\t\tthis.task = null;\n\t}\n\n\ttrigger(task: ITask<T | Promise<T>>, delay: number = this.defaultDelay): Promise<T> {\n\t\tthis.task = task;\n\t\tthis.cancelTimeout();\n\n\t\tif (!this.completionPromise) {\n\t\t\tthis.completionPromise = new Promise((resolve, reject) => {\n\t\t\t\tthis.doResolve = resolve;\n\t\t\t\tthis.doReject = reject;\n\t\t\t}).then(() => {\n\t\t\t\tthis.completionPromise = null;\n\t\t\t\tthis.doResolve = null;\n\t\t\t\tif (this.task) {\n\t\t\t\t\tconst task = this.task;\n\t\t\t\t\tthis.task = null;\n\t\t\t\t\treturn task();\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t}\n\n\t\tthis.timeout = setTimeout(() => {\n\t\t\tthis.timeout = null;\n\t\t\tif (this.doResolve) {\n\t\t\t\tthis.doResolve(null);\n\t\t\t}\n\t\t}, delay);\n\n\t\treturn this.completionPromise;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.timeout !== null;\n\t}\n\n\tcancel(): void {\n\t\tthis.cancelTimeout();\n\n\t\tif (this.completionPromise) {\n\t\t\tif (this.doReject) {\n\t\t\t\tthis.doReject(canceled());\n\t\t\t}\n\t\t\tthis.completionPromise = null;\n\t\t}\n\t}\n\n\tprivate cancelTimeout(): void {\n\t\tif (this.timeout !== null) {\n\t\t\tclearTimeout(this.timeout);\n\t\t\tthis.timeout = null;\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * The mail man is clever and waits for a certain amount of time, before going\n * out to deliver letters. While the mail man is going out, more letters arrive\n * and can only be delivered once he is back. Once he is back the mail man will\n * do one more trip to deliver the letters that have accumulated while he was out.\n */\nexport class ThrottledDelayer<T> {\n\n\tprivate delayer: Delayer<Promise<T>>;\n\tprivate throttler: Throttler;\n\n\tconstructor(defaultDelay: number) {\n\t\tthis.delayer = new Delayer(defaultDelay);\n\t\tthis.throttler = new Throttler();\n\t}\n\n\ttrigger(promiseFactory: ITask<Promise<T>>, delay?: number): Promise<T> {\n\t\treturn this.delayer.trigger(() => this.throttler.queue(promiseFactory), delay) as unknown as Promise<T>;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.delayer.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.delayer.cancel();\n\t}\n\n\tdispose(): void {\n\t\tthis.delayer.dispose();\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently.\n */\nexport class Barrier {\n\n\tprivate _isOpen: boolean;\n\tprivate _promise: Promise<boolean>;\n\tprivate _completePromise!: (v: boolean) => void;\n\n\tconstructor() {\n\t\tthis._isOpen = false;\n\t\tthis._promise = new Promise<boolean>((c, e) => {\n\t\t\tthis._completePromise = c;\n\t\t});\n\t}\n\n\tisOpen(): boolean {\n\t\treturn this._isOpen;\n\t}\n\n\topen(): void {\n\t\tthis._isOpen = true;\n\t\tthis._completePromise(true);\n\t}\n\n\twait(): Promise<boolean> {\n\t\treturn this._promise;\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently after a certain period of\n * time or when open is called explicitly\n */\nexport class AutoOpenBarrier extends Barrier {\n\n\tprivate readonly _timeout: any;\n\n\tconstructor(autoOpenTimeMs: number) {\n\t\tsuper();\n\t\tthis._timeout = setTimeout(() => this.open(), autoOpenTimeMs);\n\t}\n\n\toverride open(): void {\n\t\tclearTimeout(this._timeout);\n\t\tsuper.open();\n\t}\n}\n\nexport function timeout(millis: number): CancelablePromise<void>;\nexport function timeout(millis: number, token: CancellationToken): Promise<void>;\nexport function timeout(millis: number, token?: CancellationToken): CancelablePromise<void> | Promise<void> {\n\tif (!token) {\n\t\treturn createCancelablePromise(token => timeout(millis, token));\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst handle = setTimeout(() => {\n\t\t\tdisposable.dispose();\n\t\t\tresolve();\n\t\t}, millis);\n\t\tconst disposable = token.onCancellationRequested(() => {\n\t\t\tclearTimeout(handle);\n\t\t\tdisposable.dispose();\n\t\t\treject(canceled());\n\t\t});\n\t});\n}\n\nexport function disposableTimeout(handler: () => void, timeout = 0): IDisposable {\n\tconst timer = setTimeout(handler, timeout);\n\treturn toDisposable(() => clearTimeout(timer));\n}\n\n/**\n * Runs the provided list of promise factories in sequential order. The returned\n * promise will complete to an array of results from each promise.\n */\n\nexport function sequence<T>(promiseFactories: ITask<Promise<T>>[]): Promise<T[]> {\n\tconst results: T[] = [];\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tfunction next(): Promise<T> | null {\n\t\treturn index < len ? promiseFactories[index++]() : null;\n\t}\n\n\tfunction thenHandler(result: any): Promise<any> {\n\t\tif (result !== undefined && result !== null) {\n\t\t\tresults.push(result);\n\t\t}\n\n\t\tconst n = next();\n\t\tif (n) {\n\t\t\treturn n.then(thenHandler);\n\t\t}\n\n\t\treturn Promise.resolve(results);\n\t}\n\n\treturn Promise.resolve(null).then(thenHandler);\n}\n\nexport function first<T>(promiseFactories: ITask<Promise<T>>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null): Promise<T | null> {\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tconst loop: () => Promise<T | null> = () => {\n\t\tif (index >= len) {\n\t\t\treturn Promise.resolve(defaultValue);\n\t\t}\n\n\t\tconst factory = promiseFactories[index++];\n\t\tconst promise = Promise.resolve(factory());\n\n\t\treturn promise.then(result => {\n\t\t\tif (shouldStop(result)) {\n\t\t\t\treturn Promise.resolve(result);\n\t\t\t}\n\n\t\t\treturn loop();\n\t\t});\n\t};\n\n\treturn loop();\n}\n\n/**\n * Returns the result of the first promise that matches the \"shouldStop\",\n * running all promises in parallel. Supports cancelable promises.\n */\nexport function firstParallel<T>(promiseList: Promise<T>[], shouldStop?: (t: T) => boolean, defaultValue?: T | null): Promise<T | null>;\nexport function firstParallel<T, R extends T>(promiseList: Promise<T>[], shouldStop: (t: T) => t is R, defaultValue?: R | null): Promise<R | null>;\nexport function firstParallel<T>(promiseList: Promise<T>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null) {\n\tif (promiseList.length === 0) {\n\t\treturn Promise.resolve(defaultValue);\n\t}\n\n\tlet todo = promiseList.length;\n\tconst finish = () => {\n\t\ttodo = -1;\n\t\tfor (const promise of promiseList) {\n\t\t\t(promise as Partial<CancelablePromise<T>>).cancel?.();\n\t\t}\n\t};\n\n\treturn new Promise<T | null>((resolve, reject) => {\n\t\tfor (const promise of promiseList) {\n\t\t\tpromise.then(result => {\n\t\t\t\tif (--todo >= 0 && shouldStop(result)) {\n\t\t\t\t\tfinish();\n\t\t\t\t\tresolve(result);\n\t\t\t\t} else if (todo === 0) {\n\t\t\t\t\tresolve(defaultValue);\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tif (--todo >= 0) {\n\t\t\t\t\t\tfinish();\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t});\n}\n\ninterface ILimitedTaskFactory<T> {\n\tfactory: ITask<Promise<T>>;\n\tc: (value: T | Promise<T>) => void;\n\te: (error?: unknown) => void;\n}\n\n/**\n * A helper to queue N promises and run them all with a max degree of parallelism. The helper\n * ensures that at any time no more than M promises are running at the same time.\n */\nexport class Limiter<T> {\n\n\tprivate _size = 0;\n\tprivate runningPromises: number;\n\tprivate maxDegreeOfParalellism: number;\n\tprivate outstandingPromises: ILimitedTaskFactory<T>[];\n\tprivate readonly _onFinished: Emitter<void>;\n\n\tconstructor(maxDegreeOfParalellism: number) {\n\t\tthis.maxDegreeOfParalellism = maxDegreeOfParalellism;\n\t\tthis.outstandingPromises = [];\n\t\tthis.runningPromises = 0;\n\t\tthis._onFinished = new Emitter<void>();\n\t}\n\n\tget onFinished(): Event<void> {\n\t\treturn this._onFinished.event;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T> {\n\t\tthis._size++;\n\n\t\treturn new Promise<T>((c, e) => {\n\t\t\tthis.outstandingPromises.push({ factory, c, e });\n\t\t\tthis.consume();\n\t\t});\n\t}\n\n\tprivate consume(): void {\n\t\twhile (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n\t\t\tconst iLimitedTask = this.outstandingPromises.shift()!;\n\t\t\tthis.runningPromises++;\n\n\t\t\tconst promise = iLimitedTask.factory();\n\t\t\tpromise.then(iLimitedTask.c, iLimitedTask.e);\n\t\t\tpromise.then(() => this.consumed(), () => this.consumed());\n\t\t}\n\t}\n\n\tprivate consumed(): void {\n\t\tthis._size--;\n\t\tthis.runningPromises--;\n\n\t\tif (this.outstandingPromises.length > 0) {\n\t\t\tthis.consume();\n\t\t} else {\n\t\t\tthis._onFinished.fire();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis._onFinished.dispose();\n\t}\n}\n\n/**\n * A queue is handles one promise at a time and guarantees that at any time only one promise is executing.\n */\nexport class Queue<T> extends Limiter<T> {\n\n\tconstructor() {\n\t\tsuper(1);\n\t}\n}\n\n/**\n * A helper to organize queues per resource. The ResourceQueue makes sure to manage queues per resource\n * by disposing them once the queue is empty.\n */\nexport class ResourceQueue implements IDisposable {\n\n\tprivate readonly queues = new Map<string, Queue<void>>();\n\n\tqueueFor(resource: URI, extUri: IExtUri = defaultExtUri): Queue<void> {\n\t\tconst key = extUri.getComparisonKey(resource);\n\n\t\tlet queue = this.queues.get(key);\n\t\tif (!queue) {\n\t\t\tqueue = new Queue<void>();\n\t\t\tEvent.once(queue.onFinished)(() => {\n\t\t\t\tqueue?.dispose();\n\t\t\t\tthis.queues.delete(key);\n\t\t\t});\n\n\t\t\tthis.queues.set(key, queue);\n\t\t}\n\n\t\treturn queue;\n\t}\n\n\tdispose(): void {\n\t\tthis.queues.forEach(queue => queue.dispose());\n\t\tthis.queues.clear();\n\t}\n}\n\nexport class TimeoutTimer implements IDisposable {\n\tprivate _token: any;\n\n\tconstructor();\n\tconstructor(runner: () => void, timeout: number);\n\tconstructor(runner?: () => void, timeout?: number) {\n\t\tthis._token = -1;\n\n\t\tif (typeof runner === 'function' && typeof timeout === 'number') {\n\t\t\tthis.setIfNotSet(runner, timeout);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearTimeout(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, timeout: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n\n\tsetIfNotSet(runner: () => void, timeout: number): void {\n\t\tif (this._token !== -1) {\n\t\t\t// timer is already set\n\t\t\treturn;\n\t\t}\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n}\n\nexport class IntervalTimer implements IDisposable {\n\n\tprivate _token: any;\n\n\tconstructor() {\n\t\tthis._token = -1;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearInterval(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, interval: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setInterval(() => {\n\t\t\trunner();\n\t\t}, interval);\n\t}\n}\n\nexport class RunOnceScheduler {\n\n\tprotected runner: ((...args: unknown[]) => void) | null;\n\n\tprivate timeoutToken: any;\n\tprivate timeout: number;\n\tprivate timeoutHandler: () => void;\n\n\tconstructor(runner: (...args: any[]) => void, delay: number) {\n\t\tthis.timeoutToken = -1;\n\t\tthis.runner = runner;\n\t\tthis.timeout = delay;\n\t\tthis.timeoutHandler = this.onTimeout.bind(this);\n\t}\n\n\t/**\n\t * Dispose RunOnceScheduler\n\t */\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\t/**\n\t * Cancel current scheduled runner (if any).\n\t */\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearTimeout(this.timeoutToken);\n\t\t\tthis.timeoutToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tthis.cancel();\n\t\tthis.timeoutToken = setTimeout(this.timeoutHandler, delay);\n\t}\n\n\tget delay(): number {\n\t\treturn this.timeout;\n\t}\n\n\tset delay(value: number) {\n\t\tthis.timeout = value;\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.timeoutToken !== -1;\n\t}\n\n\tprivate onTimeout() {\n\t\tthis.timeoutToken = -1;\n\t\tif (this.runner) {\n\t\t\tthis.doRun();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tif (this.runner) {\n\t\t\tthis.runner();\n\t\t}\n\t}\n}\n\n/**\n * Same as `RunOnceScheduler`, but doesn't count the time spent in sleep mode.\n * > **NOTE**: Only offers 1s resolution.\n *\n * When calling `setTimeout` with 3hrs, and putting the computer immediately to sleep\n * for 8hrs, `setTimeout` will fire **as soon as the computer wakes from sleep**. But\n * this scheduler will execute 3hrs **after waking the computer from sleep**.\n */\nexport class ProcessTimeRunOnceScheduler {\n\n\tprivate runner: (() => void) | null;\n\tprivate timeout: number;\n\n\tprivate counter: number;\n\tprivate intervalToken: any;\n\tprivate intervalHandler: () => void;\n\n\tconstructor(runner: () => void, delay: number) {\n\t\tif (delay % 1000 !== 0) {\n\t\t\tconsole.warn(`ProcessTimeRunOnceScheduler resolution is 1s, ${delay}ms is not a multiple of 1000ms.`);\n\t\t}\n\t\tthis.runner = runner;\n\t\tthis.timeout = delay;\n\t\tthis.counter = 0;\n\t\tthis.intervalToken = -1;\n\t\tthis.intervalHandler = this.onInterval.bind(this);\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearInterval(this.intervalToken);\n\t\t\tthis.intervalToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tif (delay % 1000 !== 0) {\n\t\t\tconsole.warn(`ProcessTimeRunOnceScheduler resolution is 1s, ${delay}ms is not a multiple of 1000ms.`);\n\t\t}\n\t\tthis.cancel();\n\t\tthis.counter = Math.ceil(delay / 1000);\n\t\tthis.intervalToken = setInterval(this.intervalHandler, 1000);\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.intervalToken !== -1;\n\t}\n\n\tprivate onInterval() {\n\t\tthis.counter--;\n\t\tif (this.counter > 0) {\n\t\t\t// still need to wait\n\t\t\treturn;\n\t\t}\n\n\t\t// time elapsed\n\t\tclearInterval(this.intervalToken);\n\t\tthis.intervalToken = -1;\n\t\tif (this.runner) {\n\t\t\tthis.runner();\n\t\t}\n\t}\n}\n\nexport class RunOnceWorker<T> extends RunOnceScheduler {\n\tprivate units: T[] = [];\n\n\tconstructor(runner: (units: T[]) => void, timeout: number) {\n\t\tsuper(runner, timeout);\n\t}\n\n\twork(unit: T): void {\n\t\tthis.units.push(unit);\n\n\t\tif (!this.isScheduled()) {\n\t\t\tthis.schedule();\n\t\t}\n\t}\n\n\tprotected override doRun(): void {\n\t\tconst units = this.units;\n\t\tthis.units = [];\n\n\t\tif (this.runner) {\n\t\t\tthis.runner(units);\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tthis.units = [];\n\n\t\tsuper.dispose();\n\t}\n}\n\n/**\n * The `ThrottledWorker` will accept units of work `T`\n * to handle. The contract is:\n * * there is a maximum of units the worker can handle at once (via `chunkSize`)\n * * after having handled units, the worker needs to rest (via `throttleDelay`)\n */\nexport class ThrottledWorker<T> extends Disposable {\n\n\tprivate readonly pendingWork: T[] = [];\n\n\tprivate readonly throttler = this._register(new MutableDisposable<RunOnceScheduler>());\n\tprivate disposed = false;\n\n\tconstructor(\n\t\tprivate readonly maxWorkChunkSize: number,\n\t\tprivate readonly maxPendingWork: number | undefined,\n\t\tprivate readonly throttleDelay: number,\n\t\tprivate readonly handler: (units: readonly T[]) => void\n\t) {\n\t\tsuper();\n\t}\n\n\t/**\n\t * The number of work units that are pending to be processed.\n\t */\n\tget pending(): number { return this.pendingWork.length; }\n\n\t/**\n\t * Add units to be worked on. Use `pending` to figure out\n\t * how many units are not yet processed after this method\n\t * was called.\n\t *\n\t * @returns whether the work was accepted or not. If the\n\t * worker is disposed, it will not accept any more work.\n\t * If the number of pending units would become larger\n\t * than `maxPendingWork`, more work will also not be accepted.\n\t */\n\twork(units: readonly T[]): boolean {\n\t\tif (this.disposed) {\n\t\t\treturn false; // work not accepted: disposed\n\t\t}\n\n\t\t// Check for reaching maximum of pending work\n\t\tif (typeof this.maxPendingWork === 'number') {\n\n\t\t\t// Throttled: simple check if pending + units exceeds max pending\n\t\t\tif (this.throttler.value) {\n\t\t\t\tif (this.pending + units.length > this.maxPendingWork) {\n\t\t\t\t\treturn false; // work not accepted: too much pending work\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Unthrottled: same as throttled, but account for max chunk getting\n\t\t\t// worked on directly without being pending\n\t\t\telse {\n\t\t\t\tif (this.pending + units.length - this.maxWorkChunkSize > this.maxPendingWork) {\n\t\t\t\t\treturn false; // work not accepted: too much pending work\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add to pending units first\n\t\tthis.pendingWork.push(...units);\n\n\t\t// If not throttled, start working directly\n\t\t// Otherwise, when the throttle delay has\n\t\t// past, pending work will be worked again.\n\t\tif (!this.throttler.value) {\n\t\t\tthis.doWork();\n\t\t}\n\n\t\treturn true; // work accepted\n\t}\n\n\tprivate doWork(): void {\n\n\t\t// Extract chunk to handle and handle it\n\t\tthis.handler(this.pendingWork.splice(0, this.maxWorkChunkSize));\n\n\t\t// If we have remaining work, schedule it after a delay\n\t\tif (this.pendingWork.length > 0) {\n\t\t\tthis.throttler.value = new RunOnceScheduler(() => {\n\t\t\t\tthis.throttler.clear();\n\n\t\t\t\tthis.doWork();\n\t\t\t}, this.throttleDelay);\n\t\t\tthis.throttler.value.schedule();\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.disposed = true;\n\t}\n}\n\n//#region -- run on idle tricks ------------\n\nexport interface IdleDeadline {\n\treadonly didTimeout: boolean;\n\ttimeRemaining(): number;\n}\n\n/**\n * Execute the callback the next time the browser is idle\n */\nexport let runWhenIdle: (callback: (idle: IdleDeadline) => void, timeout?: number) => IDisposable;\n\ndeclare function requestIdleCallback(callback: (args: IdleDeadline) => void, options?: { timeout: number }): number;\ndeclare function cancelIdleCallback(handle: number): void;\n\n(function () {\n\tif (typeof requestIdleCallback !== 'function' || typeof cancelIdleCallback !== 'function') {\n\t\trunWhenIdle = (runner) => {\n\t\t\tsetTimeout0(() => {\n\t\t\t\tif (disposed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst end = Date.now() + 3; // yield often\n\t\t\t\trunner(Object.freeze({\n\t\t\t\t\tdidTimeout: true,\n\t\t\t\t\ttimeRemaining() {\n\t\t\t\t\t\treturn Math.max(0, end - Date.now());\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t});\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t} else {\n\t\trunWhenIdle = (runner, timeout?) => {\n\t\t\tconst handle: number = requestIdleCallback(runner, typeof timeout === 'number' ? { timeout } : undefined);\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tcancelIdleCallback(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n})();\n\n/**\n * An implementation of the \"idle-until-urgent\"-strategy as introduced\n * here: https://philipwalton.com/articles/idle-until-urgent/\n */\nexport class IdleValue<T> {\n\n\tprivate readonly _executor: () => void;\n\tprivate readonly _handle: IDisposable;\n\n\tprivate _didRun: boolean = false;\n\tprivate _value?: T;\n\tprivate _error: unknown;\n\n\tconstructor(executor: () => T) {\n\t\tthis._executor = () => {\n\t\t\ttry {\n\t\t\t\tthis._value = executor();\n\t\t\t} catch (err) {\n\t\t\t\tthis._error = err;\n\t\t\t} finally {\n\t\t\t\tthis._didRun = true;\n\t\t\t}\n\t\t};\n\t\tthis._handle = runWhenIdle(() => this._executor());\n\t}\n\n\tdispose(): void {\n\t\tthis._handle.dispose();\n\t}\n\n\tget value(): T {\n\t\tif (!this._didRun) {\n\t\t\tthis._handle.dispose();\n\t\t\tthis._executor();\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value!;\n\t}\n\n\tget isInitialized(): boolean {\n\t\treturn this._didRun;\n\t}\n}\n\n//#endregion\n\nexport async function retry<T>(task: ITask<Promise<T>>, delay: number, retries: number): Promise<T> {\n\tlet lastError: Error | undefined;\n\n\tfor (let i = 0; i < retries; i++) {\n\t\ttry {\n\t\t\treturn await task();\n\t\t} catch (error) {\n\t\t\tlastError = error;\n\n\t\t\tawait timeout(delay);\n\t\t}\n\t}\n\n\tthrow lastError;\n}\n\n//#region Task Sequentializer\n\ninterface IPendingTask {\n\ttaskId: number;\n\tcancel: () => void;\n\tpromise: Promise<void>;\n}\n\ninterface ISequentialTask {\n\tpromise: Promise<void>;\n\tpromiseResolve: () => void;\n\tpromiseReject: (error: Error) => void;\n\trun: () => Promise<void>;\n}\n\nexport interface ITaskSequentializerWithPendingTask {\n\treadonly pending: Promise<void>;\n}\n\nexport class TaskSequentializer {\n\tprivate _pending?: IPendingTask;\n\tprivate _next?: ISequentialTask;\n\n\thasPending(taskId?: number): this is ITaskSequentializerWithPendingTask {\n\t\tif (!this._pending) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof taskId === 'number') {\n\t\t\treturn this._pending.taskId === taskId;\n\t\t}\n\n\t\treturn !!this._pending;\n\t}\n\n\tget pending(): Promise<void> | undefined {\n\t\treturn this._pending ? this._pending.promise : undefined;\n\t}\n\n\tcancelPending(): void {\n\t\tthis._pending?.cancel();\n\t}\n\n\tsetPending(taskId: number, promise: Promise<void>, onCancel?: () => void,): Promise<void> {\n\t\tthis._pending = { taskId, cancel: () => onCancel?.(), promise };\n\n\t\tpromise.then(() => this.donePending(taskId), () => this.donePending(taskId));\n\n\t\treturn promise;\n\t}\n\n\tprivate donePending(taskId: number): void {\n\t\tif (this._pending && taskId === this._pending.taskId) {\n\n\t\t\t// only set pending to done if the promise finished that is associated with that taskId\n\t\t\tthis._pending = undefined;\n\n\t\t\t// schedule the next task now that we are free if we have any\n\t\t\tthis.triggerNext();\n\t\t}\n\t}\n\n\tprivate triggerNext(): void {\n\t\tif (this._next) {\n\t\t\tconst next = this._next;\n\t\t\tthis._next = undefined;\n\n\t\t\t// Run next task and complete on the associated promise\n\t\t\tnext.run().then(next.promiseResolve, next.promiseReject);\n\t\t}\n\t}\n\n\tsetNext(run: () => Promise<void>): Promise<void> {\n\n\t\t// this is our first next task, so we create associated promise with it\n\t\t// so that we can return a promise that completes when the task has\n\t\t// completed.\n\t\tif (!this._next) {\n\t\t\tlet promiseResolve: () => void;\n\t\t\tlet promiseReject: (error: Error) => void;\n\t\t\tconst promise = new Promise<void>((resolve, reject) => {\n\t\t\t\tpromiseResolve = resolve;\n\t\t\t\tpromiseReject = reject;\n\t\t\t});\n\n\t\t\tthis._next = {\n\t\t\t\trun,\n\t\t\t\tpromise,\n\t\t\t\tpromiseResolve: promiseResolve!,\n\t\t\t\tpromiseReject: promiseReject!\n\t\t\t};\n\t\t}\n\n\t\t// we have a previous next task, just overwrite it\n\t\telse {\n\t\t\tthis._next.run = run;\n\t\t}\n\n\t\treturn this._next.promise;\n\t}\n}\n\n//#endregion\n\n//#region\n\n/**\n * The `IntervalCounter` allows to count the number\n * of calls to `increment()` over a duration of\n * `interval`. This utility can be used to conditionally\n * throttle a frequent task when a certain threshold\n * is reached.\n */\nexport class IntervalCounter {\n\n\tprivate lastIncrementTime = 0;\n\n\tprivate value = 0;\n\n\tconstructor(private readonly interval: number, private readonly nowFn = () => Date.now()) { }\n\n\tincrement(): number {\n\t\tconst now = this.nowFn();\n\n\t\t// We are outside of the range of `interval` and as such\n\t\t// start counting from 0 and remember the time\n\t\tif (now - this.lastIncrementTime > this.interval) {\n\t\t\tthis.lastIncrementTime = now;\n\t\t\tthis.value = 0;\n\t\t}\n\n\t\tthis.value++;\n\n\t\treturn this.value;\n\t}\n}\n\n//#endregion\n\n//#region\n\nexport type ValueCallback<T = unknown> = (value: T | Promise<T>) => void;\n\n/**\n * Creates a promise whose resolution or rejection can be controlled imperatively.\n */\nexport class DeferredPromise<T> {\n\n\tprivate completeCallback!: ValueCallback<T>;\n\tprivate errorCallback!: (err: unknown) => void;\n\tprivate rejected = false;\n\tprivate resolved = false;\n\n\tpublic get isRejected() {\n\t\treturn this.rejected;\n\t}\n\n\tpublic get isResolved() {\n\t\treturn this.resolved;\n\t}\n\n\tpublic get isSettled() {\n\t\treturn this.rejected || this.resolved;\n\t}\n\n\tpublic p: Promise<T>;\n\n\tconstructor() {\n\t\tthis.p = new Promise<T>((c, e) => {\n\t\t\tthis.completeCallback = c;\n\t\t\tthis.errorCallback = e;\n\t\t});\n\t}\n\n\tpublic complete(value: T) {\n\t\treturn new Promise<void>(resolve => {\n\t\t\tthis.completeCallback(value);\n\t\t\tthis.resolved = true;\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tpublic error(err: unknown) {\n\t\treturn new Promise<void>(resolve => {\n\t\t\tthis.errorCallback(err);\n\t\t\tthis.rejected = true;\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tpublic cancel() {\n\t\tnew Promise<void>(resolve => {\n\t\t\tthis.errorCallback(canceled());\n\t\t\tthis.rejected = true;\n\t\t\tresolve();\n\t\t});\n\t}\n}\n\n//#endregion\n\n//#region Promises\n\nexport namespace Promises {\n\n\t/**\n\t * A drop-in replacement for `Promise.all` with the only difference\n\t * that the method awaits every promise to either fulfill or reject.\n\t *\n\t * Similar to `Promise.all`, only the first error will be returned\n\t * if any.\n\t */\n\texport async function settled<T>(promises: Promise<T>[]): Promise<T[]> {\n\t\tlet firstError: Error | undefined = undefined;\n\n\t\tconst result = await Promise.all(promises.map(promise => promise.then(value => value, error => {\n\t\t\tif (!firstError) {\n\t\t\t\tfirstError = error;\n\t\t\t}\n\n\t\t\treturn undefined; // do not rethrow so that other promises can settle\n\t\t})));\n\n\t\tif (typeof firstError !== 'undefined') {\n\t\t\tthrow firstError;\n\t\t}\n\n\t\treturn result as unknown as T[]; // cast is needed and protected by the `throw` above\n\t}\n\n\t/**\n\t * A helper to create a new `Promise<T>` with a body that is a promise\n\t * itself. By default, an error that raises from the async body will\n\t * end up as a unhandled rejection, so this utility properly awaits the\n\t * body and rejects the promise as a normal promise does without async\n\t * body.\n\t *\n\t * This method should only be used in rare cases where otherwise `async`\n\t * cannot be used (e.g. when callbacks are involved that require this).\n\t */\n\texport function withAsyncBody<T, E = Error>(bodyFn: (resolve: (value: T) => unknown, reject: (error: E) => unknown) => Promise<unknown>): Promise<T> {\n\t\t// eslint-disable-next-line no-async-promise-executor\n\t\treturn new Promise<T>(async (resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tawait bodyFn(resolve, reject);\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t});\n\t}\n}\n\n//#endregion\n\n//#region\n\nconst enum AsyncIterableSourceState {\n\tInitial,\n\tDoneOK,\n\tDoneError,\n}\n\n/**\n * An object that allows to emit async values asynchronously or bring the iterable to an error state using `reject()`.\n * This emitter is valid only for the duration of the executor (until the promise returned by the executor settles).\n */\nexport interface AsyncIterableEmitter<T> {\n\t/**\n\t * The value will be appended at the end.\n\t *\n\t * **NOTE** If `reject()` has already been called, this method has no effect.\n\t */\n\temitOne(value: T): void;\n\t/**\n\t * The values will be appended at the end.\n\t *\n\t * **NOTE** If `reject()` has already been called, this method has no effect.\n\t */\n\temitMany(values: T[]): void;\n\t/**\n\t * Writing an error will permanently invalidate this iterable.\n\t * The current users will receive an error thrown, as will all future users.\n\t *\n\t * **NOTE** If `reject()` have already been called, this method has no effect.\n\t */\n\treject(error: Error): void;\n}\n\n/**\n * An executor for the `AsyncIterableObject` that has access to an emitter.\n */\nexport interface AyncIterableExecutor<T> {\n\t/**\n\t * @param emitter An object that allows to emit async values valid only for the duration of the executor.\n\t */\n\t(emitter: AsyncIterableEmitter<T>): void | Promise<void>\n}\n\n/**\n * A rich implementation for an `AsyncIterable<T>`.\n */\nexport class AsyncIterableObject<T> implements AsyncIterable<T> {\n\n\tpublic static fromArray<T>(items: T[]): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>((writer) => {\n\t\t\twriter.emitMany(items);\n\t\t});\n\t}\n\n\tpublic static fromPromise<T>(promise: Promise<T[]>): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>(async (emitter) => {\n\t\t\temitter.emitMany(await promise);\n\t\t});\n\t}\n\n\tpublic static fromPromises<T>(promises: Promise<T>[]): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>(async (emitter) => {\n\t\t\tawait Promise.all(promises.map(async (p) => emitter.emitOne(await p)));\n\t\t});\n\t}\n\n\tpublic static merge<T>(iterables: AsyncIterable<T>[]): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject(async (emitter) => {\n\t\t\tawait Promise.all(iterables.map(async (iterable) => {\n\t\t\t\tfor await(const item of iterable) {\n\t\t\t\t\temitter.emitOne(item);\n\t\t\t\t}\n\t\t\t}));\n\t\t});\n\t}\n\n\tpublic static EMPTY = AsyncIterableObject.fromArray<any>([]);\n\n\tprivate _state: AsyncIterableSourceState;\n\tprivate _results: T[];\n\tprivate _error: Error | null;\n\tprivate readonly _onStateChanged: Emitter<void>;\n\n\tconstructor(executor: AyncIterableExecutor<T>) {\n\t\tthis._state = AsyncIterableSourceState.Initial;\n\t\tthis._results = [];\n\t\tthis._error = null;\n\t\tthis._onStateChanged = new Emitter<void>();\n\n\t\tqueueMicrotask(async () => {\n\t\t\tconst writer: AsyncIterableEmitter<T> = {\n\t\t\t\temitOne: (item) => this.emitOne(item),\n\t\t\t\temitMany: (items) => this.emitMany(items),\n\t\t\t\treject: (error) => this.reject(error)\n\t\t\t};\n\t\t\ttry {\n\t\t\t\tawait Promise.resolve(executor(writer));\n\t\t\t\tthis.resolve();\n\t\t\t} catch (err) {\n\t\t\t\tthis.reject(err);\n\t\t\t} finally {\n\t\t\t\twriter.emitOne = undefined!;\n\t\t\t\twriter.emitMany = undefined!;\n\t\t\t\twriter.reject = undefined!;\n\t\t\t}\n\t\t});\n\t}\n\n\t[Symbol.asyncIterator](): AsyncIterator<T, undefined, undefined> {\n\t\tlet i = 0;\n\t\treturn {\n\t\t\tnext: async () => {\n\t\t\t\tdo {\n\t\t\t\t\tif (this._state === AsyncIterableSourceState.DoneError) {\n\t\t\t\t\t\tthrow this._error;\n\t\t\t\t\t}\n\t\t\t\t\tif (i < this._results.length) {\n\t\t\t\t\t\treturn { done: false, value: this._results[i++] };\n\t\t\t\t\t}\n\t\t\t\t\tif (this._state === AsyncIterableSourceState.DoneOK) {\n\t\t\t\t\t\treturn { done: true, value: undefined };\n\t\t\t\t\t}\n\t\t\t\t\tawait Event.toPromise(this._onStateChanged.event);\n\t\t\t\t} while (true);\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic static map<T, R>(iterable: AsyncIterable<T>, mapFn: (item: T) => R): AsyncIterableObject<R> {\n\t\treturn new AsyncIterableObject<R>(async (emitter) => {\n\t\t\tfor await(const item of iterable) {\n\t\t\t\temitter.emitOne(mapFn(item));\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic map<R>(mapFn: (item: T) => R): AsyncIterableObject<R> {\n\t\treturn AsyncIterableObject.map(this, mapFn);\n\t}\n\n\tpublic static filter<T>(iterable: AsyncIterable<T>, filterFn: (item: T) => boolean): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>(async (emitter) => {\n\t\t\tfor await(const item of iterable) {\n\t\t\t\tif (filterFn(item)) {\n\t\t\t\t\temitter.emitOne(item);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic filter(filterFn: (item: T) => boolean): AsyncIterableObject<T> {\n\t\treturn AsyncIterableObject.filter(this, filterFn);\n\t}\n\n\tpublic static coalesce<T>(iterable: AsyncIterable<T | undefined | null>): AsyncIterableObject<T> {\n\t\treturn <AsyncIterableObject<T>>AsyncIterableObject.filter(iterable, item => !!item);\n\t}\n\n\tpublic coalesce(): AsyncIterableObject<NonNullable<T>> {\n\t\treturn AsyncIterableObject.coalesce(this) as AsyncIterableObject<NonNullable<T>>;\n\t}\n\n\tpublic static async toPromise<T>(iterable: AsyncIterable<T>): Promise<T[]> {\n\t\tconst result: T[] = [];\n\t\tfor await (const item of iterable) {\n\t\t\tresult.push(item);\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic toPromise(): Promise<T[]> {\n\t\treturn AsyncIterableObject.toPromise(this);\n\t}\n\n\t/**\n\t * The value will be appended at the end.\n\t *\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate emitOne(value: T): void {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\t// it is important to add new values at the end,\n\t\t// as we may have iterators already running on the array\n\t\tthis._results.push(value);\n\t\tthis._onStateChanged.fire();\n\t}\n\n\t/**\n\t * The values will be appended at the end.\n\t *\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate emitMany(values: T[]): void {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\t// it is important to add new values at the end,\n\t\t// as we may have iterators already running on the array\n\t\tthis._results = this._results.concat(values);\n\t\tthis._onStateChanged.fire();\n\t}\n\n\t/**\n\t * Calling `resolve()` will mark the result array as complete.\n\t *\n\t * **NOTE** `resolve()` must be called, otherwise all consumers of this iterable will hang indefinitely, similar to a non-resolved promise.\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate resolve(): void {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\tthis._state = AsyncIterableSourceState.DoneOK;\n\t\tthis._onStateChanged.fire();\n\t}\n\n\t/**\n\t * Writing an error will permanently invalidate this iterable.\n\t * The current users will receive an error thrown, as will all future users.\n\t *\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate reject(error: Error) {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\tthis._state = AsyncIterableSourceState.DoneError;\n\t\tthis._error = error;\n\t\tthis._onStateChanged.fire();\n\t}\n}\n\nexport class CancelableAsyncIterableObject<T> extends AsyncIterableObject<T> {\n\tconstructor(\n\t\tprivate readonly _source: CancellationTokenSource,\n\t\texecutor: AyncIterableExecutor<T>\n\t) {\n\t\tsuper(executor);\n\t}\n\n\tcancel(): void {\n\t\tthis._source.cancel();\n\t}\n}\n\nexport function createCancelableAsyncIterable<T>(callback: (token: CancellationToken) => AsyncIterable<T>): CancelableAsyncIterableObject<T> {\n\tconst source = new CancellationTokenSource();\n\tconst innerIterable = callback(source.token);\n\n\treturn new CancelableAsyncIterableObject<T>(source, async (emitter) => {\n\t\tconst subscription = source.token.onCancellationRequested(() => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\temitter.reject(canceled());\n\t\t});\n\t\ttry {\n\t\t\tfor await (const item of innerIterable) {\n\t\t\t\tif (source.token.isCancellationRequested) {\n\t\t\t\t\t// canceled in the meantime\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\temitter.emitOne(item);\n\t\t\t}\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t} catch (err) {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\temitter.reject(err);\n\t\t}\n\t});\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isThenable } from 'vs/base/common/async';\nimport { CharCode } from 'vs/base/common/charCode';\nimport * as extpath from 'vs/base/common/extpath';\nimport { LRUCache } from 'vs/base/common/map';\nimport * as paths from 'vs/base/common/path';\nimport * as strings from 'vs/base/common/strings';\n\nexport interface IExpression {\n\t[pattern: string]: boolean | SiblingClause;\n}\n\nexport interface IRelativePattern {\n\tbase: string;\n\tpattern: string;\n}\n\nexport function getEmptyExpression(): IExpression {\n\treturn Object.create(null);\n}\n\nexport interface SiblingClause {\n\twhen: string;\n}\n\nconst GLOBSTAR = '**';\nconst GLOB_SPLIT = '/';\nconst PATH_REGEX = '[/\\\\\\\\]';\t\t// any slash or backslash\nconst NO_PATH_REGEX = '[^/\\\\\\\\]';\t// any non-slash and non-backslash\nconst ALL_FORWARD_SLASHES = /\\//g;\n\nfunction starsToRegExp(starCount: number): string {\n\tswitch (starCount) {\n\t\tcase 0:\n\t\t\treturn '';\n\t\tcase 1:\n\t\t\treturn `${NO_PATH_REGEX}*?`; // 1 star matches any number of characters except path separator (/ and \\) - non greedy (?)\n\t\tdefault:\n\t\t\t// Matches:  (Path Sep OR Path Val followed by Path Sep OR Path Sep followed by Path Val) 0-many times\n\t\t\t// Group is non capturing because we don't need to capture at all (?:...)\n\t\t\t// Overall we use non-greedy matching because it could be that we match too much\n\t\t\treturn `(?:${PATH_REGEX}|${NO_PATH_REGEX}+${PATH_REGEX}|${PATH_REGEX}${NO_PATH_REGEX}+)*?`;\n\t}\n}\n\nexport function splitGlobAware(pattern: string, splitChar: string): string[] {\n\tif (!pattern) {\n\t\treturn [];\n\t}\n\n\tconst segments: string[] = [];\n\n\tlet inBraces = false;\n\tlet inBrackets = false;\n\n\tlet curVal = '';\n\tfor (const char of pattern) {\n\t\tswitch (char) {\n\t\t\tcase splitChar:\n\t\t\t\tif (!inBraces && !inBrackets) {\n\t\t\t\t\tsegments.push(curVal);\n\t\t\t\t\tcurVal = '';\n\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase '{':\n\t\t\t\tinBraces = true;\n\t\t\t\tbreak;\n\t\t\tcase '}':\n\t\t\t\tinBraces = false;\n\t\t\t\tbreak;\n\t\t\tcase '[':\n\t\t\t\tinBrackets = true;\n\t\t\t\tbreak;\n\t\t\tcase ']':\n\t\t\t\tinBrackets = false;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tcurVal += char;\n\t}\n\n\t// Tail\n\tif (curVal) {\n\t\tsegments.push(curVal);\n\t}\n\n\treturn segments;\n}\n\nfunction parseRegExp(pattern: string): string {\n\tif (!pattern) {\n\t\treturn '';\n\t}\n\n\tlet regEx = '';\n\n\t// Split up into segments for each slash found\n\tconst segments = splitGlobAware(pattern, GLOB_SPLIT);\n\n\t// Special case where we only have globstars\n\tif (segments.every(s => s === GLOBSTAR)) {\n\t\tregEx = '.*';\n\t}\n\n\t// Build regex over segments\n\telse {\n\t\tlet previousSegmentWasGlobStar = false;\n\t\tsegments.forEach((segment, index) => {\n\n\t\t\t// Globstar is special\n\t\t\tif (segment === GLOBSTAR) {\n\n\t\t\t\t// if we have more than one globstar after another, just ignore it\n\t\t\t\tif (!previousSegmentWasGlobStar) {\n\t\t\t\t\tregEx += starsToRegExp(2);\n\t\t\t\t\tpreviousSegmentWasGlobStar = true;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// States\n\t\t\tlet inBraces = false;\n\t\t\tlet braceVal = '';\n\n\t\t\tlet inBrackets = false;\n\t\t\tlet bracketVal = '';\n\n\t\t\tfor (const char of segment) {\n\t\t\t\t// Support brace expansion\n\t\t\t\tif (char !== '}' && inBraces) {\n\t\t\t\t\tbraceVal += char;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Support brackets\n\t\t\t\tif (inBrackets && (char !== ']' || !bracketVal) /* ] is literally only allowed as first character in brackets to match it */) {\n\t\t\t\t\tlet res: string;\n\n\t\t\t\t\t// range operator\n\t\t\t\t\tif (char === '-') {\n\t\t\t\t\t\tres = char;\n\t\t\t\t\t}\n\n\t\t\t\t\t// negation operator (only valid on first index in bracket)\n\t\t\t\t\telse if ((char === '^' || char === '!') && !bracketVal) {\n\t\t\t\t\t\tres = '^';\n\t\t\t\t\t}\n\n\t\t\t\t\t// glob split matching is not allowed within character ranges\n\t\t\t\t\t// see http://man7.org/linux/man-pages/man7/glob.7.html\n\t\t\t\t\telse if (char === GLOB_SPLIT) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t}\n\n\t\t\t\t\t// anything else gets escaped\n\t\t\t\t\telse {\n\t\t\t\t\t\tres = strings.escapeRegExpCharacters(char);\n\t\t\t\t\t}\n\n\t\t\t\t\tbracketVal += res;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tswitch (char) {\n\t\t\t\t\tcase '{':\n\t\t\t\t\t\tinBraces = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '[':\n\t\t\t\t\t\tinBrackets = true;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '}':\n\t\t\t\t\t\tconst choices = splitGlobAware(braceVal, ',');\n\n\t\t\t\t\t\t// Converts {foo,bar} => [foo|bar]\n\t\t\t\t\t\tconst braceRegExp = `(?:${choices.map(c => parseRegExp(c)).join('|')})`;\n\n\t\t\t\t\t\tregEx += braceRegExp;\n\n\t\t\t\t\t\tinBraces = false;\n\t\t\t\t\t\tbraceVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ']':\n\t\t\t\t\t\tregEx += ('[' + bracketVal + ']');\n\n\t\t\t\t\t\tinBrackets = false;\n\t\t\t\t\t\tbracketVal = '';\n\n\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\tcase '?':\n\t\t\t\t\t\tregEx += NO_PATH_REGEX; // 1 ? matches any single character except path separator (/ and \\)\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tcase '*':\n\t\t\t\t\t\tregEx += starsToRegExp(1);\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tregEx += strings.escapeRegExpCharacters(char);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Tail: Add the slash we had split on if there is more to come and the remaining pattern is not a globstar\n\t\t\t// For example if pattern: some/**/*.js we want the \"/\" after some to be included in the RegEx to prevent\n\t\t\t// a folder called \"something\" to match as well.\n\t\t\t// However, if pattern: some/**, we tolerate that we also match on \"something\" because our globstar behaviour\n\t\t\t// is to match 0-N segments.\n\t\t\tif (index < segments.length - 1 && (segments[index + 1] !== GLOBSTAR || index + 2 < segments.length)) {\n\t\t\t\tregEx += PATH_REGEX;\n\t\t\t}\n\n\t\t\t// reset state\n\t\t\tpreviousSegmentWasGlobStar = false;\n\t\t});\n\t}\n\n\treturn regEx;\n}\n\n// regexes to check for trivial glob patterns that just check for String#endsWith\nconst T1 = /^\\*\\*\\/\\*\\.[\\w\\.-]+$/; \t\t\t\t\t\t   \t\t\t// **/*.something\nconst T2 = /^\\*\\*\\/([\\w\\.-]+)\\/?$/; \t\t\t\t\t\t\t   \t\t\t// **/something\nconst T3 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?)*}$/; \t// {**/*.something,**/*.else} or {**/package.json,**/project.json}\nconst T3_2 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?)*}$/; \t// Like T3, with optional trailing /**\nconst T4 = /^\\*\\*((\\/[\\w\\.-]+)+)\\/?$/; \t\t\t\t\t\t   \t\t\t// **/something/else\nconst T5 = /^([\\w\\.-]+(\\/[\\w\\.-]+)*)\\/?$/; \t\t\t\t\t\t   \t\t// something/else\n\nexport type ParsedPattern = (path: string, basename?: string) => boolean;\n\n// The ParsedExpression returns a Promise iff hasSibling returns a Promise.\nexport type ParsedExpression = (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => string | null | Promise<string | null> /* the matching pattern */;\n\nexport interface IGlobOptions {\n\t/**\n\t * Simplify patterns for use as exclusion filters during tree traversal to skip entire subtrees. Cannot be used outside of a tree traversal.\n\t */\n\ttrimForExclusions?: boolean;\n}\n\ninterface ParsedStringPattern {\n\t(path: string, basename?: string): string | null | Promise<string | null> /* the matching pattern */;\n\tbasenames?: string[];\n\tpatterns?: string[];\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\ninterface ParsedExpressionPattern {\n\t(path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>): string | null | Promise<string | null> /* the matching pattern */;\n\trequiresSiblings?: boolean;\n\tallBasenames?: string[];\n\tallPaths?: string[];\n}\n\nconst CACHE = new LRUCache<string, ParsedStringPattern>(10000); // bounded to 10000 elements\n\nconst FALSE = function () {\n\treturn false;\n};\n\nconst NULL = function (): string | null {\n\treturn null;\n};\n\nfunction parsePattern(arg1: string | IRelativePattern, options: IGlobOptions): ParsedStringPattern {\n\tif (!arg1) {\n\t\treturn NULL;\n\t}\n\n\t// Handle IRelativePattern\n\tlet pattern: string;\n\tif (typeof arg1 !== 'string') {\n\t\tpattern = arg1.pattern;\n\t} else {\n\t\tpattern = arg1;\n\t}\n\n\t// Whitespace trimming\n\tpattern = pattern.trim();\n\n\t// Check cache\n\tconst patternKey = `${pattern}_${!!options.trimForExclusions}`;\n\tlet parsedPattern = CACHE.get(patternKey);\n\tif (parsedPattern) {\n\t\treturn wrapRelativePattern(parsedPattern, arg1);\n\t}\n\n\t// Check for Trivials\n\tlet match: RegExpExecArray | null;\n\tif (T1.test(pattern)) { // common pattern: **/*.txt just need endsWith check\n\t\tconst base = pattern.substr(4); // '**/*'.length === 4\n\t\tparsedPattern = function (path, basename) {\n\t\t\treturn typeof path === 'string' && path.endsWith(base) ? pattern : null;\n\t\t};\n\t} else if (match = T2.exec(trimForExclusions(pattern, options))) { // common pattern: **/some.txt just need basename check\n\t\tparsedPattern = trivia2(match[1], pattern);\n\t} else if ((options.trimForExclusions ? T3_2 : T3).test(pattern)) { // repetition of common patterns (see above) {**/*.txt,**/*.png}\n\t\tparsedPattern = trivia3(pattern, options);\n\t} else if (match = T4.exec(trimForExclusions(pattern, options))) { // common pattern: **/something/else just need endsWith check\n\t\tparsedPattern = trivia4and5(match[1].substr(1), pattern, true);\n\t} else if (match = T5.exec(trimForExclusions(pattern, options))) { // common pattern: something/else just need equals check\n\t\tparsedPattern = trivia4and5(match[1], pattern, false);\n\t}\n\n\t// Otherwise convert to pattern\n\telse {\n\t\tparsedPattern = toRegExp(pattern);\n\t}\n\n\t// Cache\n\tCACHE.set(patternKey, parsedPattern);\n\n\treturn wrapRelativePattern(parsedPattern, arg1);\n}\n\nfunction wrapRelativePattern(parsedPattern: ParsedStringPattern, arg2: string | IRelativePattern): ParsedStringPattern {\n\tif (typeof arg2 === 'string') {\n\t\treturn parsedPattern;\n\t}\n\n\treturn function (path, basename) {\n\t\tif (!extpath.isEqualOrParent(path, arg2.base)) {\n\t\t\treturn null;\n\t\t}\n\t\treturn parsedPattern(paths.relative(arg2.base, path), basename);\n\t};\n}\n\nfunction trimForExclusions(pattern: string, options: IGlobOptions): string {\n\treturn options.trimForExclusions && pattern.endsWith('/**') ? pattern.substr(0, pattern.length - 2) : pattern; // dropping **, tailing / is dropped later\n}\n\n// common pattern: **/some.txt just need basename check\nfunction trivia2(base: string, originalPattern: string): ParsedStringPattern {\n\tconst slashBase = `/${base}`;\n\tconst backslashBase = `\\\\${base}`;\n\tconst parsedPattern: ParsedStringPattern = function (path, basename) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\t\tif (basename) {\n\t\t\treturn basename === base ? originalPattern : null;\n\t\t}\n\t\treturn path === base || path.endsWith(slashBase) || path.endsWith(backslashBase) ? originalPattern : null;\n\t};\n\tconst basenames = [base];\n\tparsedPattern.basenames = basenames;\n\tparsedPattern.patterns = [originalPattern];\n\tparsedPattern.allBasenames = basenames;\n\treturn parsedPattern;\n}\n\n// repetition of common patterns (see above) {**/*.txt,**/*.png}\nfunction trivia3(pattern: string, options: IGlobOptions): ParsedStringPattern {\n\tconst parsedPatterns = aggregateBasenameMatches(pattern.slice(1, -1).split(',')\n\t\t.map(pattern => parsePattern(pattern, options))\n\t\t.filter(pattern => pattern !== NULL), pattern);\n\tconst n = parsedPatterns.length;\n\tif (!n) {\n\t\treturn NULL;\n\t}\n\tif (n === 1) {\n\t\treturn <ParsedStringPattern>parsedPatterns[0];\n\t}\n\tconst parsedPattern: ParsedStringPattern = function (path: string, basename?: string) {\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\tif ((<ParsedStringPattern>parsedPatterns[i])(path, basename)) {\n\t\t\t\treturn pattern;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\tconst withBasenames = parsedPatterns.find(pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\tif (withBasenames) {\n\t\tparsedPattern.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t}\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\tif (allPaths.length) {\n\t\tparsedPattern.allPaths = allPaths;\n\t}\n\treturn parsedPattern;\n}\n\n// common patterns: **/something/else just need endsWith check, something/else just needs and equals check\nfunction trivia4and5(targetPath: string, pattern: string, matchPathEnds: boolean): ParsedStringPattern {\n\tconst usingPosixSep = paths.sep === paths.posix.sep;\n\tconst nativePath = usingPosixSep ? targetPath : targetPath.replace(ALL_FORWARD_SLASHES, paths.sep);\n\tconst nativePathEnd = paths.sep + nativePath;\n\tconst targetPathEnd = paths.posix.sep + targetPath;\n\n\tconst parsedPattern: ParsedStringPattern = matchPathEnds ? function (testPath, basename) {\n\t\treturn typeof testPath === 'string' &&\n\t\t\t((testPath === nativePath || testPath.endsWith(nativePathEnd))\n\t\t\t\t|| !usingPosixSep && (testPath === targetPath || testPath.endsWith(targetPathEnd)))\n\t\t\t? pattern : null;\n\t} : function (testPath, basename) {\n\t\treturn typeof testPath === 'string' &&\n\t\t\t(testPath === nativePath\n\t\t\t\t|| (!usingPosixSep && testPath === targetPath))\n\t\t\t? pattern : null;\n\t};\n\tparsedPattern.allPaths = [(matchPathEnds ? '*/' : './') + targetPath];\n\treturn parsedPattern;\n}\n\nfunction toRegExp(pattern: string): ParsedStringPattern {\n\ttry {\n\t\tconst regExp = new RegExp(`^${parseRegExp(pattern)}$`);\n\t\treturn function (path: string) {\n\t\t\tregExp.lastIndex = 0; // reset RegExp to its initial state to reuse it!\n\t\t\treturn typeof path === 'string' && regExp.test(path) ? pattern : null;\n\t\t};\n\t} catch (error) {\n\t\treturn NULL;\n\t}\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function match(pattern: string | IRelativePattern, path: string): boolean;\nexport function match(expression: IExpression, path: string, hasSibling?: (name: string) => boolean): string /* the matching pattern */;\nexport function match(arg1: string | IExpression | IRelativePattern, path: string, hasSibling?: (name: string) => boolean): boolean | string | null | Promise<string | null> {\n\tif (!arg1 || typeof path !== 'string') {\n\t\treturn false;\n\t}\n\n\treturn parse(<IExpression>arg1)(path, undefined, hasSibling);\n}\n\n/**\n * Simplified glob matching. Supports a subset of glob patterns:\n * - * matches anything inside a path segment\n * - ? matches 1 character inside a path segment\n * - ** matches anything including an empty path segment\n * - simple brace expansion ({js,ts} => js or ts)\n * - character ranges (using [...])\n */\nexport function parse(pattern: string | IRelativePattern, options?: IGlobOptions): ParsedPattern;\nexport function parse(expression: IExpression, options?: IGlobOptions): ParsedExpression;\nexport function parse(arg1: string | IExpression | IRelativePattern, options: IGlobOptions = {}): ParsedPattern | ParsedExpression {\n\tif (!arg1) {\n\t\treturn FALSE;\n\t}\n\n\t// Glob with String\n\tif (typeof arg1 === 'string' || isRelativePattern(arg1)) {\n\t\tconst parsedPattern = parsePattern(arg1, options);\n\t\tif (parsedPattern === NULL) {\n\t\t\treturn FALSE;\n\t\t}\n\t\tconst resultPattern: ParsedPattern & { allBasenames?: string[]; allPaths?: string[]; } = function (path: string, basename?: string) {\n\t\t\treturn !!parsedPattern(path, basename);\n\t\t};\n\t\tif (parsedPattern.allBasenames) {\n\t\t\tresultPattern.allBasenames = parsedPattern.allBasenames;\n\t\t}\n\t\tif (parsedPattern.allPaths) {\n\t\t\tresultPattern.allPaths = parsedPattern.allPaths;\n\t\t}\n\t\treturn resultPattern;\n\t}\n\n\t// Glob with Expression\n\treturn parsedExpression(<IExpression>arg1, options);\n}\n\nexport function hasSiblingPromiseFn(siblingsFn?: () => Promise<string[]>) {\n\tif (!siblingsFn) {\n\t\treturn undefined;\n\t}\n\n\tlet siblings: Promise<Record<string, true>>;\n\treturn (name: string) => {\n\t\tif (!siblings) {\n\t\t\tsiblings = (siblingsFn() || Promise.resolve([]))\n\t\t\t\t.then(list => list ? listToMap(list) : {});\n\t\t}\n\t\treturn siblings.then(map => !!map[name]);\n\t};\n}\n\nexport function hasSiblingFn(siblingsFn?: () => string[]) {\n\tif (!siblingsFn) {\n\t\treturn undefined;\n\t}\n\n\tlet siblings: Record<string, true>;\n\treturn (name: string) => {\n\t\tif (!siblings) {\n\t\t\tconst list = siblingsFn();\n\t\t\tsiblings = list ? listToMap(list) : {};\n\t\t}\n\t\treturn !!siblings[name];\n\t};\n}\n\nfunction listToMap(list: string[]) {\n\tconst map: Record<string, true> = {};\n\tfor (const key of list) {\n\t\tmap[key] = true;\n\t}\n\treturn map;\n}\n\nexport function isRelativePattern(obj: unknown): obj is IRelativePattern {\n\tconst rp = obj as IRelativePattern;\n\n\treturn rp && typeof rp.base === 'string' && typeof rp.pattern === 'string';\n}\n\nexport function getBasenameTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allBasenames || [];\n}\n\nexport function getPathTerms(patternOrExpression: ParsedPattern | ParsedExpression): string[] {\n\treturn (<ParsedStringPattern>patternOrExpression).allPaths || [];\n}\n\nfunction parsedExpression(expression: IExpression, options: IGlobOptions): ParsedExpression {\n\tconst parsedPatterns = aggregateBasenameMatches(Object.getOwnPropertyNames(expression)\n\t\t.map(pattern => parseExpressionPattern(pattern, expression[pattern], options))\n\t\t.filter(pattern => pattern !== NULL));\n\n\tconst n = parsedPatterns.length;\n\tif (!n) {\n\t\treturn NULL;\n\t}\n\n\tif (!parsedPatterns.some(parsedPattern => !!(<ParsedExpressionPattern>parsedPattern).requiresSiblings)) {\n\t\tif (n === 1) {\n\t\t\treturn <ParsedStringPattern>parsedPatterns[0];\n\t\t}\n\n\t\tconst resultExpression: ParsedStringPattern = function (path: string, basename?: string) {\n\t\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t\t// Pattern matches path\n\t\t\t\tconst result = (<ParsedStringPattern>parsedPatterns[i])(path, basename);\n\t\t\t\tif (result) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t};\n\n\t\tconst withBasenames = parsedPatterns.find(pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\t\tif (withBasenames) {\n\t\t\tresultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t\t}\n\n\t\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\t\tif (allPaths.length) {\n\t\t\tresultExpression.allPaths = allPaths;\n\t\t}\n\n\t\treturn resultExpression;\n\t}\n\n\tconst resultExpression: ParsedStringPattern = function (path: string, basename?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) {\n\t\tlet name: string | undefined = undefined;\n\n\t\tfor (let i = 0, n = parsedPatterns.length; i < n; i++) {\n\t\t\t// Pattern matches path\n\t\t\tconst parsedPattern = (<ParsedExpressionPattern>parsedPatterns[i]);\n\t\t\tif (parsedPattern.requiresSiblings && hasSibling) {\n\t\t\t\tif (!basename) {\n\t\t\t\t\tbasename = paths.basename(path);\n\t\t\t\t}\n\t\t\t\tif (!name) {\n\t\t\t\t\tname = basename.substr(0, basename.length - paths.extname(path).length);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst result = parsedPattern(path, basename, name, hasSibling);\n\t\t\tif (result) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t};\n\n\tconst withBasenames = parsedPatterns.find(pattern => !!(<ParsedStringPattern>pattern).allBasenames);\n\tif (withBasenames) {\n\t\tresultExpression.allBasenames = (<ParsedStringPattern>withBasenames).allBasenames;\n\t}\n\n\tconst allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, <string[]>[]);\n\tif (allPaths.length) {\n\t\tresultExpression.allPaths = allPaths;\n\t}\n\n\treturn resultExpression;\n}\n\nfunction parseExpressionPattern(pattern: string, value: boolean | SiblingClause, options: IGlobOptions): (ParsedStringPattern | ParsedExpressionPattern) {\n\tif (value === false) {\n\t\treturn NULL; // pattern is disabled\n\t}\n\n\tconst parsedPattern = parsePattern(pattern, options);\n\tif (parsedPattern === NULL) {\n\t\treturn NULL;\n\t}\n\n\t// Expression Pattern is <boolean>\n\tif (typeof value === 'boolean') {\n\t\treturn parsedPattern;\n\t}\n\n\t// Expression Pattern is <SiblingClause>\n\tif (value) {\n\t\tconst when = (<SiblingClause>value).when;\n\t\tif (typeof when === 'string') {\n\t\t\tconst result: ParsedExpressionPattern = (path: string, basename?: string, name?: string, hasSibling?: (name: string) => boolean | Promise<boolean>) => {\n\t\t\t\tif (!hasSibling || !parsedPattern(path, basename)) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst clausePattern = when.replace('$(basename)', name!);\n\t\t\t\tconst matched = hasSibling(clausePattern);\n\t\t\t\treturn isThenable(matched) ?\n\t\t\t\t\tmatched.then(m => m ? pattern : null) :\n\t\t\t\t\tmatched ? pattern : null;\n\t\t\t};\n\t\t\tresult.requiresSiblings = true;\n\t\t\treturn result;\n\t\t}\n\t}\n\n\t// Expression is Anything\n\treturn parsedPattern;\n}\n\nfunction aggregateBasenameMatches(parsedPatterns: Array<ParsedStringPattern | ParsedExpressionPattern>, result?: string): Array<ParsedStringPattern | ParsedExpressionPattern> {\n\tconst basenamePatterns = parsedPatterns.filter(parsedPattern => !!(<ParsedStringPattern>parsedPattern).basenames);\n\tif (basenamePatterns.length < 2) {\n\t\treturn parsedPatterns;\n\t}\n\n\tconst basenames = basenamePatterns.reduce<string[]>((all, current) => {\n\t\tconst basenames = (<ParsedStringPattern>current).basenames;\n\t\treturn basenames ? all.concat(basenames) : all;\n\t}, <string[]>[]);\n\tlet patterns: string[];\n\tif (result) {\n\t\tpatterns = [];\n\t\tfor (let i = 0, n = basenames.length; i < n; i++) {\n\t\t\tpatterns.push(result);\n\t\t}\n\t} else {\n\t\tpatterns = basenamePatterns.reduce((all, current) => {\n\t\t\tconst patterns = (<ParsedStringPattern>current).patterns;\n\t\t\treturn patterns ? all.concat(patterns) : all;\n\t\t}, <string[]>[]);\n\t}\n\tconst aggregate: ParsedStringPattern = function (path, basename) {\n\t\tif (typeof path !== 'string') {\n\t\t\treturn null;\n\t\t}\n\t\tif (!basename) {\n\t\t\tlet i: number;\n\t\t\tfor (i = path.length; i > 0; i--) {\n\t\t\t\tconst ch = path.charCodeAt(i - 1);\n\t\t\t\tif (ch === CharCode.Slash || ch === CharCode.Backslash) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbasename = path.substr(i);\n\t\t}\n\t\tconst index = basenames.indexOf(basename);\n\t\treturn index !== -1 ? patterns[index] : null;\n\t};\n\taggregate.basenames = basenames;\n\taggregate.patterns = patterns;\n\taggregate.allBasenames = basenames;\n\n\tconst aggregatedPatterns = parsedPatterns.filter(parsedPattern => !(<ParsedStringPattern>parsedPattern).basenames);\n\taggregatedPatterns.push(aggregate);\n\treturn aggregatedPatterns;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ParsedPattern, parse } from 'vs/base/common/glob';\nimport { Schemas } from 'vs/base/common/network';\nimport { basename, extname, posix } from 'vs/base/common/path';\nimport { DataUri } from 'vs/base/common/resources';\nimport { startsWithUTF8BOM } from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\n\nexport namespace Mimes {\n\texport const text = 'text/plain';\n\texport const binary = 'application/octet-stream';\n\texport const unknown = 'application/unknown';\n\texport const markdown = 'text/markdown';\n\texport const latex = 'text/latex';\n}\n\nexport interface ITextMimeAssociation {\n\treadonly id: string;\n\treadonly mime: string;\n\treadonly filename?: string;\n\treadonly extension?: string;\n\treadonly filepattern?: string;\n\treadonly firstline?: RegExp;\n\treadonly userConfigured?: boolean;\n}\n\ninterface ITextMimeAssociationItem extends ITextMimeAssociation {\n\treadonly filenameLowercase?: string;\n\treadonly extensionLowercase?: string;\n\treadonly filepatternLowercase?: ParsedPattern;\n\treadonly filepatternOnPath?: boolean;\n}\n\nlet registeredAssociations: ITextMimeAssociationItem[] = [];\nlet nonUserRegisteredAssociations: ITextMimeAssociationItem[] = [];\nlet userRegisteredAssociations: ITextMimeAssociationItem[] = [];\n\n/**\n * Associate a text mime to the registry.\n */\nexport function registerTextMime(association: ITextMimeAssociation, warnOnOverwrite = false): void {\n\n\t// Register\n\tconst associationItem = toTextMimeAssociationItem(association);\n\tregisteredAssociations.push(associationItem);\n\tif (!associationItem.userConfigured) {\n\t\tnonUserRegisteredAssociations.push(associationItem);\n\t} else {\n\t\tuserRegisteredAssociations.push(associationItem);\n\t}\n\n\t// Check for conflicts unless this is a user configured association\n\tif (warnOnOverwrite && !associationItem.userConfigured) {\n\t\tregisteredAssociations.forEach(a => {\n\t\t\tif (a.mime === associationItem.mime || a.userConfigured) {\n\t\t\t\treturn; // same mime or userConfigured is ok\n\t\t\t}\n\n\t\t\tif (associationItem.extension && a.extension === associationItem.extension) {\n\t\t\t\tconsole.warn(`Overwriting extension <<${associationItem.extension}>> to now point to mime <<${associationItem.mime}>>`);\n\t\t\t}\n\n\t\t\tif (associationItem.filename && a.filename === associationItem.filename) {\n\t\t\t\tconsole.warn(`Overwriting filename <<${associationItem.filename}>> to now point to mime <<${associationItem.mime}>>`);\n\t\t\t}\n\n\t\t\tif (associationItem.filepattern && a.filepattern === associationItem.filepattern) {\n\t\t\t\tconsole.warn(`Overwriting filepattern <<${associationItem.filepattern}>> to now point to mime <<${associationItem.mime}>>`);\n\t\t\t}\n\n\t\t\tif (associationItem.firstline && a.firstline === associationItem.firstline) {\n\t\t\t\tconsole.warn(`Overwriting firstline <<${associationItem.firstline}>> to now point to mime <<${associationItem.mime}>>`);\n\t\t\t}\n\t\t});\n\t}\n}\n\nfunction toTextMimeAssociationItem(association: ITextMimeAssociation): ITextMimeAssociationItem {\n\treturn {\n\t\tid: association.id,\n\t\tmime: association.mime,\n\t\tfilename: association.filename,\n\t\textension: association.extension,\n\t\tfilepattern: association.filepattern,\n\t\tfirstline: association.firstline,\n\t\tuserConfigured: association.userConfigured,\n\t\tfilenameLowercase: association.filename ? association.filename.toLowerCase() : undefined,\n\t\textensionLowercase: association.extension ? association.extension.toLowerCase() : undefined,\n\t\tfilepatternLowercase: association.filepattern ? parse(association.filepattern.toLowerCase()) : undefined,\n\t\tfilepatternOnPath: association.filepattern ? association.filepattern.indexOf(posix.sep) >= 0 : false\n\t};\n}\n\n/**\n * Clear text mimes from the registry.\n */\nexport function clearTextMimes(onlyUserConfigured?: boolean): void {\n\tif (!onlyUserConfigured) {\n\t\tregisteredAssociations = [];\n\t\tnonUserRegisteredAssociations = [];\n\t\tuserRegisteredAssociations = [];\n\t} else {\n\t\tregisteredAssociations = registeredAssociations.filter(a => !a.userConfigured);\n\t\tuserRegisteredAssociations = [];\n\t}\n}\n\n/**\n * Given a file, return the best matching mime type for it\n */\nexport function guessMimeTypes(resource: URI | null, firstLine?: string): string[] {\n\tlet path: string | undefined;\n\tif (resource) {\n\t\tswitch (resource.scheme) {\n\t\t\tcase Schemas.file:\n\t\t\t\tpath = resource.fsPath;\n\t\t\t\tbreak;\n\t\t\tcase Schemas.data:\n\t\t\t\tconst metadata = DataUri.parseMetaData(resource);\n\t\t\t\tpath = metadata.get(DataUri.META_DATA_LABEL);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tpath = resource.path;\n\t\t}\n\t}\n\n\tif (!path) {\n\t\treturn [Mimes.unknown];\n\t}\n\n\tpath = path.toLowerCase();\n\n\tconst filename = basename(path);\n\n\t// 1.) User configured mappings have highest priority\n\tconst configuredMime = guessMimeTypeByPath(path, filename, userRegisteredAssociations);\n\tif (configuredMime) {\n\t\treturn [configuredMime, Mimes.text];\n\t}\n\n\t// 2.) Registered mappings have middle priority\n\tconst registeredMime = guessMimeTypeByPath(path, filename, nonUserRegisteredAssociations);\n\tif (registeredMime) {\n\t\treturn [registeredMime, Mimes.text];\n\t}\n\n\t// 3.) Firstline has lowest priority\n\tif (firstLine) {\n\t\tconst firstlineMime = guessMimeTypeByFirstline(firstLine);\n\t\tif (firstlineMime) {\n\t\t\treturn [firstlineMime, Mimes.text];\n\t\t}\n\t}\n\n\treturn [Mimes.unknown];\n}\n\nfunction guessMimeTypeByPath(path: string, filename: string, associations: ITextMimeAssociationItem[]): string | null {\n\tlet filenameMatch: ITextMimeAssociationItem | null = null;\n\tlet patternMatch: ITextMimeAssociationItem | null = null;\n\tlet extensionMatch: ITextMimeAssociationItem | null = null;\n\n\t// We want to prioritize associations based on the order they are registered so that the last registered\n\t// association wins over all other. This is for https://github.com/microsoft/vscode/issues/20074\n\tfor (let i = associations.length - 1; i >= 0; i--) {\n\t\tconst association = associations[i];\n\n\t\t// First exact name match\n\t\tif (filename === association.filenameLowercase) {\n\t\t\tfilenameMatch = association;\n\t\t\tbreak; // take it!\n\t\t}\n\n\t\t// Longest pattern match\n\t\tif (association.filepattern) {\n\t\t\tif (!patternMatch || association.filepattern.length > patternMatch.filepattern!.length) {\n\t\t\t\tconst target = association.filepatternOnPath ? path : filename; // match on full path if pattern contains path separator\n\t\t\t\tif (association.filepatternLowercase?.(target)) {\n\t\t\t\t\tpatternMatch = association;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Longest extension match\n\t\tif (association.extension) {\n\t\t\tif (!extensionMatch || association.extension.length > extensionMatch.extension!.length) {\n\t\t\t\tif (filename.endsWith(association.extensionLowercase!)) {\n\t\t\t\t\textensionMatch = association;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 1.) Exact name match has second highest priority\n\tif (filenameMatch) {\n\t\treturn filenameMatch.mime;\n\t}\n\n\t// 2.) Match on pattern\n\tif (patternMatch) {\n\t\treturn patternMatch.mime;\n\t}\n\n\t// 3.) Match on extension comes next\n\tif (extensionMatch) {\n\t\treturn extensionMatch.mime;\n\t}\n\n\treturn null;\n}\n\nfunction guessMimeTypeByFirstline(firstLine: string): string | null {\n\tif (startsWithUTF8BOM(firstLine)) {\n\t\tfirstLine = firstLine.substr(1);\n\t}\n\n\tif (firstLine.length > 0) {\n\n\t\t// We want to prioritize associations based on the order they are registered so that the last registered\n\t\t// association wins over all other. This is for https://github.com/microsoft/vscode/issues/20074\n\t\tfor (let i = registeredAssociations.length - 1; i >= 0; i--) {\n\t\t\tconst association = registeredAssociations[i];\n\t\t\tif (!association.firstline) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst matches = firstLine.match(association.firstline);\n\t\t\tif (matches && matches.length > 0) {\n\t\t\t\treturn association.mime;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport function isUnspecific(mime: string[] | string): boolean {\n\tif (!mime) {\n\t\treturn true;\n\t}\n\n\tif (typeof mime === 'string') {\n\t\treturn mime === Mimes.binary || mime === Mimes.text || mime === Mimes.unknown;\n\t}\n\n\treturn mime.length === 1 && isUnspecific(mime[0]);\n}\n\ninterface MapExtToMediaMimes {\n\t[index: string]: string;\n}\n\nconst mapExtToTextMimes: MapExtToMediaMimes = {\n\t'.css': 'text/css',\n\t'.csv': 'text/csv',\n\t'.htm': 'text/html',\n\t'.html': 'text/html',\n\t'.ics': 'text/calendar',\n\t'.js': 'text/javascript',\n\t'.mjs': 'text/javascript',\n\t'.txt': 'text/plain',\n\t'.xml': 'text/xml'\n};\n\n// Known media mimes that we can handle\nconst mapExtToMediaMimes: MapExtToMediaMimes = {\n\t'.aac': 'audio/x-aac',\n\t'.avi': 'video/x-msvideo',\n\t'.bmp': 'image/bmp',\n\t'.flv': 'video/x-flv',\n\t'.gif': 'image/gif',\n\t'.ico': 'image/x-icon',\n\t'.jpe': 'image/jpg',\n\t'.jpeg': 'image/jpg',\n\t'.jpg': 'image/jpg',\n\t'.m1v': 'video/mpeg',\n\t'.m2a': 'audio/mpeg',\n\t'.m2v': 'video/mpeg',\n\t'.m3a': 'audio/mpeg',\n\t'.mid': 'audio/midi',\n\t'.midi': 'audio/midi',\n\t'.mk3d': 'video/x-matroska',\n\t'.mks': 'video/x-matroska',\n\t'.mkv': 'video/x-matroska',\n\t'.mov': 'video/quicktime',\n\t'.movie': 'video/x-sgi-movie',\n\t'.mp2': 'audio/mpeg',\n\t'.mp2a': 'audio/mpeg',\n\t'.mp3': 'audio/mpeg',\n\t'.mp4': 'video/mp4',\n\t'.mp4a': 'audio/mp4',\n\t'.mp4v': 'video/mp4',\n\t'.mpe': 'video/mpeg',\n\t'.mpeg': 'video/mpeg',\n\t'.mpg': 'video/mpeg',\n\t'.mpg4': 'video/mp4',\n\t'.mpga': 'audio/mpeg',\n\t'.oga': 'audio/ogg',\n\t'.ogg': 'audio/ogg',\n\t'.ogv': 'video/ogg',\n\t'.png': 'image/png',\n\t'.psd': 'image/vnd.adobe.photoshop',\n\t'.qt': 'video/quicktime',\n\t'.spx': 'audio/ogg',\n\t'.svg': 'image/svg+xml',\n\t'.tga': 'image/x-tga',\n\t'.tif': 'image/tiff',\n\t'.tiff': 'image/tiff',\n\t'.wav': 'audio/x-wav',\n\t'.webm': 'video/webm',\n\t'.webp': 'image/webp',\n\t'.wma': 'audio/x-ms-wma',\n\t'.wmv': 'video/x-ms-wmv',\n\t'.woff': 'application/font-woff',\n};\n\nexport function getMediaOrTextMime(path: string): string | undefined {\n\tconst ext = extname(path);\n\tconst textMime = mapExtToTextMimes[ext.toLowerCase()];\n\tif (textMime !== undefined) {\n\t\treturn textMime;\n\t} else {\n\t\treturn getMediaMime(path);\n\t}\n}\n\nexport function getMediaMime(path: string): string | undefined {\n\tconst ext = extname(path);\n\treturn mapExtToMediaMimes[ext.toLowerCase()];\n}\n\nexport function getExtensionForMimeType(mimeType: string): string | undefined {\n\tfor (const extension in mapExtToMediaMimes) {\n\t\tif (mapExtToMediaMimes[extension] === mimeType) {\n\t\t\treturn extension;\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nconst _simplePattern = /^(.+)\\/(.+?)(;.+)?$/;\n\nexport function normalizeMimeType(mimeType: string): string;\nexport function normalizeMimeType(mimeType: string, strict: true): string | undefined;\nexport function normalizeMimeType(mimeType: string, strict?: true): string | undefined {\n\n\tconst match = _simplePattern.exec(mimeType);\n\tif (!match) {\n\t\treturn strict\n\t\t\t? undefined\n\t\t\t: mimeType;\n\t}\n\t// https://datatracker.ietf.org/doc/html/rfc2045#section-5.1\n\t// media and subtype must ALWAYS be lowercase, parameter not\n\treturn `${match[1].toLowerCase()}/${match[2].toLowerCase()}${match[3] ?? ''}`;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { MarshalledId, MarshalledObject } from 'vs/base/common/marshalling';\nimport { URI, UriComponents } from 'vs/base/common/uri';\n\nexport interface IURITransformer {\n\ttransformIncoming(uri: UriComponents): UriComponents;\n\ttransformOutgoing(uri: UriComponents): UriComponents;\n\ttransformOutgoingURI(uri: URI): URI;\n\ttransformOutgoingScheme(scheme: string): string;\n}\n\nexport interface UriParts {\n\tscheme: string;\n\tauthority?: string;\n\tpath?: string;\n\tquery?: string;\n\tfragment?: string;\n}\n\nexport interface IRawURITransformer {\n\ttransformIncoming(uri: UriParts): UriParts;\n\ttransformOutgoing(uri: UriParts): UriParts;\n\ttransformOutgoingScheme(scheme: string): string;\n}\n\nfunction toJSON(uri: URI): UriComponents {\n\treturn <UriComponents><any>uri.toJSON();\n}\n\nexport class URITransformer implements IURITransformer {\n\n\tprivate readonly _uriTransformer: IRawURITransformer;\n\n\tconstructor(uriTransformer: IRawURITransformer) {\n\t\tthis._uriTransformer = uriTransformer;\n\t}\n\n\tpublic transformIncoming(uri: UriComponents): UriComponents {\n\t\tconst result = this._uriTransformer.transformIncoming(uri);\n\t\treturn (result === uri ? uri : toJSON(URI.from(result)));\n\t}\n\n\tpublic transformOutgoing(uri: UriComponents): UriComponents {\n\t\tconst result = this._uriTransformer.transformOutgoing(uri);\n\t\treturn (result === uri ? uri : toJSON(URI.from(result)));\n\t}\n\n\tpublic transformOutgoingURI(uri: URI): URI {\n\t\tconst result = this._uriTransformer.transformOutgoing(uri);\n\t\treturn (result === uri ? uri : URI.from(result));\n\t}\n\n\tpublic transformOutgoingScheme(scheme: string): string {\n\t\treturn this._uriTransformer.transformOutgoingScheme(scheme);\n\t}\n}\n\nexport const DefaultURITransformer: IURITransformer = new class {\n\ttransformIncoming(uri: UriComponents) {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoing(uri: UriComponents): UriComponents {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoingURI(uri: URI): URI {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoingScheme(scheme: string): string {\n\t\treturn scheme;\n\t}\n};\n\nfunction _transformOutgoingURIs(obj: any, transformer: IURITransformer, depth: number): any {\n\n\tif (!obj || depth > 200) {\n\t\treturn null;\n\t}\n\n\tif (typeof obj === 'object') {\n\t\tif (obj instanceof URI) {\n\t\t\treturn transformer.transformOutgoing(obj);\n\t\t}\n\n\t\t// walk object (or array)\n\t\tfor (let key in obj) {\n\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst r = _transformOutgoingURIs(obj[key], transformer, depth + 1);\n\t\t\t\tif (r !== null) {\n\t\t\t\t\tobj[key] = r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport function transformOutgoingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformOutgoingURIs(obj, transformer, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}\n\n\nfunction _transformIncomingURIs(obj: any, transformer: IURITransformer, revive: boolean, depth: number): any {\n\n\tif (!obj || depth > 200) {\n\t\treturn null;\n\t}\n\n\tif (typeof obj === 'object') {\n\n\t\tif ((<MarshalledObject>obj).$mid === MarshalledId.Uri) {\n\t\t\treturn revive ? URI.revive(transformer.transformIncoming(obj)) : transformer.transformIncoming(obj);\n\t\t}\n\n\t\t// walk object (or array)\n\t\tfor (let key in obj) {\n\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst r = _transformIncomingURIs(obj[key], transformer, revive, depth + 1);\n\t\t\t\tif (r !== null) {\n\t\t\t\t\tobj[key] = r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport function transformIncomingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformIncomingURIs(obj, transformer, false, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}\n\nexport function transformAndReviveIncomingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformIncomingURIs(obj, transformer, true, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n\nexport function isUUID(value: string): boolean {\n\treturn _UUIDPattern.test(value);\n}\n\n// prep-work\nconst _data = new Uint8Array(16);\nconst _hex: string[] = [];\nfor (let i = 0; i < 256; i++) {\n\t_hex.push(i.toString(16).padStart(2, '0'));\n}\n\n// todo@jrieken - with node@15 crypto#getRandomBytes is available everywhere, https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues#browser_compatibility\nlet _fillRandomValues: (bucket: Uint8Array) => Uint8Array;\n\ndeclare const crypto: undefined | { getRandomValues(data: Uint8Array): Uint8Array };\n\nif (typeof crypto === 'object' && typeof crypto.getRandomValues === 'function') {\n\t// browser\n\t_fillRandomValues = crypto.getRandomValues.bind(crypto);\n\n} else {\n\t_fillRandomValues = function (bucket: Uint8Array): Uint8Array {\n\t\tfor (let i = 0; i < bucket.length; i++) {\n\t\t\tbucket[i] = Math.floor(Math.random() * 256);\n\t\t}\n\t\treturn bucket;\n\t};\n}\n\nexport function generateUuid(): string {\n\t// get data\n\t_fillRandomValues(_data);\n\n\t// set version bits\n\t_data[6] = (_data[6] & 0x0f) | 0x40;\n\t_data[8] = (_data[8] & 0x3f) | 0x80;\n\n\t// print as string\n\tlet i = 0;\n\tlet result = '';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as sd from 'string_decoder';\nimport { CharCode } from 'vs/base/common/charCode';\n\n/**\n * Convenient way to iterate over output line by line. This helper accommodates for the fact that\n * a buffer might not end with new lines all the way.\n *\n * To use:\n * - call the write method\n * - forEach() over the result to get the lines\n */\nexport class LineDecoder {\n\tprivate stringDecoder: sd.StringDecoder;\n\tprivate remaining: string | null;\n\n\tconstructor(encoding: BufferEncoding = 'utf8') {\n\t\tthis.stringDecoder = new sd.StringDecoder(encoding);\n\t\tthis.remaining = null;\n\t}\n\n\twrite(buffer: Buffer): string[] {\n\t\tconst result: string[] = [];\n\t\tconst value = this.remaining\n\t\t\t? this.remaining + this.stringDecoder.write(buffer)\n\t\t\t: this.stringDecoder.write(buffer);\n\n\t\tif (value.length < 1) {\n\t\t\treturn result;\n\t\t}\n\t\tlet start = 0;\n\t\tlet ch: number;\n\t\tlet idx = start;\n\t\twhile (idx < value.length) {\n\t\t\tch = value.charCodeAt(idx);\n\t\t\tif (ch === CharCode.CarriageReturn || ch === CharCode.LineFeed) {\n\t\t\t\tresult.push(value.substring(start, idx));\n\t\t\t\tidx++;\n\t\t\t\tif (idx < value.length) {\n\t\t\t\t\tconst lastChar = ch;\n\t\t\t\t\tch = value.charCodeAt(idx);\n\t\t\t\t\tif ((lastChar === CharCode.CarriageReturn && ch === CharCode.LineFeed) || (lastChar === CharCode.LineFeed && ch === CharCode.CarriageReturn)) {\n\t\t\t\t\t\tidx++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstart = idx;\n\t\t\t} else {\n\t\t\t\tidx++;\n\t\t\t}\n\t\t}\n\t\tthis.remaining = start < value.length ? value.substr(start) : null;\n\t\treturn result;\n\t}\n\n\tend(): string | null {\n\t\treturn this.remaining;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { networkInterfaces } from 'os';\n\nconst invalidMacAddresses = new Set([\n\t'00:00:00:00:00:00',\n\t'ff:ff:ff:ff:ff:ff',\n\t'ac:de:48:00:11:22'\n]);\n\nfunction validateMacAddress(candidate: string): boolean {\n\tconst tempCandidate = candidate.replace(/\\-/g, ':').toLowerCase();\n\treturn !invalidMacAddresses.has(tempCandidate);\n}\n\nexport function getMac(): string {\n\tconst ifaces = networkInterfaces();\n\tfor (let name in ifaces) {\n\t\tconst networkInterface = ifaces[name];\n\t\tif (networkInterface) {\n\t\t\tfor (const { mac } of networkInterface) {\n\t\t\t\tif (validateMacAddress(mac)) {\n\t\t\t\t\treturn mac;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow new Error('Unable to retrieve mac address (unexpected format)');\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { networkInterfaces } from 'os';\nimport * as errors from 'vs/base/common/errors';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport * as uuid from 'vs/base/common/uuid';\nimport { getMac } from 'vs/base/node/macAddress';\n\n// http://www.techrepublic.com/blog/data-center/mac-address-scorecard-for-common-virtual-machine-platforms/\n// VMware ESX 3, Server, Workstation, Player\t00-50-56, 00-0C-29, 00-05-69\n// Microsoft Hyper-V, Virtual Server, Virtual PC\t00-03-FF\n// Parallels Desktop, Workstation, Server, Virtuozzo\t00-1C-42\n// Virtual Iron 4\t00-0F-4B\n// Red Hat Xen\t00-16-3E\n// Oracle VM\t00-16-3E\n// XenSource\t00-16-3E\n// Novell Xen\t00-16-3E\n// Sun xVM VirtualBox\t08-00-27\nexport const virtualMachineHint: { value(): number } = new class {\n\n\tprivate _virtualMachineOUIs?: TernarySearchTree<string, boolean>;\n\tprivate _value?: number;\n\n\tprivate _isVirtualMachineMacAddress(mac: string): boolean {\n\t\tif (!this._virtualMachineOUIs) {\n\t\t\tthis._virtualMachineOUIs = TernarySearchTree.forStrings<boolean>();\n\n\t\t\t// dash-separated\n\t\t\tthis._virtualMachineOUIs.set('00-50-56', true);\n\t\t\tthis._virtualMachineOUIs.set('00-0C-29', true);\n\t\t\tthis._virtualMachineOUIs.set('00-05-69', true);\n\t\t\tthis._virtualMachineOUIs.set('00-03-FF', true);\n\t\t\tthis._virtualMachineOUIs.set('00-1C-42', true);\n\t\t\tthis._virtualMachineOUIs.set('00-16-3E', true);\n\t\t\tthis._virtualMachineOUIs.set('08-00-27', true);\n\n\t\t\t// colon-separated\n\t\t\tthis._virtualMachineOUIs.set('00:50:56', true);\n\t\t\tthis._virtualMachineOUIs.set('00:0C:29', true);\n\t\t\tthis._virtualMachineOUIs.set('00:05:69', true);\n\t\t\tthis._virtualMachineOUIs.set('00:03:FF', true);\n\t\t\tthis._virtualMachineOUIs.set('00:1C:42', true);\n\t\t\tthis._virtualMachineOUIs.set('00:16:3E', true);\n\t\t\tthis._virtualMachineOUIs.set('08:00:27', true);\n\t\t}\n\t\treturn !!this._virtualMachineOUIs.findSubstr(mac);\n\t}\n\n\tvalue(): number {\n\t\tif (this._value === undefined) {\n\t\t\tlet vmOui = 0;\n\t\t\tlet interfaceCount = 0;\n\n\t\t\tconst interfaces = networkInterfaces();\n\t\t\tfor (let name in interfaces) {\n\t\t\t\tconst networkInterface = interfaces[name];\n\t\t\t\tif (networkInterface) {\n\t\t\t\t\tfor (const { mac, internal } of networkInterface) {\n\t\t\t\t\t\tif (!internal) {\n\t\t\t\t\t\t\tinterfaceCount += 1;\n\t\t\t\t\t\t\tif (this._isVirtualMachineMacAddress(mac.toUpperCase())) {\n\t\t\t\t\t\t\t\tvmOui += 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._value = interfaceCount > 0\n\t\t\t\t? vmOui / interfaceCount\n\t\t\t\t: 0;\n\t\t}\n\n\t\treturn this._value;\n\t}\n};\n\nlet machineId: Promise<string>;\nexport async function getMachineId(): Promise<string> {\n\tif (!machineId) {\n\t\tmachineId = (async () => {\n\t\t\tconst id = await getMacMachineId();\n\n\t\t\treturn id || uuid.generateUuid(); // fallback, generate a UUID\n\t\t})();\n\t}\n\n\treturn machineId;\n}\n\nasync function getMacMachineId(): Promise<string | undefined> {\n\ttry {\n\t\tconst crypto = await import('crypto');\n\t\tconst macAddress = getMac();\n\t\treturn crypto.createHash('sha256').update(macAddress, 'utf8').digest('hex');\n\t} catch (err) {\n\t\terrors.onUnexpectedError(err);\n\t\treturn undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { tmpdir } from 'os';\nimport { promisify } from 'util';\nimport { ResourceQueue } from 'vs/base/common/async';\nimport { isEqualOrParent, isRootOrDriveLetter } from 'vs/base/common/extpath';\nimport { normalizeNFC } from 'vs/base/common/normalization';\nimport { join } from 'vs/base/common/path';\nimport { isLinux, isMacintosh, isWindows } from 'vs/base/common/platform';\nimport { extUriBiasedIgnorePathCase } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\n\n//#region rimraf\n\nexport enum RimRafMode {\n\n\t/**\n\t * Slow version that unlinks each file and folder.\n\t */\n\tUNLINK,\n\n\t/**\n\t * Fast version that first moves the file/folder\n\t * into a temp directory and then deletes that\n\t * without waiting for it.\n\t */\n\tMOVE\n}\n\n/**\n * Allows to delete the provided path (either file or folder) recursively\n * with the options:\n * - `UNLINK`: direct removal from disk\n * - `MOVE`: faster variant that first moves the target to temp dir and then\n *           deletes it in the background without waiting for that to finish.\n */\nasync function rimraf(path: string, mode = RimRafMode.UNLINK): Promise<void> {\n\tif (isRootOrDriveLetter(path)) {\n\t\tthrow new Error('rimraf - will refuse to recursively delete root');\n\t}\n\n\t// delete: via rmDir\n\tif (mode === RimRafMode.UNLINK) {\n\t\treturn rimrafUnlink(path);\n\t}\n\n\t// delete: via move\n\treturn rimrafMove(path);\n}\n\nasync function rimrafMove(path: string): Promise<void> {\n\ttry {\n\t\tconst pathInTemp = join(tmpdir(), generateUuid());\n\t\ttry {\n\t\t\tawait Promises.rename(path, pathInTemp);\n\t\t} catch (error) {\n\t\t\treturn rimrafUnlink(path); // if rename fails, delete without tmp dir\n\t\t}\n\n\t\t// Delete but do not return as promise\n\t\trimrafUnlink(pathInTemp).catch(error => {/* ignore */ });\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nasync function rimrafUnlink(path: string): Promise<void> {\n\treturn Promises.rmdir(path, { recursive: true, maxRetries: 3 });\n}\n\nexport function rimrafSync(path: string): void {\n\tif (isRootOrDriveLetter(path)) {\n\t\tthrow new Error('rimraf - will refuse to recursively delete root');\n\t}\n\n\tfs.rmdirSync(path, { recursive: true });\n}\n\n//#endregion\n\n//#region readdir with NFC support (macos)\n\nexport interface IDirent {\n\tname: string;\n\n\tisFile(): boolean;\n\tisDirectory(): boolean;\n\tisSymbolicLink(): boolean;\n}\n\n/**\n * Drop-in replacement of `fs.readdir` with support\n * for converting from macOS NFD unicon form to NFC\n * (https://github.com/nodejs/node/issues/2165)\n */\nasync function readdir(path: string): Promise<string[]>;\nasync function readdir(path: string, options: { withFileTypes: true }): Promise<IDirent[]>;\nasync function readdir(path: string, options?: { withFileTypes: true }): Promise<(string | IDirent)[]> {\n\treturn handleDirectoryChildren(await (options ? safeReaddirWithFileTypes(path) : promisify(fs.readdir)(path)));\n}\n\nasync function safeReaddirWithFileTypes(path: string): Promise<IDirent[]> {\n\ttry {\n\t\treturn await promisify(fs.readdir)(path, { withFileTypes: true });\n\t} catch (error) {\n\t\tconsole.warn('[node.js fs] readdir with filetypes failed with error: ', error);\n\t}\n\n\t// Fallback to manually reading and resolving each\n\t// children of the folder in case we hit an error\n\t// previously.\n\t// This can only really happen on exotic file systems\n\t// such as explained in #115645 where we get entries\n\t// from `readdir` that we can later not `lstat`.\n\tconst result: IDirent[] = [];\n\tconst children = await readdir(path);\n\tfor (const child of children) {\n\t\tlet isFile = false;\n\t\tlet isDirectory = false;\n\t\tlet isSymbolicLink = false;\n\n\t\ttry {\n\t\t\tconst lstat = await Promises.lstat(join(path, child));\n\n\t\t\tisFile = lstat.isFile();\n\t\t\tisDirectory = lstat.isDirectory();\n\t\t\tisSymbolicLink = lstat.isSymbolicLink();\n\t\t} catch (error) {\n\t\t\tconsole.warn('[node.js fs] unexpected error from lstat after readdir: ', error);\n\t\t}\n\n\t\tresult.push({\n\t\t\tname: child,\n\t\t\tisFile: () => isFile,\n\t\t\tisDirectory: () => isDirectory,\n\t\t\tisSymbolicLink: () => isSymbolicLink\n\t\t});\n\t}\n\n\treturn result;\n}\n\n/**\n * Drop-in replacement of `fs.readdirSync` with support\n * for converting from macOS NFD unicon form to NFC\n * (https://github.com/nodejs/node/issues/2165)\n */\nexport function readdirSync(path: string): string[] {\n\treturn handleDirectoryChildren(fs.readdirSync(path));\n}\n\nfunction handleDirectoryChildren(children: string[]): string[];\nfunction handleDirectoryChildren(children: IDirent[]): IDirent[];\nfunction handleDirectoryChildren(children: (string | IDirent)[]): (string | IDirent)[];\nfunction handleDirectoryChildren(children: (string | IDirent)[]): (string | IDirent)[] {\n\treturn children.map(child => {\n\n\t\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t\t// See also https://github.com/nodejs/node/issues/2165\n\n\t\tif (typeof child === 'string') {\n\t\t\treturn isMacintosh ? normalizeNFC(child) : child;\n\t\t}\n\n\t\tchild.name = isMacintosh ? normalizeNFC(child.name) : child.name;\n\n\t\treturn child;\n\t});\n}\n\n/**\n * A convenience method to read all children of a path that\n * are directories.\n */\nasync function readDirsInDir(dirPath: string): Promise<string[]> {\n\tconst children = await readdir(dirPath);\n\tconst directories: string[] = [];\n\n\tfor (const child of children) {\n\t\tif (await SymlinkSupport.existsDirectory(join(dirPath, child))) {\n\t\t\tdirectories.push(child);\n\t\t}\n\t}\n\n\treturn directories;\n}\n\n//#endregion\n\n//#region whenDeleted()\n\n/**\n * A `Promise` that resolves when the provided `path`\n * is deleted from disk.\n */\nexport function whenDeleted(path: string, intervalMs = 1000): Promise<void> {\n\treturn new Promise<void>(resolve => {\n\t\tlet running = false;\n\t\tconst interval = setInterval(() => {\n\t\t\tif (!running) {\n\t\t\t\trunning = true;\n\t\t\t\tfs.access(path, err => {\n\t\t\t\t\trunning = false;\n\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}, intervalMs);\n\t});\n}\n\n//#endregion\n\n//#region Methods with symbolic links support\n\nexport namespace SymlinkSupport {\n\n\texport interface IStats {\n\n\t\t// The stats of the file. If the file is a symbolic\n\t\t// link, the stats will be of that target file and\n\t\t// not the link itself.\n\t\t// If the file is a symbolic link pointing to a non\n\t\t// existing file, the stat will be of the link and\n\t\t// the `dangling` flag will indicate this.\n\t\tstat: fs.Stats;\n\n\t\t// Will be provided if the resource is a symbolic link\n\t\t// on disk. Use the `dangling` flag to find out if it\n\t\t// points to a resource that does not exist on disk.\n\t\tsymbolicLink?: { dangling: boolean };\n\t}\n\n\t/**\n\t * Resolves the `fs.Stats` of the provided path. If the path is a\n\t * symbolic link, the `fs.Stats` will be from the target it points\n\t * to. If the target does not exist, `dangling: true` will be returned\n\t * as `symbolicLink` value.\n\t */\n\texport async function stat(path: string): Promise<IStats> {\n\n\t\t// First stat the link\n\t\tlet lstats: fs.Stats | undefined;\n\t\ttry {\n\t\t\tlstats = await Promises.lstat(path);\n\n\t\t\t// Return early if the stat is not a symbolic link at all\n\t\t\tif (!lstats.isSymbolicLink()) {\n\t\t\t\treturn { stat: lstats };\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t/* ignore - use stat() instead */\n\t\t}\n\n\t\t// If the stat is a symbolic link or failed to stat, use fs.stat()\n\t\t// which for symbolic links will stat the target they point to\n\t\ttry {\n\t\t\tconst stats = await Promises.stat(path);\n\n\t\t\treturn { stat: stats, symbolicLink: lstats?.isSymbolicLink() ? { dangling: false } : undefined };\n\t\t} catch (error) {\n\n\t\t\t// If the link points to a nonexistent file we still want\n\t\t\t// to return it as result while setting dangling: true flag\n\t\t\tif (error.code === 'ENOENT' && lstats) {\n\t\t\t\treturn { stat: lstats, symbolicLink: { dangling: true } };\n\t\t\t}\n\n\t\t\t// Windows: workaround a node.js bug where reparse points\n\t\t\t// are not supported (https://github.com/nodejs/node/issues/36790)\n\t\t\tif (isWindows && error.code === 'EACCES') {\n\t\t\t\ttry {\n\t\t\t\t\tconst stats = await Promises.stat(await Promises.readlink(path));\n\n\t\t\t\t\treturn { stat: stats, symbolicLink: { dangling: false } };\n\t\t\t\t} catch (error) {\n\n\t\t\t\t\t// If the link points to a nonexistent file we still want\n\t\t\t\t\t// to return it as result while setting dangling: true flag\n\t\t\t\t\tif (error.code === 'ENOENT' && lstats) {\n\t\t\t\t\t\treturn { stat: lstats, symbolicLink: { dangling: true } };\n\t\t\t\t\t}\n\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t/**\n\t * Figures out if the `path` exists and is a file with support\n\t * for symlinks.\n\t *\n\t * Note: this will return `false` for a symlink that exists on\n\t * disk but is dangling (pointing to a nonexistent path).\n\t *\n\t * Use `exists` if you only care about the path existing on disk\n\t * or not without support for symbolic links.\n\t */\n\texport async function existsFile(path: string): Promise<boolean> {\n\t\ttry {\n\t\t\tconst { stat, symbolicLink } = await SymlinkSupport.stat(path);\n\n\t\t\treturn stat.isFile() && symbolicLink?.dangling !== true;\n\t\t} catch (error) {\n\t\t\t// Ignore, path might not exist\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Figures out if the `path` exists and is a directory with support for\n\t * symlinks.\n\t *\n\t * Note: this will return `false` for a symlink that exists on\n\t * disk but is dangling (pointing to a nonexistent path).\n\t *\n\t * Use `exists` if you only care about the path existing on disk\n\t * or not without support for symbolic links.\n\t */\n\texport async function existsDirectory(path: string): Promise<boolean> {\n\t\ttry {\n\t\t\tconst { stat, symbolicLink } = await SymlinkSupport.stat(path);\n\n\t\t\treturn stat.isDirectory() && symbolicLink?.dangling !== true;\n\t\t} catch (error) {\n\t\t\t// Ignore, path might not exist\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\n//#endregion\n\n//#region Write File\n\n// According to node.js docs (https://nodejs.org/docs/v6.5.0/api/fs.html#fs_fs_writefile_file_data_options_callback)\n// it is not safe to call writeFile() on the same path multiple times without waiting for the callback to return.\n// Therefor we use a Queue on the path that is given to us to sequentialize calls to the same path properly.\nconst writeQueues = new ResourceQueue();\n\n/**\n * Same as `fs.writeFile` but with an additional call to\n * `fs.fdatasync` after writing to ensure changes are\n * flushed to disk.\n *\n * In addition, multiple writes to the same path are queued.\n */\nfunction writeFile(path: string, data: string, options?: IWriteFileOptions): Promise<void>;\nfunction writeFile(path: string, data: Buffer, options?: IWriteFileOptions): Promise<void>;\nfunction writeFile(path: string, data: Uint8Array, options?: IWriteFileOptions): Promise<void>;\nfunction writeFile(path: string, data: string | Buffer | Uint8Array, options?: IWriteFileOptions): Promise<void>;\nfunction writeFile(path: string, data: string | Buffer | Uint8Array, options?: IWriteFileOptions): Promise<void> {\n\treturn writeQueues.queueFor(URI.file(path), extUriBiasedIgnorePathCase).queue(() => {\n\t\tconst ensuredOptions = ensureWriteOptions(options);\n\n\t\treturn new Promise((resolve, reject) => doWriteFileAndFlush(path, data, ensuredOptions, error => error ? reject(error) : resolve()));\n\t});\n}\n\ninterface IWriteFileOptions {\n\tmode?: number;\n\tflag?: string;\n}\n\ninterface IEnsuredWriteFileOptions extends IWriteFileOptions {\n\tmode: number;\n\tflag: string;\n}\n\nlet canFlush = true;\n\n// Calls fs.writeFile() followed by a fs.sync() call to flush the changes to disk\n// We do this in cases where we want to make sure the data is really on disk and\n// not in some cache.\n//\n// See https://github.com/nodejs/node/blob/v5.10.0/lib/fs.js#L1194\nfunction doWriteFileAndFlush(path: string, data: string | Buffer | Uint8Array, options: IEnsuredWriteFileOptions, callback: (error: Error | null) => void): void {\n\tif (!canFlush) {\n\t\treturn fs.writeFile(path, data, { mode: options.mode, flag: options.flag }, callback);\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tfs.open(path, options.flag, options.mode, (openError, fd) => {\n\t\tif (openError) {\n\t\t\treturn callback(openError);\n\t\t}\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFile(fd, data, writeError => {\n\t\t\tif (writeError) {\n\t\t\t\treturn fs.close(fd, () => callback(writeError)); // still need to close the handle on error!\n\t\t\t}\n\n\t\t\t// Flush contents (not metadata) of the file to disk\n\t\t\t// https://github.com/microsoft/vscode/issues/9589\n\t\t\tfs.fdatasync(fd, (syncError: Error | null) => {\n\n\t\t\t\t// In some exotic setups it is well possible that node fails to sync\n\t\t\t\t// In that case we disable flushing and warn to the console\n\t\t\t\tif (syncError) {\n\t\t\t\t\tconsole.warn('[node.js fs] fdatasync is now disabled for this session because it failed: ', syncError);\n\t\t\t\t\tcanFlush = false;\n\t\t\t\t}\n\n\t\t\t\treturn fs.close(fd, closeError => callback(closeError));\n\t\t\t});\n\t\t});\n\t});\n}\n\n/**\n * Same as `fs.writeFileSync` but with an additional call to\n * `fs.fdatasyncSync` after writing to ensure changes are\n * flushed to disk.\n */\nexport function writeFileSync(path: string, data: string | Buffer, options?: IWriteFileOptions): void {\n\tconst ensuredOptions = ensureWriteOptions(options);\n\n\tif (!canFlush) {\n\t\treturn fs.writeFileSync(path, data, { mode: ensuredOptions.mode, flag: ensuredOptions.flag });\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tconst fd = fs.openSync(path, ensuredOptions.flag, ensuredOptions.mode);\n\n\ttry {\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFileSync(fd, data);\n\n\t\t// Flush contents (not metadata) of the file to disk\n\t\ttry {\n\t\t\tfs.fdatasyncSync(fd); // https://github.com/microsoft/vscode/issues/9589\n\t\t} catch (syncError) {\n\t\t\tconsole.warn('[node.js fs] fdatasyncSync is now disabled for this session because it failed: ', syncError);\n\t\t\tcanFlush = false;\n\t\t}\n\t} finally {\n\t\tfs.closeSync(fd);\n\t}\n}\n\nfunction ensureWriteOptions(options?: IWriteFileOptions): IEnsuredWriteFileOptions {\n\tif (!options) {\n\t\treturn { mode: 0o666 /* default node.js mode for files */, flag: 'w' };\n\t}\n\n\treturn {\n\t\tmode: typeof options.mode === 'number' ? options.mode : 0o666 /* default node.js mode for files */,\n\t\tflag: typeof options.flag === 'string' ? options.flag : 'w'\n\t};\n}\n\n//#endregion\n\n//#region Move / Copy\n\n/**\n * A drop-in replacement for `fs.rename` that:\n * - updates the `mtime` of the `source` after the operation\n * - allows to move across multiple disks\n */\nasync function move(source: string, target: string): Promise<void> {\n\tif (source === target) {\n\t\treturn;  // simulate node.js behaviour here and do a no-op if paths match\n\t}\n\n\t// We have been updating `mtime` for move operations for files since the\n\t// beginning for reasons that are no longer quite clear, but changing\n\t// this could be risky as well. As such, trying to reason about it:\n\t// It is very common as developer to have file watchers enabled that watch\n\t// the current workspace for changes. Updating the `mtime` might make it\n\t// easier for these watchers to recognize an actual change. Since changing\n\t// a source code file also updates the `mtime`, moving a file should do so\n\t// as well because conceptually it is a change of a similar category.\n\tasync function updateMtime(path: string): Promise<void> {\n\t\ttry {\n\t\t\tconst stat = await Promises.lstat(path);\n\t\t\tif (stat.isDirectory() || stat.isSymbolicLink()) {\n\t\t\t\treturn; // only for files\n\t\t\t}\n\n\t\t\tawait Promises.utimes(path, stat.atime, new Date());\n\t\t} catch (error) {\n\t\t\t// Ignore any error\n\t\t}\n\t}\n\n\ttry {\n\t\tawait Promises.rename(source, target);\n\t\tawait updateMtime(target);\n\t} catch (error) {\n\n\t\t// In two cases we fallback to classic copy and delete:\n\t\t//\n\t\t// 1.) The EXDEV error indicates that source and target are on different devices\n\t\t// In this case, fallback to using a copy() operation as there is no way to\n\t\t// rename() between different devices.\n\t\t//\n\t\t// 2.) The user tries to rename a file/folder that ends with a dot. This is not\n\t\t// really possible to move then, at least on UNC devices.\n\t\tif (source.toLowerCase() !== target.toLowerCase() && error.code === 'EXDEV' || source.endsWith('.')) {\n\t\t\tawait copy(source, target, { preserveSymlinks: false /* copying to another device */ });\n\t\t\tawait rimraf(source, RimRafMode.MOVE);\n\t\t\tawait updateMtime(target);\n\t\t} else {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\ninterface ICopyPayload {\n\treadonly root: { source: string, target: string };\n\treadonly options: { preserveSymlinks: boolean };\n\treadonly handledSourcePaths: Set<string>;\n}\n\n/**\n * Recursively copies all of `source` to `target`.\n *\n * The options `preserveSymlinks` configures how symbolic\n * links should be handled when encountered. Set to\n * `false` to not preserve them and `true` otherwise.\n */\nasync function copy(source: string, target: string, options: { preserveSymlinks: boolean }): Promise<void> {\n\treturn doCopy(source, target, { root: { source, target }, options, handledSourcePaths: new Set<string>() });\n}\n\n// When copying a file or folder, we want to preserve the mode\n// it had and as such provide it when creating. However, modes\n// can go beyond what we expect (see link below), so we mask it.\n// (https://github.com/nodejs/node-v0.x-archive/issues/3045#issuecomment-4862588)\nconst COPY_MODE_MASK = 0o777;\n\nasync function doCopy(source: string, target: string, payload: ICopyPayload): Promise<void> {\n\n\t// Keep track of paths already copied to prevent\n\t// cycles from symbolic links to cause issues\n\tif (payload.handledSourcePaths.has(source)) {\n\t\treturn;\n\t} else {\n\t\tpayload.handledSourcePaths.add(source);\n\t}\n\n\tconst { stat, symbolicLink } = await SymlinkSupport.stat(source);\n\n\t// Symlink\n\tif (symbolicLink) {\n\n\t\t// Try to re-create the symlink unless `preserveSymlinks: false`\n\t\tif (payload.options.preserveSymlinks) {\n\t\t\ttry {\n\t\t\t\treturn await doCopySymlink(source, target, payload);\n\t\t\t} catch (error) {\n\t\t\t\t// in any case of an error fallback to normal copy via dereferencing\n\t\t\t\tconsole.warn('[node.js fs] copy of symlink failed: ', error);\n\t\t\t}\n\t\t}\n\n\t\tif (symbolicLink.dangling) {\n\t\t\treturn; // skip dangling symbolic links from here on (https://github.com/microsoft/vscode/issues/111621)\n\t\t}\n\t}\n\n\t// Folder\n\tif (stat.isDirectory()) {\n\t\treturn doCopyDirectory(source, target, stat.mode & COPY_MODE_MASK, payload);\n\t}\n\n\t// File or file-like\n\telse {\n\t\treturn doCopyFile(source, target, stat.mode & COPY_MODE_MASK);\n\t}\n}\n\nasync function doCopyDirectory(source: string, target: string, mode: number, payload: ICopyPayload): Promise<void> {\n\n\t// Create folder\n\tawait Promises.mkdir(target, { recursive: true, mode });\n\n\t// Copy each file recursively\n\tconst files = await readdir(source);\n\tfor (const file of files) {\n\t\tawait doCopy(join(source, file), join(target, file), payload);\n\t}\n}\n\nasync function doCopyFile(source: string, target: string, mode: number): Promise<void> {\n\n\t// Copy file\n\tawait Promises.copyFile(source, target);\n\n\t// restore mode (https://github.com/nodejs/node/issues/1104)\n\tawait Promises.chmod(target, mode);\n}\n\nasync function doCopySymlink(source: string, target: string, payload: ICopyPayload): Promise<void> {\n\n\t// Figure out link target\n\tlet linkTarget = await Promises.readlink(source);\n\n\t// Special case: the symlink points to a target that is\n\t// actually within the path that is being copied. In that\n\t// case we want the symlink to point to the target and\n\t// not the source\n\tif (isEqualOrParent(linkTarget, payload.root.source, !isLinux)) {\n\t\tlinkTarget = join(payload.root.target, linkTarget.substr(payload.root.source.length + 1));\n\t}\n\n\t// Create symlink\n\tawait Promises.symlink(linkTarget, target);\n}\n\n//#endregion\n\n//#region Promise based fs methods\n\n/**\n * Prefer this helper class over the `fs.promises` API to\n * enable `graceful-fs` to function properly. Given issue\n * https://github.com/isaacs/node-graceful-fs/issues/160 it\n * is evident that the module only takes care of the non-promise\n * based fs methods.\n *\n * Another reason is `realpath` being entirely different in\n * the promise based implementation compared to the other\n * one (https://github.com/microsoft/vscode/issues/118562)\n *\n * Note: using getters for a reason, since `graceful-fs`\n * patching might kick in later after modules have been\n * loaded we need to defer access to fs methods.\n * (https://github.com/microsoft/vscode/issues/124176)\n */\nexport const Promises = new class {\n\n\t//#region Implemented by node.js\n\n\tget access() { return promisify(fs.access); }\n\n\tget stat() { return promisify(fs.stat); }\n\tget lstat() { return promisify(fs.lstat); }\n\tget utimes() { return promisify(fs.utimes); }\n\n\tget read() { return promisify(fs.read); }\n\tget readFile() { return promisify(fs.readFile); }\n\n\tget write() { return promisify(fs.write); }\n\n\tget appendFile() { return promisify(fs.appendFile); }\n\n\tget fdatasync() { return promisify(fs.fdatasync); }\n\tget truncate() { return promisify(fs.truncate); }\n\n\tget rename() { return promisify(fs.rename); }\n\tget copyFile() { return promisify(fs.copyFile); }\n\n\tget open() { return promisify(fs.open); }\n\tget close() { return promisify(fs.close); }\n\n\tget symlink() { return promisify(fs.symlink); }\n\tget readlink() { return promisify(fs.readlink); }\n\n\tget chmod() { return promisify(fs.chmod); }\n\n\tget mkdir() { return promisify(fs.mkdir); }\n\n\tget unlink() { return promisify(fs.unlink); }\n\tget rmdir() { return promisify(fs.rmdir); }\n\n\tget realpath() { return promisify(fs.realpath); }\n\n\t//#endregion\n\n\t//#region Implemented by us\n\n\tasync exists(path: string): Promise<boolean> {\n\t\ttry {\n\t\t\tawait Promises.access(path);\n\n\t\t\treturn true;\n\t\t} catch {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tget readdir() { return readdir; }\n\tget readDirsInDir() { return readDirsInDir; }\n\n\tget writeFile() { return writeFile; }\n\n\tget rm() { return rimraf; }\n\n\tget move() { return move; }\n\tget copy() { return copy; }\n\n\t//#endregion\n};\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { basename, dirname, join, normalize, sep } from 'vs/base/common/path';\nimport { rtrim } from 'vs/base/common/strings';\nimport { Promises, readdirSync } from 'vs/base/node/pfs';\n\n/**\n * Copied from: https://github.com/microsoft/vscode-node-debug/blob/master/src/node/pathUtilities.ts#L83\n *\n * Given an absolute, normalized, and existing file path 'realcase' returns the exact path that the file has on disk.\n * On a case insensitive file system, the returned path might differ from the original path by character casing.\n * On a case sensitive file system, the returned path will always be identical to the original path.\n * In case of errors, null is returned. But you cannot use this function to verify that a path exists.\n * realcaseSync does not handle '..' or '.' path segments and it does not take the locale into account.\n */\nexport function realcaseSync(path: string): string | null {\n\tconst dir = dirname(path);\n\tif (path === dir) {\t// end recursion\n\t\treturn path;\n\t}\n\n\tconst name = (basename(path) /* can be '' for windows drive letters */ || path).toLowerCase();\n\ttry {\n\t\tconst entries = readdirSync(dir);\n\t\tconst found = entries.filter(e => e.toLowerCase() === name);\t// use a case insensitive search\n\t\tif (found.length === 1) {\n\t\t\t// on a case sensitive filesystem we cannot determine here, whether the file exists or not, hence we need the 'file exists' precondition\n\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\tif (prefix) {\n\t\t\t\treturn join(prefix, found[0]);\n\t\t\t}\n\t\t} else if (found.length > 1) {\n\t\t\t// must be a case sensitive $filesystem\n\t\t\tconst ix = found.indexOf(name);\n\t\t\tif (ix >= 0) {\t// case sensitive\n\t\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\t\tif (prefix) {\n\t\t\t\t\treturn join(prefix, found[ix]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\t// silently ignore error\n\t}\n\n\treturn null;\n}\n\nexport async function realpath(path: string): Promise<string> {\n\ttry {\n\t\t// DO NOT USE `fs.promises.realpath` here as it internally\n\t\t// calls `fs.native.realpath` which will result in subst\n\t\t// drives to be resolved to their target on Windows\n\t\t// https://github.com/microsoft/vscode/issues/118562\n\t\treturn await Promises.realpath(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpath(). Since fs.realpath() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\n\t\tawait Promises.access(normalizedPath, fs.constants.R_OK);\n\n\t\treturn normalizedPath;\n\t}\n}\n\nexport function realpathSync(path: string): string {\n\ttry {\n\t\treturn fs.realpathSync(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpathSync(). Since fs.realpathSync() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\t\tfs.accessSync(normalizedPath, fs.constants.R_OK); // throws in case of an error\n\n\t\treturn normalizedPath;\n\t}\n}\n\nfunction normalizePath(path: string): string {\n\treturn rtrim(normalize(path), sep);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as net from 'net';\n\n/**\n * Given a start point and a max number of retries, will find a port that\n * is openable. Will return 0 in case no free port can be found.\n */\nexport function findFreePort(startPort: number, giveUpAfter: number, timeout: number, stride = 1): Promise<number> {\n\tlet done = false;\n\n\treturn new Promise(resolve => {\n\t\tconst timeoutHandle = setTimeout(() => {\n\t\t\tif (!done) {\n\t\t\t\tdone = true;\n\t\t\t\treturn resolve(0);\n\t\t\t}\n\t\t}, timeout);\n\n\t\tdoFindFreePort(startPort, giveUpAfter, stride, (port) => {\n\t\t\tif (!done) {\n\t\t\t\tdone = true;\n\t\t\t\tclearTimeout(timeoutHandle);\n\t\t\t\treturn resolve(port);\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction doFindFreePort(startPort: number, giveUpAfter: number, stride: number, clb: (port: number) => void): void {\n\tif (giveUpAfter === 0) {\n\t\treturn clb(0);\n\t}\n\n\tconst client = new net.Socket();\n\n\t// If we can connect to the port it means the port is already taken so we continue searching\n\tclient.once('connect', () => {\n\t\tdispose(client);\n\n\t\treturn doFindFreePort(startPort + stride, giveUpAfter - 1, stride, clb);\n\t});\n\n\tclient.once('data', () => {\n\t\t// this listener is required since node.js 8.x\n\t});\n\n\tclient.once('error', (err: Error & { code?: string }) => {\n\t\tdispose(client);\n\n\t\t// If we receive any non ECONNREFUSED error, it means the port is used but we cannot connect\n\t\tif (err.code !== 'ECONNREFUSED') {\n\t\t\treturn doFindFreePort(startPort + stride, giveUpAfter - 1, stride, clb);\n\t\t}\n\n\t\t// Otherwise it means the port is free to use!\n\t\treturn clb(startPort);\n\t});\n\n\tclient.connect(startPort, '127.0.0.1');\n}\n\n// Reference: https://chromium.googlesource.com/chromium/src.git/+/refs/heads/main/net/base/port_util.cc#56\nexport const BROWSER_RESTRICTED_PORTS: any = {\n    1: true,      // tcpmux\n    7: true,      // echo\n    9: true,      // discard\n    11: true,     // systat\n    13: true,     // daytime\n    15: true,     // netstat\n    17: true,     // qotd\n    19: true,     // chargen\n    20: true,     // ftp data\n    21: true,     // ftp access\n    22: true,     // ssh\n    23: true,     // telnet\n    25: true,     // smtp\n    37: true,     // time\n    42: true,     // name\n    43: true,     // nicname\n    53: true,     // domain\n    69: true,     // tftp\n    77: true,     // priv-rjs\n    79: true,     // finger\n    87: true,     // ttylink\n    95: true,     // supdup\n    101: true,    // hostriame\n    102: true,    // iso-tsap\n    103: true,    // gppitnp\n    104: true,    // acr-nema\n    109: true,    // pop2\n    110: true,    // pop3\n    111: true,    // sunrpc\n    113: true,    // auth\n    115: true,    // sftp\n    117: true,    // uucp-path\n    119: true,    // nntp\n    123: true,    // NTP\n    135: true,    // loc-srv /epmap\n    137: true,    // netbios\n    139: true,    // netbios\n    143: true,    // imap2\n    161: true,    // snmp\n    179: true,    // BGP\n    389: true,    // ldap\n    427: true,    // SLP (Also used by Apple Filing Protocol)\n    465: true,    // smtp+ssl\n    512: true,    // print / exec\n    513: true,    // login\n    514: true,    // shell\n    515: true,    // printer\n    526: true,    // tempo\n    530: true,    // courier\n    531: true,    // chat\n    532: true,    // netnews\n    540: true,    // uucp\n    548: true,    // AFP (Apple Filing Protocol)\n    554: true,    // rtsp\n    556: true,    // remotefs\n    563: true,    // nntp+ssl\n    587: true,    // smtp (rfc6409)\n    601: true,    // syslog-conn (rfc3195)\n    636: true,    // ldap+ssl\n    989: true,    // ftps-data\n    990: true,    // ftps\n    993: true,    // ldap+ssl\n    995: true,    // pop3+ssl\n    1719: true,   // h323gatestat\n    1720: true,   // h323hostcall\n    1723: true,   // pptp\n    2049: true,   // nfs\n    3659: true,   // apple-sasl / PasswordServer\n    4045: true,   // lockd\n    5060: true,   // sip\n    5061: true,   // sips\n    6000: true,   // X11\n    6566: true,   // sane-port\n    6665: true,   // Alternate IRC [Apple addition]\n    6666: true,   // Alternate IRC [Apple addition]\n    6667: true,   // Standard IRC [Apple addition]\n    6668: true,   // Alternate IRC [Apple addition]\n    6669: true,   // Alternate IRC [Apple addition]\n    6697: true,   // IRC + TLS\n    10080: true   // Amanda\n};\n\n/**\n * Uses listen instead of connect. Is faster, but if there is another listener on 0.0.0.0 then this will take 127.0.0.1 from that listener.\n */\nexport function findFreePortFaster(startPort: number, giveUpAfter: number, timeout: number): Promise<number> {\n\tlet resolved: boolean = false;\n\tlet timeoutHandle: NodeJS.Timeout | undefined = undefined;\n\tlet countTried: number = 1;\n\tconst server = net.createServer({ pauseOnConnect: true });\n\tfunction doResolve(port: number, resolve: (port: number) => void) {\n\t\tif (!resolved) {\n\t\t\tresolved = true;\n\t\t\tserver.removeAllListeners();\n\t\t\tserver.close();\n\t\t\tif (timeoutHandle) {\n\t\t\t\tclearTimeout(timeoutHandle);\n\t\t\t}\n\t\t\tresolve(port);\n\t\t}\n\t}\n\treturn new Promise<number>(resolve => {\n\t\ttimeoutHandle = setTimeout(() => {\n\t\t\tdoResolve(0, resolve);\n\t\t}, timeout);\n\n\t\tserver.on('listening', () => {\n\t\t\tdoResolve(startPort, resolve);\n\t\t});\n\t\tserver.on('error', err => {\n\t\t\tif (err && ((<any>err).code === 'EADDRINUSE' || (<any>err).code === 'EACCES') && (countTried < giveUpAfter)) {\n\t\t\t\tstartPort++;\n\t\t\t\tcountTried++;\n\t\t\t\tserver.listen(startPort, '127.0.0.1');\n\t\t\t} else {\n\t\t\t\tdoResolve(0, resolve);\n\t\t\t}\n\t\t});\n\t\tserver.on('close', () => {\n\t\t\tdoResolve(0, resolve);\n\t\t});\n\t\tserver.listen(startPort, '127.0.0.1');\n\t});\n}\n\nfunction dispose(socket: net.Socket): void {\n\ttry {\n\t\tsocket.removeAllListeners('connect');\n\t\tsocket.removeAllListeners('error');\n\t\tsocket.end();\n\t\tsocket.destroy();\n\t\tsocket.unref();\n\t} catch (error) {\n\t\tconsole.error(error); // otherwise this error would get lost in the callback chain\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as os from 'os';\nimport * as path from 'vs/base/common/path';\nimport * as pfs from 'vs/base/node/pfs';\n\n// This is required, since parseInt(\"7-preview\") will return 7.\nconst IntRegex: RegExp = /^\\d+$/;\n\nconst PwshMsixRegex: RegExp = /^Microsoft.PowerShell_.*/;\nconst PwshPreviewMsixRegex: RegExp = /^Microsoft.PowerShellPreview_.*/;\n\nconst enum Arch {\n\tx64,\n\tx86,\n\tARM\n}\n\nlet processArch: Arch;\nswitch (process.arch) {\n\tcase 'ia32':\n\tcase 'x32':\n\t\tprocessArch = Arch.x86;\n\t\tbreak;\n\tcase 'arm':\n\tcase 'arm64':\n\t\tprocessArch = Arch.ARM;\n\t\tbreak;\n\tdefault:\n\t\tprocessArch = Arch.x64;\n\t\tbreak;\n}\n\n/*\nCurrently, here are the values for these environment variables on their respective archs:\n\nOn x86 process on x86:\nPROCESSOR_ARCHITECTURE is X86\nPROCESSOR_ARCHITEW6432 is undefined\n\nOn x86 process on x64:\nPROCESSOR_ARCHITECTURE is X86\nPROCESSOR_ARCHITEW6432 is AMD64\n\nOn x64 process on x64:\nPROCESSOR_ARCHITECTURE is AMD64\nPROCESSOR_ARCHITEW6432 is undefined\n\nOn ARM process on ARM:\nPROCESSOR_ARCHITECTURE is ARM64\nPROCESSOR_ARCHITEW6432 is undefined\n\nOn x86 process on ARM:\nPROCESSOR_ARCHITECTURE is X86\nPROCESSOR_ARCHITEW6432 is ARM64\n\nOn x64 process on ARM:\nPROCESSOR_ARCHITECTURE is ARM64\nPROCESSOR_ARCHITEW6432 is undefined\n*/\nlet osArch: Arch;\nif (process.env['PROCESSOR_ARCHITEW6432']) {\n\tosArch = process.env['PROCESSOR_ARCHITEW6432'] === 'ARM64'\n\t\t? Arch.ARM\n\t\t: Arch.x64;\n} else if (process.env['PROCESSOR_ARCHITECTURE'] === 'ARM64') {\n\tosArch = Arch.ARM;\n} else if (process.env['PROCESSOR_ARCHITECTURE'] === 'X86') {\n\tosArch = Arch.x86;\n} else {\n\tosArch = Arch.x64;\n}\n\nexport interface IPowerShellExeDetails {\n\treadonly displayName: string;\n\treadonly exePath: string;\n}\n\nexport interface IPossiblePowerShellExe extends IPowerShellExeDetails {\n\texists(): Promise<boolean>;\n}\n\nclass PossiblePowerShellExe implements IPossiblePowerShellExe {\n\tconstructor(\n\t\tpublic readonly exePath: string,\n\t\tpublic readonly displayName: string,\n\t\tprivate knownToExist?: boolean) { }\n\n\tpublic async exists(): Promise<boolean> {\n\t\tif (this.knownToExist === undefined) {\n\t\t\tthis.knownToExist = await pfs.SymlinkSupport.existsFile(this.exePath);\n\t\t}\n\t\treturn this.knownToExist;\n\t}\n}\n\nfunction getProgramFilesPath(\n\t{ useAlternateBitness = false }: { useAlternateBitness?: boolean } = {}): string | null {\n\n\tif (!useAlternateBitness) {\n\t\t// Just use the native system bitness\n\t\treturn process.env.ProgramFiles || null;\n\t}\n\n\t// We might be a 64-bit process looking for 32-bit program files\n\tif (processArch === Arch.x64) {\n\t\treturn process.env['ProgramFiles(x86)'] || null;\n\t}\n\n\t// We might be a 32-bit process looking for 64-bit program files\n\tif (osArch === Arch.x64) {\n\t\treturn process.env.ProgramW6432 || null;\n\t}\n\n\t// We're a 32-bit process on 32-bit Windows, there is no other Program Files dir\n\treturn null;\n}\n\nasync function findPSCoreWindowsInstallation(\n\t{ useAlternateBitness = false, findPreview = false }:\n\t\t{ useAlternateBitness?: boolean; findPreview?: boolean } = {}): Promise<IPossiblePowerShellExe | null> {\n\n\tconst programFilesPath = getProgramFilesPath({ useAlternateBitness });\n\tif (!programFilesPath) {\n\t\treturn null;\n\t}\n\n\tconst powerShellInstallBaseDir = path.join(programFilesPath, 'PowerShell');\n\n\t// Ensure the base directory exists\n\tif (!await pfs.SymlinkSupport.existsDirectory(powerShellInstallBaseDir)) {\n\t\treturn null;\n\t}\n\n\tlet highestSeenVersion: number = -1;\n\tlet pwshExePath: string | null = null;\n\tfor (const item of await pfs.Promises.readdir(powerShellInstallBaseDir)) {\n\n\t\tlet currentVersion: number = -1;\n\t\tif (findPreview) {\n\t\t\t// We are looking for something like \"7-preview\"\n\n\t\t\t// Preview dirs all have dashes in them\n\t\t\tconst dashIndex = item.indexOf('-');\n\t\t\tif (dashIndex < 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Verify that the part before the dash is an integer\n\t\t\t// and that the part after the dash is \"preview\"\n\t\t\tconst intPart: string = item.substring(0, dashIndex);\n\t\t\tif (!IntRegex.test(intPart) || item.substring(dashIndex + 1) !== 'preview') {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tcurrentVersion = parseInt(intPart, 10);\n\t\t} else {\n\t\t\t// Search for a directory like \"6\" or \"7\"\n\t\t\tif (!IntRegex.test(item)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tcurrentVersion = parseInt(item, 10);\n\t\t}\n\n\t\t// Ensure we haven't already seen a higher version\n\t\tif (currentVersion <= highestSeenVersion) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Now look for the file\n\t\tconst exePath = path.join(powerShellInstallBaseDir, item, 'pwsh.exe');\n\t\tif (!await pfs.SymlinkSupport.existsFile(exePath)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tpwshExePath = exePath;\n\t\thighestSeenVersion = currentVersion;\n\t}\n\n\tif (!pwshExePath) {\n\t\treturn null;\n\t}\n\n\tconst bitness: string = programFilesPath.includes('x86') ? ' (x86)' : '';\n\tconst preview: string = findPreview ? ' Preview' : '';\n\n\treturn new PossiblePowerShellExe(pwshExePath, `PowerShell${preview}${bitness}`, true);\n}\n\nasync function findPSCoreMsix({ findPreview }: { findPreview?: boolean } = {}): Promise<IPossiblePowerShellExe | null> {\n\t// We can't proceed if there's no LOCALAPPDATA path\n\tif (!process.env.LOCALAPPDATA) {\n\t\treturn null;\n\t}\n\n\t// Find the base directory for MSIX application exe shortcuts\n\tconst msixAppDir = path.join(process.env.LOCALAPPDATA, 'Microsoft', 'WindowsApps');\n\n\tif (!await pfs.SymlinkSupport.existsDirectory(msixAppDir)) {\n\t\treturn null;\n\t}\n\n\t// Define whether we're looking for the preview or the stable\n\tconst { pwshMsixDirRegex, pwshMsixName } = findPreview\n\t\t? { pwshMsixDirRegex: PwshPreviewMsixRegex, pwshMsixName: 'PowerShell Preview (Store)' }\n\t\t: { pwshMsixDirRegex: PwshMsixRegex, pwshMsixName: 'PowerShell (Store)' };\n\n\t// We should find only one such application, so return on the first one\n\tfor (const subdir of await pfs.Promises.readdir(msixAppDir)) {\n\t\tif (pwshMsixDirRegex.test(subdir)) {\n\t\t\tconst pwshMsixPath = path.join(msixAppDir, subdir, 'pwsh.exe');\n\t\t\treturn new PossiblePowerShellExe(pwshMsixPath, pwshMsixName);\n\t\t}\n\t}\n\n\t// If we find nothing, return null\n\treturn null;\n}\n\nfunction findPSCoreDotnetGlobalTool(): IPossiblePowerShellExe {\n\tconst dotnetGlobalToolExePath: string = path.join(os.homedir(), '.dotnet', 'tools', 'pwsh.exe');\n\n\treturn new PossiblePowerShellExe(dotnetGlobalToolExePath, '.NET Core PowerShell Global Tool');\n}\n\nfunction findWinPS(): IPossiblePowerShellExe | null {\n\tconst winPSPath = path.join(\n\t\tprocess.env.windir!,\n\t\tprocessArch === Arch.x86 && osArch !== Arch.x86 ? 'SysNative' : 'System32',\n\t\t'WindowsPowerShell', 'v1.0', 'powershell.exe');\n\n\treturn new PossiblePowerShellExe(winPSPath, 'Windows PowerShell', true);\n}\n\n/**\n * Iterates through all the possible well-known PowerShell installations on a machine.\n * Returned values may not exist, but come with an .exists property\n * which will check whether the executable exists.\n */\nasync function* enumerateDefaultPowerShellInstallations(): AsyncIterable<IPossiblePowerShellExe> {\n\t// Find PSCore stable first\n\tlet pwshExe = await findPSCoreWindowsInstallation();\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n\n\t// Windows may have a 32-bit pwsh.exe\n\tpwshExe = await findPSCoreWindowsInstallation({ useAlternateBitness: true });\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n\n\t// Also look for the MSIX/UWP installation\n\tpwshExe = await findPSCoreMsix();\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n\n\t// Look for the .NET global tool\n\t// Some older versions of PowerShell have a bug in this where startup will fail,\n\t// but this is fixed in newer versions\n\tpwshExe = findPSCoreDotnetGlobalTool();\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n\n\t// Look for PSCore preview\n\tpwshExe = await findPSCoreWindowsInstallation({ findPreview: true });\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n\n\t// Find a preview MSIX\n\tpwshExe = await findPSCoreMsix({ findPreview: true });\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n\n\t// Look for pwsh-preview with the opposite bitness\n\tpwshExe = await findPSCoreWindowsInstallation({ useAlternateBitness: true, findPreview: true });\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n\n\t// Finally, get Windows PowerShell\n\tpwshExe = findWinPS();\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n}\n\n/**\n * Iterates through PowerShell installations on the machine according\n * to configuration passed in through the constructor.\n * PowerShell items returned by this object are verified\n * to exist on the filesystem.\n */\nexport async function* enumeratePowerShellInstallations(): AsyncIterable<IPowerShellExeDetails> {\n\t// Get the default PowerShell installations first\n\tfor await (const defaultPwsh of enumerateDefaultPowerShellInstallations()) {\n\t\tif (await defaultPwsh.exists()) {\n\t\t\tyield defaultPwsh;\n\t\t}\n\t}\n}\n\n/**\n* Returns the first available PowerShell executable found in the search order.\n*/\nexport async function getFirstAvailablePowerShellInstallation(): Promise<IPowerShellExeDetails | null> {\n\tfor await (const pwsh of enumeratePowerShellInstallations()) {\n\t\treturn pwsh;\n\t}\n\treturn null;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { exec } from 'child_process';\nimport { FileAccess } from 'vs/base/common/network';\nimport { ProcessItem } from 'vs/base/common/processes';\n\nexport function listProcesses(rootPid: number): Promise<ProcessItem> {\n\n\treturn new Promise((resolve, reject) => {\n\n\t\tlet rootItem: ProcessItem | undefined;\n\t\tconst map = new Map<number, ProcessItem>();\n\n\n\t\tfunction addToTree(pid: number, ppid: number, cmd: string, load: number, mem: number) {\n\n\t\t\tconst parent = map.get(ppid);\n\t\t\tif (pid === rootPid || parent) {\n\n\t\t\t\tconst item: ProcessItem = {\n\t\t\t\t\tname: findName(cmd),\n\t\t\t\t\tcmd,\n\t\t\t\t\tpid,\n\t\t\t\t\tppid,\n\t\t\t\t\tload,\n\t\t\t\t\tmem\n\t\t\t\t};\n\t\t\t\tmap.set(pid, item);\n\n\t\t\t\tif (pid === rootPid) {\n\t\t\t\t\trootItem = item;\n\t\t\t\t}\n\n\t\t\t\tif (parent) {\n\t\t\t\t\tif (!parent.children) {\n\t\t\t\t\t\tparent.children = [];\n\t\t\t\t\t}\n\t\t\t\t\tparent.children.push(item);\n\t\t\t\t\tif (parent.children.length > 1) {\n\t\t\t\t\t\tparent.children = parent.children.sort((a, b) => a.pid - b.pid);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction findName(cmd: string): string {\n\n\t\t\tconst SHARED_PROCESS_HINT = /--vscode-window-kind=shared-process/;\n\t\t\tconst ISSUE_REPORTER_HINT = /--vscode-window-kind=issue-reporter/;\n\t\t\tconst PROCESS_EXPLORER_HINT = /--vscode-window-kind=process-explorer/;\n\t\t\tconst UTILITY_NETWORK_HINT = /--utility-sub-type=network/;\n\t\t\tconst WINDOWS_CRASH_REPORTER = /--crashes-directory/;\n\t\t\tconst WINDOWS_PTY = /\\\\pipe\\\\winpty-control/;\n\t\t\tconst WINDOWS_CONSOLE_HOST = /conhost\\.exe/;\n\t\t\tconst TYPE = /--type=([a-zA-Z-]+)/;\n\n\t\t\t// find windows crash reporter\n\t\t\tif (WINDOWS_CRASH_REPORTER.exec(cmd)) {\n\t\t\t\treturn 'electron-crash-reporter';\n\t\t\t}\n\n\t\t\t// find windows pty process\n\t\t\tif (WINDOWS_PTY.exec(cmd)) {\n\t\t\t\treturn 'winpty-process';\n\t\t\t}\n\n\t\t\t//find windows console host process\n\t\t\tif (WINDOWS_CONSOLE_HOST.exec(cmd)) {\n\t\t\t\treturn 'console-window-host (Windows internal process)';\n\t\t\t}\n\n\t\t\t// find \"--type=xxxx\"\n\t\t\tlet matches = TYPE.exec(cmd);\n\t\t\tif (matches && matches.length === 2) {\n\t\t\t\tif (matches[1] === 'renderer') {\n\t\t\t\t\tif (SHARED_PROCESS_HINT.exec(cmd)) {\n\t\t\t\t\t\treturn 'shared-process';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (ISSUE_REPORTER_HINT.exec(cmd)) {\n\t\t\t\t\t\treturn 'issue-reporter';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (PROCESS_EXPLORER_HINT.exec(cmd)) {\n\t\t\t\t\t\treturn 'process-explorer';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn `window`;\n\t\t\t\t} else if (matches[1] === 'utility') {\n\t\t\t\t\tif (UTILITY_NETWORK_HINT.exec(cmd)) {\n\t\t\t\t\t\treturn 'utility-network-service';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn matches[1];\n\t\t\t}\n\n\t\t\t// find all xxxx.js\n\t\t\tconst JS = /[a-zA-Z-]+\\.js/g;\n\t\t\tlet result = '';\n\t\t\tdo {\n\t\t\t\tmatches = JS.exec(cmd);\n\t\t\t\tif (matches) {\n\t\t\t\t\tresult += matches + ' ';\n\t\t\t\t}\n\t\t\t} while (matches);\n\n\t\t\tif (result) {\n\t\t\t\tif (cmd.indexOf('node ') < 0 && cmd.indexOf('node.exe') < 0) {\n\t\t\t\t\treturn `electron_node ${result}`;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn cmd;\n\t\t}\n\n\t\tif (process.platform === 'win32') {\n\n\t\t\tconst cleanUNCPrefix = (value: string): string => {\n\t\t\t\tif (value.indexOf('\\\\\\\\?\\\\') === 0) {\n\t\t\t\t\treturn value.substr(4);\n\t\t\t\t} else if (value.indexOf('\\\\??\\\\') === 0) {\n\t\t\t\t\treturn value.substr(4);\n\t\t\t\t} else if (value.indexOf('\"\\\\\\\\?\\\\') === 0) {\n\t\t\t\t\treturn '\"' + value.substr(5);\n\t\t\t\t} else if (value.indexOf('\"\\\\??\\\\') === 0) {\n\t\t\t\t\treturn '\"' + value.substr(5);\n\t\t\t\t} else {\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t(import('windows-process-tree')).then(windowsProcessTree => {\n\t\t\t\twindowsProcessTree.getProcessList(rootPid, (processList) => {\n\t\t\t\t\twindowsProcessTree.getProcessCpuUsage(processList, (completeProcessList) => {\n\t\t\t\t\t\tconst processItems: Map<number, ProcessItem> = new Map();\n\t\t\t\t\t\tcompleteProcessList.forEach(process => {\n\t\t\t\t\t\t\tconst commandLine = cleanUNCPrefix(process.commandLine || '');\n\t\t\t\t\t\t\tprocessItems.set(process.pid, {\n\t\t\t\t\t\t\t\tname: findName(commandLine),\n\t\t\t\t\t\t\t\tcmd: commandLine,\n\t\t\t\t\t\t\t\tpid: process.pid,\n\t\t\t\t\t\t\t\tppid: process.ppid,\n\t\t\t\t\t\t\t\tload: process.cpu || 0,\n\t\t\t\t\t\t\t\tmem: process.memory || 0\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\trootItem = processItems.get(rootPid);\n\t\t\t\t\t\tif (rootItem) {\n\t\t\t\t\t\t\tprocessItems.forEach(item => {\n\t\t\t\t\t\t\t\tconst parent = processItems.get(item.ppid);\n\t\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\t\tif (!parent.children) {\n\t\t\t\t\t\t\t\t\t\tparent.children = [];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tparent.children.push(item);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tprocessItems.forEach(item => {\n\t\t\t\t\t\t\t\tif (item.children) {\n\t\t\t\t\t\t\t\t\titem.children = item.children.sort((a, b) => a.pid - b.pid);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tresolve(rootItem);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treject(new Error(`Root process ${rootPid} not found`));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}, windowsProcessTree.ProcessDataFlag.CommandLine | windowsProcessTree.ProcessDataFlag.Memory);\n\t\t\t});\n\t\t} else {\t// OS X & Linux\n\t\t\tfunction calculateLinuxCpuUsage() {\n\t\t\t\t// Flatten rootItem to get a list of all VSCode processes\n\t\t\t\tlet processes = [rootItem];\n\t\t\t\tconst pids: number[] = [];\n\t\t\t\twhile (processes.length) {\n\t\t\t\t\tconst process = processes.shift();\n\t\t\t\t\tif (process) {\n\t\t\t\t\t\tpids.push(process.pid);\n\t\t\t\t\t\tif (process.children) {\n\t\t\t\t\t\t\tprocesses = processes.concat(process.children);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// The cpu usage value reported on Linux is the average over the process lifetime,\n\t\t\t\t// recalculate the usage over a one second interval\n\t\t\t\t// JSON.stringify is needed to escape spaces, https://github.com/nodejs/node/issues/6803\n\t\t\t\tlet cmd = JSON.stringify(FileAccess.asFileUri('vs/base/node/cpuUsage.sh', require).fsPath);\n\t\t\t\tcmd += ' ' + pids.join(' ');\n\n\t\t\t\texec(cmd, {}, (err, stdout, stderr) => {\n\t\t\t\t\tif (err || stderr) {\n\t\t\t\t\t\treject(err || new Error(stderr.toString()));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst cpuUsage = stdout.toString().split('\\n');\n\t\t\t\t\t\tfor (let i = 0; i < pids.length; i++) {\n\t\t\t\t\t\t\tconst processInfo = map.get(pids[i])!;\n\t\t\t\t\t\t\tprocessInfo.load = parseFloat(cpuUsage[i]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!rootItem) {\n\t\t\t\t\t\t\treject(new Error(`Root process ${rootPid} not found`));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresolve(rootItem);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\texec('which ps', {}, (err, stdout, stderr) => {\n\t\t\t\tif (err || stderr) {\n\t\t\t\t\tif (process.platform !== 'linux') {\n\t\t\t\t\t\treject(err || new Error(stderr.toString()));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst cmd = JSON.stringify(FileAccess.asFileUri('vs/base/node/ps.sh', require).fsPath);\n\t\t\t\t\t\texec(cmd, {}, (err, stdout, stderr) => {\n\t\t\t\t\t\t\tif (err || stderr) {\n\t\t\t\t\t\t\t\treject(err || new Error(stderr.toString()));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tparsePsOutput(stdout, addToTree);\n\t\t\t\t\t\t\t\tcalculateLinuxCpuUsage();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst ps = stdout.toString().trim();\n\t\t\t\t\tconst args = '-ax -o pid=,ppid=,pcpu=,pmem=,command=';\n\n\t\t\t\t\t// Set numeric locale to ensure '.' is used as the decimal separator\n\t\t\t\t\texec(`${ps} ${args}`, { maxBuffer: 1000 * 1024, env: { LC_NUMERIC: 'en_US.UTF-8' } }, (err, stdout, stderr) => {\n\t\t\t\t\t\t// Silently ignoring the screen size is bogus error. See https://github.com/microsoft/vscode/issues/98590\n\t\t\t\t\t\tif (err || (stderr && !stderr.includes('screen size is bogus'))) {\n\t\t\t\t\t\t\treject(err || new Error(stderr.toString()));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tparsePsOutput(stdout, addToTree);\n\n\t\t\t\t\t\t\tif (process.platform === 'linux') {\n\t\t\t\t\t\t\t\tcalculateLinuxCpuUsage();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (!rootItem) {\n\t\t\t\t\t\t\t\t\treject(new Error(`Root process ${rootPid} not found`));\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tresolve(rootItem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n}\n\nfunction parsePsOutput(stdout: string, addToTree: (pid: number, ppid: number, cmd: string, load: number, mem: number) => void): void {\n\tconst PID_CMD = /^\\s*([0-9]+)\\s+([0-9]+)\\s+([0-9]+\\.[0-9]+)\\s+([0-9]+\\.[0-9]+)\\s+(.+)$/;\n\tconst lines = stdout.toString().split('\\n');\n\tfor (const line of lines) {\n\t\tconst matches = PID_CMD.exec(line.trim());\n\t\tif (matches && matches.length === 6) {\n\t\t\taddToTree(parseInt(matches[1]), parseInt(matches[2]), matches[5], parseFloat(matches[3]), parseFloat(matches[4]));\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { watch } from 'fs';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { isEqualOrParent } from 'vs/base/common/extpath';\nimport { Disposable, dispose, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { normalizeNFC } from 'vs/base/common/normalization';\nimport { basename, join } from 'vs/base/common/path';\nimport { isMacintosh } from 'vs/base/common/platform';\nimport { Promises } from 'vs/base/node/pfs';\n\nexport function watchFile(path: string, onChange: (type: 'added' | 'changed' | 'deleted', path: string) => void, onError: (error: string) => void): IDisposable {\n\treturn doWatchNonRecursive({ path, isDirectory: false }, onChange, onError);\n}\n\nexport function watchFolder(path: string, onChange: (type: 'added' | 'changed' | 'deleted', path: string) => void, onError: (error: string) => void): IDisposable {\n\treturn doWatchNonRecursive({ path, isDirectory: true }, onChange, onError);\n}\n\nexport const CHANGE_BUFFER_DELAY = 100;\n\nfunction doWatchNonRecursive(file: { path: string, isDirectory: boolean }, onChange: (type: 'added' | 'changed' | 'deleted', path: string) => void, onError: (error: string) => void): IDisposable {\n\n\t// macOS: watching samba shares can crash VSCode so we do\n\t// a simple check for the file path pointing to /Volumes\n\t// (https://github.com/microsoft/vscode/issues/106879)\n\t// TODO@electron this needs a revisit when the crash is\n\t// fixed or mitigated upstream.\n\tif (isMacintosh && isEqualOrParent(file.path, '/Volumes/')) {\n\t\tonError(`Refusing to watch ${file.path} for changes using fs.watch() for possibly being a network share where watching is unreliable and unstable.`);\n\t\treturn Disposable.None;\n\t}\n\n\tconst originalFileName = basename(file.path);\n\tconst mapPathToStatDisposable = new Map<string, IDisposable>();\n\n\tlet disposed = false;\n\tlet watcherDisposables: IDisposable[] = [toDisposable(() => {\n\t\tmapPathToStatDisposable.forEach(disposable => dispose(disposable));\n\t\tmapPathToStatDisposable.clear();\n\t})];\n\n\ttry {\n\n\t\t// Creating watcher can fail with an exception\n\t\tconst watcher = watch(file.path);\n\t\twatcherDisposables.push(toDisposable(() => {\n\t\t\twatcher.removeAllListeners();\n\t\t\twatcher.close();\n\t\t}));\n\n\t\t// Folder: resolve children to emit proper events\n\t\tconst folderChildren: Set<string> = new Set<string>();\n\t\tif (file.isDirectory) {\n\t\t\tPromises.readdir(file.path).then(children => children.forEach(child => folderChildren.add(child)));\n\t\t}\n\n\t\twatcher.on('error', (code: number, signal: string) => {\n\t\t\tif (!disposed) {\n\t\t\t\tonError(`Failed to watch ${file.path} for changes using fs.watch() (${code}, ${signal})`);\n\t\t\t}\n\t\t});\n\n\t\twatcher.on('change', (type, raw) => {\n\t\t\tif (disposed) {\n\t\t\t\treturn; // ignore if already disposed\n\t\t\t}\n\n\t\t\t// Normalize file name\n\t\t\tlet changedFileName: string = '';\n\t\t\tif (raw) { // https://github.com/microsoft/vscode/issues/38191\n\t\t\t\tchangedFileName = raw.toString();\n\t\t\t\tif (isMacintosh) {\n\t\t\t\t\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t\t\t\t\t// See also https://github.com/nodejs/node/issues/2165\n\t\t\t\t\tchangedFileName = normalizeNFC(changedFileName);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!changedFileName || (type !== 'change' && type !== 'rename')) {\n\t\t\t\treturn; // ignore unexpected events\n\t\t\t}\n\n\t\t\t// File path: use path directly for files and join with changed file name otherwise\n\t\t\tconst changedFilePath = file.isDirectory ? join(file.path, changedFileName) : file.path;\n\n\t\t\t// File\n\t\t\tif (!file.isDirectory) {\n\t\t\t\tif (type === 'rename' || changedFileName !== originalFileName) {\n\t\t\t\t\t// The file was either deleted or renamed. Many tools apply changes to files in an\n\t\t\t\t\t// atomic way (\"Atomic Save\") by first renaming the file to a temporary name and then\n\t\t\t\t\t// renaming it back to the original name. Our watcher will detect this as a rename\n\t\t\t\t\t// and then stops to work on Mac and Linux because the watcher is applied to the\n\t\t\t\t\t// inode and not the name. The fix is to detect this case and trying to watch the file\n\t\t\t\t\t// again after a certain delay.\n\t\t\t\t\t// In addition, we send out a delete event if after a timeout we detect that the file\n\t\t\t\t\t// does indeed not exist anymore.\n\n\t\t\t\t\tconst timeoutHandle = setTimeout(async () => {\n\t\t\t\t\t\tconst fileExists = await Promises.exists(changedFilePath);\n\n\t\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\t\treturn; // ignore if disposed by now\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// File still exists, so emit as change event and reapply the watcher\n\t\t\t\t\t\tif (fileExists) {\n\t\t\t\t\t\t\tonChange('changed', changedFilePath);\n\n\t\t\t\t\t\t\twatcherDisposables = [doWatchNonRecursive(file, onChange, onError)];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// File seems to be really gone, so emit a deleted event\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tonChange('deleted', changedFilePath);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, CHANGE_BUFFER_DELAY);\n\n\t\t\t\t\t// Very important to dispose the watcher which now points to a stale inode\n\t\t\t\t\t// and wire in a new disposable that tracks our timeout that is installed\n\t\t\t\t\tdispose(watcherDisposables);\n\t\t\t\t\twatcherDisposables = [toDisposable(() => clearTimeout(timeoutHandle))];\n\t\t\t\t} else {\n\t\t\t\t\tonChange('changed', changedFilePath);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Folder\n\t\t\telse {\n\n\t\t\t\t// Children add/delete\n\t\t\t\tif (type === 'rename') {\n\n\t\t\t\t\t// Cancel any previous stats for this file path if existing\n\t\t\t\t\tconst statDisposable = mapPathToStatDisposable.get(changedFilePath);\n\t\t\t\t\tif (statDisposable) {\n\t\t\t\t\t\tdispose(statDisposable);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Wait a bit and try see if the file still exists on disk to decide on the resulting event\n\t\t\t\t\tconst timeoutHandle = setTimeout(async () => {\n\t\t\t\t\t\tmapPathToStatDisposable.delete(changedFilePath);\n\n\t\t\t\t\t\tconst fileExists = await Promises.exists(changedFilePath);\n\n\t\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\t\treturn; // ignore if disposed by now\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Figure out the correct event type:\n\t\t\t\t\t\t// File Exists: either 'added' or 'changed' if known before\n\t\t\t\t\t\t// File Does not Exist: always 'deleted'\n\t\t\t\t\t\tlet type: 'added' | 'deleted' | 'changed';\n\t\t\t\t\t\tif (fileExists) {\n\t\t\t\t\t\t\tif (folderChildren.has(changedFileName)) {\n\t\t\t\t\t\t\t\ttype = 'changed';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttype = 'added';\n\t\t\t\t\t\t\t\tfolderChildren.add(changedFileName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfolderChildren.delete(changedFileName);\n\t\t\t\t\t\t\ttype = 'deleted';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tonChange(type, changedFilePath);\n\t\t\t\t\t}, CHANGE_BUFFER_DELAY);\n\n\t\t\t\t\tmapPathToStatDisposable.set(changedFilePath, toDisposable(() => clearTimeout(timeoutHandle)));\n\t\t\t\t}\n\n\t\t\t\t// Other events\n\t\t\t\telse {\n\n\t\t\t\t\t// Figure out the correct event type: if this is the\n\t\t\t\t\t// first time we see this child, it can only be added\n\t\t\t\t\tlet type: 'added' | 'changed';\n\t\t\t\t\tif (folderChildren.has(changedFileName)) {\n\t\t\t\t\t\ttype = 'changed';\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = 'added';\n\t\t\t\t\t\tfolderChildren.add(changedFileName);\n\t\t\t\t\t}\n\n\t\t\t\t\tonChange(type, changedFilePath);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} catch (error) {\n\t\tPromises.exists(file.path).then(exists => {\n\t\t\tif (exists && !disposed) {\n\t\t\t\tonError(`Failed to watch ${file.path} for changes using fs.watch() (${error.toString()})`);\n\t\t\t}\n\t\t});\n\t}\n\n\treturn toDisposable(() => {\n\t\tdisposed = true;\n\n\t\twatcherDisposables = dispose(watcherDisposables);\n\t});\n}\n\n/**\n * Watch the provided `path` for changes and return\n * the data in chunks of `Uint8Array` for further use.\n */\nexport async function watchFileContents(path: string, onData: (chunk: Uint8Array) => void, token: CancellationToken, bufferSize = 512): Promise<void> {\n\tconst handle = await Promises.open(path, 'r');\n\tconst buffer = Buffer.allocUnsafe(bufferSize);\n\n\tconst cts = new CancellationTokenSource(token);\n\n\tlet error: Error | undefined = undefined;\n\tlet isReading = false;\n\n\tconst watcher = watchFile(path, async type => {\n\t\tif (type === 'changed') {\n\n\t\t\tif (isReading) {\n\t\t\t\treturn; // return early if we are already reading the output\n\t\t\t}\n\n\t\t\tisReading = true;\n\n\t\t\ttry {\n\t\t\t\t// Consume the new contents of the file until finished\n\t\t\t\t// everytime there is a change event signalling a change\n\t\t\t\twhile (!cts.token.isCancellationRequested) {\n\t\t\t\t\tconst { bytesRead } = await Promises.read(handle, buffer, 0, bufferSize, null);\n\t\t\t\t\tif (!bytesRead || cts.token.isCancellationRequested) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tonData(buffer.slice(0, bytesRead));\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\terror = new Error(err);\n\t\t\t\tcts.dispose(true);\n\t\t\t} finally {\n\t\t\t\tisReading = false;\n\t\t\t}\n\t\t}\n\t}, err => {\n\t\terror = new Error(err);\n\t\tcts.dispose(true);\n\t});\n\n\treturn new Promise<void>((resolve, reject) => {\n\t\tcts.token.onCancellationRequested(async () => {\n\t\t\twatcher.dispose();\n\t\t\tawait Promises.close(handle);\n\n\t\t\tif (error) {\n\t\t\t\treject(error);\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getRandomElement } from 'vs/base/common/arrays';\nimport { CancelablePromise, createCancelablePromise, timeout } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { memoize } from 'vs/base/common/decorators';\nimport * as errors from 'vs/base/common/errors';\nimport { Emitter, Event, EventMultiplexer, Relay } from 'vs/base/common/event';\nimport { combinedDisposable, DisposableStore, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { revive } from 'vs/base/common/marshalling';\nimport * as strings from 'vs/base/common/strings';\nimport { isFunction, isUndefinedOrNull } from 'vs/base/common/types';\n\n/**\n * An `IChannel` is an abstraction over a collection of commands.\n * You can `call` several commands on a channel, each taking at\n * most one single argument. A `call` always returns a promise\n * with at most one single return value.\n */\nexport interface IChannel {\n\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(event: string, arg?: any): Event<T>;\n}\n\n/**\n * An `IServerChannel` is the counter part to `IChannel`,\n * on the server-side. You should implement this interface\n * if you'd like to handle remote promises or events.\n */\nexport interface IServerChannel<TContext = string> {\n\tcall<T>(ctx: TContext, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(ctx: TContext, event: string, arg?: any): Event<T>;\n}\n\nexport const enum RequestType {\n\tPromise = 100,\n\tPromiseCancel = 101,\n\tEventListen = 102,\n\tEventDispose = 103\n}\n\nfunction requestTypeToStr(type: RequestType): string {\n\tswitch (type) {\n\t\tcase RequestType.Promise:\n\t\t\treturn 'req';\n\t\tcase RequestType.PromiseCancel:\n\t\t\treturn 'cancel';\n\t\tcase RequestType.EventListen:\n\t\t\treturn 'subscribe';\n\t\tcase RequestType.EventDispose:\n\t\t\treturn 'unsubscribe';\n\t}\n}\n\ntype IRawPromiseRequest = { type: RequestType.Promise; id: number; channelName: string; name: string; arg: any; };\ntype IRawPromiseCancelRequest = { type: RequestType.PromiseCancel, id: number };\ntype IRawEventListenRequest = { type: RequestType.EventListen; id: number; channelName: string; name: string; arg: any; };\ntype IRawEventDisposeRequest = { type: RequestType.EventDispose, id: number };\ntype IRawRequest = IRawPromiseRequest | IRawPromiseCancelRequest | IRawEventListenRequest | IRawEventDisposeRequest;\n\nexport const enum ResponseType {\n\tInitialize = 200,\n\tPromiseSuccess = 201,\n\tPromiseError = 202,\n\tPromiseErrorObj = 203,\n\tEventFire = 204\n}\n\nfunction responseTypeToStr(type: ResponseType): string {\n\tswitch (type) {\n\t\tcase ResponseType.Initialize:\n\t\t\treturn `init`;\n\t\tcase ResponseType.PromiseSuccess:\n\t\t\treturn `reply:`;\n\t\tcase ResponseType.PromiseError:\n\t\tcase ResponseType.PromiseErrorObj:\n\t\t\treturn `replyErr:`;\n\t\tcase ResponseType.EventFire:\n\t\t\treturn `event:`;\n\t}\n}\n\ntype IRawInitializeResponse = { type: ResponseType.Initialize };\ntype IRawPromiseSuccessResponse = { type: ResponseType.PromiseSuccess; id: number; data: any };\ntype IRawPromiseErrorResponse = { type: ResponseType.PromiseError; id: number; data: { message: string, name: string, stack: string[] | undefined } };\ntype IRawPromiseErrorObjResponse = { type: ResponseType.PromiseErrorObj; id: number; data: any };\ntype IRawEventFireResponse = { type: ResponseType.EventFire; id: number; data: any };\ntype IRawResponse = IRawInitializeResponse | IRawPromiseSuccessResponse | IRawPromiseErrorResponse | IRawPromiseErrorObjResponse | IRawEventFireResponse;\n\ninterface IHandler {\n\t(response: IRawResponse): void;\n}\n\nexport interface IMessagePassingProtocol {\n\tsend(buffer: VSBuffer): void;\n\tonMessage: Event<VSBuffer>;\n\t/**\n\t * Wait for the write buffer (if applicable) to become empty.\n\t */\n\tdrain?(): Promise<void>;\n}\n\nenum State {\n\tUninitialized,\n\tIdle\n}\n\n/**\n * An `IChannelServer` hosts a collection of channels. You are\n * able to register channels onto it, provided a channel name.\n */\nexport interface IChannelServer<TContext = string> {\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void;\n}\n\n/**\n * An `IChannelClient` has access to a collection of channels. You\n * are able to get those channels, given their channel name.\n */\nexport interface IChannelClient {\n\tgetChannel<T extends IChannel>(channelName: string): T;\n}\n\nexport interface Client<TContext> {\n\treadonly ctx: TContext;\n}\n\nexport interface IConnectionHub<TContext> {\n\treadonly connections: Connection<TContext>[];\n\treadonly onDidAddConnection: Event<Connection<TContext>>;\n\treadonly onDidRemoveConnection: Event<Connection<TContext>>;\n}\n\n/**\n * An `IClientRouter` is responsible for routing calls to specific\n * channels, in scenarios in which there are multiple possible\n * channels (each from a separate client) to pick from.\n */\nexport interface IClientRouter<TContext = string> {\n\trouteCall(hub: IConnectionHub<TContext>, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<Client<TContext>>;\n\trouteEvent(hub: IConnectionHub<TContext>, event: string, arg?: any): Promise<Client<TContext>>;\n}\n\n/**\n * Similar to the `IChannelClient`, you can get channels from this\n * collection of channels. The difference being that in the\n * `IRoutingChannelClient`, there are multiple clients providing\n * the same channel. You'll need to pass in an `IClientRouter` in\n * order to pick the right one.\n */\nexport interface IRoutingChannelClient<TContext = string> {\n\tgetChannel<T extends IChannel>(channelName: string, router?: IClientRouter<TContext>): T;\n}\n\ninterface IReader {\n\tread(bytes: number): VSBuffer;\n}\n\ninterface IWriter {\n\twrite(buffer: VSBuffer): void;\n}\n\nclass BufferReader implements IReader {\n\n\tprivate pos = 0;\n\n\tconstructor(private buffer: VSBuffer) { }\n\n\tread(bytes: number): VSBuffer {\n\t\tconst result = this.buffer.slice(this.pos, this.pos + bytes);\n\t\tthis.pos += result.byteLength;\n\t\treturn result;\n\t}\n}\n\nclass BufferWriter implements IWriter {\n\n\tprivate buffers: VSBuffer[] = [];\n\n\tget buffer(): VSBuffer {\n\t\treturn VSBuffer.concat(this.buffers);\n\t}\n\n\twrite(buffer: VSBuffer): void {\n\t\tthis.buffers.push(buffer);\n\t}\n}\n\nenum DataType {\n\tUndefined = 0,\n\tString = 1,\n\tBuffer = 2,\n\tVSBuffer = 3,\n\tArray = 4,\n\tObject = 5\n}\n\nfunction createSizeBuffer(size: number): VSBuffer {\n\tconst result = VSBuffer.alloc(4);\n\tresult.writeUInt32BE(size, 0);\n\treturn result;\n}\n\nfunction readSizeBuffer(reader: IReader): number {\n\treturn reader.read(4).readUInt32BE(0);\n}\n\nfunction createOneByteBuffer(value: number): VSBuffer {\n\tconst result = VSBuffer.alloc(1);\n\tresult.writeUInt8(value, 0);\n\treturn result;\n}\n\nconst BufferPresets = {\n\tUndefined: createOneByteBuffer(DataType.Undefined),\n\tString: createOneByteBuffer(DataType.String),\n\tBuffer: createOneByteBuffer(DataType.Buffer),\n\tVSBuffer: createOneByteBuffer(DataType.VSBuffer),\n\tArray: createOneByteBuffer(DataType.Array),\n\tObject: createOneByteBuffer(DataType.Object),\n};\n\ndeclare const Buffer: any;\nconst hasBuffer = (typeof Buffer !== 'undefined');\n\nfunction serialize(writer: IWriter, data: any): void {\n\tif (typeof data === 'undefined') {\n\t\twriter.write(BufferPresets.Undefined);\n\t} else if (typeof data === 'string') {\n\t\tconst buffer = VSBuffer.fromString(data);\n\t\twriter.write(BufferPresets.String);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t} else if (hasBuffer && Buffer.isBuffer(data)) {\n\t\tconst buffer = VSBuffer.wrap(data);\n\t\twriter.write(BufferPresets.Buffer);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t} else if (data instanceof VSBuffer) {\n\t\twriter.write(BufferPresets.VSBuffer);\n\t\twriter.write(createSizeBuffer(data.byteLength));\n\t\twriter.write(data);\n\t} else if (Array.isArray(data)) {\n\t\twriter.write(BufferPresets.Array);\n\t\twriter.write(createSizeBuffer(data.length));\n\n\t\tfor (const el of data) {\n\t\t\tserialize(writer, el);\n\t\t}\n\t} else {\n\t\tconst buffer = VSBuffer.fromString(JSON.stringify(data));\n\t\twriter.write(BufferPresets.Object);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t}\n}\n\nfunction deserialize(reader: IReader): any {\n\tconst type = reader.read(1).readUInt8(0);\n\n\tswitch (type) {\n\t\tcase DataType.Undefined: return undefined;\n\t\tcase DataType.String: return reader.read(readSizeBuffer(reader)).toString();\n\t\tcase DataType.Buffer: return reader.read(readSizeBuffer(reader)).buffer;\n\t\tcase DataType.VSBuffer: return reader.read(readSizeBuffer(reader));\n\t\tcase DataType.Array: {\n\t\t\tconst length = readSizeBuffer(reader);\n\t\t\tconst result: any[] = [];\n\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tresult.push(deserialize(reader));\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t\tcase DataType.Object: return JSON.parse(reader.read(readSizeBuffer(reader)).toString());\n\t}\n}\n\ninterface PendingRequest {\n\trequest: IRawPromiseRequest | IRawEventListenRequest;\n\ttimeoutTimer: any;\n}\n\nexport class ChannelServer<TContext = string> implements IChannelServer<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate activeRequests = new Map<number, IDisposable>();\n\tprivate protocolListener: IDisposable | null;\n\n\t// Requests might come in for channels which are not yet registered.\n\t// They will timeout after `timeoutDelay`.\n\tprivate pendingRequests = new Map<string, PendingRequest[]>();\n\n\tconstructor(private protocol: IMessagePassingProtocol, private ctx: TContext, private logger: IIPCLogger | null = null, private timeoutDelay: number = 1000) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onRawMessage(msg));\n\t\tthis.sendResponse({ type: ResponseType.Initialize });\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\n\t\t// https://github.com/microsoft/vscode/issues/72531\n\t\tsetTimeout(() => this.flushPendingRequests(channelName), 0);\n\t}\n\n\tprivate sendResponse(response: IRawResponse): void {\n\t\tswitch (response.type) {\n\t\t\tcase ResponseType.Initialize: {\n\t\t\t\tconst msgLength = this.send([response.type]);\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logOutgoing(msgLength, 0, RequestInitiator.OtherSide, responseTypeToStr(response.type));\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj: {\n\t\t\t\tconst msgLength = this.send([response.type, response.id], response.data);\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logOutgoing(msgLength, response.id, RequestInitiator.OtherSide, responseTypeToStr(response.type), response.data);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): number {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\treturn this.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: VSBuffer): number {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t\treturn message.byteLength;\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tprivate onRawMessage(message: VSBuffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type = header[0] as RequestType;\n\n\t\tswitch (type) {\n\t\t\tcase RequestType.Promise:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}: ${header[2]}.${header[3]}`, body);\n\t\t\t\t}\n\t\t\t\treturn this.onPromise({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.EventListen:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}: ${header[2]}.${header[3]}`, body);\n\t\t\t\t}\n\t\t\t\treturn this.onEventListen({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}`);\n\t\t\t\t}\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t\tcase RequestType.EventDispose:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}`);\n\t\t\t\t}\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t}\n\t}\n\n\tprivate onPromise(request: IRawPromiseRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\n\t\tif (!channel) {\n\t\t\tthis.collectPendingRequest(request);\n\t\t\treturn;\n\t\t}\n\n\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\tlet promise: Promise<any>;\n\n\t\ttry {\n\t\t\tpromise = channel.call(this.ctx, request.name, request.arg, cancellationTokenSource.token);\n\t\t} catch (err) {\n\t\t\tpromise = Promise.reject(err);\n\t\t}\n\n\t\tconst id = request.id;\n\n\t\tpromise.then(data => {\n\t\t\tthis.sendResponse(<IRawResponse>{ id, data, type: ResponseType.PromiseSuccess });\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}, err => {\n\t\t\tif (err instanceof Error) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid, data: {\n\t\t\t\t\t\tmessage: err.message,\n\t\t\t\t\t\tname: err.name,\n\t\t\t\t\t\tstack: err.stack ? (err.stack.split ? err.stack.split('\\n') : err.stack) : undefined\n\t\t\t\t\t}, type: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.sendResponse(<IRawResponse>{ id, data: err, type: ResponseType.PromiseErrorObj });\n\t\t\t}\n\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t});\n\n\t\tconst disposable = toDisposable(() => cancellationTokenSource.cancel());\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate onEventListen(request: IRawEventListenRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\n\t\tif (!channel) {\n\t\t\tthis.collectPendingRequest(request);\n\t\t\treturn;\n\t\t}\n\n\t\tconst id = request.id;\n\t\tconst event = channel.listen(this.ctx, request.name, request.arg);\n\t\tconst disposable = event(data => this.sendResponse(<IRawResponse>{ id, data, type: ResponseType.EventFire }));\n\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate disposeActiveRequest(request: IRawRequest): void {\n\t\tconst disposable = this.activeRequests.get(request.id);\n\n\t\tif (disposable) {\n\t\t\tdisposable.dispose();\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}\n\t}\n\n\tprivate collectPendingRequest(request: IRawPromiseRequest | IRawEventListenRequest): void {\n\t\tlet pendingRequests = this.pendingRequests.get(request.channelName);\n\n\t\tif (!pendingRequests) {\n\t\t\tpendingRequests = [];\n\t\t\tthis.pendingRequests.set(request.channelName, pendingRequests);\n\t\t}\n\n\t\tconst timer = setTimeout(() => {\n\t\t\tconsole.error(`Unknown channel: ${request.channelName}`);\n\n\t\t\tif (request.type === RequestType.Promise) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid: request.id,\n\t\t\t\t\tdata: { name: 'Unknown channel', message: `Channel name '${request.channelName}' timed out after ${this.timeoutDelay}ms`, stack: undefined },\n\t\t\t\t\ttype: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t}\n\t\t}, this.timeoutDelay);\n\n\t\tpendingRequests.push({ request, timeoutTimer: timer });\n\t}\n\n\tprivate flushPendingRequests(channelName: string): void {\n\t\tconst requests = this.pendingRequests.get(channelName);\n\n\t\tif (requests) {\n\t\t\tfor (const request of requests) {\n\t\t\t\tclearTimeout(request.timeoutTimer);\n\n\t\t\t\tswitch (request.request.type) {\n\t\t\t\t\tcase RequestType.Promise: this.onPromise(request.request); break;\n\t\t\t\t\tcase RequestType.EventListen: this.onEventListen(request.request); break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.pendingRequests.delete(channelName);\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tthis.activeRequests.forEach(d => d.dispose());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport const enum RequestInitiator {\n\tLocalSide = 0,\n\tOtherSide = 1\n}\n\nexport interface IIPCLogger {\n\tlogIncoming(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void;\n\tlogOutgoing(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void;\n}\n\nexport class ChannelClient implements IChannelClient, IDisposable {\n\n\tprivate isDisposed: boolean = false;\n\tprivate state: State = State.Uninitialized;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate handlers = new Map<number, IHandler>();\n\tprivate lastRequestId: number = 0;\n\tprivate protocolListener: IDisposable | null;\n\tprivate logger: IIPCLogger | null;\n\n\tprivate readonly _onDidInitialize = new Emitter<void>();\n\treadonly onDidInitialize = this._onDidInitialize.event;\n\n\tconstructor(private protocol: IMessagePassingProtocol, logger: IIPCLogger | null = null) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onBuffer(msg));\n\t\tthis.logger = logger;\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken) {\n\t\t\t\tif (that.isDisposed) {\n\t\t\t\t\treturn Promise.reject(errors.canceled());\n\t\t\t\t}\n\t\t\t\treturn that.requestPromise(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any) {\n\t\t\t\tif (that.isDisposed) {\n\t\t\t\t\treturn Promise.reject(errors.canceled());\n\t\t\t\t}\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate requestPromise(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.Promise;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(errors.canceled());\n\t\t}\n\n\t\tlet disposable: IDisposable;\n\n\t\tconst result = new Promise((c, e) => {\n\t\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\t\treturn e(errors.canceled());\n\t\t\t}\n\n\t\t\tconst doRequest = () => {\n\t\t\t\tconst handler: IHandler = response => {\n\t\t\t\t\tswitch (response.type) {\n\t\t\t\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tc(response.data);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseError:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tconst error = new Error(response.data.message);\n\t\t\t\t\t\t\t(<any>error).stack = response.data.stack;\n\t\t\t\t\t\t\terror.name = response.data.name;\n\t\t\t\t\t\t\te(error);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\te(response.data);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.handlers.set(id, handler);\n\t\t\t\tthis.sendRequest(request);\n\t\t\t};\n\n\t\t\tlet uninitializedPromise: CancelablePromise<void> | null = null;\n\t\t\tif (this.state === State.Idle) {\n\t\t\t\tdoRequest();\n\t\t\t} else {\n\t\t\t\tuninitializedPromise = createCancelablePromise(_ => this.whenInitialized());\n\t\t\t\tuninitializedPromise.then(() => {\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t\tdoRequest();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst cancel = () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.PromiseCancel });\n\t\t\t\t}\n\n\t\t\t\te(errors.canceled());\n\t\t\t};\n\n\t\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(cancel);\n\t\t\tdisposable = combinedDisposable(toDisposable(cancel), cancellationTokenListener);\n\t\t\tthis.activeRequests.add(disposable);\n\t\t});\n\n\t\treturn result.finally(() => { this.activeRequests.delete(disposable); });\n\t}\n\n\tprivate requestEvent(channelName: string, name: string, arg?: any): Event<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.EventListen;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tlet uninitializedPromise: CancelablePromise<void> | null = null;\n\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tuninitializedPromise = createCancelablePromise(_ => this.whenInitialized());\n\t\t\t\tuninitializedPromise.then(() => {\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t\tthis.activeRequests.add(emitter);\n\t\t\t\t\tthis.sendRequest(request);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.activeRequests.delete(emitter);\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.EventDispose });\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst handler: IHandler = (res: IRawResponse) => emitter.fire((res as IRawEventFireResponse).data);\n\t\tthis.handlers.set(id, handler);\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate sendRequest(request: IRawRequest): void {\n\t\tswitch (request.type) {\n\t\t\tcase RequestType.Promise:\n\t\t\tcase RequestType.EventListen: {\n\t\t\t\tconst msgLength = this.send([request.type, request.id, request.channelName, request.name], request.arg);\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logOutgoing(msgLength, request.id, RequestInitiator.LocalSide, `${requestTypeToStr(request.type)}: ${request.channelName}.${request.name}`, request.arg);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\tcase RequestType.EventDispose: {\n\t\t\t\tconst msgLength = this.send([request.type, request.id]);\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logOutgoing(msgLength, request.id, RequestInitiator.LocalSide, requestTypeToStr(request.type));\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): number {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\treturn this.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: VSBuffer): number {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t\treturn message.byteLength;\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tprivate onBuffer(message: VSBuffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type: ResponseType = header[0];\n\n\t\tswitch (type) {\n\t\t\tcase ResponseType.Initialize:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, 0, RequestInitiator.LocalSide, responseTypeToStr(type));\n\t\t\t\t}\n\t\t\t\treturn this.onResponse({ type: header[0] });\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.LocalSide, responseTypeToStr(type), body);\n\t\t\t\t}\n\t\t\t\treturn this.onResponse({ type: header[0], id: header[1], data: body });\n\t\t}\n\t}\n\n\tprivate onResponse(response: IRawResponse): void {\n\t\tif (response.type === ResponseType.Initialize) {\n\t\t\tthis.state = State.Idle;\n\t\t\tthis._onDidInitialize.fire();\n\t\t\treturn;\n\t\t}\n\n\t\tconst handler = this.handlers.get(response.id);\n\n\t\tif (handler) {\n\t\t\thandler(response);\n\t\t}\n\t}\n\n\t@memoize\n\tget onDidInitializePromise(): Promise<void> {\n\t\treturn Event.toPromise(this.onDidInitialize);\n\t}\n\n\tprivate whenInitialized(): Promise<void> {\n\t\tif (this.state === State.Idle) {\n\t\t\treturn Promise.resolve();\n\t\t} else {\n\t\t\treturn this.onDidInitializePromise;\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.isDisposed = true;\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tthis.activeRequests.forEach(p => p.dispose());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport interface ClientConnectionEvent {\n\tprotocol: IMessagePassingProtocol;\n\tonDidClientDisconnect: Event<void>;\n}\n\ninterface Connection<TContext> extends Client<TContext> {\n\treadonly channelServer: ChannelServer<TContext>;\n\treadonly channelClient: ChannelClient;\n}\n\n/**\n * An `IPCServer` is both a channel server and a routing channel\n * client.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCServer<TContext = string> implements IChannelServer<TContext>, IRoutingChannelClient<TContext>, IConnectionHub<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate _connections = new Set<Connection<TContext>>();\n\n\tprivate readonly _onDidAddConnection = new Emitter<Connection<TContext>>();\n\treadonly onDidAddConnection: Event<Connection<TContext>> = this._onDidAddConnection.event;\n\n\tprivate readonly _onDidRemoveConnection = new Emitter<Connection<TContext>>();\n\treadonly onDidRemoveConnection: Event<Connection<TContext>> = this._onDidRemoveConnection.event;\n\n\tget connections(): Connection<TContext>[] {\n\t\tconst result: Connection<TContext>[] = [];\n\t\tthis._connections.forEach(ctx => result.push(ctx));\n\t\treturn result;\n\t}\n\n\tconstructor(onDidClientConnect: Event<ClientConnectionEvent>) {\n\t\tonDidClientConnect(({ protocol, onDidClientDisconnect }) => {\n\t\t\tconst onFirstMessage = Event.once(protocol.onMessage);\n\n\t\t\tonFirstMessage(msg => {\n\t\t\t\tconst reader = new BufferReader(msg);\n\t\t\t\tconst ctx = deserialize(reader) as TContext;\n\n\t\t\t\tconst channelServer = new ChannelServer(protocol, ctx);\n\t\t\t\tconst channelClient = new ChannelClient(protocol);\n\n\t\t\t\tthis.channels.forEach((channel, name) => channelServer.registerChannel(name, channel));\n\n\t\t\t\tconst connection: Connection<TContext> = { channelServer, channelClient, ctx };\n\t\t\t\tthis._connections.add(connection);\n\t\t\t\tthis._onDidAddConnection.fire(connection);\n\n\t\t\t\tonDidClientDisconnect(() => {\n\t\t\t\t\tchannelServer.dispose();\n\t\t\t\t\tchannelClient.dispose();\n\t\t\t\t\tthis._connections.delete(connection);\n\t\t\t\t\tthis._onDidRemoveConnection.fire(connection);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Get a channel from a remote client. When passed a router,\n\t * one can specify which client it wants to call and listen to/from.\n\t * Otherwise, when calling without a router, a random client will\n\t * be selected and when listening without a router, every client\n\t * will be listened to.\n\t */\n\tgetChannel<T extends IChannel>(channelName: string, router: IClientRouter<TContext>): T;\n\tgetChannel<T extends IChannel>(channelName: string, clientFilter: (client: Client<TContext>) => boolean): T;\n\tgetChannel<T extends IChannel>(channelName: string, routerOrClientFilter: IClientRouter<TContext> | ((client: Client<TContext>) => boolean)): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\tlet connectionPromise: Promise<Client<TContext>>;\n\n\t\t\t\tif (isFunction(routerOrClientFilter)) {\n\t\t\t\t\t// when no router is provided, we go random client picking\n\t\t\t\t\tlet connection = getRandomElement(that.connections.filter(routerOrClientFilter));\n\n\t\t\t\t\tconnectionPromise = connection\n\t\t\t\t\t\t// if we found a client, let's call on it\n\t\t\t\t\t\t? Promise.resolve(connection)\n\t\t\t\t\t\t// else, let's wait for a client to come along\n\t\t\t\t\t\t: Event.toPromise(Event.filter(that.onDidAddConnection, routerOrClientFilter));\n\t\t\t\t} else {\n\t\t\t\t\tconnectionPromise = routerOrClientFilter.routeCall(that, command, arg);\n\t\t\t\t}\n\n\t\t\t\tconst channelPromise = connectionPromise\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.call(command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any): Event<T> {\n\t\t\t\tif (isFunction(routerOrClientFilter)) {\n\t\t\t\t\treturn that.getMulticastEvent(channelName, routerOrClientFilter, event, arg);\n\t\t\t\t}\n\n\t\t\t\tconst channelPromise = routerOrClientFilter.routeEvent(that, event, arg)\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.listen(event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate getMulticastEvent<T extends IChannel>(channelName: string, clientFilter: (client: Client<TContext>) => boolean, eventName: string, arg: any): Event<T> {\n\t\tconst that = this;\n\t\tlet disposables = new DisposableStore();\n\n\t\t// Create an emitter which hooks up to all clients\n\t\t// as soon as first listener is added. It also\n\t\t// disconnects from all clients as soon as the last listener\n\t\t// is removed.\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tdisposables = new DisposableStore();\n\n\t\t\t\t// The event multiplexer is useful since the active\n\t\t\t\t// client list is dynamic. We need to hook up and disconnection\n\t\t\t\t// to/from clients as they come and go.\n\t\t\t\tconst eventMultiplexer = new EventMultiplexer<T>();\n\t\t\t\tconst map = new Map<Connection<TContext>, IDisposable>();\n\n\t\t\t\tconst onDidAddConnection = (connection: Connection<TContext>) => {\n\t\t\t\t\tconst channel = connection.channelClient.getChannel(channelName);\n\t\t\t\t\tconst event = channel.listen<T>(eventName, arg);\n\t\t\t\t\tconst disposable = eventMultiplexer.add(event);\n\n\t\t\t\t\tmap.set(connection, disposable);\n\t\t\t\t};\n\n\t\t\t\tconst onDidRemoveConnection = (connection: Connection<TContext>) => {\n\t\t\t\t\tconst disposable = map.get(connection);\n\n\t\t\t\t\tif (!disposable) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\tmap.delete(connection);\n\t\t\t\t};\n\n\t\t\t\tthat.connections.filter(clientFilter).forEach(onDidAddConnection);\n\t\t\t\tEvent.filter(that.onDidAddConnection, clientFilter)(onDidAddConnection, undefined, disposables);\n\t\t\t\tthat.onDidRemoveConnection(onDidRemoveConnection, undefined, disposables);\n\t\t\t\teventMultiplexer.event(emitter.fire, emitter, disposables);\n\n\t\t\t\tdisposables.add(eventMultiplexer);\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tdisposables.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\n\t\tthis._connections.forEach(connection => {\n\t\t\tconnection.channelServer.registerChannel(channelName, channel);\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis.channels.clear();\n\t\tthis._connections.clear();\n\t\tthis._onDidAddConnection.dispose();\n\t\tthis._onDidRemoveConnection.dispose();\n\t}\n}\n\n/**\n * An `IPCClient` is both a channel client and a channel server.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCClient<TContext = string> implements IChannelClient, IChannelServer<TContext>, IDisposable {\n\n\tprivate channelClient: ChannelClient;\n\tprivate channelServer: ChannelServer<TContext>;\n\n\tconstructor(protocol: IMessagePassingProtocol, ctx: TContext, ipcLogger: IIPCLogger | null = null) {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, ctx);\n\t\tprotocol.send(writer.buffer);\n\n\t\tthis.channelClient = new ChannelClient(protocol, ipcLogger);\n\t\tthis.channelServer = new ChannelServer(protocol, ctx, ipcLogger);\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\treturn this.channelClient.getChannel(channelName) as T;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channelServer.registerChannel(channelName, channel);\n\t}\n\n\tdispose(): void {\n\t\tthis.channelClient.dispose();\n\t\tthis.channelServer.dispose();\n\t}\n}\n\nexport function getDelayedChannel<T extends IChannel>(promise: Promise<T>): T {\n\treturn {\n\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\treturn promise.then(c => c.call<T>(command, arg, cancellationToken));\n\t\t},\n\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tconst relay = new Relay<any>();\n\t\t\tpromise.then(c => relay.input = c.listen(event, arg));\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport function getNextTickChannel<T extends IChannel>(channel: T): T {\n\tlet didTick = false;\n\n\treturn {\n\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.call(command, arg, cancellationToken);\n\t\t\t}\n\n\t\t\treturn timeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => channel.call<T>(command, arg, cancellationToken));\n\t\t},\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.listen<T>(event, arg);\n\t\t\t}\n\n\t\t\tconst relay = new Relay<T>();\n\n\t\t\ttimeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => relay.input = channel.listen<T>(event, arg));\n\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport class StaticRouter<TContext = string> implements IClientRouter<TContext> {\n\n\tconstructor(private fn: (ctx: TContext) => boolean | Promise<boolean>) { }\n\n\trouteCall(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\trouteEvent(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\tprivate async route(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\tfor (const connection of hub.connections) {\n\t\t\tif (await Promise.resolve(this.fn(connection.ctx))) {\n\t\t\t\treturn Promise.resolve(connection);\n\t\t\t}\n\t\t}\n\n\t\tawait Event.toPromise(hub.onDidAddConnection);\n\t\treturn await this.route(hub);\n\t}\n}\n\n/**\n * Use ProxyChannels to automatically wrapping and unwrapping\n * services to/from IPC channels, instead of manually wrapping\n * each service method and event.\n *\n * Restrictions:\n * - If marshalling is enabled, only `URI` and `RegExp` is converted\n *   automatically for you\n * - Events must follow the naming convention `onUpperCase`\n * - `CancellationToken` is currently not supported\n * - If a context is provided, you can use `AddFirstParameterToFunctions`\n *   utility to signal this in the receiving side type\n */\nexport namespace ProxyChannel {\n\n\texport interface IProxyOptions {\n\n\t\t/**\n\t\t * Disables automatic marshalling of `URI`.\n\t\t * If marshalling is disabled, `UriComponents`\n\t\t * must be used instead.\n\t\t */\n\t\tdisableMarshalling?: boolean;\n\t}\n\n\texport interface ICreateServiceChannelOptions extends IProxyOptions { }\n\n\texport function fromService(service: unknown, options?: ICreateServiceChannelOptions): IServerChannel {\n\t\tconst handler = service as { [key: string]: unknown };\n\t\tconst disableMarshalling = options && options.disableMarshalling;\n\n\t\t// Buffer any event that should be supported by\n\t\t// iterating over all property keys and finding them\n\t\tconst mapEventNameToEvent = new Map<string, Event<unknown>>();\n\t\tfor (const key in handler) {\n\t\t\tif (propertyIsEvent(key)) {\n\t\t\t\tmapEventNameToEvent.set(key, Event.buffer(handler[key] as Event<unknown>, true));\n\t\t\t}\n\t\t}\n\n\t\treturn new class implements IServerChannel {\n\n\t\t\tlisten<T>(_: unknown, event: string, arg: any): Event<T> {\n\t\t\t\tconst eventImpl = mapEventNameToEvent.get(event);\n\t\t\t\tif (eventImpl) {\n\t\t\t\t\treturn eventImpl as Event<T>;\n\t\t\t\t}\n\n\t\t\t\tif (propertyIsDynamicEvent(event)) {\n\t\t\t\t\tconst target = handler[event];\n\t\t\t\t\tif (typeof target === 'function') {\n\t\t\t\t\t\treturn target.call(handler, arg);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthrow new Error(`Event not found: ${event}`);\n\t\t\t}\n\n\t\t\tcall(_: unknown, command: string, args?: any[]): Promise<any> {\n\t\t\t\tconst target = handler[command];\n\t\t\t\tif (typeof target === 'function') {\n\n\t\t\t\t\t// Revive unless marshalling disabled\n\t\t\t\t\tif (!disableMarshalling && Array.isArray(args)) {\n\t\t\t\t\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\t\t\t\t\targs[i] = revive(args[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn target.apply(handler, args);\n\t\t\t\t}\n\n\t\t\t\tthrow new Error(`Method not found: ${command}`);\n\t\t\t}\n\t\t};\n\t}\n\n\texport interface ICreateProxyServiceOptions extends IProxyOptions {\n\n\t\t/**\n\t\t * If provided, will add the value of `context`\n\t\t * to each method call to the target.\n\t\t */\n\t\tcontext?: unknown;\n\n\t\t/**\n\t\t * If provided, will not proxy any of the properties\n\t\t * that are part of the Map but rather return that value.\n\t\t */\n\t\tproperties?: Map<string, unknown>;\n\t}\n\n\texport function toService<T>(channel: IChannel, options?: ICreateProxyServiceOptions): T {\n\t\tconst disableMarshalling = options && options.disableMarshalling;\n\n\t\treturn new Proxy({}, {\n\t\t\tget(_target: T, propKey: PropertyKey) {\n\t\t\t\tif (typeof propKey === 'string') {\n\n\t\t\t\t\t// Check for predefined values\n\t\t\t\t\tif (options?.properties?.has(propKey)) {\n\t\t\t\t\t\treturn options.properties.get(propKey);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Dynamic Event\n\t\t\t\t\tif (propertyIsDynamicEvent(propKey)) {\n\t\t\t\t\t\treturn function (arg: any) {\n\t\t\t\t\t\t\treturn channel.listen(propKey, arg);\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Event\n\t\t\t\t\tif (propertyIsEvent(propKey)) {\n\t\t\t\t\t\treturn channel.listen(propKey);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Function\n\t\t\t\t\treturn async function (...args: any[]) {\n\n\t\t\t\t\t\t// Add context if any\n\t\t\t\t\t\tlet methodArgs: any[];\n\t\t\t\t\t\tif (options && !isUndefinedOrNull(options.context)) {\n\t\t\t\t\t\t\tmethodArgs = [options.context, ...args];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmethodArgs = args;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst result = await channel.call(propKey, methodArgs);\n\n\t\t\t\t\t\t// Revive unless marshalling disabled\n\t\t\t\t\t\tif (!disableMarshalling) {\n\t\t\t\t\t\t\treturn revive(result);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tthrow new Error(`Property not found: ${String(propKey)}`);\n\t\t\t}\n\t\t}) as T;\n\t}\n\n\tfunction propertyIsEvent(name: string): boolean {\n\t\t// Assume a property is an event if it has a form of \"onSomething\"\n\t\treturn name[0] === 'o' && name[1] === 'n' && strings.isUpperAsciiLetter(name.charCodeAt(2));\n\t}\n\n\tfunction propertyIsDynamicEvent(name: string): boolean {\n\t\t// Assume a property is a dynamic event (a method that returns an event) if it has a form of \"onDynamicSomething\"\n\t\treturn /^onDynamic/.test(name) && strings.isUpperAsciiLetter(name.charCodeAt(9));\n\t}\n}\n\nconst colorTables = [\n\t['#2977B1', '#FC802D', '#34A13A', '#D3282F', '#9366BA'],\n\t['#8B564C', '#E177C0', '#7F7F7F', '#BBBE3D', '#2EBECD']\n];\n\nfunction prettyWithoutArrays(data: any): any {\n\tif (Array.isArray(data)) {\n\t\treturn data;\n\t}\n\tif (data && typeof data === 'object' && typeof data.toString === 'function') {\n\t\tlet result = data.toString();\n\t\tif (result !== '[object Object]') {\n\t\t\treturn result;\n\t\t}\n\t}\n\treturn data;\n}\n\nfunction pretty(data: any): any {\n\tif (Array.isArray(data)) {\n\t\treturn data.map(prettyWithoutArrays);\n\t}\n\treturn prettyWithoutArrays(data);\n}\n\nexport function logWithColors(direction: string, totalLength: number, msgLength: number, req: number, initiator: RequestInitiator, str: string, data: any): void {\n\tdata = pretty(data);\n\n\tconst colorTable = colorTables[initiator];\n\tconst color = colorTable[req % colorTable.length];\n\tlet args = [`%c[${direction}]%c[${String(totalLength).padStart(7, ' ')}]%c[len: ${String(msgLength).padStart(5, ' ')}]%c${String(req).padStart(5, ' ')} - ${str}`, 'color: darkgreen', 'color: grey', 'color: grey', `color: ${color}`];\n\tif (/\\($/.test(str)) {\n\t\targs = args.concat(data);\n\t\targs.push(')');\n\t} else {\n\t\targs.push(data);\n\t}\n\tconsole.log.apply(console, args as [string, ...string[]]);\n}\n\nexport class IPCLogger implements IIPCLogger {\n\tprivate _totalIncoming = 0;\n\tprivate _totalOutgoing = 0;\n\n\tconstructor(\n\t\tprivate readonly _outgoingPrefix: string,\n\t\tprivate readonly _incomingPrefix: string,\n\t) { }\n\n\tpublic logOutgoing(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void {\n\t\tthis._totalOutgoing += msgLength;\n\t\tlogWithColors(this._outgoingPrefix, this._totalOutgoing, msgLength, requestId, initiator, str, data);\n\t}\n\n\tpublic logIncoming(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void {\n\t\tthis._totalIncoming += msgLength;\n\t\tlogWithColors(this._incomingPrefix, this._totalIncoming, msgLength, requestId, initiator, str, data);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { IMessagePassingProtocol, IPCClient } from 'vs/base/parts/ipc/common/ipc';\n\n/**\n * Declare minimal `MessageEvent` and `MessagePort` interfaces here\n * so that this utility can be used both from `browser` and\n * `electron-main` namespace where message ports are available.\n */\n\nexport interface MessageEvent {\n\n\t/**\n\t * For our use we only consider `Uint8Array` a valid data transfer\n\t * via message ports because our protocol implementation is buffer based.\n\t */\n\tdata: Uint8Array;\n}\n\nexport interface MessagePort {\n\n\taddEventListener(type: 'message', listener: (this: MessagePort, e: MessageEvent) => unknown): void;\n\tremoveEventListener(type: 'message', listener: (this: MessagePort, e: MessageEvent) => unknown): void;\n\n\tpostMessage(message: Uint8Array): void;\n\n\tstart(): void;\n\tclose(): void;\n}\n\n/**\n * The MessagePort `Protocol` leverages MessagePort style IPC communication\n * for the implementation of the `IMessagePassingProtocol`. That style of API\n * is a simple `onmessage` / `postMessage` pattern.\n */\nexport class Protocol implements IMessagePassingProtocol {\n\n\treadonly onMessage = Event.fromDOMEventEmitter<VSBuffer>(this.port, 'message', (e: MessageEvent) => VSBuffer.wrap(e.data));\n\n\tconstructor(private port: MessagePort) {\n\n\t\t// we must call start() to ensure messages are flowing\n\t\tport.start();\n\t}\n\n\tsend(message: VSBuffer): void {\n\t\tthis.port.postMessage(message.buffer);\n\t}\n\n\tdisconnect(): void {\n\t\tthis.port.close();\n\t}\n}\n\n/**\n * An implementation of a `IPCClient` on top of MessagePort style IPC communication.\n */\nexport class Client extends IPCClient implements IDisposable {\n\n\tprivate protocol: Protocol;\n\n\tconstructor(port: MessagePort, clientId: string) {\n\t\tconst protocol = new Protocol(port);\n\t\tsuper(protocol, clientId);\n\n\t\tthis.protocol = protocol;\n\t}\n\n\toverride dispose(): void {\n\t\tthis.protocol.disconnect();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, dispose, IDisposable } from 'vs/base/common/lifecycle';\nimport { IIPCLogger, IMessagePassingProtocol, IPCClient } from 'vs/base/parts/ipc/common/ipc';\n\nexport const enum SocketDiagnosticsEventType {\n\tCreated = 'created',\n\tRead = 'read',\n\tWrite = 'write',\n\tOpen = 'open',\n\tError = 'error',\n\tClose = 'close',\n\n\tBrowserWebSocketBlobReceived = 'browserWebSocketBlobReceived',\n\n\tNodeEndReceived = 'nodeEndReceived',\n\tNodeEndSent = 'nodeEndSent',\n\tNodeDrainBegin = 'nodeDrainBegin',\n\tNodeDrainEnd = 'nodeDrainEnd',\n\n\tzlibInflateError = 'zlibInflateError',\n\tzlibInflateData = 'zlibInflateData',\n\tzlibInflateInitialWrite = 'zlibInflateInitialWrite',\n\tzlibInflateInitialFlushFired = 'zlibInflateInitialFlushFired',\n\tzlibInflateWrite = 'zlibInflateWrite',\n\tzlibInflateFlushFired = 'zlibInflateFlushFired',\n\tzlibDeflateError = 'zlibDeflateError',\n\tzlibDeflateData = 'zlibDeflateData',\n\tzlibDeflateWrite = 'zlibDeflateWrite',\n\tzlibDeflateFlushFired = 'zlibDeflateFlushFired',\n\n\tWebSocketNodeSocketWrite = 'webSocketNodeSocketWrite',\n\tWebSocketNodeSocketPeekedHeader = 'webSocketNodeSocketPeekedHeader',\n\tWebSocketNodeSocketReadHeader = 'webSocketNodeSocketReadHeader',\n\tWebSocketNodeSocketReadData = 'webSocketNodeSocketReadData',\n\tWebSocketNodeSocketUnmaskedData = 'webSocketNodeSocketUnmaskedData',\n\tWebSocketNodeSocketDrainBegin = 'webSocketNodeSocketDrainBegin',\n\tWebSocketNodeSocketDrainEnd = 'webSocketNodeSocketDrainEnd',\n\n\tProtocolHeaderRead = 'protocolHeaderRead',\n\tProtocolMessageRead = 'protocolMessageRead',\n\tProtocolHeaderWrite = 'protocolHeaderWrite',\n\tProtocolMessageWrite = 'protocolMessageWrite',\n\tProtocolWrite = 'protocolWrite',\n}\n\nexport namespace SocketDiagnostics {\n\n\texport const enableDiagnostics = false;\n\n\texport interface IRecord {\n\t\ttimestamp: number;\n\t\tid: string;\n\t\tlabel: string;\n\t\ttype: SocketDiagnosticsEventType;\n\t\tbuff?: VSBuffer;\n\t\tdata?: any;\n\t}\n\n\texport const records: IRecord[] = [];\n\tconst socketIds = new WeakMap<any, string>();\n\tlet lastUsedSocketId = 0;\n\n\tfunction getSocketId(nativeObject: any, label: string): string {\n\t\tif (!socketIds.has(nativeObject)) {\n\t\t\tconst id = String(++lastUsedSocketId);\n\t\t\tsocketIds.set(nativeObject, id);\n\t\t}\n\t\treturn socketIds.get(nativeObject)!;\n\t}\n\n\texport function traceSocketEvent(nativeObject: any, socketDebugLabel: string, type: SocketDiagnosticsEventType, data?: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView | any): void {\n\t\tif (!enableDiagnostics) {\n\t\t\treturn;\n\t\t}\n\t\tconst id = getSocketId(nativeObject, socketDebugLabel);\n\n\t\tif (data instanceof VSBuffer || data instanceof Uint8Array || data instanceof ArrayBuffer || ArrayBuffer.isView(data)) {\n\t\t\tconst copiedData = VSBuffer.alloc(data.byteLength);\n\t\t\tcopiedData.set(data);\n\t\t\trecords.push({ timestamp: Date.now(), id, label: socketDebugLabel, type, buff: copiedData });\n\t\t} else {\n\t\t\t// data is a custom object\n\t\t\trecords.push({ timestamp: Date.now(), id, label: socketDebugLabel, type, data: data });\n\t\t}\n\t}\n}\n\nexport const enum SocketCloseEventType {\n\tNodeSocketCloseEvent = 0,\n\tWebSocketCloseEvent = 1\n}\n\nexport interface NodeSocketCloseEvent {\n\t/**\n\t * The type of the event\n\t */\n\treadonly type: SocketCloseEventType.NodeSocketCloseEvent;\n\t/**\n\t * `true` if the socket had a transmission error.\n\t */\n\treadonly hadError: boolean;\n\t/**\n\t * Underlying error.\n\t */\n\treadonly error: Error | undefined\n}\n\nexport interface WebSocketCloseEvent {\n\t/**\n\t * The type of the event\n\t */\n\treadonly type: SocketCloseEventType.WebSocketCloseEvent;\n\t/**\n\t * Returns the WebSocket connection close code provided by the server.\n\t */\n\treadonly code: number;\n\t/**\n\t * Returns the WebSocket connection close reason provided by the server.\n\t */\n\treadonly reason: string;\n\t/**\n\t * Returns true if the connection closed cleanly; false otherwise.\n\t */\n\treadonly wasClean: boolean;\n\t/**\n\t * Underlying event.\n\t */\n\treadonly event: any | undefined;\n}\n\nexport type SocketCloseEvent = NodeSocketCloseEvent | WebSocketCloseEvent | undefined;\n\nexport interface ISocket extends IDisposable {\n\tonData(listener: (e: VSBuffer) => void): IDisposable;\n\tonClose(listener: (e: SocketCloseEvent) => void): IDisposable;\n\tonEnd(listener: () => void): IDisposable;\n\twrite(buffer: VSBuffer): void;\n\tend(): void;\n\tdrain(): Promise<void>;\n\n\ttraceSocketEvent(type: SocketDiagnosticsEventType, data?: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView | any): void;\n}\n\nlet emptyBuffer: VSBuffer | null = null;\nfunction getEmptyBuffer(): VSBuffer {\n\tif (!emptyBuffer) {\n\t\temptyBuffer = VSBuffer.alloc(0);\n\t}\n\treturn emptyBuffer;\n}\n\nexport class ChunkStream {\n\n\tprivate _chunks: VSBuffer[];\n\tprivate _totalLength: number;\n\n\tpublic get byteLength() {\n\t\treturn this._totalLength;\n\t}\n\n\tconstructor() {\n\t\tthis._chunks = [];\n\t\tthis._totalLength = 0;\n\t}\n\n\tpublic acceptChunk(buff: VSBuffer) {\n\t\tthis._chunks.push(buff);\n\t\tthis._totalLength += buff.byteLength;\n\t}\n\n\tpublic read(byteCount: number): VSBuffer {\n\t\treturn this._read(byteCount, true);\n\t}\n\n\tpublic peek(byteCount: number): VSBuffer {\n\t\treturn this._read(byteCount, false);\n\t}\n\n\tprivate _read(byteCount: number, advance: boolean): VSBuffer {\n\n\t\tif (byteCount === 0) {\n\t\t\treturn getEmptyBuffer();\n\t\t}\n\n\t\tif (byteCount > this._totalLength) {\n\t\t\tthrow new Error(`Cannot read so many bytes!`);\n\t\t}\n\n\t\tif (this._chunks[0].byteLength === byteCount) {\n\t\t\t// super fast path, precisely first chunk must be returned\n\t\t\tconst result = this._chunks[0];\n\t\t\tif (advance) {\n\t\t\t\tthis._chunks.shift();\n\t\t\t\tthis._totalLength -= byteCount;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tif (this._chunks[0].byteLength > byteCount) {\n\t\t\t// fast path, the reading is entirely within the first chunk\n\t\t\tconst result = this._chunks[0].slice(0, byteCount);\n\t\t\tif (advance) {\n\t\t\t\tthis._chunks[0] = this._chunks[0].slice(byteCount);\n\t\t\t\tthis._totalLength -= byteCount;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tlet result = VSBuffer.alloc(byteCount);\n\t\tlet resultOffset = 0;\n\t\tlet chunkIndex = 0;\n\t\twhile (byteCount > 0) {\n\t\t\tconst chunk = this._chunks[chunkIndex];\n\t\t\tif (chunk.byteLength > byteCount) {\n\t\t\t\t// this chunk will survive\n\t\t\t\tconst chunkPart = chunk.slice(0, byteCount);\n\t\t\t\tresult.set(chunkPart, resultOffset);\n\t\t\t\tresultOffset += byteCount;\n\n\t\t\t\tif (advance) {\n\t\t\t\t\tthis._chunks[chunkIndex] = chunk.slice(byteCount);\n\t\t\t\t\tthis._totalLength -= byteCount;\n\t\t\t\t}\n\n\t\t\t\tbyteCount -= byteCount;\n\t\t\t} else {\n\t\t\t\t// this chunk will be entirely read\n\t\t\t\tresult.set(chunk, resultOffset);\n\t\t\t\tresultOffset += chunk.byteLength;\n\n\t\t\t\tif (advance) {\n\t\t\t\t\tthis._chunks.shift();\n\t\t\t\t\tthis._totalLength -= chunk.byteLength;\n\t\t\t\t} else {\n\t\t\t\t\tchunkIndex++;\n\t\t\t\t}\n\n\t\t\t\tbyteCount -= chunk.byteLength;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n\nconst enum ProtocolMessageType {\n\tNone = 0,\n\tRegular = 1,\n\tControl = 2,\n\tAck = 3,\n\tDisconnect = 5,\n\tReplayRequest = 6,\n\tPause = 7,\n\tResume = 8\n}\n\nfunction protocolMessageTypeToString(messageType: ProtocolMessageType) {\n\tswitch (messageType) {\n\t\tcase ProtocolMessageType.None: return 'None';\n\t\tcase ProtocolMessageType.Regular: return 'Regular';\n\t\tcase ProtocolMessageType.Control: return 'Control';\n\t\tcase ProtocolMessageType.Ack: return 'Ack';\n\t\tcase ProtocolMessageType.Disconnect: return 'Disconnect';\n\t\tcase ProtocolMessageType.ReplayRequest: return 'ReplayRequest';\n\t\tcase ProtocolMessageType.Pause: return 'PauseWriting';\n\t\tcase ProtocolMessageType.Resume: return 'ResumeWriting';\n\t}\n}\n\nexport const enum ProtocolConstants {\n\tHeaderLength = 13,\n\t/**\n\t * Send an Acknowledge message at most 2 seconds later...\n\t */\n\tAcknowledgeTime = 2000, // 2 seconds\n\t/**\n\t * If there is a sent message that has been unacknowledged for 20 seconds,\n\t * and we didn't see any incoming server data in the past 20 seconds,\n\t * then consider the connection has timed out.\n\t */\n\tTimeoutTime = 20000, // 20 seconds\n\t/**\n\t * If there is no reconnection within this time-frame, consider the connection permanently closed...\n\t */\n\tReconnectionGraceTime = 3 * 60 * 60 * 1000, // 3hrs\n\t/**\n\t * Maximal grace time between the first and the last reconnection...\n\t */\n\tReconnectionShortGraceTime = 5 * 60 * 1000, // 5min\n}\n\nclass ProtocolMessage {\n\n\tpublic writtenTime: number;\n\n\tconstructor(\n\t\tpublic readonly type: ProtocolMessageType,\n\t\tpublic readonly id: number,\n\t\tpublic readonly ack: number,\n\t\tpublic readonly data: VSBuffer\n\t) {\n\t\tthis.writtenTime = 0;\n\t}\n\n\tpublic get size(): number {\n\t\treturn this.data.byteLength;\n\t}\n}\n\nclass ProtocolReader extends Disposable {\n\n\tprivate readonly _socket: ISocket;\n\tprivate _isDisposed: boolean;\n\tprivate readonly _incomingData: ChunkStream;\n\tpublic lastReadTime: number;\n\n\tprivate readonly _onMessage = this._register(new Emitter<ProtocolMessage>());\n\tpublic readonly onMessage: Event<ProtocolMessage> = this._onMessage.event;\n\n\tprivate readonly _state = {\n\t\treadHead: true,\n\t\treadLen: ProtocolConstants.HeaderLength,\n\t\tmessageType: ProtocolMessageType.None,\n\t\tid: 0,\n\t\tack: 0\n\t};\n\n\tconstructor(socket: ISocket) {\n\t\tsuper();\n\t\tthis._socket = socket;\n\t\tthis._isDisposed = false;\n\t\tthis._incomingData = new ChunkStream();\n\t\tthis._register(this._socket.onData(data => this.acceptChunk(data)));\n\t\tthis.lastReadTime = Date.now();\n\t}\n\n\tpublic acceptChunk(data: VSBuffer | null): void {\n\t\tif (!data || data.byteLength === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.lastReadTime = Date.now();\n\n\t\tthis._incomingData.acceptChunk(data);\n\n\t\twhile (this._incomingData.byteLength >= this._state.readLen) {\n\n\t\t\tconst buff = this._incomingData.read(this._state.readLen);\n\n\t\t\tif (this._state.readHead) {\n\t\t\t\t// buff is the header\n\n\t\t\t\t// save new state => next time will read the body\n\t\t\t\tthis._state.readHead = false;\n\t\t\t\tthis._state.readLen = buff.readUInt32BE(9);\n\t\t\t\tthis._state.messageType = buff.readUInt8(0);\n\t\t\t\tthis._state.id = buff.readUInt32BE(1);\n\t\t\t\tthis._state.ack = buff.readUInt32BE(5);\n\n\t\t\t\tthis._socket.traceSocketEvent(SocketDiagnosticsEventType.ProtocolHeaderRead, { messageType: protocolMessageTypeToString(this._state.messageType), id: this._state.id, ack: this._state.ack, messageSize: this._state.readLen });\n\n\t\t\t} else {\n\t\t\t\t// buff is the body\n\t\t\t\tconst messageType = this._state.messageType;\n\t\t\t\tconst id = this._state.id;\n\t\t\t\tconst ack = this._state.ack;\n\n\t\t\t\t// save new state => next time will read the header\n\t\t\t\tthis._state.readHead = true;\n\t\t\t\tthis._state.readLen = ProtocolConstants.HeaderLength;\n\t\t\t\tthis._state.messageType = ProtocolMessageType.None;\n\t\t\t\tthis._state.id = 0;\n\t\t\t\tthis._state.ack = 0;\n\n\t\t\t\tthis._socket.traceSocketEvent(SocketDiagnosticsEventType.ProtocolMessageRead, buff);\n\n\t\t\t\tthis._onMessage.fire(new ProtocolMessage(messageType, id, ack, buff));\n\n\t\t\t\tif (this._isDisposed) {\n\t\t\t\t\t// check if an event listener lead to our disposal\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic readEntireBuffer(): VSBuffer {\n\t\treturn this._incomingData.read(this._incomingData.byteLength);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._isDisposed = true;\n\t\tsuper.dispose();\n\t}\n}\n\nclass ProtocolWriter {\n\n\tprivate _isDisposed: boolean;\n\tprivate _isPaused: boolean;\n\tprivate readonly _socket: ISocket;\n\tprivate _data: VSBuffer[];\n\tprivate _totalLength: number;\n\tpublic lastWriteTime: number;\n\n\tconstructor(socket: ISocket) {\n\t\tthis._isDisposed = false;\n\t\tthis._isPaused = false;\n\t\tthis._socket = socket;\n\t\tthis._data = [];\n\t\tthis._totalLength = 0;\n\t\tthis.lastWriteTime = 0;\n\t}\n\n\tpublic dispose(): void {\n\t\ttry {\n\t\t\tthis.flush();\n\t\t} catch (err) {\n\t\t\t// ignore error, since the socket could be already closed\n\t\t}\n\t\tthis._isDisposed = true;\n\t}\n\n\tpublic drain(): Promise<void> {\n\t\tthis.flush();\n\t\treturn this._socket.drain();\n\t}\n\n\tpublic flush(): void {\n\t\t// flush\n\t\tthis._writeNow();\n\t}\n\n\tpublic pause(): void {\n\t\tthis._isPaused = true;\n\t}\n\n\tpublic resume(): void {\n\t\tthis._isPaused = false;\n\t\tthis._scheduleWriting();\n\t}\n\n\tpublic write(msg: ProtocolMessage) {\n\t\tif (this._isDisposed) {\n\t\t\t// ignore: there could be left-over promises which complete and then\n\t\t\t// decide to write a response, etc...\n\t\t\treturn;\n\t\t}\n\t\tmsg.writtenTime = Date.now();\n\t\tthis.lastWriteTime = Date.now();\n\t\tconst header = VSBuffer.alloc(ProtocolConstants.HeaderLength);\n\t\theader.writeUInt8(msg.type, 0);\n\t\theader.writeUInt32BE(msg.id, 1);\n\t\theader.writeUInt32BE(msg.ack, 5);\n\t\theader.writeUInt32BE(msg.data.byteLength, 9);\n\n\t\tthis._socket.traceSocketEvent(SocketDiagnosticsEventType.ProtocolHeaderWrite, { messageType: protocolMessageTypeToString(msg.type), id: msg.id, ack: msg.ack, messageSize: msg.data.byteLength });\n\t\tthis._socket.traceSocketEvent(SocketDiagnosticsEventType.ProtocolMessageWrite, msg.data);\n\n\t\tthis._writeSoon(header, msg.data);\n\t}\n\n\tprivate _bufferAdd(head: VSBuffer, body: VSBuffer): boolean {\n\t\tconst wasEmpty = this._totalLength === 0;\n\t\tthis._data.push(head, body);\n\t\tthis._totalLength += head.byteLength + body.byteLength;\n\t\treturn wasEmpty;\n\t}\n\n\tprivate _bufferTake(): VSBuffer {\n\t\tconst ret = VSBuffer.concat(this._data, this._totalLength);\n\t\tthis._data.length = 0;\n\t\tthis._totalLength = 0;\n\t\treturn ret;\n\t}\n\n\tprivate _writeSoon(header: VSBuffer, data: VSBuffer): void {\n\t\tif (this._bufferAdd(header, data)) {\n\t\t\tthis._scheduleWriting();\n\t\t}\n\t}\n\n\tprivate _writeNowTimeout: any = null;\n\tprivate _scheduleWriting(): void {\n\t\tif (this._writeNowTimeout) {\n\t\t\treturn;\n\t\t}\n\t\tthis._writeNowTimeout = setTimeout(() => {\n\t\t\tthis._writeNowTimeout = null;\n\t\t\tthis._writeNow();\n\t\t});\n\t}\n\n\tprivate _writeNow(): void {\n\t\tif (this._totalLength === 0) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._isPaused) {\n\t\t\treturn;\n\t\t}\n\t\tconst data = this._bufferTake();\n\t\tthis._socket.traceSocketEvent(SocketDiagnosticsEventType.ProtocolWrite, { byteLength: data.byteLength });\n\t\tthis._socket.write(data);\n\t}\n}\n\n/**\n * A message has the following format:\n * ```\n *     /-------------------------------|------\\\n *     |             HEADER            |      |\n *     |-------------------------------| DATA |\n *     | TYPE | ID | ACK | DATA_LENGTH |      |\n *     \\-------------------------------|------/\n * ```\n * The header is 9 bytes and consists of:\n *  - TYPE is 1 byte (ProtocolMessageType) - the message type\n *  - ID is 4 bytes (u32be) - the message id (can be 0 to indicate to be ignored)\n *  - ACK is 4 bytes (u32be) - the acknowledged message id (can be 0 to indicate to be ignored)\n *  - DATA_LENGTH is 4 bytes (u32be) - the length in bytes of DATA\n *\n * Only Regular messages are counted, other messages are not counted, nor acknowledged.\n */\nexport class Protocol extends Disposable implements IMessagePassingProtocol {\n\n\tprivate _socket: ISocket;\n\tprivate _socketWriter: ProtocolWriter;\n\tprivate _socketReader: ProtocolReader;\n\n\tprivate readonly _onMessage = new Emitter<VSBuffer>();\n\treadonly onMessage: Event<VSBuffer> = this._onMessage.event;\n\n\tprivate readonly _onDidDispose = new Emitter<void>();\n\treadonly onDidDispose: Event<void> = this._onDidDispose.event;\n\n\tconstructor(socket: ISocket) {\n\t\tsuper();\n\t\tthis._socket = socket;\n\t\tthis._socketWriter = this._register(new ProtocolWriter(this._socket));\n\t\tthis._socketReader = this._register(new ProtocolReader(this._socket));\n\n\t\tthis._register(this._socketReader.onMessage((msg) => {\n\t\t\tif (msg.type === ProtocolMessageType.Regular) {\n\t\t\t\tthis._onMessage.fire(msg.data);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this._socket.onClose(() => this._onDidDispose.fire()));\n\t}\n\n\tdrain(): Promise<void> {\n\t\treturn this._socketWriter.drain();\n\t}\n\n\tgetSocket(): ISocket {\n\t\treturn this._socket;\n\t}\n\n\tsendDisconnect(): void {\n\t\t// Nothing to do...\n\t}\n\n\tsend(buffer: VSBuffer): void {\n\t\tthis._socketWriter.write(new ProtocolMessage(ProtocolMessageType.Regular, 0, 0, buffer));\n\t}\n}\n\nexport class Client<TContext = string> extends IPCClient<TContext> {\n\n\tstatic fromSocket<TContext = string>(socket: ISocket, id: TContext): Client<TContext> {\n\t\treturn new Client(new Protocol(socket), id);\n\t}\n\n\tget onDidDispose(): Event<void> { return this.protocol.onDidDispose; }\n\n\tconstructor(private protocol: Protocol | PersistentProtocol, id: TContext, ipcLogger: IIPCLogger | null = null) {\n\t\tsuper(protocol, id, ipcLogger);\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tconst socket = this.protocol.getSocket();\n\t\tthis.protocol.sendDisconnect();\n\t\tthis.protocol.dispose();\n\t\tsocket.end();\n\t}\n}\n\n/**\n * Will ensure no messages are lost if there are no event listeners.\n */\nexport class BufferedEmitter<T> {\n\tprivate _emitter: Emitter<T>;\n\tpublic readonly event: Event<T>;\n\n\tprivate _hasListeners = false;\n\tprivate _isDeliveringMessages = false;\n\tprivate _bufferedMessages: T[] = [];\n\n\tconstructor() {\n\t\tthis._emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tthis._hasListeners = true;\n\t\t\t\t// it is important to deliver these messages after this call, but before\n\t\t\t\t// other messages have a chance to be received (to guarantee in order delivery)\n\t\t\t\t// that's why we're using here queueMicrotask and not other types of timeouts\n\t\t\t\tqueueMicrotask(() => this._deliverMessages());\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis._hasListeners = false;\n\t\t\t}\n\t\t});\n\n\t\tthis.event = this._emitter.event;\n\t}\n\n\tprivate _deliverMessages(): void {\n\t\tif (this._isDeliveringMessages) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isDeliveringMessages = true;\n\t\twhile (this._hasListeners && this._bufferedMessages.length > 0) {\n\t\t\tthis._emitter.fire(this._bufferedMessages.shift()!);\n\t\t}\n\t\tthis._isDeliveringMessages = false;\n\t}\n\n\tpublic fire(event: T): void {\n\t\tif (this._hasListeners) {\n\t\t\tif (this._bufferedMessages.length > 0) {\n\t\t\t\tthis._bufferedMessages.push(event);\n\t\t\t} else {\n\t\t\t\tthis._emitter.fire(event);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._bufferedMessages.push(event);\n\t\t}\n\t}\n\n\tpublic flushBuffer(): void {\n\t\tthis._bufferedMessages = [];\n\t}\n}\n\nclass QueueElement<T> {\n\tpublic readonly data: T;\n\tpublic next: QueueElement<T> | null;\n\n\tconstructor(data: T) {\n\t\tthis.data = data;\n\t\tthis.next = null;\n\t}\n}\n\nclass Queue<T> {\n\n\tprivate _first: QueueElement<T> | null;\n\tprivate _last: QueueElement<T> | null;\n\n\tconstructor() {\n\t\tthis._first = null;\n\t\tthis._last = null;\n\t}\n\n\tpublic peek(): T | null {\n\t\tif (!this._first) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this._first.data;\n\t}\n\n\tpublic toArray(): T[] {\n\t\tlet result: T[] = [], resultLen = 0;\n\t\tlet it = this._first;\n\t\twhile (it) {\n\t\t\tresult[resultLen++] = it.data;\n\t\t\tit = it.next;\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic pop(): void {\n\t\tif (!this._first) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._first === this._last) {\n\t\t\tthis._first = null;\n\t\t\tthis._last = null;\n\t\t\treturn;\n\t\t}\n\t\tthis._first = this._first.next;\n\t}\n\n\tpublic push(item: T): void {\n\t\tconst element = new QueueElement(item);\n\t\tif (!this._first) {\n\t\t\tthis._first = element;\n\t\t\tthis._last = element;\n\t\t\treturn;\n\t\t}\n\t\tthis._last!.next = element;\n\t\tthis._last = element;\n\t}\n}\n\nclass LoadEstimator {\n\n\tprivate static _HISTORY_LENGTH = 10;\n\tprivate static _INSTANCE: LoadEstimator | null = null;\n\tpublic static getInstance(): LoadEstimator {\n\t\tif (!LoadEstimator._INSTANCE) {\n\t\t\tLoadEstimator._INSTANCE = new LoadEstimator();\n\t\t}\n\t\treturn LoadEstimator._INSTANCE;\n\t}\n\n\tprivate lastRuns: number[];\n\n\tconstructor() {\n\t\tthis.lastRuns = [];\n\t\tconst now = Date.now();\n\t\tfor (let i = 0; i < LoadEstimator._HISTORY_LENGTH; i++) {\n\t\t\tthis.lastRuns[i] = now - 1000 * i;\n\t\t}\n\t\tsetInterval(() => {\n\t\t\tfor (let i = LoadEstimator._HISTORY_LENGTH; i >= 1; i--) {\n\t\t\t\tthis.lastRuns[i] = this.lastRuns[i - 1];\n\t\t\t}\n\t\t\tthis.lastRuns[0] = Date.now();\n\t\t}, 1000);\n\t}\n\n\t/**\n\t * returns an estimative number, from 0 (low load) to 1 (high load)\n\t */\n\tprivate load(): number {\n\t\tconst now = Date.now();\n\t\tconst historyLimit = (1 + LoadEstimator._HISTORY_LENGTH) * 1000;\n\t\tlet score = 0;\n\t\tfor (let i = 0; i < LoadEstimator._HISTORY_LENGTH; i++) {\n\t\t\tif (now - this.lastRuns[i] <= historyLimit) {\n\t\t\t\tscore++;\n\t\t\t}\n\t\t}\n\t\treturn 1 - score / LoadEstimator._HISTORY_LENGTH;\n\t}\n\n\tpublic hasHighLoad(): boolean {\n\t\treturn this.load() >= 0.5;\n\t}\n}\n\nexport interface ILoadEstimator {\n\thasHighLoad(): boolean;\n}\n\n/**\n * Same as Protocol, but will actually track messages and acks.\n * Moreover, it will ensure no messages are lost if there are no event listeners.\n */\nexport class PersistentProtocol implements IMessagePassingProtocol {\n\n\tprivate _isReconnecting: boolean;\n\n\tprivate _outgoingUnackMsg: Queue<ProtocolMessage>;\n\tprivate _outgoingMsgId: number;\n\tprivate _outgoingAckId: number;\n\tprivate _outgoingAckTimeout: any | null;\n\n\tprivate _incomingMsgId: number;\n\tprivate _incomingAckId: number;\n\tprivate _incomingMsgLastTime: number;\n\tprivate _incomingAckTimeout: any | null;\n\n\tprivate _lastReplayRequestTime: number;\n\tprivate _lastSocketTimeoutTime: number;\n\n\tprivate _socket: ISocket;\n\tprivate _socketWriter: ProtocolWriter;\n\tprivate _socketReader: ProtocolReader;\n\tprivate _socketDisposables: IDisposable[];\n\n\tprivate readonly _loadEstimator: ILoadEstimator;\n\n\tprivate readonly _onControlMessage = new BufferedEmitter<VSBuffer>();\n\treadonly onControlMessage: Event<VSBuffer> = this._onControlMessage.event;\n\n\tprivate readonly _onMessage = new BufferedEmitter<VSBuffer>();\n\treadonly onMessage: Event<VSBuffer> = this._onMessage.event;\n\n\tprivate readonly _onDidDispose = new BufferedEmitter<void>();\n\treadonly onDidDispose: Event<void> = this._onDidDispose.event;\n\n\tprivate readonly _onSocketClose = new BufferedEmitter<SocketCloseEvent>();\n\treadonly onSocketClose: Event<SocketCloseEvent> = this._onSocketClose.event;\n\n\tprivate readonly _onSocketTimeout = new BufferedEmitter<void>();\n\treadonly onSocketTimeout: Event<void> = this._onSocketTimeout.event;\n\n\tpublic get unacknowledgedCount(): number {\n\t\treturn this._outgoingMsgId - this._outgoingAckId;\n\t}\n\n\tconstructor(socket: ISocket, initialChunk: VSBuffer | null = null, loadEstimator: ILoadEstimator = LoadEstimator.getInstance()) {\n\t\tthis._loadEstimator = loadEstimator;\n\t\tthis._isReconnecting = false;\n\t\tthis._outgoingUnackMsg = new Queue<ProtocolMessage>();\n\t\tthis._outgoingMsgId = 0;\n\t\tthis._outgoingAckId = 0;\n\t\tthis._outgoingAckTimeout = null;\n\n\t\tthis._incomingMsgId = 0;\n\t\tthis._incomingAckId = 0;\n\t\tthis._incomingMsgLastTime = 0;\n\t\tthis._incomingAckTimeout = null;\n\n\t\tthis._lastReplayRequestTime = 0;\n\t\tthis._lastSocketTimeoutTime = Date.now();\n\n\t\tthis._socketDisposables = [];\n\t\tthis._socket = socket;\n\t\tthis._socketWriter = new ProtocolWriter(this._socket);\n\t\tthis._socketDisposables.push(this._socketWriter);\n\t\tthis._socketReader = new ProtocolReader(this._socket);\n\t\tthis._socketDisposables.push(this._socketReader);\n\t\tthis._socketDisposables.push(this._socketReader.onMessage(msg => this._receiveMessage(msg)));\n\t\tthis._socketDisposables.push(this._socket.onClose((e) => this._onSocketClose.fire(e)));\n\t\tif (initialChunk) {\n\t\t\tthis._socketReader.acceptChunk(initialChunk);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (this._outgoingAckTimeout) {\n\t\t\tclearTimeout(this._outgoingAckTimeout);\n\t\t\tthis._outgoingAckTimeout = null;\n\t\t}\n\t\tif (this._incomingAckTimeout) {\n\t\t\tclearTimeout(this._incomingAckTimeout);\n\t\t\tthis._incomingAckTimeout = null;\n\t\t}\n\t\tthis._socketDisposables = dispose(this._socketDisposables);\n\t}\n\n\tdrain(): Promise<void> {\n\t\treturn this._socketWriter.drain();\n\t}\n\n\tsendDisconnect(): void {\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Disconnect, 0, 0, getEmptyBuffer());\n\t\tthis._socketWriter.write(msg);\n\t\tthis._socketWriter.flush();\n\t}\n\n\tsendPause(): void {\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Pause, 0, 0, getEmptyBuffer());\n\t\tthis._socketWriter.write(msg);\n\t}\n\n\tsendResume(): void {\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Resume, 0, 0, getEmptyBuffer());\n\t\tthis._socketWriter.write(msg);\n\t}\n\n\tpauseSocketWriting() {\n\t\tthis._socketWriter.pause();\n\t}\n\n\tpublic getSocket(): ISocket {\n\t\treturn this._socket;\n\t}\n\n\tpublic getMillisSinceLastIncomingData(): number {\n\t\treturn Date.now() - this._socketReader.lastReadTime;\n\t}\n\n\tpublic beginAcceptReconnection(socket: ISocket, initialDataChunk: VSBuffer | null): void {\n\t\tthis._isReconnecting = true;\n\n\t\tthis._socketDisposables = dispose(this._socketDisposables);\n\t\tthis._onControlMessage.flushBuffer();\n\t\tthis._onSocketClose.flushBuffer();\n\t\tthis._onSocketTimeout.flushBuffer();\n\t\tthis._socket.dispose();\n\n\t\tthis._lastReplayRequestTime = 0;\n\t\tthis._lastSocketTimeoutTime = Date.now();\n\n\t\tthis._socket = socket;\n\t\tthis._socketWriter = new ProtocolWriter(this._socket);\n\t\tthis._socketDisposables.push(this._socketWriter);\n\t\tthis._socketReader = new ProtocolReader(this._socket);\n\t\tthis._socketDisposables.push(this._socketReader);\n\t\tthis._socketDisposables.push(this._socketReader.onMessage(msg => this._receiveMessage(msg)));\n\t\tthis._socketDisposables.push(this._socket.onClose((e) => this._onSocketClose.fire(e)));\n\t\tthis._socketReader.acceptChunk(initialDataChunk);\n\t}\n\n\tpublic endAcceptReconnection(): void {\n\t\tthis._isReconnecting = false;\n\n\t\t// After a reconnection, let the other party know (again) which messages have been received.\n\t\t// (perhaps the other party didn't receive a previous ACK)\n\t\tthis._incomingAckId = this._incomingMsgId;\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Ack, 0, this._incomingAckId, getEmptyBuffer());\n\t\tthis._socketWriter.write(msg);\n\n\t\t// Send again all unacknowledged messages\n\t\tconst toSend = this._outgoingUnackMsg.toArray();\n\t\tfor (let i = 0, len = toSend.length; i < len; i++) {\n\t\t\tthis._socketWriter.write(toSend[i]);\n\t\t}\n\t\tthis._recvAckCheck();\n\t}\n\n\tpublic acceptDisconnect(): void {\n\t\tthis._onDidDispose.fire();\n\t}\n\n\tprivate _receiveMessage(msg: ProtocolMessage): void {\n\t\tif (msg.ack > this._outgoingAckId) {\n\t\t\tthis._outgoingAckId = msg.ack;\n\t\t\tdo {\n\t\t\t\tconst first = this._outgoingUnackMsg.peek();\n\t\t\t\tif (first && first.id <= msg.ack) {\n\t\t\t\t\t// this message has been confirmed, remove it\n\t\t\t\t\tthis._outgoingUnackMsg.pop();\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} while (true);\n\t\t}\n\n\t\tswitch (msg.type) {\n\t\t\tcase ProtocolMessageType.None: {\n\t\t\t\t// N/A\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ProtocolMessageType.Regular: {\n\t\t\t\tif (msg.id > this._incomingMsgId) {\n\t\t\t\t\tif (msg.id !== this._incomingMsgId + 1) {\n\t\t\t\t\t\t// in case we missed some messages we ask the other party to resend them\n\t\t\t\t\t\tconst now = Date.now();\n\t\t\t\t\t\tif (now - this._lastReplayRequestTime > 10000) {\n\t\t\t\t\t\t\t// send a replay request at most once every 10s\n\t\t\t\t\t\t\tthis._lastReplayRequestTime = now;\n\t\t\t\t\t\t\tthis._socketWriter.write(new ProtocolMessage(ProtocolMessageType.ReplayRequest, 0, 0, getEmptyBuffer()));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._incomingMsgId = msg.id;\n\t\t\t\t\t\tthis._incomingMsgLastTime = Date.now();\n\t\t\t\t\t\tthis._sendAckCheck();\n\t\t\t\t\t\tthis._onMessage.fire(msg.data);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ProtocolMessageType.Control: {\n\t\t\t\tthis._onControlMessage.fire(msg.data);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ProtocolMessageType.Ack: {\n\t\t\t\t// nothing to do\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ProtocolMessageType.Disconnect: {\n\t\t\t\tthis._onDidDispose.fire();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ProtocolMessageType.ReplayRequest: {\n\t\t\t\t// Send again all unacknowledged messages\n\t\t\t\tconst toSend = this._outgoingUnackMsg.toArray();\n\t\t\t\tfor (let i = 0, len = toSend.length; i < len; i++) {\n\t\t\t\t\tthis._socketWriter.write(toSend[i]);\n\t\t\t\t}\n\t\t\t\tthis._recvAckCheck();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ProtocolMessageType.Pause: {\n\t\t\t\tthis._socketWriter.pause();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ProtocolMessageType.Resume: {\n\t\t\t\tthis._socketWriter.resume();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treadEntireBuffer(): VSBuffer {\n\t\treturn this._socketReader.readEntireBuffer();\n\t}\n\n\tflush(): void {\n\t\tthis._socketWriter.flush();\n\t}\n\n\tsend(buffer: VSBuffer): void {\n\t\tconst myId = ++this._outgoingMsgId;\n\t\tthis._incomingAckId = this._incomingMsgId;\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Regular, myId, this._incomingAckId, buffer);\n\t\tthis._outgoingUnackMsg.push(msg);\n\t\tif (!this._isReconnecting) {\n\t\t\tthis._socketWriter.write(msg);\n\t\t\tthis._recvAckCheck();\n\t\t}\n\t}\n\n\t/**\n\t * Send a message which will not be part of the regular acknowledge flow.\n\t * Use this for early control messages which are repeated in case of reconnection.\n\t */\n\tsendControl(buffer: VSBuffer): void {\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Control, 0, 0, buffer);\n\t\tthis._socketWriter.write(msg);\n\t}\n\n\tprivate _sendAckCheck(): void {\n\t\tif (this._incomingMsgId <= this._incomingAckId) {\n\t\t\t// nothink to acknowledge\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._incomingAckTimeout) {\n\t\t\t// there will be a check in the near future\n\t\t\treturn;\n\t\t}\n\n\t\tconst timeSinceLastIncomingMsg = Date.now() - this._incomingMsgLastTime;\n\t\tif (timeSinceLastIncomingMsg >= ProtocolConstants.AcknowledgeTime) {\n\t\t\t// sufficient time has passed since this message has been received,\n\t\t\t// and no message from our side needed to be sent in the meantime,\n\t\t\t// so we will send a message containing only an ack.\n\t\t\tthis._sendAck();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._incomingAckTimeout = setTimeout(() => {\n\t\t\tthis._incomingAckTimeout = null;\n\t\t\tthis._sendAckCheck();\n\t\t}, ProtocolConstants.AcknowledgeTime - timeSinceLastIncomingMsg + 5);\n\t}\n\n\tprivate _recvAckCheck(): void {\n\t\tif (this._outgoingMsgId <= this._outgoingAckId) {\n\t\t\t// everything has been acknowledged\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._outgoingAckTimeout) {\n\t\t\t// there will be a check in the near future\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._isReconnecting) {\n\t\t\t// do not cause a timeout during reconnection,\n\t\t\t// because messages will not be actually written until `endAcceptReconnection`\n\t\t\treturn;\n\t\t}\n\n\t\tconst oldestUnacknowledgedMsg = this._outgoingUnackMsg.peek()!;\n\t\tconst timeSinceOldestUnacknowledgedMsg = Date.now() - oldestUnacknowledgedMsg.writtenTime;\n\t\tconst timeSinceLastReceivedSomeData = Date.now() - this._socketReader.lastReadTime;\n\t\tconst timeSinceLastTimeout = Date.now() - this._lastSocketTimeoutTime;\n\n\t\tif (\n\t\t\ttimeSinceOldestUnacknowledgedMsg >= ProtocolConstants.TimeoutTime\n\t\t\t&& timeSinceLastReceivedSomeData >= ProtocolConstants.TimeoutTime\n\t\t\t&& timeSinceLastTimeout >= ProtocolConstants.TimeoutTime\n\t\t) {\n\t\t\t// It's been a long time since our sent message was acknowledged\n\t\t\t// and a long time since we received some data\n\n\t\t\t// But this might be caused by the event loop being busy and failing to read messages\n\t\t\tif (!this._loadEstimator.hasHighLoad()) {\n\t\t\t\t// Trash the socket\n\t\t\t\tthis._lastSocketTimeoutTime = Date.now();\n\t\t\t\tthis._onSocketTimeout.fire(undefined);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tconst minimumTimeUntilTimeout = Math.max(\n\t\t\tProtocolConstants.TimeoutTime - timeSinceOldestUnacknowledgedMsg,\n\t\t\tProtocolConstants.TimeoutTime - timeSinceLastReceivedSomeData,\n\t\t\tProtocolConstants.TimeoutTime - timeSinceLastTimeout,\n\t\t\t500\n\t\t);\n\n\t\tthis._outgoingAckTimeout = setTimeout(() => {\n\t\t\tthis._outgoingAckTimeout = null;\n\t\t\tthis._recvAckCheck();\n\t\t}, minimumTimeUntilTimeout);\n\t}\n\n\tprivate _sendAck(): void {\n\t\tif (this._incomingMsgId <= this._incomingAckId) {\n\t\t\t// nothink to acknowledge\n\t\t\treturn;\n\t\t}\n\n\t\tthis._incomingAckId = this._incomingMsgId;\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Ack, 0, this._incomingAckId, getEmptyBuffer());\n\t\tthis._socketWriter.write(msg);\n\t}\n}\n\n// (() => {\n// \tif (!SocketDiagnostics.enableDiagnostics) {\n// \t\treturn;\n// \t}\n// \tif (typeof require.__$__nodeRequire !== 'function') {\n// \t\tconsole.log(`Can only log socket diagnostics on native platforms.`);\n// \t\treturn;\n// \t}\n// \tconst type = (\n// \t\tprocess.argv.includes('--type=renderer')\n// \t\t\t? 'renderer'\n// \t\t\t: (process.argv.includes('--type=extensionHost')\n// \t\t\t\t? 'extensionHost'\n// \t\t\t\t: (process.argv.some(item => item.includes('server/main'))\n// \t\t\t\t\t? 'server'\n// \t\t\t\t\t: 'unknown'\n// \t\t\t\t)\n// \t\t\t)\n// \t);\n// \tsetTimeout(() => {\n// \t\tSocketDiagnostics.records.forEach(r => {\n// \t\t\tif (r.buff) {\n// \t\t\t\tr.data = Buffer.from(r.buff.buffer).toString('base64');\n// \t\t\t\tr.buff = undefined;\n// \t\t\t}\n// \t\t});\n\n// \t\tconst fs = <typeof import('fs')>require.__$__nodeRequire('fs');\n// \t\tconst path = <typeof import('path')>require.__$__nodeRequire('path');\n// \t\tconst logPath = path.join(process.cwd(),`${type}-${process.pid}`);\n\n// \t\tconsole.log(`dumping socket diagnostics at ${logPath}`);\n// \t\tfs.writeFileSync(logPath, JSON.stringify(SocketDiagnostics.records));\n// \t}, 20000);\n// })();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ipcRenderer } from 'electron';\nimport { Event } from 'vs/base/common/event';\nimport { ClientConnectionEvent, IPCServer } from 'vs/base/parts/ipc/common/ipc';\nimport { Protocol as MessagePortProtocol } from 'vs/base/parts/ipc/common/ipc.mp';\n\n/**\n * An implementation of a `IPCServer` on top of MessagePort style IPC communication.\n * The clients register themselves via Electron IPC transfer.\n */\nexport class Server extends IPCServer {\n\n\tprivate static getOnDidClientConnect(): Event<ClientConnectionEvent> {\n\n\t\t// Clients connect via `vscode:createMessageChannel` to get a\n\t\t// `MessagePort` that is ready to be used. For every connection\n\t\t// we create a pair of message ports and send it back.\n\t\t//\n\t\t// The `nonce` is included so that the main side has a chance to\n\t\t// correlate the response back to the sender.\n\t\tconst onCreateMessageChannel = Event.fromNodeEventEmitter<string>(ipcRenderer, 'vscode:createMessageChannel', (_, nonce: string) => nonce);\n\n\t\treturn Event.map(onCreateMessageChannel, nonce => {\n\n\t\t\t// Create a new pair of ports and protocol for this connection\n\t\t\tconst { port1: incomingPort, port2: outgoingPort } = new MessageChannel();\n\t\t\tconst protocol = new MessagePortProtocol(incomingPort);\n\n\t\t\tconst result: ClientConnectionEvent = {\n\t\t\t\tprotocol,\n\t\t\t\t// Not part of the standard spec, but in Electron we get a `close` event\n\t\t\t\t// when the other side closes. We can use this to detect disconnects\n\t\t\t\t// (https://github.com/electron/electron/blob/11-x-y/docs/api/message-port-main.md#event-close)\n\t\t\t\tonDidClientDisconnect: Event.fromDOMEventEmitter(incomingPort, 'close')\n\t\t\t};\n\n\t\t\t// Send one port back to the requestor\n\t\t\t// Note: we intentionally use `electron` APIs here because\n\t\t\t// transferables like the `MessagePort` cannot be transferred\n\t\t\t// over preload scripts when `contextIsolation: true`\n\t\t\tipcRenderer.postMessage('vscode:createMessageChannelResult', nonce, [outgoingPort]);\n\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tconstructor() {\n\t\tsuper(Server.getOnDidClientConnect());\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { bufferToStream, VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { IRequestContext, IRequestOptions } from 'vs/base/parts/request/common/request';\n\nexport function request(options: IRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\tif (options.proxyAuthorization) {\n\t\toptions.headers = {\n\t\t\t...(options.headers || {}),\n\t\t\t'Proxy-Authorization': options.proxyAuthorization\n\t\t};\n\t}\n\n\tconst xhr = new XMLHttpRequest();\n\treturn new Promise<IRequestContext>((resolve, reject) => {\n\n\t\txhr.open(options.type || 'GET', options.url || '', true, options.user, options.password);\n\t\tsetRequestHeaders(xhr, options);\n\n\t\txhr.responseType = 'arraybuffer';\n\t\txhr.onerror = e => reject(new Error(xhr.statusText && ('XHR failed: ' + xhr.statusText) || 'XHR failed'));\n\t\txhr.onload = (e) => {\n\t\t\tresolve({\n\t\t\t\tres: {\n\t\t\t\t\tstatusCode: xhr.status,\n\t\t\t\t\theaders: getResponseHeaders(xhr)\n\t\t\t\t},\n\t\t\t\tstream: bufferToStream(VSBuffer.wrap(new Uint8Array(xhr.response)))\n\t\t\t});\n\t\t};\n\t\txhr.ontimeout = e => reject(new Error(`XHR timeout: ${options.timeout}ms`));\n\n\t\tif (options.timeout) {\n\t\t\txhr.timeout = options.timeout;\n\t\t}\n\n\t\txhr.send(options.data);\n\n\t\t// cancel\n\t\ttoken.onCancellationRequested(() => {\n\t\t\txhr.abort();\n\t\t\treject(canceled());\n\t\t});\n\t});\n}\n\nfunction setRequestHeaders(xhr: XMLHttpRequest, options: IRequestOptions): void {\n\tif (options.headers) {\n\t\touter: for (let k in options.headers) {\n\t\t\tswitch (k) {\n\t\t\t\tcase 'User-Agent':\n\t\t\t\tcase 'Accept-Encoding':\n\t\t\t\tcase 'Content-Length':\n\t\t\t\t\t// unsafe headers\n\t\t\t\t\tcontinue outer;\n\t\t\t}\n\t\t\txhr.setRequestHeader(k, options.headers[k]);\n\t\t}\n\t}\n}\n\nfunction getResponseHeaders(xhr: XMLHttpRequest): { [name: string]: string } {\n\tconst headers: { [name: string]: string } = Object.create(null);\n\tfor (const line of xhr.getAllResponseHeaders().split(/\\r\\n|\\n|\\r/g)) {\n\t\tif (line) {\n\t\t\tconst idx = line.indexOf(':');\n\t\t\theaders[line.substr(0, idx).trim().toLowerCase()] = line.substr(idx + 1).trim();\n\t\t}\n\t}\n\treturn headers;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ThrottledDelayer } from 'vs/base/common/async';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { isUndefinedOrNull } from 'vs/base/common/types';\n\nexport enum StorageHint {\n\n\t// A hint to the storage that the storage\n\t// does not exist on disk yet. This allows\n\t// the storage library to improve startup\n\t// time by not checking the storage for data.\n\tSTORAGE_DOES_NOT_EXIST\n}\n\nexport interface IStorageOptions {\n\treadonly hint?: StorageHint;\n}\n\nexport interface IUpdateRequest {\n\treadonly insert?: Map<string, string>;\n\treadonly delete?: Set<string>;\n}\n\nexport interface IStorageItemsChangeEvent {\n\treadonly changed?: Map<string, string>;\n\treadonly deleted?: Set<string>;\n}\n\nexport function isStorageItemsChangeEvent(thing: unknown): thing is IStorageItemsChangeEvent {\n\tconst candidate = thing as IStorageItemsChangeEvent | undefined;\n\n\treturn candidate?.changed instanceof Map || candidate?.deleted instanceof Set;\n}\n\nexport interface IStorageDatabase {\n\n\treadonly onDidChangeItemsExternal: Event<IStorageItemsChangeEvent>;\n\n\tgetItems(): Promise<Map<string, string>>;\n\tupdateItems(request: IUpdateRequest): Promise<void>;\n\n\tclose(recovery?: () => Map<string, string>): Promise<void>;\n}\n\nexport interface IStorage extends IDisposable {\n\n\treadonly onDidChangeStorage: Event<string>;\n\n\treadonly items: Map<string, string>;\n\treadonly size: number;\n\n\tinit(): Promise<void>;\n\n\tget(key: string, fallbackValue: string): string;\n\tget(key: string, fallbackValue?: string): string | undefined;\n\n\tgetBoolean(key: string, fallbackValue: boolean): boolean;\n\tgetBoolean(key: string, fallbackValue?: boolean): boolean | undefined;\n\n\tgetNumber(key: string, fallbackValue: number): number;\n\tgetNumber(key: string, fallbackValue?: number): number | undefined;\n\n\tset(key: string, value: string | boolean | number | undefined | null): Promise<void>;\n\tdelete(key: string): Promise<void>;\n\n\tflush(delay?: number): Promise<void>;\n\twhenFlushed(): Promise<void>;\n\n\tclose(): Promise<void>;\n}\n\nenum StorageState {\n\tNone,\n\tInitialized,\n\tClosed\n}\n\nexport class Storage extends Disposable implements IStorage {\n\n\tprivate static readonly DEFAULT_FLUSH_DELAY = 100;\n\n\tprivate readonly _onDidChangeStorage = this._register(new Emitter<string>());\n\treadonly onDidChangeStorage = this._onDidChangeStorage.event;\n\n\tprivate state = StorageState.None;\n\n\tprivate cache = new Map<string, string>();\n\n\tprivate readonly flushDelayer = new ThrottledDelayer<void>(Storage.DEFAULT_FLUSH_DELAY);\n\n\tprivate pendingDeletes = new Set<string>();\n\tprivate pendingInserts = new Map<string, string>();\n\n\tprivate pendingClose: Promise<void> | undefined = undefined;\n\n\tprivate readonly whenFlushedCallbacks: Function[] = [];\n\n\tconstructor(\n\t\tprotected readonly database: IStorageDatabase,\n\t\tprivate readonly options: IStorageOptions = Object.create(null)\n\t) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.database.onDidChangeItemsExternal(e => this.onDidChangeItemsExternal(e)));\n\t}\n\n\tprivate onDidChangeItemsExternal(e: IStorageItemsChangeEvent): void {\n\t\t// items that change external require us to update our\n\t\t// caches with the values. we just accept the value and\n\t\t// emit an event if there is a change.\n\t\te.changed?.forEach((value, key) => this.accept(key, value));\n\t\te.deleted?.forEach(key => this.accept(key, undefined));\n\t}\n\n\tprivate accept(key: string, value: string | undefined): void {\n\t\tif (this.state === StorageState.Closed) {\n\t\t\treturn; // Return early if we are already closed\n\t\t}\n\n\t\tlet changed = false;\n\n\t\t// Item got removed, check for deletion\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\tchanged = this.cache.delete(key);\n\t\t}\n\n\t\t// Item got updated, check for change\n\t\telse {\n\t\t\tconst currentValue = this.cache.get(key);\n\t\t\tif (currentValue !== value) {\n\t\t\t\tthis.cache.set(key, value);\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t}\n\n\t\t// Signal to outside listeners\n\t\tif (changed) {\n\t\t\tthis._onDidChangeStorage.fire(key);\n\t\t}\n\t}\n\n\tget items(): Map<string, string> {\n\t\treturn this.cache;\n\t}\n\n\tget size(): number {\n\t\treturn this.cache.size;\n\t}\n\n\tasync init(): Promise<void> {\n\t\tif (this.state !== StorageState.None) {\n\t\t\treturn; // either closed or already initialized\n\t\t}\n\n\t\tthis.state = StorageState.Initialized;\n\n\t\tif (this.options.hint === StorageHint.STORAGE_DOES_NOT_EXIST) {\n\t\t\t// return early if we know the storage file does not exist. this is a performance\n\t\t\t// optimization to not load all items of the underlying storage if we know that\n\t\t\t// there can be no items because the storage does not exist.\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cache = await this.database.getItems();\n\t}\n\n\tget(key: string, fallbackValue: string): string;\n\tget(key: string, fallbackValue?: string): string | undefined;\n\tget(key: string, fallbackValue?: string): string | undefined {\n\t\tconst value = this.cache.get(key);\n\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn fallbackValue;\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tgetBoolean(key: string, fallbackValue: boolean): boolean;\n\tgetBoolean(key: string, fallbackValue?: boolean): boolean | undefined;\n\tgetBoolean(key: string, fallbackValue?: boolean): boolean | undefined {\n\t\tconst value = this.get(key);\n\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn fallbackValue;\n\t\t}\n\n\t\treturn value === 'true';\n\t}\n\n\tgetNumber(key: string, fallbackValue: number): number;\n\tgetNumber(key: string, fallbackValue?: number): number | undefined;\n\tgetNumber(key: string, fallbackValue?: number): number | undefined {\n\t\tconst value = this.get(key);\n\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn fallbackValue;\n\t\t}\n\n\t\treturn parseInt(value, 10);\n\t}\n\n\tasync set(key: string, value: string | boolean | number | null | undefined): Promise<void> {\n\t\tif (this.state === StorageState.Closed) {\n\t\t\treturn; // Return early if we are already closed\n\t\t}\n\n\t\t// We remove the key for undefined/null values\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn this.delete(key);\n\t\t}\n\n\t\t// Otherwise, convert to String and store\n\t\tconst valueStr = String(value);\n\n\t\t// Return early if value already set\n\t\tconst currentValue = this.cache.get(key);\n\t\tif (currentValue === valueStr) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Update in cache and pending\n\t\tthis.cache.set(key, valueStr);\n\t\tthis.pendingInserts.set(key, valueStr);\n\t\tthis.pendingDeletes.delete(key);\n\n\t\t// Event\n\t\tthis._onDidChangeStorage.fire(key);\n\n\t\t// Accumulate work by scheduling after timeout\n\t\treturn this.doFlush();\n\t}\n\n\tasync delete(key: string): Promise<void> {\n\t\tif (this.state === StorageState.Closed) {\n\t\t\treturn; // Return early if we are already closed\n\t\t}\n\n\t\t// Remove from cache and add to pending\n\t\tconst wasDeleted = this.cache.delete(key);\n\t\tif (!wasDeleted) {\n\t\t\treturn; // Return early if value already deleted\n\t\t}\n\n\t\tif (!this.pendingDeletes.has(key)) {\n\t\t\tthis.pendingDeletes.add(key);\n\t\t}\n\n\t\tthis.pendingInserts.delete(key);\n\n\t\t// Event\n\t\tthis._onDidChangeStorage.fire(key);\n\n\t\t// Accumulate work by scheduling after timeout\n\t\treturn this.doFlush();\n\t}\n\n\tasync close(): Promise<void> {\n\t\tif (!this.pendingClose) {\n\t\t\tthis.pendingClose = this.doClose();\n\t\t}\n\n\t\treturn this.pendingClose;\n\t}\n\n\tprivate async doClose(): Promise<void> {\n\n\t\t// Update state\n\t\tthis.state = StorageState.Closed;\n\n\t\t// Trigger new flush to ensure data is persisted and then close\n\t\t// even if there is an error flushing. We must always ensure\n\t\t// the DB is closed to avoid corruption.\n\t\t//\n\t\t// Recovery: we pass our cache over as recovery option in case\n\t\t// the DB is not healthy.\n\t\ttry {\n\t\t\tawait this.doFlush(0 /* as soon as possible */);\n\t\t} catch (error) {\n\t\t\t// Ignore\n\t\t}\n\n\t\tawait this.database.close(() => this.cache);\n\t}\n\n\tprivate get hasPending() {\n\t\treturn this.pendingInserts.size > 0 || this.pendingDeletes.size > 0;\n\t}\n\n\tprivate async flushPending(): Promise<void> {\n\t\tif (!this.hasPending) {\n\t\t\treturn; // return early if nothing to do\n\t\t}\n\n\t\t// Get pending data\n\t\tconst updateRequest: IUpdateRequest = { insert: this.pendingInserts, delete: this.pendingDeletes };\n\n\t\t// Reset pending data for next run\n\t\tthis.pendingDeletes = new Set<string>();\n\t\tthis.pendingInserts = new Map<string, string>();\n\n\t\t// Update in storage and release any\n\t\t// waiters we have once done\n\t\treturn this.database.updateItems(updateRequest).finally(() => {\n\t\t\tif (!this.hasPending) {\n\t\t\t\twhile (this.whenFlushedCallbacks.length) {\n\t\t\t\t\tthis.whenFlushedCallbacks.pop()?.();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tasync flush(delay?: number): Promise<void> {\n\t\tif (!this.hasPending) {\n\t\t\treturn; // return early if nothing to do\n\t\t}\n\n\t\treturn this.doFlush(delay);\n\t}\n\n\tprivate async doFlush(delay?: number): Promise<void> {\n\t\treturn this.flushDelayer.trigger(() => this.flushPending(), delay);\n\t}\n\n\tasync whenFlushed(): Promise<void> {\n\t\tif (!this.hasPending) {\n\t\t\treturn; // return early if nothing to do\n\t\t}\n\n\t\treturn new Promise(resolve => this.whenFlushedCallbacks.push(resolve));\n\t}\n\n\toverride dispose(): void {\n\t\tthis.flushDelayer.dispose();\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport class InMemoryStorageDatabase implements IStorageDatabase {\n\n\treadonly onDidChangeItemsExternal = Event.None;\n\n\tprivate readonly items = new Map<string, string>();\n\n\tasync getItems(): Promise<Map<string, string>> {\n\t\treturn this.items;\n\t}\n\n\tasync updateItems(request: IUpdateRequest): Promise<void> {\n\t\tif (request.insert) {\n\t\t\trequest.insert.forEach((value, key) => this.items.set(key, value));\n\t\t}\n\n\t\tif (request.delete) {\n\t\t\trequest.delete.forEach(key => this.items.delete(key));\n\t\t}\n\t}\n\n\tasync close(): Promise<void> { }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\n\nconst minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst month = day * 30;\nconst year = day * 365;\n\nexport function fromNow(date: number | Date, appendAgoLabel?: boolean): string {\n\tif (typeof date !== 'number') {\n\t\tdate = date.getTime();\n\t}\n\n\tconst seconds = Math.round((new Date().getTime() - date) / 1000);\n\tif (seconds < -30) {\n\t\treturn localize('date.fromNow.in', 'in {0}', fromNow(new Date().getTime() + seconds * 1000, false));\n\t}\n\n\tif (seconds < 30) {\n\t\treturn localize('date.fromNow.now', 'now');\n\t}\n\n\tlet value: number;\n\tif (seconds < minute) {\n\t\tvalue = seconds;\n\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.seconds.singular.ago', '{0} sec ago', value)\n\t\t\t\t: localize('date.fromNow.seconds.plural.ago', '{0} secs ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.seconds.singular', '{0} sec', value)\n\t\t\t\t: localize('date.fromNow.seconds.plural', '{0} secs', value);\n\t\t}\n\t}\n\n\tif (seconds < hour) {\n\t\tvalue = Math.floor(seconds / minute);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.minutes.singular.ago', '{0} min ago', value)\n\t\t\t\t: localize('date.fromNow.minutes.plural.ago', '{0} mins ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.minutes.singular', '{0} min', value)\n\t\t\t\t: localize('date.fromNow.minutes.plural', '{0} mins', value);\n\t\t}\n\t}\n\n\tif (seconds < day) {\n\t\tvalue = Math.floor(seconds / hour);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.hours.singular.ago', '{0} hr ago', value)\n\t\t\t\t: localize('date.fromNow.hours.plural.ago', '{0} hrs ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.hours.singular', '{0} hr', value)\n\t\t\t\t: localize('date.fromNow.hours.plural', '{0} hrs', value);\n\t\t}\n\t}\n\n\tif (seconds < week) {\n\t\tvalue = Math.floor(seconds / day);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.days.singular.ago', '{0} day ago', value)\n\t\t\t\t: localize('date.fromNow.days.plural.ago', '{0} days ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.days.singular', '{0} day', value)\n\t\t\t\t: localize('date.fromNow.days.plural', '{0} days', value);\n\t\t}\n\t}\n\n\tif (seconds < month) {\n\t\tvalue = Math.floor(seconds / week);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.weeks.singular.ago', '{0} wk ago', value)\n\t\t\t\t: localize('date.fromNow.weeks.plural.ago', '{0} wks ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.weeks.singular', '{0} wk', value)\n\t\t\t\t: localize('date.fromNow.weeks.plural', '{0} wks', value);\n\t\t}\n\t}\n\n\tif (seconds < year) {\n\t\tvalue = Math.floor(seconds / month);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.months.singular.ago', '{0} mo ago', value)\n\t\t\t\t: localize('date.fromNow.months.plural.ago', '{0} mos ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.months.singular', '{0} mo', value)\n\t\t\t\t: localize('date.fromNow.months.plural', '{0} mos', value);\n\t\t}\n\t}\n\n\tvalue = Math.floor(seconds / year);\n\tif (appendAgoLabel) {\n\t\treturn value === 1\n\t\t\t? localize('date.fromNow.years.singular.ago', '{0} yr ago', value)\n\t\t\t: localize('date.fromNow.years.plural.ago', '{0} yrs ago', value);\n\t} else {\n\t\treturn value === 1\n\t\t\t? localize('date.fromNow.years.singular', '{0} yr', value)\n\t\t\t: localize('date.fromNow.years.plural', '{0} yrs', value);\n\t}\n}\n\nexport function toLocalISOString(date: Date): string {\n\treturn date.getFullYear() +\n\t\t'-' + String(date.getMonth() + 1).padStart(2, '0') +\n\t\t'-' + String(date.getDate()).padStart(2, '0') +\n\t\t'T' + String(date.getHours()).padStart(2, '0') +\n\t\t':' + String(date.getMinutes()).padStart(2, '0') +\n\t\t':' + String(date.getSeconds()).padStart(2, '0') +\n\t\t'.' + (date.getMilliseconds() / 1000).toFixed(3).slice(2, 5) +\n\t\t'Z';\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as arrays from 'vs/base/common/arrays';\nimport * as types from 'vs/base/common/types';\nimport * as nls from 'vs/nls';\n\nfunction exceptionToErrorMessage(exception: any, verbose: boolean): string {\n\tif (verbose && (exception.stack || exception.stacktrace)) {\n\t\treturn nls.localize('stackTrace.format', \"{0}: {1}\", detectSystemErrorMessage(exception), stackToString(exception.stack) || stackToString(exception.stacktrace));\n\t}\n\n\treturn detectSystemErrorMessage(exception);\n}\n\nfunction stackToString(stack: string[] | string | undefined): string | undefined {\n\tif (Array.isArray(stack)) {\n\t\treturn stack.join('\\n');\n\t}\n\n\treturn stack;\n}\n\nfunction detectSystemErrorMessage(exception: any): string {\n\n\t// See https://nodejs.org/api/errors.html#errors_class_system_error\n\tif (typeof exception.code === 'string' && typeof exception.errno === 'number' && typeof exception.syscall === 'string') {\n\t\treturn nls.localize('nodeExceptionMessage', \"A system error occurred ({0})\", exception.message);\n\t}\n\n\treturn exception.message || nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n\n/**\n * Tries to generate a human readable error message out of the error. If the verbose parameter\n * is set to true, the error message will include stacktrace details if provided.\n *\n * @returns A string containing the error message.\n */\nexport function toErrorMessage(error: any = null, verbose: boolean = false): string {\n\tif (!error) {\n\t\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n\t}\n\n\tif (Array.isArray(error)) {\n\t\tconst errors: any[] = arrays.coalesce(error);\n\t\tconst msg = toErrorMessage(errors[0], verbose);\n\n\t\tif (errors.length > 1) {\n\t\t\treturn nls.localize('error.moreErrors', \"{0} ({1} errors in total)\", msg, errors.length);\n\t\t}\n\n\t\treturn msg;\n\t}\n\n\tif (types.isString(error)) {\n\t\treturn error;\n\t}\n\n\tif (error.detail) {\n\t\tconst detail = error.detail;\n\n\t\tif (detail.error) {\n\t\t\treturn exceptionToErrorMessage(detail.error, verbose);\n\t\t}\n\n\t\tif (detail.exception) {\n\t\t\treturn exceptionToErrorMessage(detail.exception, verbose);\n\t\t}\n\t}\n\n\tif (error.stack) {\n\t\treturn exceptionToErrorMessage(error, verbose);\n\t}\n\n\tif (error.message) {\n\t\treturn error.message;\n\t}\n\n\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as cp from 'child_process';\nimport { Stats } from 'fs';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport * as extpath from 'vs/base/common/extpath';\nimport { FileAccess } from 'vs/base/common/network';\nimport * as Objects from 'vs/base/common/objects';\nimport * as path from 'vs/base/common/path';\nimport * as Platform from 'vs/base/common/platform';\nimport * as process from 'vs/base/common/process';\nimport { CommandOptions, Executable, ForkOptions, Source, SuccessData, TerminateResponse, TerminateResponseCode } from 'vs/base/common/processes';\nimport * as Types from 'vs/base/common/types';\nimport { LineDecoder } from 'vs/base/node/decoder';\nimport * as pfs from 'vs/base/node/pfs';\nimport * as nls from 'vs/nls';\nexport { CommandOptions, ForkOptions, SuccessData, Source, TerminateResponse, TerminateResponseCode };\n\nexport type ValueCallback<T> = (value: T | Promise<T>) => void;\nexport type ErrorCallback = (error?: any) => void;\nexport type ProgressCallback<T> = (progress: T) => void;\n\nexport interface LineData {\n\tline: string;\n\tsource: Source;\n}\n\nfunction getWindowsCode(status: number): TerminateResponseCode {\n\tswitch (status) {\n\t\tcase 0:\n\t\t\treturn TerminateResponseCode.Success;\n\t\tcase 1:\n\t\t\treturn TerminateResponseCode.AccessDenied;\n\t\tcase 128:\n\t\t\treturn TerminateResponseCode.ProcessNotFound;\n\t\tdefault:\n\t\t\treturn TerminateResponseCode.Unknown;\n\t}\n}\n\nfunction terminateProcess(process: cp.ChildProcess, cwd?: string): Promise<TerminateResponse> {\n\tif (Platform.isWindows) {\n\t\ttry {\n\t\t\tconst options: any = {\n\t\t\t\tstdio: ['pipe', 'pipe', 'ignore']\n\t\t\t};\n\t\t\tif (cwd) {\n\t\t\t\toptions.cwd = cwd;\n\t\t\t}\n\t\t\tconst killProcess = cp.execFile('taskkill', ['/T', '/F', '/PID', process.pid.toString()], options);\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tkillProcess.once('error', (err) => {\n\t\t\t\t\tresolve({ success: false, error: err });\n\t\t\t\t});\n\t\t\t\tkillProcess.once('exit', (code, signal) => {\n\t\t\t\t\tif (code === 0) {\n\t\t\t\t\t\tresolve({ success: true });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve({ success: false, code: code !== null ? code : TerminateResponseCode.Unknown });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn Promise.resolve({ success: false, error: err, code: err.status ? getWindowsCode(err.status) : TerminateResponseCode.Unknown });\n\t\t}\n\t} else if (Platform.isLinux || Platform.isMacintosh) {\n\t\ttry {\n\t\t\tconst cmd = FileAccess.asFileUri('vs/base/node/terminateProcess.sh', require).fsPath;\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tcp.execFile(cmd, [process.pid.toString()], { encoding: 'utf8', shell: true } as cp.ExecFileOptions, (err, stdout, stderr) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tresolve({ success: false, error: err });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve({ success: true });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn Promise.resolve({ success: false, error: err });\n\t\t}\n\t} else {\n\t\tprocess.kill('SIGKILL');\n\t}\n\treturn Promise.resolve({ success: true });\n}\n\n/**\n * Remove dangerous environment variables that have caused crashes\n * in forked processes (i.e. in ELECTRON_RUN_AS_NODE processes)\n *\n * @param env The env object to change\n */\nexport function removeDangerousEnvVariables(env: NodeJS.ProcessEnv | undefined): void {\n\tif (!env) {\n\t\treturn;\n\t}\n\n\t// Unset `DEBUG`, as an invalid value might lead to process crashes\n\t// See https://github.com/microsoft/vscode/issues/130072\n\tdelete env['DEBUG'];\n\n\tif (Platform.isMacintosh) {\n\t\t// Unset `DYLD_LIBRARY_PATH`, as it leads to process crashes\n\t\t// See https://github.com/microsoft/vscode/issues/104525\n\t\t// See https://github.com/microsoft/vscode/issues/105848\n\t\tdelete env['DYLD_LIBRARY_PATH'];\n\t}\n\n\tif (Platform.isLinux) {\n\t\t// Unset `LD_PRELOAD`, as it might lead to process crashes\n\t\t// See https://github.com/microsoft/vscode/issues/134177\n\t\tdelete env['LD_PRELOAD'];\n\t}\n}\n\nexport function getWindowsShell(env = process.env as Platform.IProcessEnvironment): string {\n\treturn env['comspec'] || 'cmd.exe';\n}\n\nexport abstract class AbstractProcess<TProgressData> {\n\tprivate cmd: string;\n\tprivate args: string[];\n\tprivate options: CommandOptions | ForkOptions;\n\tprotected shell: boolean;\n\n\tprivate childProcess: cp.ChildProcess | null;\n\tprotected childProcessPromise: Promise<cp.ChildProcess> | null;\n\tprivate pidResolve: ValueCallback<number> | undefined;\n\tprotected terminateRequested: boolean;\n\n\tprivate static WellKnowCommands: IStringDictionary<boolean> = {\n\t\t'ant': true,\n\t\t'cmake': true,\n\t\t'eslint': true,\n\t\t'gradle': true,\n\t\t'grunt': true,\n\t\t'gulp': true,\n\t\t'jake': true,\n\t\t'jenkins': true,\n\t\t'jshint': true,\n\t\t'make': true,\n\t\t'maven': true,\n\t\t'msbuild': true,\n\t\t'msc': true,\n\t\t'nmake': true,\n\t\t'npm': true,\n\t\t'rake': true,\n\t\t'tsc': true,\n\t\t'xbuild': true\n\t};\n\n\tpublic constructor(executable: Executable);\n\tpublic constructor(cmd: string, args: string[] | undefined, shell: boolean, options: CommandOptions | undefined);\n\tpublic constructor(arg1: string | Executable, arg2?: string[], arg3?: boolean, arg4?: CommandOptions) {\n\t\tif (arg2 !== undefined && arg3 !== undefined && arg4 !== undefined) {\n\t\t\tthis.cmd = <string>arg1;\n\t\t\tthis.args = arg2;\n\t\t\tthis.shell = arg3;\n\t\t\tthis.options = arg4;\n\t\t} else {\n\t\t\tconst executable = <Executable>arg1;\n\t\t\tthis.cmd = executable.command;\n\t\t\tthis.shell = executable.isShellCommand;\n\t\t\tthis.args = executable.args.slice(0);\n\t\t\tthis.options = executable.options || {};\n\t\t}\n\n\t\tthis.childProcess = null;\n\t\tthis.childProcessPromise = null;\n\t\tthis.terminateRequested = false;\n\n\t\tif (this.options.env) {\n\t\t\tconst newEnv: IStringDictionary<string> = Object.create(null);\n\t\t\tObject.keys(process.env).forEach((key) => {\n\t\t\t\tnewEnv[key] = process.env[key]!;\n\t\t\t});\n\t\t\tObject.keys(this.options.env).forEach((key) => {\n\t\t\t\tnewEnv[key] = this.options.env![key]!;\n\t\t\t});\n\t\t\tthis.options.env = newEnv;\n\t\t}\n\t}\n\n\tpublic getSanitizedCommand(): string {\n\t\tlet result = this.cmd.toLowerCase();\n\t\tconst index = result.lastIndexOf(path.sep);\n\t\tif (index !== -1) {\n\t\t\tresult = result.substring(index + 1);\n\t\t}\n\t\tif (AbstractProcess.WellKnowCommands[result]) {\n\t\t\treturn result;\n\t\t}\n\t\treturn 'other';\n\t}\n\n\tpublic start(pp: ProgressCallback<TProgressData>): Promise<SuccessData> {\n\t\tif (Platform.isWindows && ((this.options && this.options.cwd && extpath.isUNC(this.options.cwd)) || !this.options && extpath.isUNC(process.cwd()))) {\n\t\t\treturn Promise.reject(new Error(nls.localize('TaskRunner.UNC', 'Can\\'t execute a shell command on a UNC drive.')));\n\t\t}\n\t\treturn this.useExec().then((useExec) => {\n\t\t\tlet cc: ValueCallback<SuccessData>;\n\t\t\tlet ee: ErrorCallback;\n\t\t\tconst result = new Promise<any>((c, e) => {\n\t\t\t\tcc = c;\n\t\t\t\tee = e;\n\t\t\t});\n\n\t\t\tif (useExec) {\n\t\t\t\tlet cmd: string = this.cmd;\n\t\t\t\tif (this.args) {\n\t\t\t\t\tcmd = cmd + ' ' + this.args.join(' ');\n\t\t\t\t}\n\t\t\t\tthis.childProcess = cp.exec(cmd, this.options, (error, stdout, stderr) => {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\tconst err: any = error;\n\t\t\t\t\t// This is tricky since executing a command shell reports error back in case the executed command return an\n\t\t\t\t\t// error or the command didn't exist at all. So we can't blindly treat an error as a failed command. So we\n\t\t\t\t\t// always parse the output and report success unless the job got killed.\n\t\t\t\t\tif (err && err.killed) {\n\t\t\t\t\t\tee({ killed: this.terminateRequested, stdout: stdout.toString(), stderr: stderr.toString() });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.handleExec(cc, pp, error, stdout as any, stderr as any);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlet childProcess: cp.ChildProcess | null = null;\n\t\t\t\tconst closeHandler = (data: any) => {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\tthis.childProcessPromise = null;\n\t\t\t\t\tthis.handleClose(data, cc, pp, ee);\n\t\t\t\t\tconst result: SuccessData = {\n\t\t\t\t\t\tterminated: this.terminateRequested\n\t\t\t\t\t};\n\t\t\t\t\tif (Types.isNumber(data)) {\n\t\t\t\t\t\tresult.cmdCode = <number>data;\n\t\t\t\t\t}\n\t\t\t\t\tcc(result);\n\t\t\t\t};\n\t\t\t\tif (this.shell && Platform.isWindows) {\n\t\t\t\t\tconst options: any = Objects.deepClone(this.options);\n\t\t\t\t\toptions.windowsVerbatimArguments = true;\n\t\t\t\t\toptions.detached = false;\n\t\t\t\t\tlet quotedCommand: boolean = false;\n\t\t\t\t\tlet quotedArg: boolean = false;\n\t\t\t\t\tconst commandLine: string[] = [];\n\t\t\t\t\tlet quoted = this.ensureQuotes(this.cmd);\n\t\t\t\t\tcommandLine.push(quoted.value);\n\t\t\t\t\tquotedCommand = quoted.quoted;\n\t\t\t\t\tif (this.args) {\n\t\t\t\t\t\tthis.args.forEach((elem) => {\n\t\t\t\t\t\t\tquoted = this.ensureQuotes(elem);\n\t\t\t\t\t\t\tcommandLine.push(quoted.value);\n\t\t\t\t\t\t\tquotedArg = quotedArg && quoted.quoted;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tconst args: string[] = [\n\t\t\t\t\t\t'/s',\n\t\t\t\t\t\t'/c',\n\t\t\t\t\t];\n\t\t\t\t\tif (quotedCommand) {\n\t\t\t\t\t\tif (quotedArg) {\n\t\t\t\t\t\t\targs.push('\"' + commandLine.join(' ') + '\"');\n\t\t\t\t\t\t} else if (commandLine.length > 1) {\n\t\t\t\t\t\t\targs.push('\"' + commandLine[0] + '\"' + ' ' + commandLine.slice(1).join(' '));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\targs.push('\"' + commandLine[0] + '\"');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\targs.push(commandLine.join(' '));\n\t\t\t\t\t}\n\t\t\t\t\tchildProcess = cp.spawn(getWindowsShell(), args, options);\n\t\t\t\t} else {\n\t\t\t\t\tif (this.cmd) {\n\t\t\t\t\t\tchildProcess = cp.spawn(this.cmd, this.args, this.options);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (childProcess) {\n\t\t\t\t\tthis.childProcess = childProcess;\n\t\t\t\t\tthis.childProcessPromise = Promise.resolve(childProcess);\n\t\t\t\t\tif (this.pidResolve) {\n\t\t\t\t\t\tthis.pidResolve(Types.isNumber(childProcess.pid) ? childProcess.pid : -1);\n\t\t\t\t\t\tthis.pidResolve = undefined;\n\t\t\t\t\t}\n\t\t\t\t\tchildProcess.on('error', (error: Error) => {\n\t\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\t\tee({ terminated: this.terminateRequested, error: error });\n\t\t\t\t\t});\n\t\t\t\t\tif (childProcess.pid) {\n\t\t\t\t\t\tthis.childProcess.on('close', closeHandler);\n\t\t\t\t\t\tthis.handleSpawn(childProcess, cc!, pp, ee!, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tprotected abstract handleExec(cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, error: Error | null, stdout: Buffer, stderr: Buffer): void;\n\tprotected abstract handleSpawn(childProcess: cp.ChildProcess, cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, ee: ErrorCallback, sync: boolean): void;\n\n\tprotected handleClose(data: any, cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, ee: ErrorCallback): void {\n\t\t// Default is to do nothing.\n\t}\n\n\tprivate static readonly regexp = /^[^\"].* .*[^\"]/;\n\tprivate ensureQuotes(value: string) {\n\t\tif (AbstractProcess.regexp.test(value)) {\n\t\t\treturn {\n\t\t\t\tvalue: '\"' + value + '\"', //`\"${value}\"`,\n\t\t\t\tquoted: true\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tvalue: value,\n\t\t\t\tquoted: value.length > 0 && value[0] === '\"' && value[value.length - 1] === '\"'\n\t\t\t};\n\t\t}\n\t}\n\n\tpublic get pid(): Promise<number> {\n\t\tif (this.childProcessPromise) {\n\t\t\treturn this.childProcessPromise.then(childProcess => childProcess.pid, err => -1);\n\t\t} else {\n\t\t\treturn new Promise<number>((resolve) => {\n\t\t\t\tthis.pidResolve = resolve;\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic terminate(): Promise<TerminateResponse> {\n\t\tif (!this.childProcessPromise) {\n\t\t\treturn Promise.resolve<TerminateResponse>({ success: true });\n\t\t}\n\t\treturn this.childProcessPromise.then((childProcess) => {\n\t\t\tthis.terminateRequested = true;\n\t\t\treturn terminateProcess(childProcess, this.options.cwd).then(response => {\n\t\t\t\tif (response.success) {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t}\n\t\t\t\treturn response;\n\t\t\t});\n\t\t}, (err) => {\n\t\t\treturn { success: true };\n\t\t});\n\t}\n\n\tprivate useExec(): Promise<boolean> {\n\t\treturn new Promise<boolean>(resolve => {\n\t\t\tif (!this.shell || !Platform.isWindows) {\n\t\t\t\treturn resolve(false);\n\t\t\t}\n\t\t\tconst cmdShell = cp.spawn(getWindowsShell(), ['/s', '/c']);\n\t\t\tcmdShell.on('error', (error: Error) => {\n\t\t\t\treturn resolve(true);\n\t\t\t});\n\t\t\tcmdShell.on('exit', (data: any) => {\n\t\t\t\treturn resolve(false);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class LineProcess extends AbstractProcess<LineData> {\n\n\tprivate stdoutLineDecoder: LineDecoder | null;\n\tprivate stderrLineDecoder: LineDecoder | null;\n\n\tpublic constructor(executable: Executable);\n\tpublic constructor(cmd: string, args: string[], shell: boolean, options: CommandOptions);\n\tpublic constructor(arg1: string | Executable, arg2?: string[], arg3?: boolean | ForkOptions, arg4?: CommandOptions) {\n\t\tsuper(<any>arg1, arg2, <any>arg3, arg4);\n\n\t\tthis.stdoutLineDecoder = null;\n\t\tthis.stderrLineDecoder = null;\n\t}\n\n\tprotected handleExec(cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, error: Error, stdout: Buffer, stderr: Buffer) {\n\t\t[stdout, stderr].forEach((buffer: Buffer, index: number) => {\n\t\t\tconst lineDecoder = new LineDecoder();\n\t\t\tconst lines = lineDecoder.write(buffer);\n\t\t\tlines.forEach((line) => {\n\t\t\t\tpp({ line: line, source: index === 0 ? Source.stdout : Source.stderr });\n\t\t\t});\n\t\t\tconst line = lineDecoder.end();\n\t\t\tif (line) {\n\t\t\t\tpp({ line: line, source: index === 0 ? Source.stdout : Source.stderr });\n\t\t\t}\n\t\t});\n\t\tcc({ terminated: this.terminateRequested, error: error });\n\t}\n\n\tprotected handleSpawn(childProcess: cp.ChildProcess, cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, ee: ErrorCallback, sync: boolean): void {\n\t\tconst stdoutLineDecoder = new LineDecoder();\n\t\tconst stderrLineDecoder = new LineDecoder();\n\t\tchildProcess.stdout!.on('data', (data: Buffer) => {\n\t\t\tconst lines = stdoutLineDecoder.write(data);\n\t\t\tlines.forEach(line => pp({ line: line, source: Source.stdout }));\n\t\t});\n\t\tchildProcess.stderr!.on('data', (data: Buffer) => {\n\t\t\tconst lines = stderrLineDecoder.write(data);\n\t\t\tlines.forEach(line => pp({ line: line, source: Source.stderr }));\n\t\t});\n\n\t\tthis.stdoutLineDecoder = stdoutLineDecoder;\n\t\tthis.stderrLineDecoder = stderrLineDecoder;\n\t}\n\n\tprotected override handleClose(data: any, cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, ee: ErrorCallback): void {\n\t\tconst stdoutLine = this.stdoutLineDecoder ? this.stdoutLineDecoder.end() : null;\n\t\tif (stdoutLine) {\n\t\t\tpp({ line: stdoutLine, source: Source.stdout });\n\t\t}\n\t\tconst stderrLine = this.stderrLineDecoder ? this.stderrLineDecoder.end() : null;\n\t\tif (stderrLine) {\n\t\t\tpp({ line: stderrLine, source: Source.stderr });\n\t\t}\n\t}\n}\n\nexport interface IQueuedSender {\n\tsend: (msg: any) => void;\n}\n\n// Wrapper around process.send() that will queue any messages if the internal node.js\n// queue is filled with messages and only continue sending messages when the internal\n// queue is free again to consume messages.\n// On Windows we always wait for the send() method to return before sending the next message\n// to workaround https://github.com/nodejs/node/issues/7657 (IPC can freeze process)\nexport function createQueuedSender(childProcess: cp.ChildProcess): IQueuedSender {\n\tlet msgQueue: string[] = [];\n\tlet useQueue = false;\n\n\tconst send = function (msg: any): void {\n\t\tif (useQueue) {\n\t\t\tmsgQueue.push(msg); // add to the queue if the process cannot handle more messages\n\t\t\treturn;\n\t\t}\n\n\t\tconst result = childProcess.send(msg, (error: Error | null) => {\n\t\t\tif (error) {\n\t\t\t\tconsole.error(error); // unlikely to happen, best we can do is log this error\n\t\t\t}\n\n\t\t\tuseQueue = false; // we are good again to send directly without queue\n\n\t\t\t// now send all the messages that we have in our queue and did not send yet\n\t\t\tif (msgQueue.length > 0) {\n\t\t\t\tconst msgQueueCopy = msgQueue.slice(0);\n\t\t\t\tmsgQueue = [];\n\t\t\t\tmsgQueueCopy.forEach(entry => send(entry));\n\t\t\t}\n\t\t});\n\n\t\tif (!result || Platform.isWindows /* workaround https://github.com/nodejs/node/issues/7657 */) {\n\t\t\tuseQueue = true;\n\t\t}\n\t};\n\n\treturn { send };\n}\n\nexport namespace win32 {\n\texport async function findExecutable(command: string, cwd?: string, paths?: string[]): Promise<string> {\n\t\t// If we have an absolute path then we take it.\n\t\tif (path.isAbsolute(command)) {\n\t\t\treturn command;\n\t\t}\n\t\tif (cwd === undefined) {\n\t\t\tcwd = process.cwd();\n\t\t}\n\t\tconst dir = path.dirname(command);\n\t\tif (dir !== '.') {\n\t\t\t// We have a directory and the directory is relative (see above). Make the path absolute\n\t\t\t// to the current working directory.\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\t\tif (paths === undefined && Types.isString(process.env['PATH'])) {\n\t\t\tpaths = process.env['PATH'].split(path.delimiter);\n\t\t}\n\t\t// No PATH environment. Make path absolute to the cwd.\n\t\tif (paths === undefined || paths.length === 0) {\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\n\t\tasync function fileExists(path: string): Promise<boolean> {\n\t\t\tif (await pfs.Promises.exists(path)) {\n\t\t\t\tlet statValue: Stats | undefined;\n\t\t\t\ttry {\n\t\t\t\t\tstatValue = await pfs.Promises.stat(path);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (e.message.startsWith('EACCES')) {\n\t\t\t\t\t\t// it might be symlink\n\t\t\t\t\t\tstatValue = await pfs.Promises.lstat(path);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn statValue ? !statValue.isDirectory() : false;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t// We have a simple file name. We get the path variable from the env\n\t\t// and try to find the executable on the path.\n\t\tfor (let pathEntry of paths) {\n\t\t\t// The path entry is absolute.\n\t\t\tlet fullPath: string;\n\t\t\tif (path.isAbsolute(pathEntry)) {\n\t\t\t\tfullPath = path.join(pathEntry, command);\n\t\t\t} else {\n\t\t\t\tfullPath = path.join(cwd, pathEntry, command);\n\t\t\t}\n\t\t\tif (await fileExists(fullPath)) {\n\t\t\t\treturn fullPath;\n\t\t\t}\n\t\t\tlet withExtension = fullPath + '.com';\n\t\t\tif (await fileExists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t\twithExtension = fullPath + '.exe';\n\t\t\tif (await fileExists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t}\n\t\treturn path.join(cwd, command);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { release, userInfo } from 'os';\nimport * as platform from 'vs/base/common/platform';\nimport { getFirstAvailablePowerShellInstallation } from 'vs/base/node/powershell';\nimport * as processes from 'vs/base/node/processes';\n\n/**\n * Gets the detected default shell for the _system_, not to be confused with VS Code's _default_\n * shell that the terminal uses by default.\n * @param os The platform to detect the shell of.\n */\nexport async function getSystemShell(os: platform.OperatingSystem, env: platform.IProcessEnvironment): Promise<string> {\n\tif (os === platform.OperatingSystem.Windows) {\n\t\tif (platform.isWindows) {\n\t\t\treturn getSystemShellWindows();\n\t\t}\n\t\t// Don't detect Windows shell when not on Windows\n\t\treturn processes.getWindowsShell(env);\n\t}\n\n\treturn getSystemShellUnixLike(os, env);\n}\n\nexport function getSystemShellSync(os: platform.OperatingSystem, env: platform.IProcessEnvironment): string {\n\tif (os === platform.OperatingSystem.Windows) {\n\t\tif (platform.isWindows) {\n\t\t\treturn getSystemShellWindowsSync(env);\n\t\t}\n\t\t// Don't detect Windows shell when not on Windows\n\t\treturn processes.getWindowsShell(env);\n\t}\n\n\treturn getSystemShellUnixLike(os, env);\n}\n\nlet _TERMINAL_DEFAULT_SHELL_UNIX_LIKE: string | null = null;\nfunction getSystemShellUnixLike(os: platform.OperatingSystem, env: platform.IProcessEnvironment): string {\n\t// Only use $SHELL for the current OS\n\tif (platform.isLinux && os === platform.OperatingSystem.Macintosh || platform.isMacintosh && os === platform.OperatingSystem.Linux) {\n\t\treturn '/bin/bash';\n\t}\n\n\tif (!_TERMINAL_DEFAULT_SHELL_UNIX_LIKE) {\n\t\tlet unixLikeTerminal: string | undefined;\n\t\tif (platform.isWindows) {\n\t\t\tunixLikeTerminal = '/bin/bash'; // for WSL\n\t\t} else {\n\t\t\tunixLikeTerminal = env['SHELL'];\n\n\t\t\tif (!unixLikeTerminal) {\n\t\t\t\ttry {\n\t\t\t\t\t// It's possible for $SHELL to be unset, this API reads /etc/passwd. See https://github.com/github/codespaces/issues/1639\n\t\t\t\t\t// Node docs: \"Throws a SystemError if a user has no username or homedir.\"\n\t\t\t\t\tunixLikeTerminal = userInfo().shell;\n\t\t\t\t} catch (err) { }\n\t\t\t}\n\n\t\t\tif (!unixLikeTerminal) {\n\t\t\t\tunixLikeTerminal = 'sh';\n\t\t\t}\n\n\t\t\t// Some systems have $SHELL set to /bin/false which breaks the terminal\n\t\t\tif (unixLikeTerminal === '/bin/false') {\n\t\t\t\tunixLikeTerminal = '/bin/bash';\n\t\t\t}\n\t\t}\n\t\t_TERMINAL_DEFAULT_SHELL_UNIX_LIKE = unixLikeTerminal;\n\t}\n\treturn _TERMINAL_DEFAULT_SHELL_UNIX_LIKE;\n}\n\nlet _TERMINAL_DEFAULT_SHELL_WINDOWS: string | null = null;\nasync function getSystemShellWindows(): Promise<string> {\n\tif (!_TERMINAL_DEFAULT_SHELL_WINDOWS) {\n\t\t_TERMINAL_DEFAULT_SHELL_WINDOWS = (await getFirstAvailablePowerShellInstallation())!.exePath;\n\t}\n\treturn _TERMINAL_DEFAULT_SHELL_WINDOWS;\n}\n\nfunction getSystemShellWindowsSync(env: platform.IProcessEnvironment): string {\n\tif (_TERMINAL_DEFAULT_SHELL_WINDOWS) {\n\t\treturn _TERMINAL_DEFAULT_SHELL_WINDOWS;\n\t}\n\n\tconst isAtLeastWindows10 = platform.isWindows && parseFloat(release()) >= 10;\n\tconst is32ProcessOn64Windows = env.hasOwnProperty('PROCESSOR_ARCHITEW6432');\n\tconst powerShellPath = `${env['windir']}\\\\${is32ProcessOn64Windows ? 'Sysnative' : 'System32'}\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe`;\n\treturn isAtLeastWindows10 ? powerShellPath : processes.getWindowsShell(env);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ChildProcess, fork, ForkOptions } from 'child_process';\nimport { createCancelablePromise, Delayer } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { isRemoteConsoleLog, log } from 'vs/base/common/console';\nimport * as errors from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { dispose, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { deepClone } from 'vs/base/common/objects';\nimport { createQueuedSender, removeDangerousEnvVariables } from 'vs/base/node/processes';\nimport { ChannelClient as IPCClient, ChannelServer as IPCServer, IChannel, IChannelClient } from 'vs/base/parts/ipc/common/ipc';\n\n/**\n * This implementation doesn't perform well since it uses base64 encoding for buffers.\n * We should move all implementations to use named ipc.net, so we stop depending on cp.fork.\n */\n\nexport class Server<TContext extends string> extends IPCServer<TContext> {\n\tconstructor(ctx: TContext) {\n\t\tsuper({\n\t\t\tsend: r => {\n\t\t\t\ttry {\n\t\t\t\t\tif (process.send) {\n\t\t\t\t\t\tprocess.send((<Buffer>r.buffer).toString('base64'));\n\t\t\t\t\t}\n\t\t\t\t} catch (e) { /* not much to do */ }\n\t\t\t},\n\t\t\tonMessage: Event.fromNodeEventEmitter(process, 'message', msg => VSBuffer.wrap(Buffer.from(msg, 'base64')))\n\t\t}, ctx);\n\n\t\tprocess.once('disconnect', () => this.dispose());\n\t}\n}\n\nexport interface IIPCOptions {\n\n\t/**\n\t * A descriptive name for the server this connection is to. Used in logging.\n\t */\n\tserverName: string;\n\n\t/**\n\t * Time in millies before killing the ipc process. The next request after killing will start it again.\n\t */\n\ttimeout?: number;\n\n\t/**\n\t * Arguments to the module to execute.\n\t */\n\targs?: string[];\n\n\t/**\n\t * Environment key-value pairs to be passed to the process that gets spawned for the ipc.\n\t */\n\tenv?: any;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application executed.\n\t */\n\tdebug?: number;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application and breaking it on the first line.\n\t */\n\tdebugBrk?: number;\n\n\t/**\n\t * If set, starts the fork with empty execArgv. If not set, execArgv from the parent process are inherited,\n\t * except --inspect= and --inspect-brk= which are filtered as they would result in a port conflict.\n\t */\n\tfreshExecArgv?: boolean;\n\n\t/**\n\t * Enables our createQueuedSender helper for this Client. Uses a queue when the internal Node.js queue is\n\t * full of messages - see notes on that method.\n\t */\n\tuseQueue?: boolean;\n}\n\nexport class Client implements IChannelClient, IDisposable {\n\n\tprivate disposeDelayer: Delayer<void> | undefined;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate child: ChildProcess | null;\n\tprivate _client: IPCClient | null;\n\tprivate channels = new Map<string, IChannel>();\n\n\tprivate readonly _onDidProcessExit = new Emitter<{ code: number, signal: string }>();\n\treadonly onDidProcessExit = this._onDidProcessExit.event;\n\n\tconstructor(private modulePath: string, private options: IIPCOptions) {\n\t\tconst timeout = options && options.timeout ? options.timeout : 60000;\n\t\tthis.disposeDelayer = new Delayer<void>(timeout);\n\t\tthis.child = null;\n\t\tthis._client = null;\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\treturn that.requestPromise<T>(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg?: any) {\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprotected requestPromise<T>(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<T> {\n\t\tif (!this.disposeDelayer) {\n\t\t\treturn Promise.reject(new Error('disposed'));\n\t\t}\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(errors.canceled());\n\t\t}\n\n\t\tthis.disposeDelayer.cancel();\n\n\t\tconst channel = this.getCachedChannel(channelName);\n\t\tconst result = createCancelablePromise(token => channel.call<T>(name, arg, token));\n\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(() => result.cancel());\n\n\t\tconst disposable = toDisposable(() => result.cancel());\n\t\tthis.activeRequests.add(disposable);\n\n\t\tresult.finally(() => {\n\t\t\tcancellationTokenListener.dispose();\n\t\t\tthis.activeRequests.delete(disposable);\n\n\t\t\tif (this.activeRequests.size === 0 && this.disposeDelayer) {\n\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tprotected requestEvent<T>(channelName: string, name: string, arg?: any): Event<T> {\n\t\tif (!this.disposeDelayer) {\n\t\t\treturn Event.None;\n\t\t}\n\n\t\tthis.disposeDelayer.cancel();\n\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tconst channel = this.getCachedChannel(channelName);\n\t\t\t\tconst event: Event<T> = channel.listen(name, arg);\n\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t\tthis.activeRequests.add(listener);\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis.activeRequests.delete(listener);\n\t\t\t\tlistener.dispose();\n\n\t\t\t\tif (this.activeRequests.size === 0 && this.disposeDelayer) {\n\t\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate get client(): IPCClient {\n\t\tif (!this._client) {\n\t\t\tconst args = this.options && this.options.args ? this.options.args : [];\n\t\t\tconst forkOpts: ForkOptions = Object.create(null);\n\n\t\t\tforkOpts.env = { ...deepClone(process.env), 'VSCODE_PARENT_PID': String(process.pid) };\n\n\t\t\tif (this.options && this.options.env) {\n\t\t\t\tforkOpts.env = { ...forkOpts.env, ...this.options.env };\n\t\t\t}\n\n\t\t\tif (this.options && this.options.freshExecArgv) {\n\t\t\t\tforkOpts.execArgv = [];\n\t\t\t}\n\n\t\t\tif (this.options && typeof this.options.debug === 'number') {\n\t\t\t\tforkOpts.execArgv = ['--nolazy', '--inspect=' + this.options.debug];\n\t\t\t}\n\n\t\t\tif (this.options && typeof this.options.debugBrk === 'number') {\n\t\t\t\tforkOpts.execArgv = ['--nolazy', '--inspect-brk=' + this.options.debugBrk];\n\t\t\t}\n\n\t\t\tif (forkOpts.execArgv === undefined) {\n\t\t\t\t// if not set, the forked process inherits the execArgv of the parent process\n\t\t\t\t// --inspect and --inspect-brk can not be inherited as the port would conflict\n\t\t\t\tforkOpts.execArgv = process.execArgv.filter(a => !/^--inspect(-brk)?=/.test(a)); // remove\n\t\t\t}\n\n\t\t\tremoveDangerousEnvVariables(forkOpts.env);\n\n\t\t\tthis.child = fork(this.modulePath, args, forkOpts);\n\n\t\t\tconst onMessageEmitter = new Emitter<VSBuffer>();\n\t\t\tconst onRawMessage = Event.fromNodeEventEmitter(this.child, 'message', msg => msg);\n\n\t\t\tonRawMessage(msg => {\n\n\t\t\t\t// Handle remote console logs specially\n\t\t\t\tif (isRemoteConsoleLog(msg)) {\n\t\t\t\t\tlog(msg, `IPC Library: ${this.options.serverName}`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Anything else goes to the outside\n\t\t\t\tonMessageEmitter.fire(VSBuffer.wrap(Buffer.from(msg, 'base64')));\n\t\t\t});\n\n\t\t\tconst sender = this.options.useQueue ? createQueuedSender(this.child) : this.child;\n\t\t\tconst send = (r: VSBuffer) => this.child && this.child.connected && sender.send((<Buffer>r.buffer).toString('base64'));\n\t\t\tconst onMessage = onMessageEmitter.event;\n\t\t\tconst protocol = { send, onMessage };\n\n\t\t\tthis._client = new IPCClient(protocol);\n\n\t\t\tconst onExit = () => this.disposeClient();\n\t\t\tprocess.once('exit', onExit);\n\n\t\t\tthis.child.on('error', err => console.warn('IPC \"' + this.options.serverName + '\" errored with ' + err));\n\n\t\t\tthis.child.on('exit', (code: any, signal: any) => {\n\t\t\t\tprocess.removeListener('exit' as 'loaded', onExit); // https://github.com/electron/electron/issues/21475\n\n\t\t\t\tthis.activeRequests.forEach(r => dispose(r));\n\t\t\t\tthis.activeRequests.clear();\n\n\t\t\t\tif (code !== 0 && signal !== 'SIGTERM') {\n\t\t\t\t\tconsole.warn('IPC \"' + this.options.serverName + '\" crashed with exit code ' + code + ' and signal ' + signal);\n\t\t\t\t}\n\n\t\t\t\tif (this.disposeDelayer) {\n\t\t\t\t\tthis.disposeDelayer.cancel();\n\t\t\t\t}\n\t\t\t\tthis.disposeClient();\n\t\t\t\tthis._onDidProcessExit.fire({ code, signal });\n\t\t\t});\n\t\t}\n\n\t\treturn this._client;\n\t}\n\n\tprivate getCachedChannel(name: string): IChannel {\n\t\tlet channel = this.channels.get(name);\n\n\t\tif (!channel) {\n\t\t\tchannel = this.client.getChannel(name);\n\t\t\tthis.channels.set(name, channel);\n\t\t}\n\n\t\treturn channel;\n\t}\n\n\tprivate disposeClient() {\n\t\tif (this._client) {\n\t\t\tif (this.child) {\n\t\t\t\tthis.child.kill();\n\t\t\t\tthis.child = null;\n\t\t\t}\n\t\t\tthis._client = null;\n\t\t\tthis.channels.clear();\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis._onDidProcessExit.dispose();\n\t\tif (this.disposeDelayer) {\n\t\t\tthis.disposeDelayer.cancel();\n\t\t\tthis.disposeDelayer = undefined;\n\t\t}\n\t\tthis.disposeClient();\n\t\tthis.activeRequests.clear();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as platform from 'vs/base/common/platform';\nimport { IExperimentationFilterProvider } from 'tas-client-umd';\n\nexport const ASSIGNMENT_STORAGE_KEY = 'VSCode.ABExp.FeatureData';\nexport const ASSIGNMENT_REFETCH_INTERVAL = 0; // no polling\n\nexport interface IAssignmentService {\n\treadonly _serviceBrand: undefined;\n\tgetTreatment<T extends string | number | boolean>(name: string): Promise<T | undefined>;\n}\n\nexport enum TargetPopulation {\n\tTeam = 'team',\n\tInternal = 'internal',\n\tInsiders = 'insider',\n\tPublic = 'public',\n}\n\n/*\nBased upon the official VSCode currently existing filters in the\nExP backend for the VSCode cluster.\nhttps://experimentation.visualstudio.com/Analysis%20and%20Experimentation/_git/AnE.ExP.TAS.TachyonHost.Configuration?path=%2FConfigurations%2Fvscode%2Fvscode.json&version=GBmaster\n\"X-MSEdge-Market\": \"detection.market\",\n\"X-FD-Corpnet\": \"detection.corpnet\",\n\"X-VSCode-AppVersion\": \"appversion\",\n\"X-VSCode-Build\": \"build\",\n\"X-MSEdge-ClientId\": \"clientid\",\n\"X-VSCode-ExtensionName\": \"extensionname\",\n\"X-VSCode-TargetPopulation\": \"targetpopulation\",\n\"X-VSCode-Language\": \"language\"\n*/\nexport enum Filters {\n\t/**\n\t * The market in which the extension is distributed.\n\t */\n\tMarket = 'X-MSEdge-Market',\n\n\t/**\n\t * The corporation network.\n\t */\n\tCorpNet = 'X-FD-Corpnet',\n\n\t/**\n\t * Version of the application which uses experimentation service.\n\t */\n\tApplicationVersion = 'X-VSCode-AppVersion',\n\n\t/**\n\t * Insiders vs Stable.\n\t */\n\tBuild = 'X-VSCode-Build',\n\n\t/**\n\t * Client Id which is used as primary unit for the experimentation.\n\t */\n\tClientId = 'X-MSEdge-ClientId',\n\n\t/**\n\t * Extension header.\n\t */\n\tExtensionName = 'X-VSCode-ExtensionName',\n\n\t/**\n\t * The language in use by VS Code\n\t */\n\tLanguage = 'X-VSCode-Language',\n\n\t/**\n\t * The target population.\n\t * This is used to separate internal, early preview, GA, etc.\n\t */\n\tTargetPopulation = 'X-VSCode-TargetPopulation',\n}\n\nexport class AssignmentFilterProvider implements IExperimentationFilterProvider {\n\tconstructor(\n\t\tprivate version: string,\n\t\tprivate appName: string,\n\t\tprivate machineId: string,\n\t\tprivate targetPopulation: TargetPopulation\n\t) { }\n\n\tgetFilterValue(filter: string): string | null {\n\t\tswitch (filter) {\n\t\t\tcase Filters.ApplicationVersion:\n\t\t\t\treturn this.version; // productService.version\n\t\t\tcase Filters.Build:\n\t\t\t\treturn this.appName; // productService.nameLong\n\t\t\tcase Filters.ClientId:\n\t\t\t\treturn this.machineId;\n\t\t\tcase Filters.Language:\n\t\t\t\treturn platform.language;\n\t\t\tcase Filters.ExtensionName:\n\t\t\t\treturn 'vscode-core'; // always return vscode-core for exp service\n\t\t\tcase Filters.TargetPopulation:\n\t\t\t\treturn this.targetPopulation;\n\t\t\tdefault:\n\t\t\t\treturn '';\n\t\t}\n\t}\n\n\tgetFilters(): Map<string, any> {\n\t\tlet filters: Map<string, any> = new Map<string, any>();\n\t\tlet filterValues = Object.values(Filters);\n\t\tfor (let value of filterValues) {\n\t\t\tfilters.set(value, this.getFilterValue(value));\n\t\t}\n\n\t\treturn filters;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toLocalISOString } from 'vs/base/common/date';\nimport { memoize } from 'vs/base/common/decorators';\nimport { FileAccess } from 'vs/base/common/network';\nimport { dirname, join, normalize, resolve } from 'vs/base/common/path';\nimport { env } from 'vs/base/common/process';\nimport { joinPath } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { IDebugParams, IExtensionHostDebugParams, INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ExtensionKind } from 'vs/platform/extensions/common/extensions';\nimport { IProductService } from 'vs/platform/product/common/productService';\n\nexport interface INativeEnvironmentPaths {\n\n\t/**\n\t * The user data directory to use for anything that should be\n\t * persisted except for the content that is meant for the `homeDir`.\n\t *\n\t * Only one instance of VSCode can use the same `userDataDir`.\n\t */\n\tuserDataDir: string\n\n\t/**\n\t * The user home directory mainly used for persisting extensions\n\t * and global configuration that should be shared across all\n\t * versions.\n\t */\n\thomeDir: string;\n\n\t/**\n\t * OS tmp dir.\n\t */\n\ttmpDir: string,\n}\n\nexport abstract class AbstractNativeEnvironmentService implements INativeEnvironmentService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\t@memoize\n\tget appRoot(): string { return dirname(FileAccess.asFileUri('', require).fsPath); }\n\n\t@memoize\n\tget userHome(): URI { return URI.file(this.paths.homeDir); }\n\n\t@memoize\n\tget userDataPath(): string { return this.paths.userDataDir; }\n\n\t@memoize\n\tget appSettingsHome(): URI { return URI.file(join(this.userDataPath, 'User')); }\n\n\t@memoize\n\tget tmpDir(): URI { return URI.file(this.paths.tmpDir); }\n\n\t@memoize\n\tget cacheHome(): URI { return URI.file(this.userDataPath); }\n\n\t@memoize\n\tget userRoamingDataHome(): URI { return this.appSettingsHome; }\n\n\t@memoize\n\tget settingsResource(): URI { return joinPath(this.userRoamingDataHome, 'settings.json'); }\n\n\t@memoize\n\tget userDataSyncHome(): URI { return joinPath(this.userRoamingDataHome, 'sync'); }\n\n\tget logsPath(): string {\n\t\tif (!this.args.logsPath) {\n\t\t\tconst key = toLocalISOString(new Date()).replace(/-|:|\\.\\d+Z$/g, '');\n\t\t\tthis.args.logsPath = join(this.userDataPath, 'logs', key);\n\t\t}\n\n\t\treturn this.args.logsPath;\n\t}\n\n\t@memoize\n\tget userDataSyncLogResource(): URI { return URI.file(join(this.logsPath, 'userDataSync.log')); }\n\n\t@memoize\n\tget sync(): 'on' | 'off' | undefined { return this.args.sync; }\n\n\t@memoize\n\tget machineSettingsResource(): URI { return joinPath(URI.file(join(this.userDataPath, 'Machine')), 'settings.json'); }\n\n\t@memoize\n\tget globalStorageHome(): URI { return URI.joinPath(this.appSettingsHome, 'globalStorage'); }\n\n\t@memoize\n\tget workspaceStorageHome(): URI { return URI.joinPath(this.appSettingsHome, 'workspaceStorage'); }\n\n\t@memoize\n\tget keybindingsResource(): URI { return joinPath(this.userRoamingDataHome, 'keybindings.json'); }\n\n\t@memoize\n\tget keyboardLayoutResource(): URI { return joinPath(this.userRoamingDataHome, 'keyboardLayout.json'); }\n\n\t@memoize\n\tget argvResource(): URI {\n\t\tconst vscodePortable = env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn URI.file(join(vscodePortable, 'argv.json'));\n\t\t}\n\n\t\treturn joinPath(this.userHome, this.productService.dataFolderName, 'argv.json');\n\t}\n\n\t@memoize\n\tget snippetsHome(): URI { return joinPath(this.userRoamingDataHome, 'snippets'); }\n\n\t@memoize\n\tget isExtensionDevelopment(): boolean { return !!this.args.extensionDevelopmentPath; }\n\n\t@memoize\n\tget untitledWorkspacesHome(): URI { return URI.file(join(this.userDataPath, 'Workspaces')); }\n\n\t@memoize\n\tget installSourcePath(): string { return join(this.userDataPath, 'installSource'); }\n\n\t@memoize\n\tget builtinExtensionsPath(): string {\n\t\tconst cliBuiltinExtensionsDir = this.args['builtin-extensions-dir'];\n\t\tif (cliBuiltinExtensionsDir) {\n\t\t\treturn resolve(cliBuiltinExtensionsDir);\n\t\t}\n\n\t\treturn normalize(join(FileAccess.asFileUri('', require).fsPath, '..', 'extensions'));\n\t}\n\n\tget extensionsDownloadPath(): string {\n\t\tconst cliExtensionsDownloadDir = this.args['extensions-download-dir'];\n\t\tif (cliExtensionsDownloadDir) {\n\t\t\treturn resolve(cliExtensionsDownloadDir);\n\t\t}\n\n\t\treturn join(this.userDataPath, 'CachedExtensionVSIXs');\n\t}\n\n\t@memoize\n\tget extensionsPath(): string {\n\t\tconst cliExtensionsDir = this.args['extensions-dir'];\n\t\tif (cliExtensionsDir) {\n\t\t\treturn resolve(cliExtensionsDir);\n\t\t}\n\n\t\tconst vscodeExtensions = env['VSCODE_EXTENSIONS'];\n\t\tif (vscodeExtensions) {\n\t\t\treturn vscodeExtensions;\n\t\t}\n\n\t\tconst vscodePortable = env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn join(vscodePortable, 'extensions');\n\t\t}\n\n\t\treturn joinPath(this.userHome, this.productService.dataFolderName, 'extensions').fsPath;\n\t}\n\n\t@memoize\n\tget extensionDevelopmentLocationURI(): URI[] | undefined {\n\t\tconst extensionDevelopmentPaths = this.args.extensionDevelopmentPath;\n\t\tif (Array.isArray(extensionDevelopmentPaths)) {\n\t\t\treturn extensionDevelopmentPaths.map(extensionDevelopmentPath => {\n\t\t\t\tif (/^[^:/?#]+?:\\/\\//.test(extensionDevelopmentPath)) {\n\t\t\t\t\treturn URI.parse(extensionDevelopmentPath);\n\t\t\t\t}\n\n\t\t\t\treturn URI.file(normalize(extensionDevelopmentPath));\n\t\t\t});\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\t@memoize\n\tget extensionDevelopmentKind(): ExtensionKind[] | undefined {\n\t\treturn this.args.extensionDevelopmentKind?.map(kind => kind === 'ui' || kind === 'workspace' || kind === 'web' ? kind : 'workspace');\n\t}\n\n\t@memoize\n\tget extensionTestsLocationURI(): URI | undefined {\n\t\tconst extensionTestsPath = this.args.extensionTestsPath;\n\t\tif (extensionTestsPath) {\n\t\t\tif (/^[^:/?#]+?:\\/\\//.test(extensionTestsPath)) {\n\t\t\t\treturn URI.parse(extensionTestsPath);\n\t\t\t}\n\n\t\t\treturn URI.file(normalize(extensionTestsPath));\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tget disableExtensions(): boolean | string[] {\n\t\tif (this.args['disable-extensions']) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst disableExtensions = this.args['disable-extension'];\n\t\tif (disableExtensions) {\n\t\t\tif (typeof disableExtensions === 'string') {\n\t\t\t\treturn [disableExtensions];\n\t\t\t}\n\n\t\t\tif (Array.isArray(disableExtensions) && disableExtensions.length > 0) {\n\t\t\t\treturn disableExtensions;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t@memoize\n\tget debugExtensionHost(): IExtensionHostDebugParams { return parseExtensionHostPort(this.args, this.isBuilt); }\n\tget debugRenderer(): boolean { return !!this.args.debugRenderer; }\n\n\tget isBuilt(): boolean { return !env['VSCODE_DEV']; }\n\tget verbose(): boolean { return !!this.args.verbose; }\n\tget logLevel(): string | undefined { return this.args.log; }\n\n\t@memoize\n\tget serviceMachineIdResource(): URI { return joinPath(URI.file(this.userDataPath), 'machineid'); }\n\n\tget crashReporterId(): string | undefined { return this.args['crash-reporter-id']; }\n\tget crashReporterDirectory(): string | undefined { return this.args['crash-reporter-directory']; }\n\n\tget driverHandle(): string | undefined { return this.args['driver']; }\n\n\t@memoize\n\tget telemetryLogResource(): URI { return URI.file(join(this.logsPath, 'telemetry.log')); }\n\tget disableTelemetry(): boolean { return !!this.args['disable-telemetry']; }\n\n\t@memoize\n\tget disableWorkspaceTrust(): boolean { return !!this.args['disable-workspace-trust']; }\n\n\tget args(): NativeParsedArgs { return this._args; }\n\n\tconstructor(\n\t\tprivate readonly _args: NativeParsedArgs,\n\t\tprivate readonly paths: INativeEnvironmentPaths,\n\t\tprotected readonly productService: IProductService\n\t) { }\n}\n\nexport function parseExtensionHostPort(args: NativeParsedArgs, isBuild: boolean): IExtensionHostDebugParams {\n\treturn parseDebugParams(args['inspect-extensions'], args['inspect-brk-extensions'], 5870, isBuild, args.debugId, args.extensionEnvironment);\n}\n\nexport function parseSearchPort(args: NativeParsedArgs, isBuild: boolean): IDebugParams {\n\treturn parseDebugParams(args['inspect-search'], args['inspect-brk-search'], 5876, isBuild, args.extensionEnvironment);\n}\n\nexport function parsePtyHostPort(args: NativeParsedArgs, isBuild: boolean): IDebugParams {\n\treturn parseDebugParams(args['inspect-ptyhost'], args['inspect-brk-ptyhost'], 5877, isBuild, args.extensionEnvironment);\n}\n\nfunction parseDebugParams(debugArg: string | undefined, debugBrkArg: string | undefined, defaultBuildPort: number, isBuild: boolean, debugId?: string, environmentString?: string): IExtensionHostDebugParams {\n\tconst portStr = debugBrkArg || debugArg;\n\tconst port = Number(portStr) || (!isBuild ? defaultBuildPort : null);\n\tconst brk = port ? Boolean(!!debugBrkArg) : false;\n\tlet env: Record<string, string> | undefined;\n\tif (environmentString) {\n\t\ttry {\n\t\t\tenv = JSON.parse(environmentString);\n\t\t} catch {\n\t\t\t// ignore\n\t\t}\n\t}\n\n\treturn { port, break: brk, debugId, env };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as minimist from 'minimist';\nimport { isWindows } from 'vs/base/common/platform';\nimport { localize } from 'vs/nls';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\n\n/**\n * This code is also used by standalone cli's. Avoid adding any other dependencies.\n */\nconst helpCategories = {\n\to: localize('optionsUpperCase', \"Options\"),\n\te: localize('extensionsManagement', \"Extensions Management\"),\n\tt: localize('troubleshooting', \"Troubleshooting\")\n};\n\nexport interface Option<OptionType> {\n\ttype: OptionType;\n\talias?: string;\n\tdeprecates?: string; // old deprecated id\n\targs?: string | string[];\n\tdescription?: string;\n\tcat?: keyof typeof helpCategories;\n}\n\nexport type OptionDescriptions<T> = {\n\t[P in keyof T]: Option<OptionTypeName<T[P]>>;\n};\n\ntype OptionTypeName<T> =\n\tT extends boolean ? 'boolean' :\n\tT extends string ? 'string' :\n\tT extends string[] ? 'string[]' :\n\tT extends undefined ? 'undefined' :\n\t'unknown';\n\nexport const OPTIONS: OptionDescriptions<Required<NativeParsedArgs>> = {\n\t'diff': { type: 'boolean', cat: 'o', alias: 'd', args: ['file', 'file'], description: localize('diff', \"Compare two files with each other.\") },\n\t'add': { type: 'boolean', cat: 'o', alias: 'a', args: 'folder', description: localize('add', \"Add folder(s) to the last active window.\") },\n\t'goto': { type: 'boolean', cat: 'o', alias: 'g', args: 'file:line[:character]', description: localize('goto', \"Open a file at the path on the specified line and character position.\") },\n\t'new-window': { type: 'boolean', cat: 'o', alias: 'n', description: localize('newWindow', \"Force to open a new window.\") },\n\t'reuse-window': { type: 'boolean', cat: 'o', alias: 'r', description: localize('reuseWindow', \"Force to open a file or folder in an already opened window.\") },\n\t'wait': { type: 'boolean', cat: 'o', alias: 'w', description: localize('wait', \"Wait for the files to be closed before returning.\") },\n\t'waitMarkerFilePath': { type: 'string' },\n\t'locale': { type: 'string', cat: 'o', args: 'locale', description: localize('locale', \"The locale to use (e.g. en-US or zh-TW).\") },\n\t'user-data-dir': { type: 'string', cat: 'o', args: 'dir', description: localize('userDataDir', \"Specifies the directory that user data is kept in. Can be used to open multiple distinct instances of Code.\") },\n\t'help': { type: 'boolean', cat: 'o', alias: 'h', description: localize('help', \"Print usage.\") },\n\n\t'extensions-dir': { type: 'string', deprecates: 'extensionHomePath', cat: 'e', args: 'dir', description: localize('extensionHomePath', \"Set the root path for extensions.\") },\n\t'extensions-download-dir': { type: 'string' },\n\t'builtin-extensions-dir': { type: 'string' },\n\t'list-extensions': { type: 'boolean', cat: 'e', description: localize('listExtensions', \"List the installed extensions.\") },\n\t'show-versions': { type: 'boolean', cat: 'e', description: localize('showVersions', \"Show versions of installed extensions, when using --list-extensions.\") },\n\t'category': { type: 'string', cat: 'e', description: localize('category', \"Filters installed extensions by provided category, when using --list-extensions.\"), args: 'category' },\n\t'install-extension': { type: 'string[]', cat: 'e', args: 'extension-id[@version] | path-to-vsix', description: localize('installExtension', \"Installs or updates the extension. The identifier of an extension is always `${publisher}.${name}`. Use `--force` argument to update to latest version. To install a specific version provide `@${version}`. For example: 'vscode.csharp@1.2.3'.\") },\n\t'pre-release': { type: 'boolean', cat: 'e', description: localize('install prerelease', \"Installs the pre-release version of the extension, when using --install-extension\") },\n\t'uninstall-extension': { type: 'string[]', cat: 'e', args: 'extension-id', description: localize('uninstallExtension', \"Uninstalls an extension.\") },\n\t'enable-proposed-api': { type: 'string[]', cat: 'e', args: 'extension-id', description: localize('experimentalApis', \"Enables proposed API features for extensions. Can receive one or more extension IDs to enable individually.\") },\n\n\t'version': { type: 'boolean', cat: 't', alias: 'v', description: localize('version', \"Print version.\") },\n\t'verbose': { type: 'boolean', cat: 't', description: localize('verbose', \"Print verbose output (implies --wait).\") },\n\t'log': { type: 'string', cat: 't', args: 'level', description: localize('log', \"Log level to use. Default is 'info'. Allowed values are 'critical', 'error', 'warn', 'info', 'debug', 'trace', 'off'.\") },\n\t'status': { type: 'boolean', alias: 's', cat: 't', description: localize('status', \"Print process usage and diagnostics information.\") },\n\t'prof-startup': { type: 'boolean', cat: 't', description: localize('prof-startup', \"Run CPU profiler during startup.\") },\n\t'prof-append-timers': { type: 'string' },\n\t'no-cached-data': { type: 'boolean' },\n\t'prof-startup-prefix': { type: 'string' },\n\t'prof-v8-extensions': { type: 'boolean' },\n\t'disable-extensions': { type: 'boolean', deprecates: 'disableExtensions', cat: 't', description: localize('disableExtensions', \"Disable all installed extensions.\") },\n\t'disable-extension': { type: 'string[]', cat: 't', args: 'extension-id', description: localize('disableExtension', \"Disable an extension.\") },\n\t'sync': { type: 'string', cat: 't', description: localize('turn sync', \"Turn sync on or off.\"), args: ['on', 'off'] },\n\n\t'inspect-extensions': { type: 'string', deprecates: 'debugPluginHost', args: 'port', cat: 't', description: localize('inspect-extensions', \"Allow debugging and profiling of extensions. Check the developer tools for the connection URI.\") },\n\t'inspect-brk-extensions': { type: 'string', deprecates: 'debugBrkPluginHost', args: 'port', cat: 't', description: localize('inspect-brk-extensions', \"Allow debugging and profiling of extensions with the extension host being paused after start. Check the developer tools for the connection URI.\") },\n\t'disable-gpu': { type: 'boolean', cat: 't', description: localize('disableGPU', \"Disable GPU hardware acceleration.\") },\n\t'ms-enable-electron-run-as-node': { type: 'boolean' },\n\t'max-memory': { type: 'string', cat: 't', description: localize('maxMemory', \"Max memory size for a window (in Mbytes).\"), args: 'memory' },\n\t'telemetry': { type: 'boolean', cat: 't', description: localize('telemetry', \"Shows all telemetry events which VS code collects.\") },\n\n\t'remote': { type: 'string' },\n\t'folder-uri': { type: 'string[]', cat: 'o', args: 'uri' },\n\t'file-uri': { type: 'string[]', cat: 'o', args: 'uri' },\n\n\t'locate-extension': { type: 'string[]' },\n\t'extensionDevelopmentPath': { type: 'string[]' },\n\t'extensionDevelopmentKind': { type: 'string[]' },\n\t'extensionTestsPath': { type: 'string' },\n\t'extensionEnvironment': { type: 'string' },\n\t'debugId': { type: 'string' },\n\t'debugRenderer': { type: 'boolean' },\n\t'inspect-ptyhost': { type: 'string' },\n\t'inspect-brk-ptyhost': { type: 'string' },\n\t'inspect-search': { type: 'string', deprecates: 'debugSearch' },\n\t'inspect-brk-search': { type: 'string', deprecates: 'debugBrkSearch' },\n\t'export-default-configuration': { type: 'string' },\n\t'install-source': { type: 'string' },\n\t'driver': { type: 'string' },\n\t'logExtensionHostCommunication': { type: 'boolean' },\n\t'skip-release-notes': { type: 'boolean' },\n\t'skip-welcome': { type: 'boolean' },\n\t'disable-telemetry': { type: 'boolean' },\n\t'disable-updates': { type: 'boolean' },\n\t'disable-keytar': { type: 'boolean' },\n\t'disable-workspace-trust': { type: 'boolean' },\n\t'disable-crash-reporter': { type: 'boolean' },\n\t'crash-reporter-directory': { type: 'string' },\n\t'crash-reporter-id': { type: 'string' },\n\t'skip-add-to-recently-opened': { type: 'boolean' },\n\t'unity-launch': { type: 'boolean' },\n\t'open-url': { type: 'boolean' },\n\t'file-write': { type: 'boolean' },\n\t'file-chmod': { type: 'boolean' },\n\t'driver-verbose': { type: 'boolean' },\n\t'install-builtin-extension': { type: 'string[]' },\n\t'force': { type: 'boolean' },\n\t'do-not-sync': { type: 'boolean' },\n\t'trace': { type: 'boolean' },\n\t'trace-category-filter': { type: 'string' },\n\t'trace-options': { type: 'string' },\n\t'force-user-env': { type: 'boolean' },\n\t'force-disable-user-env': { type: 'boolean' },\n\t'open-devtools': { type: 'boolean' },\n\t'__sandbox': { type: 'boolean' },\n\t'logsPath': { type: 'string' },\n\n\t// chromium flags\n\t'no-proxy-server': { type: 'boolean' },\n\t// Minimist incorrectly parses keys that start with `--no`\n\t// https://github.com/substack/minimist/blob/aeb3e27dae0412de5c0494e9563a5f10c82cc7a9/index.js#L118-L121\n\t// If --no-sandbox is passed via cli wrapper it will be treated as --sandbox which is incorrect, we use\n\t// the alias here to make sure --no-sandbox is always respected.\n\t// For https://github.com/microsoft/vscode/issues/128279\n\t'no-sandbox': { type: 'boolean', alias: 'sandbox' },\n\t'proxy-server': { type: 'string' },\n\t'proxy-bypass-list': { type: 'string' },\n\t'proxy-pac-url': { type: 'string' },\n\t'js-flags': { type: 'string' }, // chrome js flags\n\t'inspect': { type: 'string' },\n\t'inspect-brk': { type: 'string' },\n\t'nolazy': { type: 'boolean' }, // node inspect\n\t'force-device-scale-factor': { type: 'string' },\n\t'force-renderer-accessibility': { type: 'boolean' },\n\t'ignore-certificate-errors': { type: 'boolean' },\n\t'allow-insecure-localhost': { type: 'boolean' },\n\t'log-net-log': { type: 'string' },\n\t'vmodule': { type: 'string' },\n\t'_urls': { type: 'string[]' },\n\n\t_: { type: 'string[]' } // main arguments\n};\n\nexport interface ErrorReporter {\n\tonUnknownOption(id: string): void;\n\tonMultipleValues(id: string, usedValue: string): void;\n\tonDeprecatedOption(deprecatedId: string, currentId: string): void;\n}\n\nconst ignoringReporter: ErrorReporter = {\n\tonUnknownOption: () => { },\n\tonMultipleValues: () => { },\n\tonDeprecatedOption: () => { }\n};\n\nexport function parseArgs<T>(args: string[], options: OptionDescriptions<T>, errorReporter: ErrorReporter = ignoringReporter): T {\n\tconst alias: { [key: string]: string } = {};\n\tconst string: string[] = [];\n\tconst boolean: string[] = [];\n\tfor (let optionId in options) {\n\t\tconst o = options[optionId];\n\t\tif (o.alias) {\n\t\t\talias[optionId] = o.alias;\n\t\t}\n\n\t\tif (o.type === 'string' || o.type === 'string[]') {\n\t\t\tstring.push(optionId);\n\t\t\tif (o.deprecates) {\n\t\t\t\tstring.push(o.deprecates);\n\t\t\t}\n\t\t} else if (o.type === 'boolean') {\n\t\t\tboolean.push(optionId);\n\t\t\tif (o.deprecates) {\n\t\t\t\tboolean.push(o.deprecates);\n\t\t\t}\n\t\t}\n\t}\n\t// remove aliases to avoid confusion\n\tconst parsedArgs = minimist(args, { string, boolean, alias });\n\n\tconst cleanedArgs: any = {};\n\tconst remainingArgs: any = parsedArgs;\n\n\t// https://github.com/microsoft/vscode/issues/58177, https://github.com/microsoft/vscode/issues/106617\n\tcleanedArgs._ = parsedArgs._.map(arg => String(arg)).filter(arg => arg.length > 0);\n\n\tdelete remainingArgs._;\n\n\tfor (let optionId in options) {\n\t\tconst o = options[optionId];\n\t\tif (o.alias) {\n\t\t\tdelete remainingArgs[o.alias];\n\t\t}\n\n\t\tlet val = remainingArgs[optionId];\n\t\tif (o.deprecates && remainingArgs.hasOwnProperty(o.deprecates)) {\n\t\t\tif (!val) {\n\t\t\t\tval = remainingArgs[o.deprecates];\n\t\t\t\tif (val) {\n\t\t\t\t\terrorReporter.onDeprecatedOption(o.deprecates, optionId);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdelete remainingArgs[o.deprecates];\n\t\t}\n\n\t\tif (typeof val !== 'undefined') {\n\t\t\tif (o.type === 'string[]') {\n\t\t\t\tif (val && !Array.isArray(val)) {\n\t\t\t\t\tval = [val];\n\t\t\t\t}\n\t\t\t} else if (o.type === 'string') {\n\t\t\t\tif (Array.isArray(val)) {\n\t\t\t\t\tval = val.pop(); // take the last\n\t\t\t\t\terrorReporter.onMultipleValues(optionId, val);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcleanedArgs[optionId] = val;\n\t\t}\n\t\tdelete remainingArgs[optionId];\n\t}\n\n\tfor (let key in remainingArgs) {\n\t\terrorReporter.onUnknownOption(key);\n\t}\n\n\treturn cleanedArgs;\n}\n\nfunction formatUsage(optionId: string, option: Option<any>) {\n\tlet args = '';\n\tif (option.args) {\n\t\tif (Array.isArray(option.args)) {\n\t\t\targs = ` <${option.args.join('> <')}>`;\n\t\t} else {\n\t\t\targs = ` <${option.args}>`;\n\t\t}\n\t}\n\tif (option.alias) {\n\t\treturn `-${option.alias} --${optionId}${args}`;\n\t}\n\treturn `--${optionId}${args}`;\n}\n\n// exported only for testing\nexport function formatOptions(options: OptionDescriptions<any>, columns: number): string[] {\n\tlet maxLength = 0;\n\tlet usageTexts: [string, string][] = [];\n\tfor (const optionId in options) {\n\t\tconst o = options[optionId];\n\t\tconst usageText = formatUsage(optionId, o);\n\t\tmaxLength = Math.max(maxLength, usageText.length);\n\t\tusageTexts.push([usageText, o.description!]);\n\t}\n\tlet argLength = maxLength + 2/*left padding*/ + 1/*right padding*/;\n\tif (columns - argLength < 25) {\n\t\t// Use a condensed version on narrow terminals\n\t\treturn usageTexts.reduce<string[]>((r, ut) => r.concat([`  ${ut[0]}`, `      ${ut[1]}`]), []);\n\t}\n\tlet descriptionColumns = columns - argLength - 1;\n\tlet result: string[] = [];\n\tfor (const ut of usageTexts) {\n\t\tlet usage = ut[0];\n\t\tlet wrappedDescription = wrapText(ut[1], descriptionColumns);\n\t\tlet keyPadding = indent(argLength - usage.length - 2/*left padding*/);\n\t\tresult.push('  ' + usage + keyPadding + wrappedDescription[0]);\n\t\tfor (let i = 1; i < wrappedDescription.length; i++) {\n\t\t\tresult.push(indent(argLength) + wrappedDescription[i]);\n\t\t}\n\t}\n\treturn result;\n}\n\nfunction indent(count: number): string {\n\treturn ' '.repeat(count);\n}\n\nfunction wrapText(text: string, columns: number): string[] {\n\tlet lines: string[] = [];\n\twhile (text.length) {\n\t\tlet index = text.length < columns ? text.length : text.lastIndexOf(' ', columns);\n\t\tlet line = text.slice(0, index).trim();\n\t\ttext = text.slice(index);\n\t\tlines.push(line);\n\t}\n\treturn lines;\n}\n\nexport function buildHelpMessage(productName: string, executableName: string, version: string, options: OptionDescriptions<any>, capabilities?: { noPipe?: boolean, noInputFiles: boolean }): string {\n\tconst columns = (process.stdout).isTTY && (process.stdout).columns || 80;\n\n\tconst inputFiles = capabilities?.noInputFiles !== true ? `[${localize('paths', 'paths')}...]` : '';\n\n\tconst help = [`${productName} ${version}`];\n\thelp.push('');\n\thelp.push(`${localize('usage', \"Usage\")}: ${executableName} [${localize('options', \"options\")}]${inputFiles}`);\n\thelp.push('');\n\tif (capabilities?.noPipe !== true) {\n\t\tif (isWindows) {\n\t\t\thelp.push(localize('stdinWindows', \"To read output from another program, append '-' (e.g. 'echo Hello World | {0} -')\", executableName));\n\t\t} else {\n\t\t\thelp.push(localize('stdinUnix', \"To read from stdin, append '-' (e.g. 'ps aux | grep code | {0} -')\", executableName));\n\t\t}\n\t\thelp.push('');\n\t}\n\tconst optionsByCategory: { [P in keyof typeof helpCategories]?: OptionDescriptions<any> } = {};\n\tfor (const optionId in options) {\n\t\tconst o = options[optionId];\n\t\tif (o.description && o.cat) {\n\t\t\tlet optionsByCat = optionsByCategory[o.cat];\n\t\t\tif (!optionsByCat) {\n\t\t\t\toptionsByCategory[o.cat] = optionsByCat = {};\n\t\t\t}\n\t\t\toptionsByCat[optionId] = o;\n\t\t}\n\t}\n\n\tfor (let helpCategoryKey in optionsByCategory) {\n\t\tconst key = <keyof typeof helpCategories>helpCategoryKey;\n\n\t\tlet categoryOptions = optionsByCategory[key];\n\t\tif (categoryOptions) {\n\t\t\thelp.push(helpCategories[key]);\n\t\t\thelp.push(...formatOptions(categoryOptions, columns));\n\t\t\thelp.push('');\n\t\t}\n\t}\n\treturn help.join('\\n');\n}\n\nexport function buildVersionMessage(version: string | undefined, commit: string | undefined): string {\n\treturn `${version || localize('unknownVersion', \"Unknown version\")}\\n${commit || localize('unknownCommit', \"Unknown commit\")}\\n${process.arch}`;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/// <reference path=\"../../../../typings/require.d.ts\" />\n\n//@ts-check\n(function () {\n\t'use strict';\n\n\t/**\n\t * @typedef {import('../../environment/common/argv').NativeParsedArgs} NativeParsedArgs\n\t *\n\t * @param {typeof import('path')} path\n\t * @param {typeof import('os')} os\n\t * @param {string} productName\n\t * @param {string} cwd\n\t */\n\tfunction factory(path, os, productName, cwd) {\n\n\t\t/**\n\t\t * @param {NativeParsedArgs} cliArgs\n\t\t *\n\t\t * @returns {string}\n\t\t */\n\t\tfunction getUserDataPath(cliArgs) {\n\t\t\tconst userDataPath = doGetUserDataPath(cliArgs);\n\t\t\tconst pathsToResolve = [userDataPath];\n\n\t\t\t// If the user-data-path is not absolute, make\n\t\t\t// sure to resolve it against the passed in\n\t\t\t// current working directory. We cannot use the\n\t\t\t// node.js `path.resolve()` logic because it will\n\t\t\t// not pick up our `VSCODE_CWD` environment variable\n\t\t\t// (https://github.com/microsoft/vscode/issues/120269)\n\t\t\tif (!path.isAbsolute(userDataPath)) {\n\t\t\t\tpathsToResolve.unshift(cwd);\n\t\t\t}\n\n\t\t\treturn path.resolve(...pathsToResolve);\n\t\t}\n\n\t\t/**\n\t\t * @param {NativeParsedArgs} cliArgs\n\t\t *\n\t\t * @returns {string}\n\t\t */\n\t\tfunction doGetUserDataPath(cliArgs) {\n\n\t\t\t// 1. Support portable mode\n\t\t\tconst portablePath = process.env['VSCODE_PORTABLE'];\n\t\t\tif (portablePath) {\n\t\t\t\treturn path.join(portablePath, 'user-data');\n\t\t\t}\n\n\t\t\t// 2. Support global VSCODE_APPDATA environment variable\n\t\t\tlet appDataPath = process.env['VSCODE_APPDATA'];\n\t\t\tif (appDataPath) {\n\t\t\t\treturn path.join(appDataPath, productName);\n\t\t\t}\n\n\t\t\t// With Electron>=13 --user-data-dir switch will be propagated to\n\t\t\t// all processes https://github.com/electron/electron/blob/1897b14af36a02e9aa7e4d814159303441548251/shell/browser/electron_browser_client.cc#L546-L553\n\t\t\t// Check VSCODE_PORTABLE and VSCODE_APPDATA before this case to get correct values.\n\t\t\t// 3. Support explicit --user-data-dir\n\t\t\tconst cliPath = cliArgs['user-data-dir'];\n\t\t\tif (cliPath) {\n\t\t\t\treturn cliPath;\n\t\t\t}\n\n\t\t\t// 4. Otherwise check per platform\n\t\t\tswitch (process.platform) {\n\t\t\t\tcase 'win32':\n\t\t\t\t\tappDataPath = process.env['APPDATA'];\n\t\t\t\t\tif (!appDataPath) {\n\t\t\t\t\t\tconst userProfile = process.env['USERPROFILE'];\n\t\t\t\t\t\tif (typeof userProfile !== 'string') {\n\t\t\t\t\t\t\tthrow new Error('Windows: Unexpected undefined %USERPROFILE% environment variable');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tappDataPath = path.join(userProfile, 'AppData', 'Roaming');\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'darwin':\n\t\t\t\t\tappDataPath = path.join(os.homedir(), 'Library', 'Application Support');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'linux':\n\t\t\t\t\tappDataPath = process.env['XDG_CONFIG_HOME'] || path.join(os.homedir(), '.config');\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Platform not supported');\n\t\t\t}\n\n\t\t\treturn path.join(appDataPath, productName);\n\t\t}\n\n\t\treturn {\n\t\t\tgetUserDataPath\n\t\t};\n\t}\n\n\tif (typeof define === 'function') {\n\t\tdefine(__m[152/*vs/platform/environment/node/userDataPath*/], __M([0/*require*/,153/*path*/,33/*os*/,16/*vs/base/common/network*/,18/*vs/base/common/resources*/,32/*vs/base/common/process*/]), function (\n\t\t\trequire,\n\t\t\t/** @type {typeof import('path')} */ path,\n\t\t\t/** @type {typeof import('os')} */ os,\n\t\t\t/** @type {typeof import('../../../base/common/network')} */ network,\n\t\t\t/** @type {typeof import(\"../../../base/common/resources\")} */ resources,\n\t\t\t/** @type {typeof import(\"../../../base/common/process\")} */ process\n\t\t) {\n\t\t\tconst rootPath = resources.dirname(network.FileAccess.asFileUri('', require));\n\t\t\tconst pkg = require.__$__nodeRequire(resources.joinPath(rootPath, 'package.json').fsPath);\n\n\t\t\treturn factory(path, os, pkg.name, process.cwd());\n\t\t}); // amd\n\t} else if (typeof module === 'object' && typeof module.exports === 'object') {\n\t\tconst pkg = require('../../../../../package.json');\n\t\tconst path = require('path');\n\t\tconst os = require('os');\n\n\t\tmodule.exports = factory(path, os, pkg.name, process.env['VSCODE_CWD'] || process.cwd()); // commonjs\n\t} else {\n\t\tthrow new Error('Unknown context');\n\t}\n}());\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { homedir, tmpdir } from 'os';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { AbstractNativeEnvironmentService } from 'vs/platform/environment/common/environmentService';\nimport { getUserDataPath } from 'vs/platform/environment/node/userDataPath';\nimport { IProductService } from 'vs/platform/product/common/productService';\n\nexport class NativeEnvironmentService extends AbstractNativeEnvironmentService {\n\n\tconstructor(args: NativeParsedArgs, productService: IProductService) {\n\t\tsuper(args, {\n\t\t\thomeDir: homedir(),\n\t\t\ttmpDir: tmpdir(),\n\t\t\tuserDataDir: getUserDataPath(args)\n\t\t}, productService);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\n\nconst SshProtocolMatcher = /^([^@:]+@)?([^:]+):/;\nconst SshUrlMatcher = /^([^@:]+@)?([^:]+):(.+)$/;\nconst AuthorityMatcher = /^([^@]+@)?([^:]+)(:\\d+)?$/;\nconst SecondLevelDomainMatcher = /([^@:.]+\\.[^@:.]+)(:\\d+)?$/;\nconst RemoteMatcher = /^\\s*url\\s*=\\s*(.+\\S)\\s*$/mg;\nconst AnyButDot = /[^.]/g;\n\nexport const AllowedSecondLevelDomains = [\n\t'github.com',\n\t'bitbucket.org',\n\t'visualstudio.com',\n\t'gitlab.com',\n\t'heroku.com',\n\t'azurewebsites.net',\n\t'ibm.com',\n\t'amazon.com',\n\t'amazonaws.com',\n\t'cloudapp.net',\n\t'rhcloud.com',\n\t'google.com',\n\t'azure.com'\n];\n\nfunction stripLowLevelDomains(domain: string): string | null {\n\tconst match = domain.match(SecondLevelDomainMatcher);\n\treturn match ? match[1] : null;\n}\n\nfunction extractDomain(url: string): string | null {\n\tif (url.indexOf('://') === -1) {\n\t\tconst match = url.match(SshProtocolMatcher);\n\t\tif (match) {\n\t\t\treturn stripLowLevelDomains(match[2]);\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\t}\n\ttry {\n\t\tconst uri = URI.parse(url);\n\t\tif (uri.authority) {\n\t\t\treturn stripLowLevelDomains(uri.authority);\n\t\t}\n\t} catch (e) {\n\t\t// ignore invalid URIs\n\t}\n\treturn null;\n}\n\nexport function getDomainsOfRemotes(text: string, allowedDomains: readonly string[]): string[] {\n\tconst domains = new Set<string>();\n\tlet match: RegExpExecArray | null;\n\twhile (match = RemoteMatcher.exec(text)) {\n\t\tconst domain = extractDomain(match[1]);\n\t\tif (domain) {\n\t\t\tdomains.add(domain);\n\t\t}\n\t}\n\n\tconst allowedDomainsSet = new Set(allowedDomains);\n\treturn Array.from(domains)\n\t\t.map(key => allowedDomainsSet.has(key) ? key : key.replace(AnyButDot, 'a'));\n}\n\nfunction stripPort(authority: string): string | null {\n\tconst match = authority.match(AuthorityMatcher);\n\treturn match ? match[2] : null;\n}\n\nfunction normalizeRemote(host: string | null, path: string, stripEndingDotGit: boolean): string | null {\n\tif (host && path) {\n\t\tif (stripEndingDotGit && path.endsWith('.git')) {\n\t\t\tpath = path.substr(0, path.length - 4);\n\t\t}\n\t\treturn (path.indexOf('/') === 0) ? `${host}${path}` : `${host}/${path}`;\n\t}\n\treturn null;\n}\n\nfunction extractRemote(url: string, stripEndingDotGit: boolean): string | null {\n\tif (url.indexOf('://') === -1) {\n\t\tconst match = url.match(SshUrlMatcher);\n\t\tif (match) {\n\t\t\treturn normalizeRemote(match[2], match[3], stripEndingDotGit);\n\t\t}\n\t}\n\ttry {\n\t\tconst uri = URI.parse(url);\n\t\tif (uri.authority) {\n\t\t\treturn normalizeRemote(stripPort(uri.authority), uri.path, stripEndingDotGit);\n\t\t}\n\t} catch (e) {\n\t\t// ignore invalid URIs\n\t}\n\treturn null;\n}\n\nexport function getRemotes(text: string, stripEndingDotGit: boolean = false): string[] {\n\tconst remotes: string[] = [];\n\tlet match: RegExpExecArray | null;\n\twhile (match = RemoteMatcher.exec(text)) {\n\t\tconst remote = extractRemote(match[1], stripEndingDotGit);\n\t\tif (remote) {\n\t\t\tremotes.push(remote);\n\t\t}\n\t}\n\treturn remotes;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { cloneAndChange } from 'vs/base/common/objects';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\nconst nlsRegex = /^%([\\w\\d.-]+)%$/i;\n\nexport interface ITranslations {\n\t[key: string]: string | { message: string; comment: string[] };\n}\n\nexport function localizeManifest(manifest: IExtensionManifest, translations: ITranslations): IExtensionManifest {\n\tconst patcher = (value: string): string | undefined => {\n\t\tif (typeof value !== 'string') {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst match = nlsRegex.exec(value);\n\n\t\tif (!match) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst translation = translations[match[1]] ?? value;\n\t\treturn typeof translation === 'string' ? translation : (typeof translation.message === 'string' ? translation.message : value);\n\t};\n\n\treturn cloneAndChange(manifest, patcher);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IExtensionRecommendationNotificationService, RecommendationsNotificationResult, RecommendationSource } from 'vs/platform/extensionRecommendations/common/extensionRecommendations';\n\nexport class ExtensionRecommendationNotificationServiceChannelClient implements IExtensionRecommendationNotificationService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private readonly channel: IChannel) { }\n\n\tget ignoredRecommendations(): string[] { throw new Error('not supported'); }\n\n\tpromptImportantExtensionsInstallNotification(extensionIds: string[], message: string, searchValue: string, priority: RecommendationSource): Promise<RecommendationsNotificationResult> {\n\t\treturn this.channel.call('promptImportantExtensionsInstallNotification', [extensionIds, message, searchValue, priority]);\n\t}\n\n\tpromptWorkspaceRecommendations(recommendations: string[]): Promise<void> {\n\t\tthrow new Error('not supported');\n\t}\n\n\thasToIgnoreRecommendationNotifications(): boolean {\n\t\tthrow new Error('not supported');\n\t}\n\n}\n\nexport class ExtensionRecommendationNotificationServiceChannel implements IServerChannel {\n\n\tconstructor(private service: IExtensionRecommendationNotificationService) { }\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'promptImportantExtensionsInstallNotification': return this.service.promptImportantExtensionsInstallNotification(args[0], args[1], args[2], args[3]);\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\n\nexport interface IParsedVersion {\n\thasCaret: boolean;\n\thasGreaterEquals: boolean;\n\tmajorBase: number;\n\tmajorMustEqual: boolean;\n\tminorBase: number;\n\tminorMustEqual: boolean;\n\tpatchBase: number;\n\tpatchMustEqual: boolean;\n\tpreRelease: string | null;\n}\n\nexport interface INormalizedVersion {\n\tmajorBase: number;\n\tmajorMustEqual: boolean;\n\tminorBase: number;\n\tminorMustEqual: boolean;\n\tpatchBase: number;\n\tpatchMustEqual: boolean;\n\tnotBefore: number; /* milliseconds timestamp, or 0 */\n\tisMinimum: boolean;\n}\n\nconst VERSION_REGEXP = /^(\\^|>=)?((\\d+)|x)\\.((\\d+)|x)\\.((\\d+)|x)(\\-.*)?$/;\nconst NOT_BEFORE_REGEXP = /^-(\\d{4})(\\d{2})(\\d{2})$/;\n\nexport function isValidVersionStr(version: string): boolean {\n\tversion = version.trim();\n\treturn (version === '*' || VERSION_REGEXP.test(version));\n}\n\nexport function parseVersion(version: string): IParsedVersion | null {\n\tif (!isValidVersionStr(version)) {\n\t\treturn null;\n\t}\n\n\tversion = version.trim();\n\n\tif (version === '*') {\n\t\treturn {\n\t\t\thasCaret: false,\n\t\t\thasGreaterEquals: false,\n\t\t\tmajorBase: 0,\n\t\t\tmajorMustEqual: false,\n\t\t\tminorBase: 0,\n\t\t\tminorMustEqual: false,\n\t\t\tpatchBase: 0,\n\t\t\tpatchMustEqual: false,\n\t\t\tpreRelease: null\n\t\t};\n\t}\n\n\tlet m = version.match(VERSION_REGEXP);\n\tif (!m) {\n\t\treturn null;\n\t}\n\treturn {\n\t\thasCaret: m[1] === '^',\n\t\thasGreaterEquals: m[1] === '>=',\n\t\tmajorBase: m[2] === 'x' ? 0 : parseInt(m[2], 10),\n\t\tmajorMustEqual: (m[2] === 'x' ? false : true),\n\t\tminorBase: m[4] === 'x' ? 0 : parseInt(m[4], 10),\n\t\tminorMustEqual: (m[4] === 'x' ? false : true),\n\t\tpatchBase: m[6] === 'x' ? 0 : parseInt(m[6], 10),\n\t\tpatchMustEqual: (m[6] === 'x' ? false : true),\n\t\tpreRelease: m[8] || null\n\t};\n}\n\nexport function normalizeVersion(version: IParsedVersion | null): INormalizedVersion | null {\n\tif (!version) {\n\t\treturn null;\n\t}\n\n\tlet majorBase = version.majorBase,\n\t\tmajorMustEqual = version.majorMustEqual,\n\t\tminorBase = version.minorBase,\n\t\tminorMustEqual = version.minorMustEqual,\n\t\tpatchBase = version.patchBase,\n\t\tpatchMustEqual = version.patchMustEqual;\n\n\tif (version.hasCaret) {\n\t\tif (majorBase === 0) {\n\t\t\tpatchMustEqual = false;\n\t\t} else {\n\t\t\tminorMustEqual = false;\n\t\t\tpatchMustEqual = false;\n\t\t}\n\t}\n\n\tlet notBefore = 0;\n\tif (version.preRelease) {\n\t\tconst match = NOT_BEFORE_REGEXP.exec(version.preRelease);\n\t\tif (match) {\n\t\t\tconst [, year, month, day] = match;\n\t\t\tnotBefore = Date.UTC(Number(year), Number(month) - 1, Number(day));\n\t\t}\n\t}\n\n\treturn {\n\t\tmajorBase: majorBase,\n\t\tmajorMustEqual: majorMustEqual,\n\t\tminorBase: minorBase,\n\t\tminorMustEqual: minorMustEqual,\n\t\tpatchBase: patchBase,\n\t\tpatchMustEqual: patchMustEqual,\n\t\tisMinimum: version.hasGreaterEquals,\n\t\tnotBefore,\n\t};\n}\n\nexport function isValidVersion(_inputVersion: string | INormalizedVersion, _inputDate: ProductDate, _desiredVersion: string | INormalizedVersion): boolean {\n\tlet version: INormalizedVersion | null;\n\tif (typeof _inputVersion === 'string') {\n\t\tversion = normalizeVersion(parseVersion(_inputVersion));\n\t} else {\n\t\tversion = _inputVersion;\n\t}\n\n\tlet productTs: number | undefined;\n\tif (_inputDate instanceof Date) {\n\t\tproductTs = _inputDate.getTime();\n\t} else if (typeof _inputDate === 'string') {\n\t\tproductTs = new Date(_inputDate).getTime();\n\t}\n\n\tlet desiredVersion: INormalizedVersion | null;\n\tif (typeof _desiredVersion === 'string') {\n\t\tdesiredVersion = normalizeVersion(parseVersion(_desiredVersion));\n\t} else {\n\t\tdesiredVersion = _desiredVersion;\n\t}\n\n\tif (!version || !desiredVersion) {\n\t\treturn false;\n\t}\n\n\tlet majorBase = version.majorBase;\n\tlet minorBase = version.minorBase;\n\tlet patchBase = version.patchBase;\n\n\tlet desiredMajorBase = desiredVersion.majorBase;\n\tlet desiredMinorBase = desiredVersion.minorBase;\n\tlet desiredPatchBase = desiredVersion.patchBase;\n\tlet desiredNotBefore = desiredVersion.notBefore;\n\n\tlet majorMustEqual = desiredVersion.majorMustEqual;\n\tlet minorMustEqual = desiredVersion.minorMustEqual;\n\tlet patchMustEqual = desiredVersion.patchMustEqual;\n\n\tif (desiredVersion.isMinimum) {\n\t\tif (majorBase > desiredMajorBase) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (majorBase < desiredMajorBase) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (minorBase > desiredMinorBase) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (minorBase < desiredMinorBase) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (productTs && productTs < desiredNotBefore) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn patchBase >= desiredPatchBase;\n\t}\n\n\t// Anything < 1.0.0 is compatible with >= 1.0.0, except exact matches\n\tif (majorBase === 1 && desiredMajorBase === 0 && (!majorMustEqual || !minorMustEqual || !patchMustEqual)) {\n\t\tdesiredMajorBase = 1;\n\t\tdesiredMinorBase = 0;\n\t\tdesiredPatchBase = 0;\n\t\tmajorMustEqual = true;\n\t\tminorMustEqual = false;\n\t\tpatchMustEqual = false;\n\t}\n\n\tif (majorBase < desiredMajorBase) {\n\t\t// smaller major version\n\t\treturn false;\n\t}\n\n\tif (majorBase > desiredMajorBase) {\n\t\t// higher major version\n\t\treturn (!majorMustEqual);\n\t}\n\n\t// at this point, majorBase are equal\n\n\tif (minorBase < desiredMinorBase) {\n\t\t// smaller minor version\n\t\treturn false;\n\t}\n\n\tif (minorBase > desiredMinorBase) {\n\t\t// higher minor version\n\t\treturn (!minorMustEqual);\n\t}\n\n\t// at this point, minorBase are equal\n\n\tif (patchBase < desiredPatchBase) {\n\t\t// smaller patch version\n\t\treturn false;\n\t}\n\n\tif (patchBase > desiredPatchBase) {\n\t\t// higher patch version\n\t\treturn (!patchMustEqual);\n\t}\n\n\t// at this point, patchBase are equal\n\n\tif (productTs && productTs < desiredNotBefore) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\nexport interface IReducedExtensionDescription {\n\tisBuiltin: boolean;\n\tengines: {\n\t\tvscode: string;\n\t};\n\tmain?: string;\n}\n\ntype ProductDate = string | Date | undefined;\n\nexport function isValidExtensionVersion(version: string, date: ProductDate, extensionDesc: IReducedExtensionDescription, notices: string[]): boolean {\n\n\tif (extensionDesc.isBuiltin || typeof extensionDesc.main === 'undefined') {\n\t\t// No version check for builtin or declarative extensions\n\t\treturn true;\n\t}\n\n\treturn isVersionValid(version, date, extensionDesc.engines.vscode, notices);\n}\n\nexport function isEngineValid(engine: string, version: string, date: ProductDate): boolean {\n\t// TODO@joao: discuss with alex '*' doesn't seem to be a valid engine version\n\treturn engine === '*' || isVersionValid(version, date, engine);\n}\n\nfunction isVersionValid(currentVersion: string, date: ProductDate, requestedVersion: string, notices: string[] = []): boolean {\n\n\tlet desiredVersion = normalizeVersion(parseVersion(requestedVersion));\n\tif (!desiredVersion) {\n\t\tnotices.push(nls.localize('versionSyntax', \"Could not parse `engines.vscode` value {0}. Please use, for example: ^1.22.0, ^1.22.x, etc.\", requestedVersion));\n\t\treturn false;\n\t}\n\n\t// enforce that a breaking API version is specified.\n\t// for 0.X.Y, that means up to 0.X must be specified\n\t// otherwise for Z.X.Y, that means Z must be specified\n\tif (desiredVersion.majorBase === 0) {\n\t\t// force that major and minor must be specific\n\t\tif (!desiredVersion.majorMustEqual || !desiredVersion.minorMustEqual) {\n\t\t\tnotices.push(nls.localize('versionSpecificity1', \"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions before 1.0.0, please define at a minimum the major and minor desired version. E.g. ^0.10.0, 0.10.x, 0.11.0, etc.\", requestedVersion));\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\t// force that major must be specific\n\t\tif (!desiredVersion.majorMustEqual) {\n\t\t\tnotices.push(nls.localize('versionSpecificity2', \"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions after 1.0.0, please define at a minimum the major desired version. E.g. ^1.10.0, 1.10.x, 1.x.x, 2.x.x, etc.\", requestedVersion));\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tif (!isValidVersion(currentVersion, date, desiredVersion)) {\n\t\tnotices.push(nls.localize('versionMismatch', \"Extension is not compatible with Code {0}. Extension requires: {1}.\", currentVersion, requestedVersion));\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport class SyncDescriptor<T> {\n\n\treadonly ctor: any;\n\treadonly staticArguments: any[];\n\treadonly supportsDelayedInstantiation: boolean;\n\n\tconstructor(ctor: new (...args: any[]) => T, staticArguments: any[] = [], supportsDelayedInstantiation: boolean = false) {\n\t\tthis.ctor = ctor;\n\t\tthis.staticArguments = staticArguments;\n\t\tthis.supportsDelayedInstantiation = supportsDelayedInstantiation;\n\t}\n}\n\nexport interface SyncDescriptor0<T> {\n\tctor: any;\n\tbind(): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor1<A1, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor2<A1, A2, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor1<A2, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor3<A1, A2, A3, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor2<A2, A3, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor1<A3, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor4<A1, A2, A3, A4, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor3<A2, A3, A4, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor2<A3, A4, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor1<A4, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor5<A1, A2, A3, A4, A5, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor4<A2, A3, A4, A5, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor3<A3, A4, A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor2<A4, A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor1<A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor6<A1, A2, A3, A4, A5, A6, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor5<A2, A3, A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor4<A3, A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor3<A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor2<A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor1<A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor6<A2, A3, A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor5<A3, A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor4<A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor3<A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor2<A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor1<A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor7<A2, A3, A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor6<A3, A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor5<A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor4<A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor3<A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor2<A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor1<A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): SyncDescriptor0<T>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { SyncDescriptor } from './descriptors';\nimport { BrandedService, ServiceIdentifier } from './instantiation';\n\nconst _registry: [ServiceIdentifier<any>, SyncDescriptor<any>][] = [];\n\nexport function registerSingleton<T, Services extends BrandedService[]>(id: ServiceIdentifier<T>, ctor: new (...services: Services) => T, supportsDelayedInstantiation?: boolean): void;\nexport function registerSingleton<T, Services extends BrandedService[]>(id: ServiceIdentifier<T>, descriptor: SyncDescriptor<any>): void;\nexport function registerSingleton<T, Services extends BrandedService[]>(id: ServiceIdentifier<T>, ctorOrDescriptor: { new(...services: Services): T } | SyncDescriptor<any>, supportsDelayedInstantiation?: boolean): void {\n\tif (!(ctorOrDescriptor instanceof SyncDescriptor)) {\n\t\tctorOrDescriptor = new SyncDescriptor<T>(ctorOrDescriptor as new (...args: any[]) => T, [], supportsDelayedInstantiation);\n\t}\n\n\t_registry.push([id, ctorOrDescriptor]);\n}\n\nexport function getSingletonServiceDescriptors(): [ServiceIdentifier<any>, SyncDescriptor<any>][] {\n\treturn _registry;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport class Node<T> {\n\n\treadonly data: T;\n\treadonly incoming = new Map<string, Node<T>>();\n\treadonly outgoing = new Map<string, Node<T>>();\n\n\tconstructor(data: T) {\n\t\tthis.data = data;\n\t}\n}\n\nexport class Graph<T> {\n\n\tprivate readonly _nodes = new Map<string, Node<T>>();\n\n\tconstructor(private readonly _hashFn: (element: T) => string) {\n\t\t// empty\n\t}\n\n\troots(): Node<T>[] {\n\t\tconst ret: Node<T>[] = [];\n\t\tfor (let node of this._nodes.values()) {\n\t\t\tif (node.outgoing.size === 0) {\n\t\t\t\tret.push(node);\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\tinsertEdge(from: T, to: T): void {\n\t\tconst fromNode = this.lookupOrInsertNode(from);\n\t\tconst toNode = this.lookupOrInsertNode(to);\n\n\t\tfromNode.outgoing.set(this._hashFn(to), toNode);\n\t\ttoNode.incoming.set(this._hashFn(from), fromNode);\n\t}\n\n\tremoveNode(data: T): void {\n\t\tconst key = this._hashFn(data);\n\t\tthis._nodes.delete(key);\n\t\tfor (let node of this._nodes.values()) {\n\t\t\tnode.outgoing.delete(key);\n\t\t\tnode.incoming.delete(key);\n\t\t}\n\t}\n\n\tlookupOrInsertNode(data: T): Node<T> {\n\t\tconst key = this._hashFn(data);\n\t\tlet node = this._nodes.get(key);\n\n\t\tif (!node) {\n\t\t\tnode = new Node(data);\n\t\t\tthis._nodes.set(key, node);\n\t\t}\n\n\t\treturn node;\n\t}\n\n\tlookup(data: T): Node<T> | undefined {\n\t\treturn this._nodes.get(this._hashFn(data));\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._nodes.size === 0;\n\t}\n\n\ttoString(): string {\n\t\tlet data: string[] = [];\n\t\tfor (let [key, value] of this._nodes) {\n\t\t\tdata.push(`${key}, (incoming)[${[...value.incoming.keys()].join(', ')}], (outgoing)[${[...value.outgoing.keys()].join(',')}]`);\n\n\t\t}\n\t\treturn data.join('\\n');\n\t}\n\n\t/**\n\t * This is brute force and slow and **only** be used\n\t * to trouble shoot.\n\t */\n\tfindCycleSlow() {\n\t\tfor (let [id, node] of this._nodes) {\n\t\t\tconst seen = new Set<string>([id]);\n\t\t\tconst res = this._findCycle(node, seen);\n\t\t\tif (res) {\n\t\t\t\treturn res;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate _findCycle(node: Node<T>, seen: Set<string>): string | undefined {\n\t\tfor (let [id, outgoing] of node.outgoing) {\n\t\t\tif (seen.has(id)) {\n\t\t\t\treturn [...seen, id].join(' -> ');\n\t\t\t}\n\t\t\tseen.add(id);\n\t\t\tconst value = this._findCycle(outgoing, seen);\n\t\t\tif (value) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tseen.delete(id);\n\t\t}\n\t\treturn undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as descriptors from './descriptors';\nimport { ServiceCollection } from './serviceCollection';\n\n// ------ internal util\n\nexport namespace _util {\n\n\texport const serviceIds = new Map<string, ServiceIdentifier<any>>();\n\n\texport const DI_TARGET = '$di$target';\n\texport const DI_DEPENDENCIES = '$di$dependencies';\n\n\texport function getServiceDependencies(ctor: any): { id: ServiceIdentifier<any>, index: number, optional: boolean }[] {\n\t\treturn ctor[DI_DEPENDENCIES] || [];\n\t}\n}\n\n// --- interfaces ------\n\nexport type BrandedService = { _serviceBrand: undefined };\n\nexport interface IConstructorSignature0<T> {\n\tnew(...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature1<A1, T> {\n\tnew <Services extends BrandedService[]>(first: A1, ...services: Services): T;\n}\n\nexport interface IConstructorSignature2<A1, A2, T> {\n\tnew(first: A1, second: A2, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature3<A1, A2, A3, T> {\n\tnew(first: A1, second: A2, third: A3, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature4<A1, A2, A3, A4, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature5<A1, A2, A3, A4, A5, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature6<A1, A2, A3, A4, A5, A6, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8, ...services: BrandedService[]): T;\n}\n\nexport interface ServicesAccessor {\n\tget<T>(id: ServiceIdentifier<T>): T;\n}\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('instantiationService');\n\n/**\n * Given a list of arguments as a tuple, attempt to extract the leading, non-service arguments\n * to their own tuple.\n */\ntype GetLeadingNonServiceArgs<Args> =\n\tArgs extends [...BrandedService[]] ? []\n\t: Args extends [infer A1, ...BrandedService[]] ? [A1]\n\t: Args extends [infer A1, infer A2, ...BrandedService[]] ? [A1, A2]\n\t: Args extends [infer A1, infer A2, infer A3, ...BrandedService[]] ? [A1, A2, A3]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, ...BrandedService[]] ? [A1, A2, A3, A4]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...BrandedService[]] ? [A1, A2, A3, A4, A5]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n\t: never;\n\nexport interface IInstantiationService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Synchronously creates an instance that is denoted by\n\t * the descriptor\n\t */\n\tcreateInstance<T>(descriptor: descriptors.SyncDescriptor0<T>): T;\n\tcreateInstance<A1, T>(descriptor: descriptors.SyncDescriptor1<A1, T>, a1: A1): T;\n\tcreateInstance<A1, A2, T>(descriptor: descriptors.SyncDescriptor2<A1, A2, T>, a1: A1, a2: A2): T;\n\tcreateInstance<A1, A2, A3, T>(descriptor: descriptors.SyncDescriptor3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): T;\n\tcreateInstance<A1, A2, A3, A4, T>(descriptor: descriptors.SyncDescriptor4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): T;\n\tcreateInstance<A1, A2, A3, A4, A5, T>(descriptor: descriptors.SyncDescriptor5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, T>(descriptor: descriptors.SyncDescriptor6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, T>(descriptor: descriptors.SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(descriptor: descriptors.SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): T;\n\n\tcreateInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n\n\t/**\n\t *\n\t */\n\tinvokeFunction<R, TS extends any[] = []>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R;\n\n\t/**\n\t * Creates a child of this service which inherts all current services\n\t * and adds/overwrites the given services\n\t */\n\tcreateChild(services: ServiceCollection): IInstantiationService;\n}\n\n\n/**\n * Identifies a service of type T\n */\nexport interface ServiceIdentifier<T> {\n\t(...args: any[]): void;\n\ttype: T;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number, optional: boolean): void {\n\tif ((target as any)[_util.DI_TARGET] === target) {\n\t\t(target as any)[_util.DI_DEPENDENCIES].push({ id, index, optional });\n\t} else {\n\t\t(target as any)[_util.DI_DEPENDENCIES] = [{ id, index, optional }];\n\t\t(target as any)[_util.DI_TARGET] = target;\n\t}\n}\n\n/**\n * The *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator<T>(serviceId: string): ServiceIdentifier<T> {\n\n\tif (_util.serviceIds.has(serviceId)) {\n\t\treturn _util.serviceIds.get(serviceId)!;\n\t}\n\n\tconst id = <any>function (target: Function, key: string, index: number): any {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@IServiceName-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(id, target, index, false);\n\t};\n\n\tid.toString = () => serviceId;\n\n\t_util.serviceIds.set(serviceId, id);\n\treturn id;\n}\n\nexport function refineServiceDecorator<T1, T extends T1>(serviceIdentifier: ServiceIdentifier<T1>): ServiceIdentifier<T> {\n\treturn <ServiceIdentifier<T>>serviceIdentifier;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IChecksumService = createDecorator<IChecksumService>('checksumService');\n\nexport interface IChecksumService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Computes the checksum of the contents of the resource.\n\t */\n\tchecksum(resource: URI): Promise<string>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport * as types from 'vs/base/common/types';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\n\nexport const IConfigurationService = createDecorator<IConfigurationService>('configurationService');\n\nexport function isConfigurationOverrides(thing: any): thing is IConfigurationOverrides {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& (!thing.overrideIdentifier || typeof thing.overrideIdentifier === 'string')\n\t\t&& (!thing.resource || thing.resource instanceof URI);\n}\n\nexport interface IConfigurationOverrides {\n\toverrideIdentifier?: string | null;\n\tresource?: URI | null;\n}\n\nexport function isConfigurationUpdateOverrides(thing: any): thing is IConfigurationUpdateOverrides {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& (!thing.overrideIdentifiers || types.isArray(thing.overrideIdentifiers))\n\t\t&& !thing.overrideIdentifier\n\t\t&& (!thing.resource || thing.resource instanceof URI);\n}\n\nexport type IConfigurationUpdateOverrides = Omit<IConfigurationOverrides, 'overrideIdentifier'> & { overrideIdentifiers?: string[] | null; };\n\nexport const enum ConfigurationTarget {\n\tUSER = 1,\n\tUSER_LOCAL,\n\tUSER_REMOTE,\n\tWORKSPACE,\n\tWORKSPACE_FOLDER,\n\tDEFAULT,\n\tMEMORY\n}\nexport function ConfigurationTargetToString(configurationTarget: ConfigurationTarget) {\n\tswitch (configurationTarget) {\n\t\tcase ConfigurationTarget.USER: return 'USER';\n\t\tcase ConfigurationTarget.USER_LOCAL: return 'USER_LOCAL';\n\t\tcase ConfigurationTarget.USER_REMOTE: return 'USER_REMOTE';\n\t\tcase ConfigurationTarget.WORKSPACE: return 'WORKSPACE';\n\t\tcase ConfigurationTarget.WORKSPACE_FOLDER: return 'WORKSPACE_FOLDER';\n\t\tcase ConfigurationTarget.DEFAULT: return 'DEFAULT';\n\t\tcase ConfigurationTarget.MEMORY: return 'MEMORY';\n\t}\n}\n\nexport interface IConfigurationChange {\n\tkeys: string[];\n\toverrides: [string, string[]][];\n}\n\nexport interface IConfigurationChangeEvent {\n\n\treadonly source: ConfigurationTarget;\n\treadonly affectedKeys: string[];\n\treadonly change: IConfigurationChange;\n\n\taffectsConfiguration(configuration: string, overrides?: IConfigurationOverrides): boolean;\n\n\t// Following data is used for telemetry\n\treadonly sourceConfig: any;\n}\n\nexport interface IConfigurationValue<T> {\n\n\treadonly defaultValue?: T;\n\treadonly userValue?: T;\n\treadonly userLocalValue?: T;\n\treadonly userRemoteValue?: T;\n\treadonly workspaceValue?: T;\n\treadonly workspaceFolderValue?: T;\n\treadonly memoryValue?: T;\n\treadonly value?: T;\n\n\treadonly default?: { value?: T, override?: T };\n\treadonly user?: { value?: T, override?: T };\n\treadonly userLocal?: { value?: T, override?: T };\n\treadonly userRemote?: { value?: T, override?: T };\n\treadonly workspace?: { value?: T, override?: T };\n\treadonly workspaceFolder?: { value?: T, override?: T };\n\treadonly memory?: { value?: T, override?: T };\n\n\treadonly overrideIdentifiers?: string[];\n}\n\nexport interface IConfigurationService {\n\treadonly _serviceBrand: undefined;\n\n\tonDidChangeConfiguration: Event<IConfigurationChangeEvent>;\n\n\tgetConfigurationData(): IConfigurationData | null;\n\n\t/**\n\t * Fetches the value of the section for the given overrides.\n\t * Value can be of native type or an object keyed off the section name.\n\t *\n\t * @param section - Section of the configuraion. Can be `null` or `undefined`.\n\t * @param overrides - Overrides that has to be applied while fetching\n\t *\n\t */\n\tgetValue<T>(): T;\n\tgetValue<T>(section: string): T;\n\tgetValue<T>(overrides: IConfigurationOverrides): T;\n\tgetValue<T>(section: string, overrides: IConfigurationOverrides): T;\n\n\tupdateValue(key: string, value: any): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides | IConfigurationUpdateOverrides): Promise<void>;\n\tupdateValue(key: string, value: any, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides | IConfigurationUpdateOverrides, target: ConfigurationTarget, donotNotifyError?: boolean): Promise<void>;\n\n\tinspect<T>(key: string, overrides?: IConfigurationOverrides): IConfigurationValue<Readonly<T>>;\n\n\treloadConfiguration(target?: ConfigurationTarget | IWorkspaceFolder): Promise<void>;\n\n\tkeys(): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t\tmemory?: string[];\n\t};\n}\n\nexport interface IConfigurationModel {\n\tcontents: any;\n\tkeys: string[];\n\toverrides: IOverrides[];\n}\n\nexport interface IOverrides {\n\tkeys: string[];\n\tcontents: any;\n\tidentifiers: string[];\n}\n\nexport interface IConfigurationData {\n\tdefaults: IConfigurationModel;\n\tuser: IConfigurationModel;\n\tworkspace: IConfigurationModel;\n\tfolders: [UriComponents, IConfigurationModel][];\n}\n\nexport interface IConfigurationCompareResult {\n\tadded: string[];\n\tremoved: string[];\n\tupdated: string[];\n\toverrides: [string, string[]][];\n}\n\nexport function toValuesTree(properties: { [qualifiedKey: string]: any }, conflictReporter: (message: string) => void): any {\n\tconst root = Object.create(null);\n\n\tfor (let key in properties) {\n\t\taddToValueTree(root, key, properties[key], conflictReporter);\n\t}\n\n\treturn root;\n}\n\nexport function addToValueTree(settingsTreeRoot: any, key: string, value: any, conflictReporter: (message: string) => void): void {\n\tconst segments = key.split('.');\n\tconst last = segments.pop()!;\n\n\tlet curr = settingsTreeRoot;\n\tfor (let i = 0; i < segments.length; i++) {\n\t\tlet s = segments[i];\n\t\tlet obj = curr[s];\n\t\tswitch (typeof obj) {\n\t\t\tcase 'undefined':\n\t\t\t\tobj = curr[s] = Object.create(null);\n\t\t\t\tbreak;\n\t\t\tcase 'object':\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconflictReporter(`Ignoring ${key} as ${segments.slice(0, i + 1).join('.')} is ${JSON.stringify(obj)}`);\n\t\t\t\treturn;\n\t\t}\n\t\tcurr = obj;\n\t}\n\n\tif (typeof curr === 'object' && curr !== null) {\n\t\ttry {\n\t\t\tcurr[last] = value; // workaround https://github.com/microsoft/vscode/issues/13606\n\t\t} catch (e) {\n\t\t\tconflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n\t\t}\n\t} else {\n\t\tconflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n\t}\n}\n\nexport function removeFromValueTree(valueTree: any, key: string): void {\n\tconst segments = key.split('.');\n\tdoRemoveFromValueTree(valueTree, segments);\n}\n\nfunction doRemoveFromValueTree(valueTree: any, segments: string[]): void {\n\tconst first = segments.shift()!;\n\tif (segments.length === 0) {\n\t\t// Reached last segment\n\t\tdelete valueTree[first];\n\t\treturn;\n\t}\n\n\tif (Object.keys(valueTree).indexOf(first) !== -1) {\n\t\tconst value = valueTree[first];\n\t\tif (typeof value === 'object' && !Array.isArray(value)) {\n\t\t\tdoRemoveFromValueTree(value, segments);\n\t\t\tif (Object.keys(value).length === 0) {\n\t\t\t\tdelete valueTree[first];\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * A helper function to get the configuration value with a specific settings path (e.g. config.some.setting)\n */\nexport function getConfigurationValue<T>(config: any, settingPath: string, defaultValue?: T): T {\n\tfunction accessSetting(config: any, path: string[]): any {\n\t\tlet current = config;\n\t\tfor (const component of path) {\n\t\t\tif (typeof current !== 'object' || current === null) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tcurrent = current[component];\n\t\t}\n\t\treturn <T>current;\n\t}\n\n\tconst path = settingPath.split('.');\n\tconst result = accessSetting(config, path);\n\n\treturn typeof result === 'undefined' ? defaultValue : result;\n}\n\nexport function merge(base: any, add: any, overwrite: boolean): void {\n\tObject.keys(add).forEach(key => {\n\t\tif (key !== '__proto__') {\n\t\t\tif (key in base) {\n\t\t\t\tif (types.isObject(base[key]) && types.isObject(add[key])) {\n\t\t\t\t\tmerge(base[key], add[key], overwrite);\n\t\t\t\t} else if (overwrite) {\n\t\t\t\t\tbase[key] = add[key];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbase[key] = add[key];\n\t\t\t}\n\t\t}\n\t});\n}\n\nexport function getMigratedSettingValue<T>(configurationService: IConfigurationService, currentSettingName: string, legacySettingName: string): T {\n\tconst setting = configurationService.inspect<T>(currentSettingName);\n\tconst legacySetting = configurationService.inspect<T>(legacySettingName);\n\n\tif (typeof setting.userValue !== 'undefined' || typeof setting.workspaceValue !== 'undefined' || typeof setting.workspaceFolderValue !== 'undefined') {\n\t\treturn setting.value!;\n\t} else if (typeof legacySetting.userValue !== 'undefined' || typeof legacySetting.workspaceValue !== 'undefined' || typeof legacySetting.workspaceFolderValue !== 'undefined') {\n\t\treturn legacySetting.value!;\n\t} else {\n\t\treturn setting.defaultValue!;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { isLinux, isMacintosh, isWeb, isWindows, userAgent } from 'vs/base/common/platform';\nimport { isFalsyOrWhitespace } from 'vs/base/common/strings';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nlet _userAgent = userAgent || '';\nconst CONSTANT_VALUES = new Map<string, boolean>();\nCONSTANT_VALUES.set('false', false);\nCONSTANT_VALUES.set('true', true);\nCONSTANT_VALUES.set('isMac', isMacintosh);\nCONSTANT_VALUES.set('isLinux', isLinux);\nCONSTANT_VALUES.set('isWindows', isWindows);\nCONSTANT_VALUES.set('isWeb', isWeb);\nCONSTANT_VALUES.set('isMacNative', isMacintosh && !isWeb);\nCONSTANT_VALUES.set('isEdge', _userAgent.indexOf('Edg/') >= 0);\nCONSTANT_VALUES.set('isFirefox', _userAgent.indexOf('Firefox') >= 0);\nCONSTANT_VALUES.set('isChrome', _userAgent.indexOf('Chrome') >= 0);\nCONSTANT_VALUES.set('isSafari', _userAgent.indexOf('Safari') >= 0);\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport const enum ContextKeyExprType {\n\tFalse = 0,\n\tTrue = 1,\n\tDefined = 2,\n\tNot = 3,\n\tEquals = 4,\n\tNotEquals = 5,\n\tAnd = 6,\n\tRegex = 7,\n\tNotRegex = 8,\n\tOr = 9,\n\tIn = 10,\n\tNotIn = 11,\n\tGreater = 12,\n\tGreaterEquals = 13,\n\tSmaller = 14,\n\tSmallerEquals = 15,\n}\n\nexport interface IContextKeyExprMapper {\n\tmapDefined(key: string): ContextKeyExpression;\n\tmapNot(key: string): ContextKeyExpression;\n\tmapEquals(key: string, value: any): ContextKeyExpression;\n\tmapNotEquals(key: string, value: any): ContextKeyExpression;\n\tmapGreater(key: string, value: any): ContextKeyExpression;\n\tmapGreaterEquals(key: string, value: any): ContextKeyExpression;\n\tmapSmaller(key: string, value: any): ContextKeyExpression;\n\tmapSmallerEquals(key: string, value: any): ContextKeyExpression;\n\tmapRegex(key: string, regexp: RegExp | null): ContextKeyRegexExpr;\n\tmapIn(key: string, valueKey: string): ContextKeyInExpr;\n}\n\nexport interface IContextKeyExpression {\n\tcmp(other: ContextKeyExpression): number;\n\tequals(other: ContextKeyExpression): boolean;\n\tsubstituteConstants(): ContextKeyExpression | undefined;\n\tevaluate(context: IContext): boolean;\n\tserialize(): string;\n\tkeys(): string[];\n\tmap(mapFnc: IContextKeyExprMapper): ContextKeyExpression;\n\tnegate(): ContextKeyExpression;\n\n}\n\nexport type ContextKeyExpression = (\n\tContextKeyFalseExpr | ContextKeyTrueExpr | ContextKeyDefinedExpr | ContextKeyNotExpr\n\t| ContextKeyEqualsExpr | ContextKeyNotEqualsExpr | ContextKeyRegexExpr\n\t| ContextKeyNotRegexExpr | ContextKeyAndExpr | ContextKeyOrExpr | ContextKeyInExpr\n\t| ContextKeyNotInExpr | ContextKeyGreaterExpr | ContextKeyGreaterEqualsExpr\n\t| ContextKeySmallerExpr | ContextKeySmallerEqualsExpr\n);\n\nexport abstract class ContextKeyExpr {\n\n\tpublic static false(): ContextKeyExpression {\n\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t}\n\tpublic static true(): ContextKeyExpression {\n\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t}\n\tpublic static has(key: string): ContextKeyExpression {\n\t\treturn ContextKeyDefinedExpr.create(key);\n\t}\n\tpublic static equals(key: string, value: any): ContextKeyExpression {\n\t\treturn ContextKeyEqualsExpr.create(key, value);\n\t}\n\tpublic static notEquals(key: string, value: any): ContextKeyExpression {\n\t\treturn ContextKeyNotEqualsExpr.create(key, value);\n\t}\n\tpublic static regex(key: string, value: RegExp): ContextKeyExpression {\n\t\treturn ContextKeyRegexExpr.create(key, value);\n\t}\n\tpublic static in(key: string, value: string): ContextKeyExpression {\n\t\treturn ContextKeyInExpr.create(key, value);\n\t}\n\tpublic static not(key: string): ContextKeyExpression {\n\t\treturn ContextKeyNotExpr.create(key);\n\t}\n\tpublic static and(...expr: Array<ContextKeyExpression | undefined | null>): ContextKeyExpression | undefined {\n\t\treturn ContextKeyAndExpr.create(expr, null);\n\t}\n\tpublic static or(...expr: Array<ContextKeyExpression | undefined | null>): ContextKeyExpression | undefined {\n\t\treturn ContextKeyOrExpr.create(expr, null, true);\n\t}\n\tpublic static greater(key: string, value: number): ContextKeyExpression {\n\t\treturn ContextKeyGreaterExpr.create(key, value);\n\t}\n\tpublic static greaterEquals(key: string, value: number): ContextKeyExpression {\n\t\treturn ContextKeyGreaterEqualsExpr.create(key, value);\n\t}\n\tpublic static smaller(key: string, value: number): ContextKeyExpression {\n\t\treturn ContextKeySmallerExpr.create(key, value);\n\t}\n\tpublic static smallerEquals(key: string, value: number): ContextKeyExpression {\n\t\treturn ContextKeySmallerEqualsExpr.create(key, value);\n\t}\n\n\tpublic static deserialize(serialized: string | null | undefined, strict: boolean = false): ContextKeyExpression | undefined {\n\t\tif (!serialized) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn this._deserializeOrExpression(serialized, strict);\n\t}\n\n\tprivate static _deserializeOrExpression(serialized: string, strict: boolean): ContextKeyExpression | undefined {\n\t\tlet pieces = serialized.split('||');\n\t\treturn ContextKeyOrExpr.create(pieces.map(p => this._deserializeAndExpression(p, strict)), null, true);\n\t}\n\n\tprivate static _deserializeAndExpression(serialized: string, strict: boolean): ContextKeyExpression | undefined {\n\t\tlet pieces = serialized.split('&&');\n\t\treturn ContextKeyAndExpr.create(pieces.map(p => this._deserializeOne(p, strict)), null);\n\t}\n\n\tprivate static _deserializeOne(serializedOne: string, strict: boolean): ContextKeyExpression {\n\t\tserializedOne = serializedOne.trim();\n\n\t\tif (serializedOne.indexOf('!=') >= 0) {\n\t\t\tlet pieces = serializedOne.split('!=');\n\t\t\treturn ContextKeyNotEqualsExpr.create(pieces[0].trim(), this._deserializeValue(pieces[1], strict));\n\t\t}\n\n\t\tif (serializedOne.indexOf('==') >= 0) {\n\t\t\tlet pieces = serializedOne.split('==');\n\t\t\treturn ContextKeyEqualsExpr.create(pieces[0].trim(), this._deserializeValue(pieces[1], strict));\n\t\t}\n\n\t\tif (serializedOne.indexOf('=~') >= 0) {\n\t\t\tlet pieces = serializedOne.split('=~');\n\t\t\treturn ContextKeyRegexExpr.create(pieces[0].trim(), this._deserializeRegexValue(pieces[1], strict));\n\t\t}\n\n\t\tif (serializedOne.indexOf(' in ') >= 0) {\n\t\t\tlet pieces = serializedOne.split(' in ');\n\t\t\treturn ContextKeyInExpr.create(pieces[0].trim(), pieces[1].trim());\n\t\t}\n\n\t\tif (/^[^<=>]+>=[^<=>]+$/.test(serializedOne)) {\n\t\t\tconst pieces = serializedOne.split('>=');\n\t\t\treturn ContextKeyGreaterEqualsExpr.create(pieces[0].trim(), pieces[1].trim());\n\t\t}\n\n\t\tif (/^[^<=>]+>[^<=>]+$/.test(serializedOne)) {\n\t\t\tconst pieces = serializedOne.split('>');\n\t\t\treturn ContextKeyGreaterExpr.create(pieces[0].trim(), pieces[1].trim());\n\t\t}\n\n\t\tif (/^[^<=>]+<=[^<=>]+$/.test(serializedOne)) {\n\t\t\tconst pieces = serializedOne.split('<=');\n\t\t\treturn ContextKeySmallerEqualsExpr.create(pieces[0].trim(), pieces[1].trim());\n\t\t}\n\n\t\tif (/^[^<=>]+<[^<=>]+$/.test(serializedOne)) {\n\t\t\tconst pieces = serializedOne.split('<');\n\t\t\treturn ContextKeySmallerExpr.create(pieces[0].trim(), pieces[1].trim());\n\t\t}\n\n\t\tif (/^\\!\\s*/.test(serializedOne)) {\n\t\t\treturn ContextKeyNotExpr.create(serializedOne.substr(1).trim());\n\t\t}\n\n\t\treturn ContextKeyDefinedExpr.create(serializedOne);\n\t}\n\n\tprivate static _deserializeValue(serializedValue: string, strict: boolean): any {\n\t\tserializedValue = serializedValue.trim();\n\n\t\tif (serializedValue === 'true') {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (serializedValue === 'false') {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet m = /^'([^']*)'$/.exec(serializedValue);\n\t\tif (m) {\n\t\t\treturn m[1].trim();\n\t\t}\n\n\t\treturn serializedValue;\n\t}\n\n\tprivate static _deserializeRegexValue(serializedValue: string, strict: boolean): RegExp | null {\n\n\t\tif (isFalsyOrWhitespace(serializedValue)) {\n\t\t\tif (strict) {\n\t\t\t\tthrow new Error('missing regexp-value for =~-expression');\n\t\t\t} else {\n\t\t\t\tconsole.warn('missing regexp-value for =~-expression');\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tlet start = serializedValue.indexOf('/');\n\t\tlet end = serializedValue.lastIndexOf('/');\n\t\tif (start === end || start < 0 /* || to < 0 */) {\n\t\t\tif (strict) {\n\t\t\t\tthrow new Error(`bad regexp-value '${serializedValue}', missing /-enclosure`);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`bad regexp-value '${serializedValue}', missing /-enclosure`);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tlet value = serializedValue.slice(start + 1, end);\n\t\tlet caseIgnoreFlag = serializedValue[end + 1] === 'i' ? 'i' : '';\n\t\ttry {\n\t\t\treturn new RegExp(value, caseIgnoreFlag);\n\t\t} catch (e) {\n\t\t\tif (strict) {\n\t\t\t\tthrow new Error(`bad regexp-value '${serializedValue}', parse error: ${e}`);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`bad regexp-value '${serializedValue}', parse error: ${e}`);\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t}\n}\n\nexport function expressionsAreEqualWithConstantSubstitution(a: ContextKeyExpression | null | undefined, b: ContextKeyExpression | null | undefined): boolean {\n\tconst aExpr = a ? a.substituteConstants() : undefined;\n\tconst bExpr = b ? b.substituteConstants() : undefined;\n\tif (!aExpr && !bExpr) {\n\t\treturn true;\n\t}\n\tif (!aExpr || !bExpr) {\n\t\treturn false;\n\t}\n\treturn aExpr.equals(bExpr);\n}\n\nfunction cmp(a: ContextKeyExpression, b: ContextKeyExpression): number {\n\treturn a.cmp(b);\n}\n\nexport class ContextKeyFalseExpr implements IContextKeyExpression {\n\tpublic static INSTANCE = new ContextKeyFalseExpr();\n\n\tpublic readonly type = ContextKeyExprType.False;\n\n\tprotected constructor() {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\treturn this.type - other.type;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\treturn (other.type === this.type);\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn false;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn 'false';\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn this;\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t}\n}\n\nexport class ContextKeyTrueExpr implements IContextKeyExpression {\n\tpublic static INSTANCE = new ContextKeyTrueExpr();\n\n\tpublic readonly type = ContextKeyExprType.True;\n\n\tprotected constructor() {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\treturn this.type - other.type;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\treturn (other.type === this.type);\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn true;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn 'true';\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn this;\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t}\n}\n\nexport class ContextKeyDefinedExpr implements IContextKeyExpression {\n\tpublic static create(key: string, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\tconst constantValue = CONSTANT_VALUES.get(key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\treturn constantValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n\t\t}\n\t\treturn new ContextKeyDefinedExpr(key, negated);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Defined;\n\n\tprotected constructor(\n\t\treadonly key: string,\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp1(this.key, other.key);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\tconst constantValue = CONSTANT_VALUES.get(this.key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\treturn constantValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn (!!context.getValue(this.key));\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.key;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapDefined(this.key);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyNotExpr.create(this.key, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyEqualsExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, value: any, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\tif (typeof value === 'boolean') {\n\t\t\treturn (value ? ContextKeyDefinedExpr.create(key, negated) : ContextKeyNotExpr.create(key, negated));\n\t\t}\n\t\tconst constantValue = CONSTANT_VALUES.get(key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\tconst trueValue = constantValue ? 'true' : 'false';\n\t\t\treturn (value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE);\n\t\t}\n\t\treturn new ContextKeyEqualsExpr(key, value, negated);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Equals;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: any,\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\tconst constantValue = CONSTANT_VALUES.get(this.key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\tconst trueValue = constantValue ? 'true' : 'false';\n\t\t\treturn (this.value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE);\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\t// Intentional ==\n\t\t// eslint-disable-next-line eqeqeq\n\t\treturn (context.getValue(this.key) == this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} == '${this.value}'`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapEquals(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyNotEqualsExpr.create(this.key, this.value, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyInExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, valueKey: string): ContextKeyInExpr {\n\t\treturn new ContextKeyInExpr(key, valueKey);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.In;\n\tprivate negated: ContextKeyExpression | null = null;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly valueKey: string,\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.valueKey, other.key, other.valueKey);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.valueKey === other.valueKey);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tconst source = context.getValue(this.valueKey);\n\n\t\tconst item = context.getValue(this.key);\n\n\t\tif (Array.isArray(source)) {\n\t\t\treturn (source.indexOf(item) >= 0);\n\t\t}\n\n\t\tif (typeof item === 'string' && typeof source === 'object' && source !== null) {\n\t\t\treturn hasOwnProperty.call(source, item);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} in '${this.valueKey}'`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key, this.valueKey];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyInExpr {\n\t\treturn mapFnc.mapIn(this.key, this.valueKey);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyNotInExpr.create(this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyNotInExpr implements IContextKeyExpression {\n\n\tpublic static create(actual: ContextKeyInExpr): ContextKeyNotInExpr {\n\t\treturn new ContextKeyNotInExpr(actual);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.NotIn;\n\n\tprivate constructor(private readonly _actual: ContextKeyInExpr) {\n\t\t//\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn this._actual.cmp(other._actual);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn this._actual.equals(other._actual);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn !this._actual.evaluate(context);\n\t}\n\n\tpublic serialize(): string {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn this._actual.keys();\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn new ContextKeyNotInExpr(this._actual.map(mapFnc));\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn this._actual;\n\t}\n}\n\nexport class ContextKeyNotEqualsExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, value: any, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\tif (typeof value === 'boolean') {\n\t\t\tif (value) {\n\t\t\t\treturn ContextKeyNotExpr.create(key, negated);\n\t\t\t}\n\t\t\treturn ContextKeyDefinedExpr.create(key, negated);\n\t\t}\n\t\tconst constantValue = CONSTANT_VALUES.get(key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\tconst falseValue = constantValue ? 'true' : 'false';\n\t\t\treturn (value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n\t\t}\n\t\treturn new ContextKeyNotEqualsExpr(key, value, negated);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.NotEquals;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: any,\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\tconst constantValue = CONSTANT_VALUES.get(this.key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\tconst falseValue = constantValue ? 'true' : 'false';\n\t\t\treturn (this.value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\t// Intentional !=\n\t\t// eslint-disable-next-line eqeqeq\n\t\treturn (context.getValue(this.key) != this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} != '${this.value}'`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapNotEquals(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyEqualsExpr.create(this.key, this.value, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyNotExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\tconst constantValue = CONSTANT_VALUES.get(key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\treturn (constantValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n\t\t}\n\t\treturn new ContextKeyNotExpr(key, negated);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Not;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp1(this.key, other.key);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\tconst constantValue = CONSTANT_VALUES.get(this.key);\n\t\tif (typeof constantValue === 'boolean') {\n\t\t\treturn (constantValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn (!context.getValue(this.key));\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `!${this.key}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapNot(this.key);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyDefinedExpr.create(this.key, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nfunction withFloatOrStr<T extends ContextKeyExpression>(value: any, callback: (value: number | string) => T): T | ContextKeyFalseExpr {\n\tif (typeof value === 'string') {\n\t\tconst n = parseFloat(value);\n\t\tif (!isNaN(n)) {\n\t\t\tvalue = n;\n\t\t}\n\t}\n\tif (typeof value === 'string' || typeof value === 'number') {\n\t\treturn callback(value);\n\t}\n\treturn ContextKeyFalseExpr.INSTANCE;\n}\n\nexport class ContextKeyGreaterExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, _value: any, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\treturn withFloatOrStr(_value, (value) => new ContextKeyGreaterExpr(key, value, negated));\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Greater;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: number | string,\n\t\tprivate negated: ContextKeyExpression | null\n\t) { }\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tif (typeof this.value === 'string') {\n\t\t\treturn false;\n\t\t}\n\t\treturn (parseFloat(<any>context.getValue(this.key)) > this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} > ${this.value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapGreater(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeySmallerEqualsExpr.create(this.key, this.value, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyGreaterEqualsExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, _value: any, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\treturn withFloatOrStr(_value, (value) => new ContextKeyGreaterEqualsExpr(key, value, negated));\n\t}\n\n\tpublic readonly type = ContextKeyExprType.GreaterEquals;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: number | string,\n\t\tprivate negated: ContextKeyExpression | null\n\t) { }\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tif (typeof this.value === 'string') {\n\t\t\treturn false;\n\t\t}\n\t\treturn (parseFloat(<any>context.getValue(this.key)) >= this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} >= ${this.value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapGreaterEquals(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeySmallerExpr.create(this.key, this.value, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeySmallerExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, _value: any, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\treturn withFloatOrStr(_value, (value) => new ContextKeySmallerExpr(key, value, negated));\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Smaller;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: number | string,\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tif (typeof this.value === 'string') {\n\t\t\treturn false;\n\t\t}\n\t\treturn (parseFloat(<any>context.getValue(this.key)) < this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} < ${this.value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapSmaller(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyGreaterEqualsExpr.create(this.key, this.value, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeySmallerEqualsExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, _value: any, negated: ContextKeyExpression | null = null): ContextKeyExpression {\n\t\treturn withFloatOrStr(_value, (value) => new ContextKeySmallerEqualsExpr(key, value, negated));\n\t}\n\n\tpublic readonly type = ContextKeyExprType.SmallerEquals;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly value: number | string,\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn cmp2(this.key, this.value, other.key, other.value);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn (this.key === other.key && this.value === other.value);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tif (typeof this.value === 'string') {\n\t\t\treturn false;\n\t\t}\n\t\treturn (parseFloat(<any>context.getValue(this.key)) <= this.value);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn `${this.key} <= ${this.value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn mapFnc.mapSmallerEquals(this.key, this.value);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyGreaterExpr.create(this.key, this.value, this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyRegexExpr implements IContextKeyExpression {\n\n\tpublic static create(key: string, regexp: RegExp | null): ContextKeyRegexExpr {\n\t\treturn new ContextKeyRegexExpr(key, regexp);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Regex;\n\tprivate negated: ContextKeyExpression | null = null;\n\n\tprivate constructor(\n\t\tprivate readonly key: string,\n\t\tprivate readonly regexp: RegExp | null\n\t) {\n\t\t//\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.key < other.key) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.key > other.key) {\n\t\t\treturn 1;\n\t\t}\n\t\tconst thisSource = this.regexp ? this.regexp.source : '';\n\t\tconst otherSource = other.regexp ? other.regexp.source : '';\n\t\tif (thisSource < otherSource) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (thisSource > otherSource) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\tconst thisSource = this.regexp ? this.regexp.source : '';\n\t\t\tconst otherSource = other.regexp ? other.regexp.source : '';\n\t\t\treturn (this.key === other.key && thisSource === otherSource);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tlet value = context.getValue<any>(this.key);\n\t\treturn this.regexp ? this.regexp.test(value) : false;\n\t}\n\n\tpublic serialize(): string {\n\t\tconst value = this.regexp\n\t\t\t? `/${this.regexp.source}/${this.regexp.ignoreCase ? 'i' : ''}`\n\t\t\t: '/invalid/';\n\t\treturn `${this.key} =~ ${value}`;\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn [this.key];\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyRegexExpr {\n\t\treturn mapFnc.mapRegex(this.key, this.regexp);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tthis.negated = ContextKeyNotRegexExpr.create(this);\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport class ContextKeyNotRegexExpr implements IContextKeyExpression {\n\n\tpublic static create(actual: ContextKeyRegexExpr): ContextKeyExpression {\n\t\treturn new ContextKeyNotRegexExpr(actual);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.NotRegex;\n\n\tprivate constructor(private readonly _actual: ContextKeyRegexExpr) {\n\t\t//\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\treturn this._actual.cmp(other._actual);\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\treturn this._actual.equals(other._actual);\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\treturn this;\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\treturn !this._actual.evaluate(context);\n\t}\n\n\tpublic serialize(): string {\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tpublic keys(): string[] {\n\t\treturn this._actual.keys();\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn new ContextKeyNotRegexExpr(this._actual.map(mapFnc));\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\treturn this._actual;\n\t}\n}\n\n/**\n * @returns the same instance if nothing changed.\n */\nfunction eliminateConstantsInArray(arr: ContextKeyExpression[]): (ContextKeyExpression | undefined)[] {\n\t// Allocate array only if there is a difference\n\tlet newArr: (ContextKeyExpression | undefined)[] | null = null;\n\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\tconst newExpr = arr[i].substituteConstants();\n\n\t\tif (arr[i] !== newExpr) {\n\t\t\t// something has changed!\n\n\t\t\t// allocate array on first difference\n\t\t\tif (newArr === null) {\n\t\t\t\tnewArr = [];\n\t\t\t\tfor (let j = 0; j < i; j++) {\n\t\t\t\t\tnewArr[j] = arr[j];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (newArr !== null) {\n\t\t\tnewArr[i] = newExpr;\n\t\t}\n\t}\n\n\tif (newArr === null) {\n\t\treturn arr;\n\t}\n\treturn newArr;\n}\n\nclass ContextKeyAndExpr implements IContextKeyExpression {\n\n\tpublic static create(_expr: ReadonlyArray<ContextKeyExpression | null | undefined>, negated: ContextKeyExpression | null): ContextKeyExpression | undefined {\n\t\treturn ContextKeyAndExpr._normalizeArr(_expr, negated);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.And;\n\n\tprivate constructor(\n\t\tpublic readonly expr: ContextKeyExpression[],\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.expr.length < other.expr.length) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.expr.length > other.expr.length) {\n\t\t\treturn 1;\n\t\t}\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tconst r = cmp(this.expr[i], other.expr[i]);\n\t\t\tif (r !== 0) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\tif (this.expr.length !== other.expr.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\t\tif (!this.expr[i].equals(other.expr[i])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\tconst exprArr = eliminateConstantsInArray(this.expr);\n\t\tif (exprArr === this.expr) {\n\t\t\t// no change\n\t\t\treturn this;\n\t\t}\n\t\treturn ContextKeyAndExpr.create(exprArr, this.negated);\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tif (!this.expr[i].evaluate(context)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate static _normalizeArr(arr: ReadonlyArray<ContextKeyExpression | null | undefined>, negated: ContextKeyExpression | null): ContextKeyExpression | undefined {\n\t\tconst expr: ContextKeyExpression[] = [];\n\t\tlet hasTrue = false;\n\n\t\tfor (const e of arr) {\n\t\t\tif (!e) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (e.type === ContextKeyExprType.True) {\n\t\t\t\t// anything && true ==> anything\n\t\t\t\thasTrue = true;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (e.type === ContextKeyExprType.False) {\n\t\t\t\t// anything && false ==> false\n\t\t\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t\t\t}\n\n\t\t\tif (e.type === ContextKeyExprType.And) {\n\t\t\t\texpr.push(...e.expr);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\texpr.push(e);\n\t\t}\n\n\t\tif (expr.length === 0 && hasTrue) {\n\t\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t\t}\n\n\t\tif (expr.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\texpr.sort(cmp);\n\n\t\t// eliminate duplicate terms\n\t\tfor (let i = 1; i < expr.length; i++) {\n\t\t\tif (expr[i - 1].equals(expr[i])) {\n\t\t\t\texpr.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\t// We must distribute any OR expression because we don't support parens\n\t\t// OR extensions will be at the end (due to sorting rules)\n\t\twhile (expr.length > 1) {\n\t\t\tconst lastElement = expr[expr.length - 1];\n\t\t\tif (lastElement.type !== ContextKeyExprType.Or) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// pop the last element\n\t\t\texpr.pop();\n\n\t\t\t// pop the second to last element\n\t\t\tconst secondToLastElement = expr.pop()!;\n\n\t\t\tconst isFinished = (expr.length === 0);\n\n\t\t\t// distribute `lastElement` over `secondToLastElement`\n\t\t\tconst resultElement = ContextKeyOrExpr.create(\n\t\t\t\tlastElement.expr.map(el => ContextKeyAndExpr.create([el, secondToLastElement], null)),\n\t\t\t\tnull,\n\t\t\t\tisFinished\n\t\t\t);\n\n\t\t\tif (resultElement) {\n\t\t\t\texpr.push(resultElement);\n\t\t\t\texpr.sort(cmp);\n\t\t\t}\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\treturn new ContextKeyAndExpr(expr, negated);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.expr.map(e => e.serialize()).join(' && ');\n\t}\n\n\tpublic keys(): string[] {\n\t\tconst result: string[] = [];\n\t\tfor (let expr of this.expr) {\n\t\t\tresult.push(...expr.keys());\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn new ContextKeyAndExpr(this.expr.map(expr => expr.map(mapFnc)), null);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tconst result: ContextKeyExpression[] = [];\n\t\t\tfor (let expr of this.expr) {\n\t\t\t\tresult.push(expr.negate());\n\t\t\t}\n\t\t\tthis.negated = ContextKeyOrExpr.create(result, this, true)!;\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nclass ContextKeyOrExpr implements IContextKeyExpression {\n\n\tpublic static create(_expr: ReadonlyArray<ContextKeyExpression | null | undefined>, negated: ContextKeyExpression | null, extraRedundantCheck: boolean): ContextKeyExpression | undefined {\n\t\treturn ContextKeyOrExpr._normalizeArr(_expr, negated, extraRedundantCheck);\n\t}\n\n\tpublic readonly type = ContextKeyExprType.Or;\n\n\tprivate constructor(\n\t\tpublic readonly expr: ContextKeyExpression[],\n\t\tprivate negated: ContextKeyExpression | null\n\t) {\n\t}\n\n\tpublic cmp(other: ContextKeyExpression): number {\n\t\tif (other.type !== this.type) {\n\t\t\treturn this.type - other.type;\n\t\t}\n\t\tif (this.expr.length < other.expr.length) {\n\t\t\treturn -1;\n\t\t}\n\t\tif (this.expr.length > other.expr.length) {\n\t\t\treturn 1;\n\t\t}\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tconst r = cmp(this.expr[i], other.expr[i]);\n\t\t\tif (r !== 0) {\n\t\t\t\treturn r;\n\t\t\t}\n\t\t}\n\t\treturn 0;\n\t}\n\n\tpublic equals(other: ContextKeyExpression): boolean {\n\t\tif (other.type === this.type) {\n\t\t\tif (this.expr.length !== other.expr.length) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\t\tif (!this.expr[i].equals(other.expr[i])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic substituteConstants(): ContextKeyExpression | undefined {\n\t\tconst exprArr = eliminateConstantsInArray(this.expr);\n\t\tif (exprArr === this.expr) {\n\t\t\t// no change\n\t\t\treturn this;\n\t\t}\n\t\treturn ContextKeyOrExpr.create(exprArr, this.negated, false);\n\t}\n\n\tpublic evaluate(context: IContext): boolean {\n\t\tfor (let i = 0, len = this.expr.length; i < len; i++) {\n\t\t\tif (this.expr[i].evaluate(context)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate static _normalizeArr(arr: ReadonlyArray<ContextKeyExpression | null | undefined>, negated: ContextKeyExpression | null, extraRedundantCheck: boolean): ContextKeyExpression | undefined {\n\t\tlet expr: ContextKeyExpression[] = [];\n\t\tlet hasFalse = false;\n\n\t\tif (arr) {\n\t\t\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\t\t\tconst e = arr[i];\n\t\t\t\tif (!e) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (e.type === ContextKeyExprType.False) {\n\t\t\t\t\t// anything || false ==> anything\n\t\t\t\t\thasFalse = true;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (e.type === ContextKeyExprType.True) {\n\t\t\t\t\t// anything || true ==> true\n\t\t\t\t\treturn ContextKeyTrueExpr.INSTANCE;\n\t\t\t\t}\n\n\t\t\t\tif (e.type === ContextKeyExprType.Or) {\n\t\t\t\t\texpr = expr.concat(e.expr);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\texpr.push(e);\n\t\t\t}\n\n\t\t\tif (expr.length === 0 && hasFalse) {\n\t\t\t\treturn ContextKeyFalseExpr.INSTANCE;\n\t\t\t}\n\n\t\t\texpr.sort(cmp);\n\t\t}\n\n\t\tif (expr.length === 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\t// eliminate duplicate terms\n\t\tfor (let i = 1; i < expr.length; i++) {\n\t\t\tif (expr[i - 1].equals(expr[i])) {\n\t\t\t\texpr.splice(i, 1);\n\t\t\t\ti--;\n\t\t\t}\n\t\t}\n\n\t\tif (expr.length === 1) {\n\t\t\treturn expr[0];\n\t\t}\n\n\t\t// eliminate redundant terms\n\t\tif (extraRedundantCheck) {\n\t\t\tfor (let i = 0; i < expr.length; i++) {\n\t\t\t\tfor (let j = i + 1; j < expr.length; j++) {\n\t\t\t\t\tif (implies(expr[i], expr[j])) {\n\t\t\t\t\t\texpr.splice(j, 1);\n\t\t\t\t\t\tj--;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (expr.length === 1) {\n\t\t\t\treturn expr[0];\n\t\t\t}\n\t\t}\n\n\t\treturn new ContextKeyOrExpr(expr, negated);\n\t}\n\n\tpublic serialize(): string {\n\t\treturn this.expr.map(e => e.serialize()).join(' || ');\n\t}\n\n\tpublic keys(): string[] {\n\t\tconst result: string[] = [];\n\t\tfor (let expr of this.expr) {\n\t\t\tresult.push(...expr.keys());\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic map(mapFnc: IContextKeyExprMapper): ContextKeyExpression {\n\t\treturn new ContextKeyOrExpr(this.expr.map(expr => expr.map(mapFnc)), null);\n\t}\n\n\tpublic negate(): ContextKeyExpression {\n\t\tif (!this.negated) {\n\t\t\tlet result: ContextKeyExpression[] = [];\n\t\t\tfor (let expr of this.expr) {\n\t\t\t\tresult.push(expr.negate());\n\t\t\t}\n\n\t\t\t// We don't support parens, so here we distribute the AND over the OR terminals\n\t\t\t// We always take the first 2 AND pairs and distribute them\n\t\t\twhile (result.length > 1) {\n\t\t\t\tconst LEFT = result.shift()!;\n\t\t\t\tconst RIGHT = result.shift()!;\n\n\t\t\t\tconst all: ContextKeyExpression[] = [];\n\t\t\t\tfor (const left of getTerminals(LEFT)) {\n\t\t\t\t\tfor (const right of getTerminals(RIGHT)) {\n\t\t\t\t\t\tall.push(ContextKeyAndExpr.create([left, right], null)!);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst isFinished = (result.length === 0);\n\t\t\t\tresult.unshift(ContextKeyOrExpr.create(all, null, isFinished)!);\n\t\t\t}\n\n\t\t\tthis.negated = result[0];\n\t\t}\n\t\treturn this.negated;\n\t}\n}\n\nexport interface ContextKeyInfo {\n\treadonly key: string;\n\treadonly type?: string;\n\treadonly description?: string;\n}\n\nexport class RawContextKey<T> extends ContextKeyDefinedExpr {\n\n\tprivate static _info: ContextKeyInfo[] = [];\n\n\tstatic all(): IterableIterator<ContextKeyInfo> {\n\t\treturn RawContextKey._info.values();\n\t}\n\n\tprivate readonly _defaultValue: T | undefined;\n\n\tconstructor(key: string, defaultValue: T | undefined, metaOrHide?: string | true | { type: string, description: string }) {\n\t\tsuper(key, null);\n\t\tthis._defaultValue = defaultValue;\n\n\t\t// collect all context keys into a central place\n\t\tif (typeof metaOrHide === 'object') {\n\t\t\tRawContextKey._info.push({ ...metaOrHide, key });\n\t\t} else if (metaOrHide !== true) {\n\t\t\tRawContextKey._info.push({ key, description: metaOrHide, type: defaultValue !== null && defaultValue !== undefined ? typeof defaultValue : undefined });\n\t\t}\n\t}\n\n\tpublic bindTo(target: IContextKeyService): IContextKey<T> {\n\t\treturn target.createKey(this.key, this._defaultValue);\n\t}\n\n\tpublic getValue(target: IContextKeyService): T | undefined {\n\t\treturn target.getContextKeyValue<T>(this.key);\n\t}\n\n\tpublic toNegated(): ContextKeyExpression {\n\t\treturn this.negate();\n\t}\n\n\tpublic isEqualTo(value: any): ContextKeyExpression {\n\t\treturn ContextKeyEqualsExpr.create(this.key, value);\n\t}\n\n\tpublic notEqualsTo(value: any): ContextKeyExpression {\n\t\treturn ContextKeyNotEqualsExpr.create(this.key, value);\n\t}\n}\n\nexport interface IContext {\n\tgetValue<T>(key: string): T | undefined;\n}\n\nexport interface IContextKey<T> {\n\tset(value: T): void;\n\treset(): void;\n\tget(): T | undefined;\n}\n\nexport interface IContextKeyServiceTarget {\n\tparentElement: IContextKeyServiceTarget | null;\n\tsetAttribute(attr: string, value: string): void;\n\tremoveAttribute(attr: string): void;\n\thasAttribute(attr: string): boolean;\n\tgetAttribute(attr: string): string | null;\n}\n\nexport const IContextKeyService = createDecorator<IContextKeyService>('contextKeyService');\n\nexport interface IReadableSet<T> {\n\thas(value: T): boolean;\n}\n\nexport interface IContextKeyChangeEvent {\n\taffectsSome(keys: IReadableSet<string>): boolean;\n}\n\nexport interface IContextKeyService {\n\treadonly _serviceBrand: undefined;\n\tdispose(): void;\n\n\tonDidChangeContext: Event<IContextKeyChangeEvent>;\n\tbufferChangeEvents(callback: Function): void;\n\n\tcreateKey<T>(key: string, defaultValue: T | undefined): IContextKey<T>;\n\tcontextMatchesRules(rules: ContextKeyExpression | undefined): boolean;\n\tgetContextKeyValue<T>(key: string): T | undefined;\n\n\tcreateScoped(target: IContextKeyServiceTarget): IContextKeyService;\n\tcreateOverlay(overlay: Iterable<[string, any]>): IContextKeyService;\n\tgetContext(target: IContextKeyServiceTarget | null): IContext;\n\n\tupdateParent(parentContextKeyService: IContextKeyService): void;\n}\n\nexport const SET_CONTEXT_COMMAND_ID = 'setContext';\n\nfunction cmp1(key1: string, key2: string): number {\n\tif (key1 < key2) {\n\t\treturn -1;\n\t}\n\tif (key1 > key2) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\nfunction cmp2(key1: string, value1: any, key2: string, value2: any): number {\n\tif (key1 < key2) {\n\t\treturn -1;\n\t}\n\tif (key1 > key2) {\n\t\treturn 1;\n\t}\n\tif (value1 < value2) {\n\t\treturn -1;\n\t}\n\tif (value1 > value2) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\n/**\n * Returns true if it is provable `p` implies `q`.\n */\nexport function implies(p: ContextKeyExpression, q: ContextKeyExpression): boolean {\n\n\tif (q.type === ContextKeyExprType.And && (p.type !== ContextKeyExprType.Or && p.type !== ContextKeyExprType.And)) {\n\t\t// covers the case: A implies A && B\n\t\tfor (const qTerm of q.expr) {\n\t\t\tif (p.equals(qTerm)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\n\tconst notP = p.negate();\n\tconst expr = getTerminals(notP).concat(getTerminals(q));\n\texpr.sort(cmp);\n\n\tfor (let i = 0; i < expr.length; i++) {\n\t\tconst a = expr[i];\n\t\tconst notA = a.negate();\n\t\tfor (let j = i + 1; j < expr.length; j++) {\n\t\t\tconst b = expr[j];\n\t\t\tif (notA.equals(b)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn false;\n}\n\nfunction getTerminals(node: ContextKeyExpression) {\n\tif (node.type === ContextKeyExprType.Or) {\n\t\treturn node.expr;\n\t}\n\treturn [node];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { ProcessItem } from 'vs/base/common/processes';\nimport { UriComponents } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IMainProcessInfo } from 'vs/platform/launch/common/launch';\nimport { IWorkspace } from 'vs/platform/workspace/common/workspace';\n\nexport const ID = 'diagnosticsService';\nexport const IDiagnosticsService = createDecorator<IDiagnosticsService>(ID);\n\nexport interface IDiagnosticsService {\n\treadonly _serviceBrand: undefined;\n\n\tgetPerformanceInfo(mainProcessInfo: IMainProcessInfo, remoteInfo: (IRemoteDiagnosticInfo | IRemoteDiagnosticError)[]): Promise<PerformanceInfo>;\n\tgetSystemInfo(mainProcessInfo: IMainProcessInfo, remoteInfo: (IRemoteDiagnosticInfo | IRemoteDiagnosticError)[]): Promise<SystemInfo>;\n\tgetDiagnostics(mainProcessInfo: IMainProcessInfo, remoteInfo: (IRemoteDiagnosticInfo | IRemoteDiagnosticError)[]): Promise<string>;\n\treportWorkspaceStats(workspace: IWorkspaceInformation): Promise<void>;\n}\n\nexport interface IMachineInfo {\n\tos: string;\n\tcpus?: string;\n\tmemory: string;\n\tvmHint: string;\n\tlinuxEnv?: ILinuxEnv;\n}\n\nexport interface ILinuxEnv {\n\tdesktopSession?: string;\n\txdgSessionDesktop?: string;\n\txdgCurrentDesktop?: string;\n\txdgSessionType?: string;\n}\n\nexport interface IDiagnosticInfo {\n\tmachineInfo: IMachineInfo;\n\tworkspaceMetadata?: IStringDictionary<WorkspaceStats>;\n\tprocesses?: ProcessItem;\n}\nexport interface SystemInfo extends IMachineInfo {\n\tprocessArgs: string;\n\tgpuStatus: any;\n\tscreenReader: string;\n\tremoteData: (IRemoteDiagnosticInfo | IRemoteDiagnosticError)[];\n\tload?: string;\n}\n\nexport interface IRemoteDiagnosticInfo extends IDiagnosticInfo {\n\thostName: string;\n}\n\nexport interface IRemoteDiagnosticError {\n\thostName: string;\n\terrorMessage: string;\n}\n\nexport interface IDiagnosticInfoOptions {\n\tincludeProcesses?: boolean;\n\tfolders?: UriComponents[];\n\tincludeExtensions?: boolean;\n}\n\nexport interface WorkspaceStatItem {\n\tname: string;\n\tcount: number;\n}\n\nexport interface WorkspaceStats {\n\tfileTypes: WorkspaceStatItem[];\n\tconfigFiles: WorkspaceStatItem[];\n\tfileCount: number;\n\tmaxFilesReached: boolean;\n\tlaunchConfigFiles: WorkspaceStatItem[];\n}\n\nexport interface PerformanceInfo {\n\tprocessInfo?: string;\n\tworkspaceInfo?: string;\n}\n\nexport interface IWorkspaceInformation extends IWorkspace {\n\ttelemetryId: string | undefined;\n\trendererSessionId: string;\n}\n\nexport function isRemoteDiagnosticError(x: any): x is IRemoteDiagnosticError {\n\treturn !!x.hostName && !!x.errorMessage;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IDownloadService = createDecorator<IDownloadService>('downloadService');\n\nexport interface IDownloadService {\n\n\treadonly _serviceBrand: undefined;\n\n\tdownload(uri: URI, to: URI, cancellationToken?: CancellationToken): Promise<void>;\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { ExtensionKind } from 'vs/platform/extensions/common/extensions';\nimport { createDecorator, refineServiceDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IEnvironmentService = createDecorator<IEnvironmentService>('environmentService');\nexport const INativeEnvironmentService = refineServiceDecorator<IEnvironmentService, INativeEnvironmentService>(IEnvironmentService);\n\nexport interface IDebugParams {\n\tport: number | null;\n\tbreak: boolean;\n}\n\nexport interface IExtensionHostDebugParams extends IDebugParams {\n\tdebugId?: string;\n\tenv?: Record<string, string>;\n}\n\n/**\n * A basic environment service that can be used in various processes,\n * such as main, renderer and shared process. Use subclasses of this\n * service for specific environment.\n */\nexport interface IEnvironmentService {\n\n\treadonly _serviceBrand: undefined;\n\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t//\n\t// NOTE: KEEP THIS INTERFACE AS SMALL AS POSSIBLE.\n\t//\n\t// AS SUCH:\n\t//   - PUT NON-WEB PROPERTIES INTO NATIVE ENVIRONMENT SERVICE\n\t//   - PUT WORKBENCH ONLY PROPERTIES INTO WORKBENCH ENVIRONMENT SERVICE\n\t//   - PUT ELECTRON-MAIN ONLY PROPERTIES INTO MAIN ENVIRONMENT SERVICE\n\t//\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n\t// --- user roaming data\n\tuserRoamingDataHome: URI;\n\tsettingsResource: URI;\n\tkeybindingsResource: URI;\n\tkeyboardLayoutResource: URI;\n\targvResource: URI;\n\tsnippetsHome: URI;\n\n\t// --- data paths\n\tuntitledWorkspacesHome: URI;\n\tglobalStorageHome: URI;\n\tworkspaceStorageHome: URI;\n\tcacheHome: URI;\n\n\t// --- settings sync\n\tuserDataSyncHome: URI;\n\tuserDataSyncLogResource: URI;\n\tsync: 'on' | 'off' | undefined;\n\n\t// --- extension development\n\tdebugExtensionHost: IExtensionHostDebugParams;\n\tisExtensionDevelopment: boolean;\n\tdisableExtensions: boolean | string[];\n\tenableExtensions?: readonly string[];\n\textensionDevelopmentLocationURI?: URI[];\n\textensionDevelopmentKind?: ExtensionKind[];\n\textensionTestsLocationURI?: URI;\n\n\t// --- logging\n\tlogsPath: string;\n\tlogLevel?: string;\n\tverbose: boolean;\n\tisBuilt: boolean;\n\n\t// --- telemetry\n\tdisableTelemetry: boolean;\n\ttelemetryLogResource: URI;\n\tserviceMachineIdResource: URI;\n\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t//\n\t// NOTE: KEEP THIS INTERFACE AS SMALL AS POSSIBLE.\n\t//\n\t// AS SUCH:\n\t//   - PUT NON-WEB PROPERTIES INTO NATIVE ENVIRONMENT SERVICE\n\t//   - PUT WORKBENCH ONLY PROPERTIES INTO WORKBENCH ENVIRONMENT SERVICE\n\t//   - PUT ELECTRON-MAIN ONLY PROPERTIES INTO MAIN ENVIRONMENT SERVICE\n\t//\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n}\n\n/**\n * A subclass of the `IEnvironmentService` to be used only in native\n * environments (Windows, Linux, macOS) but not e.g. web.\n */\nexport interface INativeEnvironmentService extends IEnvironmentService {\n\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t//\n\t// NOTE: KEEP THIS INTERFACE AS SMALL AS POSSIBLE.\n\t//\n\t// AS SUCH:\n\t//   - PUT WORKBENCH ONLY PROPERTIES INTO WORKBENCH ENVIRONMENT SERVICE\n\t//   - PUT ELECTRON-MAIN ONLY PROPERTIES INTO MAIN ENVIRONMENT SERVICE\n\t//\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n\t// --- CLI Arguments\n\targs: NativeParsedArgs;\n\n\t// --- data paths\n\tappRoot: string;\n\tuserHome: URI;\n\tappSettingsHome: URI;\n\ttmpDir: URI;\n\tuserDataPath: string;\n\tmachineSettingsResource: URI;\n\tinstallSourcePath: string;\n\n\t// --- extensions\n\textensionsPath: string;\n\textensionsDownloadPath: string;\n\tbuiltinExtensionsPath: string;\n\n\t// --- smoke test support\n\tdriverHandle?: string;\n\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t//\n\t// NOTE: KEEP THIS INTERFACE AS SMALL AS POSSIBLE.\n\t//\n\t// AS SUCH:\n\t//   - PUT NON-WEB PROPERTIES INTO NATIVE ENVIRONMENT SERVICE\n\t//   - PUT WORKBENCH ONLY PROPERTIES INTO WORKBENCH ENVIRONMENT SERVICE\n\t//   - PUT ELECTRON-MAIN ONLY PROPERTIES INTO MAIN ENVIRONMENT SERVICE\n\t//\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { Event } from 'vs/base/common/event';\nimport { FileAccess } from 'vs/base/common/network';\nimport { IPager } from 'vs/base/common/paging';\nimport { Platform } from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { ExtensionType, IExtension, IExtensionManifest } from 'vs/platform/extensions/common/extensions';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const EXTENSION_IDENTIFIER_PATTERN = '^([a-z0-9A-Z][a-z0-9-A-Z]*)\\\\.([a-z0-9A-Z][a-z0-9-A-Z]*)$';\nexport const EXTENSION_IDENTIFIER_REGEX = new RegExp(EXTENSION_IDENTIFIER_PATTERN);\nexport const WEB_EXTENSION_TAG = '__web_extension';\n\nexport const enum TargetPlatform {\n\tWIN32_X64 = 'win32-x64',\n\tWIN32_IA32 = 'win32-ia32',\n\tWIN32_ARM64 = 'win32-arm64',\n\n\tLINUX_X64 = 'linux-x64',\n\tLINUX_ARM64 = 'linux-arm64',\n\tLINUX_ARMHF = 'linux-armhf',\n\n\tALPINE_X64 = 'alpine-x64',\n\tALPINE_ARM64 = 'alpine-arm64',\n\n\tDARWIN_X64 = 'darwin-x64',\n\tDARWIN_ARM64 = 'darwin-arm64',\n\n\tWEB = 'web',\n\n\tUNIVERSAL = 'universal',\n\tUNKNOWN = 'unknown',\n\tUNDEFINED = 'undefined',\n}\n\nexport function TargetPlatformToString(targetPlatform: TargetPlatform) {\n\tswitch (targetPlatform) {\n\t\tcase TargetPlatform.WIN32_X64: return 'Windows 64 bit';\n\t\tcase TargetPlatform.WIN32_IA32: return 'Windows 32 bit';\n\t\tcase TargetPlatform.WIN32_ARM64: return 'Windows ARM';\n\n\t\tcase TargetPlatform.LINUX_X64: return 'Linux 64 bit';\n\t\tcase TargetPlatform.LINUX_ARM64: return 'Linux ARM 64';\n\t\tcase TargetPlatform.LINUX_ARMHF: return 'Linux ARM';\n\n\t\tcase TargetPlatform.ALPINE_X64: return 'Alpine Linux 64 bit';\n\t\tcase TargetPlatform.ALPINE_ARM64: return 'Alpine ARM 64';\n\n\t\tcase TargetPlatform.DARWIN_X64: return 'Mac';\n\t\tcase TargetPlatform.DARWIN_ARM64: return 'Mac Silicon';\n\n\t\tcase TargetPlatform.WEB: return 'Web';\n\n\t\tcase TargetPlatform.UNIVERSAL: return TargetPlatform.UNIVERSAL;\n\t\tcase TargetPlatform.UNKNOWN: return TargetPlatform.UNKNOWN;\n\t\tcase TargetPlatform.UNDEFINED: return TargetPlatform.UNDEFINED;\n\t}\n}\n\nexport function toTargetPlatform(targetPlatform: string): TargetPlatform {\n\tswitch (targetPlatform) {\n\t\tcase TargetPlatform.WIN32_X64: return TargetPlatform.WIN32_X64;\n\t\tcase TargetPlatform.WIN32_IA32: return TargetPlatform.WIN32_IA32;\n\t\tcase TargetPlatform.WIN32_ARM64: return TargetPlatform.WIN32_ARM64;\n\n\t\tcase TargetPlatform.LINUX_X64: return TargetPlatform.LINUX_X64;\n\t\tcase TargetPlatform.LINUX_ARM64: return TargetPlatform.LINUX_ARM64;\n\t\tcase TargetPlatform.LINUX_ARMHF: return TargetPlatform.LINUX_ARMHF;\n\n\t\tcase TargetPlatform.ALPINE_X64: return TargetPlatform.ALPINE_X64;\n\t\tcase TargetPlatform.ALPINE_ARM64: return TargetPlatform.ALPINE_ARM64;\n\n\t\tcase TargetPlatform.DARWIN_X64: return TargetPlatform.DARWIN_X64;\n\t\tcase TargetPlatform.DARWIN_ARM64: return TargetPlatform.DARWIN_ARM64;\n\n\t\tcase TargetPlatform.WEB: return TargetPlatform.WEB;\n\n\t\tcase TargetPlatform.UNIVERSAL: return TargetPlatform.UNIVERSAL;\n\t\tdefault: return TargetPlatform.UNKNOWN;\n\t}\n}\n\nexport function getTargetPlatform(platform: Platform | 'alpine', arch: string | undefined): TargetPlatform {\n\tswitch (platform) {\n\t\tcase Platform.Windows:\n\t\t\tif (arch === 'x64') {\n\t\t\t\treturn TargetPlatform.WIN32_X64;\n\t\t\t}\n\t\t\tif (arch === 'ia32') {\n\t\t\t\treturn TargetPlatform.WIN32_IA32;\n\t\t\t}\n\t\t\tif (arch === 'arm64') {\n\t\t\t\treturn TargetPlatform.WIN32_ARM64;\n\t\t\t}\n\t\t\treturn TargetPlatform.UNKNOWN;\n\n\t\tcase Platform.Linux:\n\t\t\tif (arch === 'x64') {\n\t\t\t\treturn TargetPlatform.LINUX_X64;\n\t\t\t}\n\t\t\tif (arch === 'arm64') {\n\t\t\t\treturn TargetPlatform.LINUX_ARM64;\n\t\t\t}\n\t\t\tif (arch === 'arm') {\n\t\t\t\treturn TargetPlatform.LINUX_ARMHF;\n\t\t\t}\n\t\t\treturn TargetPlatform.UNKNOWN;\n\n\t\tcase 'alpine':\n\t\t\tif (arch === 'x64') {\n\t\t\t\treturn TargetPlatform.ALPINE_X64;\n\t\t\t}\n\t\t\tif (arch === 'arm64') {\n\t\t\t\treturn TargetPlatform.ALPINE_ARM64;\n\t\t\t}\n\t\t\treturn TargetPlatform.UNKNOWN;\n\n\t\tcase Platform.Mac:\n\t\t\tif (arch === 'x64') {\n\t\t\t\treturn TargetPlatform.DARWIN_X64;\n\t\t\t}\n\t\t\tif (arch === 'arm64') {\n\t\t\t\treturn TargetPlatform.DARWIN_ARM64;\n\t\t\t}\n\t\t\treturn TargetPlatform.UNKNOWN;\n\n\t\tcase Platform.Web: return TargetPlatform.WEB;\n\t}\n}\n\nexport function isNotWebExtensionInWebTargetPlatform(allTargetPlatforms: TargetPlatform[], productTargetPlatform: TargetPlatform): boolean {\n\t// Not a web extension in web target platform\n\treturn productTargetPlatform === TargetPlatform.WEB && !allTargetPlatforms.includes(TargetPlatform.WEB);\n}\n\nexport function isTargetPlatformCompatible(extensionTargetPlatform: TargetPlatform, allTargetPlatforms: TargetPlatform[], productTargetPlatform: TargetPlatform): boolean {\n\t// Not compatible when extension is not a web extension in web target platform\n\tif (isNotWebExtensionInWebTargetPlatform(allTargetPlatforms, productTargetPlatform)) {\n\t\treturn false;\n\t}\n\n\t// Compatible when extension target platform is not defined\n\tif (extensionTargetPlatform === TargetPlatform.UNDEFINED) {\n\t\treturn true;\n\t}\n\n\t// Compatible when extension target platform is universal\n\tif (extensionTargetPlatform === TargetPlatform.UNIVERSAL) {\n\t\treturn true;\n\t}\n\n\t// Not compatible when extension target platform is unknown\n\tif (extensionTargetPlatform === TargetPlatform.UNKNOWN) {\n\t\treturn false;\n\t}\n\n\t// Compatible when extension and product target platforms matches\n\tif (extensionTargetPlatform === productTargetPlatform) {\n\t\treturn true;\n\t}\n\n\t// Fallback\n\tconst fallbackTargetPlatforms = getFallbackTargetPlarforms(productTargetPlatform);\n\treturn fallbackTargetPlatforms.includes(extensionTargetPlatform);\n}\n\nexport function getFallbackTargetPlarforms(targetPlatform: TargetPlatform): TargetPlatform[] {\n\tswitch (targetPlatform) {\n\t\tcase TargetPlatform.WIN32_X64: return [TargetPlatform.WIN32_IA32];\n\t\tcase TargetPlatform.WIN32_ARM64: return [TargetPlatform.WIN32_IA32];\n\t}\n\treturn [];\n}\n\nexport interface IGalleryExtensionProperties {\n\tdependencies?: string[];\n\textensionPack?: string[];\n\tengine?: string;\n\tlocalizedLanguages?: string[];\n\ttargetPlatform: TargetPlatform;\n\tisPreReleaseVersion: boolean;\n}\n\nexport interface IGalleryExtensionAsset {\n\turi: string;\n\tfallbackUri: string;\n}\n\nexport interface IGalleryExtensionAssets {\n\tmanifest: IGalleryExtensionAsset | null;\n\treadme: IGalleryExtensionAsset | null;\n\tchangelog: IGalleryExtensionAsset | null;\n\tlicense: IGalleryExtensionAsset | null;\n\trepository: IGalleryExtensionAsset | null;\n\tdownload: IGalleryExtensionAsset;\n\ticon: IGalleryExtensionAsset;\n\tcoreTranslations: [string, IGalleryExtensionAsset][];\n}\n\nexport function isIExtensionIdentifier(thing: any): thing is IExtensionIdentifier {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.id === 'string'\n\t\t&& (!thing.uuid || typeof thing.uuid === 'string');\n}\n\n/* __GDPR__FRAGMENT__\n\t\"ExtensionIdentifier\" : {\n\t\t\"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"uuid\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t}\n */\nexport interface IExtensionIdentifier {\n\tid: string;\n\tuuid?: string;\n}\n\nexport interface IExtensionIdentifierWithVersion extends IExtensionIdentifier {\n\tid: string;\n\tuuid?: string;\n\tversion: string;\n}\n\nexport interface IExtensionIdentifierWithPreRelease extends IExtensionIdentifier {\n\tpreRelease: boolean;\n}\n\nexport interface IGalleryExtensionIdentifier extends IExtensionIdentifier {\n\tuuid: string;\n}\n\nexport interface IGalleryExtensionVersion {\n\tversion: string;\n\tdate: string;\n\tisPreReleaseVersion: boolean;\n}\n\nexport interface IGalleryExtension {\n\tname: string;\n\tidentifier: IGalleryExtensionIdentifier;\n\tversion: string;\n\tdisplayName: string;\n\tpublisherId: string;\n\tpublisher: string;\n\tpublisherDisplayName: string;\n\tpublisherDomain?: { link: string, verified: boolean };\n\tdescription: string;\n\tinstallCount: number;\n\trating: number;\n\tratingCount: number;\n\tcategories: readonly string[];\n\ttags: readonly string[];\n\treleaseDate: number;\n\tlastUpdated: number;\n\tpreview: boolean;\n\thasPreReleaseVersion: boolean;\n\thasReleaseVersion: boolean;\n\tallTargetPlatforms: TargetPlatform[];\n\tassets: IGalleryExtensionAssets;\n\tproperties: IGalleryExtensionProperties;\n\ttelemetryData?: any;\n}\n\nexport interface IGalleryMetadata {\n\tid: string;\n\tpublisherId: string;\n\tpublisherDisplayName: string;\n\tisPreReleaseVersion: boolean,\n}\n\nexport type Metadata = Partial<IGalleryMetadata & { isMachineScoped: boolean; isBuiltin: boolean; preRelease: boolean, installedTimestamp: number }>;\n\nexport interface ILocalExtension extends IExtension {\n\tisMachineScoped: boolean;\n\tpublisherId: string | null;\n\tpublisherDisplayName: string | null;\n\tinstalledTimestamp?: number;\n\tisPreReleaseVersion: boolean;\n\tpreRelease: boolean;\n}\n\nexport const enum SortBy {\n\tNoneOrRelevance = 0,\n\tLastUpdatedDate = 1,\n\tTitle = 2,\n\tPublisherName = 3,\n\tInstallCount = 4,\n\tPublishedDate = 10,\n\tAverageRating = 6,\n\tWeightedRating = 12\n}\n\nexport const enum SortOrder {\n\tDefault = 0,\n\tAscending = 1,\n\tDescending = 2\n}\n\nexport interface IQueryOptions {\n\ttext?: string;\n\tids?: string[];\n\tnames?: string[];\n\tpageSize?: number;\n\tsortBy?: SortBy;\n\tsortOrder?: SortOrder;\n\tsource?: string;\n\tincludePreRelease?: boolean;\n}\n\nexport const enum StatisticType {\n\tInstall = 'install',\n\tUninstall = 'uninstall'\n}\n\nexport interface IExtensionsControlManifest {\n\tmalicious: IExtensionIdentifier[];\n\tunsupportedPreReleaseExtensions?: IStringDictionary<{ id: string, displayName: string }>;\n}\n\nexport const enum InstallOperation {\n\tNone = 1,\n\tInstall,\n\tUpdate,\n\tMigrate,\n}\n\nexport interface ITranslation {\n\tcontents: { [key: string]: {} };\n}\n\nexport const IExtensionGalleryService = createDecorator<IExtensionGalleryService>('extensionGalleryService');\nexport interface IExtensionGalleryService {\n\treadonly _serviceBrand: undefined;\n\tisEnabled(): boolean;\n\tquery(options: IQueryOptions, token: CancellationToken): Promise<IPager<IGalleryExtension>>;\n\tgetExtensions(identifiers: ReadonlyArray<IExtensionIdentifier | IExtensionIdentifierWithVersion>, token: CancellationToken): Promise<IGalleryExtension[]>;\n\tgetExtensions(identifiers: ReadonlyArray<IExtensionIdentifier | IExtensionIdentifierWithVersion>, includePreRelease: boolean, token: CancellationToken): Promise<IGalleryExtension[]>;\n\tgetExtensions2(identifiers: ReadonlyArray<IExtensionIdentifierWithPreRelease>): Promise<IGalleryExtension[]>;\n\tdownload(extension: IGalleryExtension, location: URI, operation: InstallOperation): Promise<void>;\n\treportStatistic(publisher: string, name: string, version: string, type: StatisticType): Promise<void>;\n\tgetReadme(extension: IGalleryExtension, token: CancellationToken): Promise<string>;\n\tgetManifest(extension: IGalleryExtension, token: CancellationToken): Promise<IExtensionManifest | null>;\n\tgetChangelog(extension: IGalleryExtension, token: CancellationToken): Promise<string>;\n\tgetCoreTranslation(extension: IGalleryExtension, languageId: string): Promise<ITranslation | null>;\n\tgetExtensionsControlManifest(): Promise<IExtensionsControlManifest>;\n\tisExtensionCompatible(extension: IGalleryExtension, includePreRelease: boolean, targetPlatform: TargetPlatform): Promise<boolean>;\n\tgetCompatibleExtension(extension: IGalleryExtension, includePreRelease: boolean, targetPlatform: TargetPlatform): Promise<IGalleryExtension | null>;\n\tgetCompatibleExtension(id: IExtensionIdentifier, includePreRelease: boolean, targetPlatform: TargetPlatform): Promise<IGalleryExtension | null>;\n\tgetAllCompatibleVersions(extension: IGalleryExtension, includePreRelease: boolean, targetPlatform: TargetPlatform): Promise<IGalleryExtensionVersion[]>;\n}\n\nexport interface InstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\tsource: URI | IGalleryExtension;\n}\n\nexport interface InstallExtensionResult {\n\treadonly identifier: IExtensionIdentifier;\n\treadonly operation: InstallOperation;\n\treadonly source?: URI | IGalleryExtension;\n\treadonly local?: ILocalExtension;\n}\n\nexport interface DidUninstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\terror?: string;\n}\n\nexport enum ExtensionManagementErrorCode {\n\tUnsupported = 'Unsupported',\n\tUnsupportedPreRelease = 'UnsupportedPreRelease',\n\tMalicious = 'Malicious',\n\tIncompatible = 'Incompatible',\n\tIncompatiblePreRelease = 'IncompatiblePreRelease',\n\tIncompatibleTargetPlatform = 'IncompatibleTargetPlatform',\n\tInvalid = 'Invalid',\n\tDownload = 'Download',\n\tExtract = 'Extract',\n\tDelete = 'Delete',\n\tRename = 'Rename',\n\tCorruptZip = 'CorruptZip',\n\tIncompleteZip = 'IncompleteZip',\n\tInternal = 'Internal',\n}\n\nexport class ExtensionManagementError extends Error {\n\tconstructor(message: string, readonly code: ExtensionManagementErrorCode) {\n\t\tsuper(message);\n\t\tthis.name = code;\n\t}\n}\n\nexport type InstallOptions = { isBuiltin?: boolean, isMachineScoped?: boolean, donotIncludePackAndDependencies?: boolean, installGivenVersion?: boolean, installPreReleaseVersion?: boolean };\nexport type InstallVSIXOptions = Omit<InstallOptions, 'installGivenVersion'> & { installOnlyNewlyAddedFromExtensionPack?: boolean };\nexport type UninstallOptions = { donotIncludePack?: boolean, donotCheckDependents?: boolean };\n\nexport interface IExtensionManagementParticipant {\n\tpostInstall(local: ILocalExtension, source: URI | IGalleryExtension, options: InstallOptions | InstallVSIXOptions, token: CancellationToken): Promise<void>;\n\tpostUninstall(local: ILocalExtension, options: UninstallOptions, token: CancellationToken): Promise<void>;\n}\n\nexport const IExtensionManagementService = createDecorator<IExtensionManagementService>('extensionManagementService');\nexport interface IExtensionManagementService {\n\treadonly _serviceBrand: undefined;\n\n\tonInstallExtension: Event<InstallExtensionEvent>;\n\tonDidInstallExtensions: Event<readonly InstallExtensionResult[]>;\n\tonUninstallExtension: Event<IExtensionIdentifier>;\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent>;\n\n\tzip(extension: ILocalExtension): Promise<URI>;\n\tunzip(zipLocation: URI): Promise<IExtensionIdentifier>;\n\tgetManifest(vsix: URI): Promise<IExtensionManifest>;\n\tinstall(vsix: URI, options?: InstallVSIXOptions): Promise<ILocalExtension>;\n\tcanInstall(extension: IGalleryExtension): Promise<boolean>;\n\tinstallFromGallery(extension: IGalleryExtension, options?: InstallOptions): Promise<ILocalExtension>;\n\tuninstall(extension: ILocalExtension, options?: UninstallOptions): Promise<void>;\n\treinstallFromGallery(extension: ILocalExtension): Promise<void>;\n\tgetInstalled(type?: ExtensionType, donotIgnoreInvalidExtensions?: boolean): Promise<ILocalExtension[]>;\n\tgetExtensionsControlManifest(): Promise<IExtensionsControlManifest>;\n\n\tupdateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension>;\n\tupdateExtensionScope(local: ILocalExtension, isMachineScoped: boolean): Promise<ILocalExtension>;\n\n\tregisterParticipant(pariticipant: IExtensionManagementParticipant): void;\n\tgetTargetPlatform(): Promise<TargetPlatform>;\n}\n\nexport const DISABLED_EXTENSIONS_STORAGE_PATH = 'extensionsIdentifiers/disabled';\nexport const ENABLED_EXTENSIONS_STORAGE_PATH = 'extensionsIdentifiers/enabled';\nexport const IGlobalExtensionEnablementService = createDecorator<IGlobalExtensionEnablementService>('IGlobalExtensionEnablementService');\n\nexport interface IGlobalExtensionEnablementService {\n\treadonly _serviceBrand: undefined;\n\treadonly onDidChangeEnablement: Event<{ readonly extensions: IExtensionIdentifier[], readonly source?: string }>;\n\n\tgetDisabledExtensions(): IExtensionIdentifier[];\n\tenableExtension(extension: IExtensionIdentifier, source?: string): Promise<boolean>;\n\tdisableExtension(extension: IExtensionIdentifier, source?: string): Promise<boolean>;\n\n}\n\nexport type IConfigBasedExtensionTip = {\n\treadonly extensionId: string,\n\treadonly extensionName: string,\n\treadonly isExtensionPack: boolean,\n\treadonly configName: string,\n\treadonly important: boolean,\n};\n\nexport type IExecutableBasedExtensionTip = {\n\treadonly extensionId: string,\n\treadonly extensionName: string,\n\treadonly isExtensionPack: boolean,\n\treadonly exeName: string,\n\treadonly exeFriendlyName: string,\n\treadonly windowsPath?: string,\n};\n\nexport type IWorkspaceTips = { readonly remoteSet: string[]; readonly recommendations: string[]; };\n\nexport const IExtensionTipsService = createDecorator<IExtensionTipsService>('IExtensionTipsService');\nexport interface IExtensionTipsService {\n\treadonly _serviceBrand: undefined;\n\n\tgetConfigBasedTips(folder: URI): Promise<IConfigBasedExtensionTip[]>;\n\tgetImportantExecutableBasedTips(): Promise<IExecutableBasedExtensionTip[]>;\n\tgetOtherExecutableBasedTips(): Promise<IExecutableBasedExtensionTip[]>;\n\tgetAllWorkspacesTips(): Promise<IWorkspaceTips[]>;\n}\n\n\nexport const DefaultIconPath = FileAccess.asBrowserUri('./media/defaultIcon.png', require).toString(true);\nexport const ExtensionsLabel = localize('extensions', \"Extensions\");\nexport const ExtensionsLocalizedLabel = { value: ExtensionsLabel, original: 'Extensions' };\nexport const ExtensionsChannelId = 'extensions';\nexport const PreferencesLabel = localize('preferences', \"Preferences\");\nexport const PreferencesLocalizedLabel = { value: PreferencesLabel, original: 'Preferences' };\n\n\nexport interface CLIOutput {\n\tlog(s: string): void;\n\terror(s: string): void;\n}\n\nexport const IExtensionManagementCLIService = createDecorator<IExtensionManagementCLIService>('IExtensionManagementCLIService');\nexport interface IExtensionManagementCLIService {\n\treadonly _serviceBrand: undefined;\n\n\tlistExtensions(showVersions: boolean, category?: string, output?: CLIOutput): Promise<void>;\n\tinstallExtensions(extensions: (string | URI)[], builtinExtensionIds: string[], installOptions: InstallOptions, force: boolean, output?: CLIOutput): Promise<void>;\n\tuninstallExtensions(extensions: (string | URI)[], force: boolean, output?: CLIOutput): Promise<void>;\n\tlocateExtension(extensions: string[], output?: CLIOutput): Promise<void>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IExtensionManagementService } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionManagementService } from 'vs/platform/extensionManagement/node/extensionManagementService';\n\nexport class ExtensionsCleaner extends Disposable {\n\n\tconstructor(\n\t\t@IExtensionManagementService extensionManagementService: ExtensionManagementService,\n\t) {\n\t\tsuper();\n\t\textensionManagementService.removeDeprecatedExtensions();\n\t\textensionManagementService.migrateUnsupportedExtensions();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { cloneAndChange } from 'vs/base/common/objects';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { DefaultURITransformer, IURITransformer, transformAndReviveIncomingURIs } from 'vs/base/common/uriIpc';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { DidUninstallExtensionEvent, IExtensionIdentifier, IExtensionManagementService, IExtensionTipsService, IGalleryExtension, IGalleryMetadata, ILocalExtension, InstallExtensionEvent, InstallExtensionResult, InstallOptions, InstallVSIXOptions, IExtensionsControlManifest, isTargetPlatformCompatible, TargetPlatform, UninstallOptions } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionType, IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\nfunction transformIncomingURI(uri: UriComponents, transformer: IURITransformer | null): URI {\n\treturn URI.revive(transformer ? transformer.transformIncoming(uri) : uri);\n}\n\nfunction transformOutgoingURI(uri: URI, transformer: IURITransformer | null): URI {\n\treturn transformer ? transformer.transformOutgoingURI(uri) : uri;\n}\n\nfunction transformIncomingExtension(extension: ILocalExtension, transformer: IURITransformer | null): ILocalExtension {\n\ttransformer = transformer ? transformer : DefaultURITransformer;\n\tconst manifest = extension.manifest;\n\tconst transformed = transformAndReviveIncomingURIs({ ...extension, ...{ manifest: undefined } }, transformer);\n\treturn { ...transformed, ...{ manifest } };\n}\n\nfunction transformOutgoingExtension(extension: ILocalExtension, transformer: IURITransformer | null): ILocalExtension {\n\treturn transformer ? cloneAndChange(extension, value => value instanceof URI ? transformer.transformOutgoingURI(value) : undefined) : extension;\n}\n\nexport class ExtensionManagementChannel implements IServerChannel {\n\n\tonInstallExtension: Event<InstallExtensionEvent>;\n\tonDidInstallExtensions: Event<readonly InstallExtensionResult[]>;\n\tonUninstallExtension: Event<IExtensionIdentifier>;\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent>;\n\n\tconstructor(private service: IExtensionManagementService, private getUriTransformer: (requestContext: any) => IURITransformer | null) {\n\t\tthis.onInstallExtension = Event.buffer(service.onInstallExtension, true);\n\t\tthis.onDidInstallExtensions = Event.buffer(service.onDidInstallExtensions, true);\n\t\tthis.onUninstallExtension = Event.buffer(service.onUninstallExtension, true);\n\t\tthis.onDidUninstallExtension = Event.buffer(service.onDidUninstallExtension, true);\n\t}\n\n\tlisten(context: any, event: string): Event<any> {\n\t\tconst uriTransformer = this.getUriTransformer(context);\n\t\tswitch (event) {\n\t\t\tcase 'onInstallExtension': return this.onInstallExtension;\n\t\t\tcase 'onDidInstallExtensions': return Event.map(this.onDidInstallExtensions, results => results.map(i => ({ ...i, local: i.local ? transformOutgoingExtension(i.local, uriTransformer) : i.local })));\n\t\t\tcase 'onUninstallExtension': return this.onUninstallExtension;\n\t\t\tcase 'onDidUninstallExtension': return this.onDidUninstallExtension;\n\t\t}\n\n\t\tthrow new Error('Invalid listen');\n\t}\n\n\tcall(context: any, command: string, args?: any): Promise<any> {\n\t\tconst uriTransformer: IURITransformer | null = this.getUriTransformer(context);\n\t\tswitch (command) {\n\t\t\tcase 'zip': return this.service.zip(transformIncomingExtension(args[0], uriTransformer)).then(uri => transformOutgoingURI(uri, uriTransformer));\n\t\t\tcase 'unzip': return this.service.unzip(transformIncomingURI(args[0], uriTransformer));\n\t\t\tcase 'install': return this.service.install(transformIncomingURI(args[0], uriTransformer), args[1]);\n\t\t\tcase 'getManifest': return this.service.getManifest(transformIncomingURI(args[0], uriTransformer));\n\t\t\tcase 'getTargetPlatform': return this.service.getTargetPlatform();\n\t\t\tcase 'canInstall': return this.service.canInstall(args[0]);\n\t\t\tcase 'installFromGallery': return this.service.installFromGallery(args[0], args[1]);\n\t\t\tcase 'uninstall': return this.service.uninstall(transformIncomingExtension(args[0], uriTransformer), args[1]);\n\t\t\tcase 'reinstallFromGallery': return this.service.reinstallFromGallery(transformIncomingExtension(args[0], uriTransformer));\n\t\t\tcase 'getInstalled': return this.service.getInstalled(args[0]).then(extensions => extensions.map(e => transformOutgoingExtension(e, uriTransformer)));\n\t\t\tcase 'updateMetadata': return this.service.updateMetadata(transformIncomingExtension(args[0], uriTransformer), args[1]).then(e => transformOutgoingExtension(e, uriTransformer));\n\t\t\tcase 'updateExtensionScope': return this.service.updateExtensionScope(transformIncomingExtension(args[0], uriTransformer), args[1]).then(e => transformOutgoingExtension(e, uriTransformer));\n\t\t\tcase 'getExtensionsControlManifest': return this.service.getExtensionsControlManifest();\n\t\t}\n\n\t\tthrow new Error('Invalid call');\n\t}\n}\n\nexport class ExtensionManagementChannelClient extends Disposable implements IExtensionManagementService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onInstallExtension = this._register(new Emitter<InstallExtensionEvent>());\n\treadonly onInstallExtension = this._onInstallExtension.event;\n\n\tprivate readonly _onDidInstallExtensions = this._register(new Emitter<readonly InstallExtensionResult[]>());\n\treadonly onDidInstallExtensions = this._onDidInstallExtensions.event;\n\n\tprivate readonly _onUninstallExtension = this._register(new Emitter<IExtensionIdentifier>());\n\treadonly onUninstallExtension = this._onUninstallExtension.event;\n\n\tprivate readonly _onDidUninstallExtension = this._register(new Emitter<DidUninstallExtensionEvent>());\n\treadonly onDidUninstallExtension = this._onDidUninstallExtension.event;\n\n\tconstructor(\n\t\tprivate readonly channel: IChannel,\n\t) {\n\t\tsuper();\n\t\tthis._register(this.channel.listen<InstallExtensionEvent>('onInstallExtension')(e => this._onInstallExtension.fire({ identifier: e.identifier, source: this.isUriComponents(e.source) ? URI.revive(e.source) : e.source })));\n\t\tthis._register(this.channel.listen<readonly InstallExtensionResult[]>('onDidInstallExtensions')(results => this._onDidInstallExtensions.fire(results.map(e => ({ ...e, local: e.local ? transformIncomingExtension(e.local, null) : e.local, source: this.isUriComponents(e.source) ? URI.revive(e.source) : e.source })))));\n\t\tthis._register(this.channel.listen<IExtensionIdentifier>('onUninstallExtension')(e => this._onUninstallExtension.fire(e)));\n\t\tthis._register(this.channel.listen<DidUninstallExtensionEvent>('onDidUninstallExtension')(e => this._onDidUninstallExtension.fire(e)));\n\t}\n\n\tprivate isUriComponents(thing: unknown): thing is UriComponents {\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<any>thing).path === 'string' &&\n\t\t\ttypeof (<any>thing).scheme === 'string';\n\t}\n\n\tprivate _targetPlatformPromise: Promise<TargetPlatform> | undefined;\n\tgetTargetPlatform(): Promise<TargetPlatform> {\n\t\tif (!this._targetPlatformPromise) {\n\t\t\tthis._targetPlatformPromise = this.channel.call<TargetPlatform>('getTargetPlatform');\n\t\t}\n\t\treturn this._targetPlatformPromise;\n\t}\n\n\tasync canInstall(extension: IGalleryExtension): Promise<boolean> {\n\t\tconst currentTargetPlatform = await this.getTargetPlatform();\n\t\treturn extension.allTargetPlatforms.some(targetPlatform => isTargetPlatformCompatible(targetPlatform, extension.allTargetPlatforms, currentTargetPlatform));\n\t}\n\n\tzip(extension: ILocalExtension): Promise<URI> {\n\t\treturn Promise.resolve(this.channel.call('zip', [extension]).then(result => URI.revive(<UriComponents>result)));\n\t}\n\n\tunzip(zipLocation: URI): Promise<IExtensionIdentifier> {\n\t\treturn Promise.resolve(this.channel.call('unzip', [zipLocation]));\n\t}\n\n\tinstall(vsix: URI, options?: InstallVSIXOptions): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('install', [vsix, options])).then(local => transformIncomingExtension(local, null));\n\t}\n\n\tgetManifest(vsix: URI): Promise<IExtensionManifest> {\n\t\treturn Promise.resolve(this.channel.call<IExtensionManifest>('getManifest', [vsix]));\n\t}\n\n\tinstallFromGallery(extension: IGalleryExtension, installOptions?: InstallOptions): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('installFromGallery', [extension, installOptions])).then(local => transformIncomingExtension(local, null));\n\t}\n\n\tuninstall(extension: ILocalExtension, options?: UninstallOptions): Promise<void> {\n\t\treturn Promise.resolve(this.channel.call('uninstall', [extension!, options]));\n\t}\n\n\treinstallFromGallery(extension: ILocalExtension): Promise<void> {\n\t\treturn Promise.resolve(this.channel.call('reinstallFromGallery', [extension]));\n\t}\n\n\tgetInstalled(type: ExtensionType | null = null): Promise<ILocalExtension[]> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension[]>('getInstalled', [type]))\n\t\t\t.then(extensions => extensions.map(extension => transformIncomingExtension(extension, null)));\n\t}\n\n\tupdateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('updateMetadata', [local, metadata]))\n\t\t\t.then(extension => transformIncomingExtension(extension, null));\n\t}\n\n\tupdateExtensionScope(local: ILocalExtension, isMachineScoped: boolean): Promise<ILocalExtension> {\n\t\treturn Promise.resolve(this.channel.call<ILocalExtension>('updateExtensionScope', [local, isMachineScoped]))\n\t\t\t.then(extension => transformIncomingExtension(extension, null));\n\t}\n\n\tgetExtensionsControlManifest(): Promise<IExtensionsControlManifest> {\n\t\treturn Promise.resolve(this.channel.call('getExtensionsControlManifest'));\n\t}\n\n\tregisterParticipant() { throw new Error('Not Supported'); }\n}\n\nexport class ExtensionTipsChannel implements IServerChannel {\n\n\tconstructor(private service: IExtensionTipsService) {\n\t}\n\n\tlisten(context: any, event: string): Event<any> {\n\t\tthrow new Error('Invalid listen');\n\t}\n\n\tcall(context: any, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'getConfigBasedTips': return this.service.getConfigBasedTips(URI.revive(args[0]));\n\t\t\tcase 'getImportantExecutableBasedTips': return this.service.getImportantExecutableBasedTips();\n\t\t\tcase 'getOtherExecutableBasedTips': return this.service.getOtherExecutableBasedTips();\n\t\t\tcase 'getAllWorkspacesTips': return this.service.getAllWorkspacesTips();\n\t\t}\n\n\t\tthrow new Error('Invalid call');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const enum RecommendationSource {\n\tFILE = 1,\n\tWORKSPACE = 2,\n\tEXE = 3\n}\n\nexport function RecommendationSourceToString(source: RecommendationSource) {\n\tswitch (source) {\n\t\tcase RecommendationSource.FILE: return 'file';\n\t\tcase RecommendationSource.WORKSPACE: return 'workspace';\n\t\tcase RecommendationSource.EXE: return 'exe';\n\t}\n}\n\nexport const enum RecommendationsNotificationResult {\n\tIgnored = 'ignored',\n\tCancelled = 'cancelled',\n\tTooMany = 'toomany',\n\tIncompatibleWindow = 'incompatibleWindow',\n\tAccepted = 'reacted',\n}\n\nexport const IExtensionRecommendationNotificationService = createDecorator<IExtensionRecommendationNotificationService>('IExtensionRecommendationNotificationService');\n\nexport interface IExtensionRecommendationNotificationService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly ignoredRecommendations: string[];\n\thasToIgnoreRecommendationNotifications(): boolean;\n\n\tpromptImportantExtensionsInstallNotification(extensionIds: string[], message: string, searchValue: string, source: RecommendationSource): Promise<RecommendationsNotificationResult>;\n\tpromptWorkspaceRecommendations(recommendations: string[]): Promise<void>;\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer, VSBufferReadable, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Event } from 'vs/base/common/event';\nimport { IExpression } from 'vs/base/common/glob';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { sep } from 'vs/base/common/path';\nimport { ReadableStreamEvents } from 'vs/base/common/stream';\nimport { startsWithIgnoreCase } from 'vs/base/common/strings';\nimport { isNumber } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\n//#region file service & providers\n\nexport const IFileService = createDecorator<IFileService>('fileService');\n\nexport interface IFileService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * An event that is fired when a file system provider is added or removed\n\t */\n\treadonly onDidChangeFileSystemProviderRegistrations: Event<IFileSystemProviderRegistrationEvent>;\n\n\t/**\n\t * An event that is fired when a registered file system provider changes it's capabilities.\n\t */\n\treadonly onDidChangeFileSystemProviderCapabilities: Event<IFileSystemProviderCapabilitiesChangeEvent>;\n\n\t/**\n\t * An event that is fired when a file system provider is about to be activated. Listeners\n\t * can join this event with a long running promise to help in the activation process.\n\t */\n\treadonly onWillActivateFileSystemProvider: Event<IFileSystemProviderActivationEvent>;\n\n\t/**\n\t * Registers a file system provider for a certain scheme.\n\t */\n\tregisterProvider(scheme: string, provider: IFileSystemProvider): IDisposable;\n\n\t/**\n\t * Returns a file system provider for a certain scheme.\n\t */\n\tgetProvider(scheme: string): IFileSystemProvider | undefined;\n\n\t/**\n\t * Tries to activate a provider with the given scheme.\n\t */\n\tactivateProvider(scheme: string): Promise<void>;\n\n\t/**\n\t * Checks if this file service can handle the given resource by\n\t * first activating any extension that wants to be activated\n\t * on the provided resource scheme to include extensions that\n\t * contribute file system providers for the given resource.\n\t */\n\tcanHandleResource(resource: URI): Promise<boolean>;\n\n\t/**\n\t * Checks if the file service has a registered provider for the\n\t * provided resource.\n\t *\n\t * Note: this does NOT account for contributed providers from\n\t * extensions that have not been activated yet. To include those,\n\t * consider to call `await fileService.canHandleResource(resource)`.\n\t */\n\thasProvider(resource: URI): boolean;\n\n\t/**\n\t * Checks if the provider for the provided resource has the provided file system capability.\n\t */\n\thasCapability(resource: URI, capability: FileSystemProviderCapabilities): boolean;\n\n\t/**\n\t * List the schemes and capabilies for registered file system providers\n\t */\n\tlistCapabilities(): Iterable<{ scheme: string, capabilities: FileSystemProviderCapabilities }>\n\n\t/**\n\t * Allows to listen for file changes. The event will fire for every file within the opened workspace\n\t * (if any) as well as all files that have been watched explicitly using the #watch() API.\n\t */\n\treadonly onDidFilesChange: Event<FileChangesEvent>;\n\n\t/**\n\t *\n\t * Raw access to all file events emitted from file system providers.\n\t *\n\t * @deprecated use this method only if you know what you are doing. use the other watch related events\n\t * and APIs for more efficient file watching.\n\t */\n\treadonly onDidChangeFilesRaw: Event<IRawFileChangesEvent>;\n\n\t/**\n\t * An event that is fired upon successful completion of a certain file operation.\n\t */\n\treadonly onDidRunOperation: Event<FileOperationEvent>;\n\n\t/**\n\t * Resolve the properties of a file/folder identified by the resource.\n\t *\n\t * If the optional parameter \"resolveTo\" is specified in options, the stat service is asked\n\t * to provide a stat object that should contain the full graph of folders up to all of the\n\t * target resources.\n\t *\n\t * If the optional parameter \"resolveSingleChildDescendants\" is specified in options,\n\t * the stat service is asked to automatically resolve child folders that only\n\t * contain a single element.\n\t *\n\t * If the optional parameter \"resolveMetadata\" is specified in options,\n\t * the stat will contain metadata information such as size, mtime and etag.\n\t */\n\tresolve(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tresolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\n\t/**\n\t * Same as resolve() but supports resolving multiple resources in parallel.\n\t * If one of the resolve targets fails to resolve returns a fake IFileStat instead of making the whole call fail.\n\t */\n\tresolveAll(toResolve: { resource: URI, options: IResolveMetadataFileOptions }[]): Promise<IResolveFileResult[]>;\n\tresolveAll(toResolve: { resource: URI, options?: IResolveFileOptions }[]): Promise<IResolveFileResult[]>;\n\n\t/**\n\t * Finds out if a file/folder identified by the resource exists.\n\t */\n\texists(resource: URI): Promise<boolean>;\n\n\t/**\n\t * Read the contents of the provided resource unbuffered.\n\t */\n\treadFile(resource: URI, options?: IReadFileOptions): Promise<IFileContent>;\n\n\t/**\n\t * Read the contents of the provided resource buffered as stream.\n\t */\n\treadFileStream(resource: URI, options?: IReadFileStreamOptions): Promise<IFileStreamContent>;\n\n\t/**\n\t * Updates the content replacing its previous value.\n\t */\n\twriteFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: IWriteFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Moves the file/folder to a new path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tmove(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Find out if a move operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanMove(source: URI, target: URI, overwrite?: boolean): Promise<Error | true>;\n\n\t/**\n\t * Copies the file/folder to a path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tcopy(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Find out if a copy operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanCopy(source: URI, target: URI, overwrite?: boolean): Promise<Error | true>;\n\n\t/**\n\t * Find out if a file create operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanCreateFile(resource: URI, options?: ICreateFileOptions): Promise<Error | true>;\n\n\t/**\n\t * Creates a new file with the given path and optional contents. The returned promise\n\t * will have the stat model object as a result.\n\t *\n\t * The optional parameter content can be used as value to fill into the new file.\n\t */\n\tcreateFile(resource: URI, bufferOrReadableOrStream?: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: ICreateFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Creates a new folder with the given path. The returned promise\n\t * will have the stat model object as a result.\n\t */\n\tcreateFolder(resource: URI): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Deletes the provided file. The optional useTrash parameter allows to\n\t * move the file to trash. The optional recursive parameter allows to delete\n\t * non-empty folders recursively.\n\t */\n\tdel(resource: URI, options?: Partial<FileDeleteOptions>): Promise<void>;\n\n\t/**\n\t * Find out if a delete operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanDelete(resource: URI, options?: Partial<FileDeleteOptions>): Promise<Error | true>;\n\n\t/**\n\t * Allows to start a watcher that reports file/folder change events on the provided resource.\n\t *\n\t * Note: watching a folder does not report events recursively for child folders yet.\n\t */\n\twatch(resource: URI): IDisposable;\n\n\t/**\n\t * Frees up any resources occupied by this service.\n\t */\n\tdispose(): void;\n}\n\nexport interface FileOverwriteOptions {\n\n\t/**\n\t * Set to `true` to overwrite a file if it exists. Will\n\t * throw an error otherwise if the file does exist.\n\t */\n\treadonly overwrite: boolean;\n}\n\nexport interface FileUnlockOptions {\n\n\t/**\n\t * Set to `true` to try to remove any write locks the file might\n\t * have. A file that is write locked will throw an error for any\n\t * attempt to write to unless `unlock: true` is provided.\n\t */\n\treadonly unlock: boolean;\n}\n\nexport interface FileReadStreamOptions {\n\n\t/**\n\t * Is an integer specifying where to begin reading from in the file. If position is undefined,\n\t * data will be read from the current file position.\n\t */\n\treadonly position?: number;\n\n\t/**\n\t * Is an integer specifying how many bytes to read from the file. By default, all bytes\n\t * will be read.\n\t */\n\treadonly length?: number;\n\n\t/**\n\t * If provided, the size of the file will be checked against the limits.\n\t */\n\tlimits?: {\n\t\treadonly size?: number;\n\t\treadonly memory?: number;\n\t};\n}\n\nexport interface FileWriteOptions extends FileOverwriteOptions, FileUnlockOptions {\n\n\t/**\n\t * Set to `true` to create a file when it does not exist. Will\n\t * throw an error otherwise if the file does not exist.\n\t */\n\treadonly create: boolean;\n}\n\nexport type FileOpenOptions = FileOpenForReadOptions | FileOpenForWriteOptions;\n\nexport function isFileOpenForWriteOptions(options: FileOpenOptions): options is FileOpenForWriteOptions {\n\treturn options.create === true;\n}\n\nexport interface FileOpenForReadOptions {\n\n\t/**\n\t * A hint that the file should be opened for reading only.\n\t */\n\treadonly create: false;\n}\n\nexport interface FileOpenForWriteOptions extends FileUnlockOptions {\n\n\t/**\n\t * A hint that the file should be opened for reading and writing.\n\t */\n\treadonly create: true;\n}\n\nexport interface FileDeleteOptions {\n\n\t/**\n\t * Set to `true` to recursively delete any children of the file. This\n\t * only applies to folders and can lead to an error unless provided\n\t * if the folder is not empty.\n\t */\n\treadonly recursive: boolean;\n\n\t/**\n\t * Set to `true` to attempt to move the file to trash\n\t * instead of deleting it permanently from disk. This\n\t * option maybe not be supported on all providers.\n\t */\n\treadonly useTrash: boolean;\n}\n\nexport enum FileType {\n\n\t/**\n\t * File is unknown (neither file, directory nor symbolic link).\n\t */\n\tUnknown = 0,\n\n\t/**\n\t * File is a normal file.\n\t */\n\tFile = 1,\n\n\t/**\n\t * File is a directory.\n\t */\n\tDirectory = 2,\n\n\t/**\n\t * File is a symbolic link.\n\t *\n\t * Note: even when the file is a symbolic link, you can test for\n\t * `FileType.File` and `FileType.Directory` to know the type of\n\t * the target the link points to.\n\t */\n\tSymbolicLink = 64\n}\n\nexport enum FilePermission {\n\n\t/**\n\t * File is readonly.\n\t */\n\tReadonly = 1\n}\n\nexport interface IStat {\n\n\t/**\n\t * The file type.\n\t */\n\treadonly type: FileType;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t */\n\treadonly mtime: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t */\n\treadonly ctime: number;\n\n\t/**\n\t * The size of the file in bytes.\n\t */\n\treadonly size: number;\n\n\t/**\n\t * The file permissions.\n\t */\n\treadonly permissions?: FilePermission;\n}\n\nexport interface IWatchOptions {\n\n\t/**\n\t * Set to `true` to watch for changes recursively in a folder\n\t * and all of its children.\n\t */\n\treadonly recursive: boolean;\n\n\t/**\n\t * A set of paths to exclude from watching.\n\t */\n\texcludes: string[];\n}\n\nexport const enum FileSystemProviderCapabilities {\n\n\t/**\n\t * Provider supports unbuffered read/write.\n\t */\n\tFileReadWrite = 1 << 1,\n\n\t/**\n\t * Provider supports open/read/write/close low level file operations.\n\t */\n\tFileOpenReadWriteClose = 1 << 2,\n\n\t/**\n\t * Provider supports stream based reading.\n\t */\n\tFileReadStream = 1 << 4,\n\n\t/**\n\t * Provider supports copy operation.\n\t */\n\tFileFolderCopy = 1 << 3,\n\n\t/**\n\t * Provider is path case sensitive.\n\t */\n\tPathCaseSensitive = 1 << 10,\n\n\t/**\n\t * All files of the provider are readonly.\n\t */\n\tReadonly = 1 << 11,\n\n\t/**\n\t * Provider supports to delete via trash.\n\t */\n\tTrash = 1 << 12,\n\n\t/**\n\t * Provider support to unlock files for writing.\n\t */\n\tFileWriteUnlock = 1 << 13\n}\n\nexport interface IFileSystemProvider {\n\n\treadonly capabilities: FileSystemProviderCapabilities;\n\treadonly onDidChangeCapabilities: Event<void>;\n\n\treadonly onDidErrorOccur?: Event<string>;\n\n\treadonly onDidChangeFile: Event<readonly IFileChange[]>;\n\twatch(resource: URI, opts: IWatchOptions): IDisposable;\n\n\tstat(resource: URI): Promise<IStat>;\n\tmkdir(resource: URI): Promise<void>;\n\treaddir(resource: URI): Promise<[string, FileType][]>;\n\tdelete(resource: URI, opts: FileDeleteOptions): Promise<void>;\n\n\trename(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\tcopy?(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\n\treadFile?(resource: URI): Promise<Uint8Array>;\n\twriteFile?(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n\n\treadFileStream?(resource: URI, opts: FileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array>;\n\n\topen?(resource: URI, opts: FileOpenOptions): Promise<number>;\n\tclose?(fd: number): Promise<void>;\n\tread?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport interface IFileSystemProviderWithFileReadWriteCapability extends IFileSystemProvider {\n\treadFile(resource: URI): Promise<Uint8Array>;\n\twriteFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n}\n\nexport function hasReadWriteCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadWriteCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadWrite);\n}\n\nexport interface IFileSystemProviderWithFileFolderCopyCapability extends IFileSystemProvider {\n\tcopy(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n}\n\nexport function hasFileFolderCopyCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileFolderCopyCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileFolderCopy);\n}\n\nexport interface IFileSystemProviderWithOpenReadWriteCloseCapability extends IFileSystemProvider {\n\topen(resource: URI, opts: FileOpenOptions): Promise<number>;\n\tclose(fd: number): Promise<void>;\n\tread(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport function hasOpenReadWriteCloseCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithOpenReadWriteCloseCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileOpenReadWriteClose);\n}\n\nexport interface IFileSystemProviderWithFileReadStreamCapability extends IFileSystemProvider {\n\treadFileStream(resource: URI, opts: FileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array>;\n}\n\nexport function hasFileReadStreamCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadStreamCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadStream);\n}\n\nexport enum FileSystemProviderErrorCode {\n\tFileExists = 'EntryExists',\n\tFileNotFound = 'EntryNotFound',\n\tFileNotADirectory = 'EntryNotADirectory',\n\tFileIsADirectory = 'EntryIsADirectory',\n\tFileExceedsMemoryLimit = 'EntryExceedsMemoryLimit',\n\tFileTooLarge = 'EntryTooLarge',\n\tFileWriteLocked = 'EntryWriteLocked',\n\tNoPermissions = 'NoPermissions',\n\tUnavailable = 'Unavailable',\n\tUnknown = 'Unknown'\n}\n\nexport class FileSystemProviderError extends Error {\n\n\tconstructor(message: string, readonly code: FileSystemProviderErrorCode) {\n\t\tsuper(message);\n\t}\n}\n\nexport function createFileSystemProviderError(error: Error | string, code: FileSystemProviderErrorCode): FileSystemProviderError {\n\tconst providerError = new FileSystemProviderError(error.toString(), code);\n\tmarkAsFileSystemProviderError(providerError, code);\n\n\treturn providerError;\n}\n\nexport function ensureFileSystemProviderError(error?: Error): Error {\n\tif (!error) {\n\t\treturn createFileSystemProviderError(localize('unknownError', \"Unknown Error\"), FileSystemProviderErrorCode.Unknown); // https://github.com/microsoft/vscode/issues/72798\n\t}\n\n\treturn error;\n}\n\nexport function markAsFileSystemProviderError(error: Error, code: FileSystemProviderErrorCode): Error {\n\terror.name = code ? `${code} (FileSystemError)` : `FileSystemError`;\n\n\treturn error;\n}\n\nexport function toFileSystemProviderErrorCode(error: Error | undefined | null): FileSystemProviderErrorCode {\n\n\t// Guard against abuse\n\tif (!error) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\t// FileSystemProviderError comes with the code\n\tif (error instanceof FileSystemProviderError) {\n\t\treturn error.code;\n\t}\n\n\t// Any other error, check for name match by assuming that the error\n\t// went through the markAsFileSystemProviderError() method\n\tconst match = /^(.+) \\(FileSystemError\\)$/.exec(error.name);\n\tif (!match) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\tswitch (match[1]) {\n\t\tcase FileSystemProviderErrorCode.FileExists: return FileSystemProviderErrorCode.FileExists;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory: return FileSystemProviderErrorCode.FileIsADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotADirectory: return FileSystemProviderErrorCode.FileNotADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotFound: return FileSystemProviderErrorCode.FileNotFound;\n\t\tcase FileSystemProviderErrorCode.FileExceedsMemoryLimit: return FileSystemProviderErrorCode.FileExceedsMemoryLimit;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge: return FileSystemProviderErrorCode.FileTooLarge;\n\t\tcase FileSystemProviderErrorCode.FileWriteLocked: return FileSystemProviderErrorCode.FileWriteLocked;\n\t\tcase FileSystemProviderErrorCode.NoPermissions: return FileSystemProviderErrorCode.NoPermissions;\n\t\tcase FileSystemProviderErrorCode.Unavailable: return FileSystemProviderErrorCode.Unavailable;\n\t}\n\n\treturn FileSystemProviderErrorCode.Unknown;\n}\n\nexport function toFileOperationResult(error: Error): FileOperationResult {\n\n\t// FileSystemProviderError comes with the result already\n\tif (error instanceof FileOperationError) {\n\t\treturn error.fileOperationResult;\n\t}\n\n\t// Otherwise try to find from code\n\tswitch (toFileSystemProviderErrorCode(error)) {\n\t\tcase FileSystemProviderErrorCode.FileNotFound:\n\t\t\treturn FileOperationResult.FILE_NOT_FOUND;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory:\n\t\t\treturn FileOperationResult.FILE_IS_DIRECTORY;\n\t\tcase FileSystemProviderErrorCode.FileNotADirectory:\n\t\t\treturn FileOperationResult.FILE_NOT_DIRECTORY;\n\t\tcase FileSystemProviderErrorCode.FileWriteLocked:\n\t\t\treturn FileOperationResult.FILE_WRITE_LOCKED;\n\t\tcase FileSystemProviderErrorCode.NoPermissions:\n\t\t\treturn FileOperationResult.FILE_PERMISSION_DENIED;\n\t\tcase FileSystemProviderErrorCode.FileExists:\n\t\t\treturn FileOperationResult.FILE_MOVE_CONFLICT;\n\t\tcase FileSystemProviderErrorCode.FileExceedsMemoryLimit:\n\t\t\treturn FileOperationResult.FILE_EXCEEDS_MEMORY_LIMIT;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge:\n\t\t\treturn FileOperationResult.FILE_TOO_LARGE;\n\t\tdefault:\n\t\t\treturn FileOperationResult.FILE_OTHER_ERROR;\n\t}\n}\n\nexport interface IFileSystemProviderRegistrationEvent {\n\treadonly added: boolean;\n\treadonly scheme: string;\n\treadonly provider?: IFileSystemProvider;\n}\n\nexport interface IFileSystemProviderCapabilitiesChangeEvent {\n\treadonly provider: IFileSystemProvider;\n\treadonly scheme: string;\n}\n\nexport interface IFileSystemProviderActivationEvent {\n\treadonly scheme: string;\n\tjoin(promise: Promise<void>): void;\n}\n\nexport const enum FileOperation {\n\tCREATE,\n\tDELETE,\n\tMOVE,\n\tCOPY\n}\n\nexport class FileOperationEvent {\n\n\tconstructor(resource: URI, operation: FileOperation.DELETE);\n\tconstructor(resource: URI, operation: FileOperation.CREATE | FileOperation.MOVE | FileOperation.COPY, target: IFileStatWithMetadata);\n\tconstructor(readonly resource: URI, readonly operation: FileOperation, readonly target?: IFileStatWithMetadata) { }\n\n\tisOperation(operation: FileOperation.DELETE): boolean;\n\tisOperation(operation: FileOperation.MOVE | FileOperation.COPY | FileOperation.CREATE): this is { readonly target: IFileStatWithMetadata };\n\tisOperation(operation: FileOperation): boolean {\n\t\treturn this.operation === operation;\n\t}\n}\n\n/**\n * Possible changes that can occur to a file.\n */\nexport const enum FileChangeType {\n\tUPDATED,\n\tADDED,\n\tDELETED\n}\n\n/**\n * Identifies a single change in a file.\n */\nexport interface IFileChange {\n\n\t/**\n\t * The type of change that occurred to the file.\n\t */\n\treadonly type: FileChangeType;\n\n\t/**\n\t * The unified resource identifier of the file that changed.\n\t */\n\treadonly resource: URI;\n}\n\nexport interface IRawFileChangesEvent {\n\n\t/**\n\t * @deprecated use `FileChangesEvent` instead unless you know what you are doing\n\t */\n\treadonly changes: readonly IFileChange[];\n}\n\nexport class FileChangesEvent {\n\n\tprivate readonly added: TernarySearchTree<URI, IFileChange> | undefined = undefined;\n\tprivate readonly updated: TernarySearchTree<URI, IFileChange> | undefined = undefined;\n\tprivate readonly deleted: TernarySearchTree<URI, IFileChange> | undefined = undefined;\n\n\tconstructor(changes: readonly IFileChange[], ignorePathCasing: boolean) {\n\n\t\tconst entriesByType = new Map<FileChangeType, [URI, IFileChange][]>();\n\n\t\tfor (const change of changes) {\n\t\t\tconst array = entriesByType.get(change.type);\n\t\t\tif (array) {\n\t\t\t\tarray.push([change.resource, change]);\n\t\t\t} else {\n\t\t\t\tentriesByType.set(change.type, [[change.resource, change]]);\n\t\t\t}\n\t\t}\n\n\t\tfor (const [key, value] of entriesByType) {\n\t\t\tswitch (key) {\n\t\t\t\tcase FileChangeType.ADDED:\n\t\t\t\t\tthis.added = TernarySearchTree.forUris<IFileChange>(() => ignorePathCasing);\n\t\t\t\t\tthis.added.fill(value);\n\t\t\t\t\tbreak;\n\t\t\t\tcase FileChangeType.UPDATED:\n\t\t\t\t\tthis.updated = TernarySearchTree.forUris<IFileChange>(() => ignorePathCasing);\n\t\t\t\t\tthis.updated.fill(value);\n\t\t\t\t\tbreak;\n\t\t\t\tcase FileChangeType.DELETED:\n\t\t\t\t\tthis.deleted = TernarySearchTree.forUris<IFileChange>(() => ignorePathCasing);\n\t\t\t\t\tthis.deleted.fill(value);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Find out if the file change events match the provided resource.\n\t *\n\t * Note: when passing `FileChangeType.DELETED`, we consider a match\n\t * also when the parent of the resource got deleted.\n\t */\n\tcontains(resource: URI, ...types: FileChangeType[]): boolean {\n\t\treturn this.doContains(resource, { includeChildren: false }, ...types);\n\t}\n\n\t/**\n\t * Find out if the file change events either match the provided\n\t * resource, or contain a child of this resource.\n\t */\n\taffects(resource: URI, ...types: FileChangeType[]): boolean {\n\t\treturn this.doContains(resource, { includeChildren: true }, ...types);\n\t}\n\n\tprivate doContains(resource: URI, options: { includeChildren: boolean }, ...types: FileChangeType[]): boolean {\n\t\tif (!resource) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst hasTypesFilter = types.length > 0;\n\n\t\t// Added\n\t\tif (!hasTypesFilter || types.includes(FileChangeType.ADDED)) {\n\t\t\tif (this.added?.get(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (options.includeChildren && this.added?.findSuperstr(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t// Updated\n\t\tif (!hasTypesFilter || types.includes(FileChangeType.UPDATED)) {\n\t\t\tif (this.updated?.get(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (options.includeChildren && this.updated?.findSuperstr(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t// Deleted\n\t\tif (!hasTypesFilter || types.includes(FileChangeType.DELETED)) {\n\t\t\tif (this.deleted?.findSubstr(resource) /* deleted also considers parent folders */) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (options.includeChildren && this.deleted?.findSuperstr(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns if this event contains added files.\n\t */\n\tgotAdded(): boolean {\n\t\treturn !!this.added;\n\t}\n\n\t/**\n\t * Returns if this event contains deleted files.\n\t */\n\tgotDeleted(): boolean {\n\t\treturn !!this.deleted;\n\t}\n\n\t/**\n\t * Returns if this event contains updated files.\n\t */\n\tgotUpdated(): boolean {\n\t\treturn !!this.updated;\n\t}\n\n\t/**\n\t * @deprecated use the `contains` or `affects` method to efficiently find\n\t * out if the event relates to a given resource. these methods ensure:\n\t * - that there is no expensive lookup needed (by using a `TernarySearchTree`)\n\t * - correctly handles `FileChangeType.DELETED` events\n\t */\n\tget rawAdded(): TernarySearchTree<URI, IFileChange> | undefined { return this.added; }\n\n\t/**\n\t * @deprecated use the `contains` or `affects` method to efficiently find\n\t * out if the event relates to a given resource. these methods ensure:\n\t * - that there is no expensive lookup needed (by using a `TernarySearchTree`)\n\t * - correctly handles `FileChangeType.DELETED` events\n\t */\n\tget rawDeleted(): TernarySearchTree<URI, IFileChange> | undefined { return this.deleted; }\n\n}\n\nexport function isParent(path: string, candidate: string, ignoreCase?: boolean): boolean {\n\tif (!path || !candidate || path === candidate) {\n\t\treturn false;\n\t}\n\n\tif (candidate.length > path.length) {\n\t\treturn false;\n\t}\n\n\tif (candidate.charAt(candidate.length - 1) !== sep) {\n\t\tcandidate += sep;\n\t}\n\n\tif (ignoreCase) {\n\t\treturn startsWithIgnoreCase(path, candidate);\n\t}\n\n\treturn path.indexOf(candidate) === 0;\n}\n\ninterface IBaseStat {\n\n\t/**\n\t * The unified resource identifier of this file or folder.\n\t */\n\treadonly resource: URI;\n\n\t/**\n\t * The name which is the last segment\n\t * of the {{path}}.\n\t */\n\treadonly name: string;\n\n\t/**\n\t * The size of the file.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\treadonly size?: number;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\treadonly mtime?: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\treadonly ctime?: number;\n\n\t/**\n\t * A unique identifier thet represents the\n\t * current state of the file or directory.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\treadonly etag?: string;\n\n\t/**\n\t * The file is read-only.\n\t */\n\treadonly readonly?: boolean;\n}\n\nexport interface IBaseStatWithMetadata extends Required<IBaseStat> { }\n\n/**\n * A file resource with meta information.\n */\nexport interface IFileStat extends IBaseStat {\n\n\t/**\n\t * The resource is a file.\n\t */\n\treadonly isFile: boolean;\n\n\t/**\n\t * The resource is a directory.\n\t */\n\treadonly isDirectory: boolean;\n\n\t/**\n\t * The resource is a symbolic link. Note: even when the\n\t * file is a symbolic link, you can test for `FileType.File`\n\t * and `FileType.Directory` to know the type of the target\n\t * the link points to.\n\t */\n\treadonly isSymbolicLink: boolean;\n\n\t/**\n\t * The children of the file stat or undefined if none.\n\t */\n\tchildren?: IFileStat[];\n}\n\nexport interface IFileStatWithMetadata extends IFileStat, IBaseStatWithMetadata {\n\treadonly mtime: number;\n\treadonly ctime: number;\n\treadonly etag: string;\n\treadonly size: number;\n\treadonly readonly: boolean;\n\treadonly children?: IFileStatWithMetadata[];\n}\n\nexport interface IResolveFileResult {\n\treadonly stat?: IFileStat;\n\treadonly success: boolean;\n}\n\nexport interface IResolveFileResultWithMetadata extends IResolveFileResult {\n\treadonly stat?: IFileStatWithMetadata;\n}\n\nexport interface IFileContent extends IBaseStatWithMetadata {\n\n\t/**\n\t * The content of a file as buffer.\n\t */\n\treadonly value: VSBuffer;\n}\n\nexport interface IFileStreamContent extends IBaseStatWithMetadata {\n\n\t/**\n\t * The content of a file as stream.\n\t */\n\treadonly value: VSBufferReadableStream;\n}\n\nexport interface IBaseReadFileOptions extends FileReadStreamOptions {\n\n\t/**\n\t * The optional etag parameter allows to return early from resolving the resource if\n\t * the contents on disk match the etag. This prevents accumulated reading of resources\n\t * that have been read already with the same etag.\n\t * It is the task of the caller to makes sure to handle this error case from the promise.\n\t */\n\treadonly etag?: string;\n}\n\nexport interface IReadFileStreamOptions extends IBaseReadFileOptions { }\n\nexport interface IReadFileOptions extends IBaseReadFileOptions {\n\n\t/**\n\t * The optional `atomic` flag can be used to make sure\n\t * the `readFile` method is not running in parallel with\n\t * any `write` operations in the same process.\n\t *\n\t * Typically you should not need to use this flag but if\n\t * for example you are quickly reading a file right after\n\t * a file event occurred and the file changes a lot, there\n\t * is a chance that a read returns an empty or partial file\n\t * because a pending write has not finished yet.\n\t *\n\t * Note: this does not prevent the file from being written\n\t * to from a different process. If you need such atomic\n\t * operations, you better use a real database as storage.\n\t */\n\treadonly atomic?: boolean;\n}\n\nexport interface IWriteFileOptions {\n\n\t/**\n\t * The last known modification time of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly mtime?: number;\n\n\t/**\n\t * The etag of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly etag?: string;\n\n\t/**\n\t * Whether to attempt to unlock a file before writing.\n\t */\n\treadonly unlock?: boolean;\n}\n\nexport interface IResolveFileOptions {\n\n\t/**\n\t * Automatically continue resolving children of a directory until the provided resources\n\t * are found.\n\t */\n\treadonly resolveTo?: readonly URI[];\n\n\t/**\n\t * Automatically continue resolving children of a directory if the number of children is 1.\n\t */\n\treadonly resolveSingleChildDescendants?: boolean;\n\n\t/**\n\t * Will resolve mtime, ctime, size and etag of files if enabled. This can have a negative impact\n\t * on performance and thus should only be used when these values are required.\n\t */\n\treadonly resolveMetadata?: boolean;\n}\n\nexport interface IResolveMetadataFileOptions extends IResolveFileOptions {\n\treadonly resolveMetadata: true;\n}\n\nexport interface ICreateFileOptions {\n\n\t/**\n\t * Overwrite the file to create if it already exists on disk. Otherwise\n\t * an error will be thrown (FILE_MODIFIED_SINCE).\n\t */\n\treadonly overwrite?: boolean;\n}\n\nexport class FileOperationError extends Error {\n\tconstructor(\n\t\tmessage: string,\n\t\treadonly fileOperationResult: FileOperationResult,\n\t\treadonly options?: IReadFileOptions & IWriteFileOptions & ICreateFileOptions\n\t) {\n\t\tsuper(message);\n\t}\n}\n\nexport class NotModifiedSinceFileOperationError extends FileOperationError {\n\n\tconstructor(\n\t\tmessage: string,\n\t\treadonly stat: IFileStatWithMetadata,\n\t\toptions?: IReadFileOptions\n\t) {\n\t\tsuper(message, FileOperationResult.FILE_NOT_MODIFIED_SINCE, options);\n\t}\n}\n\nexport const enum FileOperationResult {\n\tFILE_IS_DIRECTORY,\n\tFILE_NOT_FOUND,\n\tFILE_NOT_MODIFIED_SINCE,\n\tFILE_MODIFIED_SINCE,\n\tFILE_MOVE_CONFLICT,\n\tFILE_WRITE_LOCKED,\n\tFILE_PERMISSION_DENIED,\n\tFILE_TOO_LARGE,\n\tFILE_INVALID_PATH,\n\tFILE_EXCEEDS_MEMORY_LIMIT,\n\tFILE_NOT_DIRECTORY,\n\tFILE_OTHER_ERROR\n}\n\n//#endregion\n\n//#region Settings\n\nexport const AutoSaveConfiguration = {\n\tOFF: 'off',\n\tAFTER_DELAY: 'afterDelay',\n\tON_FOCUS_CHANGE: 'onFocusChange',\n\tON_WINDOW_CHANGE: 'onWindowChange'\n};\n\nexport const HotExitConfiguration = {\n\tOFF: 'off',\n\tON_EXIT: 'onExit',\n\tON_EXIT_AND_WINDOW_CLOSE: 'onExitAndWindowClose'\n};\n\nexport const FILES_ASSOCIATIONS_CONFIG = 'files.associations';\nexport const FILES_EXCLUDE_CONFIG = 'files.exclude';\n\nexport interface IFilesConfiguration {\n\tfiles: {\n\t\tassociations: { [filepattern: string]: string };\n\t\texclude: IExpression;\n\t\twatcherExclude: { [filepattern: string]: boolean };\n\t\twatcherInclude: string[];\n\t\tencoding: string;\n\t\tautoGuessEncoding: boolean;\n\t\tdefaultLanguage: string;\n\t\ttrimTrailingWhitespace: boolean;\n\t\tautoSave: string;\n\t\tautoSaveDelay: number;\n\t\teol: string;\n\t\tenableTrash: boolean;\n\t\thotExit: string;\n\t\tsaveConflictResolution: 'askUser' | 'overwriteFileOnDisk';\n\t};\n}\n\n//#endregion\n\n//#region Utilities\n\nexport enum FileKind {\n\tFILE,\n\tFOLDER,\n\tROOT_FOLDER\n}\n\n/**\n * A hint to disable etag checking for reading/writing.\n */\nexport const ETAG_DISABLED = '';\n\nexport function etag(stat: { mtime: number, size: number }): string;\nexport function etag(stat: { mtime: number | undefined, size: number | undefined }): string | undefined;\nexport function etag(stat: { mtime: number | undefined, size: number | undefined }): string | undefined {\n\tif (typeof stat.size !== 'number' || typeof stat.mtime !== 'number') {\n\t\treturn undefined;\n\t}\n\n\treturn stat.mtime.toString(29) + stat.size.toString(31);\n}\n\nexport async function whenProviderRegistered(file: URI, fileService: IFileService): Promise<void> {\n\tif (fileService.hasProvider(URI.from({ scheme: file.scheme }))) {\n\t\treturn;\n\t}\n\n\treturn new Promise(resolve => {\n\t\tconst disposable = fileService.onDidChangeFileSystemProviderRegistrations(e => {\n\t\t\tif (e.scheme === file.scheme && e.added) {\n\t\t\t\tdisposable.dispose();\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Native only: limits for memory sizes\n */\nexport const MIN_MAX_MEMORY_SIZE_MB = 2048;\nexport const FALLBACK_MAX_MEMORY_SIZE_MB = 4096;\n\n/**\n * Helper to format a raw byte size into a human readable label.\n */\nexport class ByteSize {\n\n\tstatic readonly KB = 1024;\n\tstatic readonly MB = ByteSize.KB * ByteSize.KB;\n\tstatic readonly GB = ByteSize.MB * ByteSize.KB;\n\tstatic readonly TB = ByteSize.GB * ByteSize.KB;\n\n\tstatic formatSize(size: number): string {\n\t\tif (!isNumber(size)) {\n\t\t\tsize = 0;\n\t\t}\n\n\t\tif (size < ByteSize.KB) {\n\t\t\treturn localize('sizeB', \"{0}B\", size.toFixed(0));\n\t\t}\n\n\t\tif (size < ByteSize.MB) {\n\t\t\treturn localize('sizeKB', \"{0}KB\", (size / ByteSize.KB).toFixed(2));\n\t\t}\n\n\t\tif (size < ByteSize.GB) {\n\t\t\treturn localize('sizeMB', \"{0}MB\", (size / ByteSize.MB).toFixed(2));\n\t\t}\n\n\t\tif (size < ByteSize.TB) {\n\t\t\treturn localize('sizeGB', \"{0}GB\", (size / ByteSize.GB).toFixed(2));\n\t\t}\n\n\t\treturn localize('sizeTB', \"{0}TB\", (size / ByteSize.TB).toFixed(2));\n\t}\n}\n\n// Native only: Arch limits\n\nexport interface IArchLimits {\n\treadonly maxFileSize: number;\n\treadonly maxHeapSize: number;\n}\n\nexport const enum Arch {\n\tIA32,\n\tOTHER\n}\n\nexport function getPlatformLimits(arch: Arch): IArchLimits {\n\treturn {\n\t\tmaxFileSize: arch === Arch.IA32 ? 300 * ByteSize.MB : 16 * ByteSize.GB,  // https://github.com/microsoft/vscode/issues/30180\n\t\tmaxHeapSize: arch === Arch.IA32 ? 700 * ByteSize.MB : 2 * 700 * ByteSize.MB, // https://github.com/v8/v8/blob/5918a23a3d571b9625e5cce246bdd5b46ff7cd8b/src/heap/heap.cc#L149\n\t};\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createHash } from 'crypto';\nimport { listenStream } from 'vs/base/common/stream';\nimport { URI } from 'vs/base/common/uri';\nimport { IChecksumService } from 'vs/platform/checksum/common/checksumService';\nimport { IFileService } from 'vs/platform/files/common/files';\n\nexport class ChecksumService implements IChecksumService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(@IFileService private readonly fileService: IFileService) { }\n\n\tasync checksum(resource: URI): Promise<string> {\n\t\tconst stream = (await this.fileService.readFileStream(resource)).value;\n\t\treturn new Promise<string>((resolve, reject) => {\n\t\t\tconst hash = createHash('md5');\n\n\t\t\tlistenStream(stream, {\n\t\t\t\tonData: data => hash.update(data.buffer),\n\t\t\t\tonError: error => reject(error),\n\t\t\t\tonEnd: () => resolve(hash.digest('base64').replace(/=+$/, ''))\n\t\t\t});\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { IProcessEnvironment } from 'vs/base/common/platform';\nimport { localize } from 'vs/nls';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { ErrorReporter, OPTIONS, parseArgs } from 'vs/platform/environment/node/argv';\nimport { MIN_MAX_MEMORY_SIZE_MB } from 'vs/platform/files/common/files';\n\nfunction parseAndValidate(cmdLineArgs: string[], reportWarnings: boolean): NativeParsedArgs {\n\tconst errorReporter: ErrorReporter = {\n\t\tonUnknownOption: (id) => {\n\t\t\tconsole.warn(localize('unknownOption', \"Warning: '{0}' is not in the list of known options, but still passed to Electron/Chromium.\", id));\n\t\t},\n\t\tonMultipleValues: (id, val) => {\n\t\t\tconsole.warn(localize('multipleValues', \"Option '{0}' is defined more than once. Using value '{1}.'\", id, val));\n\t\t},\n\t\tonDeprecatedOption: (deprecatedOption: string, actualOption: string) => {\n\t\t\tconsole.warn(localize('deprecatedArgument', \"Option '{0}' is deprecated, please use '{1}' instead\", deprecatedOption, actualOption));\n\t\t}\n\t};\n\n\tconst args = parseArgs(cmdLineArgs, OPTIONS, reportWarnings ? errorReporter : undefined);\n\tif (args.goto) {\n\t\targs._.forEach(arg => assert(/^(\\w:)?[^:]+(:\\d*){0,2}$/.test(arg), localize('gotoValidation', \"Arguments in `--goto` mode should be in the format of `FILE(:LINE(:CHARACTER))`.\")));\n\t}\n\n\tif (args['max-memory']) {\n\t\tassert(parseInt(args['max-memory']) >= MIN_MAX_MEMORY_SIZE_MB, `The max-memory argument cannot be specified lower than ${MIN_MAX_MEMORY_SIZE_MB} MB.`);\n\t}\n\n\treturn args;\n}\n\nfunction stripAppPath(argv: string[]): string[] | undefined {\n\tconst index = argv.findIndex(a => !/^-/.test(a));\n\n\tif (index > -1) {\n\t\treturn [...argv.slice(0, index), ...argv.slice(index + 1)];\n\t}\n\treturn undefined;\n}\n\n/**\n * Use this to parse raw code process.argv such as: `Electron . --verbose --wait`\n */\nexport function parseMainProcessArgv(processArgv: string[]): NativeParsedArgs {\n\tlet [, ...args] = processArgv;\n\n\t// If dev, remove the first non-option argument: it's the app location\n\tif (process.env['VSCODE_DEV']) {\n\t\targs = stripAppPath(args) || [];\n\t}\n\n\t// If called from CLI, don't report warnings as they are already reported.\n\tconst reportWarnings = !isLaunchedFromCli(process.env);\n\treturn parseAndValidate(args, reportWarnings);\n}\n\n/**\n * Use this to parse raw code CLI process.argv such as: `Electron cli.js . --verbose --wait`\n */\nexport function parseCLIProcessArgv(processArgv: string[]): NativeParsedArgs {\n\tconst [, , ...args] = processArgv; // remove the first non-option argument: it's always the app location\n\n\treturn parseAndValidate(args, true);\n}\n\nexport function addArg(argv: string[], ...args: string[]): string[] {\n\tconst endOfArgsMarkerIndex = argv.indexOf('--');\n\tif (endOfArgsMarkerIndex === -1) {\n\t\targv.push(...args);\n\t} else {\n\t\t// if the we have an argument \"--\" (end of argument marker)\n\t\t// we cannot add arguments at the end. rather, we add\n\t\t// arguments before the \"--\" marker.\n\t\targv.splice(endOfArgsMarkerIndex, 0, ...args);\n\t}\n\n\treturn argv;\n}\n\nexport function isLaunchedFromCli(env: IProcessEnvironment): boolean {\n\treturn env['VSCODE_CLI'] === '1';\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { spawn } from 'child_process';\nimport { basename } from 'vs/base/common/path';\nimport { localize } from 'vs/nls';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { canceled, isPromiseCanceledError } from 'vs/base/common/errors';\nimport { IProcessEnvironment, isWindows, OS } from 'vs/base/common/platform';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { getSystemShell } from 'vs/base/node/shell';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { isLaunchedFromCli } from 'vs/platform/environment/node/argvHelper';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { Promises } from 'vs/base/common/async';\n\n/**\n * The maximum of time we accept to wait on resolving the shell\n * environment before giving up. This ensures we are not blocking\n * other tasks from running for a too long time period.\n */\nconst MAX_SHELL_RESOLVE_TIME = 10000;\n\nlet unixShellEnvPromise: Promise<typeof process.env> | undefined = undefined;\n\n/**\n * Resolves the shell environment by spawning a shell. This call will cache\n * the shell spawning so that subsequent invocations use that cached result.\n *\n * Will throw an error if:\n * - we hit a timeout of `MAX_SHELL_RESOLVE_TIME`\n * - any other error from spawning a shell to figure out the environment\n */\nexport async function getResolvedShellEnv(logService: ILogService, args: NativeParsedArgs, env: IProcessEnvironment): Promise<typeof process.env> {\n\n\t// Skip if --force-disable-user-env\n\tif (args['force-disable-user-env']) {\n\t\tlogService.trace('resolveShellEnv(): skipped (--force-disable-user-env)');\n\n\t\treturn {};\n\t}\n\n\t// Skip on windows\n\telse if (isWindows) {\n\t\tlogService.trace('resolveShellEnv(): skipped (Windows)');\n\n\t\treturn {};\n\t}\n\n\t// Skip if running from CLI already\n\telse if (isLaunchedFromCli(env) && !args['force-user-env']) {\n\t\tlogService.trace('resolveShellEnv(): skipped (VSCODE_CLI is set)');\n\n\t\treturn {};\n\t}\n\n\t// Otherwise resolve (macOS, Linux)\n\telse {\n\t\tif (isLaunchedFromCli(env)) {\n\t\t\tlogService.trace('resolveShellEnv(): running (--force-user-env)');\n\t\t} else {\n\t\t\tlogService.trace('resolveShellEnv(): running (macOS/Linux)');\n\t\t}\n\n\t\t// Call this only once and cache the promise for\n\t\t// subsequent calls since this operation can be\n\t\t// expensive (spawns a process).\n\t\tif (!unixShellEnvPromise) {\n\t\t\tunixShellEnvPromise = Promises.withAsyncBody<NodeJS.ProcessEnv>(async (resolve, reject) => {\n\t\t\t\tconst cts = new CancellationTokenSource();\n\n\t\t\t\t// Give up resolving shell env after some time\n\t\t\t\tconst timeout = setTimeout(() => {\n\t\t\t\t\tcts.dispose(true);\n\t\t\t\t\treject(new Error(localize('resolveShellEnvTimeout', \"Unable to resolve your shell environment in a reasonable time. Please review your shell configuration.\")));\n\t\t\t\t}, MAX_SHELL_RESOLVE_TIME);\n\n\t\t\t\t// Resolve shell env and handle errors\n\t\t\t\ttry {\n\t\t\t\t\tresolve(await doResolveUnixShellEnv(logService, cts.token));\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (!isPromiseCanceledError(error) && !cts.token.isCancellationRequested) {\n\t\t\t\t\t\treject(new Error(localize('resolveShellEnvError', \"Unable to resolve your shell environment: {0}\", toErrorMessage(error))));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve({});\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tclearTimeout(timeout);\n\t\t\t\t\tcts.dispose();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn unixShellEnvPromise;\n\t}\n}\n\nasync function doResolveUnixShellEnv(logService: ILogService, token: CancellationToken): Promise<typeof process.env> {\n\tconst runAsNode = process.env['ELECTRON_RUN_AS_NODE'];\n\tlogService.trace('getUnixShellEnvironment#runAsNode', runAsNode);\n\n\tconst noAttach = process.env['ELECTRON_NO_ATTACH_CONSOLE'];\n\tlogService.trace('getUnixShellEnvironment#noAttach', noAttach);\n\n\tconst mark = generateUuid().replace(/-/g, '').substr(0, 12);\n\tconst regex = new RegExp(mark + '(.*)' + mark);\n\n\tconst env = {\n\t\t...process.env,\n\t\tELECTRON_RUN_AS_NODE: '1',\n\t\tELECTRON_NO_ATTACH_CONSOLE: '1'\n\t};\n\n\tlogService.trace('getUnixShellEnvironment#env', env);\n\tconst systemShellUnix = await getSystemShell(OS, env);\n\tlogService.trace('getUnixShellEnvironment#shell', systemShellUnix);\n\n\treturn new Promise<typeof process.env>((resolve, reject) => {\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn reject(canceled());\n\t\t}\n\n\t\t// handle popular non-POSIX shells\n\t\tconst name = basename(systemShellUnix);\n\t\tlet command: string, shellArgs: Array<string>;\n\t\tconst extraArgs = (process.versions['electron'] && process.versions['microsoft-build']) ? '--ms-enable-electron-run-as-node' : '';\n\t\tif (/^pwsh(-preview)?$/.test(name)) {\n\t\t\t// Older versions of PowerShell removes double quotes sometimes so we use \"double single quotes\" which is how\n\t\t\t// you escape single quotes inside of a single quoted string.\n\t\t\tcommand = `& '${process.execPath}' ${extraArgs} -p '''${mark}'' + JSON.stringify(process.env) + ''${mark}'''`;\n\t\t\tshellArgs = ['-Login', '-Command'];\n\t\t} else {\n\t\t\tcommand = `'${process.execPath}' ${extraArgs} -p '\"${mark}\" + JSON.stringify(process.env) + \"${mark}\"'`;\n\n\t\t\tif (name === 'tcsh') {\n\t\t\t\tshellArgs = ['-ic'];\n\t\t\t} else {\n\t\t\t\tshellArgs = ['-ilc'];\n\t\t\t}\n\t\t}\n\n\t\tlogService.trace('getUnixShellEnvironment#spawn', JSON.stringify(shellArgs), command);\n\n\t\tconst child = spawn(systemShellUnix, [...shellArgs, command], {\n\t\t\tdetached: true,\n\t\t\tstdio: ['ignore', 'pipe', 'pipe'],\n\t\t\tenv\n\t\t});\n\n\t\ttoken.onCancellationRequested(() => {\n\t\t\tchild.kill();\n\n\t\t\treturn reject(canceled());\n\t\t});\n\n\t\tchild.on('error', err => {\n\t\t\tlogService.error('getUnixShellEnvironment#errorChildProcess', toErrorMessage(err));\n\t\t\treject(err);\n\t\t});\n\n\t\tconst buffers: Buffer[] = [];\n\t\tchild.stdout.on('data', b => buffers.push(b));\n\n\t\tconst stderr: Buffer[] = [];\n\t\tchild.stderr.on('data', b => stderr.push(b));\n\n\t\tchild.on('close', (code, signal) => {\n\t\t\tconst raw = Buffer.concat(buffers).toString('utf8');\n\t\t\tlogService.trace('getUnixShellEnvironment#raw', raw);\n\n\t\t\tconst stderrStr = Buffer.concat(stderr).toString('utf8');\n\t\t\tif (stderrStr.trim()) {\n\t\t\t\tlogService.trace('getUnixShellEnvironment#stderr', stderrStr);\n\t\t\t}\n\n\t\t\tif (code || signal) {\n\t\t\t\treturn reject(new Error(localize('resolveShellEnvExitError', \"Unexpected exit code from spawned shell (code {0}, signal {1})\", code, signal)));\n\t\t\t}\n\n\t\t\tconst match = regex.exec(raw);\n\t\t\tconst rawStripped = match ? match[1] : '{}';\n\n\t\t\ttry {\n\t\t\t\tconst env = JSON.parse(rawStripped);\n\n\t\t\t\tif (runAsNode) {\n\t\t\t\t\tenv['ELECTRON_RUN_AS_NODE'] = runAsNode;\n\t\t\t\t} else {\n\t\t\t\t\tdelete env['ELECTRON_RUN_AS_NODE'];\n\t\t\t\t}\n\n\t\t\t\tif (noAttach) {\n\t\t\t\t\tenv['ELECTRON_NO_ATTACH_CONSOLE'] = noAttach;\n\t\t\t\t} else {\n\t\t\t\t\tdelete env['ELECTRON_NO_ATTACH_CONSOLE'];\n\t\t\t\t}\n\n\t\t\t\t// https://github.com/microsoft/vscode/issues/22593#issuecomment-336050758\n\t\t\t\tdelete env['XDG_RUNTIME_DIR'];\n\n\t\t\t\tlogService.trace('getUnixShellEnvironment#result', env);\n\t\t\t\tresolve(env);\n\t\t\t} catch (err) {\n\t\t\t\tlogService.error('getUnixShellEnvironment#errorCaught', toErrorMessage(err));\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { IDataTransformer, IErrorTransformer, WriteableStream } from 'vs/base/common/stream';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { createFileSystemProviderError, ensureFileSystemProviderError, FileReadStreamOptions, FileSystemProviderErrorCode, IFileSystemProviderWithOpenReadWriteCloseCapability } from 'vs/platform/files/common/files';\n\nexport interface ICreateReadStreamOptions extends FileReadStreamOptions {\n\n\t/**\n\t * The size of the buffer to use before sending to the stream.\n\t */\n\tbufferSize: number;\n\n\t/**\n\t * Allows to massage any possibly error that happens during reading.\n\t */\n\terrorTransformer?: IErrorTransformer;\n}\n\n/**\n * A helper to read a file from a provider with open/read/close capability into a stream.\n */\nexport async function readFileIntoStream<T>(\n\tprovider: IFileSystemProviderWithOpenReadWriteCloseCapability,\n\tresource: URI,\n\ttarget: WriteableStream<T>,\n\ttransformer: IDataTransformer<VSBuffer, T>,\n\toptions: ICreateReadStreamOptions,\n\ttoken: CancellationToken\n): Promise<void> {\n\tlet error: Error | undefined = undefined;\n\n\ttry {\n\t\tawait doReadFileIntoStream(provider, resource, target, transformer, options, token);\n\t} catch (err) {\n\t\terror = err;\n\t} finally {\n\t\tif (error && options.errorTransformer) {\n\t\t\terror = options.errorTransformer(error);\n\t\t}\n\n\t\tif (typeof error !== 'undefined') {\n\t\t\ttarget.error(error);\n\t\t}\n\n\t\ttarget.end();\n\t}\n}\n\nasync function doReadFileIntoStream<T>(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, target: WriteableStream<T>, transformer: IDataTransformer<VSBuffer, T>, options: ICreateReadStreamOptions, token: CancellationToken): Promise<void> {\n\n\t// Check for cancellation\n\tthrowIfCancelled(token);\n\n\t// open handle through provider\n\tconst handle = await provider.open(resource, { create: false });\n\n\ttry {\n\n\t\t// Check for cancellation\n\t\tthrowIfCancelled(token);\n\n\t\tlet totalBytesRead = 0;\n\t\tlet bytesRead = 0;\n\t\tlet allowedRemainingBytes = (options && typeof options.length === 'number') ? options.length : undefined;\n\n\t\tlet buffer = VSBuffer.alloc(Math.min(options.bufferSize, typeof allowedRemainingBytes === 'number' ? allowedRemainingBytes : options.bufferSize));\n\n\t\tlet posInFile = options && typeof options.position === 'number' ? options.position : 0;\n\t\tlet posInBuffer = 0;\n\t\tdo {\n\t\t\t// read from source (handle) at current position (pos) into buffer (buffer) at\n\t\t\t// buffer position (posInBuffer) up to the size of the buffer (buffer.byteLength).\n\t\t\tbytesRead = await provider.read(handle, posInFile, buffer.buffer, posInBuffer, buffer.byteLength - posInBuffer);\n\n\t\t\tposInFile += bytesRead;\n\t\t\tposInBuffer += bytesRead;\n\t\t\ttotalBytesRead += bytesRead;\n\n\t\t\tif (typeof allowedRemainingBytes === 'number') {\n\t\t\t\tallowedRemainingBytes -= bytesRead;\n\t\t\t}\n\n\t\t\t// when buffer full, create a new one and emit it through stream\n\t\t\tif (posInBuffer === buffer.byteLength) {\n\t\t\t\tawait target.write(transformer(buffer));\n\n\t\t\t\tbuffer = VSBuffer.alloc(Math.min(options.bufferSize, typeof allowedRemainingBytes === 'number' ? allowedRemainingBytes : options.bufferSize));\n\n\t\t\t\tposInBuffer = 0;\n\t\t\t}\n\t\t} while (bytesRead > 0 && (typeof allowedRemainingBytes !== 'number' || allowedRemainingBytes > 0) && throwIfCancelled(token) && throwIfTooLarge(totalBytesRead, options));\n\n\t\t// wrap up with last buffer (also respect maxBytes if provided)\n\t\tif (posInBuffer > 0) {\n\t\t\tlet lastChunkLength = posInBuffer;\n\t\t\tif (typeof allowedRemainingBytes === 'number') {\n\t\t\t\tlastChunkLength = Math.min(posInBuffer, allowedRemainingBytes);\n\t\t\t}\n\n\t\t\ttarget.write(transformer(buffer.slice(0, lastChunkLength)));\n\t\t}\n\t} catch (error) {\n\t\tthrow ensureFileSystemProviderError(error);\n\t} finally {\n\t\tawait provider.close(handle);\n\t}\n}\n\nfunction throwIfCancelled(token: CancellationToken): boolean {\n\tif (token.isCancellationRequested) {\n\t\tthrow canceled();\n\t}\n\n\treturn true;\n}\n\nfunction throwIfTooLarge(totalBytesRead: number, options: ICreateReadStreamOptions): boolean {\n\n\t// Return early if file is too large to load and we have configured limits\n\tif (options?.limits) {\n\t\tif (typeof options.limits.memory === 'number' && totalBytesRead > options.limits.memory) {\n\t\t\tthrow createFileSystemProviderError(localize('fileTooLargeForHeapError', \"To open a file of this size, you need to restart and allow to use more memory\"), FileSystemProviderErrorCode.FileExceedsMemoryLimit);\n\t\t}\n\n\t\tif (typeof options.limits.size === 'number' && totalBytesRead > options.limits.size) {\n\t\t\tthrow createFileSystemProviderError(localize('fileTooLargeError', \"File is too large to open\"), FileSystemProviderErrorCode.FileTooLarge);\n\t\t}\n\t}\n\n\treturn true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { Disposable, DisposableStore, MutableDisposable } from 'vs/base/common/lifecycle';\nimport { isLinux } from 'vs/base/common/platform';\nimport { URI as uri } from 'vs/base/common/uri';\nimport { FileChangeType, IFileChange, isParent } from 'vs/platform/files/common/files';\n\nexport interface IWatcherService {\n\n\t/**\n\t * A normalized file change event from the raw events\n\t * the watcher emits.\n\t */\n\treadonly onDidChangeFile: Event<IDiskFileChange[]>;\n\n\t/**\n\t * An event to indicate a message that should get logged.\n\t */\n\treadonly onDidLogMessage: Event<ILogMessage>;\n\n\t/**\n\t * An event to indicate an error occured from the watcher\n\t * that is unrecoverable. Listeners should restart the\n\t * service if possible.\n\t */\n\treadonly onDidError: Event<string>;\n\n\t/**\n\t * Configures the watcher service to watch according\n\t * to the requests. Any existing watched path that\n\t * is not in the array, will be removed from watching\n\t * and any new path will be added to watching.\n\t */\n\twatch(requests: IWatchRequest[]): Promise<void>;\n\n\t/**\n\t * Enable verbose logging in the watcher.\n\t */\n\tsetVerboseLogging(enabled: boolean): Promise<void>;\n\n\t/**\n\t * Stop all watchers.\n\t */\n\tstop(): Promise<void>;\n}\n\nexport abstract class AbstractWatcherService extends Disposable {\n\n\tprivate static readonly MAX_RESTARTS = 5;\n\n\tprivate service: IWatcherService | undefined;\n\tprivate readonly serviceDisposables = this._register(new MutableDisposable());\n\n\tprivate requests: IWatchRequest[] | undefined = undefined;\n\n\tprivate restartCounter = 0;\n\n\tconstructor(\n\t\tprivate readonly onFileChanges: (changes: IDiskFileChange[]) => void,\n\t\tprivate readonly onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean\n\t) {\n\t\tsuper();\n\t}\n\n\tprotected abstract createService(disposables: DisposableStore): IWatcherService;\n\n\tprotected init(): void {\n\n\t\t// Associate disposables to the service\n\t\tconst disposables = new DisposableStore();\n\t\tthis.serviceDisposables.value = disposables;\n\n\t\t// Ask implementors to create the service\n\t\tthis.service = this.createService(disposables);\n\t\tthis.service.setVerboseLogging(this.verboseLogging);\n\n\t\t// Wire in event handlers\n\t\tdisposables.add(this.service.onDidChangeFile(e => this.onFileChanges(e)));\n\t\tdisposables.add(this.service.onDidLogMessage(e => this.onLogMessage(e)));\n\t\tdisposables.add(this.service.onDidError(e => this.onError(e)));\n\t}\n\n\tprotected onError(error: string): void {\n\n\t\t// Restart up to N times\n\t\tif (this.restartCounter < AbstractWatcherService.MAX_RESTARTS && this.requests) {\n\t\t\tthis.error(`restarting watcher after error: ${error}`);\n\t\t\tthis.restart(this.requests);\n\t\t}\n\n\t\t// Otherwise log that we have given up to restart\n\t\telse {\n\t\t\tthis.error(`gave up attempting to restart watcher after error: ${error}`);\n\t\t}\n\t}\n\n\tprivate restart(requests: IWatchRequest[]): void {\n\t\tthis.restartCounter++;\n\n\t\tthis.init();\n\t\tthis.watch(requests);\n\t}\n\n\tasync watch(requests: IWatchRequest[]): Promise<void> {\n\t\tthis.requests = requests;\n\n\t\tawait this.service?.watch(requests);\n\t}\n\n\tasync setVerboseLogging(verboseLogging: boolean): Promise<void> {\n\t\tthis.verboseLogging = verboseLogging;\n\n\t\tawait this.service?.setVerboseLogging(verboseLogging);\n\t}\n\n\tprivate error(message: string) {\n\t\tthis.onLogMessage({ type: 'error', message: `[File Watcher (parcel)] ${message}` });\n\t}\n\n\toverride dispose(): void {\n\n\t\t// Render the serve invalid from here\n\t\tthis.service = undefined;\n\n\t\treturn super.dispose();\n\t}\n}\n\n/**\n * Base class of any watcher service we support.\n *\n * TODO@bpasero delete and replace with `AbstractWatcherService`\n */\nexport abstract class WatcherService extends Disposable {\n\n\t/**\n\t * Asks to watch the provided folders.\n\t */\n\tabstract watch(requests: IWatchRequest[]): Promise<void>;\n\n\t/**\n\t * Enable verbose logging from the watcher.\n\t */\n\tabstract setVerboseLogging(verboseLogging: boolean): Promise<void>;\n}\n\nexport interface IWatchRequest {\n\n\t/**\n\t * The path to watch.\n\t */\n\tpath: string;\n\n\t/**\n\t * A set of glob patterns or paths to exclude from watching.\n\t */\n\texcludes: string[];\n\n\t/**\n\t * @deprecated this only exists for WSL1 support and should never\n\t * be used in any other case.\n\t */\n\tpollingInterval?: number;\n}\n\nexport interface IDiskFileChange {\n\ttype: FileChangeType;\n\tpath: string;\n}\n\nexport interface ILogMessage {\n\ttype: 'trace' | 'warn' | 'error' | 'info' | 'debug';\n\tmessage: string;\n}\n\nexport function toFileChanges(changes: IDiskFileChange[]): IFileChange[] {\n\treturn changes.map(change => ({\n\t\ttype: change.type,\n\t\tresource: uri.file(change.path)\n\t}));\n}\n\nexport function coalesceEvents(changes: IDiskFileChange[]): IDiskFileChange[] {\n\n\t// Build deltas\n\tconst coalescer = new EventCoalescer();\n\tfor (const event of changes) {\n\t\tcoalescer.processEvent(event);\n\t}\n\n\treturn coalescer.coalesce();\n}\n\nclass EventCoalescer {\n\n\tprivate readonly coalesced = new Set<IDiskFileChange>();\n\tprivate readonly mapPathToChange = new Map<string, IDiskFileChange>();\n\n\tprivate toKey(event: IDiskFileChange): string {\n\t\tif (isLinux) {\n\t\t\treturn event.path;\n\t\t}\n\n\t\treturn event.path.toLowerCase(); // normalise to file system case sensitivity\n\t}\n\n\tprocessEvent(event: IDiskFileChange): void {\n\t\tconst existingEvent = this.mapPathToChange.get(this.toKey(event));\n\n\t\tlet keepEvent = false;\n\n\t\t// Event path already exists\n\t\tif (existingEvent) {\n\t\t\tconst currentChangeType = existingEvent.type;\n\t\t\tconst newChangeType = event.type;\n\n\t\t\t// macOS/Windows: track renames to different case but\n\t\t\t// same name by changing current event to DELETED\n\t\t\t// this encodes some underlying knowledge about the\n\t\t\t// file watcher being used by assuming we first get\n\t\t\t// an event for the CREATE and then an event that we\n\t\t\t// consider as DELETE if same name / different case.\n\t\t\tif (existingEvent.path !== event.path && event.type === FileChangeType.DELETED) {\n\t\t\t\tkeepEvent = true;\n\t\t\t}\n\n\t\t\t// Ignore CREATE followed by DELETE in one go\n\t\t\telse if (currentChangeType === FileChangeType.ADDED && newChangeType === FileChangeType.DELETED) {\n\t\t\t\tthis.mapPathToChange.delete(this.toKey(event));\n\t\t\t\tthis.coalesced.delete(existingEvent);\n\t\t\t}\n\n\t\t\t// Flatten DELETE followed by CREATE into CHANGE\n\t\t\telse if (currentChangeType === FileChangeType.DELETED && newChangeType === FileChangeType.ADDED) {\n\t\t\t\texistingEvent.type = FileChangeType.UPDATED;\n\t\t\t}\n\n\t\t\t// Do nothing. Keep the created event\n\t\t\telse if (currentChangeType === FileChangeType.ADDED && newChangeType === FileChangeType.UPDATED) { }\n\n\t\t\t// Otherwise apply change type\n\t\t\telse {\n\t\t\t\texistingEvent.type = newChangeType;\n\t\t\t}\n\t\t}\n\n\t\t// Otherwise keep\n\t\telse {\n\t\t\tkeepEvent = true;\n\t\t}\n\n\t\tif (keepEvent) {\n\t\t\tthis.coalesced.add(event);\n\t\t\tthis.mapPathToChange.set(this.toKey(event), event);\n\t\t}\n\t}\n\n\tcoalesce(): IDiskFileChange[] {\n\t\tconst addOrChangeEvents: IDiskFileChange[] = [];\n\t\tconst deletedPaths: string[] = [];\n\n\t\t// This algorithm will remove all DELETE events up to the root folder\n\t\t// that got deleted if any. This ensures that we are not producing\n\t\t// DELETE events for each file inside a folder that gets deleted.\n\t\t//\n\t\t// 1.) split ADD/CHANGE and DELETED events\n\t\t// 2.) sort short deleted paths to the top\n\t\t// 3.) for each DELETE, check if there is a deleted parent and ignore the event in that case\n\t\treturn Array.from(this.coalesced).filter(e => {\n\t\t\tif (e.type !== FileChangeType.DELETED) {\n\t\t\t\taddOrChangeEvents.push(e);\n\n\t\t\t\treturn false; // remove ADD / CHANGE\n\t\t\t}\n\n\t\t\treturn true; // keep DELETE\n\t\t}).sort((e1, e2) => {\n\t\t\treturn e1.path.length - e2.path.length; // shortest path first\n\t\t}).filter(e => {\n\t\t\tif (deletedPaths.some(deletedPath => isParent(e.path, deletedPath, !isLinux /* ignorecase */))) {\n\t\t\t\treturn false; // DELETE is ignored if parent is deleted already\n\t\t\t}\n\n\t\t\t// otherwise mark as deleted\n\t\t\tdeletedPaths.push(e.path);\n\n\t\t\treturn true;\n\t\t}).concat(addOrChangeEvents);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ThrottledDelayer } from 'vs/base/common/async';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { basename, join } from 'vs/base/common/path';\nimport { realpath } from 'vs/base/node/extpath';\nimport { SymlinkSupport } from 'vs/base/node/pfs';\nimport { CHANGE_BUFFER_DELAY, watchFile, watchFolder } from 'vs/base/node/watcher';\nimport { FileChangeType } from 'vs/platform/files/common/files';\nimport { IDiskFileChange, ILogMessage, coalesceEvents } from 'vs/platform/files/common/watcher';\n\nexport class FileWatcher extends Disposable {\n\tprivate isDisposed: boolean | undefined;\n\n\tprivate readonly fileChangesDelayer: ThrottledDelayer<void> = this._register(new ThrottledDelayer<void>(CHANGE_BUFFER_DELAY * 2 /* sync on delay from underlying library */));\n\tprivate fileChangesBuffer: IDiskFileChange[] = [];\n\n\tconstructor(\n\t\tprivate path: string,\n\t\tprivate onDidFilesChange: (changes: IDiskFileChange[]) => void,\n\t\tprivate onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean\n\t) {\n\t\tsuper();\n\n\t\tthis.startWatching();\n\t}\n\n\tsetVerboseLogging(verboseLogging: boolean): void {\n\t\tthis.verboseLogging = verboseLogging;\n\t}\n\n\tprivate async startWatching(): Promise<void> {\n\t\ttry {\n\t\t\tconst { stat, symbolicLink } = await SymlinkSupport.stat(this.path);\n\n\t\t\tif (this.isDisposed) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet pathToWatch = this.path;\n\t\t\tif (symbolicLink) {\n\t\t\t\ttry {\n\t\t\t\t\tpathToWatch = await realpath(pathToWatch);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.onError(error);\n\n\t\t\t\t\tif (symbolicLink.dangling) {\n\t\t\t\t\t\treturn; // give up if symbolic link is dangling\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Watch Folder\n\t\t\tif (stat.isDirectory()) {\n\t\t\t\tthis._register(watchFolder(pathToWatch, (eventType, path) => {\n\t\t\t\t\tthis.onFileChange({\n\t\t\t\t\t\ttype: eventType === 'changed' ? FileChangeType.UPDATED : eventType === 'added' ? FileChangeType.ADDED : FileChangeType.DELETED,\n\t\t\t\t\t\tpath: join(this.path, basename(path)) // ensure path is identical with what was passed in\n\t\t\t\t\t});\n\t\t\t\t}, error => this.onError(error)));\n\t\t\t}\n\n\t\t\t// Watch File\n\t\t\telse {\n\t\t\t\tthis._register(watchFile(pathToWatch, eventType => {\n\t\t\t\t\tthis.onFileChange({\n\t\t\t\t\t\ttype: eventType === 'changed' ? FileChangeType.UPDATED : FileChangeType.DELETED,\n\t\t\t\t\t\tpath: this.path // ensure path is identical with what was passed in\n\t\t\t\t\t});\n\t\t\t\t}, error => this.onError(error)));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\tthis.onError(error);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onFileChange(event: IDiskFileChange): void {\n\n\t\t// Add to buffer\n\t\tthis.fileChangesBuffer.push(event);\n\n\t\t// Logging\n\t\tif (this.verboseLogging) {\n\t\t\tthis.onVerbose(`${event.type === FileChangeType.ADDED ? '[ADDED]' : event.type === FileChangeType.DELETED ? '[DELETED]' : '[CHANGED]'} ${event.path}`);\n\t\t}\n\n\t\t// Handle emit through delayer to accommodate for bulk changes and thus reduce spam\n\t\tthis.fileChangesDelayer.trigger(async () => {\n\t\t\tconst fileChanges = this.fileChangesBuffer;\n\t\t\tthis.fileChangesBuffer = [];\n\n\t\t\t// Event coalsecer\n\t\t\tconst coalescedFileChanges = coalesceEvents(fileChanges);\n\n\t\t\t// Logging\n\t\t\tif (this.verboseLogging) {\n\t\t\t\tfor (const event of coalescedFileChanges) {\n\t\t\t\t\tthis.onVerbose(`>> normalized ${event.type === FileChangeType.ADDED ? '[ADDED]' : event.type === FileChangeType.DELETED ? '[DELETED]' : '[CHANGED]'} ${event.path}`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Fire\n\t\t\tif (coalescedFileChanges.length > 0) {\n\t\t\t\tthis.onDidFilesChange(coalescedFileChanges);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate onError(error: string): void {\n\t\tif (!this.isDisposed) {\n\t\t\tthis.onLogMessage({ type: 'error', message: `[File Watcher (node.js)] ${error}` });\n\t\t}\n\t}\n\n\tprivate onVerbose(message: string): void {\n\t\tif (!this.isDisposed) {\n\t\t\tthis.onLogMessage({ type: 'trace', message: `[File Watcher (node.js)] ${message}` });\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tthis.isDisposed = true;\n\n\t\tsuper.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { FileAccess } from 'vs/base/common/network';\nimport { getNextTickChannel, ProxyChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Client } from 'vs/base/parts/ipc/node/ipc.cp';\nimport { IWatcherService } from 'vs/platform/files/node/watcher/nsfw/watcher';\nimport { IDiskFileChange, ILogMessage, IWatchRequest, WatcherService } from 'vs/platform/files/common/watcher';\n\nexport class FileWatcher extends WatcherService {\n\n\tprivate service: IWatcherService | undefined;\n\n\tprivate isDisposed = false;\n\n\tconstructor(\n\t\tprivate readonly onDidFilesChange: (changes: IDiskFileChange[]) => void,\n\t\tprivate readonly onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean\n\t) {\n\t\tsuper();\n\n\t\tthis.startWatching();\n\t}\n\n\tprivate startWatching(): void {\n\t\tconst client = this._register(new Client(\n\t\t\tFileAccess.asFileUri('bootstrap-fork', require).fsPath,\n\t\t\t{\n\t\t\t\tserverName: 'File Watcher (nsfw)',\n\t\t\t\targs: ['--type=watcherServiceNSFW'],\n\t\t\t\tenv: {\n\t\t\t\t\tVSCODE_AMD_ENTRYPOINT: 'vs/platform/files/node/watcher/nsfw/watcherApp',\n\t\t\t\t\tVSCODE_PIPE_LOGGING: 'true',\n\t\t\t\t\tVSCODE_VERBOSE_LOGGING: 'true' // transmit console logs from server to client\n\t\t\t\t}\n\t\t\t}\n\t\t));\n\n\t\t// Initialize watcher\n\t\tthis.service = ProxyChannel.toService<IWatcherService>(getNextTickChannel(client.getChannel('watcher')));\n\t\tthis.service.setVerboseLogging(this.verboseLogging);\n\n\t\t// Wire in event handlers\n\t\tthis._register(this.service.onDidChangeFile(e => !this.isDisposed && this.onDidFilesChange(e)));\n\t\tthis._register(this.service.onDidLogMessage(e => this.onLogMessage(e)));\n\t}\n\n\tasync setVerboseLogging(verboseLogging: boolean): Promise<void> {\n\t\tthis.verboseLogging = verboseLogging;\n\n\t\tif (!this.isDisposed) {\n\t\t\tawait this.service?.setVerboseLogging(verboseLogging);\n\t\t}\n\t}\n\n\terror(message: string) {\n\t\tthis.onLogMessage({ type: 'error', message: `[File Watcher (nsfw)] ${message}` });\n\t}\n\n\tasync watch(requests: IWatchRequest[]): Promise<void> {\n\t\tif (!this.isDisposed) {\n\t\t\tawait this.service?.watch(requests);\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tthis.isDisposed = true;\n\n\t\tsuper.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { FileAccess } from 'vs/base/common/network';\nimport { getNextTickChannel, ProxyChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Client } from 'vs/base/parts/ipc/node/ipc.cp';\nimport { AbstractWatcherService, IDiskFileChange, ILogMessage, IWatcherService } from 'vs/platform/files/common/watcher';\n\nexport class FileWatcher extends AbstractWatcherService {\n\n\tconstructor(\n\t\tonFileChanges: (changes: IDiskFileChange[]) => void,\n\t\tonLogMessage: (msg: ILogMessage) => void,\n\t\tverboseLogging: boolean\n\t) {\n\t\tsuper(onFileChanges, onLogMessage, verboseLogging);\n\n\t\tthis.init();\n\t}\n\n\tprotected override createService(disposables: DisposableStore): IWatcherService {\n\n\t\t// Fork the parcel file watcher and build a client around\n\t\t// its server for passing over requests and receiving events.\n\t\tconst client = disposables.add(new Client(\n\t\t\tFileAccess.asFileUri('bootstrap-fork', require).fsPath,\n\t\t\t{\n\t\t\t\tserverName: 'File Watcher (parcel, node.js)',\n\t\t\t\targs: ['--type=watcherServiceParcel'],\n\t\t\t\tenv: {\n\t\t\t\t\tVSCODE_AMD_ENTRYPOINT: 'vs/platform/files/node/watcher/parcel/watcherApp',\n\t\t\t\t\tVSCODE_PIPE_LOGGING: 'true',\n\t\t\t\t\tVSCODE_VERBOSE_LOGGING: 'true' // transmit console logs from server to client\n\t\t\t\t}\n\t\t\t}\n\t\t));\n\n\t\t// React on unexpected termination of the watcher process\n\t\tdisposables.add(client.onDidProcessExit(({ code, signal }) => this.onError(`terminated by itself with code ${code}, signal: ${signal}`)));\n\n\t\treturn ProxyChannel.toService<IWatcherService>(getNextTickChannel(client.getChannel('watcher')));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ServiceIdentifier } from 'vs/platform/instantiation/common/instantiation';\nimport { SyncDescriptor } from './descriptors';\n\nexport class ServiceCollection {\n\n\tprivate _entries = new Map<ServiceIdentifier<any>, any>();\n\n\tconstructor(...entries: [ServiceIdentifier<any>, any][]) {\n\t\tfor (let [id, service] of entries) {\n\t\t\tthis.set(id, service);\n\t\t}\n\t}\n\n\tset<T>(id: ServiceIdentifier<T>, instanceOrDescriptor: T | SyncDescriptor<T>): T | SyncDescriptor<T> {\n\t\tconst result = this._entries.get(id);\n\t\tthis._entries.set(id, instanceOrDescriptor);\n\t\treturn result;\n\t}\n\n\thas(id: ServiceIdentifier<any>): boolean {\n\t\treturn this._entries.has(id);\n\t}\n\n\tget<T>(id: ServiceIdentifier<T>): T | SyncDescriptor<T> {\n\t\treturn this._entries.get(id);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IdleValue } from 'vs/base/common/async';\nimport { illegalState } from 'vs/base/common/errors';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { Graph } from 'vs/platform/instantiation/common/graph';\nimport { IInstantiationService, ServiceIdentifier, ServicesAccessor, _util } from 'vs/platform/instantiation/common/instantiation';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\n\n// TRACING\nconst _enableTracing = false;\n\nclass CyclicDependencyError extends Error {\n\tconstructor(graph: Graph<any>) {\n\t\tsuper('cyclic dependency between services');\n\t\tthis.message = graph.findCycleSlow() ?? `UNABLE to detect cycle, dumping graph: \\n${graph.toString()}`;\n\t}\n}\n\nexport class InstantiationService implements IInstantiationService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _services: ServiceCollection;\n\tprivate readonly _strict: boolean;\n\tprivate readonly _parent?: InstantiationService;\n\n\tconstructor(services: ServiceCollection = new ServiceCollection(), strict: boolean = false, parent?: InstantiationService) {\n\t\tthis._services = services;\n\t\tthis._strict = strict;\n\t\tthis._parent = parent;\n\n\t\tthis._services.set(IInstantiationService, this);\n\t}\n\n\tcreateChild(services: ServiceCollection): IInstantiationService {\n\t\treturn new InstantiationService(services, this._strict, this);\n\t}\n\n\tinvokeFunction<R, TS extends any[] = []>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R {\n\t\tlet _trace = Trace.traceInvocation(fn);\n\t\tlet _done = false;\n\t\ttry {\n\t\t\tconst accessor: ServicesAccessor = {\n\t\t\t\tget: <T>(id: ServiceIdentifier<T>) => {\n\n\t\t\t\t\tif (_done) {\n\t\t\t\t\t\tthrow illegalState('service accessor is only valid during the invocation of its target method');\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = this._getOrCreateServiceInstance(id, _trace);\n\t\t\t\t\tif (!result) {\n\t\t\t\t\t\tthrow new Error(`[invokeFunction] unknown service '${id}'`);\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn fn(accessor, ...args);\n\t\t} finally {\n\t\t\t_done = true;\n\t\t\t_trace.stop();\n\t\t}\n\t}\n\n\tcreateInstance(ctorOrDescriptor: any | SyncDescriptor<any>, ...rest: any[]): any {\n\t\tlet _trace: Trace;\n\t\tlet result: any;\n\t\tif (ctorOrDescriptor instanceof SyncDescriptor) {\n\t\t\t_trace = Trace.traceCreation(ctorOrDescriptor.ctor);\n\t\t\tresult = this._createInstance(ctorOrDescriptor.ctor, ctorOrDescriptor.staticArguments.concat(rest), _trace);\n\t\t} else {\n\t\t\t_trace = Trace.traceCreation(ctorOrDescriptor);\n\t\t\tresult = this._createInstance(ctorOrDescriptor, rest, _trace);\n\t\t}\n\t\t_trace.stop();\n\t\treturn result;\n\t}\n\n\tprivate _createInstance<T>(ctor: any, args: any[] = [], _trace: Trace): T {\n\n\t\t// arguments defined by service decorators\n\t\tlet serviceDependencies = _util.getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\t\tlet serviceArgs: any[] = [];\n\t\tfor (const dependency of serviceDependencies) {\n\t\t\tlet service = this._getOrCreateServiceInstance(dependency.id, _trace);\n\t\t\tif (!service && this._strict && !dependency.optional) {\n\t\t\t\tthrow new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n\t\t\t}\n\t\t\tserviceArgs.push(service);\n\t\t}\n\n\t\tlet firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n\t\t// check for argument mismatches, adjust static args if needed\n\t\tif (args.length !== firstServiceArgPos) {\n\t\t\tconsole.warn(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n\n\t\t\tlet delta = firstServiceArgPos - args.length;\n\t\t\tif (delta > 0) {\n\t\t\t\targs = args.concat(new Array(delta));\n\t\t\t} else {\n\t\t\t\targs = args.slice(0, firstServiceArgPos);\n\t\t\t}\n\t\t}\n\n\t\t// now create the instance\n\t\treturn <T>new ctor(...[...args, ...serviceArgs]);\n\t}\n\n\tprivate _setServiceInstance<T>(id: ServiceIdentifier<T>, instance: T): void {\n\t\tif (this._services.get(id) instanceof SyncDescriptor) {\n\t\t\tthis._services.set(id, instance);\n\t\t} else if (this._parent) {\n\t\t\tthis._parent._setServiceInstance(id, instance);\n\t\t} else {\n\t\t\tthrow new Error('illegalState - setting UNKNOWN service instance');\n\t\t}\n\t}\n\n\tprivate _getServiceInstanceOrDescriptor<T>(id: ServiceIdentifier<T>): T | SyncDescriptor<T> {\n\t\tlet instanceOrDesc = this._services.get(id);\n\t\tif (!instanceOrDesc && this._parent) {\n\t\t\treturn this._parent._getServiceInstanceOrDescriptor(id);\n\t\t} else {\n\t\t\treturn instanceOrDesc;\n\t\t}\n\t}\n\n\tprivate _getOrCreateServiceInstance<T>(id: ServiceIdentifier<T>, _trace: Trace): T {\n\t\tlet thing = this._getServiceInstanceOrDescriptor(id);\n\t\tif (thing instanceof SyncDescriptor) {\n\t\t\treturn this._safeCreateAndCacheServiceInstance(id, thing, _trace.branch(id, true));\n\t\t} else {\n\t\t\t_trace.branch(id, false);\n\t\t\treturn thing;\n\t\t}\n\t}\n\n\tprivate readonly _activeInstantiations = new Set<ServiceIdentifier<any>>();\n\n\n\tprivate _safeCreateAndCacheServiceInstance<T>(id: ServiceIdentifier<T>, desc: SyncDescriptor<T>, _trace: Trace): T {\n\t\tif (this._activeInstantiations.has(id)) {\n\t\t\tthrow new Error(`illegal state - RECURSIVELY instantiating service '${id}'`);\n\t\t}\n\t\tthis._activeInstantiations.add(id);\n\t\ttry {\n\t\t\treturn this._createAndCacheServiceInstance(id, desc, _trace);\n\t\t} finally {\n\t\t\tthis._activeInstantiations.delete(id);\n\t\t}\n\t}\n\n\tprivate _createAndCacheServiceInstance<T>(id: ServiceIdentifier<T>, desc: SyncDescriptor<T>, _trace: Trace): T {\n\n\t\ttype Triple = { id: ServiceIdentifier<any>, desc: SyncDescriptor<any>, _trace: Trace; };\n\t\tconst graph = new Graph<Triple>(data => data.id.toString());\n\n\t\tlet cycleCount = 0;\n\t\tconst stack = [{ id, desc, _trace }];\n\t\twhile (stack.length) {\n\t\t\tconst item = stack.pop()!;\n\t\t\tgraph.lookupOrInsertNode(item);\n\n\t\t\t// a weak but working heuristic for cycle checks\n\t\t\tif (cycleCount++ > 1000) {\n\t\t\t\tthrow new CyclicDependencyError(graph);\n\t\t\t}\n\n\t\t\t// check all dependencies for existence and if they need to be created first\n\t\t\tfor (let dependency of _util.getServiceDependencies(item.desc.ctor)) {\n\n\t\t\t\tlet instanceOrDesc = this._getServiceInstanceOrDescriptor(dependency.id);\n\t\t\t\tif (!instanceOrDesc && !dependency.optional) {\n\t\t\t\t\tconsole.warn(`[createInstance] ${id} depends on ${dependency.id} which is NOT registered.`);\n\t\t\t\t}\n\n\t\t\t\tif (instanceOrDesc instanceof SyncDescriptor) {\n\t\t\t\t\tconst d = { id: dependency.id, desc: instanceOrDesc, _trace: item._trace.branch(dependency.id, true) };\n\t\t\t\t\tgraph.insertEdge(item, d);\n\t\t\t\t\tstack.push(d);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twhile (true) {\n\t\t\tconst roots = graph.roots();\n\n\t\t\t// if there is no more roots but still\n\t\t\t// nodes in the graph we have a cycle\n\t\t\tif (roots.length === 0) {\n\t\t\t\tif (!graph.isEmpty()) {\n\t\t\t\t\tthrow new CyclicDependencyError(graph);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tfor (const { data } of roots) {\n\t\t\t\t// Repeat the check for this still being a service sync descriptor. That's because\n\t\t\t\t// instantiating a dependency might have side-effect and recursively trigger instantiation\n\t\t\t\t// so that some dependencies are now fullfilled already.\n\t\t\t\tconst instanceOrDesc = this._getServiceInstanceOrDescriptor(data.id);\n\t\t\t\tif (instanceOrDesc instanceof SyncDescriptor) {\n\t\t\t\t\t// create instance and overwrite the service collections\n\t\t\t\t\tconst instance = this._createServiceInstanceWithOwner(data.id, data.desc.ctor, data.desc.staticArguments, data.desc.supportsDelayedInstantiation, data._trace);\n\t\t\t\t\tthis._setServiceInstance(data.id, instance);\n\t\t\t\t}\n\t\t\t\tgraph.removeNode(data);\n\t\t\t}\n\t\t}\n\t\treturn <T>this._getServiceInstanceOrDescriptor(id);\n\t}\n\n\tprivate _createServiceInstanceWithOwner<T>(id: ServiceIdentifier<T>, ctor: any, args: any[] = [], supportsDelayedInstantiation: boolean, _trace: Trace): T {\n\t\tif (this._services.get(id) instanceof SyncDescriptor) {\n\t\t\treturn this._createServiceInstance(ctor, args, supportsDelayedInstantiation, _trace);\n\t\t} else if (this._parent) {\n\t\t\treturn this._parent._createServiceInstanceWithOwner(id, ctor, args, supportsDelayedInstantiation, _trace);\n\t\t} else {\n\t\t\tthrow new Error(`illegalState - creating UNKNOWN service instance ${ctor.name}`);\n\t\t}\n\t}\n\n\tprivate _createServiceInstance<T>(ctor: any, args: any[] = [], _supportsDelayedInstantiation: boolean, _trace: Trace): T {\n\t\tif (!_supportsDelayedInstantiation) {\n\t\t\t// eager instantiation\n\t\t\treturn this._createInstance(ctor, args, _trace);\n\n\t\t} else {\n\t\t\t// Return a proxy object that's backed by an idle value. That\n\t\t\t// strategy is to instantiate services in our idle time or when actually\n\t\t\t// needed but not when injected into a consumer\n\t\t\tconst idle = new IdleValue<any>(() => this._createInstance<T>(ctor, args, _trace));\n\t\t\treturn <T>new Proxy(Object.create(null), {\n\t\t\t\tget(target: any, key: PropertyKey): any {\n\t\t\t\t\tif (key in target) {\n\t\t\t\t\t\treturn target[key];\n\t\t\t\t\t}\n\t\t\t\t\tlet obj = idle.value;\n\t\t\t\t\tlet prop = obj[key];\n\t\t\t\t\tif (typeof prop !== 'function') {\n\t\t\t\t\t\treturn prop;\n\t\t\t\t\t}\n\t\t\t\t\tprop = prop.bind(obj);\n\t\t\t\t\ttarget[key] = prop;\n\t\t\t\t\treturn prop;\n\t\t\t\t},\n\t\t\t\tset(_target: T, p: PropertyKey, value: any): boolean {\n\t\t\t\t\tidle.value[p] = value;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\n//#region -- tracing ---\n\nconst enum TraceType {\n\tCreation, Invocation, Branch\n}\n\nclass Trace {\n\n\tprivate static readonly _None = new class extends Trace {\n\t\tconstructor() { super(-1, null); }\n\t\toverride stop() { }\n\t\toverride branch() { return this; }\n\t};\n\n\tstatic traceInvocation(ctor: any): Trace {\n\t\treturn !_enableTracing ? Trace._None : new Trace(TraceType.Invocation, ctor.name || (ctor.toString() as string).substring(0, 42).replace(/\\n/g, ''));\n\t}\n\n\tstatic traceCreation(ctor: any): Trace {\n\t\treturn !_enableTracing ? Trace._None : new Trace(TraceType.Creation, ctor.name);\n\t}\n\n\tprivate static _totals: number = 0;\n\tprivate readonly _start: number = Date.now();\n\tprivate readonly _dep: [ServiceIdentifier<any>, boolean, Trace?][] = [];\n\n\tprivate constructor(\n\t\treadonly type: TraceType,\n\t\treadonly name: string | null\n\t) { }\n\n\tbranch(id: ServiceIdentifier<any>, first: boolean): Trace {\n\t\tlet child = new Trace(TraceType.Branch, id.toString());\n\t\tthis._dep.push([id, first, child]);\n\t\treturn child;\n\t}\n\n\tstop() {\n\t\tlet dur = Date.now() - this._start;\n\t\tTrace._totals += dur;\n\n\t\tlet causedCreation = false;\n\n\t\tfunction printChild(n: number, trace: Trace) {\n\t\t\tlet res: string[] = [];\n\t\t\tlet prefix = new Array(n + 1).join('\\t');\n\t\t\tfor (const [id, first, child] of trace._dep) {\n\t\t\t\tif (first && child) {\n\t\t\t\t\tcausedCreation = true;\n\t\t\t\t\tres.push(`${prefix}CREATES -> ${id}`);\n\t\t\t\t\tlet nested = printChild(n + 1, child);\n\t\t\t\t\tif (nested) {\n\t\t\t\t\t\tres.push(nested);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tres.push(`${prefix}uses -> ${id}`);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn res.join('\\n');\n\t\t}\n\n\t\tlet lines = [\n\t\t\t`${this.type === TraceType.Creation ? 'CREATE' : 'CALL'} ${this.name}`,\n\t\t\t`${printChild(1, this)}`,\n\t\t\t`DONE, took ${dur.toFixed(2)}ms (grand total ${Trace._totals.toFixed(2)}ms)`\n\t\t];\n\n\t\tif (dur > 2 || causedCreation) {\n\t\t\tconsole.log(lines.join('\\n'));\n\t\t}\n\t}\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel, StaticRouter } from 'vs/base/parts/ipc/common/ipc';\nimport { Server as MessagePortServer } from 'vs/base/parts/ipc/electron-browser/ipc.mp';\nimport { IMainProcessService } from 'vs/platform/ipc/electron-sandbox/services';\n\n/**\n * An implementation of `IMainProcessService` that leverages MessagePorts.\n */\nexport class MessagePortMainProcessService implements IMainProcessService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\tprivate server: MessagePortServer,\n\t\tprivate router: StaticRouter\n\t) { }\n\n\tgetChannel(channelName: string): IChannel {\n\t\treturn this.server.getChannel(channelName, this.router);\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<string>): void {\n\t\tthis.server.registerChannel(channelName, channel);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IChannel, IServerChannel, ProxyChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { createDecorator, ServiceIdentifier } from 'vs/platform/instantiation/common/instantiation';\n\ntype ChannelClientCtor<T> = { new(channel: IChannel): T };\ntype Remote = { getChannel(channelName: string): IChannel; };\n\nabstract class RemoteServiceStub<T> {\n\tconstructor(\n\t\tchannelName: string,\n\t\toptions: IRemoteServiceWithChannelClientOptions<T> | IRemoteServiceWithProxyOptions | undefined,\n\t\tremote: Remote\n\t) {\n\t\tconst channel = remote.getChannel(channelName);\n\n\t\tif (isRemoteServiceWithChannelClientOptions(options)) {\n\t\t\treturn new options.channelClientCtor(channel);\n\t\t}\n\n\t\treturn ProxyChannel.toService(channel, options?.proxyOptions);\n\t}\n}\n\nexport interface IBaseRemoteServiceOptions {\n\treadonly supportsDelayedInstantiation?: boolean;\n}\n\nexport interface IRemoteServiceWithChannelClientOptions<T> extends IBaseRemoteServiceOptions {\n\treadonly channelClientCtor: ChannelClientCtor<T>;\n}\n\nexport interface IRemoteServiceWithProxyOptions extends IBaseRemoteServiceOptions {\n\treadonly proxyOptions?: ProxyChannel.ICreateProxyServiceOptions;\n}\n\nfunction isRemoteServiceWithChannelClientOptions<T>(obj: unknown): obj is IRemoteServiceWithChannelClientOptions<T> {\n\tconst candidate = obj as IRemoteServiceWithChannelClientOptions<T> | undefined;\n\n\treturn !!candidate?.channelClientCtor;\n}\n\n//#region Main Process\n\nexport const IMainProcessService = createDecorator<IMainProcessService>('mainProcessService');\n\nexport interface IMainProcessService {\n\treadonly _serviceBrand: undefined;\n\tgetChannel(channelName: string): IChannel;\n\tregisterChannel(channelName: string, channel: IServerChannel<string>): void;\n}\n\nclass MainProcessRemoteServiceStub<T> extends RemoteServiceStub<T> {\n\tconstructor(channelName: string, options: IRemoteServiceWithChannelClientOptions<T> | IRemoteServiceWithProxyOptions | undefined, @IMainProcessService ipcService: IMainProcessService) {\n\t\tsuper(channelName, options, ipcService);\n\t}\n}\n\nexport function registerMainProcessRemoteService<T>(id: ServiceIdentifier<T>, channelName: string, options?: IRemoteServiceWithChannelClientOptions<T> | IRemoteServiceWithProxyOptions): void {\n\tregisterSingleton(id, new SyncDescriptor(MainProcessRemoteServiceStub, [channelName, options], options?.supportsDelayedInstantiation));\n}\n\n//#endregion\n\n//#region Shared Process\n\nexport const ISharedProcessService = createDecorator<ISharedProcessService>('sharedProcessService');\n\nexport interface ISharedProcessService {\n\n\treadonly _serviceBrand: undefined;\n\n\tgetChannel(channelName: string): IChannel;\n\tregisterChannel(channelName: string, channel: IServerChannel<string>): void;\n\n\tnotifyRestored(): void;\n}\n\nclass SharedProcessRemoteServiceStub<T> extends RemoteServiceStub<T> {\n\tconstructor(channelName: string, options: IRemoteServiceWithChannelClientOptions<T> | IRemoteServiceWithProxyOptions | undefined, @ISharedProcessService ipcService: ISharedProcessService) {\n\t\tsuper(channelName, options, ipcService);\n\t}\n}\n\nexport function registerSharedProcessRemoteService<T>(id: ServiceIdentifier<T>, channelName: string, options?: IRemoteServiceWithChannelClientOptions<T> | IRemoteServiceWithProxyOptions): void {\n\tregisterSingleton(id, new SyncDescriptor(SharedProcessRemoteServiceStub, [channelName, options], options?.supportsDelayedInstantiation));\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport interface ILocalization {\n\tlanguageId: string;\n\tlanguageName?: string;\n\tlocalizedLanguageName?: string;\n\ttranslations: ITranslation[];\n\tminimalTranslations?: { [key: string]: string };\n}\n\nexport interface ITranslation {\n\tid: string;\n\tpath: string;\n}\n\nexport const ILocalizationsService = createDecorator<ILocalizationsService>('localizationsService');\nexport interface ILocalizationsService {\n\treadonly _serviceBrand: undefined;\n\tgetLanguageIds(): Promise<string[]>;\n}\n\nexport function isValidLocalization(localization: ILocalization): boolean {\n\tif (typeof localization.languageId !== 'string') {\n\t\treturn false;\n\t}\n\tif (!Array.isArray(localization.translations) || localization.translations.length === 0) {\n\t\treturn false;\n\t}\n\tfor (const translation of localization.translations) {\n\t\tif (typeof translation.id !== 'string') {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof translation.path !== 'string') {\n\t\t\treturn false;\n\t\t}\n\t}\n\tif (localization.languageName && typeof localization.languageName !== 'string') {\n\t\treturn false;\n\t}\n\tif (localization.localizedLanguageName && typeof localization.localizedLanguageName !== 'string') {\n\t\treturn false;\n\t}\n\treturn true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ILocalizationsService } from 'vs/platform/localizations/common/localizations';\nimport { LocalizationsService } from 'vs/platform/localizations/node/localizations';\n\nexport class LocalizationsUpdater extends Disposable {\n\n\tconstructor(\n\t\t@ILocalizationsService private readonly localizationsService: LocalizationsService\n\t) {\n\t\tsuper();\n\n\t\tthis.updateLocalizations();\n\t}\n\n\tprivate updateLocalizations(): void {\n\t\tthis.localizationsService.update();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { isWindows } from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { createDecorator as createServiceDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const ILogService = createServiceDecorator<ILogService>('logService');\nexport const ILoggerService = createServiceDecorator<ILoggerService>('loggerService');\n\nfunction now(): string {\n\treturn new Date().toISOString();\n}\n\nexport enum LogLevel {\n\tTrace,\n\tDebug,\n\tInfo,\n\tWarning,\n\tError,\n\tCritical,\n\tOff\n}\n\nexport const DEFAULT_LOG_LEVEL: LogLevel = LogLevel.Info;\n\nexport interface ILogger extends IDisposable {\n\tonDidChangeLogLevel: Event<LogLevel>;\n\tgetLevel(): LogLevel;\n\tsetLevel(level: LogLevel): void;\n\n\ttrace(message: string, ...args: any[]): void;\n\tdebug(message: string, ...args: any[]): void;\n\tinfo(message: string, ...args: any[]): void;\n\twarn(message: string, ...args: any[]): void;\n\terror(message: string | Error, ...args: any[]): void;\n\tcritical(message: string | Error, ...args: any[]): void;\n\n\t/**\n\t * An operation to flush the contents. Can be synchronous.\n\t */\n\tflush(): void;\n}\n\nexport function log(logger: ILogger, level: LogLevel, message: string): void {\n\tswitch (level) {\n\t\tcase LogLevel.Trace: logger.trace(message); break;\n\t\tcase LogLevel.Debug: logger.debug(message); break;\n\t\tcase LogLevel.Info: logger.info(message); break;\n\t\tcase LogLevel.Warning: logger.warn(message); break;\n\t\tcase LogLevel.Error: logger.error(message); break;\n\t\tcase LogLevel.Critical: logger.critical(message); break;\n\t\tdefault: throw new Error('Invalid log level');\n\t}\n}\n\nexport function format(args: any): string {\n\tlet result = '';\n\n\tfor (let i = 0; i < args.length; i++) {\n\t\tlet a = args[i];\n\n\t\tif (typeof a === 'object') {\n\t\t\ttry {\n\t\t\t\ta = JSON.stringify(a);\n\t\t\t} catch (e) { }\n\t\t}\n\n\t\tresult += (i > 0 ? ' ' : '') + a;\n\t}\n\n\treturn result;\n}\n\nexport interface ILogService extends ILogger {\n\treadonly _serviceBrand: undefined;\n}\n\nexport interface ILoggerOptions {\n\n\t/**\n\t * Name of the logger.\n\t */\n\tname?: string;\n\n\t/**\n\t * Do not create rotating files if max size exceeds.\n\t */\n\tdonotRotate?: boolean;\n\n\t/**\n\t * Do not use formatters.\n\t */\n\tdonotUseFormatters?: boolean;\n\n\t/**\n\t * If set, logger logs the message always.\n\t */\n\talways?: boolean;\n}\n\nexport interface ILoggerService {\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Creates a logger, or gets one if it already exists.\n\t */\n\tcreateLogger(file: URI, options?: ILoggerOptions): ILogger;\n\n\t/**\n\t * Gets an existing logger, if any.\n\t */\n\tgetLogger(file: URI): ILogger | undefined;\n}\n\nexport abstract class AbstractLogger extends Disposable {\n\n\tprivate level: LogLevel = DEFAULT_LOG_LEVEL;\n\tprivate readonly _onDidChangeLogLevel: Emitter<LogLevel> = this._register(new Emitter<LogLevel>());\n\treadonly onDidChangeLogLevel: Event<LogLevel> = this._onDidChangeLogLevel.event;\n\n\tsetLevel(level: LogLevel): void {\n\t\tif (this.level !== level) {\n\t\t\tthis.level = level;\n\t\t\tthis._onDidChangeLogLevel.fire(this.level);\n\t\t}\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.level;\n\t}\n\n}\n\nexport abstract class AbstractMessageLogger extends AbstractLogger implements ILogger {\n\n\tprotected abstract log(level: LogLevel, message: string): void;\n\n\tconstructor(private readonly logAlways?: boolean) {\n\t\tsuper();\n\t}\n\n\tprivate checkLogLevel(level: LogLevel): boolean {\n\t\treturn this.logAlways || this.getLevel() <= level;\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Trace)) {\n\t\t\tthis.log(LogLevel.Trace, format([message, ...args]));\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Debug)) {\n\t\t\tthis.log(LogLevel.Debug, format([message, ...args]));\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Info)) {\n\t\t\tthis.log(LogLevel.Info, format([message, ...args]));\n\t\t}\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Warning)) {\n\t\t\tthis.log(LogLevel.Warning, format([message, ...args]));\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Error)) {\n\n\t\t\tif (message instanceof Error) {\n\t\t\t\tconst array = Array.prototype.slice.call(arguments) as any[];\n\t\t\t\tarray[0] = message.stack;\n\t\t\t\tthis.log(LogLevel.Error, format(array));\n\t\t\t} else {\n\t\t\t\tthis.log(LogLevel.Error, format([message, ...args]));\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Critical)) {\n\t\t\tthis.log(LogLevel.Critical, format([message, ...args]));\n\t\t}\n\t}\n\n\tflush(): void { }\n}\n\n\nexport class ConsoleMainLogger extends AbstractLogger implements ILogger {\n\n\tprivate useColors: boolean;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t\tthis.useColors = !isWindows;\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.warn(`\\x1b[93m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[91m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n\n}\n\nexport class ConsoleLogger extends AbstractLogger implements ILogger {\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tconsole.log('%cTRACE', 'color: #888', message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tconsole.log('%cDEBUG', 'background: #eee; color: #888', message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tconsole.log('%c INFO', 'color: #33f', message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tconsole.log('%c WARN', 'color: #993', message, ...args);\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tconsole.log('%c  ERR', 'color: #f33', message, ...args);\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tconsole.log('%cCRITI', 'background: #f33; color: white', message, ...args);\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n}\n\nexport class AdapterLogger extends AbstractLogger implements ILogger {\n\n\tconstructor(private readonly adapter: { log: (logLevel: LogLevel, args: any[]) => void }, logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tthis.adapter.log(LogLevel.Trace, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tthis.adapter.log(LogLevel.Debug, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tthis.adapter.log(LogLevel.Info, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tthis.adapter.log(LogLevel.Warning, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tthis.adapter.log(LogLevel.Error, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tthis.adapter.log(LogLevel.Critical, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tprivate extractMessage(msg: string | Error): string {\n\t\tif (typeof msg === 'string') {\n\t\t\treturn msg;\n\t\t}\n\n\t\treturn toErrorMessage(msg, this.getLevel() <= LogLevel.Trace);\n\t}\n\n\toverride dispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n}\n\nexport class MultiplexLogService extends AbstractLogger implements ILogService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private readonly logServices: ReadonlyArray<ILogger>) {\n\t\tsuper();\n\t\tif (logServices.length) {\n\t\t\tthis.setLevel(logServices[0].getLevel());\n\t\t}\n\t}\n\n\toverride setLevel(level: LogLevel): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.setLevel(level);\n\t\t}\n\t\tsuper.setLevel(level);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.trace(message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.debug(message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.info(message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.warn(message, ...args);\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.error(message, ...args);\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.critical(message, ...args);\n\t\t}\n\t}\n\n\tflush(): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.flush();\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.dispose();\n\t\t}\n\t}\n}\n\nexport class LogService extends Disposable implements ILogService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private logger: ILogger) {\n\t\tsuper();\n\t\tthis._register(logger);\n\t}\n\n\tget onDidChangeLogLevel(): Event<LogLevel> {\n\t\treturn this.logger.onDidChangeLogLevel;\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tthis.logger.setLevel(level);\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.logger.getLevel();\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tthis.logger.trace(message, ...args);\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tthis.logger.debug(message, ...args);\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tthis.logger.info(message, ...args);\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tthis.logger.warn(message, ...args);\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tthis.logger.error(message, ...args);\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tthis.logger.critical(message, ...args);\n\t}\n\n\tflush(): void {\n\t\tthis.logger.flush();\n\t}\n}\n\nexport abstract class AbstractLoggerService extends Disposable implements ILoggerService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly loggers = new Map<string, ILogger>();\n\tprivate readonly logLevelChangeableLoggers: ILogger[] = [];\n\n\tconstructor(\n\t\tprivate logLevel: LogLevel,\n\t\tonDidChangeLogLevel: Event<LogLevel>,\n\t) {\n\t\tsuper();\n\t\tthis._register(onDidChangeLogLevel(logLevel => {\n\t\t\tthis.logLevel = logLevel;\n\t\t\tthis.logLevelChangeableLoggers.forEach(logger => logger.setLevel(logLevel));\n\t\t}));\n\t}\n\n\tgetLogger(resource: URI) {\n\t\treturn this.loggers.get(resource.toString());\n\t}\n\n\tcreateLogger(resource: URI, options?: ILoggerOptions): ILogger {\n\t\tlet logger = this.loggers.get(resource.toString());\n\t\tif (!logger) {\n\t\t\tlogger = this.doCreateLogger(resource, options?.always ? LogLevel.Trace : this.logLevel, options);\n\t\t\tthis.loggers.set(resource.toString(), logger);\n\t\t\tif (!options?.always) {\n\t\t\t\tthis.logLevelChangeableLoggers.push(logger);\n\t\t\t}\n\t\t}\n\t\treturn logger;\n\t}\n\n\toverride dispose(): void {\n\t\tthis.logLevelChangeableLoggers.splice(0, this.logLevelChangeableLoggers.length);\n\t\tthis.loggers.forEach(logger => logger.dispose());\n\t\tthis.loggers.clear();\n\t\tsuper.dispose();\n\t}\n\n\tprotected abstract doCreateLogger(resource: URI, logLevel: LogLevel, options?: ILoggerOptions): ILogger;\n}\n\nexport class NullLogService implements ILogService {\n\tdeclare readonly _serviceBrand: undefined;\n\treadonly onDidChangeLogLevel: Event<LogLevel> = new Emitter<LogLevel>().event;\n\tsetLevel(level: LogLevel): void { }\n\tgetLevel(): LogLevel { return LogLevel.Info; }\n\ttrace(message: string, ...args: any[]): void { }\n\tdebug(message: string, ...args: any[]): void { }\n\tinfo(message: string, ...args: any[]): void { }\n\twarn(message: string, ...args: any[]): void { }\n\terror(message: string | Error, ...args: any[]): void { }\n\tcritical(message: string | Error, ...args: any[]): void { }\n\tdispose(): void { }\n\tflush(): void { }\n}\n\nexport function getLogLevel(environmentService: IEnvironmentService): LogLevel {\n\tif (environmentService.verbose) {\n\t\treturn LogLevel.Trace;\n\t}\n\tif (typeof environmentService.logLevel === 'string') {\n\t\tconst logLevel = parseLogLevel(environmentService.logLevel.toLowerCase());\n\t\tif (logLevel !== undefined) {\n\t\t\treturn logLevel;\n\t\t}\n\t}\n\treturn DEFAULT_LOG_LEVEL;\n}\n\nexport function parseLogLevel(logLevel: string): LogLevel | undefined {\n\tswitch (logLevel) {\n\t\tcase 'trace':\n\t\t\treturn LogLevel.Trace;\n\t\tcase 'debug':\n\t\t\treturn LogLevel.Debug;\n\t\tcase 'info':\n\t\t\treturn LogLevel.Info;\n\t\tcase 'warn':\n\t\t\treturn LogLevel.Warning;\n\t\tcase 'error':\n\t\t\treturn LogLevel.Error;\n\t\tcase 'critical':\n\t\t\treturn LogLevel.Critical;\n\t\tcase 'off':\n\t\t\treturn LogLevel.Off;\n\t}\n\treturn undefined;\n}\n\nexport function LogLevelToString(logLevel: LogLevel): string {\n\tswitch (logLevel) {\n\t\tcase LogLevel.Trace: return 'trace';\n\t\tcase LogLevel.Debug: return 'debug';\n\t\tcase LogLevel.Info: return 'info';\n\t\tcase LogLevel.Warning: return 'warn';\n\t\tcase LogLevel.Error: return 'error';\n\t\tcase LogLevel.Critical: return 'critical';\n\t\tcase LogLevel.Off: return 'off';\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { basename, dirname, join } from 'vs/base/common/path';\nimport { Promises } from 'vs/base/node/pfs';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nexport class LogsDataCleaner extends Disposable {\n\n\tconstructor(\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\n\t\tconst scheduler = this._register(new RunOnceScheduler(() => {\n\t\t\tthis.cleanUpOldLogs();\n\t\t}, 10 * 1000 /* after 10s */));\n\t\tscheduler.schedule();\n\t}\n\n\tprivate async cleanUpOldLogs(): Promise<void> {\n\t\tthis.logService.trace('[logs cleanup]: Starting to clean up old logs.');\n\n\t\ttry {\n\t\t\tconst currentLog = basename(this.environmentService.logsPath);\n\t\t\tconst logsRoot = dirname(this.environmentService.logsPath);\n\n\t\t\tconst logFiles = await Promises.readdir(logsRoot);\n\n\t\t\tconst allSessions = logFiles.filter(logFile => /^\\d{8}T\\d{6}$/.test(logFile));\n\t\t\tconst oldSessions = allSessions.sort().filter(session => session !== currentLog);\n\t\t\tconst sessionsToDelete = oldSessions.slice(0, Math.max(0, oldSessions.length - 9));\n\n\t\t\tif (sessionsToDelete.length > 0) {\n\t\t\t\tthis.logService.trace(`[logs cleanup]: Removing log folders '${sessionsToDelete.join(', ')}'`);\n\n\t\t\t\tawait Promise.all(sessionsToDelete.map(sessionToDelete => Promises.rm(join(logsRoot, sessionToDelete))));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tonUnexpectedError(error);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { join } from 'vs/base/common/path';\nimport { Promises } from 'vs/base/node/pfs';\nimport { IBackupWorkspacesFormat } from 'vs/platform/backup/node/backup';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nexport class StorageDataCleaner extends Disposable {\n\n\t// Workspace/Folder storage names are MD5 hashes (128bits / 4 due to hex presentation)\n\tprivate static readonly NON_EMPTY_WORKSPACE_ID_LENGTH = 128 / 4;\n\n\t// Reserved empty window workspace storage name when in extension development\n\tprivate static readonly EXTENSION_DEV_EMPTY_WINDOW_ID = 'ext-dev';\n\n\tconstructor(\n\t\tprivate readonly backupWorkspacesPath: string,\n\t\t@INativeEnvironmentService private readonly environmentService: INativeEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\n\t\tconst scheduler = this._register(new RunOnceScheduler(() => {\n\t\t\tthis.cleanUpStorage();\n\t\t}, 30 * 1000 /* after 30s */));\n\t\tscheduler.schedule();\n\t}\n\n\tprivate async cleanUpStorage(): Promise<void> {\n\t\tthis.logService.trace('[storage cleanup]: Starting to clean up storage folders.');\n\n\t\ttry {\n\n\t\t\t// Leverage the backup workspace file to find out which empty workspace is currently in use to\n\t\t\t// determine which empty workspace storage can safely be deleted\n\t\t\tconst contents = await Promises.readFile(this.backupWorkspacesPath, 'utf8');\n\n\t\t\tconst workspaces = JSON.parse(contents) as IBackupWorkspacesFormat;\n\t\t\tconst emptyWorkspaces = workspaces.emptyWorkspaceInfos.map(emptyWorkspace => emptyWorkspace.backupFolder);\n\n\t\t\t// Read all workspace storage folders that exist & cleanup unused\n\t\t\tconst workspaceStorageFolders = await Promises.readdir(this.environmentService.workspaceStorageHome.fsPath);\n\t\t\tawait Promise.all(workspaceStorageFolders.map(async workspaceStorageFolder => {\n\t\t\t\tif (\n\t\t\t\t\tworkspaceStorageFolder.length === StorageDataCleaner.NON_EMPTY_WORKSPACE_ID_LENGTH || \t// keep non-empty workspaces\n\t\t\t\t\tworkspaceStorageFolder === StorageDataCleaner.EXTENSION_DEV_EMPTY_WINDOW_ID ||\t\t\t// keep empty extension dev workspaces\n\t\t\t\t\temptyWorkspaces.indexOf(workspaceStorageFolder) >= 0\t\t\t\t\t\t\t\t\t// keep empty workspaces that are in use\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.logService.trace(`[storage cleanup]: Deleting workspace storage folder ${workspaceStorageFolder}.`);\n\n\t\t\t\tawait Promises.rm(join(this.environmentService.workspaceStorageHome.fsPath, workspaceStorageFolder));\n\t\t\t}));\n\t\t} catch (error) {\n\t\t\tonUnexpectedError(error);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Queue } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { JSONPath, parse, ParseError } from 'vs/base/common/json';\nimport { setProperty } from 'vs/base/common/jsonEdit';\nimport { Edit, FormattingOptions } from 'vs/base/common/jsonFormatter';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { FileOperationError, FileOperationResult, IFileService, IWriteFileOptions } from 'vs/platform/files/common/files';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nexport const enum UserConfigurationErrorCode {\n\tERROR_INVALID_FILE = 'ERROR_INVALID_FILE',\n\tERROR_FILE_MODIFIED_SINCE = 'ERROR_FILE_MODIFIED_SINCE'\n}\n\nexport interface IJSONValue {\n\tpath: JSONPath;\n\tvalue: any;\n}\n\nexport const UserConfigurationFileServiceId = 'IUserConfigurationFileService';\nexport const IUserConfigurationFileService = createDecorator<IUserConfigurationFileService>(UserConfigurationFileServiceId);\n\nexport interface IUserConfigurationFileService {\n\treadonly _serviceBrand: undefined;\n\n\tupdateSettings(value: IJSONValue, formattingOptions: FormattingOptions): Promise<void>;\n\twrite(value: VSBuffer, options?: IWriteFileOptions): Promise<void>;\n}\n\nexport class UserConfigurationFileService implements IUserConfigurationFileService {\n\n\treadonly _serviceBrand: undefined;\n\n\tprivate readonly queue: Queue<void>;\n\n\tconstructor(\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t\tthis.queue = new Queue<void>();\n\t}\n\n\tasync updateSettings(value: IJSONValue, formattingOptions: FormattingOptions): Promise<void> {\n\t\treturn this.queue.queue(() => this.doWrite(value, formattingOptions)); // queue up writes to prevent race conditions\n\t}\n\n\tprivate async doWrite(jsonValue: IJSONValue, formattingOptions: FormattingOptions): Promise<void> {\n\t\tthis.logService.trace(`${UserConfigurationFileServiceId}#write`, this.environmentService.settingsResource.toString(), jsonValue);\n\t\tconst { value, mtime, etag } = await this.fileService.readFile(this.environmentService.settingsResource, { atomic: true });\n\t\tlet content = value.toString();\n\n\t\tconst parseErrors: ParseError[] = [];\n\t\tparse(content, parseErrors, { allowTrailingComma: true, allowEmptyContent: true });\n\t\tif (parseErrors.length) {\n\t\t\tthrow new Error(UserConfigurationErrorCode.ERROR_INVALID_FILE);\n\t\t}\n\n\t\tconst edit = this.getEdits(jsonValue, content, formattingOptions)[0];\n\t\tif (edit) {\n\t\t\tcontent = content.substring(0, edit.offset) + edit.content + content.substring(edit.offset + edit.length);\n\t\t\ttry {\n\t\t\t\tawait this.fileService.writeFile(this.environmentService.settingsResource, VSBuffer.fromString(content), { etag, mtime });\n\t\t\t} catch (error) {\n\t\t\t\tif ((<FileOperationError>error).fileOperationResult === FileOperationResult.FILE_MODIFIED_SINCE) {\n\t\t\t\t\tthrow new Error(UserConfigurationErrorCode.ERROR_FILE_MODIFIED_SINCE);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tasync write(content: VSBuffer, options?: IWriteFileOptions): Promise<void> {\n\t\t// queue up writes to prevent race conditions\n\t\treturn this.queue.queue(async () => {\n\t\t\tawait this.fileService.writeFile(this.environmentService.settingsResource, content, options);\n\t\t});\n\t}\n\n\tprivate getEdits({ value, path }: IJSONValue, modelContent: string, formattingOptions: FormattingOptions): Edit[] {\n\t\tif (path.length) {\n\t\t\treturn setProperty(modelContent, path, value, formattingOptions);\n\t\t}\n\n\t\t// Without jsonPath, the entire configuration file is being replaced, so we just use JSON.stringify\n\t\tconst content = JSON.stringify(value, null, formattingOptions.insertSpaces && formattingOptions.tabSize ? ' '.repeat(formattingOptions.tabSize) : '\\t');\n\t\treturn [{\n\t\t\tcontent,\n\t\t\tlength: modelContent.length,\n\t\t\toffset: 0\n\t\t}];\n\t}\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ChildProcess, fork } from 'child_process';\nimport { Limiter } from 'vs/base/common/async';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport { join } from 'vs/base/common/path';\nimport { Promises } from 'vs/base/node/pfs';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ILocalExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nexport class ExtensionsLifecycle extends Disposable {\n\n\tprivate processesLimiter: Limiter<void> = new Limiter(5); // Run max 5 processes in parallel\n\n\tconstructor(\n\t\t@IEnvironmentService private environmentService: IEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t}\n\n\tasync postUninstall(extension: ILocalExtension): Promise<void> {\n\t\tconst script = this.parseScript(extension, 'uninstall');\n\t\tif (script) {\n\t\t\tthis.logService.info(extension.identifier.id, extension.manifest.version, `Running post uninstall script`);\n\t\t\tawait this.processesLimiter.queue(() =>\n\t\t\t\tthis.runLifecycleHook(script.script, 'uninstall', script.args, true, extension)\n\t\t\t\t\t.then(() => this.logService.info(extension.identifier.id, extension.manifest.version, `Finished running post uninstall script`), err => this.logService.error(extension.identifier.id, extension.manifest.version, `Failed to run post uninstall script: ${err}`)));\n\t\t}\n\t\treturn Promises.rm(this.getExtensionStoragePath(extension)).then(undefined, e => this.logService.error('Error while removing extension storage path', e));\n\t}\n\n\tprivate parseScript(extension: ILocalExtension, type: string): { script: string, args: string[] } | null {\n\t\tconst scriptKey = `vscode:${type}`;\n\t\tif (extension.location.scheme === Schemas.file && extension.manifest && extension.manifest['scripts'] && typeof extension.manifest['scripts'][scriptKey] === 'string') {\n\t\t\tconst script = (<string>extension.manifest['scripts'][scriptKey]).split(' ');\n\t\t\tif (script.length < 2 || script[0] !== 'node' || !script[1]) {\n\t\t\t\tthis.logService.warn(extension.identifier.id, extension.manifest.version, `${scriptKey} should be a node script`);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn { script: join(extension.location.fsPath, script[1]), args: script.slice(2) || [] };\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate runLifecycleHook(lifecycleHook: string, lifecycleType: string, args: string[], timeout: boolean, extension: ILocalExtension): Promise<void> {\n\t\treturn new Promise<void>((c, e) => {\n\n\t\t\tconst extensionLifecycleProcess = this.start(lifecycleHook, lifecycleType, args, extension);\n\t\t\tlet timeoutHandler: any;\n\n\t\t\tconst onexit = (error?: string) => {\n\t\t\t\tif (timeoutHandler) {\n\t\t\t\t\tclearTimeout(timeoutHandler);\n\t\t\t\t\ttimeoutHandler = null;\n\t\t\t\t}\n\t\t\t\tif (error) {\n\t\t\t\t\te(error);\n\t\t\t\t} else {\n\t\t\t\t\tc(undefined);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// on error\n\t\t\textensionLifecycleProcess.on('error', (err) => {\n\t\t\t\tonexit(toErrorMessage(err) || 'Unknown');\n\t\t\t});\n\n\t\t\t// on exit\n\t\t\textensionLifecycleProcess.on('exit', (code: number, signal: string) => {\n\t\t\t\tonexit(code ? `post-${lifecycleType} process exited with code ${code}` : undefined);\n\t\t\t});\n\n\t\t\tif (timeout) {\n\t\t\t\t// timeout: kill process after waiting for 5s\n\t\t\t\ttimeoutHandler = setTimeout(() => {\n\t\t\t\t\ttimeoutHandler = null;\n\t\t\t\t\textensionLifecycleProcess.kill();\n\t\t\t\t\te('timed out');\n\t\t\t\t}, 5000);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate start(uninstallHook: string, lifecycleType: string, args: string[], extension: ILocalExtension): ChildProcess {\n\t\tconst opts = {\n\t\t\tsilent: true,\n\t\t\texecArgv: undefined\n\t\t};\n\t\tconst extensionUninstallProcess = fork(uninstallHook, [`--type=extension-post-${lifecycleType}`, ...args], opts);\n\n\t\t// Catch all output coming from the process\n\t\ttype Output = { data: string, format: string[] };\n\t\textensionUninstallProcess.stdout!.setEncoding('utf8');\n\t\textensionUninstallProcess.stderr!.setEncoding('utf8');\n\n\t\tconst onStdout = Event.fromNodeEventEmitter<string>(extensionUninstallProcess.stdout!, 'data');\n\t\tconst onStderr = Event.fromNodeEventEmitter<string>(extensionUninstallProcess.stderr!, 'data');\n\n\t\t// Log output\n\t\tonStdout(data => this.logService.info(extension.identifier.id, extension.manifest.version, `post-${lifecycleType}`, data));\n\t\tonStderr(data => this.logService.error(extension.identifier.id, extension.manifest.version, `post-${lifecycleType}`, data));\n\n\t\tconst onOutput = Event.any(\n\t\t\tEvent.map(onStdout, o => ({ data: `%c${o}`, format: [''] })),\n\t\t\tEvent.map(onStderr, o => ({ data: `%c${o}`, format: ['color: red'] }))\n\t\t);\n\t\t// Debounce all output, so we can render it in the Chrome console as a group\n\t\tconst onDebouncedOutput = Event.debounce<Output>(onOutput, (r, o) => {\n\t\t\treturn r\n\t\t\t\t? { data: r.data + o.data, format: [...r.format, ...o.format] }\n\t\t\t\t: { data: o.data, format: o.format };\n\t\t}, 100);\n\n\t\t// Print out output\n\t\tonDebouncedOutput(data => {\n\t\t\tconsole.group(extension.identifier.id);\n\t\t\tconsole.log(data.data, ...data.format);\n\t\t\tconsole.groupEnd();\n\t\t});\n\n\t\treturn extensionUninstallProcess;\n\t}\n\n\tprivate getExtensionStoragePath(extension: ILocalExtension): string {\n\t\treturn join(this.environmentService.globalStorageHome.fsPath, extension.identifier.id.toLowerCase());\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { insert } from 'vs/base/common/arrays';\nimport { ThrottledDelayer } from 'vs/base/common/async';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Emitter } from 'vs/base/common/event';\nimport { combinedDisposable, Disposable, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { normalize } from 'vs/base/common/path';\nimport { URI } from 'vs/base/common/uri';\nimport { IFileChange, IWatchOptions } from 'vs/platform/files/common/files';\nimport { IDiskFileChange, ILogMessage, IWatchRequest, toFileChanges, WatcherService } from 'vs/platform/files/common/watcher';\nimport { ILogService, LogLevel } from 'vs/platform/log/common/log';\n\nexport abstract class AbstractDiskFileSystemProvider extends Disposable {\n\n\tconstructor(\n\t\tprotected readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t}\n\n\t//#region File Watching\n\n\tprotected readonly _onDidErrorOccur = this._register(new Emitter<string>());\n\treadonly onDidErrorOccur = this._onDidErrorOccur.event;\n\n\tprotected readonly _onDidChangeFile = this._register(new Emitter<readonly IFileChange[]>());\n\treadonly onDidChangeFile = this._onDidChangeFile.event;\n\n\tprivate recursiveWatcher: WatcherService | undefined;\n\tprivate readonly recursiveFoldersToWatch: IWatchRequest[] = [];\n\tprivate recursiveWatchRequestDelayer = this._register(new ThrottledDelayer<void>(0));\n\n\twatch(resource: URI, opts: IWatchOptions): IDisposable {\n\t\tif (opts.recursive) {\n\t\t\treturn this.watchRecursive(resource, opts);\n\t\t}\n\n\t\treturn this.watchNonRecursive(resource);\n\t}\n\n\tprivate watchRecursive(resource: URI, opts: IWatchOptions): IDisposable {\n\n\t\t// Add to list of folders to watch recursively\n\t\tconst folderToWatch: IWatchRequest = { path: this.toFilePath(resource), excludes: opts.excludes };\n\t\tconst remove = insert(this.recursiveFoldersToWatch, folderToWatch);\n\n\t\t// Trigger update\n\t\tthis.refreshRecursiveWatchers();\n\n\t\treturn toDisposable(() => {\n\n\t\t\t// Remove from list of folders to watch recursively\n\t\t\tremove();\n\n\t\t\t// Trigger update\n\t\t\tthis.refreshRecursiveWatchers();\n\t\t});\n\t}\n\n\tprivate refreshRecursiveWatchers(): void {\n\n\t\t// Buffer requests for recursive watching to decide on right watcher\n\t\t// that supports potentially watching more than one folder at once\n\t\tthis.recursiveWatchRequestDelayer.trigger(() => {\n\t\t\treturn this.doRefreshRecursiveWatchers();\n\t\t}).catch(error => onUnexpectedError(error));\n\t}\n\n\tprivate doRefreshRecursiveWatchers(): Promise<void> {\n\n\t\t// Create watcher if this is the first time\n\t\tif (!this.recursiveWatcher) {\n\t\t\tthis.recursiveWatcher = this._register(this.createRecursiveWatcher(\n\t\t\t\tchanges => this._onDidChangeFile.fire(toFileChanges(changes)),\n\t\t\t\tmsg => this.onWatcherLogMessage(msg),\n\t\t\t\tthis.logService.getLevel() === LogLevel.Trace\n\t\t\t));\n\n\t\t\t// Apply log levels dynamically\n\t\t\tthis._register(this.logService.onDidChangeLogLevel(() => {\n\t\t\t\tthis.recursiveWatcher?.setVerboseLogging(this.logService.getLevel() === LogLevel.Trace);\n\t\t\t}));\n\t\t}\n\n\t\t// Ask to watch the provided folders\n\t\treturn this.doWatch(this.recursiveWatcher, this.recursiveFoldersToWatch);\n\t}\n\n\tprotected doWatch(watcher: WatcherService, requests: IWatchRequest[]): Promise<void> {\n\t\treturn watcher.watch(requests);\n\t}\n\n\tprotected abstract createRecursiveWatcher(\n\t\tonChange: (changes: IDiskFileChange[]) => void,\n\t\tonLogMessage: (msg: ILogMessage) => void,\n\t\tverboseLogging: boolean\n\t): WatcherService;\n\n\tprivate watchNonRecursive(resource: URI): IDisposable {\n\t\tconst watcherService = this.createNonRecursiveWatcher(\n\t\t\tthis.toFilePath(resource),\n\t\t\tchanges => this._onDidChangeFile.fire(toFileChanges(changes)),\n\t\t\tmsg => this.onWatcherLogMessage(msg),\n\t\t\tthis.logService.getLevel() === LogLevel.Trace\n\t\t);\n\n\t\tconst logLevelListener = this.logService.onDidChangeLogLevel(() => {\n\t\t\twatcherService.setVerboseLogging(this.logService.getLevel() === LogLevel.Trace);\n\t\t});\n\n\t\treturn combinedDisposable(watcherService, logLevelListener);\n\t}\n\n\tprivate onWatcherLogMessage(msg: ILogMessage): void {\n\t\tif (msg.type === 'error') {\n\t\t\tthis._onDidErrorOccur.fire(msg.message);\n\t\t}\n\n\t\tthis.logService[msg.type](msg.message);\n\t}\n\n\tprotected abstract createNonRecursiveWatcher(\n\t\tpath: string,\n\t\tonChange: (changes: IDiskFileChange[]) => void,\n\t\tonLogMessage: (msg: ILogMessage) => void,\n\t\tverboseLogging: boolean\n\t): IDisposable & { setVerboseLogging: (verboseLogging: boolean) => void };\n\n\tprotected toFilePath(resource: URI): string {\n\t\treturn normalize(resource.fsPath);\n\t}\n\n\t//#endregion\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { coalesce } from 'vs/base/common/arrays';\nimport { Promises, ResourceQueue, ThrottledWorker } from 'vs/base/common/async';\nimport { bufferedStreamToBuffer, bufferToReadable, newWriteableBufferStream, readableToBuffer, streamToBuffer, VSBuffer, VSBufferReadable, VSBufferReadableBufferedStream, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { Emitter } from 'vs/base/common/event';\nimport { Iterable } from 'vs/base/common/iterator';\nimport { Disposable, DisposableStore, dispose, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { Schemas } from 'vs/base/common/network';\nimport { mark } from 'vs/base/common/performance';\nimport { extUri, extUriIgnorePathCase, IExtUri, isAbsolutePath } from 'vs/base/common/resources';\nimport { consumeStream, isReadableBufferedStream, isReadableStream, listenStream, newWriteableStream, peekReadable, peekStream, transform } from 'vs/base/common/stream';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { ensureFileSystemProviderError, etag, ETAG_DISABLED, FileChangesEvent, FileDeleteOptions, FileOperation, FileOperationError, FileOperationEvent, FileOperationResult, FilePermission, FileSystemProviderCapabilities, FileSystemProviderErrorCode, FileType, hasFileFolderCopyCapability, hasFileReadStreamCapability, hasOpenReadWriteCloseCapability, hasReadWriteCapability, ICreateFileOptions, IFileChange, IFileContent, IFileService, IFileStat, IFileStatWithMetadata, IFileStreamContent, IFileSystemProvider, IFileSystemProviderActivationEvent, IFileSystemProviderCapabilitiesChangeEvent, IFileSystemProviderRegistrationEvent, IFileSystemProviderWithFileReadStreamCapability, IFileSystemProviderWithFileReadWriteCapability, IFileSystemProviderWithOpenReadWriteCloseCapability, IRawFileChangesEvent, IReadFileOptions, IReadFileStreamOptions, IResolveFileOptions, IResolveFileResult, IResolveFileResultWithMetadata, IResolveMetadataFileOptions, IStat, IWatchOptions, IWriteFileOptions, NotModifiedSinceFileOperationError, toFileOperationResult, toFileSystemProviderErrorCode } from 'vs/platform/files/common/files';\nimport { readFileIntoStream } from 'vs/platform/files/common/io';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nexport class FileService extends Disposable implements IFileService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\t// Choose a buffer size that is a balance between memory needs and\n\t// manageable IPC overhead. The larger the buffer size, the less\n\t// roundtrips we have to do for reading/writing data.\n\tprivate readonly BUFFER_SIZE = 256 * 1024;\n\n\tconstructor(@ILogService private readonly logService: ILogService) {\n\t\tsuper();\n\t}\n\n\t//#region File System Provider\n\n\tprivate readonly _onDidChangeFileSystemProviderRegistrations = this._register(new Emitter<IFileSystemProviderRegistrationEvent>());\n\treadonly onDidChangeFileSystemProviderRegistrations = this._onDidChangeFileSystemProviderRegistrations.event;\n\n\tprivate readonly _onWillActivateFileSystemProvider = this._register(new Emitter<IFileSystemProviderActivationEvent>());\n\treadonly onWillActivateFileSystemProvider = this._onWillActivateFileSystemProvider.event;\n\n\tprivate readonly _onDidChangeFileSystemProviderCapabilities = this._register(new Emitter<IFileSystemProviderCapabilitiesChangeEvent>());\n\treadonly onDidChangeFileSystemProviderCapabilities = this._onDidChangeFileSystemProviderCapabilities.event;\n\n\tprivate readonly provider = new Map<string, IFileSystemProvider>();\n\n\tregisterProvider(scheme: string, provider: IFileSystemProvider): IDisposable {\n\t\tif (this.provider.has(scheme)) {\n\t\t\tthrow new Error(`A filesystem provider for the scheme '${scheme}' is already registered.`);\n\t\t}\n\n\t\tmark(`code/registerFilesystem/${scheme}`);\n\n\t\t// Add provider with event\n\t\tthis.provider.set(scheme, provider);\n\t\tthis._onDidChangeFileSystemProviderRegistrations.fire({ added: true, scheme, provider });\n\n\t\t// Forward events from provider\n\t\tconst providerDisposables = new DisposableStore();\n\t\tproviderDisposables.add(provider.onDidChangeFile(changes => this.onDidChangeFile(changes, this.isPathCaseSensitive(provider))));\n\t\tproviderDisposables.add(provider.onDidChangeCapabilities(() => this._onDidChangeFileSystemProviderCapabilities.fire({ provider, scheme })));\n\t\tif (typeof provider.onDidErrorOccur === 'function') {\n\t\t\tproviderDisposables.add(provider.onDidErrorOccur(error => this._onError.fire(new Error(error))));\n\t\t}\n\n\t\treturn toDisposable(() => {\n\t\t\tthis._onDidChangeFileSystemProviderRegistrations.fire({ added: false, scheme, provider });\n\t\t\tthis.provider.delete(scheme);\n\n\t\t\tdispose(providerDisposables);\n\t\t});\n\t}\n\n\tgetProvider(scheme: string): IFileSystemProvider | undefined {\n\t\treturn this.provider.get(scheme);\n\t}\n\n\tasync activateProvider(scheme: string): Promise<void> {\n\n\t\t// Emit an event that we are about to activate a provider with the given scheme.\n\t\t// Listeners can participate in the activation by registering a provider for it.\n\t\tconst joiners: Promise<void>[] = [];\n\t\tthis._onWillActivateFileSystemProvider.fire({\n\t\t\tscheme,\n\t\t\tjoin(promise) {\n\t\t\t\tjoiners.push(promise);\n\t\t\t},\n\t\t});\n\n\t\tif (this.provider.has(scheme)) {\n\t\t\treturn; // provider is already here so we can return directly\n\t\t}\n\n\t\t// If the provider is not yet there, make sure to join on the listeners assuming\n\t\t// that it takes a bit longer to register the file system provider.\n\t\tawait Promises.settled(joiners);\n\t}\n\n\tasync canHandleResource(resource: URI): Promise<boolean> {\n\n\t\t// Await activation of potentially extension contributed providers\n\t\tawait this.activateProvider(resource.scheme);\n\n\t\treturn this.hasProvider(resource);\n\t}\n\n\thasProvider(resource: URI): boolean {\n\t\treturn this.provider.has(resource.scheme);\n\t}\n\n\thasCapability(resource: URI, capability: FileSystemProviderCapabilities): boolean {\n\t\tconst provider = this.provider.get(resource.scheme);\n\n\t\treturn !!(provider && (provider.capabilities & capability));\n\t}\n\n\tlistCapabilities(): Iterable<{ scheme: string, capabilities: FileSystemProviderCapabilities; }> {\n\t\treturn Iterable.map(this.provider, ([scheme, provider]) => ({ scheme, capabilities: provider.capabilities }));\n\t}\n\n\tprotected async withProvider(resource: URI): Promise<IFileSystemProvider> {\n\n\t\t// Assert path is absolute\n\t\tif (!isAbsolutePath(resource)) {\n\t\t\tthrow new FileOperationError(localize('invalidPath', \"Unable to resolve filesystem provider with relative file path '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_INVALID_PATH);\n\t\t}\n\n\t\t// Activate provider\n\t\tawait this.activateProvider(resource.scheme);\n\n\t\t// Assert provider\n\t\tconst provider = this.provider.get(resource.scheme);\n\t\tif (!provider) {\n\t\t\tconst error = new Error();\n\t\t\terror.name = 'ENOPRO';\n\t\t\terror.message = localize('noProviderFound', \"No file system provider found for resource '{0}'\", resource.toString());\n\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn provider;\n\t}\n\n\tprivate async withReadProvider(resource: URI): Promise<IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability | IFileSystemProviderWithFileReadStreamCapability> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\tif (hasOpenReadWriteCloseCapability(provider) || hasReadWriteCapability(provider) || hasFileReadStreamCapability(provider)) {\n\t\t\treturn provider;\n\t\t}\n\n\t\tthrow new Error(`Filesystem provider for scheme '${resource.scheme}' neither has FileReadWrite, FileReadStream nor FileOpenReadWriteClose capability which is needed for the read operation.`);\n\t}\n\n\tprivate async withWriteProvider(resource: URI): Promise<IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\tif (hasOpenReadWriteCloseCapability(provider) || hasReadWriteCapability(provider)) {\n\t\t\treturn provider;\n\t\t}\n\n\t\tthrow new Error(`Filesystem provider for scheme '${resource.scheme}' neither has FileReadWrite nor FileOpenReadWriteClose capability which is needed for the write operation.`);\n\t}\n\n\t//#endregion\n\n\tprivate readonly _onDidRunOperation = this._register(new Emitter<FileOperationEvent>());\n\treadonly onDidRunOperation = this._onDidRunOperation.event;\n\n\tprivate readonly _onError = this._register(new Emitter<Error>());\n\treadonly onError = this._onError.event;\n\n\t//#region File Metadata Resolving\n\n\tasync resolve(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tasync resolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\tasync resolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat> {\n\t\ttry {\n\t\t\treturn await this.doResolveFile(resource, options);\n\t\t} catch (error) {\n\n\t\t\t// Specially handle file not found case as file operation result\n\t\t\tif (toFileSystemProviderErrorCode(error) === FileSystemProviderErrorCode.FileNotFound) {\n\t\t\t\tthrow new FileOperationError(localize('fileNotFoundError', \"Unable to resolve nonexistent file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_NOT_FOUND);\n\t\t\t}\n\n\t\t\t// Bubble up any other error as is\n\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprivate async doResolveFile(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tprivate async doResolveFile(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\tprivate async doResolveFile(resource: URI, options?: IResolveFileOptions): Promise<IFileStat> {\n\t\tconst provider = await this.withProvider(resource);\n\t\tconst isPathCaseSensitive = this.isPathCaseSensitive(provider);\n\n\t\tconst resolveTo = options?.resolveTo;\n\t\tconst resolveSingleChildDescendants = options?.resolveSingleChildDescendants;\n\t\tconst resolveMetadata = options?.resolveMetadata;\n\n\t\tconst stat = await provider.stat(resource);\n\n\t\tlet trie: TernarySearchTree<URI, boolean> | undefined;\n\n\t\treturn this.toFileStat(provider, resource, stat, undefined, !!resolveMetadata, (stat, siblings) => {\n\n\t\t\t// lazy trie to check for recursive resolving\n\t\t\tif (!trie) {\n\t\t\t\ttrie = TernarySearchTree.forUris<true>(() => !isPathCaseSensitive);\n\t\t\t\ttrie.set(resource, true);\n\t\t\t\tif (resolveTo) {\n\t\t\t\t\ttrie.fill(true, resolveTo);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// check for recursive resolving\n\t\t\tif (trie.get(stat.resource) || trie.findSuperstr(stat.resource.with({ query: null, fragment: null } /* required for https://github.com/microsoft/vscode/issues/128151 */))) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// check for resolving single child folders\n\t\t\tif (stat.isDirectory && resolveSingleChildDescendants) {\n\t\t\t\treturn siblings === 1;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tprivate async toFileStat(provider: IFileSystemProvider, resource: URI, stat: IStat | { type: FileType; } & Partial<IStat>, siblings: number | undefined, resolveMetadata: boolean, recurse: (stat: IFileStat, siblings?: number) => boolean): Promise<IFileStat>;\n\tprivate async toFileStat(provider: IFileSystemProvider, resource: URI, stat: IStat, siblings: number | undefined, resolveMetadata: true, recurse: (stat: IFileStat, siblings?: number) => boolean): Promise<IFileStatWithMetadata>;\n\tprivate async toFileStat(provider: IFileSystemProvider, resource: URI, stat: IStat | { type: FileType; } & Partial<IStat>, siblings: number | undefined, resolveMetadata: boolean, recurse: (stat: IFileStat, siblings?: number) => boolean): Promise<IFileStat> {\n\t\tconst { providerExtUri } = this.getExtUri(provider);\n\n\t\t// convert to file stat\n\t\tconst fileStat: IFileStat = {\n\t\t\tresource,\n\t\t\tname: providerExtUri.basename(resource),\n\t\t\tisFile: (stat.type & FileType.File) !== 0,\n\t\t\tisDirectory: (stat.type & FileType.Directory) !== 0,\n\t\t\tisSymbolicLink: (stat.type & FileType.SymbolicLink) !== 0,\n\t\t\tmtime: stat.mtime,\n\t\t\tctime: stat.ctime,\n\t\t\tsize: stat.size,\n\t\t\treadonly: Boolean((stat.permissions ?? 0) & FilePermission.Readonly) || Boolean(provider.capabilities & FileSystemProviderCapabilities.Readonly),\n\t\t\tetag: etag({ mtime: stat.mtime, size: stat.size })\n\t\t};\n\n\t\t// check to recurse for directories\n\t\tif (fileStat.isDirectory && recurse(fileStat, siblings)) {\n\t\t\ttry {\n\t\t\t\tconst entries = await provider.readdir(resource);\n\t\t\t\tconst resolvedEntries = await Promises.settled(entries.map(async ([name, type]) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst childResource = providerExtUri.joinPath(resource, name);\n\t\t\t\t\t\tconst childStat = resolveMetadata ? await provider.stat(childResource) : { type };\n\n\t\t\t\t\t\treturn await this.toFileStat(provider, childResource, childStat, entries.length, resolveMetadata, recurse);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.logService.trace(error);\n\n\t\t\t\t\t\treturn null; // can happen e.g. due to permission errors\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\t// make sure to get rid of null values that signal a failure to resolve a particular entry\n\t\t\t\tfileStat.children = coalesce(resolvedEntries);\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.trace(error);\n\n\t\t\t\tfileStat.children = []; // gracefully handle errors, we may not have permissions to read\n\t\t\t}\n\n\t\t\treturn fileStat;\n\t\t}\n\n\t\treturn fileStat;\n\t}\n\n\tasync resolveAll(toResolve: { resource: URI, options?: IResolveFileOptions; }[]): Promise<IResolveFileResult[]>;\n\tasync resolveAll(toResolve: { resource: URI, options: IResolveMetadataFileOptions; }[]): Promise<IResolveFileResultWithMetadata[]>;\n\tasync resolveAll(toResolve: { resource: URI; options?: IResolveFileOptions; }[]): Promise<IResolveFileResult[]> {\n\t\treturn Promises.settled(toResolve.map(async entry => {\n\t\t\ttry {\n\t\t\t\treturn { stat: await this.doResolveFile(entry.resource, entry.options), success: true };\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.trace(error);\n\n\t\t\t\treturn { stat: undefined, success: false };\n\t\t\t}\n\t\t}));\n\t}\n\n\tasync exists(resource: URI): Promise<boolean> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\ttry {\n\t\t\tconst stat = await provider.stat(resource);\n\n\t\t\treturn !!stat;\n\t\t} catch (error) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region File Reading/Writing\n\n\tasync canCreateFile(resource: URI, options?: ICreateFileOptions): Promise<Error | true> {\n\t\ttry {\n\t\t\tawait this.doValidateCreateFile(resource, options);\n\t\t} catch (error) {\n\t\t\treturn error;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate async doValidateCreateFile(resource: URI, options?: ICreateFileOptions): Promise<void> {\n\n\t\t// validate overwrite\n\t\tif (!options?.overwrite && await this.exists(resource)) {\n\t\t\tthrow new FileOperationError(localize('fileExists', \"Unable to create file '{0}' that already exists when overwrite flag is not set\", this.resourceForError(resource)), FileOperationResult.FILE_MODIFIED_SINCE, options);\n\t\t}\n\t}\n\n\tasync createFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream = VSBuffer.fromString(''), options?: ICreateFileOptions): Promise<IFileStatWithMetadata> {\n\n\t\t// validate\n\t\tawait this.doValidateCreateFile(resource, options);\n\n\t\t// do write into file (this will create it too)\n\t\tconst fileStat = await this.writeFile(resource, bufferOrReadableOrStream);\n\n\t\t// events\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(resource, FileOperation.CREATE, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tasync writeFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: IWriteFileOptions): Promise<IFileStatWithMetadata> {\n\t\tconst provider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(resource), resource);\n\t\tconst { providerExtUri } = this.getExtUri(provider);\n\n\t\ttry {\n\n\t\t\t// validate write\n\t\t\tconst stat = await this.validateWriteFile(provider, resource, options);\n\n\t\t\t// mkdir recursively as needed\n\t\t\tif (!stat) {\n\t\t\t\tawait this.mkdirp(provider, providerExtUri.dirname(resource));\n\t\t\t}\n\n\t\t\t// optimization: if the provider has unbuffered write capability and the data\n\t\t\t// to write is a Readable, we consume up to 3 chunks and try to write the data\n\t\t\t// unbuffered to reduce the overhead. If the Readable has more data to provide\n\t\t\t// we continue to write buffered.\n\t\t\tlet bufferOrReadableOrStreamOrBufferedStream: VSBuffer | VSBufferReadable | VSBufferReadableStream | VSBufferReadableBufferedStream;\n\t\t\tif (hasReadWriteCapability(provider) && !(bufferOrReadableOrStream instanceof VSBuffer)) {\n\t\t\t\tif (isReadableStream(bufferOrReadableOrStream)) {\n\t\t\t\t\tconst bufferedStream = await peekStream(bufferOrReadableOrStream, 3);\n\t\t\t\t\tif (bufferedStream.ended) {\n\t\t\t\t\t\tbufferOrReadableOrStreamOrBufferedStream = VSBuffer.concat(bufferedStream.buffer);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbufferOrReadableOrStreamOrBufferedStream = bufferedStream;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbufferOrReadableOrStreamOrBufferedStream = peekReadable(bufferOrReadableOrStream, data => VSBuffer.concat(data), 3);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbufferOrReadableOrStreamOrBufferedStream = bufferOrReadableOrStream;\n\t\t\t}\n\n\t\t\t// write file: unbuffered (only if data to write is a buffer, or the provider has no buffered write capability)\n\t\t\tif (!hasOpenReadWriteCloseCapability(provider) || (hasReadWriteCapability(provider) && bufferOrReadableOrStreamOrBufferedStream instanceof VSBuffer)) {\n\t\t\t\tawait this.doWriteUnbuffered(provider, resource, options, bufferOrReadableOrStreamOrBufferedStream);\n\t\t\t}\n\n\t\t\t// write file: buffered\n\t\t\telse {\n\t\t\t\tawait this.doWriteBuffered(provider, resource, options, bufferOrReadableOrStreamOrBufferedStream instanceof VSBuffer ? bufferToReadable(bufferOrReadableOrStreamOrBufferedStream) : bufferOrReadableOrStreamOrBufferedStream);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthrow new FileOperationError(localize('err.write', \"Unable to write file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options);\n\t\t}\n\n\t\treturn this.resolve(resource, { resolveMetadata: true });\n\t}\n\n\tprivate async validateWriteFile(provider: IFileSystemProvider, resource: URI, options?: IWriteFileOptions): Promise<IStat | undefined> {\n\n\t\t// Validate unlock support\n\t\tconst unlock = !!options?.unlock;\n\t\tif (unlock && !(provider.capabilities & FileSystemProviderCapabilities.FileWriteUnlock)) {\n\t\t\tthrow new Error(localize('writeFailedUnlockUnsupported', \"Unable to unlock file '{0}' because provider does not support it.\", this.resourceForError(resource)));\n\t\t}\n\n\t\t// Validate via file stat meta data\n\t\tlet stat: IStat | undefined = undefined;\n\t\ttry {\n\t\t\tstat = await provider.stat(resource);\n\t\t} catch (error) {\n\t\t\treturn undefined; // file might not exist\n\t\t}\n\n\t\t// File cannot be directory\n\t\tif ((stat.type & FileType.Directory) !== 0) {\n\t\t\tthrow new FileOperationError(localize('fileIsDirectoryWriteError', \"Unable to write file '{0}' that is actually a directory\", this.resourceForError(resource)), FileOperationResult.FILE_IS_DIRECTORY, options);\n\t\t}\n\n\t\t// File cannot be readonly\n\t\tthis.throwIfFileIsReadonly(resource, stat);\n\n\t\t// Dirty write prevention: if the file on disk has been changed and does not match our expected\n\t\t// mtime and etag, we bail out to prevent dirty writing.\n\t\t//\n\t\t// First, we check for a mtime that is in the future before we do more checks. The assumption is\n\t\t// that only the mtime is an indicator for a file that has changed on disk.\n\t\t//\n\t\t// Second, if the mtime has advanced, we compare the size of the file on disk with our previous\n\t\t// one using the etag() function. Relying only on the mtime check has prooven to produce false\n\t\t// positives due to file system weirdness (especially around remote file systems). As such, the\n\t\t// check for size is a weaker check because it can return a false negative if the file has changed\n\t\t// but to the same length. This is a compromise we take to avoid having to produce checksums of\n\t\t// the file content for comparison which would be much slower to compute.\n\t\tif (\n\t\t\ttypeof options?.mtime === 'number' && typeof options.etag === 'string' && options.etag !== ETAG_DISABLED &&\n\t\t\ttypeof stat.mtime === 'number' && typeof stat.size === 'number' &&\n\t\t\toptions.mtime < stat.mtime && options.etag !== etag({ mtime: options.mtime /* not using stat.mtime for a reason, see above */, size: stat.size })\n\t\t) {\n\t\t\tthrow new FileOperationError(localize('fileModifiedError', \"File Modified Since\"), FileOperationResult.FILE_MODIFIED_SINCE, options);\n\t\t}\n\n\t\treturn stat;\n\t}\n\n\tasync readFile(resource: URI, options?: IReadFileOptions): Promise<IFileContent> {\n\t\tconst provider = await this.withReadProvider(resource);\n\n\t\tif (options?.atomic) {\n\t\t\treturn this.doReadFileAtomic(provider, resource, options);\n\t\t}\n\n\t\treturn this.doReadFile(provider, resource, options);\n\t}\n\n\tprivate async doReadFileAtomic(provider: IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability | IFileSystemProviderWithFileReadStreamCapability, resource: URI, options?: IReadFileOptions): Promise<IFileContent> {\n\t\treturn new Promise<IFileContent>((resolve, reject) => {\n\t\t\tthis.writeQueue.queueFor(resource, this.getExtUri(provider).providerExtUri).queue(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst content = await this.doReadFile(provider, resource, options);\n\t\t\t\t\tresolve(content);\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate async doReadFile(provider: IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability | IFileSystemProviderWithFileReadStreamCapability, resource: URI, options?: IReadFileOptions): Promise<IFileContent> {\n\t\tconst stream = await this.doReadFileStream(provider, resource, {\n\t\t\t...options,\n\t\t\t// optimization: since we know that the caller does not\n\t\t\t// care about buffering, we indicate this to the reader.\n\t\t\t// this reduces all the overhead the buffered reading\n\t\t\t// has (open, read, close) if the provider supports\n\t\t\t// unbuffered reading.\n\t\t\tpreferUnbuffered: true\n\t\t});\n\n\t\treturn {\n\t\t\t...stream,\n\t\t\tvalue: await streamToBuffer(stream.value)\n\t\t};\n\t}\n\n\tasync readFileStream(resource: URI, options?: IReadFileStreamOptions): Promise<IFileStreamContent> {\n\t\tconst provider = await this.withReadProvider(resource);\n\n\t\treturn this.doReadFileStream(provider, resource, options);\n\t}\n\n\tprivate async doReadFileStream(provider: IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability | IFileSystemProviderWithFileReadStreamCapability, resource: URI, options?: IReadFileStreamOptions & { preferUnbuffered?: boolean; }): Promise<IFileStreamContent> {\n\n\t\t// install a cancellation token that gets cancelled\n\t\t// when any error occurs. this allows us to resolve\n\t\t// the content of the file while resolving metadata\n\t\t// but still cancel the operation in certain cases.\n\t\tconst cancellableSource = new CancellationTokenSource();\n\n\t\t// validate read operation\n\t\tconst statPromise = this.validateReadFile(resource, options).then(stat => stat, error => {\n\t\t\tcancellableSource.cancel();\n\n\t\t\tthrow error;\n\t\t});\n\n\t\tlet fileStream: VSBufferReadableStream | undefined = undefined;\n\t\ttry {\n\n\t\t\t// if the etag is provided, we await the result of the validation\n\t\t\t// due to the likelihood of hitting a NOT_MODIFIED_SINCE result.\n\t\t\t// otherwise, we let it run in parallel to the file reading for\n\t\t\t// optimal startup performance.\n\t\t\tif (typeof options?.etag === 'string' && options.etag !== ETAG_DISABLED) {\n\t\t\t\tawait statPromise;\n\t\t\t}\n\n\t\t\t// read unbuffered (only if either preferred, or the provider has no buffered read capability)\n\t\t\tif (!(hasOpenReadWriteCloseCapability(provider) || hasFileReadStreamCapability(provider)) || (hasReadWriteCapability(provider) && options?.preferUnbuffered)) {\n\t\t\t\tfileStream = this.readFileUnbuffered(provider, resource, options);\n\t\t\t}\n\n\t\t\t// read streamed (always prefer over primitive buffered read)\n\t\t\telse if (hasFileReadStreamCapability(provider)) {\n\t\t\t\tfileStream = this.readFileStreamed(provider, resource, cancellableSource.token, options);\n\t\t\t}\n\n\t\t\t// read buffered\n\t\t\telse {\n\t\t\t\tfileStream = this.readFileBuffered(provider, resource, cancellableSource.token, options);\n\t\t\t}\n\n\t\t\tconst fileStat = await statPromise;\n\n\t\t\treturn {\n\t\t\t\t...fileStat,\n\t\t\t\tvalue: fileStream\n\t\t\t};\n\t\t} catch (error) {\n\n\t\t\t// Await the stream to finish so that we exit this method\n\t\t\t// in a consistent state with file handles closed\n\t\t\t// (https://github.com/microsoft/vscode/issues/114024)\n\t\t\tif (fileStream) {\n\t\t\t\tawait consumeStream(fileStream);\n\t\t\t}\n\n\t\t\t// Re-throw errors as file operation errors but preserve\n\t\t\t// specific errors (such as not modified since)\n\t\t\tconst message = localize('err.read', \"Unable to read file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString());\n\t\t\tif (error instanceof NotModifiedSinceFileOperationError) {\n\t\t\t\tthrow new NotModifiedSinceFileOperationError(message, error.stat, options);\n\t\t\t} else {\n\t\t\t\tthrow new FileOperationError(message, toFileOperationResult(error), options);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate readFileStreamed(provider: IFileSystemProviderWithFileReadStreamCapability, resource: URI, token: CancellationToken, options: IReadFileStreamOptions = Object.create(null)): VSBufferReadableStream {\n\t\tconst fileStream = provider.readFileStream(resource, options, token);\n\n\t\treturn transform(fileStream, {\n\t\t\tdata: data => data instanceof VSBuffer ? data : VSBuffer.wrap(data),\n\t\t\terror: error => new FileOperationError(localize('err.read', \"Unable to read file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options)\n\t\t}, data => VSBuffer.concat(data));\n\t}\n\n\tprivate readFileBuffered(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, token: CancellationToken, options: IReadFileStreamOptions = Object.create(null)): VSBufferReadableStream {\n\t\tconst stream = newWriteableBufferStream();\n\n\t\treadFileIntoStream(provider, resource, stream, data => data, {\n\t\t\t...options,\n\t\t\tbufferSize: this.BUFFER_SIZE,\n\t\t\terrorTransformer: error => new FileOperationError(localize('err.read', \"Unable to read file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options)\n\t\t}, token);\n\n\t\treturn stream;\n\t}\n\n\tprivate readFileUnbuffered(provider: IFileSystemProviderWithFileReadWriteCapability, resource: URI, options?: IReadFileStreamOptions): VSBufferReadableStream {\n\t\tconst stream = newWriteableStream<VSBuffer>(data => VSBuffer.concat(data));\n\n\t\t// Read the file into the stream async but do not wait for\n\t\t// this to complete because streams work via events\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tlet buffer = await provider.readFile(resource);\n\n\t\t\t\t// respect position option\n\t\t\t\tif (typeof options?.position === 'number') {\n\t\t\t\t\tbuffer = buffer.slice(options.position);\n\t\t\t\t}\n\n\t\t\t\t// respect length option\n\t\t\t\tif (typeof options?.length === 'number') {\n\t\t\t\t\tbuffer = buffer.slice(0, options.length);\n\t\t\t\t}\n\n\t\t\t\t// Throw if file is too large to load\n\t\t\t\tthis.validateReadFileLimits(resource, buffer.byteLength, options);\n\n\t\t\t\t// End stream with data\n\t\t\t\tstream.end(VSBuffer.wrap(buffer));\n\t\t\t} catch (err) {\n\t\t\t\tstream.error(err);\n\t\t\t\tstream.end();\n\t\t\t}\n\t\t})();\n\n\t\treturn stream;\n\t}\n\n\tprivate async validateReadFile(resource: URI, options?: IReadFileStreamOptions): Promise<IFileStatWithMetadata> {\n\t\tconst stat = await this.resolve(resource, { resolveMetadata: true });\n\n\t\t// Throw if resource is a directory\n\t\tif (stat.isDirectory) {\n\t\t\tthrow new FileOperationError(localize('fileIsDirectoryReadError', \"Unable to read file '{0}' that is actually a directory\", this.resourceForError(resource)), FileOperationResult.FILE_IS_DIRECTORY, options);\n\t\t}\n\n\t\t// Throw if file not modified since (unless disabled)\n\t\tif (typeof options?.etag === 'string' && options.etag !== ETAG_DISABLED && options.etag === stat.etag) {\n\t\t\tthrow new NotModifiedSinceFileOperationError(localize('fileNotModifiedError', \"File not modified since\"), stat, options);\n\t\t}\n\n\t\t// Throw if file is too large to load\n\t\tthis.validateReadFileLimits(resource, stat.size, options);\n\n\t\treturn stat;\n\t}\n\n\tprivate validateReadFileLimits(resource: URI, size: number, options?: IReadFileStreamOptions): void {\n\t\tif (options?.limits) {\n\t\t\tlet tooLargeErrorResult: FileOperationResult | undefined = undefined;\n\n\t\t\tif (typeof options.limits.memory === 'number' && size > options.limits.memory) {\n\t\t\t\ttooLargeErrorResult = FileOperationResult.FILE_EXCEEDS_MEMORY_LIMIT;\n\t\t\t}\n\n\t\t\tif (typeof options.limits.size === 'number' && size > options.limits.size) {\n\t\t\t\ttooLargeErrorResult = FileOperationResult.FILE_TOO_LARGE;\n\t\t\t}\n\n\t\t\tif (typeof tooLargeErrorResult === 'number') {\n\t\t\t\tthrow new FileOperationError(localize('fileTooLargeError', \"Unable to read file '{0}' that is too large to open\", this.resourceForError(resource)), tooLargeErrorResult);\n\t\t\t}\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region Move/Copy/Delete/Create Folder\n\n\tasync canMove(source: URI, target: URI, overwrite?: boolean): Promise<Error | true> {\n\t\treturn this.doCanMoveCopy(source, target, 'move', overwrite);\n\t}\n\n\tasync canCopy(source: URI, target: URI, overwrite?: boolean): Promise<Error | true> {\n\t\treturn this.doCanMoveCopy(source, target, 'copy', overwrite);\n\t}\n\n\tprivate async doCanMoveCopy(source: URI, target: URI, mode: 'move' | 'copy', overwrite?: boolean): Promise<Error | true> {\n\t\tif (source.toString() !== target.toString()) {\n\t\t\ttry {\n\t\t\t\tconst sourceProvider = mode === 'move' ? this.throwIfFileSystemIsReadonly(await this.withWriteProvider(source), source) : await this.withReadProvider(source);\n\t\t\t\tconst targetProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(target), target);\n\n\t\t\t\tawait this.doValidateMoveCopy(sourceProvider, source, targetProvider, target, mode, overwrite);\n\t\t\t} catch (error) {\n\t\t\t\treturn error;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tasync move(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata> {\n\t\tconst sourceProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(source), source);\n\t\tconst targetProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(target), target);\n\n\t\t// move\n\t\tconst mode = await this.doMoveCopy(sourceProvider, source, targetProvider, target, 'move', !!overwrite);\n\n\t\t// resolve and send events\n\t\tconst fileStat = await this.resolve(target, { resolveMetadata: true });\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(source, mode === 'move' ? FileOperation.MOVE : FileOperation.COPY, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tasync copy(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata> {\n\t\tconst sourceProvider = await this.withReadProvider(source);\n\t\tconst targetProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(target), target);\n\n\t\t// copy\n\t\tconst mode = await this.doMoveCopy(sourceProvider, source, targetProvider, target, 'copy', !!overwrite);\n\n\t\t// resolve and send events\n\t\tconst fileStat = await this.resolve(target, { resolveMetadata: true });\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(source, mode === 'copy' ? FileOperation.COPY : FileOperation.MOVE, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tprivate async doMoveCopy(sourceProvider: IFileSystemProvider, source: URI, targetProvider: IFileSystemProvider, target: URI, mode: 'move' | 'copy', overwrite: boolean): Promise<'move' | 'copy'> {\n\t\tif (source.toString() === target.toString()) {\n\t\t\treturn mode; // simulate node.js behaviour here and do a no-op if paths match\n\t\t}\n\n\t\t// validation\n\t\tconst { exists, isSameResourceWithDifferentPathCase } = await this.doValidateMoveCopy(sourceProvider, source, targetProvider, target, mode, overwrite);\n\n\t\t// delete as needed (unless target is same resurce with different path case)\n\t\tif (exists && !isSameResourceWithDifferentPathCase && overwrite) {\n\t\t\tawait this.del(target, { recursive: true });\n\t\t}\n\n\t\t// create parent folders\n\t\tawait this.mkdirp(targetProvider, this.getExtUri(targetProvider).providerExtUri.dirname(target));\n\n\t\t// copy source => target\n\t\tif (mode === 'copy') {\n\n\t\t\t// same provider with fast copy: leverage copy() functionality\n\t\t\tif (sourceProvider === targetProvider && hasFileFolderCopyCapability(sourceProvider)) {\n\t\t\t\tawait sourceProvider.copy(source, target, { overwrite });\n\t\t\t}\n\n\t\t\t// when copying via buffer/unbuffered, we have to manually\n\t\t\t// traverse the source if it is a folder and not a file\n\t\t\telse {\n\t\t\t\tconst sourceFile = await this.resolve(source);\n\t\t\t\tif (sourceFile.isDirectory) {\n\t\t\t\t\tawait this.doCopyFolder(sourceProvider, sourceFile, targetProvider, target);\n\t\t\t\t} else {\n\t\t\t\t\tawait this.doCopyFile(sourceProvider, source, targetProvider, target);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn mode;\n\t\t}\n\n\t\t// move source => target\n\t\telse {\n\n\t\t\t// same provider: leverage rename() functionality\n\t\t\tif (sourceProvider === targetProvider) {\n\t\t\t\tawait sourceProvider.rename(source, target, { overwrite });\n\n\t\t\t\treturn mode;\n\t\t\t}\n\n\t\t\t// across providers: copy to target & delete at source\n\t\t\telse {\n\t\t\t\tawait this.doMoveCopy(sourceProvider, source, targetProvider, target, 'copy', overwrite);\n\t\t\t\tawait this.del(source, { recursive: true });\n\n\t\t\t\treturn 'copy';\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async doCopyFile(sourceProvider: IFileSystemProvider, source: URI, targetProvider: IFileSystemProvider, target: URI): Promise<void> {\n\n\t\t// copy: source (buffered) => target (buffered)\n\t\tif (hasOpenReadWriteCloseCapability(sourceProvider) && hasOpenReadWriteCloseCapability(targetProvider)) {\n\t\t\treturn this.doPipeBuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\n\t\t// copy: source (buffered) => target (unbuffered)\n\t\tif (hasOpenReadWriteCloseCapability(sourceProvider) && hasReadWriteCapability(targetProvider)) {\n\t\t\treturn this.doPipeBufferedToUnbuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\n\t\t// copy: source (unbuffered) => target (buffered)\n\t\tif (hasReadWriteCapability(sourceProvider) && hasOpenReadWriteCloseCapability(targetProvider)) {\n\t\t\treturn this.doPipeUnbufferedToBuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\n\t\t// copy: source (unbuffered) => target (unbuffered)\n\t\tif (hasReadWriteCapability(sourceProvider) && hasReadWriteCapability(targetProvider)) {\n\t\t\treturn this.doPipeUnbuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\t}\n\n\tprivate async doCopyFolder(sourceProvider: IFileSystemProvider, sourceFolder: IFileStat, targetProvider: IFileSystemProvider, targetFolder: URI): Promise<void> {\n\n\t\t// create folder in target\n\t\tawait targetProvider.mkdir(targetFolder);\n\n\t\t// create children in target\n\t\tif (Array.isArray(sourceFolder.children)) {\n\t\t\tawait Promises.settled(sourceFolder.children.map(async sourceChild => {\n\t\t\t\tconst targetChild = this.getExtUri(targetProvider).providerExtUri.joinPath(targetFolder, sourceChild.name);\n\t\t\t\tif (sourceChild.isDirectory) {\n\t\t\t\t\treturn this.doCopyFolder(sourceProvider, await this.resolve(sourceChild.resource), targetProvider, targetChild);\n\t\t\t\t} else {\n\t\t\t\t\treturn this.doCopyFile(sourceProvider, sourceChild.resource, targetProvider, targetChild);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n\n\tprivate async doValidateMoveCopy(sourceProvider: IFileSystemProvider, source: URI, targetProvider: IFileSystemProvider, target: URI, mode: 'move' | 'copy', overwrite?: boolean): Promise<{ exists: boolean, isSameResourceWithDifferentPathCase: boolean; }> {\n\t\tlet isSameResourceWithDifferentPathCase = false;\n\n\t\t// Check if source is equal or parent to target (requires providers to be the same)\n\t\tif (sourceProvider === targetProvider) {\n\t\t\tconst { providerExtUri, isPathCaseSensitive } = this.getExtUri(sourceProvider);\n\t\t\tif (!isPathCaseSensitive) {\n\t\t\t\tisSameResourceWithDifferentPathCase = providerExtUri.isEqual(source, target);\n\t\t\t}\n\n\t\t\tif (isSameResourceWithDifferentPathCase && mode === 'copy') {\n\t\t\t\tthrow new Error(localize('unableToMoveCopyError1', \"Unable to copy when source '{0}' is same as target '{1}' with different path case on a case insensitive file system\", this.resourceForError(source), this.resourceForError(target)));\n\t\t\t}\n\n\t\t\tif (!isSameResourceWithDifferentPathCase && providerExtUri.isEqualOrParent(target, source)) {\n\t\t\t\tthrow new Error(localize('unableToMoveCopyError2', \"Unable to move/copy when source '{0}' is parent of target '{1}'.\", this.resourceForError(source), this.resourceForError(target)));\n\t\t\t}\n\t\t}\n\n\t\t// Extra checks if target exists and this is not a rename\n\t\tconst exists = await this.exists(target);\n\t\tif (exists && !isSameResourceWithDifferentPathCase) {\n\n\t\t\t// Bail out if target exists and we are not about to overwrite\n\t\t\tif (!overwrite) {\n\t\t\t\tthrow new FileOperationError(localize('unableToMoveCopyError3', \"Unable to move/copy '{0}' because target '{1}' already exists at destination.\", this.resourceForError(source), this.resourceForError(target)), FileOperationResult.FILE_MOVE_CONFLICT);\n\t\t\t}\n\n\t\t\t// Special case: if the target is a parent of the source, we cannot delete\n\t\t\t// it as it would delete the source as well. In this case we have to throw\n\t\t\tif (sourceProvider === targetProvider) {\n\t\t\t\tconst { providerExtUri } = this.getExtUri(sourceProvider);\n\t\t\t\tif (providerExtUri.isEqualOrParent(source, target)) {\n\t\t\t\t\tthrow new Error(localize('unableToMoveCopyError4', \"Unable to move/copy '{0}' into '{1}' since a file would replace the folder it is contained in.\", this.resourceForError(source), this.resourceForError(target)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { exists, isSameResourceWithDifferentPathCase };\n\t}\n\n\tprivate getExtUri(provider: IFileSystemProvider): { providerExtUri: IExtUri, isPathCaseSensitive: boolean; } {\n\t\tconst isPathCaseSensitive = this.isPathCaseSensitive(provider);\n\n\t\treturn {\n\t\t\tproviderExtUri: isPathCaseSensitive ? extUri : extUriIgnorePathCase,\n\t\t\tisPathCaseSensitive\n\t\t};\n\t}\n\n\tprivate isPathCaseSensitive(provider: IFileSystemProvider): boolean {\n\t\treturn !!(provider.capabilities & FileSystemProviderCapabilities.PathCaseSensitive);\n\t}\n\n\tasync createFolder(resource: URI): Promise<IFileStatWithMetadata> {\n\t\tconst provider = this.throwIfFileSystemIsReadonly(await this.withProvider(resource), resource);\n\n\t\t// mkdir recursively\n\t\tawait this.mkdirp(provider, resource);\n\n\t\t// events\n\t\tconst fileStat = await this.resolve(resource, { resolveMetadata: true });\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(resource, FileOperation.CREATE, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tprivate async mkdirp(provider: IFileSystemProvider, directory: URI): Promise<void> {\n\t\tconst directoriesToCreate: string[] = [];\n\n\t\t// mkdir until we reach root\n\t\tconst { providerExtUri } = this.getExtUri(provider);\n\t\twhile (!providerExtUri.isEqual(directory, providerExtUri.dirname(directory))) {\n\t\t\ttry {\n\t\t\t\tconst stat = await provider.stat(directory);\n\t\t\t\tif ((stat.type & FileType.Directory) === 0) {\n\t\t\t\t\tthrow new Error(localize('mkdirExistsError', \"Unable to create folder '{0}' that already exists but is not a directory\", this.resourceForError(directory)));\n\t\t\t\t}\n\n\t\t\t\tbreak; // we have hit a directory that exists -> good\n\t\t\t} catch (error) {\n\n\t\t\t\t// Bubble up any other error that is not file not found\n\t\t\t\tif (toFileSystemProviderErrorCode(error) !== FileSystemProviderErrorCode.FileNotFound) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\n\t\t\t\t// Upon error, remember directories that need to be created\n\t\t\t\tdirectoriesToCreate.push(providerExtUri.basename(directory));\n\n\t\t\t\t// Continue up\n\t\t\t\tdirectory = providerExtUri.dirname(directory);\n\t\t\t}\n\t\t}\n\n\t\t// Create directories as needed\n\t\tfor (let i = directoriesToCreate.length - 1; i >= 0; i--) {\n\t\t\tdirectory = providerExtUri.joinPath(directory, directoriesToCreate[i]);\n\n\t\t\ttry {\n\t\t\t\tawait provider.mkdir(directory);\n\t\t\t} catch (error) {\n\t\t\t\tif (toFileSystemProviderErrorCode(error) !== FileSystemProviderErrorCode.FileExists) {\n\t\t\t\t\t// For mkdirp() we tolerate that the mkdir() call fails\n\t\t\t\t\t// in case the folder already exists. This follows node.js\n\t\t\t\t\t// own implementation of fs.mkdir({ recursive: true }) and\n\t\t\t\t\t// reduces the chances of race conditions leading to errors\n\t\t\t\t\t// if multiple calls try to create the same folders\n\t\t\t\t\t// As such, we only throw an error here if it is other than\n\t\t\t\t\t// the fact that the file already exists.\n\t\t\t\t\t// (see also https://github.com/microsoft/vscode/issues/89834)\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tasync canDelete(resource: URI, options?: Partial<FileDeleteOptions>): Promise<Error | true> {\n\t\ttry {\n\t\t\tawait this.doValidateDelete(resource, options);\n\t\t} catch (error) {\n\t\t\treturn error;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate async doValidateDelete(resource: URI, options?: Partial<FileDeleteOptions>): Promise<IFileSystemProvider> {\n\t\tconst provider = this.throwIfFileSystemIsReadonly(await this.withProvider(resource), resource);\n\n\t\t// Validate trash support\n\t\tconst useTrash = !!options?.useTrash;\n\t\tif (useTrash && !(provider.capabilities & FileSystemProviderCapabilities.Trash)) {\n\t\t\tthrow new Error(localize('deleteFailedTrashUnsupported', \"Unable to delete file '{0}' via trash because provider does not support it.\", this.resourceForError(resource)));\n\t\t}\n\n\t\t// Validate delete\n\t\tlet stat: IStat | undefined = undefined;\n\t\ttry {\n\t\t\tstat = await provider.stat(resource);\n\t\t} catch (error) {\n\t\t\t// Handled later\n\t\t}\n\n\t\tif (stat) {\n\t\t\tthis.throwIfFileIsReadonly(resource, stat);\n\t\t} else {\n\t\t\tthrow new FileOperationError(localize('deleteFailedNotFound', \"Unable to delete nonexistent file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_NOT_FOUND);\n\t\t}\n\n\t\t// Validate recursive\n\t\tconst recursive = !!options?.recursive;\n\t\tif (!recursive) {\n\t\t\tconst stat = await this.resolve(resource);\n\t\t\tif (stat.isDirectory && Array.isArray(stat.children) && stat.children.length > 0) {\n\t\t\t\tthrow new Error(localize('deleteFailedNonEmptyFolder', \"Unable to delete non-empty folder '{0}'.\", this.resourceForError(resource)));\n\t\t\t}\n\t\t}\n\n\t\treturn provider;\n\t}\n\n\tasync del(resource: URI, options?: Partial<FileDeleteOptions>): Promise<void> {\n\t\tconst provider = await this.doValidateDelete(resource, options);\n\n\t\tconst useTrash = !!options?.useTrash;\n\t\tconst recursive = !!options?.recursive;\n\n\t\t// Delete through provider\n\t\tawait provider.delete(resource, { recursive, useTrash });\n\n\t\t// Events\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(resource, FileOperation.DELETE));\n\t}\n\n\t//#endregion\n\n\t//#region File Watching\n\n\t/**\n\t * Providers can send unlimited amount of `IFileChange` events\n\t * and we want to protect against this to reduce CPU pressure.\n\t * The following settings limit the amount of file changes we\n\t * process at once.\n\t * (https://github.com/microsoft/vscode/issues/124723)\n\t */\n\tprivate static readonly FILE_EVENTS_THROTTLING = {\n\t\tmaxChangesChunkSize: 500 as const,\t\t// number of changes we process per interval\n\t\tmaxChangesBufferSize: 30000 as const,  \t// total number of changes we are willing to buffer in memory\n\t\tcoolDownDelay: 200 as const,\t  \t\t// rest for 100ms before processing next events\n\t\twarningscounter: 0\t\t\t\t\t\t// keep track how many warnings we showed to reduce log spam\n\t};\n\n\tprivate readonly _onDidFilesChange = this._register(new Emitter<FileChangesEvent>());\n\treadonly onDidFilesChange = this._onDidFilesChange.event;\n\n\tprivate readonly _onDidChangeFilesRaw = this._register(new Emitter<IRawFileChangesEvent>());\n\treadonly onDidChangeFilesRaw = this._onDidChangeFilesRaw.event;\n\n\tprivate readonly activeWatchers = new Map<string, { disposable: IDisposable, count: number; }>();\n\n\tprivate readonly caseSensitiveFileEventsWorker = this._register(\n\t\tnew ThrottledWorker<IFileChange>(\n\t\t\tFileService.FILE_EVENTS_THROTTLING.maxChangesChunkSize,\n\t\t\tFileService.FILE_EVENTS_THROTTLING.maxChangesBufferSize,\n\t\t\tFileService.FILE_EVENTS_THROTTLING.coolDownDelay,\n\t\t\tchunks => this._onDidFilesChange.fire(new FileChangesEvent(chunks, false))\n\t\t)\n\t);\n\n\tprivate readonly caseInsensitiveFileEventsWorker = this._register(\n\t\tnew ThrottledWorker<IFileChange>(\n\t\t\tFileService.FILE_EVENTS_THROTTLING.maxChangesChunkSize,\n\t\t\tFileService.FILE_EVENTS_THROTTLING.maxChangesBufferSize,\n\t\t\tFileService.FILE_EVENTS_THROTTLING.coolDownDelay,\n\t\t\tchunks => this._onDidFilesChange.fire(new FileChangesEvent(chunks, true))\n\t\t)\n\t);\n\n\tprivate onDidChangeFile(changes: readonly IFileChange[], caseSensitive: boolean): void {\n\n\t\t// Event #1: access to raw events goes out instantly\n\t\t{\n\t\t\tthis._onDidChangeFilesRaw.fire({ changes });\n\t\t}\n\n\t\t// Event #2: immediately send out events for\n\t\t// explicitly watched resources by splitting\n\t\t// changes up into 2 buckets\n\t\tlet explicitlyWatchedFileChanges: IFileChange[] | undefined = undefined;\n\t\tlet implicitlyWatchedFileChanges: IFileChange[] | undefined = undefined;\n\t\t{\n\t\t\tfor (const change of changes) {\n\t\t\t\tif (this.watchedResources.has(change.resource)) {\n\t\t\t\t\tif (!explicitlyWatchedFileChanges) {\n\t\t\t\t\t\texplicitlyWatchedFileChanges = [];\n\t\t\t\t\t}\n\t\t\t\t\texplicitlyWatchedFileChanges.push(change);\n\t\t\t\t} else {\n\t\t\t\t\tif (!implicitlyWatchedFileChanges) {\n\t\t\t\t\t\timplicitlyWatchedFileChanges = [];\n\t\t\t\t\t}\n\t\t\t\t\timplicitlyWatchedFileChanges.push(change);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (explicitlyWatchedFileChanges) {\n\t\t\t\tthis._onDidFilesChange.fire(new FileChangesEvent(explicitlyWatchedFileChanges, !caseSensitive));\n\t\t\t}\n\t\t}\n\n\t\t// Event #3: implicitly watched resources get\n\t\t// throttled due to performance reasons\n\t\tif (implicitlyWatchedFileChanges) {\n\t\t\tconst worker = caseSensitive ? this.caseSensitiveFileEventsWorker : this.caseInsensitiveFileEventsWorker;\n\t\t\tconst worked = worker.work(implicitlyWatchedFileChanges);\n\n\t\t\tif (!worked && FileService.FILE_EVENTS_THROTTLING.warningscounter++ < 10) {\n\t\t\t\tthis.logService.warn(`[File watcher]: started ignoring events due to too many file change events at once (incoming: ${implicitlyWatchedFileChanges.length}, most recent change: ${implicitlyWatchedFileChanges[0].resource.toString()}). Use 'files.watcherExclude' setting to exclude folders with lots of changing files (e.g. compilation output).`);\n\t\t\t}\n\n\t\t\tif (worker.pending > 0) {\n\t\t\t\tthis.logService.trace(`[File watcher]: started throttling events due to large amount of file change events at once (pending: ${worker.pending}, most recent change: ${implicitlyWatchedFileChanges[0].resource.toString()}). Use 'files.watcherExclude' setting to exclude folders with lots of changing files (e.g. compilation output).`);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate readonly watchedResources = TernarySearchTree.forUris<number>(uri => {\n\t\tconst provider = this.getProvider(uri.scheme);\n\t\tif (provider) {\n\t\t\treturn !this.isPathCaseSensitive(provider);\n\t\t}\n\n\t\treturn false;\n\t});\n\n\twatch(resource: URI, options: IWatchOptions = { recursive: false, excludes: [] }): IDisposable {\n\t\tconst disposables = new DisposableStore();\n\n\t\t// Forward watch request to provider and\n\t\t// wire in disposables.\n\t\tlet watchDisposed = false;\n\t\tlet disposeWatch = () => { watchDisposed = true; };\n\t\tdisposables.add(toDisposable(() => disposeWatch()));\n\n\t\t// Watch and wire in disposable which is async but\n\t\t// check if we got disposed meanwhile and forward\n\t\tthis.doWatch(resource, options).then(disposable => {\n\t\t\tif (watchDisposed) {\n\t\t\t\tdispose(disposable);\n\t\t\t} else {\n\t\t\t\tdisposeWatch = () => dispose(disposable);\n\t\t\t}\n\t\t}, error => this.logService.error(error));\n\n\t\t// Remember as watched resource and unregister\n\t\t// properly on disposal.\n\t\t//\n\t\t// Note: we only do this for non-recursive watchers\n\t\t// until we have a better `createWatcher` based API\n\t\t// (https://github.com/microsoft/vscode/issues/126809)\n\t\t//\n\t\tif (!options.recursive) {\n\n\t\t\t// Increment counter for resource\n\t\t\tthis.watchedResources.set(resource, (this.watchedResources.get(resource) ?? 0) + 1);\n\n\t\t\t// Decrement counter for resource on dispose\n\t\t\t// and remove from map when last one is gone\n\t\t\tdisposables.add(toDisposable(() => {\n\t\t\t\tconst watchedResourceCounter = this.watchedResources.get(resource);\n\t\t\t\tif (typeof watchedResourceCounter === 'number') {\n\t\t\t\t\tif (watchedResourceCounter <= 1) {\n\t\t\t\t\t\tthis.watchedResources.delete(resource);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.watchedResources.set(resource, watchedResourceCounter - 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\treturn disposables;\n\t}\n\n\tprivate async doWatch(resource: URI, options: IWatchOptions): Promise<IDisposable> {\n\t\tconst provider = await this.withProvider(resource);\n\t\tconst key = this.toWatchKey(provider, resource, options);\n\n\t\t// Only start watching if we are the first for the given key\n\t\tlet watcher = this.activeWatchers.get(key);\n\t\tif (!watcher) {\n\t\t\twatcher = { count: 0, disposable: provider.watch(resource, options) };\n\n\t\t\tthis.activeWatchers.set(key, watcher);\n\t\t}\n\n\t\t// Increment usage counter\n\t\twatcher.count += 1;\n\n\t\treturn toDisposable(() => {\n\t\t\tif (watcher) {\n\n\t\t\t\t// Unref\n\t\t\t\twatcher.count--;\n\n\t\t\t\t// Dispose only when last user is reached\n\t\t\t\tif (watcher.count === 0) {\n\t\t\t\t\tdispose(watcher.disposable);\n\t\t\t\t\tthis.activeWatchers.delete(key);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate toWatchKey(provider: IFileSystemProvider, resource: URI, options: IWatchOptions): string {\n\t\tconst { providerExtUri } = this.getExtUri(provider);\n\n\t\treturn [\n\t\t\tproviderExtUri.getComparisonKey(resource), \t// lowercase path if the provider is case insensitive\n\t\t\tString(options.recursive),\t\t\t\t\t// use recursive: true | false as part of the key\n\t\t\toptions.excludes.join()\t\t\t\t\t\t// use excludes as part of the key\n\t\t].join();\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tfor (const [, watcher] of this.activeWatchers) {\n\t\t\tdispose(watcher.disposable);\n\t\t}\n\n\t\tthis.activeWatchers.clear();\n\t}\n\n\t//#endregion\n\n\t//#region Helpers\n\n\tprivate readonly writeQueue = this._register(new ResourceQueue());\n\n\tprivate async doWriteBuffered(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, options: IWriteFileOptions | undefined, readableOrStreamOrBufferedStream: VSBufferReadable | VSBufferReadableStream | VSBufferReadableBufferedStream): Promise<void> {\n\t\treturn this.writeQueue.queueFor(resource, this.getExtUri(provider).providerExtUri).queue(async () => {\n\n\t\t\t// open handle\n\t\t\tconst handle = await provider.open(resource, { create: true, unlock: options?.unlock ?? false });\n\n\t\t\t// write into handle until all bytes from buffer have been written\n\t\t\ttry {\n\t\t\t\tif (isReadableStream(readableOrStreamOrBufferedStream) || isReadableBufferedStream(readableOrStreamOrBufferedStream)) {\n\t\t\t\t\tawait this.doWriteStreamBufferedQueued(provider, handle, readableOrStreamOrBufferedStream);\n\t\t\t\t} else {\n\t\t\t\t\tawait this.doWriteReadableBufferedQueued(provider, handle, readableOrStreamOrBufferedStream);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t\t} finally {\n\n\t\t\t\t// close handle always\n\t\t\t\tawait provider.close(handle);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async doWriteStreamBufferedQueued(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, handle: number, streamOrBufferedStream: VSBufferReadableStream | VSBufferReadableBufferedStream): Promise<void> {\n\t\tlet posInFile = 0;\n\t\tlet stream: VSBufferReadableStream;\n\n\t\t// Buffered stream: consume the buffer first by writing\n\t\t// it to the target before reading from the stream.\n\t\tif (isReadableBufferedStream(streamOrBufferedStream)) {\n\t\t\tif (streamOrBufferedStream.buffer.length > 0) {\n\t\t\t\tconst chunk = VSBuffer.concat(streamOrBufferedStream.buffer);\n\t\t\t\tawait this.doWriteBuffer(provider, handle, chunk, chunk.byteLength, posInFile, 0);\n\n\t\t\t\tposInFile += chunk.byteLength;\n\t\t\t}\n\n\t\t\t// If the stream has been consumed, return early\n\t\t\tif (streamOrBufferedStream.ended) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstream = streamOrBufferedStream.stream;\n\t\t}\n\n\t\t// Unbuffered stream - just take as is\n\t\telse {\n\t\t\tstream = streamOrBufferedStream;\n\t\t}\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlistenStream(stream, {\n\t\t\t\tonData: async chunk => {\n\n\t\t\t\t\t// pause stream to perform async write operation\n\t\t\t\t\tstream.pause();\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait this.doWriteBuffer(provider, handle, chunk, chunk.byteLength, posInFile, 0);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\treturn reject(error);\n\t\t\t\t\t}\n\n\t\t\t\t\tposInFile += chunk.byteLength;\n\n\t\t\t\t\t// resume stream now that we have successfully written\n\t\t\t\t\t// run this on the next tick to prevent increasing the\n\t\t\t\t\t// execution stack because resume() may call the event\n\t\t\t\t\t// handler again before finishing.\n\t\t\t\t\tsetTimeout(() => stream.resume());\n\t\t\t\t},\n\t\t\t\tonError: error => reject(error),\n\t\t\t\tonEnd: () => resolve()\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate async doWriteReadableBufferedQueued(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, handle: number, readable: VSBufferReadable): Promise<void> {\n\t\tlet posInFile = 0;\n\n\t\tlet chunk: VSBuffer | null;\n\t\twhile ((chunk = readable.read()) !== null) {\n\t\t\tawait this.doWriteBuffer(provider, handle, chunk, chunk.byteLength, posInFile, 0);\n\n\t\t\tposInFile += chunk.byteLength;\n\t\t}\n\t}\n\n\tprivate async doWriteBuffer(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, handle: number, buffer: VSBuffer, length: number, posInFile: number, posInBuffer: number): Promise<void> {\n\t\tlet totalBytesWritten = 0;\n\t\twhile (totalBytesWritten < length) {\n\n\t\t\t// Write through the provider\n\t\t\tconst bytesWritten = await provider.write(handle, posInFile + totalBytesWritten, buffer.buffer, posInBuffer + totalBytesWritten, length - totalBytesWritten);\n\t\t\ttotalBytesWritten += bytesWritten;\n\t\t}\n\t}\n\n\tprivate async doWriteUnbuffered(provider: IFileSystemProviderWithFileReadWriteCapability, resource: URI, options: IWriteFileOptions | undefined, bufferOrReadableOrStreamOrBufferedStream: VSBuffer | VSBufferReadable | VSBufferReadableStream | VSBufferReadableBufferedStream): Promise<void> {\n\t\treturn this.writeQueue.queueFor(resource, this.getExtUri(provider).providerExtUri).queue(() => this.doWriteUnbufferedQueued(provider, resource, options, bufferOrReadableOrStreamOrBufferedStream));\n\t}\n\n\tprivate async doWriteUnbufferedQueued(provider: IFileSystemProviderWithFileReadWriteCapability, resource: URI, options: IWriteFileOptions | undefined, bufferOrReadableOrStreamOrBufferedStream: VSBuffer | VSBufferReadable | VSBufferReadableStream | VSBufferReadableBufferedStream): Promise<void> {\n\t\tlet buffer: VSBuffer;\n\t\tif (bufferOrReadableOrStreamOrBufferedStream instanceof VSBuffer) {\n\t\t\tbuffer = bufferOrReadableOrStreamOrBufferedStream;\n\t\t} else if (isReadableStream(bufferOrReadableOrStreamOrBufferedStream)) {\n\t\t\tbuffer = await streamToBuffer(bufferOrReadableOrStreamOrBufferedStream);\n\t\t} else if (isReadableBufferedStream(bufferOrReadableOrStreamOrBufferedStream)) {\n\t\t\tbuffer = await bufferedStreamToBuffer(bufferOrReadableOrStreamOrBufferedStream);\n\t\t} else {\n\t\t\tbuffer = readableToBuffer(bufferOrReadableOrStreamOrBufferedStream);\n\t\t}\n\n\t\t// Write through the provider\n\t\tawait provider.writeFile(resource, buffer.buffer, { create: true, overwrite: true, unlock: options?.unlock ?? false });\n\t}\n\n\tprivate async doPipeBuffered(sourceProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\t\treturn this.writeQueue.queueFor(target, this.getExtUri(targetProvider).providerExtUri).queue(() => this.doPipeBufferedQueued(sourceProvider, source, targetProvider, target));\n\t}\n\n\tprivate async doPipeBufferedQueued(sourceProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\t\tlet sourceHandle: number | undefined = undefined;\n\t\tlet targetHandle: number | undefined = undefined;\n\n\t\ttry {\n\n\t\t\t// Open handles\n\t\t\tsourceHandle = await sourceProvider.open(source, { create: false });\n\t\t\ttargetHandle = await targetProvider.open(target, { create: true, unlock: false });\n\n\t\t\tconst buffer = VSBuffer.alloc(this.BUFFER_SIZE);\n\n\t\t\tlet posInFile = 0;\n\t\t\tlet posInBuffer = 0;\n\t\t\tlet bytesRead = 0;\n\t\t\tdo {\n\t\t\t\t// read from source (sourceHandle) at current position (posInFile) into buffer (buffer) at\n\t\t\t\t// buffer position (posInBuffer) up to the size of the buffer (buffer.byteLength).\n\t\t\t\tbytesRead = await sourceProvider.read(sourceHandle, posInFile, buffer.buffer, posInBuffer, buffer.byteLength - posInBuffer);\n\n\t\t\t\t// write into target (targetHandle) at current position (posInFile) from buffer (buffer) at\n\t\t\t\t// buffer position (posInBuffer) all bytes we read (bytesRead).\n\t\t\t\tawait this.doWriteBuffer(targetProvider, targetHandle, buffer, bytesRead, posInFile, posInBuffer);\n\n\t\t\t\tposInFile += bytesRead;\n\t\t\t\tposInBuffer += bytesRead;\n\n\t\t\t\t// when buffer full, fill it again from the beginning\n\t\t\t\tif (posInBuffer === buffer.byteLength) {\n\t\t\t\t\tposInBuffer = 0;\n\t\t\t\t}\n\t\t\t} while (bytesRead > 0);\n\t\t} catch (error) {\n\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tawait Promises.settled([\n\t\t\t\ttypeof sourceHandle === 'number' ? sourceProvider.close(sourceHandle) : Promise.resolve(),\n\t\t\t\ttypeof targetHandle === 'number' ? targetProvider.close(targetHandle) : Promise.resolve(),\n\t\t\t]);\n\t\t}\n\t}\n\n\tprivate async doPipeUnbuffered(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithFileReadWriteCapability, target: URI): Promise<void> {\n\t\treturn this.writeQueue.queueFor(target, this.getExtUri(targetProvider).providerExtUri).queue(() => this.doPipeUnbufferedQueued(sourceProvider, source, targetProvider, target));\n\t}\n\n\tprivate async doPipeUnbufferedQueued(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithFileReadWriteCapability, target: URI): Promise<void> {\n\t\treturn targetProvider.writeFile(target, await sourceProvider.readFile(source), { create: true, overwrite: true, unlock: false });\n\t}\n\n\tprivate async doPipeUnbufferedToBuffered(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\t\treturn this.writeQueue.queueFor(target, this.getExtUri(targetProvider).providerExtUri).queue(() => this.doPipeUnbufferedToBufferedQueued(sourceProvider, source, targetProvider, target));\n\t}\n\n\tprivate async doPipeUnbufferedToBufferedQueued(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\n\t\t// Open handle\n\t\tconst targetHandle = await targetProvider.open(target, { create: true, unlock: false });\n\n\t\t// Read entire buffer from source and write buffered\n\t\ttry {\n\t\t\tconst buffer = await sourceProvider.readFile(source);\n\t\t\tawait this.doWriteBuffer(targetProvider, targetHandle, VSBuffer.wrap(buffer), buffer.byteLength, 0, 0);\n\t\t} catch (error) {\n\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tawait targetProvider.close(targetHandle);\n\t\t}\n\t}\n\n\tprivate async doPipeBufferedToUnbuffered(sourceProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, source: URI, targetProvider: IFileSystemProviderWithFileReadWriteCapability, target: URI): Promise<void> {\n\n\t\t// Read buffer via stream buffered\n\t\tconst buffer = await streamToBuffer(this.readFileBuffered(sourceProvider, source, CancellationToken.None));\n\n\t\t// Write buffer into target at once\n\t\tawait this.doWriteUnbuffered(targetProvider, target, undefined, buffer);\n\t}\n\n\tprotected throwIfFileSystemIsReadonly<T extends IFileSystemProvider>(provider: T, resource: URI): T {\n\t\tif (provider.capabilities & FileSystemProviderCapabilities.Readonly) {\n\t\t\tthrow new FileOperationError(localize('err.readonly', \"Unable to modify readonly file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_PERMISSION_DENIED);\n\t\t}\n\n\t\treturn provider;\n\t}\n\n\tprivate throwIfFileIsReadonly(resource: URI, stat: IStat): void {\n\t\tif ((stat.permissions ?? 0) & FilePermission.Readonly) {\n\t\t\tthrow new FileOperationError(localize('err.readonly', \"Unable to modify readonly file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_PERMISSION_DENIED);\n\t\t}\n\t}\n\n\tprivate resourceForError(resource: URI): string {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\treturn resource.fsPath;\n\t\t}\n\n\t\treturn resource.toString(true);\n\t}\n\n\t//#endregion\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { gracefulify } from 'graceful-fs';\nimport { retry } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Event } from 'vs/base/common/event';\nimport { isEqual } from 'vs/base/common/extpath';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { basename, dirname } from 'vs/base/common/path';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { joinPath } from 'vs/base/common/resources';\nimport { newWriteableStream, ReadableStreamEvents } from 'vs/base/common/stream';\nimport { URI } from 'vs/base/common/uri';\nimport { IDirent, Promises, RimRafMode, SymlinkSupport } from 'vs/base/node/pfs';\nimport { localize } from 'vs/nls';\nimport { createFileSystemProviderError, FileDeleteOptions, FileOpenOptions, FileOverwriteOptions, FileReadStreamOptions, FileSystemProviderCapabilities, FileSystemProviderError, FileSystemProviderErrorCode, FileType, FileWriteOptions, IFileSystemProviderWithFileFolderCopyCapability, IFileSystemProviderWithFileReadStreamCapability, IFileSystemProviderWithFileReadWriteCapability, IFileSystemProviderWithOpenReadWriteCloseCapability, isFileOpenForWriteOptions, IStat } from 'vs/platform/files/common/files';\nimport { readFileIntoStream } from 'vs/platform/files/common/io';\nimport { FileWatcher as NodeJSWatcherService } from 'vs/platform/files/node/watcher/nodejs/watcherService';\nimport { FileWatcher as NsfwWatcherService } from 'vs/platform/files/node/watcher/nsfw/watcherService';\nimport { FileWatcher as ParcelWatcherService } from 'vs/platform/files/node/watcher/parcel/watcherService';\nimport { IDiskFileChange, ILogMessage, IWatchRequest, WatcherService } from 'vs/platform/files/common/watcher';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { AbstractDiskFileSystemProvider } from 'vs/platform/files/common/diskFileSystemProvider';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\n\n/**\n * Enable graceful-fs very early from here to have it enabled\n * in all contexts that leverage the disk file system provider.\n */\n(() => {\n\ttry {\n\t\tgracefulify(fs);\n\t} catch (error) {\n\t\tconsole.error(`Error enabling graceful-fs: ${toErrorMessage(error)}`);\n\t}\n})();\n\nexport interface IWatcherOptions {\n\n\t/**\n\t * If `true`, will enable polling for all watchers, otherwise\n\t * will enable it for paths included in the string array.\n\t *\n\t * @deprecated this only exists for WSL1 support and should never\n\t * be used in any other case.\n\t */\n\tusePolling: boolean | string[];\n\n\t/**\n\t * If polling is enabled (via `usePolling`), defines the duration\n\t * in which the watcher will poll for changes.\n\t *\n\t * @deprecated this only exists for WSL1 support and should never\n\t * be used in any other case.\n\t */\n\tpollingInterval?: number;\n}\n\nexport interface IDiskFileSystemProviderOptions {\n\twatcher?: IWatcherOptions;\n\tlegacyWatcher?: string;\n}\n\nexport class DiskFileSystemProvider extends AbstractDiskFileSystemProvider implements\n\tIFileSystemProviderWithFileReadWriteCapability,\n\tIFileSystemProviderWithOpenReadWriteCloseCapability,\n\tIFileSystemProviderWithFileReadStreamCapability,\n\tIFileSystemProviderWithFileFolderCopyCapability {\n\n\tconstructor(\n\t\tlogService: ILogService,\n\t\tprivate readonly options?: IDiskFileSystemProviderOptions\n\t) {\n\t\tsuper(logService);\n\t}\n\n\t//#region File Capabilities\n\n\treadonly onDidChangeCapabilities: Event<void> = Event.None;\n\n\tprotected _capabilities: FileSystemProviderCapabilities | undefined;\n\tget capabilities(): FileSystemProviderCapabilities {\n\t\tif (!this._capabilities) {\n\t\t\tthis._capabilities =\n\t\t\t\tFileSystemProviderCapabilities.FileReadWrite |\n\t\t\t\tFileSystemProviderCapabilities.FileOpenReadWriteClose |\n\t\t\t\tFileSystemProviderCapabilities.FileReadStream |\n\t\t\t\tFileSystemProviderCapabilities.FileFolderCopy |\n\t\t\t\tFileSystemProviderCapabilities.FileWriteUnlock;\n\n\t\t\tif (isLinux) {\n\t\t\t\tthis._capabilities |= FileSystemProviderCapabilities.PathCaseSensitive;\n\t\t\t}\n\t\t}\n\n\t\treturn this._capabilities;\n\t}\n\n\t//#endregion\n\n\t//#region File Metadata Resolving\n\n\tasync stat(resource: URI): Promise<IStat> {\n\t\ttry {\n\t\t\tconst { stat, symbolicLink } = await SymlinkSupport.stat(this.toFilePath(resource)); // cannot use fs.stat() here to support links properly\n\n\t\t\treturn {\n\t\t\t\ttype: this.toType(stat, symbolicLink),\n\t\t\t\tctime: stat.birthtime.getTime(), // intentionally not using ctime here, we want the creation time\n\t\t\t\tmtime: stat.mtime.getTime(),\n\t\t\t\tsize: stat.size\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync readdir(resource: URI): Promise<[string, FileType][]> {\n\t\ttry {\n\t\t\tconst children = await Promises.readdir(this.toFilePath(resource), { withFileTypes: true });\n\n\t\t\tconst result: [string, FileType][] = [];\n\t\t\tawait Promise.all(children.map(async child => {\n\t\t\t\ttry {\n\t\t\t\t\tlet type: FileType;\n\t\t\t\t\tif (child.isSymbolicLink()) {\n\t\t\t\t\t\ttype = (await this.stat(joinPath(resource, child.name))).type; // always resolve target the link points to if any\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = this.toType(child);\n\t\t\t\t\t}\n\n\t\t\t\t\tresult.push([child.name, type]);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.trace(error); // ignore errors for individual entries that can arise from permission denied\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\treturn result;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprivate toType(entry: fs.Stats | IDirent, symbolicLink?: { dangling: boolean }): FileType {\n\n\t\t// Signal file type by checking for file / directory, except:\n\t\t// - symbolic links pointing to nonexistent files are FileType.Unknown\n\t\t// - files that are neither file nor directory are FileType.Unknown\n\t\tlet type: FileType;\n\t\tif (symbolicLink?.dangling) {\n\t\t\ttype = FileType.Unknown;\n\t\t} else if (entry.isFile()) {\n\t\t\ttype = FileType.File;\n\t\t} else if (entry.isDirectory()) {\n\t\t\ttype = FileType.Directory;\n\t\t} else {\n\t\t\ttype = FileType.Unknown;\n\t\t}\n\n\t\t// Always signal symbolic link as file type additionally\n\t\tif (symbolicLink) {\n\t\t\ttype |= FileType.SymbolicLink;\n\t\t}\n\n\t\treturn type;\n\t}\n\n\t//#endregion\n\n\t//#region File Reading/Writing\n\n\tasync readFile(resource: URI): Promise<Uint8Array> {\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\treturn await Promises.readFile(filePath);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\treadFileStream(resource: URI, opts: FileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array> {\n\t\tconst stream = newWriteableStream<Uint8Array>(data => VSBuffer.concat(data.map(data => VSBuffer.wrap(data))).buffer);\n\n\t\treadFileIntoStream(this, resource, stream, data => data.buffer, {\n\t\t\t...opts,\n\t\t\tbufferSize: 256 * 1024 // read into chunks of 256kb each to reduce IPC overhead\n\t\t}, token);\n\n\t\treturn stream;\n\t}\n\n\tasync writeFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void> {\n\t\tlet handle: number | undefined = undefined;\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\t// Validate target unless { create: true, overwrite: true }\n\t\t\tif (!opts.create || !opts.overwrite) {\n\t\t\t\tconst fileExists = await Promises.exists(filePath);\n\t\t\t\tif (fileExists) {\n\t\t\t\t\tif (!opts.overwrite) {\n\t\t\t\t\t\tthrow createFileSystemProviderError(localize('fileExists', \"File already exists\"), FileSystemProviderErrorCode.FileExists);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!opts.create) {\n\t\t\t\t\t\tthrow createFileSystemProviderError(localize('fileNotExists', \"File does not exist\"), FileSystemProviderErrorCode.FileNotFound);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Open\n\t\t\thandle = await this.open(resource, { create: true, unlock: opts.unlock });\n\n\t\t\t// Write content at once\n\t\t\tawait this.write(handle, 0, content, 0, content.byteLength);\n\t\t} catch (error) {\n\t\t\tthrow await this.toFileSystemProviderWriteError(resource, error);\n\t\t} finally {\n\t\t\tif (typeof handle === 'number') {\n\t\t\t\tawait this.close(handle);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate readonly mapHandleToPos = new Map<number, number>();\n\n\tprivate readonly writeHandles = new Map<number, URI>();\n\tprivate canFlush: boolean = true;\n\n\tasync open(resource: URI, opts: FileOpenOptions): Promise<number> {\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\t// Determine wether to unlock the file (write only)\n\t\t\tif (isFileOpenForWriteOptions(opts) && opts.unlock) {\n\t\t\t\ttry {\n\t\t\t\t\tconst { stat } = await SymlinkSupport.stat(filePath);\n\t\t\t\t\tif (!(stat.mode & 0o200 /* File mode indicating writable by owner */)) {\n\t\t\t\t\t\tawait Promises.chmod(filePath, stat.mode | 0o200);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.trace(error); // ignore any errors here and try to just write\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Determine file flags for opening (read vs write)\n\t\t\tlet flags: string | undefined = undefined;\n\t\t\tif (isFileOpenForWriteOptions(opts)) {\n\t\t\t\tif (isWindows) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// On Windows and if the file exists, we use a different strategy of saving the file\n\t\t\t\t\t\t// by first truncating the file and then writing with r+ flag. This helps to save hidden files on Windows\n\t\t\t\t\t\t// (see https://github.com/microsoft/vscode/issues/931) and prevent removing alternate data streams\n\t\t\t\t\t\t// (see https://github.com/microsoft/vscode/issues/6363)\n\t\t\t\t\t\tawait Promises.truncate(filePath, 0);\n\n\t\t\t\t\t\t// After a successful truncate() the flag can be set to 'r+' which will not truncate.\n\t\t\t\t\t\tflags = 'r+';\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\t\t\t\tthis.logService.trace(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// we take opts.create as a hint that the file is opened for writing\n\t\t\t\t// as such we use 'w' to truncate an existing or create the\n\t\t\t\t// file otherwise. we do not allow reading.\n\t\t\t\tif (!flags) {\n\t\t\t\t\tflags = 'w';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// otherwise we assume the file is opened for reading\n\t\t\t\t// as such we use 'r' to neither truncate, nor create\n\t\t\t\t// the file.\n\t\t\t\tflags = 'r';\n\t\t\t}\n\n\t\t\tconst handle = await Promises.open(filePath, flags);\n\n\t\t\t// remember this handle to track file position of the handle\n\t\t\t// we init the position to 0 since the file descriptor was\n\t\t\t// just created and the position was not moved so far (see\n\t\t\t// also http://man7.org/linux/man-pages/man2/open.2.html -\n\t\t\t// \"The file offset is set to the beginning of the file.\")\n\t\t\tthis.mapHandleToPos.set(handle, 0);\n\n\t\t\t// remember that this handle was used for writing\n\t\t\tif (isFileOpenForWriteOptions(opts)) {\n\t\t\t\tthis.writeHandles.set(handle, resource);\n\t\t\t}\n\n\t\t\treturn handle;\n\t\t} catch (error) {\n\t\t\tif (isFileOpenForWriteOptions(opts)) {\n\t\t\t\tthrow await this.toFileSystemProviderWriteError(resource, error);\n\t\t\t} else {\n\t\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync close(fd: number): Promise<void> {\n\t\ttry {\n\n\t\t\t// remove this handle from map of positions\n\t\t\tthis.mapHandleToPos.delete(fd);\n\n\t\t\t// if a handle is closed that was used for writing, ensure\n\t\t\t// to flush the contents to disk if possible.\n\t\t\tif (this.writeHandles.delete(fd) && this.canFlush) {\n\t\t\t\ttry {\n\t\t\t\t\tawait Promises.fdatasync(fd); // https://github.com/microsoft/vscode/issues/9589\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// In some exotic setups it is well possible that node fails to sync\n\t\t\t\t\t// In that case we disable flushing and log the error to our logger\n\t\t\t\t\tthis.canFlush = false;\n\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn await Promises.close(fd);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync read(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\tconst normalizedPos = this.normalizePos(fd, pos);\n\n\t\tlet bytesRead: number | null = null;\n\t\ttry {\n\t\t\tconst result = await Promises.read(fd, data, offset, length, normalizedPos);\n\n\t\t\tif (typeof result === 'number') {\n\t\t\t\tbytesRead = result; // node.d.ts fail\n\t\t\t} else {\n\t\t\t\tbytesRead = result.bytesRead;\n\t\t\t}\n\n\t\t\treturn bytesRead;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tthis.updatePos(fd, normalizedPos, bytesRead);\n\t\t}\n\t}\n\n\tprivate normalizePos(fd: number, pos: number): number | null {\n\n\t\t// when calling fs.read/write we try to avoid passing in the \"pos\" argument and\n\t\t// rather prefer to pass in \"null\" because this avoids an extra seek(pos)\n\t\t// call that in some cases can even fail (e.g. when opening a file over FTP -\n\t\t// see https://github.com/microsoft/vscode/issues/73884).\n\t\t//\n\t\t// as such, we compare the passed in position argument with our last known\n\t\t// position for the file descriptor and use \"null\" if they match.\n\t\tif (pos === this.mapHandleToPos.get(fd)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn pos;\n\t}\n\n\tprivate updatePos(fd: number, pos: number | null, bytesLength: number | null): void {\n\t\tconst lastKnownPos = this.mapHandleToPos.get(fd);\n\t\tif (typeof lastKnownPos === 'number') {\n\n\t\t\t// pos !== null signals that previously a position was used that is\n\t\t\t// not null. node.js documentation explains, that in this case\n\t\t\t// the internal file pointer is not moving and as such we do not move\n\t\t\t// our position pointer.\n\t\t\t//\n\t\t\t// Docs: \"If position is null, data will be read from the current file position,\n\t\t\t// and the file position will be updated. If position is an integer, the file position\n\t\t\t// will remain unchanged.\"\n\t\t\tif (typeof pos === 'number') {\n\t\t\t\t// do not modify the position\n\t\t\t}\n\n\t\t\t// bytesLength = number is a signal that the read/write operation was\n\t\t\t// successful and as such we need to advance the position in the Map\n\t\t\t//\n\t\t\t// Docs (http://man7.org/linux/man-pages/man2/read.2.html):\n\t\t\t// \"On files that support seeking, the read operation commences at the\n\t\t\t// file offset, and the file offset is incremented by the number of\n\t\t\t// bytes read.\"\n\t\t\t//\n\t\t\t// Docs (http://man7.org/linux/man-pages/man2/write.2.html):\n\t\t\t// \"For a seekable file (i.e., one to which lseek(2) may be applied, for\n\t\t\t// example, a regular file) writing takes place at the file offset, and\n\t\t\t// the file offset is incremented by the number of bytes actually\n\t\t\t// written.\"\n\t\t\telse if (typeof bytesLength === 'number') {\n\t\t\t\tthis.mapHandleToPos.set(fd, lastKnownPos + bytesLength);\n\t\t\t}\n\n\t\t\t// bytesLength = null signals an error in the read/write operation\n\t\t\t// and as such we drop the handle from the Map because the position\n\t\t\t// is unspecificed at this point.\n\t\t\telse {\n\t\t\t\tthis.mapHandleToPos.delete(fd);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync write(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\t// we know at this point that the file to write to is truncated and thus empty\n\t\t// if the write now fails, the file remains empty. as such we really try hard\n\t\t// to ensure the write succeeds by retrying up to three times.\n\t\treturn retry(() => this.doWrite(fd, pos, data, offset, length), 100 /* ms delay */, 3 /* retries */);\n\t}\n\n\tprivate async doWrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\tconst normalizedPos = this.normalizePos(fd, pos);\n\n\t\tlet bytesWritten: number | null = null;\n\t\ttry {\n\t\t\tconst result = await Promises.write(fd, data, offset, length, normalizedPos);\n\n\t\t\tif (typeof result === 'number') {\n\t\t\t\tbytesWritten = result; // node.d.ts fail\n\t\t\t} else {\n\t\t\t\tbytesWritten = result.bytesWritten;\n\t\t\t}\n\n\t\t\treturn bytesWritten;\n\t\t} catch (error) {\n\t\t\tthrow await this.toFileSystemProviderWriteError(this.writeHandles.get(fd), error);\n\t\t} finally {\n\t\t\tthis.updatePos(fd, normalizedPos, bytesWritten);\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region Move/Copy/Delete/Create Folder\n\n\tasync mkdir(resource: URI): Promise<void> {\n\t\ttry {\n\t\t\tawait Promises.mkdir(this.toFilePath(resource));\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync delete(resource: URI, opts: FileDeleteOptions): Promise<void> {\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\tawait this.doDelete(filePath, opts);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprotected async doDelete(filePath: string, opts: FileDeleteOptions): Promise<void> {\n\t\tif (opts.recursive) {\n\t\t\tawait Promises.rm(filePath, RimRafMode.MOVE);\n\t\t} else {\n\t\t\tawait Promises.unlink(filePath);\n\t\t}\n\t}\n\n\tasync rename(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\tconst fromFilePath = this.toFilePath(from);\n\t\tconst toFilePath = this.toFilePath(to);\n\n\t\tif (fromFilePath === toFilePath) {\n\t\t\treturn; // simulate node.js behaviour here and do a no-op if paths match\n\t\t}\n\n\t\ttry {\n\n\t\t\t// Ensure target does not exist\n\t\t\tawait this.validateTargetDeleted(from, to, 'move', opts.overwrite);\n\n\t\t\t// Move\n\t\t\tawait Promises.move(fromFilePath, toFilePath);\n\t\t} catch (error) {\n\n\t\t\t// rewrite some typical errors that can happen especially around symlinks\n\t\t\t// to something the user can better understand\n\t\t\tif (error.code === 'EINVAL' || error.code === 'EBUSY' || error.code === 'ENAMETOOLONG') {\n\t\t\t\terror = new Error(localize('moveError', \"Unable to move '{0}' into '{1}' ({2}).\", basename(fromFilePath), basename(dirname(toFilePath)), error.toString()));\n\t\t\t}\n\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync copy(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\tconst fromFilePath = this.toFilePath(from);\n\t\tconst toFilePath = this.toFilePath(to);\n\n\t\tif (fromFilePath === toFilePath) {\n\t\t\treturn; // simulate node.js behaviour here and do a no-op if paths match\n\t\t}\n\n\t\ttry {\n\n\t\t\t// Ensure target does not exist\n\t\t\tawait this.validateTargetDeleted(from, to, 'copy', opts.overwrite);\n\n\t\t\t// Copy\n\t\t\tawait Promises.copy(fromFilePath, toFilePath, { preserveSymlinks: true });\n\t\t} catch (error) {\n\n\t\t\t// rewrite some typical errors that can happen especially around symlinks\n\t\t\t// to something the user can better understand\n\t\t\tif (error.code === 'EINVAL' || error.code === 'EBUSY' || error.code === 'ENAMETOOLONG') {\n\t\t\t\terror = new Error(localize('copyError', \"Unable to copy '{0}' into '{1}' ({2}).\", basename(fromFilePath), basename(dirname(toFilePath)), error.toString()));\n\t\t\t}\n\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprivate async validateTargetDeleted(from: URI, to: URI, mode: 'move' | 'copy', overwrite?: boolean): Promise<void> {\n\t\tconst fromFilePath = this.toFilePath(from);\n\t\tconst toFilePath = this.toFilePath(to);\n\n\t\tlet isSameResourceWithDifferentPathCase = false;\n\t\tconst isPathCaseSensitive = !!(this.capabilities & FileSystemProviderCapabilities.PathCaseSensitive);\n\t\tif (!isPathCaseSensitive) {\n\t\t\tisSameResourceWithDifferentPathCase = isEqual(fromFilePath, toFilePath, true /* ignore case */);\n\t\t}\n\n\t\tif (isSameResourceWithDifferentPathCase && mode === 'copy') {\n\t\t\tthrow createFileSystemProviderError(localize('fileCopyErrorPathCase', \"'File cannot be copied to same path with different path case\"), FileSystemProviderErrorCode.FileExists);\n\t\t}\n\n\t\t// handle existing target (unless this is a case change)\n\t\tif (!isSameResourceWithDifferentPathCase && await Promises.exists(toFilePath)) {\n\t\t\tif (!overwrite) {\n\t\t\t\tthrow createFileSystemProviderError(localize('fileCopyErrorExists', \"File at target already exists\"), FileSystemProviderErrorCode.FileExists);\n\t\t\t}\n\n\t\t\t// Delete target\n\t\t\tawait this.delete(to, { recursive: true, useTrash: false });\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region File Watching\n\n\tprotected createRecursiveWatcher(\n\t\tonChange: (changes: IDiskFileChange[]) => void,\n\t\tonLogMessage: (msg: ILogMessage) => void,\n\t\tverboseLogging: boolean\n\t): WatcherService {\n\t\tlet watcherImpl: {\n\t\t\tnew(\n\t\t\t\tonChange: (changes: IDiskFileChange[]) => void,\n\t\t\t\tonLogMessage: (msg: ILogMessage) => void,\n\t\t\t\tverboseLogging: boolean,\n\t\t\t\twatcherOptions?: IWatcherOptions\n\t\t\t): WatcherService\n\t\t};\n\n\t\tlet enableLegacyWatcher = false;\n\t\tif (this.options?.watcher?.usePolling) {\n\t\t\tenableLegacyWatcher = false; // must use Parcel watcher for when polling is required\n\t\t} else {\n\t\t\tenableLegacyWatcher = this.options?.legacyWatcher === 'on'; // setting always wins\n\t\t}\n\n\t\tif (enableLegacyWatcher) {\n\t\t\twatcherImpl = NsfwWatcherService;\n\t\t} else {\n\t\t\twatcherImpl = ParcelWatcherService;\n\t\t}\n\n\t\treturn new watcherImpl(\n\t\t\tchanges => onChange(changes),\n\t\t\tmsg => onLogMessage(msg),\n\t\t\tverboseLogging,\n\t\t\tthis.options?.watcher\n\t\t);\n\t}\n\n\tprotected override doWatch(watcher: WatcherService, requests: IWatchRequest[]): Promise<void> {\n\t\tconst usePolling = this.options?.watcher?.usePolling;\n\t\tif (usePolling === true) {\n\t\t\tfor (const request of requests) {\n\t\t\t\trequest.pollingInterval = this.options?.watcher?.pollingInterval ?? 5000;\n\t\t\t}\n\t\t} else if (Array.isArray(usePolling)) {\n\t\t\tfor (const request of requests) {\n\t\t\t\tif (usePolling.includes(request.path)) {\n\t\t\t\t\trequest.pollingInterval = this.options?.watcher?.pollingInterval ?? 5000;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn super.doWatch(watcher, requests);\n\t}\n\n\tprotected createNonRecursiveWatcher(\n\t\tpath: string,\n\t\tonChange: (changes: IDiskFileChange[]) => void,\n\t\tonLogMessage: (msg: ILogMessage) => void,\n\t\tverboseLogging: boolean\n\t): IDisposable & { setVerboseLogging: (verboseLogging: boolean) => void } {\n\t\treturn new NodeJSWatcherService(\n\t\t\tpath,\n\t\t\tchanges => onChange(changes),\n\t\t\tmsg => onLogMessage(msg),\n\t\t\tverboseLogging\n\t\t);\n\t}\n\n\t//#endregion\n\n\t//#region Helpers\n\n\tprivate toFileSystemProviderError(error: NodeJS.ErrnoException): FileSystemProviderError {\n\t\tif (error instanceof FileSystemProviderError) {\n\t\t\treturn error; // avoid double conversion\n\t\t}\n\n\t\tlet code: FileSystemProviderErrorCode;\n\t\tswitch (error.code) {\n\t\t\tcase 'ENOENT':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileNotFound;\n\t\t\t\tbreak;\n\t\t\tcase 'EISDIR':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileIsADirectory;\n\t\t\t\tbreak;\n\t\t\tcase 'ENOTDIR':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileNotADirectory;\n\t\t\t\tbreak;\n\t\t\tcase 'EEXIST':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileExists;\n\t\t\t\tbreak;\n\t\t\tcase 'EPERM':\n\t\t\tcase 'EACCES':\n\t\t\t\tcode = FileSystemProviderErrorCode.NoPermissions;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcode = FileSystemProviderErrorCode.Unknown;\n\t\t}\n\n\t\treturn createFileSystemProviderError(error, code);\n\t}\n\n\tprivate async toFileSystemProviderWriteError(resource: URI | undefined, error: NodeJS.ErrnoException): Promise<FileSystemProviderError> {\n\t\tlet fileSystemProviderWriteError = this.toFileSystemProviderError(error);\n\n\t\t// If the write error signals permission issues, we try\n\t\t// to read the file's mode to see if the file is write\n\t\t// locked.\n\t\tif (resource && fileSystemProviderWriteError.code === FileSystemProviderErrorCode.NoPermissions) {\n\t\t\ttry {\n\t\t\t\tconst { stat } = await SymlinkSupport.stat(this.toFilePath(resource));\n\t\t\t\tif (!(stat.mode & 0o200 /* File mode indicating writable by owner */)) {\n\t\t\t\t\tfileSystemProviderWriteError = createFileSystemProviderError(error, FileSystemProviderErrorCode.FileWriteLocked);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.trace(error); // ignore - return original error\n\t\t\t}\n\t\t}\n\n\t\treturn fileSystemProviderWriteError;\n\t}\n\n\t//#endregion\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { URI } from 'vs/base/common/uri';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { AbstractLoggerService, AbstractMessageLogger, AdapterLogger, ILogger, ILoggerOptions, ILoggerService, ILogService, log, LogLevel, LogService } from 'vs/platform/log/common/log';\n\nexport class LogLevelChannel implements IServerChannel {\n\n\tonDidChangeLogLevel: Event<LogLevel>;\n\n\tconstructor(private service: ILogService) {\n\t\tthis.onDidChangeLogLevel = Event.buffer(service.onDidChangeLogLevel, true);\n\t}\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'onDidChangeLogLevel': return this.onDidChangeLogLevel;\n\t\t}\n\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tasync call(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'setLevel': return this.service.setLevel(arg);\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n\n}\n\nexport class LogLevelChannelClient {\n\n\tconstructor(private channel: IChannel) { }\n\n\tget onDidChangeLogLevel(): Event<LogLevel> {\n\t\treturn this.channel.listen('onDidChangeLogLevel');\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tLogLevelChannelClient.setLevel(this.channel, level);\n\t}\n\n\tpublic static setLevel(channel: IChannel, level: LogLevel): Promise<void> {\n\t\treturn channel.call('setLevel', level);\n\t}\n\n}\n\nexport class LoggerChannel implements IServerChannel {\n\n\tprivate readonly loggers = new Map<string, ILogger>();\n\n\tconstructor(private readonly loggerService: ILoggerService) { }\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tasync call(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'createLogger': this.createLogger(URI.revive(arg[0]), arg[1]); return;\n\t\t\tcase 'log': return this.log(URI.revive(arg[0]), arg[1]);\n\t\t\tcase 'consoleLog': return this.consoleLog(arg[0], arg[1]);\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n\n\tprivate createLogger(file: URI, options: ILoggerOptions): void {\n\t\tthis.loggers.set(file.toString(), this.loggerService.createLogger(file, options));\n\t}\n\n\tprivate consoleLog(level: LogLevel, args: any[]): void {\n\t\tlet consoleFn = console.log;\n\n\t\tswitch (level) {\n\t\t\tcase LogLevel.Error:\n\t\t\t\tconsoleFn = console.error;\n\t\t\t\tbreak;\n\t\t\tcase LogLevel.Warning:\n\t\t\t\tconsoleFn = console.warn;\n\t\t\t\tbreak;\n\t\t\tcase LogLevel.Info:\n\t\t\t\tconsoleFn = console.info;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconsoleFn.call(console, ...args);\n\t}\n\n\tprivate log(file: URI, messages: [LogLevel, string][]): void {\n\t\tconst logger = this.loggers.get(file.toString());\n\t\tif (!logger) {\n\t\t\tthrow new Error('Create the logger before logging');\n\t\t}\n\t\tfor (const [level, message] of messages) {\n\t\t\tlog(logger, level, message);\n\t\t}\n\t}\n}\n\nexport class LoggerChannelClient extends AbstractLoggerService implements ILoggerService {\n\n\tconstructor(logLevel: LogLevel, onDidChangeLogLevel: Event<LogLevel>, private readonly channel: IChannel) {\n\t\tsuper(logLevel, onDidChangeLogLevel);\n\t}\n\n\tcreateConsoleMainLogger(): ILogger {\n\t\treturn new AdapterLogger({\n\t\t\tlog: (level: LogLevel, args: any[]) => {\n\t\t\t\tthis.channel.call('consoleLog', [level, args]);\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected doCreateLogger(file: URI, logLevel: LogLevel, options?: ILoggerOptions): ILogger {\n\t\treturn new Logger(this.channel, file, logLevel, options);\n\t}\n\n}\n\nclass Logger extends AbstractMessageLogger {\n\n\tprivate isLoggerCreated: boolean = false;\n\tprivate buffer: [LogLevel, string][] = [];\n\n\tconstructor(\n\t\tprivate readonly channel: IChannel,\n\t\tprivate readonly file: URI,\n\t\tlogLevel: LogLevel,\n\t\tloggerOptions?: ILoggerOptions,\n\t) {\n\t\tsuper(loggerOptions?.always);\n\t\tthis.setLevel(logLevel);\n\t\tthis.channel.call('createLogger', [file, loggerOptions])\n\t\t\t.then(() => {\n\t\t\t\tthis.doLog(this.buffer);\n\t\t\t\tthis.isLoggerCreated = true;\n\t\t\t});\n\t}\n\n\tprotected log(level: LogLevel, message: string) {\n\t\tconst messages: [LogLevel, string][] = [[level, message]];\n\t\tif (this.isLoggerCreated) {\n\t\t\tthis.doLog(messages);\n\t\t} else {\n\t\t\tthis.buffer.push(...messages);\n\t\t}\n\t}\n\n\tprivate doLog(messages: [LogLevel, string][]) {\n\t\tthis.channel.call('log', [this.file, messages]);\n\t}\n}\n\nexport class FollowerLogService extends LogService implements ILogService {\n\n\tconstructor(private parent: LogLevelChannelClient, logService: ILogService) {\n\t\tsuper(logService);\n\t\tthis._register(parent.onDidChangeLogLevel(level => logService.setLevel(level)));\n\t}\n\n\toverride setLevel(level: LogLevel): void {\n\t\tsuper.setLevel(level);\n\n\t\tthis.parent.setLevel(level);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ICommonNativeHostService } from 'vs/platform/native/common/native';\n\nexport const INativeHostService = createDecorator<INativeHostService>('nativeHostService');\n\n/**\n * A set of methods specific to a native host, i.e. unsupported in web\n * environments.\n *\n * @see {@link IHostService} for methods that can be used in native and web\n * hosts.\n */\nexport interface INativeHostService extends ICommonNativeHostService { }\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { FileAccess } from 'vs/base/common/network';\nimport { globals } from 'vs/base/common/platform';\nimport { env } from 'vs/base/common/process';\nimport { IProductConfiguration } from 'vs/base/common/product';\nimport { dirname, joinPath } from 'vs/base/common/resources';\nimport { ISandboxConfiguration } from 'vs/base/parts/sandbox/common/sandboxTypes';\n\n/**\n * @deprecated You MUST use `IProductService` if possible.\n */\nlet product: IProductConfiguration;\n\n// Native sandbox environment\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.context !== 'undefined') {\n\tconst configuration: ISandboxConfiguration | undefined = globals.vscode.context.configuration();\n\tif (configuration) {\n\t\tproduct = configuration.product;\n\t} else {\n\t\tthrow new Error('Sandbox: unable to resolve product configuration from preload script.');\n\t}\n}\n\n// Native node.js environment\nelse if (typeof require?.__$__nodeRequire === 'function') {\n\n\t// Obtain values from product.json and package.json\n\tconst rootPath = dirname(FileAccess.asFileUri('', require));\n\n\tproduct = require.__$__nodeRequire(joinPath(rootPath, 'product.json').fsPath);\n\tconst pkg = require.__$__nodeRequire(joinPath(rootPath, 'package.json').fsPath) as { version: string; };\n\n\t// Running out of sources\n\tif (env['VSCODE_DEV']) {\n\t\tObject.assign(product, {\n\t\t\tnameShort: `${product.nameShort} Dev`,\n\t\t\tnameLong: `${product.nameLong} Dev`,\n\t\t\tdataFolderName: `${product.dataFolderName}-dev`\n\t\t});\n\t}\n\n\tObject.assign(product, {\n\t\tversion: pkg.version\n\t});\n}\n\n// Web environment or unknown\nelse {\n\n\t// Built time configuration (do NOT modify)\n\tproduct = { /*BUILD->INSERT_PRODUCT_CONFIGURATION*/ } as IProductConfiguration;\n\n\t// Running out of sources\n\tif (Object.keys(product).length === 0) {\n\t\tObject.assign(product, {\n\t\t\tversion: '1.63.0-dev',\n\t\t\tnameShort: 'OI Wiki Editor',\n\t\t\tnameLong: 'OI Wiki Editor',\n\t\t\tapplicationName: 'code-oss',\n\t\t\tdataFolderName: '.vscode-oss',\n\t\t\turlProtocol: 'code-oss',\n\t\t\treportIssueUrl: 'https://github.com/microsoft/vscode/issues/new',\n\t\t\tlicenseName: 'MIT',\n\t\t\tlicenseUrl: 'https://github.com/microsoft/vscode/blob/main/LICENSE.txt',\n\t\t\textensionAllowedProposedApi: [\n\t\t\t\t'ms-vscode.vscode-js-profile-flame',\n\t\t\t\t'ms-vscode.vscode-js-profile-table',\n\t\t\t\t'GitHub.remotehub',\n\t\t\t\t'GitHub.remotehub-insiders'\n\t\t\t],\n\t\t\textensionsGallery: {\n\t\t\t\tserviceUrl: \"https://marketplace.visualstudio.com/_apis/public/gallery\",\n\t\t\t\tcacheUrl: \"https://vscode.blob.core.windows.net/gallery/index\",\n\t\t\t\titemUrl: \"https://marketplace.visualstudio.com/items\"\n\t\t\t},\n\t\t});\n\t}\n}\n\n/**\n * @deprecated You MUST use `IProductService` if possible.\n */\nexport default product;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IProductConfiguration } from 'vs/base/common/product';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IProductService = createDecorator<IProductService>('productService');\n\nexport interface IProductService extends Readonly<IProductConfiguration> {\n\n\treadonly _serviceBrand: undefined;\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { basename, dirname, join } from 'vs/base/common/path';\nimport { Promises } from 'vs/base/node/pfs';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\n\nexport class CodeCacheCleaner extends Disposable {\n\n\tprivate readonly _DataMaxAge = this.productService.quality !== 'stable'\n\t\t? 1000 * 60 * 60 * 24 * 7 \t\t// roughly 1 week (insiders)\n\t\t: 1000 * 60 * 60 * 24 * 30 * 3; // roughly 3 months (stable)\n\n\tconstructor(\n\t\tcurrentCodeCachePath: string | undefined,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\n\t\t// Cached data is stored as user data and we run a cleanup task every time\n\t\t// the editor starts. The strategy is to delete all files that are older than\n\t\t// 3 months (1 week respectively)\n\t\tif (currentCodeCachePath) {\n\t\t\tconst scheduler = this._register(new RunOnceScheduler(() => {\n\t\t\t\tthis.cleanUpCodeCaches(currentCodeCachePath);\n\t\t\t}, 30 * 1000 /* after 30s */));\n\t\t\tscheduler.schedule();\n\t\t}\n\t}\n\n\tprivate async cleanUpCodeCaches(currentCodeCachePath: string): Promise<void> {\n\t\tthis.logService.trace('[code cache cleanup]: Starting to clean up old code cache folders.');\n\n\t\ttry {\n\t\t\tconst now = Date.now();\n\n\t\t\t// The folder which contains folders of cached data.\n\t\t\t// Each of these folders is partioned per commit\n\t\t\tconst codeCacheRootPath = dirname(currentCodeCachePath);\n\t\t\tconst currentCodeCache = basename(currentCodeCachePath);\n\n\t\t\tconst codeCaches = await Promises.readdir(codeCacheRootPath);\n\t\t\tawait Promise.all(codeCaches.map(async codeCache => {\n\t\t\t\tif (codeCache === currentCodeCache) {\n\t\t\t\t\treturn; // not the current cache folder\n\t\t\t\t}\n\n\t\t\t\t// Delete cache folder if old enough\n\t\t\t\tconst codeCacheEntryPath = join(codeCacheRootPath, codeCache);\n\t\t\t\tconst codeCacheEntryStat = await Promises.stat(codeCacheEntryPath);\n\t\t\t\tif (codeCacheEntryStat.isDirectory() && (now - codeCacheEntryStat.mtime.getTime()) > this._DataMaxAge) {\n\t\t\t\t\tthis.logService.trace(`[code cache cleanup]: Removing code cache folder ${codeCache}.`);\n\n\t\t\t\t\treturn Promises.rm(codeCacheEntryPath);\n\t\t\t\t}\n\t\t\t}));\n\t\t} catch (error) {\n\t\t\tonUnexpectedError(error);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { join } from 'vs/base/common/path';\nimport { Promises } from 'vs/base/node/pfs';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\n\ninterface IExtensionEntry {\n\tversion: string;\n\textensionIdentifier: {\n\t\tid: string;\n\t\tuuid: string;\n\t};\n}\n\ninterface ILanguagePackEntry {\n\thash: string;\n\textensions: IExtensionEntry[];\n}\n\ninterface ILanguagePackFile {\n\t[locale: string]: ILanguagePackEntry;\n}\n\nexport class LanguagePackCachedDataCleaner extends Disposable {\n\n\tprivate readonly _DataMaxAge = this.productService.quality !== 'stable'\n\t\t? 1000 * 60 * 60 * 24 * 7 \t\t// roughly 1 week (insiders)\n\t\t: 1000 * 60 * 60 * 24 * 30 * 3; // roughly 3 months (stable)\n\n\tconstructor(\n\t\t@INativeEnvironmentService private readonly environmentService: INativeEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IProductService private readonly productService: IProductService\n\t) {\n\t\tsuper();\n\n\t\t// We have no Language pack support for dev version (run from source)\n\t\t// So only cleanup when we have a build version.\n\t\tif (this.environmentService.isBuilt) {\n\t\t\tconst scheduler = this._register(new RunOnceScheduler(() => {\n\t\t\t\tthis.cleanUpLanguagePackCache();\n\t\t\t}, 40 * 1000 /* after 40s */));\n\t\t\tscheduler.schedule();\n\t\t}\n\t}\n\n\tprivate async cleanUpLanguagePackCache(): Promise<void> {\n\t\tthis.logService.trace('[language pack cache cleanup]: Starting to clean up unused language packs.');\n\n\t\ttry {\n\t\t\tconst installed: IStringDictionary<boolean> = Object.create(null);\n\t\t\tconst metaData: ILanguagePackFile = JSON.parse(await Promises.readFile(join(this.environmentService.userDataPath, 'languagepacks.json'), 'utf8'));\n\t\t\tfor (let locale of Object.keys(metaData)) {\n\t\t\t\tconst entry = metaData[locale];\n\t\t\t\tinstalled[`${entry.hash}.${locale}`] = true;\n\t\t\t}\n\n\t\t\t// Cleanup entries for language packs that aren't installed anymore\n\t\t\tconst cacheDir = join(this.environmentService.userDataPath, 'clp');\n\t\t\tconst cacheDirExists = await Promises.exists(cacheDir);\n\t\t\tif (!cacheDirExists) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst entries = await Promises.readdir(cacheDir);\n\t\t\tfor (const entry of entries) {\n\t\t\t\tif (installed[entry]) {\n\t\t\t\t\tthis.logService.trace(`[language pack cache cleanup]: Skipping folder ${entry}. Language pack still in use.`);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tthis.logService.trace(`[language pack cache cleanup]: Removing unused language pack: ${entry}`);\n\n\t\t\t\tawait Promises.rm(join(cacheDir, entry));\n\t\t\t}\n\n\t\t\tconst now = Date.now();\n\t\t\tfor (const packEntry of Object.keys(installed)) {\n\t\t\t\tconst folder = join(cacheDir, packEntry);\n\t\t\t\tconst entries = await Promises.readdir(folder);\n\t\t\t\tfor (const entry of entries) {\n\t\t\t\t\tif (entry === 'tcf.json') {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst candidate = join(folder, entry);\n\t\t\t\t\tconst stat = await Promises.stat(candidate);\n\t\t\t\t\tif (stat.isDirectory() && (now - stat.mtime.getTime()) > this._DataMaxAge) {\n\t\t\t\t\t\tthis.logService.trace(`[language pack cache cleanup]: Removing language pack cache folder: ${join(packEntry, entry)}`);\n\n\t\t\t\t\t\tawait Promises.rm(candidate);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tonUnexpectedError(error);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as Assert from 'vs/base/common/assert';\nimport * as Types from 'vs/base/common/types';\n\nexport interface IRegistry {\n\n\t/**\n\t * Adds the extension functions and properties defined by data to the\n\t * platform. The provided id must be unique.\n\t * @param id a unique identifier\n\t * @param data a contribution\n\t */\n\tadd(id: string, data: any): void;\n\n\t/**\n\t * Returns true iff there is an extension with the provided id.\n\t * @param id an extension identifier\n\t */\n\tknows(id: string): boolean;\n\n\t/**\n\t * Returns the extension functions and properties defined by the specified key or null.\n\t * @param id an extension identifier\n\t */\n\tas<T>(id: string): T;\n}\n\nclass RegistryImpl implements IRegistry {\n\n\tprivate readonly data = new Map<string, any>();\n\n\tpublic add(id: string, data: any): void {\n\t\tAssert.ok(Types.isString(id));\n\t\tAssert.ok(Types.isObject(data));\n\t\tAssert.ok(!this.data.has(id), 'There is already an extension with this id');\n\n\t\tthis.data.set(id, data);\n\t}\n\n\tpublic knows(id: string): boolean {\n\t\treturn this.data.has(id);\n\t}\n\n\tpublic as(id: string): any {\n\t\treturn this.data.get(id) || null;\n\t}\n}\n\nexport const Registry: IRegistry = new RegistryImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport * as platform from 'vs/platform/registry/common/platform';\n\nexport const Extensions = {\n\tJSONContribution: 'base.contributions.json'\n};\n\nexport interface ISchemaContributions {\n\tschemas: { [id: string]: IJSONSchema };\n}\n\nexport interface IJSONContributionRegistry {\n\n\treadonly onDidChangeSchema: Event<string>;\n\n\t/**\n\t * Register a schema to the registry.\n\t */\n\tregisterSchema(uri: string, unresolvedSchemaContent: IJSONSchema): void;\n\n\n\t/**\n\t * Notifies all listeners that the content of the given schema has changed.\n\t * @param uri The id of the schema\n\t */\n\tnotifySchemaChanged(uri: string): void;\n\n\t/**\n\t * Get all schemas\n\t */\n\tgetSchemaContributions(): ISchemaContributions;\n}\n\n\n\nfunction normalizeId(id: string) {\n\tif (id.length > 0 && id.charAt(id.length - 1) === '#') {\n\t\treturn id.substring(0, id.length - 1);\n\t}\n\treturn id;\n}\n\n\n\nclass JSONContributionRegistry implements IJSONContributionRegistry {\n\n\tprivate schemasById: { [id: string]: IJSONSchema };\n\n\tprivate readonly _onDidChangeSchema = new Emitter<string>();\n\treadonly onDidChangeSchema: Event<string> = this._onDidChangeSchema.event;\n\n\tconstructor() {\n\t\tthis.schemasById = {};\n\t}\n\n\tpublic registerSchema(uri: string, unresolvedSchemaContent: IJSONSchema): void {\n\t\tthis.schemasById[normalizeId(uri)] = unresolvedSchemaContent;\n\t\tthis._onDidChangeSchema.fire(uri);\n\t}\n\n\tpublic notifySchemaChanged(uri: string): void {\n\t\tthis._onDidChangeSchema.fire(uri);\n\t}\n\n\tpublic getSchemaContributions(): ISchemaContributions {\n\t\treturn {\n\t\t\tschemas: this.schemasById,\n\t\t};\n\t}\n\n}\n\nconst jsonContributionRegistry = new JSONContributionRegistry();\nplatform.Registry.add(Extensions.JSONContribution, jsonContributionRegistry);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { distinct } from 'vs/base/common/arrays';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport * as types from 'vs/base/common/types';\nimport * as nls from 'vs/nls';\nimport { Extensions as JSONExtensions, IJSONContributionRegistry } from 'vs/platform/jsonschemas/common/jsonContributionRegistry';\nimport { Registry } from 'vs/platform/registry/common/platform';\n\nexport enum EditPresentationTypes {\n\tMultiline = 'multilineText',\n\tSingleline = 'singlelineText'\n}\n\nexport const Extensions = {\n\tConfiguration: 'base.contributions.configuration'\n};\n\nexport interface IConfigurationRegistry {\n\n\t/**\n\t * Register a configuration to the registry.\n\t */\n\tregisterConfiguration(configuration: IConfigurationNode): void;\n\n\t/**\n\t * Register multiple configurations to the registry.\n\t */\n\tregisterConfigurations(configurations: IConfigurationNode[], validate?: boolean): void;\n\n\t/**\n\t * Deregister multiple configurations from the registry.\n\t */\n\tderegisterConfigurations(configurations: IConfigurationNode[]): void;\n\n\t/**\n\t * update the configuration registry by\n\t * \t- registering the configurations to add\n\t * \t- dereigstering the configurations to remove\n\t */\n\tupdateConfigurations(configurations: { add: IConfigurationNode[], remove: IConfigurationNode[] }): void;\n\n\t/**\n\t * Register multiple default configurations to the registry.\n\t */\n\tregisterDefaultConfigurations(defaultConfigurations: IConfigurationDefaults[]): void;\n\n\t/**\n\t * Deregister multiple default configurations from the registry.\n\t */\n\tderegisterDefaultConfigurations(defaultConfigurations: IConfigurationDefaults[]): void;\n\n\t/**\n\t * Return the registered configuration defaults overrides\n\t */\n\tgetConfigurationDefaultsOverrides(): Map<string, IConfigurationDefaultOverride>;\n\n\t/**\n\t * Signal that the schema of a configuration setting has changes. It is currently only supported to change enumeration values.\n\t * Property or default value changes are not allowed.\n\t */\n\tnotifyConfigurationSchemaUpdated(...configurations: IConfigurationNode[]): void;\n\n\t/**\n\t * Event that fires whenver a configuration has been\n\t * registered.\n\t */\n\treadonly onDidSchemaChange: Event<void>;\n\n\t/**\n\t * Event that fires whenver a configuration has been\n\t * registered.\n\t */\n\treadonly onDidUpdateConfiguration: Event<{ properties: string[], defaultsOverrides?: boolean }>;\n\n\t/**\n\t * Returns all configuration nodes contributed to this registry.\n\t */\n\tgetConfigurations(): IConfigurationNode[];\n\n\t/**\n\t * Returns all configurations settings of all configuration nodes contributed to this registry.\n\t */\n\tgetConfigurationProperties(): IStringDictionary<IRegisteredConfigurationPropertySchema>;\n\n\t/**\n\t * Returns all excluded configurations settings of all configuration nodes contributed to this registry.\n\t */\n\tgetExcludedConfigurationProperties(): IStringDictionary<IRegisteredConfigurationPropertySchema>;\n\n\t/**\n\t * Register the identifiers for editor configurations\n\t */\n\tregisterOverrideIdentifiers(identifiers: string[]): void;\n}\n\nexport const enum ConfigurationScope {\n\t/**\n\t * Application specific configuration, which can be configured only in local user settings.\n\t */\n\tAPPLICATION = 1,\n\t/**\n\t * Machine specific configuration, which can be configured only in local and remote user settings.\n\t */\n\tMACHINE,\n\t/**\n\t * Window specific configuration, which can be configured in the user or workspace settings.\n\t */\n\tWINDOW,\n\t/**\n\t * Resource specific configuration, which can be configured in the user, workspace or folder settings.\n\t */\n\tRESOURCE,\n\t/**\n\t * Resource specific configuration that can be configured in language specific settings\n\t */\n\tLANGUAGE_OVERRIDABLE,\n\t/**\n\t * Machine specific configuration that can also be configured in workspace or folder settings.\n\t */\n\tMACHINE_OVERRIDABLE,\n}\n\nexport interface IConfigurationPropertySchema extends IJSONSchema {\n\n\tscope?: ConfigurationScope;\n\n\t/**\n\t * When restricted, value of this configuration will be read only from trusted sources.\n\t * For eg., If the workspace is not trusted, then the value of this configuration is not read from workspace settings file.\n\t */\n\trestricted?: boolean;\n\n\t/**\n\t * When `false` this property is excluded from the registry. Default is to include.\n\t */\n\tincluded?: boolean;\n\n\t/**\n\t * List of tags associated to the property.\n\t *  - A tag can be used for filtering\n\t *  - Use `experimental` tag for marking the setting as experimental. **Note:** Defaults of experimental settings can be changed by the running experiments.\n\t */\n\ttags?: string[];\n\n\t/**\n\t * When enabled this setting is ignored during sync and user can override this.\n\t */\n\tignoreSync?: boolean;\n\n\t/**\n\t * When enabled this setting is ignored during sync and user cannot override this.\n\t */\n\tdisallowSyncIgnore?: boolean;\n\n\t/**\n\t * Labels for enumeration items\n\t */\n\tenumItemLabels?: string[];\n\n\t/**\n\t * When specified, controls the presentation format of string settings.\n\t * Otherwise, the presentation format defaults to `singleline`.\n\t */\n\teditPresentation?: EditPresentationTypes;\n\n\t/**\n\t * When specified, gives an order number for the setting\n\t * within the settings editor. Otherwise, the setting is placed at the end.\n\t */\n\torder?: number;\n}\n\nexport interface IExtensionInfo {\n\tid: string;\n\tdisplayName?: string;\n}\n\nexport interface IConfigurationNode {\n\tid?: string;\n\torder?: number;\n\ttype?: string | string[];\n\ttitle?: string;\n\tdescription?: string;\n\tproperties?: IStringDictionary<IConfigurationPropertySchema>;\n\tallOf?: IConfigurationNode[];\n\tscope?: ConfigurationScope;\n\textensionInfo?: IExtensionInfo;\n\trestrictedProperties?: string[];\n}\n\nexport interface IConfigurationDefaults {\n\toverrides: IStringDictionary<any>;\n\tsource?: IExtensionInfo | string;\n}\n\nexport type IRegisteredConfigurationPropertySchema = IConfigurationPropertySchema & {\n\tdefaultDefaultValue?: any,\n\tsource?: IExtensionInfo,\n\tdefaultValueSource?: IExtensionInfo | string;\n};\n\nexport type IConfigurationDefaultOverride = { value: any, source?: IExtensionInfo | string };\n\nexport const allSettings: { properties: IStringDictionary<IConfigurationPropertySchema>, patternProperties: IStringDictionary<IConfigurationPropertySchema> } = { properties: {}, patternProperties: {} };\nexport const applicationSettings: { properties: IStringDictionary<IConfigurationPropertySchema>, patternProperties: IStringDictionary<IConfigurationPropertySchema> } = { properties: {}, patternProperties: {} };\nexport const machineSettings: { properties: IStringDictionary<IConfigurationPropertySchema>, patternProperties: IStringDictionary<IConfigurationPropertySchema> } = { properties: {}, patternProperties: {} };\nexport const machineOverridableSettings: { properties: IStringDictionary<IConfigurationPropertySchema>, patternProperties: IStringDictionary<IConfigurationPropertySchema> } = { properties: {}, patternProperties: {} };\nexport const windowSettings: { properties: IStringDictionary<IConfigurationPropertySchema>, patternProperties: IStringDictionary<IConfigurationPropertySchema> } = { properties: {}, patternProperties: {} };\nexport const resourceSettings: { properties: IStringDictionary<IConfigurationPropertySchema>, patternProperties: IStringDictionary<IConfigurationPropertySchema> } = { properties: {}, patternProperties: {} };\n\nexport const resourceLanguageSettingsSchemaId = 'vscode://schemas/settings/resourceLanguage';\nexport const configurationDefaultsSchemaId = 'vscode://schemas/settings/configurationDefaults';\n\nconst contributionRegistry = Registry.as<IJSONContributionRegistry>(JSONExtensions.JSONContribution);\n\nclass ConfigurationRegistry implements IConfigurationRegistry {\n\n\tprivate readonly configurationDefaultsOverrides: Map<string, IConfigurationDefaultOverride>;\n\tprivate readonly defaultLanguageConfigurationOverridesNode: IConfigurationNode;\n\tprivate readonly configurationContributors: IConfigurationNode[];\n\tprivate readonly configurationProperties: IStringDictionary<IRegisteredConfigurationPropertySchema>;\n\tprivate readonly excludedConfigurationProperties: IStringDictionary<IRegisteredConfigurationPropertySchema>;\n\tprivate readonly resourceLanguageSettingsSchema: IJSONSchema;\n\tprivate readonly overrideIdentifiers = new Set<string>();\n\n\tprivate readonly _onDidSchemaChange = new Emitter<void>();\n\treadonly onDidSchemaChange: Event<void> = this._onDidSchemaChange.event;\n\n\tprivate readonly _onDidUpdateConfiguration = new Emitter<{ properties: string[], defaultsOverrides?: boolean }>();\n\treadonly onDidUpdateConfiguration = this._onDidUpdateConfiguration.event;\n\n\tconstructor() {\n\t\tthis.configurationDefaultsOverrides = new Map<string, IConfigurationDefaultOverride>();\n\t\tthis.defaultLanguageConfigurationOverridesNode = {\n\t\t\tid: 'defaultOverrides',\n\t\t\ttitle: nls.localize('defaultLanguageConfigurationOverrides.title', \"Default Language Configuration Overrides\"),\n\t\t\tproperties: {}\n\t\t};\n\t\tthis.configurationContributors = [this.defaultLanguageConfigurationOverridesNode];\n\t\tthis.resourceLanguageSettingsSchema = { properties: {}, patternProperties: {}, additionalProperties: false, errorMessage: 'Unknown editor configuration setting', allowTrailingCommas: true, allowComments: true };\n\t\tthis.configurationProperties = {};\n\t\tthis.excludedConfigurationProperties = {};\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t\tthis.registerOverridePropertyPatternKey();\n\t}\n\n\tpublic registerConfiguration(configuration: IConfigurationNode, validate: boolean = true): void {\n\t\tthis.registerConfigurations([configuration], validate);\n\t}\n\n\tpublic registerConfigurations(configurations: IConfigurationNode[], validate: boolean = true): void {\n\t\tconst properties = this.doRegisterConfigurations(configurations, validate);\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire({ properties });\n\t}\n\n\tpublic deregisterConfigurations(configurations: IConfigurationNode[]): void {\n\t\tconst properties = this.doDeregisterConfigurations(configurations);\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire({ properties });\n\t}\n\n\tpublic updateConfigurations({ add, remove }: { add: IConfigurationNode[], remove: IConfigurationNode[] }): void {\n\t\tconst properties = [];\n\t\tproperties.push(...this.doDeregisterConfigurations(remove));\n\t\tproperties.push(...this.doRegisterConfigurations(add, false));\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire({ properties: distinct(properties) });\n\t}\n\n\tpublic registerDefaultConfigurations(configurationDefaults: IConfigurationDefaults[]): void {\n\t\tconst properties: string[] = [];\n\t\tconst overrideIdentifiers: string[] = [];\n\n\t\tfor (const { overrides, source } of configurationDefaults) {\n\t\t\tfor (const key in overrides) {\n\t\t\t\tproperties.push(key);\n\n\t\t\t\tif (OVERRIDE_PROPERTY_REGEX.test(key)) {\n\t\t\t\t\tconst defaultValue = { ...(this.configurationDefaultsOverrides.get(key)?.value || {}), ...overrides[key] };\n\t\t\t\t\tthis.configurationDefaultsOverrides.set(key, { source, value: defaultValue });\n\t\t\t\t\tconst property: IRegisteredConfigurationPropertySchema = {\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\tdefault: defaultValue,\n\t\t\t\t\t\tdescription: nls.localize('defaultLanguageConfiguration.description', \"Configure settings to be overridden for {0} language.\", key),\n\t\t\t\t\t\t$ref: resourceLanguageSettingsSchemaId,\n\t\t\t\t\t\tdefaultDefaultValue: defaultValue,\n\t\t\t\t\t\tsource: types.isString(source) ? undefined : source,\n\t\t\t\t\t};\n\t\t\t\t\toverrideIdentifiers.push(...overrideIdentifiersFromKey(key));\n\t\t\t\t\tthis.configurationProperties[key] = property;\n\t\t\t\t\tthis.defaultLanguageConfigurationOverridesNode.properties![key] = property;\n\t\t\t\t} else {\n\t\t\t\t\tthis.configurationDefaultsOverrides.set(key, { value: overrides[key], source });\n\t\t\t\t\tconst property = this.configurationProperties[key];\n\t\t\t\t\tif (property) {\n\t\t\t\t\t\tthis.updatePropertyDefaultValue(key, property);\n\t\t\t\t\t\tthis.updateSchema(key, property);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.registerOverrideIdentifiers(overrideIdentifiers);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire({ properties, defaultsOverrides: true });\n\t}\n\n\tpublic deregisterDefaultConfigurations(defaultConfigurations: IConfigurationDefaults[]): void {\n\t\tconst properties: string[] = [];\n\t\tfor (const { overrides, source } of defaultConfigurations) {\n\t\t\tfor (const key in overrides) {\n\t\t\t\tconst configurationDefaultsOverride = this.configurationDefaultsOverrides.get(key);\n\t\t\t\tconst id = types.isString(source) ? source : source?.id;\n\t\t\t\tconst configurationDefaultsOverrideSourceId = types.isString(configurationDefaultsOverride?.source) ? configurationDefaultsOverride?.source : configurationDefaultsOverride?.source?.id;\n\t\t\t\tif (id !== configurationDefaultsOverrideSourceId) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tproperties.push(key);\n\t\t\t\tthis.configurationDefaultsOverrides.delete(key);\n\t\t\t\tif (OVERRIDE_PROPERTY_REGEX.test(key)) {\n\t\t\t\t\tdelete this.configurationProperties[key];\n\t\t\t\t\tdelete this.defaultLanguageConfigurationOverridesNode.properties![key];\n\t\t\t\t} else {\n\t\t\t\t\tconst property = this.configurationProperties[key];\n\t\t\t\t\tif (property) {\n\t\t\t\t\t\tthis.updatePropertyDefaultValue(key, property);\n\t\t\t\t\t\tthis.updateSchema(key, property);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.updateOverridePropertyPatternKey();\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire({ properties, defaultsOverrides: true });\n\t}\n\n\tpublic notifyConfigurationSchemaUpdated(...configurations: IConfigurationNode[]) {\n\t\tthis._onDidSchemaChange.fire();\n\t}\n\n\tpublic registerOverrideIdentifiers(overrideIdentifiers: string[]): void {\n\t\tfor (const overrideIdentifier of overrideIdentifiers) {\n\t\t\tthis.overrideIdentifiers.add(overrideIdentifier);\n\t\t}\n\t\tthis.updateOverridePropertyPatternKey();\n\t}\n\n\tprivate doRegisterConfigurations(configurations: IConfigurationNode[], validate: boolean): string[] {\n\t\tconst properties: string[] = [];\n\t\tconfigurations.forEach(configuration => {\n\t\t\tproperties.push(...this.validateAndRegisterProperties(configuration, validate, configuration.extensionInfo, configuration.restrictedProperties)); // fills in defaults\n\t\t\tthis.configurationContributors.push(configuration);\n\t\t\tthis.registerJSONConfiguration(configuration);\n\t\t});\n\t\treturn properties;\n\t}\n\n\tprivate doDeregisterConfigurations(configurations: IConfigurationNode[]): string[] {\n\t\tconst properties: string[] = [];\n\t\tconst deregisterConfiguration = (configuration: IConfigurationNode) => {\n\t\t\tif (configuration.properties) {\n\t\t\t\tfor (const key in configuration.properties) {\n\t\t\t\t\tproperties.push(key);\n\t\t\t\t\tdelete this.configurationProperties[key];\n\t\t\t\t\tthis.removeFromSchema(key, configuration.properties[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (configuration.allOf) {\n\t\t\t\tconfiguration.allOf.forEach(node => deregisterConfiguration(node));\n\t\t\t}\n\t\t};\n\t\tfor (const configuration of configurations) {\n\t\t\tderegisterConfiguration(configuration);\n\t\t\tconst index = this.configurationContributors.indexOf(configuration);\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.configurationContributors.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\treturn properties;\n\t}\n\n\tprivate validateAndRegisterProperties(configuration: IConfigurationNode, validate: boolean = true, extensionInfo: IExtensionInfo | undefined, restrictedProperties: string[] | undefined, scope: ConfigurationScope = ConfigurationScope.WINDOW): string[] {\n\t\tscope = types.isUndefinedOrNull(configuration.scope) ? scope : configuration.scope;\n\t\tlet propertyKeys: string[] = [];\n\t\tlet properties = configuration.properties;\n\t\tif (properties) {\n\t\t\tfor (let key in properties) {\n\t\t\t\tif (validate && validateProperty(key)) {\n\t\t\t\t\tdelete properties[key];\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst property: IRegisteredConfigurationPropertySchema = properties[key];\n\t\t\t\tproperty.source = extensionInfo;\n\n\t\t\t\t// update default value\n\t\t\t\tproperty.defaultDefaultValue = properties[key].default;\n\t\t\t\tthis.updatePropertyDefaultValue(key, property);\n\n\t\t\t\t// update scope\n\t\t\t\tif (OVERRIDE_PROPERTY_REGEX.test(key)) {\n\t\t\t\t\tproperty.scope = undefined; // No scope for overridable properties `[${identifier}]`\n\t\t\t\t} else {\n\t\t\t\t\tproperty.scope = types.isUndefinedOrNull(property.scope) ? scope : property.scope;\n\t\t\t\t\tproperty.restricted = types.isUndefinedOrNull(property.restricted) ? !!restrictedProperties?.includes(key) : property.restricted;\n\t\t\t\t}\n\n\t\t\t\t// Add to properties maps\n\t\t\t\t// Property is included by default if 'included' is unspecified\n\t\t\t\tif (properties[key].hasOwnProperty('included') && !properties[key].included) {\n\t\t\t\t\tthis.excludedConfigurationProperties[key] = properties[key];\n\t\t\t\t\tdelete properties[key];\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tthis.configurationProperties[key] = properties[key];\n\t\t\t\t}\n\n\t\t\t\tif (!properties[key].deprecationMessage && properties[key].markdownDeprecationMessage) {\n\t\t\t\t\t// If not set, default deprecationMessage to the markdown source\n\t\t\t\t\tproperties[key].deprecationMessage = properties[key].markdownDeprecationMessage;\n\t\t\t\t}\n\n\t\t\t\tpropertyKeys.push(key);\n\t\t\t}\n\t\t}\n\t\tlet subNodes = configuration.allOf;\n\t\tif (subNodes) {\n\t\t\tfor (let node of subNodes) {\n\t\t\t\tpropertyKeys.push(...this.validateAndRegisterProperties(node, validate, extensionInfo, restrictedProperties, scope));\n\t\t\t}\n\t\t}\n\t\treturn propertyKeys;\n\t}\n\n\t// TODO: @sandy081 - Remove this method and include required info in getConfigurationProperties\n\tgetConfigurations(): IConfigurationNode[] {\n\t\treturn this.configurationContributors;\n\t}\n\n\tgetConfigurationProperties(): IStringDictionary<IRegisteredConfigurationPropertySchema> {\n\t\treturn this.configurationProperties;\n\t}\n\n\tgetExcludedConfigurationProperties(): IStringDictionary<IRegisteredConfigurationPropertySchema> {\n\t\treturn this.excludedConfigurationProperties;\n\t}\n\n\tgetConfigurationDefaultsOverrides(): Map<string, IConfigurationDefaultOverride> {\n\t\treturn this.configurationDefaultsOverrides;\n\t}\n\n\tprivate registerJSONConfiguration(configuration: IConfigurationNode) {\n\t\tconst register = (configuration: IConfigurationNode) => {\n\t\t\tlet properties = configuration.properties;\n\t\t\tif (properties) {\n\t\t\t\tfor (const key in properties) {\n\t\t\t\t\tthis.updateSchema(key, properties[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet subNodes = configuration.allOf;\n\t\t\tif (subNodes) {\n\t\t\t\tsubNodes.forEach(register);\n\t\t\t}\n\t\t};\n\t\tregister(configuration);\n\t}\n\n\tprivate updateSchema(key: string, property: IConfigurationPropertySchema): void {\n\t\tallSettings.properties[key] = property;\n\t\tswitch (property.scope) {\n\t\t\tcase ConfigurationScope.APPLICATION:\n\t\t\t\tapplicationSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.MACHINE:\n\t\t\t\tmachineSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.MACHINE_OVERRIDABLE:\n\t\t\t\tmachineOverridableSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.WINDOW:\n\t\t\t\twindowSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.RESOURCE:\n\t\t\t\tresourceSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.LANGUAGE_OVERRIDABLE:\n\t\t\t\tresourceSettings.properties[key] = property;\n\t\t\t\tthis.resourceLanguageSettingsSchema.properties![key] = property;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate removeFromSchema(key: string, property: IConfigurationPropertySchema): void {\n\t\tdelete allSettings.properties[key];\n\t\tswitch (property.scope) {\n\t\t\tcase ConfigurationScope.APPLICATION:\n\t\t\t\tdelete applicationSettings.properties[key];\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.MACHINE:\n\t\t\t\tdelete machineSettings.properties[key];\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.MACHINE_OVERRIDABLE:\n\t\t\t\tdelete machineOverridableSettings.properties[key];\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.WINDOW:\n\t\t\t\tdelete windowSettings.properties[key];\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.RESOURCE:\n\t\t\tcase ConfigurationScope.LANGUAGE_OVERRIDABLE:\n\t\t\t\tdelete resourceSettings.properties[key];\n\t\t\t\tdelete this.resourceLanguageSettingsSchema.properties![key];\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate updateOverridePropertyPatternKey(): void {\n\t\tfor (const overrideIdentifier of this.overrideIdentifiers.values()) {\n\t\t\tconst overrideIdentifierProperty = `[${overrideIdentifier}]`;\n\t\t\tconst resourceLanguagePropertiesSchema: IJSONSchema = {\n\t\t\t\ttype: 'object',\n\t\t\t\tdescription: nls.localize('overrideSettings.defaultDescription', \"Configure editor settings to be overridden for a language.\"),\n\t\t\t\terrorMessage: nls.localize('overrideSettings.errorMessage', \"This setting does not support per-language configuration.\"),\n\t\t\t\t$ref: resourceLanguageSettingsSchemaId,\n\t\t\t};\n\t\t\tthis.updatePropertyDefaultValue(overrideIdentifierProperty, resourceLanguagePropertiesSchema);\n\t\t\tallSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tapplicationSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tmachineSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tmachineOverridableSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\twindowSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tresourceSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t}\n\t\tthis._onDidSchemaChange.fire();\n\t}\n\n\tprivate registerOverridePropertyPatternKey(): void {\n\t\tconst resourceLanguagePropertiesSchema: IJSONSchema = {\n\t\t\ttype: 'object',\n\t\t\tdescription: nls.localize('overrideSettings.defaultDescription', \"Configure editor settings to be overridden for a language.\"),\n\t\t\terrorMessage: nls.localize('overrideSettings.errorMessage', \"This setting does not support per-language configuration.\"),\n\t\t\t$ref: resourceLanguageSettingsSchemaId,\n\t\t};\n\t\tallSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n\t\tapplicationSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n\t\tmachineSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n\t\tmachineOverridableSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n\t\twindowSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n\t\tresourceSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n\t\tthis._onDidSchemaChange.fire();\n\t}\n\n\tprivate updatePropertyDefaultValue(key: string, property: IRegisteredConfigurationPropertySchema): void {\n\t\tconst configurationdefaultOverride = this.configurationDefaultsOverrides.get(key);\n\t\tlet defaultValue = configurationdefaultOverride?.value;\n\t\tlet defaultSource = configurationdefaultOverride?.source;\n\t\tif (types.isUndefined(defaultValue)) {\n\t\t\tdefaultValue = property.defaultDefaultValue;\n\t\t\tdefaultSource = undefined;\n\t\t}\n\t\tif (types.isUndefined(defaultValue)) {\n\t\t\tdefaultValue = getDefaultValue(property.type);\n\t\t}\n\t\tproperty.default = defaultValue;\n\t\tproperty.defaultValueSource = defaultSource;\n\t}\n}\n\nconst OVERRIDE_IDENTIFIER_PATTERN = `\\\\[([^\\\\]]+)\\\\]`;\nconst OVERRIDE_IDENTIFIER_REGEX = new RegExp(OVERRIDE_IDENTIFIER_PATTERN, 'g');\nexport const OVERRIDE_PROPERTY_PATTERN = `^(${OVERRIDE_IDENTIFIER_PATTERN})+$`;\nexport const OVERRIDE_PROPERTY_REGEX = new RegExp(OVERRIDE_PROPERTY_PATTERN);\n\nexport function overrideIdentifiersFromKey(key: string): string[] {\n\tconst identifiers: string[] = [];\n\tif (OVERRIDE_PROPERTY_REGEX.test(key)) {\n\t\tlet matches = OVERRIDE_IDENTIFIER_REGEX.exec(key);\n\t\twhile (matches?.length) {\n\t\t\tconst identifier = matches[1].trim();\n\t\t\tif (identifier) {\n\t\t\t\tidentifiers.push(identifier);\n\t\t\t}\n\t\t\tmatches = OVERRIDE_IDENTIFIER_REGEX.exec(key);\n\t\t}\n\t}\n\treturn distinct(identifiers);\n}\n\nexport function keyFromOverrideIdentifiers(overrideIdentifiers: string[]): string {\n\treturn overrideIdentifiers.reduce((result, overrideIdentifier) => `${result}[${overrideIdentifier}]`, '');\n}\n\nexport function getDefaultValue(type: string | string[] | undefined): any {\n\tconst t = Array.isArray(type) ? (<string[]>type)[0] : <string>type;\n\tswitch (t) {\n\t\tcase 'boolean':\n\t\t\treturn false;\n\t\tcase 'integer':\n\t\tcase 'number':\n\t\t\treturn 0;\n\t\tcase 'string':\n\t\t\treturn '';\n\t\tcase 'array':\n\t\t\treturn [];\n\t\tcase 'object':\n\t\t\treturn {};\n\t\tdefault:\n\t\t\treturn null;\n\t}\n}\n\nconst configurationRegistry = new ConfigurationRegistry();\nRegistry.add(Extensions.Configuration, configurationRegistry);\n\nexport function validateProperty(property: string): string | null {\n\tif (!property.trim()) {\n\t\treturn nls.localize('config.property.empty', \"Cannot register an empty property\");\n\t}\n\tif (OVERRIDE_PROPERTY_REGEX.test(property)) {\n\t\treturn nls.localize('config.property.languageDefault', \"Cannot register '{0}'. This matches property pattern '\\\\\\\\[.*\\\\\\\\]$' for describing language specific editor settings. Use 'configurationDefaults' contribution.\", property);\n\t}\n\tif (configurationRegistry.getConfigurationProperties()[property] !== undefined) {\n\t\treturn nls.localize('config.property.duplicate', \"Cannot register '{0}'. This property is already registered.\", property);\n\t}\n\treturn null;\n}\n\nexport function getScopes(): [string, ConfigurationScope | undefined][] {\n\tconst scopes: [string, ConfigurationScope | undefined][] = [];\n\tconst configurationProperties = configurationRegistry.getConfigurationProperties();\n\tfor (const key of Object.keys(configurationProperties)) {\n\t\tscopes.push([key, configurationProperties[key].scope]);\n\t}\n\tscopes.push(['launch', ConfigurationScope.RESOURCE]);\n\tscopes.push(['task', ConfigurationScope.RESOURCE]);\n\treturn scopes;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as arrays from 'vs/base/common/arrays';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport * as json from 'vs/base/common/json';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { getOrSet, ResourceMap } from 'vs/base/common/map';\nimport * as objects from 'vs/base/common/objects';\nimport { IExtUri } from 'vs/base/common/resources';\nimport * as types from 'vs/base/common/types';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { addToValueTree, ConfigurationTarget, getConfigurationValue, IConfigurationChange, IConfigurationChangeEvent, IConfigurationCompareResult, IConfigurationData, IConfigurationModel, IConfigurationOverrides, IConfigurationUpdateOverrides, IConfigurationValue, IOverrides, removeFromValueTree, toValuesTree } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationScope, Extensions, IConfigurationPropertySchema, IConfigurationRegistry, overrideIdentifiersFromKey, OVERRIDE_PROPERTY_REGEX } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Workspace } from 'vs/platform/workspace/common/workspace';\n\nexport class ConfigurationModel implements IConfigurationModel {\n\n\tprivate isFrozen: boolean = false;\n\tprivate readonly overrideConfigurations = new Map<string, ConfigurationModel>();\n\n\tconstructor(\n\t\tprivate readonly _contents: any = {},\n\t\tprivate readonly _keys: string[] = [],\n\t\tprivate readonly _overrides: IOverrides[] = []\n\t) {\n\t}\n\n\tget contents(): any {\n\t\treturn this.checkAndFreeze(this._contents);\n\t}\n\n\tget overrides(): IOverrides[] {\n\t\treturn this.checkAndFreeze(this._overrides);\n\t}\n\n\tget keys(): string[] {\n\t\treturn this.checkAndFreeze(this._keys);\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._keys.length === 0 && Object.keys(this._contents).length === 0 && this._overrides.length === 0;\n\t}\n\n\tgetValue<V>(section: string | undefined): V {\n\t\treturn section ? getConfigurationValue<any>(this.contents, section) : this.contents;\n\t}\n\n\tgetOverrideValue<V>(section: string | undefined, overrideIdentifier: string): V | undefined {\n\t\tconst overrideContents = this.getContentsForOverrideIdentifer(overrideIdentifier);\n\t\treturn overrideContents\n\t\t\t? section ? getConfigurationValue<any>(overrideContents, section) : overrideContents\n\t\t\t: undefined;\n\t}\n\n\tgetKeysForOverrideIdentifier(identifier: string): string[] {\n\t\tconst keys: string[] = [];\n\t\tfor (const override of this.overrides) {\n\t\t\tif (override.identifiers.includes(identifier)) {\n\t\t\t\tkeys.push(...override.keys);\n\t\t\t}\n\t\t}\n\t\treturn arrays.distinct(keys);\n\t}\n\n\tgetAllOverrideIdentifiers(): string[] {\n\t\tconst result: string[] = [];\n\t\tfor (const override of this.overrides) {\n\t\t\tresult.push(...override.identifiers);\n\t\t}\n\t\treturn arrays.distinct(result);\n\t}\n\n\toverride(identifier: string): ConfigurationModel {\n\t\tlet overrideConfigurationModel = this.overrideConfigurations.get(identifier);\n\t\tif (!overrideConfigurationModel) {\n\t\t\toverrideConfigurationModel = this.createOverrideConfigurationModel(identifier);\n\t\t\tthis.overrideConfigurations.set(identifier, overrideConfigurationModel);\n\t\t}\n\t\treturn overrideConfigurationModel;\n\t}\n\n\tmerge(...others: ConfigurationModel[]): ConfigurationModel {\n\t\tconst contents = objects.deepClone(this.contents);\n\t\tconst overrides = objects.deepClone(this.overrides);\n\t\tconst keys = [...this.keys];\n\n\t\tfor (const other of others) {\n\t\t\tthis.mergeContents(contents, other.contents);\n\n\t\t\tfor (const otherOverride of other.overrides) {\n\t\t\t\tconst [override] = overrides.filter(o => arrays.equals(o.identifiers, otherOverride.identifiers));\n\t\t\t\tif (override) {\n\t\t\t\t\tthis.mergeContents(override.contents, otherOverride.contents);\n\t\t\t\t\toverride.keys.push(...otherOverride.keys);\n\t\t\t\t\toverride.keys = arrays.distinct(override.keys);\n\t\t\t\t} else {\n\t\t\t\t\toverrides.push(objects.deepClone(otherOverride));\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const key of other.keys) {\n\t\t\t\tif (keys.indexOf(key) === -1) {\n\t\t\t\t\tkeys.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn new ConfigurationModel(contents, keys, overrides);\n\t}\n\n\tfreeze(): ConfigurationModel {\n\t\tthis.isFrozen = true;\n\t\treturn this;\n\t}\n\n\tprivate createOverrideConfigurationModel(identifier: string): ConfigurationModel {\n\t\tconst overrideContents = this.getContentsForOverrideIdentifer(identifier);\n\n\t\tif (!overrideContents || typeof overrideContents !== 'object' || !Object.keys(overrideContents).length) {\n\t\t\t// If there are no valid overrides, return self\n\t\t\treturn this;\n\t\t}\n\n\t\tlet contents: any = {};\n\t\tfor (const key of arrays.distinct([...Object.keys(this.contents), ...Object.keys(overrideContents)])) {\n\n\t\t\tlet contentsForKey = this.contents[key];\n\t\t\tlet overrideContentsForKey = overrideContents[key];\n\n\t\t\t// If there are override contents for the key, clone and merge otherwise use base contents\n\t\t\tif (overrideContentsForKey) {\n\t\t\t\t// Clone and merge only if base contents and override contents are of type object otherwise just override\n\t\t\t\tif (typeof contentsForKey === 'object' && typeof overrideContentsForKey === 'object') {\n\t\t\t\t\tcontentsForKey = objects.deepClone(contentsForKey);\n\t\t\t\t\tthis.mergeContents(contentsForKey, overrideContentsForKey);\n\t\t\t\t} else {\n\t\t\t\t\tcontentsForKey = overrideContentsForKey;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcontents[key] = contentsForKey;\n\t\t}\n\n\t\treturn new ConfigurationModel(contents, this.keys, this.overrides);\n\t}\n\n\tprivate mergeContents(source: any, target: any): void {\n\t\tfor (const key of Object.keys(target)) {\n\t\t\tif (key in source) {\n\t\t\t\tif (types.isObject(source[key]) && types.isObject(target[key])) {\n\t\t\t\t\tthis.mergeContents(source[key], target[key]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsource[key] = objects.deepClone(target[key]);\n\t\t}\n\t}\n\n\tprivate checkAndFreeze<T>(data: T): T {\n\t\tif (this.isFrozen && !Object.isFrozen(data)) {\n\t\t\treturn objects.deepFreeze(data);\n\t\t}\n\t\treturn data;\n\t}\n\n\tprivate getContentsForOverrideIdentifer(identifier: string): any {\n\t\tlet contentsForIdentifierOnly: IStringDictionary<any> | null = null;\n\t\tlet contents: IStringDictionary<any> | null = null;\n\t\tconst mergeContents = (contentsToMerge: any) => {\n\t\t\tif (contentsToMerge) {\n\t\t\t\tif (contents) {\n\t\t\t\t\tthis.mergeContents(contents, contentsToMerge);\n\t\t\t\t} else {\n\t\t\t\t\tcontents = objects.deepClone(contentsToMerge);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tfor (const override of this.overrides) {\n\t\t\tif (arrays.equals(override.identifiers, [identifier])) {\n\t\t\t\tcontentsForIdentifierOnly = override.contents;\n\t\t\t} else if (override.identifiers.includes(identifier)) {\n\t\t\t\tmergeContents(override.contents);\n\t\t\t}\n\t\t}\n\t\t// Merge contents of the identifier only at the end to take precedence.\n\t\tmergeContents(contentsForIdentifierOnly);\n\t\treturn contents;\n\t}\n\n\ttoJSON(): IConfigurationModel {\n\t\treturn {\n\t\t\tcontents: this.contents,\n\t\t\toverrides: this.overrides,\n\t\t\tkeys: this.keys\n\t\t};\n\t}\n\n\t// Update methods\n\n\tpublic setValue(key: string, value: any) {\n\t\tthis.addKey(key);\n\t\taddToValueTree(this.contents, key, value, e => { throw new Error(e); });\n\t}\n\n\tpublic removeValue(key: string): void {\n\t\tif (this.removeKey(key)) {\n\t\t\tremoveFromValueTree(this.contents, key);\n\t\t}\n\t}\n\n\tprivate addKey(key: string): void {\n\t\tlet index = this.keys.length;\n\t\tfor (let i = 0; i < index; i++) {\n\t\t\tif (key.indexOf(this.keys[i]) === 0) {\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\tthis.keys.splice(index, 1, key);\n\t}\n\n\tprivate removeKey(key: string): boolean {\n\t\tlet index = this.keys.indexOf(key);\n\t\tif (index !== -1) {\n\t\t\tthis.keys.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n\nexport class DefaultConfigurationModel extends ConfigurationModel {\n\n\tconstructor(configurationDefaultsOverrides: IStringDictionary<any> = {}) {\n\t\tconst properties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\t\tconst keys = Object.keys(properties);\n\t\tconst contents: any = Object.create(null);\n\t\tconst overrides: IOverrides[] = [];\n\n\t\tfor (const key in properties) {\n\t\t\tconst defaultOverrideValue = configurationDefaultsOverrides[key];\n\t\t\tconst value = defaultOverrideValue !== undefined ? defaultOverrideValue : properties[key].default;\n\t\t\taddToValueTree(contents, key, value, message => console.error(`Conflict in default settings: ${message}`));\n\t\t}\n\t\tfor (const key of Object.keys(contents)) {\n\t\t\tif (OVERRIDE_PROPERTY_REGEX.test(key)) {\n\t\t\t\toverrides.push({\n\t\t\t\t\tidentifiers: overrideIdentifiersFromKey(key),\n\t\t\t\t\tkeys: Object.keys(contents[key]),\n\t\t\t\t\tcontents: toValuesTree(contents[key], message => console.error(`Conflict in default settings file: ${message}`)),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tsuper(contents, keys, overrides);\n\t}\n}\n\nexport interface ConfigurationParseOptions {\n\tscopes: ConfigurationScope[] | undefined;\n\tskipRestricted?: boolean;\n}\n\nexport class ConfigurationModelParser {\n\n\tprivate _raw: any = null;\n\tprivate _configurationModel: ConfigurationModel | null = null;\n\tprivate _restrictedConfigurations: string[] = [];\n\tprivate _parseErrors: any[] = [];\n\n\tconstructor(protected readonly _name: string) { }\n\n\tget configurationModel(): ConfigurationModel {\n\t\treturn this._configurationModel || new ConfigurationModel();\n\t}\n\n\tget restrictedConfigurations(): string[] {\n\t\treturn this._restrictedConfigurations;\n\t}\n\n\tget errors(): any[] {\n\t\treturn this._parseErrors;\n\t}\n\n\tpublic parse(content: string | null | undefined, options?: ConfigurationParseOptions): void {\n\t\tif (!types.isUndefinedOrNull(content)) {\n\t\t\tconst raw = this.doParseContent(content);\n\t\t\tthis.parseRaw(raw, options);\n\t\t}\n\t}\n\n\tpublic reparse(options: ConfigurationParseOptions): void {\n\t\tif (this._raw) {\n\t\t\tthis.parseRaw(this._raw, options);\n\t\t}\n\t}\n\n\tpublic parseRaw(raw: any, options?: ConfigurationParseOptions): void {\n\t\tthis._raw = raw;\n\t\tconst { contents, keys, overrides, restricted } = this.doParseRaw(raw, options);\n\t\tthis._configurationModel = new ConfigurationModel(contents, keys, overrides);\n\t\tthis._restrictedConfigurations = restricted || [];\n\t}\n\n\tprivate doParseContent(content: string): any {\n\t\tlet raw: any = {};\n\t\tlet currentProperty: string | null = null;\n\t\tlet currentParent: any = [];\n\t\tlet previousParents: any[] = [];\n\t\tlet parseErrors: json.ParseError[] = [];\n\n\t\tfunction onValue(value: any) {\n\t\t\tif (Array.isArray(currentParent)) {\n\t\t\t\t(<any[]>currentParent).push(value);\n\t\t\t} else if (currentProperty !== null) {\n\t\t\t\tcurrentParent[currentProperty] = value;\n\t\t\t}\n\t\t}\n\n\t\tlet visitor: json.JSONVisitor = {\n\t\t\tonObjectBegin: () => {\n\t\t\t\tlet object = {};\n\t\t\t\tonValue(object);\n\t\t\t\tpreviousParents.push(currentParent);\n\t\t\t\tcurrentParent = object;\n\t\t\t\tcurrentProperty = null;\n\t\t\t},\n\t\t\tonObjectProperty: (name: string) => {\n\t\t\t\tcurrentProperty = name;\n\t\t\t},\n\t\t\tonObjectEnd: () => {\n\t\t\t\tcurrentParent = previousParents.pop();\n\t\t\t},\n\t\t\tonArrayBegin: () => {\n\t\t\t\tlet array: any[] = [];\n\t\t\t\tonValue(array);\n\t\t\t\tpreviousParents.push(currentParent);\n\t\t\t\tcurrentParent = array;\n\t\t\t\tcurrentProperty = null;\n\t\t\t},\n\t\t\tonArrayEnd: () => {\n\t\t\t\tcurrentParent = previousParents.pop();\n\t\t\t},\n\t\t\tonLiteralValue: onValue,\n\t\t\tonError: (error: json.ParseErrorCode, offset: number, length: number) => {\n\t\t\t\tparseErrors.push({ error, offset, length });\n\t\t\t}\n\t\t};\n\t\tif (content) {\n\t\t\ttry {\n\t\t\t\tjson.visit(content, visitor);\n\t\t\t\traw = currentParent[0] || {};\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(`Error while parsing settings file ${this._name}: ${e}`);\n\t\t\t\tthis._parseErrors = [e];\n\t\t\t}\n\t\t}\n\n\t\treturn raw;\n\t}\n\n\tprotected doParseRaw(raw: any, options?: ConfigurationParseOptions): IConfigurationModel & { restricted?: string[] } {\n\t\tconst configurationProperties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\t\tconst filtered = this.filter(raw, configurationProperties, true, options);\n\t\traw = filtered.raw;\n\t\tconst contents = toValuesTree(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n\t\tconst keys = Object.keys(raw);\n\t\tconst overrides = this.toOverrides(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n\t\treturn { contents, keys, overrides, restricted: filtered.restricted };\n\t}\n\n\tprivate filter(properties: any, configurationProperties: { [qualifiedKey: string]: IConfigurationPropertySchema | undefined }, filterOverriddenProperties: boolean, options?: ConfigurationParseOptions): { raw: {}, restricted: string[] } {\n\t\tif (!options?.scopes && !options?.skipRestricted) {\n\t\t\treturn { raw: properties, restricted: [] };\n\t\t}\n\t\tconst raw: any = {};\n\t\tconst restricted: string[] = [];\n\t\tfor (let key in properties) {\n\t\t\tif (OVERRIDE_PROPERTY_REGEX.test(key) && filterOverriddenProperties) {\n\t\t\t\tconst result = this.filter(properties[key], configurationProperties, false, options);\n\t\t\t\traw[key] = result.raw;\n\t\t\t\trestricted.push(...result.restricted);\n\t\t\t} else {\n\t\t\t\tconst propertySchema = configurationProperties[key];\n\t\t\t\tconst scope = propertySchema ? typeof propertySchema.scope !== 'undefined' ? propertySchema.scope : ConfigurationScope.WINDOW : undefined;\n\t\t\t\tif (propertySchema?.restricted) {\n\t\t\t\t\trestricted.push(key);\n\t\t\t\t}\n\t\t\t\t// Load unregistered configurations always.\n\t\t\t\tif (scope === undefined || options.scopes === undefined || options.scopes.includes(scope)) {\n\t\t\t\t\tif (!(options.skipRestricted && propertySchema?.restricted)) {\n\t\t\t\t\t\traw[key] = properties[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { raw, restricted };\n\t}\n\n\tprivate toOverrides(raw: any, conflictReporter: (message: string) => void): IOverrides[] {\n\t\tconst overrides: IOverrides[] = [];\n\t\tfor (const key of Object.keys(raw)) {\n\t\t\tif (OVERRIDE_PROPERTY_REGEX.test(key)) {\n\t\t\t\tconst overrideRaw: any = {};\n\t\t\t\tfor (const keyInOverrideRaw in raw[key]) {\n\t\t\t\t\toverrideRaw[keyInOverrideRaw] = raw[key][keyInOverrideRaw];\n\t\t\t\t}\n\t\t\t\toverrides.push({\n\t\t\t\t\tidentifiers: overrideIdentifiersFromKey(key),\n\t\t\t\t\tkeys: Object.keys(overrideRaw),\n\t\t\t\t\tcontents: toValuesTree(overrideRaw, conflictReporter)\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn overrides;\n\t}\n\n}\n\nexport class UserSettings extends Disposable {\n\n\tprivate readonly parser: ConfigurationModelParser;\n\tprivate readonly parseOptions: ConfigurationParseOptions;\n\tprotected readonly _onDidChange: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tconstructor(\n\t\tprivate readonly userSettingsResource: URI,\n\t\tprivate readonly scopes: ConfigurationScope[] | undefined,\n\t\textUri: IExtUri,\n\t\tprivate readonly fileService: IFileService\n\t) {\n\t\tsuper();\n\t\tthis.parser = new ConfigurationModelParser(this.userSettingsResource.toString());\n\t\tthis.parseOptions = { scopes: this.scopes };\n\t\tthis._register(this.fileService.watch(extUri.dirname(this.userSettingsResource)));\n\t\t// Also listen to the resource incase the resource is a symlink - https://github.com/microsoft/vscode/issues/118134\n\t\tthis._register(this.fileService.watch(this.userSettingsResource));\n\t\tthis._register(Event.filter(this.fileService.onDidFilesChange, e => e.contains(this.userSettingsResource))(() => this._onDidChange.fire()));\n\t}\n\n\tasync loadConfiguration(): Promise<ConfigurationModel> {\n\t\ttry {\n\t\t\tconst content = await this.fileService.readFile(this.userSettingsResource);\n\t\t\tthis.parser.parse(content.value.toString() || '{}', this.parseOptions);\n\t\t\treturn this.parser.configurationModel;\n\t\t} catch (e) {\n\t\t\treturn new ConfigurationModel();\n\t\t}\n\t}\n\n\treparse(): ConfigurationModel {\n\t\tthis.parser.reparse(this.parseOptions);\n\t\treturn this.parser.configurationModel;\n\t}\n\n\tgetRestrictedSettings(): string[] {\n\t\treturn this.parser.restrictedConfigurations;\n\t}\n}\n\n\nexport class Configuration {\n\n\tprivate _workspaceConsolidatedConfiguration: ConfigurationModel | null = null;\n\tprivate _foldersConsolidatedConfigurations: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>();\n\n\tconstructor(\n\t\tprivate _defaultConfiguration: ConfigurationModel,\n\t\tprivate _localUserConfiguration: ConfigurationModel,\n\t\tprivate _remoteUserConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _workspaceConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _folderConfigurations: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>(),\n\t\tprivate _memoryConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _memoryConfigurationByResource: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>(),\n\t\tprivate _freeze: boolean = true) {\n\t}\n\n\tgetValue(section: string | undefined, overrides: IConfigurationOverrides, workspace: Workspace | undefined): any {\n\t\tconst consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\n\t\treturn consolidateConfigurationModel.getValue(section);\n\t}\n\n\tupdateValue(key: string, value: any, overrides: IConfigurationUpdateOverrides = {}): void {\n\t\tlet memoryConfiguration: ConfigurationModel | undefined;\n\t\tif (overrides.resource) {\n\t\t\tmemoryConfiguration = this._memoryConfigurationByResource.get(overrides.resource);\n\t\t\tif (!memoryConfiguration) {\n\t\t\t\tmemoryConfiguration = new ConfigurationModel();\n\t\t\t\tthis._memoryConfigurationByResource.set(overrides.resource, memoryConfiguration);\n\t\t\t}\n\t\t} else {\n\t\t\tmemoryConfiguration = this._memoryConfiguration;\n\t\t}\n\n\t\tif (value === undefined) {\n\t\t\tmemoryConfiguration.removeValue(key);\n\t\t} else {\n\t\t\tmemoryConfiguration.setValue(key, value);\n\t\t}\n\n\t\tif (!overrides.resource) {\n\t\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\t}\n\t}\n\n\tinspect<C>(key: string, overrides: IConfigurationOverrides, workspace: Workspace | undefined): IConfigurationValue<C> {\n\t\tconst consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\n\t\tconst folderConfigurationModel = this.getFolderConfigurationModelForResource(overrides.resource, workspace);\n\t\tconst memoryConfigurationModel = overrides.resource ? this._memoryConfigurationByResource.get(overrides.resource) || this._memoryConfiguration : this._memoryConfiguration;\n\n\t\tconst defaultValue = overrides.overrideIdentifier ? this._defaultConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this._defaultConfiguration.freeze().getValue<C>(key);\n\t\tconst userValue = overrides.overrideIdentifier ? this.userConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this.userConfiguration.freeze().getValue<C>(key);\n\t\tconst userLocalValue = overrides.overrideIdentifier ? this.localUserConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this.localUserConfiguration.freeze().getValue<C>(key);\n\t\tconst userRemoteValue = overrides.overrideIdentifier ? this.remoteUserConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this.remoteUserConfiguration.freeze().getValue<C>(key);\n\t\tconst workspaceValue = workspace ? overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this._workspaceConfiguration.freeze().getValue<C>(key) : undefined; //Check on workspace exists or not because _workspaceConfiguration is never null\n\t\tconst workspaceFolderValue = folderConfigurationModel ? overrides.overrideIdentifier ? folderConfigurationModel.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : folderConfigurationModel.freeze().getValue<C>(key) : undefined;\n\t\tconst memoryValue = overrides.overrideIdentifier ? memoryConfigurationModel.override(overrides.overrideIdentifier).getValue<C>(key) : memoryConfigurationModel.getValue<C>(key);\n\t\tconst value = consolidateConfigurationModel.getValue<C>(key);\n\t\tconst overrideIdentifiers: string[] = arrays.distinct(arrays.flatten(consolidateConfigurationModel.overrides.map(override => override.identifiers))).filter(overrideIdentifier => consolidateConfigurationModel.getOverrideValue(key, overrideIdentifier) !== undefined);\n\n\t\treturn {\n\t\t\tdefaultValue: defaultValue,\n\t\t\tuserValue: userValue,\n\t\t\tuserLocalValue: userLocalValue,\n\t\t\tuserRemoteValue: userRemoteValue,\n\t\t\tworkspaceValue: workspaceValue,\n\t\t\tworkspaceFolderValue: workspaceFolderValue,\n\t\t\tmemoryValue: memoryValue,\n\t\t\tvalue,\n\n\t\t\tdefault: defaultValue !== undefined ? { value: this._defaultConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this._defaultConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tuser: userValue !== undefined ? { value: this.userConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.userConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tuserLocal: userLocalValue !== undefined ? { value: this.localUserConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.localUserConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tuserRemote: userRemoteValue !== undefined ? { value: this.remoteUserConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.remoteUserConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tworkspace: workspaceValue !== undefined ? { value: this._workspaceConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tworkspaceFolder: workspaceFolderValue !== undefined ? { value: folderConfigurationModel?.freeze().getValue(key), override: overrides.overrideIdentifier ? folderConfigurationModel?.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tmemory: memoryValue !== undefined ? { value: memoryConfigurationModel.getValue(key), override: overrides.overrideIdentifier ? memoryConfigurationModel.getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\n\t\t\toverrideIdentifiers: overrideIdentifiers.length ? overrideIdentifiers : undefined\n\t\t};\n\t}\n\n\tkeys(workspace: Workspace | undefined): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t} {\n\t\tconst folderConfigurationModel = this.getFolderConfigurationModelForResource(undefined, workspace);\n\t\treturn {\n\t\t\tdefault: this._defaultConfiguration.freeze().keys,\n\t\t\tuser: this.userConfiguration.freeze().keys,\n\t\t\tworkspace: this._workspaceConfiguration.freeze().keys,\n\t\t\tworkspaceFolder: folderConfigurationModel ? folderConfigurationModel.freeze().keys : []\n\t\t};\n\t}\n\n\tupdateDefaultConfiguration(defaultConfiguration: ConfigurationModel): void {\n\t\tthis._defaultConfiguration = defaultConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateLocalUserConfiguration(localUserConfiguration: ConfigurationModel): void {\n\t\tthis._localUserConfiguration = localUserConfiguration;\n\t\tthis._userConfiguration = null;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateRemoteUserConfiguration(remoteUserConfiguration: ConfigurationModel): void {\n\t\tthis._remoteUserConfiguration = remoteUserConfiguration;\n\t\tthis._userConfiguration = null;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateWorkspaceConfiguration(workspaceConfiguration: ConfigurationModel): void {\n\t\tthis._workspaceConfiguration = workspaceConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateFolderConfiguration(resource: URI, configuration: ConfigurationModel): void {\n\t\tthis._folderConfigurations.set(resource, configuration);\n\t\tthis._foldersConsolidatedConfigurations.delete(resource);\n\t}\n\n\tdeleteFolderConfiguration(resource: URI): void {\n\t\tthis.folderConfigurations.delete(resource);\n\t\tthis._foldersConsolidatedConfigurations.delete(resource);\n\t}\n\n\tcompareAndUpdateDefaultConfiguration(defaults: ConfigurationModel, keys?: string[]): IConfigurationChange {\n\t\tconst overrides: [string, string[]][] = [];\n\t\tif (!keys) {\n\t\t\tconst { added, updated, removed } = compare(this._defaultConfiguration, defaults);\n\t\t\tkeys = [...added, ...updated, ...removed];\n\t\t}\n\t\tfor (const key of keys) {\n\t\t\tfor (const overrideIdentifier of overrideIdentifiersFromKey(key)) {\n\t\t\t\tconst fromKeys = this._defaultConfiguration.getKeysForOverrideIdentifier(overrideIdentifier);\n\t\t\t\tconst toKeys = defaults.getKeysForOverrideIdentifier(overrideIdentifier);\n\t\t\t\tconst keys = [\n\t\t\t\t\t...toKeys.filter(key => fromKeys.indexOf(key) === -1),\n\t\t\t\t\t...fromKeys.filter(key => toKeys.indexOf(key) === -1),\n\t\t\t\t\t...fromKeys.filter(key => !objects.equals(this._defaultConfiguration.override(overrideIdentifier).getValue(key), defaults.override(overrideIdentifier).getValue(key)))\n\t\t\t\t];\n\t\t\t\toverrides.push([overrideIdentifier, keys]);\n\t\t\t}\n\t\t}\n\t\tthis.updateDefaultConfiguration(defaults);\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateLocalUserConfiguration(user: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.localUserConfiguration, user);\n\t\tconst keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateLocalUserConfiguration(user);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateRemoteUserConfiguration(user: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.remoteUserConfiguration, user);\n\t\tlet keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateRemoteUserConfiguration(user);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateWorkspaceConfiguration(workspaceConfiguration: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.workspaceConfiguration, workspaceConfiguration);\n\t\tlet keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateWorkspaceConfiguration(workspaceConfiguration);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateFolderConfiguration(resource: URI, folderConfiguration: ConfigurationModel): IConfigurationChange {\n\t\tconst currentFolderConfiguration = this.folderConfigurations.get(resource);\n\t\tconst { added, updated, removed, overrides } = compare(currentFolderConfiguration, folderConfiguration);\n\t\tlet keys = [...added, ...updated, ...removed];\n\t\tif (keys.length || !currentFolderConfiguration) {\n\t\t\tthis.updateFolderConfiguration(resource, folderConfiguration);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndDeleteFolderConfiguration(folder: URI): IConfigurationChange {\n\t\tconst folderConfig = this.folderConfigurations.get(folder);\n\t\tif (!folderConfig) {\n\t\t\tthrow new Error('Unknown folder');\n\t\t}\n\t\tthis.deleteFolderConfiguration(folder);\n\t\tconst { added, updated, removed, overrides } = compare(folderConfig, undefined);\n\t\treturn { keys: [...added, ...updated, ...removed], overrides };\n\t}\n\n\tget defaults(): ConfigurationModel {\n\t\treturn this._defaultConfiguration;\n\t}\n\n\tprivate _userConfiguration: ConfigurationModel | null = null;\n\tget userConfiguration(): ConfigurationModel {\n\t\tif (!this._userConfiguration) {\n\t\t\tthis._userConfiguration = this._remoteUserConfiguration.isEmpty() ? this._localUserConfiguration : this._localUserConfiguration.merge(this._remoteUserConfiguration);\n\t\t\tif (this._freeze) {\n\t\t\t\tthis._userConfiguration.freeze();\n\t\t\t}\n\t\t}\n\t\treturn this._userConfiguration;\n\t}\n\n\tget localUserConfiguration(): ConfigurationModel {\n\t\treturn this._localUserConfiguration;\n\t}\n\n\tget remoteUserConfiguration(): ConfigurationModel {\n\t\treturn this._remoteUserConfiguration;\n\t}\n\n\tget workspaceConfiguration(): ConfigurationModel {\n\t\treturn this._workspaceConfiguration;\n\t}\n\n\tprotected get folderConfigurations(): ResourceMap<ConfigurationModel> {\n\t\treturn this._folderConfigurations;\n\t}\n\n\tprivate getConsolidateConfigurationModel(overrides: IConfigurationOverrides, workspace: Workspace | undefined): ConfigurationModel {\n\t\tlet configurationModel = this.getConsolidatedConfigurationModelForResource(overrides, workspace);\n\t\treturn overrides.overrideIdentifier ? configurationModel.override(overrides.overrideIdentifier) : configurationModel;\n\t}\n\n\tprivate getConsolidatedConfigurationModelForResource({ resource }: IConfigurationOverrides, workspace: Workspace | undefined): ConfigurationModel {\n\t\tlet consolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n\n\t\tif (workspace && resource) {\n\t\t\tconst root = workspace.getFolder(resource);\n\t\t\tif (root) {\n\t\t\t\tconsolidateConfiguration = this.getFolderConsolidatedConfiguration(root.uri) || consolidateConfiguration;\n\t\t\t}\n\t\t\tconst memoryConfigurationForResource = this._memoryConfigurationByResource.get(resource);\n\t\t\tif (memoryConfigurationForResource) {\n\t\t\t\tconsolidateConfiguration = consolidateConfiguration.merge(memoryConfigurationForResource);\n\t\t\t}\n\t\t}\n\n\t\treturn consolidateConfiguration;\n\t}\n\n\tprivate getWorkspaceConsolidatedConfiguration(): ConfigurationModel {\n\t\tif (!this._workspaceConsolidatedConfiguration) {\n\t\t\tthis._workspaceConsolidatedConfiguration = this._defaultConfiguration.merge(this.userConfiguration, this._workspaceConfiguration, this._memoryConfiguration);\n\t\t\tif (this._freeze) {\n\t\t\t\tthis._workspaceConfiguration = this._workspaceConfiguration.freeze();\n\t\t\t}\n\t\t}\n\t\treturn this._workspaceConsolidatedConfiguration;\n\t}\n\n\tprivate getFolderConsolidatedConfiguration(folder: URI): ConfigurationModel {\n\t\tlet folderConsolidatedConfiguration = this._foldersConsolidatedConfigurations.get(folder);\n\t\tif (!folderConsolidatedConfiguration) {\n\t\t\tconst workspaceConsolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n\t\t\tconst folderConfiguration = this._folderConfigurations.get(folder);\n\t\t\tif (folderConfiguration) {\n\t\t\t\tfolderConsolidatedConfiguration = workspaceConsolidateConfiguration.merge(folderConfiguration);\n\t\t\t\tif (this._freeze) {\n\t\t\t\t\tfolderConsolidatedConfiguration = folderConsolidatedConfiguration.freeze();\n\t\t\t\t}\n\t\t\t\tthis._foldersConsolidatedConfigurations.set(folder, folderConsolidatedConfiguration);\n\t\t\t} else {\n\t\t\t\tfolderConsolidatedConfiguration = workspaceConsolidateConfiguration;\n\t\t\t}\n\t\t}\n\t\treturn folderConsolidatedConfiguration;\n\t}\n\n\tprivate getFolderConfigurationModelForResource(resource: URI | null | undefined, workspace: Workspace | undefined): ConfigurationModel | undefined {\n\t\tif (workspace && resource) {\n\t\t\tconst root = workspace.getFolder(resource);\n\t\t\tif (root) {\n\t\t\t\treturn this._folderConfigurations.get(root.uri);\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\ttoData(): IConfigurationData {\n\t\treturn {\n\t\t\tdefaults: {\n\t\t\t\tcontents: this._defaultConfiguration.contents,\n\t\t\t\toverrides: this._defaultConfiguration.overrides,\n\t\t\t\tkeys: this._defaultConfiguration.keys\n\t\t\t},\n\t\t\tuser: {\n\t\t\t\tcontents: this.userConfiguration.contents,\n\t\t\t\toverrides: this.userConfiguration.overrides,\n\t\t\t\tkeys: this.userConfiguration.keys\n\t\t\t},\n\t\t\tworkspace: {\n\t\t\t\tcontents: this._workspaceConfiguration.contents,\n\t\t\t\toverrides: this._workspaceConfiguration.overrides,\n\t\t\t\tkeys: this._workspaceConfiguration.keys\n\t\t\t},\n\t\t\tfolders: [...this._folderConfigurations.keys()].reduce<[UriComponents, IConfigurationModel][]>((result, folder) => {\n\t\t\t\tconst { contents, overrides, keys } = this._folderConfigurations.get(folder)!;\n\t\t\t\tresult.push([folder, { contents, overrides, keys }]);\n\t\t\t\treturn result;\n\t\t\t}, [])\n\t\t};\n\t}\n\n\tallKeys(): string[] {\n\t\tconst keys: Set<string> = new Set<string>();\n\t\tthis._defaultConfiguration.freeze().keys.forEach(key => keys.add(key));\n\t\tthis.userConfiguration.freeze().keys.forEach(key => keys.add(key));\n\t\tthis._workspaceConfiguration.freeze().keys.forEach(key => keys.add(key));\n\t\tthis._folderConfigurations.forEach(folderConfiguraiton => folderConfiguraiton.freeze().keys.forEach(key => keys.add(key)));\n\t\treturn [...keys.values()];\n\t}\n\n\tprotected allOverrideIdentifiers(): string[] {\n\t\tconst keys: Set<string> = new Set<string>();\n\t\tthis._defaultConfiguration.freeze().getAllOverrideIdentifiers().forEach(key => keys.add(key));\n\t\tthis.userConfiguration.freeze().getAllOverrideIdentifiers().forEach(key => keys.add(key));\n\t\tthis._workspaceConfiguration.freeze().getAllOverrideIdentifiers().forEach(key => keys.add(key));\n\t\tthis._folderConfigurations.forEach(folderConfiguraiton => folderConfiguraiton.freeze().getAllOverrideIdentifiers().forEach(key => keys.add(key)));\n\t\treturn [...keys.values()];\n\t}\n\n\tprotected getAllKeysForOverrideIdentifier(overrideIdentifier: string): string[] {\n\t\tconst keys: Set<string> = new Set<string>();\n\t\tthis._defaultConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis.userConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis._workspaceConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis._folderConfigurations.forEach(folderConfiguraiton => folderConfiguraiton.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key)));\n\t\treturn [...keys.values()];\n\t}\n\n\tstatic parse(data: IConfigurationData): Configuration {\n\t\tconst defaultConfiguration = this.parseConfigurationModel(data.defaults);\n\t\tconst userConfiguration = this.parseConfigurationModel(data.user);\n\t\tconst workspaceConfiguration = this.parseConfigurationModel(data.workspace);\n\t\tconst folders: ResourceMap<ConfigurationModel> = data.folders.reduce((result, value) => {\n\t\t\tresult.set(URI.revive(value[0]), this.parseConfigurationModel(value[1]));\n\t\t\treturn result;\n\t\t}, new ResourceMap<ConfigurationModel>());\n\t\treturn new Configuration(defaultConfiguration, userConfiguration, new ConfigurationModel(), workspaceConfiguration, folders, new ConfigurationModel(), new ResourceMap<ConfigurationModel>(), false);\n\t}\n\n\tprivate static parseConfigurationModel(model: IConfigurationModel): ConfigurationModel {\n\t\treturn new ConfigurationModel(model.contents, model.keys, model.overrides).freeze();\n\t}\n\n}\n\nexport function mergeChanges(...changes: IConfigurationChange[]): IConfigurationChange {\n\tif (changes.length === 0) {\n\t\treturn { keys: [], overrides: [] };\n\t}\n\tif (changes.length === 1) {\n\t\treturn changes[0];\n\t}\n\tconst keysSet = new Set<string>();\n\tconst overridesMap = new Map<string, Set<string>>();\n\tfor (const change of changes) {\n\t\tchange.keys.forEach(key => keysSet.add(key));\n\t\tchange.overrides.forEach(([identifier, keys]) => {\n\t\t\tconst result = getOrSet(overridesMap, identifier, new Set<string>());\n\t\t\tkeys.forEach(key => result.add(key));\n\t\t});\n\t}\n\tconst overrides: [string, string[]][] = [];\n\toverridesMap.forEach((keys, identifier) => overrides.push([identifier, [...keys.values()]]));\n\treturn { keys: [...keysSet.values()], overrides };\n}\n\nexport class ConfigurationChangeEvent implements IConfigurationChangeEvent {\n\n\tprivate readonly affectedKeysTree: any;\n\treadonly affectedKeys: string[];\n\tsource!: ConfigurationTarget;\n\tsourceConfig: any;\n\n\tconstructor(readonly change: IConfigurationChange, private readonly previous: { workspace?: Workspace, data: IConfigurationData } | undefined, private readonly currentConfiguraiton: Configuration, private readonly currentWorkspace?: Workspace) {\n\t\tconst keysSet = new Set<string>();\n\t\tchange.keys.forEach(key => keysSet.add(key));\n\t\tchange.overrides.forEach(([, keys]) => keys.forEach(key => keysSet.add(key)));\n\t\tthis.affectedKeys = [...keysSet.values()];\n\n\t\tconst configurationModel = new ConfigurationModel();\n\t\tthis.affectedKeys.forEach(key => configurationModel.setValue(key, {}));\n\t\tthis.affectedKeysTree = configurationModel.contents;\n\t}\n\n\tprivate _previousConfiguration: Configuration | undefined = undefined;\n\tget previousConfiguration(): Configuration | undefined {\n\t\tif (!this._previousConfiguration && this.previous) {\n\t\t\tthis._previousConfiguration = Configuration.parse(this.previous.data);\n\t\t}\n\t\treturn this._previousConfiguration;\n\t}\n\n\taffectsConfiguration(section: string, overrides?: IConfigurationOverrides): boolean {\n\t\tif (this.doesAffectedKeysTreeContains(this.affectedKeysTree, section)) {\n\t\t\tif (overrides) {\n\t\t\t\tconst value1 = this.previousConfiguration ? this.previousConfiguration.getValue(section, overrides, this.previous?.workspace) : undefined;\n\t\t\t\tconst value2 = this.currentConfiguraiton.getValue(section, overrides, this.currentWorkspace);\n\t\t\t\treturn !objects.equals(value1, value2);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate doesAffectedKeysTreeContains(affectedKeysTree: any, section: string): boolean {\n\t\tlet requestedTree = toValuesTree({ [section]: true }, () => { });\n\n\t\tlet key;\n\t\twhile (typeof requestedTree === 'object' && (key = Object.keys(requestedTree)[0])) { // Only one key should present, since we added only one property\n\t\t\taffectedKeysTree = affectedKeysTree[key];\n\t\t\tif (!affectedKeysTree) {\n\t\t\t\treturn false; // Requested tree is not found\n\t\t\t}\n\t\t\trequestedTree = requestedTree[key];\n\t\t}\n\t\treturn true;\n\t}\n}\n\nexport class AllKeysConfigurationChangeEvent extends ConfigurationChangeEvent {\n\tconstructor(configuration: Configuration, workspace: Workspace, source: ConfigurationTarget, sourceConfig: any) {\n\t\tsuper({ keys: configuration.allKeys(), overrides: [] }, undefined, configuration, workspace);\n\t\tthis.source = source;\n\t\tthis.sourceConfig = sourceConfig;\n\t}\n}\n\nfunction compare(from: ConfigurationModel | undefined, to: ConfigurationModel | undefined): IConfigurationCompareResult {\n\tconst { added, removed, updated } = compareConfigurationContents(to, from);\n\tconst overrides: [string, string[]][] = [];\n\n\tconst fromOverrideIdentifiers = from?.getAllOverrideIdentifiers() || [];\n\tconst toOverrideIdentifiers = to?.getAllOverrideIdentifiers() || [];\n\n\tif (to) {\n\t\tconst addedOverrideIdentifiers = toOverrideIdentifiers.filter(key => !fromOverrideIdentifiers.includes(key));\n\t\tfor (const identifier of addedOverrideIdentifiers) {\n\t\t\toverrides.push([identifier, to.getKeysForOverrideIdentifier(identifier)]);\n\t\t}\n\t}\n\n\tif (from) {\n\t\tconst removedOverrideIdentifiers = fromOverrideIdentifiers.filter(key => !toOverrideIdentifiers.includes(key));\n\t\tfor (const identifier of removedOverrideIdentifiers) {\n\t\t\toverrides.push([identifier, from.getKeysForOverrideIdentifier(identifier)]);\n\t\t}\n\t}\n\n\tif (to && from) {\n\t\tfor (const identifier of fromOverrideIdentifiers) {\n\t\t\tif (toOverrideIdentifiers.includes(identifier)) {\n\t\t\t\tconst result = compareConfigurationContents({ contents: from.getOverrideValue(undefined, identifier) || {}, keys: from.getKeysForOverrideIdentifier(identifier) }, { contents: to.getOverrideValue(undefined, identifier) || {}, keys: to.getKeysForOverrideIdentifier(identifier) });\n\t\t\t\toverrides.push([identifier, [...result.added, ...result.removed, ...result.updated]]);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { added, removed, updated, overrides };\n}\n\nfunction compareConfigurationContents(to: { keys: string[], contents: any } | undefined, from: { keys: string[], contents: any } | undefined) {\n\tconst added = to\n\t\t? from ? to.keys.filter(key => from.keys.indexOf(key) === -1) : [...to.keys]\n\t\t: [];\n\tconst removed = from\n\t\t? to ? from.keys.filter(key => to.keys.indexOf(key) === -1) : [...from.keys]\n\t\t: [];\n\tconst updated: string[] = [];\n\n\tif (to && from) {\n\t\tfor (const key of from.keys) {\n\t\t\tif (to.keys.indexOf(key) !== -1) {\n\t\t\t\tconst value1 = getConfigurationValue(from.contents, key);\n\t\t\t\tconst value2 = getConfigurationValue(to.contents, key);\n\t\t\t\tif (!objects.equals(value1, value2)) {\n\t\t\t\t\tupdated.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn { added, removed, updated };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { extUriBiasedIgnorePathCase } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { ConfigurationTarget, IConfigurationChange, IConfigurationChangeEvent, IConfigurationData, IConfigurationOverrides, IConfigurationService, IConfigurationValue, isConfigurationOverrides } from 'vs/platform/configuration/common/configuration';\nimport { Configuration, ConfigurationChangeEvent, ConfigurationModel, DefaultConfigurationModel, UserSettings } from 'vs/platform/configuration/common/configurationModels';\nimport { Extensions, IConfigurationRegistry } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { Registry } from 'vs/platform/registry/common/platform';\n\nexport class ConfigurationService extends Disposable implements IConfigurationService, IDisposable {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate configuration: Configuration;\n\tprivate userConfiguration: UserSettings;\n\tprivate readonly reloadConfigurationScheduler: RunOnceScheduler;\n\n\tprivate readonly _onDidChangeConfiguration: Emitter<IConfigurationChangeEvent> = this._register(new Emitter<IConfigurationChangeEvent>());\n\treadonly onDidChangeConfiguration: Event<IConfigurationChangeEvent> = this._onDidChangeConfiguration.event;\n\n\tconstructor(\n\t\tprivate readonly settingsResource: URI,\n\t\tfileService: IFileService\n\t) {\n\t\tsuper();\n\t\tthis.userConfiguration = this._register(new UserSettings(this.settingsResource, undefined, extUriBiasedIgnorePathCase, fileService));\n\t\tthis.configuration = new Configuration(new DefaultConfigurationModel(), new ConfigurationModel());\n\n\t\tthis.reloadConfigurationScheduler = this._register(new RunOnceScheduler(() => this.reloadConfiguration(), 50));\n\t\tthis._register(Registry.as<IConfigurationRegistry>(Extensions.Configuration).onDidUpdateConfiguration(({ properties }) => this.onDidDefaultConfigurationChange(properties)));\n\t\tthis._register(this.userConfiguration.onDidChange(() => this.reloadConfigurationScheduler.schedule()));\n\t}\n\n\tasync initialize(): Promise<void> {\n\t\tconst userConfiguration = await this.userConfiguration.loadConfiguration();\n\t\tthis.configuration = new Configuration(new DefaultConfigurationModel(), userConfiguration);\n\t}\n\n\tgetConfigurationData(): IConfigurationData {\n\t\treturn this.configuration.toData();\n\t}\n\n\tgetValue<T>(): T;\n\tgetValue<T>(section: string): T;\n\tgetValue<T>(overrides: IConfigurationOverrides): T;\n\tgetValue<T>(section: string, overrides: IConfigurationOverrides): T;\n\tgetValue(arg1?: any, arg2?: any): any {\n\t\tconst section = typeof arg1 === 'string' ? arg1 : undefined;\n\t\tconst overrides = isConfigurationOverrides(arg1) ? arg1 : isConfigurationOverrides(arg2) ? arg2 : {};\n\t\treturn this.configuration.getValue(section, overrides, undefined);\n\t}\n\n\tupdateValue(key: string, value: any): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides): Promise<void>;\n\tupdateValue(key: string, value: any, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, arg3?: any, arg4?: any): Promise<void> {\n\t\treturn Promise.reject(new Error('not supported'));\n\t}\n\n\tinspect<T>(key: string): IConfigurationValue<T> {\n\t\treturn this.configuration.inspect<T>(key, {}, undefined);\n\t}\n\n\tkeys(): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t} {\n\t\treturn this.configuration.keys(undefined);\n\t}\n\n\tasync reloadConfiguration(): Promise<void> {\n\t\tconst configurationModel = await this.userConfiguration.loadConfiguration();\n\t\tthis.onDidChangeUserConfiguration(configurationModel);\n\t}\n\n\tprivate onDidChangeUserConfiguration(userConfigurationModel: ConfigurationModel): void {\n\t\tconst previous = this.configuration.toData();\n\t\tconst change = this.configuration.compareAndUpdateLocalUserConfiguration(userConfigurationModel);\n\t\tthis.trigger(change, previous, ConfigurationTarget.USER);\n\t}\n\n\tprivate onDidDefaultConfigurationChange(properties: string[]): void {\n\t\tconst previous = this.configuration.toData();\n\t\tconst change = this.configuration.compareAndUpdateDefaultConfiguration(new DefaultConfigurationModel(), properties);\n\t\tthis.trigger(change, previous, ConfigurationTarget.DEFAULT);\n\t}\n\n\tprivate trigger(configurationChange: IConfigurationChange, previous: IConfigurationData, source: ConfigurationTarget): void {\n\t\tconst event = new ConfigurationChangeEvent(configurationChange, { data: previous }, this.configuration);\n\t\tevent.source = source;\n\t\tevent.sourceConfig = this.getTargetConfiguration(source);\n\t\tthis._onDidChangeConfiguration.fire(event);\n\t}\n\n\tprivate getTargetConfiguration(target: ConfigurationTarget): any {\n\t\tswitch (target) {\n\t\t\tcase ConfigurationTarget.DEFAULT:\n\t\t\t\treturn this.configuration.defaults.contents;\n\t\t\tcase ConfigurationTarget.USER:\n\t\t\t\treturn this.configuration.localUserConfiguration.contents;\n\t\t}\n\t\treturn {};\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IRemoteAuthorityResolverService = createDecorator<IRemoteAuthorityResolverService>('remoteAuthorityResolverService');\n\nexport interface ResolvedAuthority {\n\treadonly authority: string;\n\treadonly host: string;\n\treadonly port: number;\n\treadonly connectionToken: string | undefined;\n}\n\nexport interface ResolvedOptions {\n\treadonly extensionHostEnv?: { [key: string]: string | null };\n\treadonly isTrusted?: boolean;\n\treadonly authenticationSession?: { id: string, providerId: string };\n}\n\nexport interface TunnelDescription {\n\tremoteAddress: { port: number, host: string };\n\tlocalAddress: { port: number, host: string } | string;\n\tprivacy?: string;\n\tprotocol?: string;\n}\nexport interface TunnelInformation {\n\tenvironmentTunnels?: TunnelDescription[];\n}\n\nexport interface ResolverResult {\n\tauthority: ResolvedAuthority;\n\toptions?: ResolvedOptions;\n\ttunnelInformation?: TunnelInformation;\n}\n\nexport interface IRemoteConnectionData {\n\thost: string;\n\tport: number;\n\tconnectionToken: string | undefined;\n}\n\nexport enum RemoteAuthorityResolverErrorCode {\n\tUnknown = 'Unknown',\n\tNotAvailable = 'NotAvailable',\n\tTemporarilyNotAvailable = 'TemporarilyNotAvailable',\n\tNoResolverFound = 'NoResolverFound'\n}\n\nexport class RemoteAuthorityResolverError extends Error {\n\n\tpublic static isTemporarilyNotAvailable(err: any): boolean {\n\t\treturn (err instanceof RemoteAuthorityResolverError) && err._code === RemoteAuthorityResolverErrorCode.TemporarilyNotAvailable;\n\t}\n\n\tpublic static isNoResolverFound(err: any): err is RemoteAuthorityResolverError {\n\t\treturn (err instanceof RemoteAuthorityResolverError) && err._code === RemoteAuthorityResolverErrorCode.NoResolverFound;\n\t}\n\n\tpublic static isHandled(err: any): boolean {\n\t\treturn (err instanceof RemoteAuthorityResolverError) && err.isHandled;\n\t}\n\n\tpublic readonly _message: string | undefined;\n\tpublic readonly _code: RemoteAuthorityResolverErrorCode;\n\tpublic readonly _detail: any;\n\n\tpublic isHandled: boolean;\n\n\tconstructor(message?: string, code: RemoteAuthorityResolverErrorCode = RemoteAuthorityResolverErrorCode.Unknown, detail?: any) {\n\t\tsuper(message);\n\n\t\tthis._message = message;\n\t\tthis._code = code;\n\t\tthis._detail = detail;\n\n\t\tthis.isHandled = (code === RemoteAuthorityResolverErrorCode.NotAvailable) && detail === true;\n\n\t\t// workaround when extending builtin objects and when compiling to ES5, see:\n\t\t// https://github.com/microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n\t\tif (typeof (<any>Object).setPrototypeOf === 'function') {\n\t\t\t(<any>Object).setPrototypeOf(this, RemoteAuthorityResolverError.prototype);\n\t\t}\n\t}\n}\n\nexport interface IRemoteAuthorityResolverService {\n\n\treadonly _serviceBrand: undefined;\n\n\treadonly onDidChangeConnectionData: Event<void>;\n\n\tresolveAuthority(authority: string): Promise<ResolverResult>;\n\tgetConnectionData(authority: string): IRemoteConnectionData | null;\n\t/**\n\t * Get the canonical URI for a `vscode-remote://` URI.\n\t *\n\t * **NOTE**: This can throw e.g. in cases where there is no resolver installed for the specific remote authority.\n\t *\n\t * @param uri The `vscode-remote://` URI\n\t */\n\tgetCanonicalURI(uri: URI): Promise<URI>;\n\n\t_clearResolvedAuthority(authority: string): void;\n\t_setResolvedAuthority(resolvedAuthority: ResolvedAuthority, resolvedOptions?: ResolvedOptions): void;\n\t_setResolvedAuthorityError(authority: string, err: any): void;\n\t_setAuthorityConnectionToken(authority: string, connectionToken: string): void;\n\t_setCanonicalURIProvider(provider: (uri: URI) => Promise<URI>): void;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancelablePromise, createCancelablePromise } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { isPromiseCanceledError, onUnexpectedError } from 'vs/base/common/errors';\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable, DisposableStore, IDisposable } from 'vs/base/common/lifecycle';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IIPCLogger } from 'vs/base/parts/ipc/common/ipc';\nimport { Client, ISocket, PersistentProtocol, SocketCloseEventType } from 'vs/base/parts/ipc/common/ipc.net';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { RemoteAgentConnectionContext } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { RemoteAuthorityResolverError } from 'vs/platform/remote/common/remoteAuthorityResolver';\nimport { ISignService } from 'vs/platform/sign/common/sign';\n\nconst RECONNECT_TIMEOUT = 30 * 1000 /* 30s */;\n\nexport const enum ConnectionType {\n\tManagement = 1,\n\tExtensionHost = 2,\n\tTunnel = 3,\n}\n\nfunction connectionTypeToString(connectionType: ConnectionType): string {\n\tswitch (connectionType) {\n\t\tcase ConnectionType.Management:\n\t\t\treturn 'Management';\n\t\tcase ConnectionType.ExtensionHost:\n\t\t\treturn 'ExtensionHost';\n\t\tcase ConnectionType.Tunnel:\n\t\t\treturn 'Tunnel';\n\t}\n}\n\nexport interface AuthRequest {\n\ttype: 'auth';\n\tauth: string;\n\tdata: string;\n}\n\nexport interface SignRequest {\n\ttype: 'sign';\n\tdata: string;\n\tsignedData: string;\n}\n\nexport interface ConnectionTypeRequest {\n\ttype: 'connectionType';\n\tcommit?: string;\n\tsignedData: string;\n\tdesiredConnectionType?: ConnectionType;\n\targs?: any;\n}\n\nexport interface ErrorMessage {\n\ttype: 'error';\n\treason: string;\n}\n\nexport interface OKMessage {\n\ttype: 'ok';\n}\n\nexport type HandshakeMessage = AuthRequest | SignRequest | ConnectionTypeRequest | ErrorMessage | OKMessage;\n\n\ninterface ISimpleConnectionOptions {\n\tcommit: string | undefined;\n\thost: string;\n\tport: number;\n\tconnectionToken: string | undefined;\n\treconnectionToken: string;\n\treconnectionProtocol: PersistentProtocol | null;\n\tsocketFactory: ISocketFactory;\n\tsignService: ISignService;\n\tlogService: ILogService;\n}\n\nexport interface IConnectCallback {\n\t(err: any | undefined, socket: ISocket | undefined): void;\n}\n\nexport interface ISocketFactory {\n\tconnect(host: string, port: number, query: string, debugLabel: string, callback: IConnectCallback): void;\n}\n\nfunction createTimeoutCancellation(millis: number): CancellationToken {\n\tconst source = new CancellationTokenSource();\n\tsetTimeout(() => source.cancel(), millis);\n\treturn source.token;\n}\n\nfunction combineTimeoutCancellation(a: CancellationToken, b: CancellationToken): CancellationToken {\n\tif (a.isCancellationRequested || b.isCancellationRequested) {\n\t\treturn CancellationToken.Cancelled;\n\t}\n\tconst source = new CancellationTokenSource();\n\ta.onCancellationRequested(() => source.cancel());\n\tb.onCancellationRequested(() => source.cancel());\n\treturn source.token;\n}\n\nclass PromiseWithTimeout<T> {\n\n\tprivate _state: 'pending' | 'resolved' | 'rejected' | 'timedout';\n\tprivate readonly _disposables: DisposableStore;\n\tpublic readonly promise: Promise<T>;\n\tprivate _resolvePromise!: (value: T) => void;\n\tprivate _rejectPromise!: (err: any) => void;\n\n\tpublic get didTimeout(): boolean {\n\t\treturn (this._state === 'timedout');\n\t}\n\n\tconstructor(timeoutCancellationToken: CancellationToken) {\n\t\tthis._state = 'pending';\n\t\tthis._disposables = new DisposableStore();\n\t\tthis.promise = new Promise<T>((resolve, reject) => {\n\t\t\tthis._resolvePromise = resolve;\n\t\t\tthis._rejectPromise = reject;\n\t\t});\n\n\t\tif (timeoutCancellationToken.isCancellationRequested) {\n\t\t\tthis._timeout();\n\t\t} else {\n\t\t\tthis._disposables.add(timeoutCancellationToken.onCancellationRequested(() => this._timeout()));\n\t\t}\n\t}\n\n\tpublic registerDisposable(disposable: IDisposable): void {\n\t\tif (this._state === 'pending') {\n\t\t\tthis._disposables.add(disposable);\n\t\t} else {\n\t\t\tdisposable.dispose();\n\t\t}\n\t}\n\n\tprivate _timeout(): void {\n\t\tif (this._state !== 'pending') {\n\t\t\treturn;\n\t\t}\n\t\tthis._disposables.dispose();\n\t\tthis._state = 'timedout';\n\t\tthis._rejectPromise(this._createTimeoutError());\n\t}\n\n\tprivate _createTimeoutError(): Error {\n\t\tconst err: any = new Error('Time limit reached');\n\t\terr.code = 'ETIMEDOUT';\n\t\terr.syscall = 'connect';\n\t\treturn err;\n\t}\n\n\tpublic resolve(value: T): void {\n\t\tif (this._state !== 'pending') {\n\t\t\treturn;\n\t\t}\n\t\tthis._disposables.dispose();\n\t\tthis._state = 'resolved';\n\t\tthis._resolvePromise(value);\n\t}\n\n\tpublic reject(err: any): void {\n\t\tif (this._state !== 'pending') {\n\t\t\treturn;\n\t\t}\n\t\tthis._disposables.dispose();\n\t\tthis._state = 'rejected';\n\t\tthis._rejectPromise(err);\n\t}\n}\n\nfunction readOneControlMessage<T>(protocol: PersistentProtocol, timeoutCancellationToken: CancellationToken): Promise<T> {\n\tconst result = new PromiseWithTimeout<T>(timeoutCancellationToken);\n\tresult.registerDisposable(protocol.onControlMessage(raw => {\n\t\tconst msg: T = JSON.parse(raw.toString());\n\t\tconst error = getErrorFromMessage(msg);\n\t\tif (error) {\n\t\t\tresult.reject(error);\n\t\t} else {\n\t\t\tresult.resolve(msg);\n\t\t}\n\t}));\n\treturn result.promise;\n}\n\nfunction createSocket(logService: ILogService, socketFactory: ISocketFactory, host: string, port: number, query: string, debugLabel: string, timeoutCancellationToken: CancellationToken): Promise<ISocket> {\n\tconst result = new PromiseWithTimeout<ISocket>(timeoutCancellationToken);\n\tsocketFactory.connect(host, port, query, debugLabel, (err: any, socket: ISocket | undefined) => {\n\t\tif (result.didTimeout) {\n\t\t\tif (err) {\n\t\t\t\tlogService.error(err);\n\t\t\t}\n\t\t\tsocket?.dispose();\n\t\t} else {\n\t\t\tif (err || !socket) {\n\t\t\t\tresult.reject(err);\n\t\t\t} else {\n\t\t\t\tresult.resolve(socket);\n\t\t\t}\n\t\t}\n\t});\n\treturn result.promise;\n}\n\nfunction raceWithTimeoutCancellation<T>(promise: Promise<T>, timeoutCancellationToken: CancellationToken): Promise<T> {\n\tconst result = new PromiseWithTimeout<T>(timeoutCancellationToken);\n\tpromise.then(\n\t\t(res) => {\n\t\t\tif (!result.didTimeout) {\n\t\t\t\tresult.resolve(res);\n\t\t\t}\n\t\t},\n\t\t(err) => {\n\t\t\tif (!result.didTimeout) {\n\t\t\t\tresult.reject(err);\n\t\t\t}\n\t\t}\n\t);\n\treturn result.promise;\n}\n\nasync function connectToRemoteExtensionHostAgent(options: ISimpleConnectionOptions, connectionType: ConnectionType, args: any | undefined, timeoutCancellationToken: CancellationToken): Promise<{ protocol: PersistentProtocol; ownsProtocol: boolean; }> {\n\tconst logPrefix = connectLogPrefix(options, connectionType);\n\n\toptions.logService.trace(`${logPrefix} 1/6. invoking socketFactory.connect().`);\n\n\tlet socket: ISocket;\n\ttry {\n\t\tsocket = await createSocket(options.logService, options.socketFactory, options.host, options.port, `reconnectionToken=${options.reconnectionToken}&reconnection=${options.reconnectionProtocol ? 'true' : 'false'}`, `renderer-${connectionTypeToString(connectionType)}-${options.reconnectionToken}`, timeoutCancellationToken);\n\t} catch (error) {\n\t\toptions.logService.error(`${logPrefix} socketFactory.connect() failed or timed out. Error:`);\n\t\toptions.logService.error(error);\n\t\tthrow error;\n\t}\n\n\toptions.logService.trace(`${logPrefix} 2/6. socketFactory.connect() was successful.`);\n\n\tlet protocol: PersistentProtocol;\n\tlet ownsProtocol: boolean;\n\tif (options.reconnectionProtocol) {\n\t\toptions.reconnectionProtocol.beginAcceptReconnection(socket, null);\n\t\tprotocol = options.reconnectionProtocol;\n\t\townsProtocol = false;\n\t} else {\n\t\tprotocol = new PersistentProtocol(socket, null);\n\t\townsProtocol = true;\n\t}\n\n\toptions.logService.trace(`${logPrefix} 3/6. sending AuthRequest control message.`);\n\tconst message = await raceWithTimeoutCancellation(options.signService.createNewMessage(generateUuid()), timeoutCancellationToken);\n\n\tconst authRequest: AuthRequest = {\n\t\ttype: 'auth',\n\t\tauth: options.connectionToken || '00000000000000000000',\n\t\tdata: message.data\n\t};\n\tprotocol.sendControl(VSBuffer.fromString(JSON.stringify(authRequest)));\n\n\ttry {\n\t\tconst msg = await readOneControlMessage<HandshakeMessage>(protocol, combineTimeoutCancellation(timeoutCancellationToken, createTimeoutCancellation(10000)));\n\n\t\tif (msg.type !== 'sign' || typeof msg.data !== 'string') {\n\t\t\tconst error: any = new Error('Unexpected handshake message');\n\t\t\terror.code = 'VSCODE_CONNECTION_ERROR';\n\t\t\tthrow error;\n\t\t}\n\n\t\toptions.logService.trace(`${logPrefix} 4/6. received SignRequest control message.`);\n\n\t\tconst isValid = await raceWithTimeoutCancellation(options.signService.validate(message, msg.signedData), timeoutCancellationToken);\n\t\tif (!isValid) {\n\t\t\tconst error: any = new Error('Refused to connect to unsupported server');\n\t\t\terror.code = 'VSCODE_CONNECTION_ERROR';\n\t\t\tthrow error;\n\t\t}\n\n\t\tconst signed = await raceWithTimeoutCancellation(options.signService.sign(msg.data), timeoutCancellationToken);\n\t\tconst connTypeRequest: ConnectionTypeRequest = {\n\t\t\ttype: 'connectionType',\n\t\t\tcommit: options.commit,\n\t\t\tsignedData: signed,\n\t\t\tdesiredConnectionType: connectionType\n\t\t};\n\t\tif (args) {\n\t\t\tconnTypeRequest.args = args;\n\t\t}\n\n\t\toptions.logService.trace(`${logPrefix} 5/6. sending ConnectionTypeRequest control message.`);\n\t\tprotocol.sendControl(VSBuffer.fromString(JSON.stringify(connTypeRequest)));\n\n\t\treturn { protocol, ownsProtocol };\n\n\t} catch (error) {\n\t\tif (error && error.code === 'ETIMEDOUT') {\n\t\t\toptions.logService.error(`${logPrefix} the handshake timed out. Error:`);\n\t\t\toptions.logService.error(error);\n\t\t}\n\t\tif (error && error.code === 'VSCODE_CONNECTION_ERROR') {\n\t\t\toptions.logService.error(`${logPrefix} received error control message when negotiating connection. Error:`);\n\t\t\toptions.logService.error(error);\n\t\t}\n\t\tif (ownsProtocol) {\n\t\t\tsafeDisposeProtocolAndSocket(protocol);\n\t\t}\n\t\tthrow error;\n\t}\n}\n\ninterface IManagementConnectionResult {\n\tprotocol: PersistentProtocol;\n}\n\nasync function connectToRemoteExtensionHostAgentAndReadOneMessage<T>(options: ISimpleConnectionOptions, connectionType: ConnectionType, args: any | undefined, timeoutCancellationToken: CancellationToken): Promise<{ protocol: PersistentProtocol; firstMessage: T; }> {\n\tconst startTime = Date.now();\n\tconst logPrefix = connectLogPrefix(options, connectionType);\n\tconst { protocol, ownsProtocol } = await connectToRemoteExtensionHostAgent(options, connectionType, args, timeoutCancellationToken);\n\tconst result = new PromiseWithTimeout<{ protocol: PersistentProtocol; firstMessage: T; }>(timeoutCancellationToken);\n\tresult.registerDisposable(protocol.onControlMessage(raw => {\n\t\tconst msg: T = JSON.parse(raw.toString());\n\t\tconst error = getErrorFromMessage(msg);\n\t\tif (error) {\n\t\t\toptions.logService.error(`${logPrefix} received error control message when negotiating connection. Error:`);\n\t\t\toptions.logService.error(error);\n\t\t\tif (ownsProtocol) {\n\t\t\t\tsafeDisposeProtocolAndSocket(protocol);\n\t\t\t}\n\t\t\tresult.reject(error);\n\t\t} else {\n\t\t\tif (options.reconnectionProtocol) {\n\t\t\t\toptions.reconnectionProtocol.endAcceptReconnection();\n\t\t\t}\n\t\t\toptions.logService.trace(`${logPrefix} 6/6. handshake finished, connection is up and running after ${logElapsed(startTime)}!`);\n\t\t\tresult.resolve({ protocol, firstMessage: msg });\n\t\t}\n\t}));\n\treturn result.promise;\n}\n\nasync function doConnectRemoteAgentManagement(options: ISimpleConnectionOptions, timeoutCancellationToken: CancellationToken): Promise<IManagementConnectionResult> {\n\tconst { protocol } = await connectToRemoteExtensionHostAgentAndReadOneMessage(options, ConnectionType.Management, undefined, timeoutCancellationToken);\n\treturn { protocol };\n}\n\nexport interface IRemoteExtensionHostStartParams {\n\tlanguage: string;\n\tdebugId?: string;\n\tbreak?: boolean;\n\tport?: number | null;\n\tenv?: { [key: string]: string | null };\n}\n\ninterface IExtensionHostConnectionResult {\n\tprotocol: PersistentProtocol;\n\tdebugPort?: number;\n}\n\nasync function doConnectRemoteAgentExtensionHost(options: ISimpleConnectionOptions, startArguments: IRemoteExtensionHostStartParams, timeoutCancellationToken: CancellationToken): Promise<IExtensionHostConnectionResult> {\n\tconst { protocol, firstMessage } = await connectToRemoteExtensionHostAgentAndReadOneMessage<{ debugPort?: number; }>(options, ConnectionType.ExtensionHost, startArguments, timeoutCancellationToken);\n\tconst debugPort = firstMessage && firstMessage.debugPort;\n\treturn { protocol, debugPort };\n}\n\nexport interface ITunnelConnectionStartParams {\n\thost: string;\n\tport: number;\n}\n\nasync function doConnectRemoteAgentTunnel(options: ISimpleConnectionOptions, startParams: ITunnelConnectionStartParams, timeoutCancellationToken: CancellationToken): Promise<PersistentProtocol> {\n\tconst startTime = Date.now();\n\tconst logPrefix = connectLogPrefix(options, ConnectionType.Tunnel);\n\tconst { protocol } = await connectToRemoteExtensionHostAgent(options, ConnectionType.Tunnel, startParams, timeoutCancellationToken);\n\toptions.logService.trace(`${logPrefix} 6/6. handshake finished, connection is up and running after ${logElapsed(startTime)}!`);\n\treturn protocol;\n}\n\nexport interface IConnectionOptions {\n\tcommit: string | undefined;\n\tsocketFactory: ISocketFactory;\n\taddressProvider: IAddressProvider;\n\tsignService: ISignService;\n\tlogService: ILogService;\n\tipcLogger: IIPCLogger | null;\n}\n\nasync function resolveConnectionOptions(options: IConnectionOptions, reconnectionToken: string, reconnectionProtocol: PersistentProtocol | null): Promise<ISimpleConnectionOptions> {\n\tconst { host, port, connectionToken } = await options.addressProvider.getAddress();\n\treturn {\n\t\tcommit: options.commit,\n\t\thost: host,\n\t\tport: port,\n\t\tconnectionToken: connectionToken,\n\t\treconnectionToken: reconnectionToken,\n\t\treconnectionProtocol: reconnectionProtocol,\n\t\tsocketFactory: options.socketFactory,\n\t\tsignService: options.signService,\n\t\tlogService: options.logService\n\t};\n}\n\nexport interface IAddress {\n\thost: string;\n\tport: number;\n\tconnectionToken: string | undefined;\n}\n\nexport interface IAddressProvider {\n\tgetAddress(): Promise<IAddress>;\n}\n\nexport async function connectRemoteAgentManagement(options: IConnectionOptions, remoteAuthority: string, clientId: string): Promise<ManagementPersistentConnection> {\n\ttry {\n\t\tconst reconnectionToken = generateUuid();\n\t\tconst simpleOptions = await resolveConnectionOptions(options, reconnectionToken, null);\n\t\tconst { protocol } = await doConnectRemoteAgentManagement(simpleOptions, CancellationToken.None);\n\t\treturn new ManagementPersistentConnection(options, remoteAuthority, clientId, reconnectionToken, protocol);\n\t} catch (err) {\n\t\toptions.logService.error(`[remote-connection] An error occurred in the very first connect attempt, it will be treated as a permanent error! Error:`);\n\t\toptions.logService.error(err);\n\t\tPersistentConnection.triggerPermanentFailure(0, 0, RemoteAuthorityResolverError.isHandled(err));\n\t\tthrow err;\n\t}\n}\n\nexport async function connectRemoteAgentExtensionHost(options: IConnectionOptions, startArguments: IRemoteExtensionHostStartParams): Promise<ExtensionHostPersistentConnection> {\n\ttry {\n\t\tconst reconnectionToken = generateUuid();\n\t\tconst simpleOptions = await resolveConnectionOptions(options, reconnectionToken, null);\n\t\tconst { protocol, debugPort } = await doConnectRemoteAgentExtensionHost(simpleOptions, startArguments, CancellationToken.None);\n\t\treturn new ExtensionHostPersistentConnection(options, startArguments, reconnectionToken, protocol, debugPort);\n\t} catch (err) {\n\t\toptions.logService.error(`[remote-connection] An error occurred in the very first connect attempt, it will be treated as a permanent error! Error:`);\n\t\toptions.logService.error(err);\n\t\tPersistentConnection.triggerPermanentFailure(0, 0, RemoteAuthorityResolverError.isHandled(err));\n\t\tthrow err;\n\t}\n}\n\nexport async function connectRemoteAgentTunnel(options: IConnectionOptions, tunnelRemoteHost: string, tunnelRemotePort: number): Promise<PersistentProtocol> {\n\tconst simpleOptions = await resolveConnectionOptions(options, generateUuid(), null);\n\tconst protocol = await doConnectRemoteAgentTunnel(simpleOptions, { host: tunnelRemoteHost, port: tunnelRemotePort }, CancellationToken.None);\n\treturn protocol;\n}\n\nfunction sleep(seconds: number): CancelablePromise<void> {\n\treturn createCancelablePromise(token => {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst timeout = setTimeout(resolve, seconds * 1000);\n\t\t\ttoken.onCancellationRequested(() => {\n\t\t\t\tclearTimeout(timeout);\n\t\t\t\tresolve();\n\t\t\t});\n\t\t});\n\t});\n}\n\nexport const enum PersistentConnectionEventType {\n\tConnectionLost,\n\tReconnectionWait,\n\tReconnectionRunning,\n\tReconnectionPermanentFailure,\n\tConnectionGain\n}\nexport class ConnectionLostEvent {\n\tpublic readonly type = PersistentConnectionEventType.ConnectionLost;\n\tconstructor(\n\t\tpublic readonly reconnectionToken: string,\n\t\tpublic readonly millisSinceLastIncomingData: number\n\t) { }\n}\nexport class ReconnectionWaitEvent {\n\tpublic readonly type = PersistentConnectionEventType.ReconnectionWait;\n\tconstructor(\n\t\tpublic readonly reconnectionToken: string,\n\t\tpublic readonly millisSinceLastIncomingData: number,\n\t\tpublic readonly durationSeconds: number,\n\t\tprivate readonly cancellableTimer: CancelablePromise<void>\n\t) { }\n\n\tpublic skipWait(): void {\n\t\tthis.cancellableTimer.cancel();\n\t}\n}\nexport class ReconnectionRunningEvent {\n\tpublic readonly type = PersistentConnectionEventType.ReconnectionRunning;\n\tconstructor(\n\t\tpublic readonly reconnectionToken: string,\n\t\tpublic readonly millisSinceLastIncomingData: number,\n\t\tpublic readonly attempt: number\n\t) { }\n}\nexport class ConnectionGainEvent {\n\tpublic readonly type = PersistentConnectionEventType.ConnectionGain;\n\tconstructor(\n\t\tpublic readonly reconnectionToken: string,\n\t\tpublic readonly millisSinceLastIncomingData: number,\n\t\tpublic readonly attempt: number\n\t) { }\n}\nexport class ReconnectionPermanentFailureEvent {\n\tpublic readonly type = PersistentConnectionEventType.ReconnectionPermanentFailure;\n\tconstructor(\n\t\tpublic readonly reconnectionToken: string,\n\t\tpublic readonly millisSinceLastIncomingData: number,\n\t\tpublic readonly attempt: number,\n\t\tpublic readonly handled: boolean\n\t) { }\n}\nexport type PersistentConnectionEvent = ConnectionGainEvent | ConnectionLostEvent | ReconnectionWaitEvent | ReconnectionRunningEvent | ReconnectionPermanentFailureEvent;\n\nexport abstract class PersistentConnection extends Disposable {\n\n\tpublic static triggerPermanentFailure(millisSinceLastIncomingData: number, attempt: number, handled: boolean): void {\n\t\tthis._permanentFailure = true;\n\t\tthis._permanentFailureMillisSinceLastIncomingData = millisSinceLastIncomingData;\n\t\tthis._permanentFailureAttempt = attempt;\n\t\tthis._permanentFailureHandled = handled;\n\t\tthis._instances.forEach(instance => instance._gotoPermanentFailure(this._permanentFailureMillisSinceLastIncomingData, this._permanentFailureAttempt, this._permanentFailureHandled));\n\t}\n\n\tpublic static debugTriggerReconnection() {\n\t\tthis._instances.forEach(instance => instance._beginReconnecting());\n\t}\n\n\tpublic static debugPauseSocketWriting() {\n\t\tthis._instances.forEach(instance => instance._pauseSocketWriting());\n\t}\n\n\tprivate static _permanentFailure: boolean = false;\n\tprivate static _permanentFailureMillisSinceLastIncomingData: number = 0;\n\tprivate static _permanentFailureAttempt: number = 0;\n\tprivate static _permanentFailureHandled: boolean = false;\n\tprivate static _instances: PersistentConnection[] = [];\n\n\tprivate readonly _onDidStateChange = this._register(new Emitter<PersistentConnectionEvent>());\n\tpublic readonly onDidStateChange = this._onDidStateChange.event;\n\n\tprotected readonly _options: IConnectionOptions;\n\tpublic readonly reconnectionToken: string;\n\tpublic readonly protocol: PersistentProtocol;\n\n\tprivate _isReconnecting: boolean;\n\n\tconstructor(private readonly _connectionType: ConnectionType, options: IConnectionOptions, reconnectionToken: string, protocol: PersistentProtocol) {\n\t\tsuper();\n\t\tthis._options = options;\n\t\tthis.reconnectionToken = reconnectionToken;\n\t\tthis.protocol = protocol;\n\t\tthis._isReconnecting = false;\n\n\t\tthis._onDidStateChange.fire(new ConnectionGainEvent(this.reconnectionToken, 0, 0));\n\n\t\tthis._register(protocol.onSocketClose((e) => {\n\t\t\tconst logPrefix = commonLogPrefix(this._connectionType, this.reconnectionToken, true);\n\t\t\tif (!e) {\n\t\t\t\tthis._options.logService.info(`${logPrefix} received socket close event.`);\n\t\t\t} else if (e.type === SocketCloseEventType.NodeSocketCloseEvent) {\n\t\t\t\tthis._options.logService.info(`${logPrefix} received socket close event (hadError: ${e.hadError}).`);\n\t\t\t\tif (e.error) {\n\t\t\t\t\tthis._options.logService.error(e.error);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._options.logService.info(`${logPrefix} received socket close event (wasClean: ${e.wasClean}, code: ${e.code}, reason: ${e.reason}).`);\n\t\t\t\tif (e.event) {\n\t\t\t\t\tthis._options.logService.error(e.event);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._beginReconnecting();\n\t\t}));\n\t\tthis._register(protocol.onSocketTimeout(() => {\n\t\t\tconst logPrefix = commonLogPrefix(this._connectionType, this.reconnectionToken, true);\n\t\t\tthis._options.logService.info(`${logPrefix} received socket timeout event.`);\n\t\t\tthis._beginReconnecting();\n\t\t}));\n\n\t\tPersistentConnection._instances.push(this);\n\n\t\tif (PersistentConnection._permanentFailure) {\n\t\t\tthis._gotoPermanentFailure(PersistentConnection._permanentFailureMillisSinceLastIncomingData, PersistentConnection._permanentFailureAttempt, PersistentConnection._permanentFailureHandled);\n\t\t}\n\t}\n\n\tprivate async _beginReconnecting(): Promise<void> {\n\t\t// Only have one reconnection loop active at a time.\n\t\tif (this._isReconnecting) {\n\t\t\treturn;\n\t\t}\n\t\ttry {\n\t\t\tthis._isReconnecting = true;\n\t\t\tawait this._runReconnectingLoop();\n\t\t} finally {\n\t\t\tthis._isReconnecting = false;\n\t\t}\n\t}\n\n\tprivate async _runReconnectingLoop(): Promise<void> {\n\t\tif (PersistentConnection._permanentFailure) {\n\t\t\t// no more attempts!\n\t\t\treturn;\n\t\t}\n\t\tconst logPrefix = commonLogPrefix(this._connectionType, this.reconnectionToken, true);\n\t\tthis._options.logService.info(`${logPrefix} starting reconnecting loop. You can get more information with the trace log level.`);\n\t\tthis._onDidStateChange.fire(new ConnectionLostEvent(this.reconnectionToken, this.protocol.getMillisSinceLastIncomingData()));\n\t\tconst TIMES = [0, 5, 5, 10, 10, 10, 10, 10, 30];\n\t\tlet attempt = -1;\n\t\tdo {\n\t\t\tattempt++;\n\t\t\tconst waitTime = (attempt < TIMES.length ? TIMES[attempt] : TIMES[TIMES.length - 1]);\n\t\t\ttry {\n\t\t\t\tif (waitTime > 0) {\n\t\t\t\t\tconst sleepPromise = sleep(waitTime);\n\t\t\t\t\tthis._onDidStateChange.fire(new ReconnectionWaitEvent(this.reconnectionToken, this.protocol.getMillisSinceLastIncomingData(), waitTime, sleepPromise));\n\n\t\t\t\t\tthis._options.logService.info(`${logPrefix} waiting for ${waitTime} seconds before reconnecting...`);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait sleepPromise;\n\t\t\t\t\t} catch { } // User canceled timer\n\t\t\t\t}\n\n\t\t\t\tif (PersistentConnection._permanentFailure) {\n\t\t\t\t\tthis._options.logService.error(`${logPrefix} permanent failure occurred while running the reconnecting loop.`);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// connection was lost, let's try to re-establish it\n\t\t\t\tthis._onDidStateChange.fire(new ReconnectionRunningEvent(this.reconnectionToken, this.protocol.getMillisSinceLastIncomingData(), attempt + 1));\n\t\t\t\tthis._options.logService.info(`${logPrefix} resolving connection...`);\n\t\t\t\tconst simpleOptions = await resolveConnectionOptions(this._options, this.reconnectionToken, this.protocol);\n\t\t\t\tthis._options.logService.info(`${logPrefix} connecting to ${simpleOptions.host}:${simpleOptions.port}...`);\n\t\t\t\tawait this._reconnect(simpleOptions, createTimeoutCancellation(RECONNECT_TIMEOUT));\n\t\t\t\tthis._options.logService.info(`${logPrefix} reconnected!`);\n\t\t\t\tthis._onDidStateChange.fire(new ConnectionGainEvent(this.reconnectionToken, this.protocol.getMillisSinceLastIncomingData(), attempt + 1));\n\n\t\t\t\tbreak;\n\t\t\t} catch (err) {\n\t\t\t\tif (err.code === 'VSCODE_CONNECTION_ERROR') {\n\t\t\t\t\tthis._options.logService.error(`${logPrefix} A permanent error occurred in the reconnecting loop! Will give up now! Error:`);\n\t\t\t\t\tthis._options.logService.error(err);\n\t\t\t\t\tPersistentConnection.triggerPermanentFailure(this.protocol.getMillisSinceLastIncomingData(), attempt + 1, false);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (attempt > 360) {\n\t\t\t\t\t// ReconnectionGraceTime is 3hrs, with 30s between attempts that yields a maximum of 360 attempts\n\t\t\t\t\tthis._options.logService.error(`${logPrefix} An error occurred while reconnecting, but it will be treated as a permanent error because the reconnection grace time has expired! Will give up now! Error:`);\n\t\t\t\t\tthis._options.logService.error(err);\n\t\t\t\t\tPersistentConnection.triggerPermanentFailure(this.protocol.getMillisSinceLastIncomingData(), attempt + 1, false);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (RemoteAuthorityResolverError.isTemporarilyNotAvailable(err)) {\n\t\t\t\t\tthis._options.logService.info(`${logPrefix} A temporarily not available error occurred while trying to reconnect, will try again...`);\n\t\t\t\t\tthis._options.logService.trace(err);\n\t\t\t\t\t// try again!\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif ((err.code === 'ETIMEDOUT' || err.code === 'ENETUNREACH' || err.code === 'ECONNREFUSED' || err.code === 'ECONNRESET') && err.syscall === 'connect') {\n\t\t\t\t\tthis._options.logService.info(`${logPrefix} A network error occurred while trying to reconnect, will try again...`);\n\t\t\t\t\tthis._options.logService.trace(err);\n\t\t\t\t\t// try again!\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (isPromiseCanceledError(err)) {\n\t\t\t\t\tthis._options.logService.info(`${logPrefix} A promise cancelation error occurred while trying to reconnect, will try again...`);\n\t\t\t\t\tthis._options.logService.trace(err);\n\t\t\t\t\t// try again!\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (err instanceof RemoteAuthorityResolverError) {\n\t\t\t\t\tthis._options.logService.error(`${logPrefix} A RemoteAuthorityResolverError occurred while trying to reconnect. Will give up now! Error:`);\n\t\t\t\t\tthis._options.logService.error(err);\n\t\t\t\t\tPersistentConnection.triggerPermanentFailure(this.protocol.getMillisSinceLastIncomingData(), attempt + 1, RemoteAuthorityResolverError.isHandled(err));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tthis._options.logService.error(`${logPrefix} An unknown error occurred while trying to reconnect, since this is an unknown case, it will be treated as a permanent error! Will give up now! Error:`);\n\t\t\t\tthis._options.logService.error(err);\n\t\t\t\tPersistentConnection.triggerPermanentFailure(this.protocol.getMillisSinceLastIncomingData(), attempt + 1, false);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while (!PersistentConnection._permanentFailure);\n\t}\n\n\tprivate _gotoPermanentFailure(millisSinceLastIncomingData: number, attempt: number, handled: boolean): void {\n\t\tthis._onDidStateChange.fire(new ReconnectionPermanentFailureEvent(this.reconnectionToken, millisSinceLastIncomingData, attempt, handled));\n\t\tsafeDisposeProtocolAndSocket(this.protocol);\n\t}\n\n\tprivate _pauseSocketWriting(): void {\n\t\tthis.protocol.pauseSocketWriting();\n\t}\n\n\tprotected abstract _reconnect(options: ISimpleConnectionOptions, timeoutCancellationToken: CancellationToken): Promise<void>;\n}\n\nexport class ManagementPersistentConnection extends PersistentConnection {\n\n\tpublic readonly client: Client<RemoteAgentConnectionContext>;\n\n\tconstructor(options: IConnectionOptions, remoteAuthority: string, clientId: string, reconnectionToken: string, protocol: PersistentProtocol) {\n\t\tsuper(ConnectionType.Management, options, reconnectionToken, protocol);\n\t\tthis.client = this._register(new Client<RemoteAgentConnectionContext>(protocol, {\n\t\t\tremoteAuthority: remoteAuthority,\n\t\t\tclientId: clientId\n\t\t}, options.ipcLogger));\n\t}\n\n\tprotected async _reconnect(options: ISimpleConnectionOptions, timeoutCancellationToken: CancellationToken): Promise<void> {\n\t\tawait doConnectRemoteAgentManagement(options, timeoutCancellationToken);\n\t}\n}\n\nexport class ExtensionHostPersistentConnection extends PersistentConnection {\n\n\tprivate readonly _startArguments: IRemoteExtensionHostStartParams;\n\tpublic readonly debugPort: number | undefined;\n\n\tconstructor(options: IConnectionOptions, startArguments: IRemoteExtensionHostStartParams, reconnectionToken: string, protocol: PersistentProtocol, debugPort: number | undefined) {\n\t\tsuper(ConnectionType.ExtensionHost, options, reconnectionToken, protocol);\n\t\tthis._startArguments = startArguments;\n\t\tthis.debugPort = debugPort;\n\t}\n\n\tprotected async _reconnect(options: ISimpleConnectionOptions, timeoutCancellationToken: CancellationToken): Promise<void> {\n\t\tawait doConnectRemoteAgentExtensionHost(options, this._startArguments, timeoutCancellationToken);\n\t}\n}\n\nfunction safeDisposeProtocolAndSocket(protocol: PersistentProtocol): void {\n\ttry {\n\t\tprotocol.acceptDisconnect();\n\t\tconst socket = protocol.getSocket();\n\t\tprotocol.dispose();\n\t\tsocket.dispose();\n\t} catch (err) {\n\t\tonUnexpectedError(err);\n\t}\n}\n\nfunction getErrorFromMessage(msg: any): Error | null {\n\tif (msg && msg.type === 'error') {\n\t\tconst error = new Error(`Connection error: ${msg.reason}`);\n\t\t(<any>error).code = 'VSCODE_CONNECTION_ERROR';\n\t\treturn error;\n\t}\n\treturn null;\n}\n\nfunction stringRightPad(str: string, len: number): string {\n\twhile (str.length < len) {\n\t\tstr += ' ';\n\t}\n\treturn str;\n}\n\nfunction commonLogPrefix(connectionType: ConnectionType, reconnectionToken: string, isReconnect: boolean): string {\n\treturn `[remote-connection][${stringRightPad(connectionTypeToString(connectionType), 13)}][${reconnectionToken.substr(0, 5)}…][${isReconnect ? 'reconnect' : 'initial'}]`;\n}\n\nfunction connectLogPrefix(options: ISimpleConnectionOptions, connectionType: ConnectionType): string {\n\treturn `${commonLogPrefix(connectionType, options.reconnectionToken, !!options.reconnectionProtocol)}[${options.host}:${options.port}]`;\n}\n\nfunction logElapsed(startTime: number): string {\n\treturn `${Date.now() - startTime} ms`;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Schemas } from 'vs/base/common/network';\nimport { URI } from 'vs/base/common/uri';\nimport { IWorkspace } from 'vs/platform/workspace/common/workspace';\n\nexport function getRemoteAuthority(uri: URI): string | undefined {\n\treturn uri.scheme === Schemas.vscodeRemote ? uri.authority : undefined;\n}\n\nexport function getRemoteName(authority: string): string;\nexport function getRemoteName(authority: undefined): undefined;\nexport function getRemoteName(authority: string | undefined): string | undefined;\nexport function getRemoteName(authority: string | undefined): string | undefined {\n\tif (!authority) {\n\t\treturn undefined;\n\t}\n\tconst pos = authority.indexOf('+');\n\tif (pos < 0) {\n\t\t// e.g. localhost:8000\n\t\treturn authority;\n\t}\n\treturn authority.substr(0, pos);\n}\n\nexport function isVirtualResource(resource: URI) {\n\treturn resource.scheme !== Schemas.file && resource.scheme !== Schemas.vscodeRemote;\n}\n\nexport function getVirtualWorkspaceLocation(workspace: IWorkspace): { scheme: string, authority: string } | undefined {\n\tif (workspace.folders.length) {\n\t\treturn workspace.folders.every(f => isVirtualResource(f.uri)) ? workspace.folders[0].uri : undefined;\n\t} else if (workspace.configuration && isVirtualResource(workspace.configuration)) {\n\t\treturn workspace.configuration;\n\t}\n\treturn undefined;\n}\n\nexport function getVirtualWorkspaceScheme(workspace: IWorkspace): string | undefined {\n\treturn getVirtualWorkspaceLocation(workspace)?.scheme;\n}\n\nexport function isVirtualWorkspace(workspace: IWorkspace): boolean {\n\treturn getVirtualWorkspaceLocation(workspace) !== undefined;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ILocalization } from 'vs/platform/localizations/common/localizations';\nimport { getRemoteName } from 'vs/platform/remote/common/remoteHosts';\n\nexport const MANIFEST_CACHE_FOLDER = 'CachedExtensions';\nexport const USER_MANIFEST_CACHE_FILE = 'user';\nexport const BUILTIN_MANIFEST_CACHE_FILE = 'builtin';\n\nexport interface ICommand {\n\tcommand: string;\n\ttitle: string;\n\tcategory?: string;\n}\n\nexport interface IConfigurationProperty {\n\tdescription: string;\n\ttype: string | string[];\n\tdefault?: any;\n}\n\nexport interface IConfiguration {\n\tid?: string,\n\torder?: number,\n\ttitle?: string,\n\tproperties: { [key: string]: IConfigurationProperty; };\n}\n\nexport interface IDebugger {\n\tlabel?: string;\n\ttype: string;\n\truntime?: string;\n}\n\nexport interface IGrammar {\n\tlanguage: string;\n}\n\nexport interface IJSONValidation {\n\tfileMatch: string | string[];\n\turl: string;\n}\n\nexport interface IKeyBinding {\n\tcommand: string;\n\tkey: string;\n\twhen?: string;\n\tmac?: string;\n\tlinux?: string;\n\twin?: string;\n}\n\nexport interface ILanguage {\n\tid: string;\n\textensions: string[];\n\taliases: string[];\n}\n\nexport interface IMenu {\n\tcommand: string;\n\talt?: string;\n\twhen?: string;\n\tgroup?: string;\n}\n\nexport interface ISnippet {\n\tlanguage: string;\n}\n\nexport interface ITheme {\n\tlabel: string;\n}\n\nexport interface IViewContainer {\n\tid: string;\n\ttitle: string;\n}\n\nexport interface IView {\n\tid: string;\n\tname: string;\n}\n\nexport interface IColor {\n\tid: string;\n\tdescription: string;\n\tdefaults: { light: string, dark: string, highContrast: string };\n}\n\nexport interface IWebviewEditor {\n\treadonly viewType: string;\n\treadonly priority: string;\n\treadonly selector: readonly {\n\t\treadonly filenamePattern?: string;\n\t}[];\n}\n\nexport interface ICodeActionContributionAction {\n\treadonly kind: string;\n\treadonly title: string;\n\treadonly description?: string;\n}\n\nexport interface ICodeActionContribution {\n\treadonly languages: readonly string[];\n\treadonly actions: readonly ICodeActionContributionAction[];\n}\n\nexport interface IAuthenticationContribution {\n\treadonly id: string;\n\treadonly label: string;\n}\n\nexport interface IWalkthroughStep {\n\treadonly id: string;\n\treadonly title: string;\n\treadonly description: string | undefined;\n\treadonly media:\n\t| { image: string | { dark: string, light: string, hc: string }, altText: string, markdown?: never, svg?: never }\n\t| { markdown: string, image?: never, svg?: never }\n\t| { svg: string, altText: string, markdown?: never, image?: never }\n\treadonly completionEvents?: string[];\n\t/** @deprecated use `completionEvents: 'onCommand:...'` */\n\treadonly doneOn?: { command: string };\n\treadonly when?: string;\n}\n\nexport interface IWalkthrough {\n\treadonly id: string,\n\treadonly title: string;\n\treadonly description: string;\n\treadonly steps: IWalkthroughStep[];\n\treadonly featuredFor: string[] | undefined;\n\treadonly when?: string;\n}\n\nexport interface IStartEntry {\n\treadonly title: string;\n\treadonly description: string;\n\treadonly command: string;\n\treadonly when?: string;\n\treadonly category: 'file' | 'folder' | 'notebook';\n}\n\nexport interface INotebookEntry {\n\treadonly type: string;\n\treadonly displayName: string;\n}\n\nexport interface INotebookRendererContribution {\n\treadonly id: string;\n\treadonly displayName: string;\n\treadonly mimeTypes: string[];\n}\n\nexport interface IExtensionContributions {\n\tcommands?: ICommand[];\n\tconfiguration?: IConfiguration | IConfiguration[];\n\tdebuggers?: IDebugger[];\n\tgrammars?: IGrammar[];\n\tjsonValidation?: IJSONValidation[];\n\tkeybindings?: IKeyBinding[];\n\tlanguages?: ILanguage[];\n\tmenus?: { [context: string]: IMenu[] };\n\tsnippets?: ISnippet[];\n\tthemes?: ITheme[];\n\ticonThemes?: ITheme[];\n\tproductIconThemes?: ITheme[];\n\tviewsContainers?: { [location: string]: IViewContainer[] };\n\tviews?: { [location: string]: IView[] };\n\tcolors?: IColor[];\n\tlocalizations?: ILocalization[];\n\treadonly customEditors?: readonly IWebviewEditor[];\n\treadonly codeActions?: readonly ICodeActionContribution[];\n\tauthentication?: IAuthenticationContribution[];\n\twalkthroughs?: IWalkthrough[];\n\tstartEntries?: IStartEntry[];\n\treadonly notebooks?: INotebookEntry[];\n\treadonly notebookRenderer?: INotebookRendererContribution[];\n}\n\nexport interface IExtensionCapabilities {\n\treadonly virtualWorkspaces?: ExtensionVirtualWorkspaceSupport;\n\treadonly untrustedWorkspaces?: ExtensionUntrustedWorkspaceSupport;\n}\n\n\nexport const ALL_EXTENSION_KINDS: readonly ExtensionKind[] = ['ui', 'workspace', 'web'];\nexport type ExtensionKind = 'ui' | 'workspace' | 'web';\n\nexport type LimitedWorkspaceSupportType = 'limited';\nexport type ExtensionUntrustedWorkspaceSupportType = boolean | LimitedWorkspaceSupportType;\nexport type ExtensionUntrustedWorkspaceSupport = { supported: true; } | { supported: false, description: string } | { supported: LimitedWorkspaceSupportType, description: string, restrictedConfigurations?: string[] };\n\nexport type ExtensionVirtualWorkspaceSupportType = boolean | LimitedWorkspaceSupportType;\nexport type ExtensionVirtualWorkspaceSupport = boolean | { supported: true; } | { supported: false | LimitedWorkspaceSupportType, description: string };\n\nexport function getWorkspaceSupportTypeMessage(supportType: ExtensionUntrustedWorkspaceSupport | ExtensionVirtualWorkspaceSupport | undefined): string | undefined {\n\tif (typeof supportType === 'object' && supportType !== null) {\n\t\tif (supportType.supported !== true) {\n\t\t\treturn supportType.description;\n\t\t}\n\t}\n\treturn undefined;\n}\n\n\nexport function isIExtensionIdentifier(thing: any): thing is IExtensionIdentifier {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.id === 'string'\n\t\t&& (!thing.uuid || typeof thing.uuid === 'string');\n}\n\nexport interface IExtensionIdentifier {\n\tid: string;\n\tuuid?: string;\n}\n\nexport const EXTENSION_CATEGORIES = [\n\t'Azure',\n\t'Data Science',\n\t'Debuggers',\n\t'Extension Packs',\n\t'Education',\n\t'Formatters',\n\t'Keymaps',\n\t'Language Packs',\n\t'Linters',\n\t'Machine Learning',\n\t'Notebooks',\n\t'Programming Languages',\n\t'SCM Providers',\n\t'Snippets',\n\t'Testing',\n\t'Themes',\n\t'Visualization',\n\t'Other',\n];\n\nexport interface IExtensionManifest {\n\treadonly name: string;\n\treadonly displayName?: string;\n\treadonly publisher: string;\n\treadonly version: string;\n\treadonly engines: { readonly vscode: string };\n\treadonly description?: string;\n\treadonly main?: string;\n\treadonly browser?: string;\n\treadonly icon?: string;\n\treadonly categories?: string[];\n\treadonly keywords?: string[];\n\treadonly activationEvents?: string[];\n\treadonly extensionDependencies?: string[];\n\treadonly extensionPack?: string[];\n\treadonly extensionKind?: ExtensionKind | ExtensionKind[];\n\treadonly contributes?: IExtensionContributions;\n\treadonly repository?: { url: string; };\n\treadonly bugs?: { url: string; };\n\treadonly enabledApiProposals?: readonly string[];\n\treadonly api?: string;\n\treadonly scripts?: { [key: string]: string; };\n\treadonly capabilities?: IExtensionCapabilities;\n}\n\nexport const enum ExtensionType {\n\tSystem,\n\tUser\n}\n\nexport interface IExtension {\n\treadonly type: ExtensionType;\n\treadonly isBuiltin: boolean;\n\treadonly identifier: IExtensionIdentifier;\n\treadonly manifest: IExtensionManifest;\n\treadonly location: URI;\n\treadonly readmeUrl?: URI;\n\treadonly changelogUrl?: URI;\n}\n\n/**\n * **!Do not construct directly!**\n *\n * **!Only static methods because it gets serialized!**\n *\n * This represents the \"canonical\" version for an extension identifier. Extension ids\n * have to be case-insensitive (due to the marketplace), but we must ensure case\n * preservation because the extension API is already public at this time.\n *\n * For example, given an extension with the publisher `\"Hello\"` and the name `\"World\"`,\n * its canonical extension identifier is `\"Hello.World\"`. This extension could be\n * referenced in some other extension's dependencies using the string `\"hello.world\"`.\n *\n * To make matters more complicated, an extension can optionally have an UUID. When two\n * extensions have the same UUID, they are considered equal even if their identifier is different.\n */\nexport class ExtensionIdentifier {\n\tpublic readonly value: string;\n\tprivate readonly _lower: string;\n\n\tconstructor(value: string) {\n\t\tthis.value = value;\n\t\tthis._lower = value.toLowerCase();\n\t}\n\n\tpublic static equals(a: ExtensionIdentifier | string | null | undefined, b: ExtensionIdentifier | string | null | undefined) {\n\t\tif (typeof a === 'undefined' || a === null) {\n\t\t\treturn (typeof b === 'undefined' || b === null);\n\t\t}\n\t\tif (typeof b === 'undefined' || b === null) {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof a === 'string' || typeof b === 'string') {\n\t\t\t// At least one of the arguments is an extension id in string form,\n\t\t\t// so we have to use the string comparison which ignores case.\n\t\t\tlet aValue = (typeof a === 'string' ? a : a.value);\n\t\t\tlet bValue = (typeof b === 'string' ? b : b.value);\n\t\t\treturn strings.equalsIgnoreCase(aValue, bValue);\n\t\t}\n\n\t\t// Now we know both arguments are ExtensionIdentifier\n\t\treturn (a._lower === b._lower);\n\t}\n\n\t/**\n\t * Gives the value by which to index (for equality).\n\t */\n\tpublic static toKey(id: ExtensionIdentifier | string): string {\n\t\tif (typeof id === 'string') {\n\t\t\treturn id.toLowerCase();\n\t\t}\n\t\treturn id._lower;\n\t}\n}\n\nexport interface IExtensionDescription extends IExtensionManifest {\n\treadonly identifier: ExtensionIdentifier;\n\treadonly uuid?: string;\n\treadonly isBuiltin: boolean;\n\treadonly isUserBuiltin: boolean;\n\treadonly isUnderDevelopment: boolean;\n\treadonly extensionLocation: URI;\n}\n\nexport function isLanguagePackExtension(manifest: IExtensionManifest): boolean {\n\treturn manifest.contributes && manifest.contributes.localizations ? manifest.contributes.localizations.length > 0 : false;\n}\n\nexport function isAuthenticationProviderExtension(manifest: IExtensionManifest): boolean {\n\treturn manifest.contributes && manifest.contributes.authentication ? manifest.contributes.authentication.length > 0 : false;\n}\n\nexport function isResolverExtension(manifest: IExtensionManifest, remoteAuthority: string | undefined): boolean {\n\tif (remoteAuthority) {\n\t\tconst activationEvent = `onResolveRemoteAuthority:${getRemoteName(remoteAuthority)}`;\n\t\treturn manifest.activationEvents?.indexOf(activationEvent) !== -1;\n\t}\n\treturn false;\n}\n\nexport const IBuiltinExtensionsScannerService = createDecorator<IBuiltinExtensionsScannerService>('IBuiltinExtensionsScannerService');\nexport interface IBuiltinExtensionsScannerService {\n\treadonly _serviceBrand: undefined;\n\tscanBuiltinExtensions(): Promise<IExtension[]>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { compareIgnoreCase } from 'vs/base/common/strings';\nimport { IExtensionIdentifier, IExtensionIdentifierWithVersion, IGalleryExtension, ILocalExtension, IExtensionsControlManifest } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionIdentifier, IExtension } from 'vs/platform/extensions/common/extensions';\n\nexport function areSameExtensions(a: IExtensionIdentifier, b: IExtensionIdentifier): boolean {\n\tif (a.uuid && b.uuid) {\n\t\treturn a.uuid === b.uuid;\n\t}\n\tif (a.id === b.id) {\n\t\treturn true;\n\t}\n\treturn compareIgnoreCase(a.id, b.id) === 0;\n}\n\nexport class ExtensionIdentifierWithVersion implements IExtensionIdentifierWithVersion {\n\n\treadonly id: string;\n\treadonly uuid?: string;\n\n\tconstructor(\n\t\tidentifier: IExtensionIdentifier,\n\t\treadonly version: string\n\t) {\n\t\tthis.id = identifier.id;\n\t\tthis.uuid = identifier.uuid;\n\t}\n\n\tkey(): string {\n\t\treturn `${this.id}-${this.version}`;\n\t}\n\n\tequals(o: any): boolean {\n\t\tif (!(o instanceof ExtensionIdentifierWithVersion)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn areSameExtensions(this, o) && this.version === o.version;\n\t}\n}\n\nexport function getExtensionId(publisher: string, name: string): string {\n\treturn `${publisher}.${name}`;\n}\n\nexport function adoptToGalleryExtensionId(id: string): string {\n\treturn id.toLocaleLowerCase();\n}\n\nexport function getGalleryExtensionId(publisher: string, name: string): string {\n\treturn adoptToGalleryExtensionId(getExtensionId(publisher, name));\n}\n\nexport function groupByExtension<T>(extensions: T[], getExtensionIdentifier: (t: T) => IExtensionIdentifier): T[][] {\n\tconst byExtension: T[][] = [];\n\tconst findGroup = (extension: T) => {\n\t\tfor (const group of byExtension) {\n\t\t\tif (group.some(e => areSameExtensions(getExtensionIdentifier(e), getExtensionIdentifier(extension)))) {\n\t\t\t\treturn group;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\tfor (const extension of extensions) {\n\t\tconst group = findGroup(extension);\n\t\tif (group) {\n\t\t\tgroup.push(extension);\n\t\t} else {\n\t\t\tbyExtension.push([extension]);\n\t\t}\n\t}\n\treturn byExtension;\n}\n\nexport function getLocalExtensionTelemetryData(extension: ILocalExtension): any {\n\treturn {\n\t\tid: extension.identifier.id,\n\t\tname: extension.manifest.name,\n\t\tgalleryId: null,\n\t\tpublisherId: extension.publisherId,\n\t\tpublisherName: extension.manifest.publisher,\n\t\tpublisherDisplayName: extension.publisherDisplayName,\n\t\tdependencies: extension.manifest.extensionDependencies && extension.manifest.extensionDependencies.length > 0\n\t};\n}\n\n\n/* __GDPR__FRAGMENT__\n\t\"GalleryExtensionTelemetryData\" : {\n\t\t\"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"name\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"galleryId\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherId\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherName\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherDisplayName\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"isPreReleaseVersion\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"dependencies\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\"${include}\": [\n\t\t\t\"${GalleryExtensionTelemetryData2}\"\n\t\t]\n\t}\n*/\nexport function getGalleryExtensionTelemetryData(extension: IGalleryExtension): any {\n\treturn {\n\t\tid: extension.identifier.id,\n\t\tname: extension.name,\n\t\tgalleryId: extension.identifier.uuid,\n\t\tpublisherId: extension.publisherId,\n\t\tpublisherName: extension.publisher,\n\t\tpublisherDisplayName: extension.publisherDisplayName,\n\t\tisPreReleaseVersion: extension.properties.isPreReleaseVersion,\n\t\tdependencies: !!(extension.properties.dependencies && extension.properties.dependencies.length > 0),\n\t\t...extension.telemetryData\n\t};\n}\n\nexport const BetterMergeId = new ExtensionIdentifier('pprice.better-merge');\n\nexport function getMaliciousExtensionsSet(manifest: IExtensionsControlManifest): Set<string> {\n\tconst result = new Set<string>();\n\n\tif (manifest.malicious) {\n\t\tfor (const extension of manifest.malicious) {\n\t\t\tresult.add(extension.id);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function getExtensionDependencies(installedExtensions: ReadonlyArray<IExtension>, extension: IExtension): IExtension[] {\n\tconst dependencies: IExtension[] = [];\n\tconst extensions = extension.manifest.extensionDependencies?.slice(0) ?? [];\n\n\twhile (extensions.length) {\n\t\tconst id = extensions.shift();\n\n\t\tif (id && dependencies.every(e => !areSameExtensions(e.identifier, { id }))) {\n\t\t\tconst ext = installedExtensions.filter(e => areSameExtensions(e.identifier, { id }));\n\t\t\tif (ext.length === 1) {\n\t\t\t\tdependencies.push(ext[0]);\n\t\t\t\textensions.push(...ext[0].manifest.extensionDependencies?.slice(0) ?? []);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dependencies;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Promises } from 'vs/base/common/async';\nimport { getErrorMessage } from 'vs/base/common/errors';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { isWindows } from 'vs/base/common/platform';\nimport { joinPath } from 'vs/base/common/resources';\nimport * as semver from 'vs/base/common/semver/semver';\nimport { URI } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { Promises as FSPromises } from 'vs/base/node/pfs';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IExtensionGalleryService, IGalleryExtension, InstallOperation, TargetPlatform } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionIdentifierWithVersion, groupByExtension } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { IFileService, IFileStatWithMetadata } from 'vs/platform/files/common/files';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nconst ExtensionIdVersionRegex = /^([^.]+\\..+)-(\\d+\\.\\d+\\.\\d+)$/;\n\nexport class ExtensionsDownloader extends Disposable {\n\n\tprivate readonly extensionsDownloadDir: URI;\n\tprivate readonly cache: number;\n\tprivate readonly cleanUpPromise: Promise<void>;\n\n\tconstructor(\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IExtensionGalleryService private readonly extensionGalleryService: IExtensionGalleryService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t\tsuper();\n\t\tthis.extensionsDownloadDir = URI.file(environmentService.extensionsDownloadPath);\n\t\tthis.cache = 20; // Cache 20 downloads\n\t\tthis.cleanUpPromise = this.cleanUp();\n\t}\n\n\tasync downloadExtension(extension: IGalleryExtension, operation: InstallOperation): Promise<URI> {\n\t\tawait this.cleanUpPromise;\n\t\tconst vsixName = this.getName(extension);\n\t\tconst location = joinPath(this.extensionsDownloadDir, vsixName);\n\n\t\t// Download only if vsix does not exist\n\t\tif (!await this.fileService.exists(location)) {\n\t\t\t// Download to temporary location first only if vsix does not exist\n\t\t\tconst tempLocation = joinPath(this.extensionsDownloadDir, `.${generateUuid()}`);\n\t\t\tif (!await this.fileService.exists(tempLocation)) {\n\t\t\t\tawait this.extensionGalleryService.download(extension, tempLocation, operation);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t// Rename temp location to original\n\t\t\t\tawait this.rename(tempLocation, location, Date.now() + (2 * 60 * 1000) /* Retry for 2 minutes */);\n\t\t\t} catch (error) {\n\t\t\t\ttry {\n\t\t\t\t\tawait this.fileService.del(tempLocation);\n\t\t\t\t} catch (e) { /* ignore */ }\n\t\t\t\tif (error.code === 'ENOTEMPTY') {\n\t\t\t\t\tthis.logService.info(`Rename failed because vsix was downloaded by another source. So ignoring renaming.`, extension.identifier.id);\n\t\t\t\t} else {\n\t\t\t\t\tthis.logService.info(`Rename failed because of ${getErrorMessage(error)}. Deleted the vsix from downloaded location`, tempLocation.path);\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\treturn location;\n\t}\n\n\tasync delete(location: URI): Promise<void> {\n\t\tawait this.cleanUpPromise;\n\t\tawait this.fileService.del(location);\n\t}\n\n\tprivate async rename(from: URI, to: URI, retryUntil: number): Promise<void> {\n\t\ttry {\n\t\t\tawait FSPromises.rename(from.fsPath, to.fsPath);\n\t\t} catch (error) {\n\t\t\tif (isWindows && error && error.code === 'EPERM' && Date.now() < retryUntil) {\n\t\t\t\tthis.logService.info(`Failed renaming ${from} to ${to} with 'EPERM' error. Trying again...`);\n\t\t\t\treturn this.rename(from, to, retryUntil);\n\t\t\t}\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate async cleanUp(): Promise<void> {\n\t\ttry {\n\t\t\tif (!(await this.fileService.exists(this.extensionsDownloadDir))) {\n\t\t\t\tthis.logService.trace('Extension VSIX downlads cache dir does not exist');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst folderStat = await this.fileService.resolve(this.extensionsDownloadDir, { resolveMetadata: true });\n\t\t\tif (folderStat.children) {\n\t\t\t\tconst toDelete: URI[] = [];\n\t\t\t\tconst all: [ExtensionIdentifierWithVersion, IFileStatWithMetadata][] = [];\n\t\t\t\tfor (const stat of folderStat.children) {\n\t\t\t\t\tconst extension = this.parse(stat.name);\n\t\t\t\t\tif (extension) {\n\t\t\t\t\t\tall.push([extension, stat]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst byExtension = groupByExtension(all, ([extension]) => extension);\n\t\t\t\tconst distinct: IFileStatWithMetadata[] = [];\n\t\t\t\tfor (const p of byExtension) {\n\t\t\t\t\tp.sort((a, b) => semver.rcompare(a[0].version, b[0].version));\n\t\t\t\t\ttoDelete.push(...p.slice(1).map(e => e[1].resource)); // Delete outdated extensions\n\t\t\t\t\tdistinct.push(p[0][1]);\n\t\t\t\t}\n\t\t\t\tdistinct.sort((a, b) => a.mtime - b.mtime); // sort by modified time\n\t\t\t\ttoDelete.push(...distinct.slice(0, Math.max(0, distinct.length - this.cache)).map(s => s.resource)); // Retain minimum cacheSize and delete the rest\n\t\t\t\tawait Promises.settled(toDelete.map(resource => {\n\t\t\t\t\tthis.logService.trace('Deleting vsix from cache', resource.path);\n\t\t\t\t\treturn this.fileService.del(resource);\n\t\t\t\t}));\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t}\n\t}\n\n\tprivate getName(extension: IGalleryExtension): string {\n\t\treturn this.cache ? `${new ExtensionIdentifierWithVersion(extension.identifier, extension.version).key().toLowerCase()}${extension.properties.targetPlatform !== TargetPlatform.UNDEFINED ? `-${extension.properties.targetPlatform}` : ''}` : generateUuid();\n\t}\n\n\tprivate parse(name: string): ExtensionIdentifierWithVersion | null {\n\t\tconst matches = ExtensionIdVersionRegex.exec(name);\n\t\treturn matches && matches[1] && matches[2] ? new ExtensionIdentifierWithVersion({ id: matches[1] }, matches[2]) : null;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { join } from 'vs/base/common/path';\nimport * as pfs from 'vs/base/node/pfs';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { DidUninstallExtensionEvent, IExtensionManagementService, InstallExtensionResult } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { MANIFEST_CACHE_FOLDER, USER_MANIFEST_CACHE_FILE } from 'vs/platform/extensions/common/extensions';\n\nexport class ExtensionsManifestCache extends Disposable {\n\n\tprivate extensionsManifestCache = join(this.environmentService.userDataPath, MANIFEST_CACHE_FOLDER, USER_MANIFEST_CACHE_FILE);\n\n\tconstructor(\n\t\tprivate readonly environmentService: INativeEnvironmentService,\n\t\textensionsManagementService: IExtensionManagementService\n\t) {\n\t\tsuper();\n\t\tthis._register(extensionsManagementService.onDidInstallExtensions(e => this.onDidInstallExtensions(e)));\n\t\tthis._register(extensionsManagementService.onDidUninstallExtension(e => this.onDidUnInstallExtension(e)));\n\t}\n\n\tprivate onDidInstallExtensions(results: readonly InstallExtensionResult[]): void {\n\t\tif (results.some(r => !!r.local)) {\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tprivate onDidUnInstallExtension(e: DidUninstallExtensionEvent): void {\n\t\tif (!e.error) {\n\t\t\tthis.invalidate();\n\t\t}\n\t}\n\n\tinvalidate(): void {\n\t\tpfs.Promises.rm(this.extensionsManifestCache, pfs.RimRafMode.MOVE).then(() => { }, () => { });\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createHash } from 'crypto';\nimport { distinct, equals } from 'vs/base/common/arrays';\nimport { Queue } from 'vs/base/common/async';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport { join } from 'vs/base/common/path';\nimport { Promises } from 'vs/base/node/pfs';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IExtensionIdentifier, IExtensionManagementService, ILocalExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { ILocalizationsService, isValidLocalization } from 'vs/platform/localizations/common/localizations';\nimport { ILogService } from 'vs/platform/log/common/log';\n\ninterface ILanguagePack {\n\thash: string;\n\textensions: {\n\t\textensionIdentifier: IExtensionIdentifier;\n\t\tversion: string;\n\t}[];\n\ttranslations: { [id: string]: string };\n}\n\nexport class LocalizationsService extends Disposable implements ILocalizationsService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly cache: LanguagePacksCache;\n\n\tconstructor(\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.cache = this._register(new LanguagePacksCache(environmentService, logService));\n\t\tthis.extensionManagementService.registerParticipant({\n\t\t\tpostInstall: async (extension: ILocalExtension): Promise<void> => {\n\t\t\t\treturn this.postInstallExtension(extension);\n\t\t\t},\n\t\t\tpostUninstall: async (extension: ILocalExtension): Promise<void> => {\n\t\t\t\treturn this.postUninstallExtension(extension);\n\t\t\t}\n\t\t});\n\t}\n\n\tasync getLanguageIds(): Promise<string[]> {\n\t\tconst languagePacks = await this.cache.getLanguagePacks();\n\t\t// Contributed languages are those installed via extension packs, so does not include English\n\t\tconst languages = ['en', ...Object.keys(languagePacks)];\n\t\treturn distinct(languages);\n\t}\n\n\tprivate async postInstallExtension(extension: ILocalExtension): Promise<void> {\n\t\tif (extension && extension.manifest && extension.manifest.contributes && extension.manifest.contributes.localizations && extension.manifest.contributes.localizations.length) {\n\t\t\tthis.logService.info('Adding language packs from the extension', extension.identifier.id);\n\t\t\tawait this.update();\n\t\t}\n\t}\n\n\tprivate async postUninstallExtension(extension: ILocalExtension): Promise<void> {\n\t\tconst languagePacks = await this.cache.getLanguagePacks();\n\t\tif (Object.keys(languagePacks).some(language => languagePacks[language] && languagePacks[language].extensions.some(e => areSameExtensions(e.extensionIdentifier, extension.identifier)))) {\n\t\t\tthis.logService.info('Removing language packs from the extension', extension.identifier.id);\n\t\t\tawait this.update();\n\t\t}\n\t}\n\n\tasync update(): Promise<boolean> {\n\t\tconst [current, installed] = await Promise.all([this.cache.getLanguagePacks(), this.extensionManagementService.getInstalled()]);\n\t\tconst updated = await this.cache.update(installed);\n\t\treturn !equals(Object.keys(current), Object.keys(updated));\n\t}\n}\n\nclass LanguagePacksCache extends Disposable {\n\n\tprivate languagePacks: { [language: string]: ILanguagePack } = {};\n\tprivate languagePacksFilePath: string;\n\tprivate languagePacksFileLimiter: Queue<any>;\n\tprivate initializedCache: boolean | undefined;\n\n\tconstructor(\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.languagePacksFilePath = join(environmentService.userDataPath, 'languagepacks.json');\n\t\tthis.languagePacksFileLimiter = new Queue();\n\t}\n\n\tgetLanguagePacks(): Promise<{ [language: string]: ILanguagePack }> {\n\t\t// if queue is not empty, fetch from disk\n\t\tif (this.languagePacksFileLimiter.size || !this.initializedCache) {\n\t\t\treturn this.withLanguagePacks()\n\t\t\t\t.then(() => this.languagePacks);\n\t\t}\n\t\treturn Promise.resolve(this.languagePacks);\n\t}\n\n\tupdate(extensions: ILocalExtension[]): Promise<{ [language: string]: ILanguagePack }> {\n\t\treturn this.withLanguagePacks(languagePacks => {\n\t\t\tObject.keys(languagePacks).forEach(language => delete languagePacks[language]);\n\t\t\tthis.createLanguagePacksFromExtensions(languagePacks, ...extensions);\n\t\t}).then(() => this.languagePacks);\n\t}\n\n\tprivate createLanguagePacksFromExtensions(languagePacks: { [language: string]: ILanguagePack }, ...extensions: ILocalExtension[]): void {\n\t\tfor (const extension of extensions) {\n\t\t\tif (extension && extension.manifest && extension.manifest.contributes && extension.manifest.contributes.localizations && extension.manifest.contributes.localizations.length) {\n\t\t\t\tthis.createLanguagePacksFromExtension(languagePacks, extension);\n\t\t\t}\n\t\t}\n\t\tObject.keys(languagePacks).forEach(languageId => this.updateHash(languagePacks[languageId]));\n\t}\n\n\tprivate createLanguagePacksFromExtension(languagePacks: { [language: string]: ILanguagePack }, extension: ILocalExtension): void {\n\t\tconst extensionIdentifier = extension.identifier;\n\t\tconst localizations = extension.manifest.contributes && extension.manifest.contributes.localizations ? extension.manifest.contributes.localizations : [];\n\t\tfor (const localizationContribution of localizations) {\n\t\t\tif (extension.location.scheme === Schemas.file && isValidLocalization(localizationContribution)) {\n\t\t\t\tlet languagePack = languagePacks[localizationContribution.languageId];\n\t\t\t\tif (!languagePack) {\n\t\t\t\t\tlanguagePack = { hash: '', extensions: [], translations: {} };\n\t\t\t\t\tlanguagePacks[localizationContribution.languageId] = languagePack;\n\t\t\t\t}\n\t\t\t\tlet extensionInLanguagePack = languagePack.extensions.filter(e => areSameExtensions(e.extensionIdentifier, extensionIdentifier))[0];\n\t\t\t\tif (extensionInLanguagePack) {\n\t\t\t\t\textensionInLanguagePack.version = extension.manifest.version;\n\t\t\t\t} else {\n\t\t\t\t\tlanguagePack.extensions.push({ extensionIdentifier, version: extension.manifest.version });\n\t\t\t\t}\n\t\t\t\tfor (const translation of localizationContribution.translations) {\n\t\t\t\t\tlanguagePack.translations[translation.id] = join(extension.location.fsPath, translation.path);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateHash(languagePack: ILanguagePack): void {\n\t\tif (languagePack) {\n\t\t\tconst md5 = createHash('md5');\n\t\t\tfor (const extension of languagePack.extensions) {\n\t\t\t\tmd5.update(extension.extensionIdentifier.uuid || extension.extensionIdentifier.id).update(extension.version);\n\t\t\t}\n\t\t\tlanguagePack.hash = md5.digest('hex');\n\t\t}\n\t}\n\n\tprivate withLanguagePacks<T>(fn: (languagePacks: { [language: string]: ILanguagePack }) => T | null = () => null): Promise<T> {\n\t\treturn this.languagePacksFileLimiter.queue(() => {\n\t\t\tlet result: T | null = null;\n\t\t\treturn Promises.readFile(this.languagePacksFilePath, 'utf8')\n\t\t\t\t.then(undefined, err => err.code === 'ENOENT' ? Promise.resolve('{}') : Promise.reject(err))\n\t\t\t\t.then<{ [language: string]: ILanguagePack }>(raw => { try { return JSON.parse(raw); } catch (e) { return {}; } })\n\t\t\t\t.then(languagePacks => { result = fn(languagePacks); return languagePacks; })\n\t\t\t\t.then(languagePacks => {\n\t\t\t\t\tfor (const language of Object.keys(languagePacks)) {\n\t\t\t\t\t\tif (!languagePacks[language]) {\n\t\t\t\t\t\t\tdelete languagePacks[language];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.languagePacks = languagePacks;\n\t\t\t\t\tthis.initializedCache = true;\n\t\t\t\t\tconst raw = JSON.stringify(this.languagePacks);\n\t\t\t\t\tthis.logService.debug('Writing language packs', raw);\n\t\t\t\t\treturn Promises.writeFile(this.languagePacksFilePath, raw);\n\t\t\t\t})\n\t\t\t\t.then(() => result, error => this.logService.error(error));\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IAddress } from 'vs/platform/remote/common/remoteAgentConnection';\n\nexport const ISharedProcessTunnelService = createDecorator<ISharedProcessTunnelService>('sharedProcessTunnelService');\n\nexport const ipcSharedProcessTunnelChannelName = 'sharedProcessTunnel';\n\nexport interface ISharedProcessTunnel {\n\ttunnelLocalPort: number | undefined;\n\tlocalAddress: string;\n}\n\n/**\n * A service that creates tunnels on the shared process\n */\nexport interface ISharedProcessTunnelService {\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Create a tunnel.\n\t */\n\tcreateTunnel(): Promise<{ id: string }>;\n\t/**\n\t * Start a previously created tunnel.\n\t * Can only be called once per created tunnel.\n\t */\n\tstartTunnel(authority: string, id: string, tunnelRemoteHost: string, tunnelRemotePort: number, tunnelLocalPort: number | undefined, elevateIfNeeded: boolean | undefined): Promise<ISharedProcessTunnel>;\n\t/**\n\t * Set the remote address info for a previously created tunnel.\n\t * Should be called as often as the resolver resolves.\n\t */\n\tsetAddress(id: string, address: IAddress): Promise<void>;\n\t/**\n\t * Destroy a previously created tunnel.\n\t */\n\tdestroyTunnel(id: string): Promise<void>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { isWindows, OperatingSystem } from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IAddressProvider } from 'vs/platform/remote/common/remoteAgentConnection';\n\nexport const ITunnelService = createDecorator<ITunnelService>('tunnelService');\nexport const ISharedTunnelsService = createDecorator<ISharedTunnelsService>('sharedTunnelsService');\n\nexport interface RemoteTunnel {\n\treadonly tunnelRemotePort: number;\n\treadonly tunnelRemoteHost: string;\n\treadonly tunnelLocalPort?: number;\n\treadonly localAddress: string;\n\treadonly privacy: string;\n\treadonly protocol?: string;\n\tdispose(silent?: boolean): Promise<void>;\n}\n\nexport interface TunnelOptions {\n\tremoteAddress: { port: number, host: string; };\n\tlocalAddressPort?: number;\n\tlabel?: string;\n\tpublic?: boolean;\n\tprivacy?: string;\n\tprotocol?: string;\n}\n\nexport enum TunnelProtocol {\n\tHttp = 'http',\n\tHttps = 'https'\n}\n\nexport enum TunnelPrivacyId {\n\tConstantPrivate = 'constantPrivate', // private, and changing is unsupported\n\tPrivate = 'private',\n\tPublic = 'public'\n}\n\nexport interface TunnelCreationOptions {\n\televationRequired?: boolean;\n}\n\nexport interface TunnelPrivacy {\n\tthemeIcon: string;\n\tid: string;\n\tlabel: string;\n}\n\nexport interface TunnelProviderFeatures {\n\televation: boolean;\n\t/**\n\t * @deprecated\n\t */\n\tpublic: boolean;\n\tprivacyOptions: TunnelPrivacy[];\n}\n\nexport interface ITunnelProvider {\n\tforwardPort(tunnelOptions: TunnelOptions, tunnelCreationOptions: TunnelCreationOptions): Promise<RemoteTunnel | undefined> | undefined;\n}\n\nexport enum ProvidedOnAutoForward {\n\tNotify = 1,\n\tOpenBrowser = 2,\n\tOpenPreview = 3,\n\tSilent = 4,\n\tIgnore = 5,\n\tOpenBrowserOnce = 6\n}\n\nexport interface ProvidedPortAttributes {\n\tport: number;\n\tautoForwardAction: ProvidedOnAutoForward;\n}\n\nexport interface PortAttributesProvider {\n\tprovidePortAttributes(ports: number[], pid: number | undefined, commandLine: string | undefined, token: CancellationToken): Promise<ProvidedPortAttributes[]>;\n}\n\nexport interface ITunnel {\n\tremoteAddress: { port: number, host: string };\n\n\t/**\n\t * The complete local address(ex. localhost:1234)\n\t */\n\tlocalAddress: string;\n\n\t/**\n\t * @deprecated Use privacy instead\n\t */\n\tpublic?: boolean;\n\n\tprivacy?: string;\n\n\tprotocol?: string;\n\n\t/**\n\t * Implementers of Tunnel should fire onDidDispose when dispose is called.\n\t */\n\tonDidDispose: Event<void>;\n\n\tdispose(): Promise<void> | void;\n}\n\nexport interface ISharedTunnelsService {\n\treadonly _serviceBrand: undefined;\n\n\topenTunnel(authority: string, addressProvider: IAddressProvider | undefined, remoteHost: string | undefined, remotePort: number, localPort?: number, elevateIfNeeded?: boolean, privacy?: string, protocol?: string): Promise<RemoteTunnel | undefined> | undefined;\n}\n\nexport interface ITunnelService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly tunnels: Promise<readonly RemoteTunnel[]>;\n\treadonly canChangePrivacy: boolean;\n\treadonly privacyOptions: TunnelPrivacy[];\n\treadonly onTunnelOpened: Event<RemoteTunnel>;\n\treadonly onTunnelClosed: Event<{ host: string, port: number; }>;\n\treadonly canElevate: boolean;\n\treadonly hasTunnelProvider: boolean;\n\treadonly onAddedTunnelProvider: Event<void>;\n\n\tcanTunnel(uri: URI): boolean;\n\topenTunnel(addressProvider: IAddressProvider | undefined, remoteHost: string | undefined, remotePort: number, localPort?: number, elevateIfNeeded?: boolean, privacy?: string, protocol?: string): Promise<RemoteTunnel | undefined> | undefined;\n\tcloseTunnel(remoteHost: string, remotePort: number): Promise<void>;\n\tsetTunnelProvider(provider: ITunnelProvider | undefined, features: TunnelProviderFeatures): IDisposable;\n}\n\nexport function extractLocalHostUriMetaDataForPortMapping(uri: URI): { address: string, port: number; } | undefined {\n\tif (uri.scheme !== 'http' && uri.scheme !== 'https') {\n\t\treturn undefined;\n\t}\n\tconst localhostMatch = /^(localhost|127\\.0\\.0\\.1|0\\.0\\.0\\.0):(\\d+)$/.exec(uri.authority);\n\tif (!localhostMatch) {\n\t\treturn undefined;\n\t}\n\treturn {\n\t\taddress: localhostMatch[1],\n\t\tport: +localhostMatch[2],\n\t};\n}\n\nexport const LOCALHOST_ADDRESSES = ['localhost', '127.0.0.1', '0:0:0:0:0:0:0:1', '::1'];\nexport function isLocalhost(host: string): boolean {\n\treturn LOCALHOST_ADDRESSES.indexOf(host) >= 0;\n}\n\nexport const ALL_INTERFACES_ADDRESSES = ['0.0.0.0', '0:0:0:0:0:0:0:0', '::'];\nexport function isAllInterfaces(host: string): boolean {\n\treturn ALL_INTERFACES_ADDRESSES.indexOf(host) >= 0;\n}\n\nexport function isPortPrivileged(port: number, os?: OperatingSystem): boolean {\n\tif (os) {\n\t\treturn os !== OperatingSystem.Windows && (port < 1024);\n\t} else {\n\t\treturn !isWindows && (port < 1024);\n\t}\n}\n\nexport abstract class AbstractTunnelService implements ITunnelService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _onTunnelOpened: Emitter<RemoteTunnel> = new Emitter();\n\tpublic onTunnelOpened: Event<RemoteTunnel> = this._onTunnelOpened.event;\n\tprivate _onTunnelClosed: Emitter<{ host: string, port: number; }> = new Emitter();\n\tpublic onTunnelClosed: Event<{ host: string, port: number; }> = this._onTunnelClosed.event;\n\tprivate _onAddedTunnelProvider: Emitter<void> = new Emitter();\n\tpublic onAddedTunnelProvider: Event<void> = this._onAddedTunnelProvider.event;\n\tprotected readonly _tunnels = new Map</*host*/ string, Map</* port */ number, { refcount: number, readonly value: Promise<RemoteTunnel | undefined>; }>>();\n\tprotected _tunnelProvider: ITunnelProvider | undefined;\n\tprotected _canElevate: boolean = false;\n\tprivate _privacyOptions: TunnelPrivacy[] = [];\n\n\tpublic constructor(\n\t\t@ILogService protected readonly logService: ILogService\n\t) { }\n\n\tget hasTunnelProvider(): boolean {\n\t\treturn !!this._tunnelProvider;\n\t}\n\n\tsetTunnelProvider(provider: ITunnelProvider | undefined, features: TunnelProviderFeatures): IDisposable {\n\t\tthis._tunnelProvider = provider;\n\t\tif (!provider) {\n\t\t\t// clear features\n\t\t\tthis._canElevate = false;\n\t\t\tthis._privacyOptions = [];\n\t\t\tthis._onAddedTunnelProvider.fire();\n\t\t\treturn {\n\t\t\t\tdispose: () => { }\n\t\t\t};\n\t\t}\n\t\tthis._canElevate = features.elevation;\n\t\tthis._privacyOptions = features.privacyOptions;\n\t\tthis._onAddedTunnelProvider.fire();\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tthis._tunnelProvider = undefined;\n\t\t\t\tthis._canElevate = false;\n\t\t\t\tthis._privacyOptions = [];\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic get canElevate(): boolean {\n\t\treturn this._canElevate;\n\t}\n\n\tpublic get canChangePrivacy() {\n\t\treturn this._privacyOptions.length > 0;\n\t}\n\n\tpublic get privacyOptions() {\n\t\treturn this._privacyOptions;\n\t}\n\n\tpublic get tunnels(): Promise<readonly RemoteTunnel[]> {\n\t\treturn this.getTunnels();\n\t}\n\n\tprivate async getTunnels(): Promise<readonly RemoteTunnel[]> {\n\t\tconst tunnels: RemoteTunnel[] = [];\n\t\tconst tunnelArray = Array.from(this._tunnels.values());\n\t\tfor (let portMap of tunnelArray) {\n\t\t\tconst portArray = Array.from(portMap.values());\n\t\t\tfor (let x of portArray) {\n\t\t\t\tconst tunnelValue = await x.value;\n\t\t\t\tif (tunnelValue) {\n\t\t\t\t\ttunnels.push(tunnelValue);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn tunnels;\n\t}\n\n\tasync dispose(): Promise<void> {\n\t\tfor (const portMap of this._tunnels.values()) {\n\t\t\tfor (const { value } of portMap.values()) {\n\t\t\t\tawait value.then(tunnel => tunnel?.dispose());\n\t\t\t}\n\t\t\tportMap.clear();\n\t\t}\n\t\tthis._tunnels.clear();\n\t}\n\n\topenTunnel(addressProvider: IAddressProvider | undefined, remoteHost: string | undefined, remotePort: number, localPort?: number, elevateIfNeeded: boolean = false, privacy: string = TunnelPrivacyId.Private, protocol?: string): Promise<RemoteTunnel | undefined> | undefined {\n\t\tthis.logService.trace(`ForwardedPorts: (TunnelService) openTunnel request for ${remoteHost}:${remotePort} on local port ${localPort}.`);\n\t\tif (!addressProvider) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!remoteHost) {\n\t\t\tremoteHost = 'localhost';\n\t\t}\n\n\t\tconst resolvedTunnel = this.retainOrCreateTunnel(addressProvider, remoteHost, remotePort, localPort, elevateIfNeeded, privacy, protocol);\n\t\tif (!resolvedTunnel) {\n\t\t\tthis.logService.trace(`ForwardedPorts: (TunnelService) Tunnel was not created.`);\n\t\t\treturn resolvedTunnel;\n\t\t}\n\n\t\treturn resolvedTunnel.then(tunnel => {\n\t\t\tif (!tunnel) {\n\t\t\t\tthis.logService.trace('ForwardedPorts: (TunnelService) New tunnel is undefined.');\n\t\t\t\tthis.removeEmptyTunnelFromMap(remoteHost!, remotePort);\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tthis.logService.trace('ForwardedPorts: (TunnelService) New tunnel established.');\n\t\t\tconst newTunnel = this.makeTunnel(tunnel);\n\t\t\tif (tunnel.tunnelRemoteHost !== remoteHost || tunnel.tunnelRemotePort !== remotePort) {\n\t\t\t\tthis.logService.warn('ForwardedPorts: (TunnelService) Created tunnel does not match requirements of requested tunnel. Host or port mismatch.');\n\t\t\t}\n\t\t\tthis._onTunnelOpened.fire(newTunnel);\n\t\t\treturn newTunnel;\n\t\t});\n\t}\n\n\tprivate makeTunnel(tunnel: RemoteTunnel): RemoteTunnel {\n\t\treturn {\n\t\t\ttunnelRemotePort: tunnel.tunnelRemotePort,\n\t\t\ttunnelRemoteHost: tunnel.tunnelRemoteHost,\n\t\t\ttunnelLocalPort: tunnel.tunnelLocalPort,\n\t\t\tlocalAddress: tunnel.localAddress,\n\t\t\tprivacy: tunnel.privacy,\n\t\t\tprotocol: tunnel.protocol,\n\t\t\tdispose: async () => {\n\t\t\t\tthis.logService.trace(`ForwardedPorts: (TunnelService) dispose request for ${tunnel.tunnelRemoteHost}:${tunnel.tunnelRemotePort} `);\n\t\t\t\tconst existingHost = this._tunnels.get(tunnel.tunnelRemoteHost);\n\t\t\t\tif (existingHost) {\n\t\t\t\t\tconst existing = existingHost.get(tunnel.tunnelRemotePort);\n\t\t\t\t\tif (existing) {\n\t\t\t\t\t\texisting.refcount--;\n\t\t\t\t\t\tawait this.tryDisposeTunnel(tunnel.tunnelRemoteHost, tunnel.tunnelRemotePort, existing);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tprivate async tryDisposeTunnel(remoteHost: string, remotePort: number, tunnel: { refcount: number, readonly value: Promise<RemoteTunnel | undefined> }): Promise<void> {\n\t\tif (tunnel.refcount <= 0) {\n\t\t\tthis.logService.trace(`ForwardedPorts: (TunnelService) Tunnel is being disposed ${remoteHost}:${remotePort}.`);\n\t\t\tconst disposePromise: Promise<void> = tunnel.value.then(async (tunnel) => {\n\t\t\t\tif (tunnel) {\n\t\t\t\t\tawait tunnel.dispose(true);\n\t\t\t\t\tthis._onTunnelClosed.fire({ host: tunnel.tunnelRemoteHost, port: tunnel.tunnelRemotePort });\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (this._tunnels.has(remoteHost)) {\n\t\t\t\tthis._tunnels.get(remoteHost)!.delete(remotePort);\n\t\t\t}\n\t\t\treturn disposePromise;\n\t\t}\n\t}\n\n\tasync closeTunnel(remoteHost: string, remotePort: number): Promise<void> {\n\t\tthis.logService.trace(`ForwardedPorts: (TunnelService) close request for ${remoteHost}:${remotePort} `);\n\t\tconst portMap = this._tunnels.get(remoteHost);\n\t\tif (portMap && portMap.has(remotePort)) {\n\t\t\tconst value = portMap.get(remotePort)!;\n\t\t\tvalue.refcount = 0;\n\t\t\tawait this.tryDisposeTunnel(remoteHost, remotePort, value);\n\t\t}\n\t}\n\n\tprotected addTunnelToMap(remoteHost: string, remotePort: number, tunnel: Promise<RemoteTunnel | undefined>) {\n\t\tif (!this._tunnels.has(remoteHost)) {\n\t\t\tthis._tunnels.set(remoteHost, new Map());\n\t\t}\n\t\tthis._tunnels.get(remoteHost)!.set(remotePort, { refcount: 1, value: tunnel });\n\t}\n\n\tprivate async removeEmptyTunnelFromMap(remoteHost: string, remotePort: number) {\n\t\tconst hostMap = this._tunnels.get(remoteHost);\n\t\tif (hostMap) {\n\t\t\tconst tunnel = hostMap.get(remotePort);\n\t\t\tconst tunnelResult = await tunnel;\n\t\t\tif (!tunnelResult) {\n\t\t\t\thostMap.delete(remotePort);\n\t\t\t}\n\t\t\tif (hostMap.size === 0) {\n\t\t\t\tthis._tunnels.delete(remoteHost);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected getTunnelFromMap(remoteHost: string, remotePort: number): { refcount: number, readonly value: Promise<RemoteTunnel | undefined> } | undefined {\n\t\tlet hosts = [remoteHost];\n\t\t// Order matters. We want the original host to be first.\n\t\tif (isLocalhost(remoteHost)) {\n\t\t\thosts.push(...LOCALHOST_ADDRESSES);\n\t\t\t// For localhost, we add the all interfaces hosts because if the tunnel is already available at all interfaces,\n\t\t\t// then of course it is available at localhost.\n\t\t\thosts.push(...ALL_INTERFACES_ADDRESSES);\n\t\t} else if (isAllInterfaces(remoteHost)) {\n\t\t\thosts.push(...ALL_INTERFACES_ADDRESSES);\n\t\t}\n\n\t\tconst existingPortMaps = hosts.map(host => this._tunnels.get(host));\n\t\tfor (const map of existingPortMaps) {\n\t\t\tconst existingTunnel = map?.get(remotePort);\n\t\t\tif (existingTunnel) {\n\t\t\t\treturn existingTunnel;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tcanTunnel(uri: URI): boolean {\n\t\treturn !!extractLocalHostUriMetaDataForPortMapping(uri);\n\t}\n\n\tprotected abstract retainOrCreateTunnel(addressProvider: IAddressProvider, remoteHost: string, remotePort: number, localPort: number | undefined, elevateIfNeeded: boolean, privacy: string, protocol?: string): Promise<RemoteTunnel | undefined> | undefined;\n\n\tprotected createWithProvider(tunnelProvider: ITunnelProvider, remoteHost: string, remotePort: number, localPort: number | undefined, elevateIfNeeded: boolean, privacy: string, protocol?: string): Promise<RemoteTunnel | undefined> | undefined {\n\t\tthis.logService.trace(`ForwardedPorts: (TunnelService) Creating tunnel with provider ${remoteHost}:${remotePort} on local port ${localPort}.`);\n\n\t\tconst preferredLocalPort = localPort === undefined ? remotePort : localPort;\n\t\tconst creationInfo = { elevationRequired: elevateIfNeeded ? isPortPrivileged(preferredLocalPort) : false };\n\t\tconst tunnelOptions: TunnelOptions = { remoteAddress: { host: remoteHost, port: remotePort }, localAddressPort: localPort, privacy, public: privacy !== TunnelPrivacyId.Private, protocol };\n\t\tconst tunnel = tunnelProvider.forwardPort(tunnelOptions, creationInfo);\n\t\tthis.logService.trace('ForwardedPorts: (TunnelService) Tunnel created by provider.');\n\t\tif (tunnel) {\n\t\t\tthis.addTunnelToMap(remoteHost, remotePort, tunnel);\n\t\t}\n\t\treturn tunnel;\n\t}\n}\n\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ISharedProcessTunnel, ISharedProcessTunnelService } from 'vs/platform/remote/common/sharedProcessTunnelService';\nimport { ISharedTunnelsService, RemoteTunnel } from 'vs/platform/remote/common/tunnel';\nimport { IAddress, IAddressProvider } from 'vs/platform/remote/common/remoteAgentConnection';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { canceled } from 'vs/base/common/errors';\nimport { DeferredPromise } from 'vs/base/common/async';\n\nclass TunnelData extends Disposable implements IAddressProvider {\n\n\tprivate _address: IAddress | null;\n\tprivate _addressPromise: DeferredPromise<IAddress> | null;\n\n\tconstructor() {\n\t\tsuper();\n\t\tthis._address = null;\n\t\tthis._addressPromise = null;\n\t}\n\n\tasync getAddress(): Promise<IAddress> {\n\t\tif (this._address) {\n\t\t\t// address is resolved\n\t\t\treturn this._address;\n\t\t}\n\t\tif (!this._addressPromise) {\n\t\t\tthis._addressPromise = new DeferredPromise<IAddress>();\n\t\t}\n\t\treturn this._addressPromise.p;\n\t}\n\n\tsetAddress(address: IAddress): void {\n\t\tthis._address = address;\n\t\tif (this._addressPromise) {\n\t\t\tthis._addressPromise.complete(address);\n\t\t\tthis._addressPromise = null;\n\t\t}\n\t}\n\n\tsetTunnel(tunnel: RemoteTunnel): void {\n\t\tthis._register(tunnel);\n\t}\n}\n\nexport class SharedProcessTunnelService extends Disposable implements ISharedProcessTunnelService {\n\t_serviceBrand: undefined;\n\n\tprivate static _lastId = 0;\n\n\tprivate readonly _tunnels: Map<string, TunnelData> = new Map<string, TunnelData>();\n\tprivate readonly _disposedTunnels: Set<string> = new Set<string>();\n\n\tconstructor(\n\t\t@ISharedTunnelsService private readonly _tunnelService: ISharedTunnelsService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t) {\n\t\tsuper();\n\t}\n\n\tpublic override dispose(): void {\n\t\tsuper.dispose();\n\t\tthis._tunnels.forEach((tunnel) => tunnel.dispose());\n\t}\n\n\tasync createTunnel(): Promise<{ id: string }> {\n\t\tconst id = String(++SharedProcessTunnelService._lastId);\n\t\treturn { id };\n\t}\n\n\tasync startTunnel(authority: string, id: string, tunnelRemoteHost: string, tunnelRemotePort: number, tunnelLocalPort: number | undefined, elevateIfNeeded: boolean | undefined): Promise<ISharedProcessTunnel> {\n\t\tconst tunnelData = new TunnelData();\n\n\t\tconst tunnel = await Promise.resolve(this._tunnelService.openTunnel(authority, tunnelData, tunnelRemoteHost, tunnelRemotePort, tunnelLocalPort, elevateIfNeeded));\n\t\tif (!tunnel) {\n\t\t\tthis._logService.info(`[SharedProcessTunnelService] Could not create a tunnel to ${tunnelRemoteHost}:${tunnelRemotePort} (remote).`);\n\t\t\ttunnelData.dispose();\n\t\t\tthrow new Error(`Could not create tunnel`);\n\t\t}\n\n\t\tif (this._disposedTunnels.has(id)) {\n\t\t\t// This tunnel was disposed in the meantime\n\t\t\tthis._disposedTunnels.delete(id);\n\t\t\ttunnelData.dispose();\n\t\t\tawait tunnel.dispose();\n\t\t\tthrow canceled();\n\t\t}\n\n\t\ttunnelData.setTunnel(tunnel);\n\t\tthis._tunnels.set(id, tunnelData);\n\n\t\tthis._logService.info(`[SharedProcessTunnelService] Created tunnel ${id}: ${tunnel.localAddress} (local) to ${tunnelRemoteHost}:${tunnelRemotePort} (remote).`);\n\t\tconst result: ISharedProcessTunnel = {\n\t\t\ttunnelLocalPort: tunnel.tunnelLocalPort,\n\t\t\tlocalAddress: tunnel.localAddress\n\t\t};\n\t\treturn result;\n\t}\n\n\tasync setAddress(id: string, address: IAddress): Promise<void> {\n\t\tconst tunnel = this._tunnels.get(id);\n\t\tif (!tunnel) {\n\t\t\treturn;\n\t\t}\n\t\ttunnel.setAddress(address);\n\t}\n\n\tasync destroyTunnel(id: string): Promise<void> {\n\t\tconst tunnel = this._tunnels.get(id);\n\t\tif (tunnel) {\n\t\t\tthis._logService.info(`[SharedProcessTunnelService] Disposing tunnel ${id}.`);\n\t\t\tthis._tunnels.delete(id);\n\t\t\tawait tunnel.dispose();\n\t\t\treturn;\n\t\t}\n\n\t\t// Looks like this tunnel is still starting, mark the id as disposed\n\t\tthis._disposedTunnels.add(id);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { request } from 'vs/base/parts/request/browser/request';\nimport { IRequestContext, IRequestOptions } from 'vs/base/parts/request/common/request';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IRequestService } from 'vs/platform/request/common/request';\n\n/**\n * This service exposes the `request` API, while using the global\n * or configured proxy settings.\n */\nexport class RequestService implements IRequestService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t}\n\n\trequest(options: IRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\t\tthis.logService.trace('RequestService#request', options.url);\n\n\t\tif (!options.proxyAuthorization) {\n\t\t\toptions.proxyAuthorization = this.configurationService.getValue<string>('http.proxyAuthorization');\n\t\t}\n\n\t\treturn request(options, token);\n\t}\n\n\tasync resolveProxy(url: string): Promise<string | undefined> {\n\t\treturn undefined; // not implemented in the web\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { streamToBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IRequestContext, IRequestOptions } from 'vs/base/parts/request/common/request';\nimport { localize } from 'vs/nls';\nimport { ConfigurationScope, Extensions, IConfigurationNode, IConfigurationRegistry } from 'vs/platform/configuration/common/configurationRegistry';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Registry } from 'vs/platform/registry/common/platform';\n\nexport const IRequestService = createDecorator<IRequestService>('requestService');\n\nexport interface IRequestService {\n\treadonly _serviceBrand: undefined;\n\n\trequest(options: IRequestOptions, token: CancellationToken): Promise<IRequestContext>;\n\n\tresolveProxy(url: string): Promise<string | undefined>;\n}\n\nexport function isSuccess(context: IRequestContext): boolean {\n\treturn (context.res.statusCode && context.res.statusCode >= 200 && context.res.statusCode < 300) || context.res.statusCode === 1223;\n}\n\nfunction hasNoContent(context: IRequestContext): boolean {\n\treturn context.res.statusCode === 204;\n}\n\nexport async function asText(context: IRequestContext): Promise<string | null> {\n\tif (!isSuccess(context)) {\n\t\tthrow new Error('Server returned ' + context.res.statusCode);\n\t}\n\tif (hasNoContent(context)) {\n\t\treturn null;\n\t}\n\tconst buffer = await streamToBuffer(context.stream);\n\treturn buffer.toString();\n}\n\nexport async function asJson<T = {}>(context: IRequestContext): Promise<T | null> {\n\tif (!isSuccess(context)) {\n\t\tthrow new Error('Server returned ' + context.res.statusCode);\n\t}\n\tif (hasNoContent(context)) {\n\t\treturn null;\n\t}\n\tconst buffer = await streamToBuffer(context.stream);\n\tconst str = buffer.toString();\n\ttry {\n\t\treturn JSON.parse(str);\n\t} catch (err) {\n\t\terr.message += ':\\n' + str;\n\t\tthrow err;\n\t}\n}\n\n\nexport interface IHTTPConfiguration {\n\thttp?: {\n\t\tproxy?: string;\n\t\tproxyStrictSSL?: boolean;\n\t\tproxyAuthorization?: string;\n\t};\n}\n\nexport function updateProxyConfigurationsScope(scope: ConfigurationScope): void {\n\tregisterProxyConfigurations(scope);\n}\n\nlet proxyConfiguration: IConfigurationNode | undefined;\nfunction registerProxyConfigurations(scope: ConfigurationScope): void {\n\tconst configurationRegistry = Registry.as<IConfigurationRegistry>(Extensions.Configuration);\n\tconst oldProxyConfiguration = proxyConfiguration;\n\tproxyConfiguration = {\n\t\tid: 'http',\n\t\torder: 15,\n\t\ttitle: localize('httpConfigurationTitle', \"HTTP\"),\n\t\ttype: 'object',\n\t\tscope,\n\t\tproperties: {\n\t\t\t'http.proxy': {\n\t\t\t\ttype: 'string',\n\t\t\t\tpattern: '^https?://([^:]*(:[^@]*)?@)?([^:]+|\\\\[[:0-9a-fA-F]+\\\\])(:\\\\d+)?/?$|^$',\n\t\t\t\tmarkdownDescription: localize('proxy', \"The proxy setting to use. If not set, will be inherited from the `http_proxy` and `https_proxy` environment variables.\"),\n\t\t\t\trestricted: true\n\t\t\t},\n\t\t\t'http.proxyStrictSSL': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdescription: localize('strictSSL', \"Controls whether the proxy server certificate should be verified against the list of supplied CAs.\"),\n\t\t\t\trestricted: true\n\t\t\t},\n\t\t\t'http.proxyAuthorization': {\n\t\t\t\ttype: ['null', 'string'],\n\t\t\t\tdefault: null,\n\t\t\t\tmarkdownDescription: localize('proxyAuthorization', \"The value to send as the `Proxy-Authorization` header for every network request.\"),\n\t\t\t\trestricted: true\n\t\t\t},\n\t\t\t'http.proxySupport': {\n\t\t\t\ttype: 'string',\n\t\t\t\tenum: ['off', 'on', 'fallback', 'override'],\n\t\t\t\tenumDescriptions: [\n\t\t\t\t\tlocalize('proxySupportOff', \"Disable proxy support for extensions.\"),\n\t\t\t\t\tlocalize('proxySupportOn', \"Enable proxy support for extensions.\"),\n\t\t\t\t\tlocalize('proxySupportFallback', \"Enable proxy support for extensions, fall back to request options, when no proxy found.\"),\n\t\t\t\t\tlocalize('proxySupportOverride', \"Enable proxy support for extensions, override request options.\"),\n\t\t\t\t],\n\t\t\t\tdefault: 'override',\n\t\t\t\tdescription: localize('proxySupport', \"Use the proxy support for extensions.\"),\n\t\t\t\trestricted: true\n\t\t\t},\n\t\t\t'http.systemCertificates': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdescription: localize('systemCertificates', \"Controls whether CA certificates should be loaded from the OS. (On Windows and macOS, a reload of the window is required after turning this off.)\"),\n\t\t\t\trestricted: true\n\t\t\t}\n\t\t}\n\t};\n\tconfigurationRegistry.updateConfigurations({ add: [proxyConfiguration], remove: oldProxyConfiguration ? [oldProxyConfiguration] : [] });\n}\n\nregisterProxyConfigurations(ConfigurationScope.MACHINE);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Schemas } from 'vs/base/common/network';\nimport { URI } from 'vs/base/common/uri';\nimport { IDownloadService } from 'vs/platform/download/common/download';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { asText, IRequestService } from 'vs/platform/request/common/request';\n\nexport class DownloadService implements IDownloadService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IRequestService private readonly requestService: IRequestService,\n\t\t@IFileService private readonly fileService: IFileService\n\t) { }\n\n\tasync download(resource: URI, target: URI, cancellationToken: CancellationToken = CancellationToken.None): Promise<void> {\n\t\tif (resource.scheme === Schemas.file || resource.scheme === Schemas.vscodeRemote) {\n\t\t\t// Intentionally only support this for file|remote<->file|remote scenarios\n\t\t\tawait this.fileService.copy(resource, target);\n\t\t\treturn;\n\t\t}\n\t\tconst options = { type: 'GET', url: resource.toString() };\n\t\tconst context = await this.requestService.request(options, cancellationToken);\n\t\tif (context.res.statusCode === 200) {\n\t\t\tawait this.fileService.writeFile(target, context.stream);\n\t\t} else {\n\t\t\tconst message = await asText(context);\n\t\t\tthrow new Error(`Expected 200, got back ${context.res.statusCode} instead.\\n\\n${message}`);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isNonEmptyArray } from 'vs/base/common/arrays';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { forEach } from 'vs/base/common/collections';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IConfigBasedExtensionTip as IRawConfigBasedExtensionTip } from 'vs/base/common/product';\nimport { joinPath } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { getDomainsOfRemotes } from 'vs/platform/extensionManagement/common/configRemotes';\nimport { IConfigBasedExtensionTip, IExecutableBasedExtensionTip, IExtensionTipsService, IWorkspaceTips } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { asJson, IRequestService } from 'vs/platform/request/common/request';\n\nexport class ExtensionTipsService extends Disposable implements IExtensionTipsService {\n\n\t_serviceBrand: any;\n\n\tprivate readonly allConfigBasedTips: Map<string, IRawConfigBasedExtensionTip> = new Map<string, IRawConfigBasedExtensionTip>();\n\n\tconstructor(\n\t\t@IFileService protected readonly fileService: IFileService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IRequestService private readonly requestService: IRequestService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t\tsuper();\n\t\tif (this.productService.configBasedExtensionTips) {\n\t\t\tforEach(this.productService.configBasedExtensionTips, ({ value }) => this.allConfigBasedTips.set(value.configPath, value));\n\t\t}\n\t}\n\n\tgetConfigBasedTips(folder: URI): Promise<IConfigBasedExtensionTip[]> {\n\t\treturn this.getValidConfigBasedTips(folder);\n\t}\n\n\tgetAllWorkspacesTips(): Promise<IWorkspaceTips[]> {\n\t\treturn this.fetchWorkspacesTips();\n\t}\n\n\tasync getImportantExecutableBasedTips(): Promise<IExecutableBasedExtensionTip[]> {\n\t\treturn [];\n\t}\n\n\tasync getOtherExecutableBasedTips(): Promise<IExecutableBasedExtensionTip[]> {\n\t\treturn [];\n\t}\n\n\tprivate async getValidConfigBasedTips(folder: URI): Promise<IConfigBasedExtensionTip[]> {\n\t\tconst result: IConfigBasedExtensionTip[] = [];\n\t\tfor (const [configPath, tip] of this.allConfigBasedTips) {\n\t\t\tif (tip.configScheme && tip.configScheme !== folder.scheme) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tconst content = await this.fileService.readFile(joinPath(folder, configPath));\n\t\t\t\tconst recommendationByRemote: Map<string, IConfigBasedExtensionTip> = new Map<string, IConfigBasedExtensionTip>();\n\t\t\t\tforEach(tip.recommendations, ({ key, value }) => {\n\t\t\t\t\tif (isNonEmptyArray(value.remotes)) {\n\t\t\t\t\t\tfor (const remote of value.remotes) {\n\t\t\t\t\t\t\trecommendationByRemote.set(remote, {\n\t\t\t\t\t\t\t\textensionId: key,\n\t\t\t\t\t\t\t\textensionName: value.name,\n\t\t\t\t\t\t\t\tconfigName: tip.configName,\n\t\t\t\t\t\t\t\timportant: !!value.important,\n\t\t\t\t\t\t\t\tisExtensionPack: !!value.isExtensionPack\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\textensionId: key,\n\t\t\t\t\t\t\textensionName: value.name,\n\t\t\t\t\t\t\tconfigName: tip.configName,\n\t\t\t\t\t\t\timportant: !!value.important,\n\t\t\t\t\t\t\tisExtensionPack: !!value.isExtensionPack\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tconst domains = getDomainsOfRemotes(content.value.toString(), [...recommendationByRemote.keys()]);\n\t\t\t\tfor (const domain of domains) {\n\t\t\t\t\tconst remote = recommendationByRemote.get(domain);\n\t\t\t\t\tif (remote) {\n\t\t\t\t\t\tresult.push(remote);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (error) { /* Ignore */ }\n\t\t}\n\t\treturn result;\n\t}\n\n\n\tprivate async fetchWorkspacesTips(): Promise<IWorkspaceTips[]> {\n\t\tif (!this.productService.extensionsGallery?.recommendationsUrl) {\n\t\t\treturn [];\n\t\t}\n\t\ttry {\n\t\t\tconst context = await this.requestService.request({ type: 'GET', url: this.productService.extensionsGallery?.recommendationsUrl }, CancellationToken.None);\n\t\t\tif (context.res.statusCode !== 200) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\tconst result = await asJson<{ workspaceRecommendations?: IWorkspaceTips[] }>(context);\n\t\t\tif (!result) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\treturn result.workspaceRecommendations || [];\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t\treturn [];\n\t\t}\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { generateUuid, isUUID } from 'vs/base/common/uuid';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\n\nexport async function getServiceMachineId(environmentService: IEnvironmentService, fileService: IFileService, storageService: {\n\tget: (key: string, scope: StorageScope, fallbackValue?: string | undefined) => string | undefined,\n\tstore: (key: string, value: string, scope: StorageScope, target: StorageTarget) => void\n} | undefined): Promise<string> {\n\tlet uuid: string | null = storageService ? storageService.get('storage.serviceMachineId', StorageScope.GLOBAL) || null : null;\n\tif (uuid) {\n\t\treturn uuid;\n\t}\n\ttry {\n\t\tconst contents = await fileService.readFile(environmentService.serviceMachineIdResource);\n\t\tconst value = contents.value.toString();\n\t\tuuid = isUUID(value) ? value : null;\n\t} catch (e) {\n\t\tuuid = null;\n\t}\n\n\tif (!uuid) {\n\t\tuuid = generateUuid();\n\t\ttry {\n\t\t\tawait fileService.writeFile(environmentService.serviceMachineIdResource, VSBuffer.fromString(uuid));\n\t\t} catch (error) {\n\t\t\t//noop\n\t\t}\n\t}\n\tif (storageService) {\n\t\tstorageService.store('storage.serviceMachineId', uuid, StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t}\n\treturn uuid;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { hash as hashObject } from 'vs/base/common/hash';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport interface ISharedProcessWorkerProcess {\n\n\t/**\n\t * The module to load as child process into the worker.\n\t */\n\tmoduleId: string;\n\n\t/**\n\t * The type of the process appears in the arguments of the\n\t * forked process to identify it easier.\n\t */\n\ttype: string;\n}\n\nexport interface IOnDidTerminateSharedProcessWorkerProcess {\n\n\t/**\n\t * More information around how the shared process worker\n\t * process terminated. Will be `undefined` in case the\n\t * worker process was terminated normally via APIs\n\t * and will be defined in case the worker process\n\t * terminated on its own, either unexpectedly or\n\t * because it finished.\n\t */\n\treason?: ISharedProcessWorkerProcessExit;\n}\n\nexport interface ISharedProcessWorkerProcessExit {\n\n\t/**\n\t * The shared process worker process exit code if known.\n\t */\n\tcode?: number;\n\n\t/**\n\t * The shared process worker process exit signal if known.\n\t */\n\tsignal?: string;\n}\n\nexport interface ISharedProcessWorkerConfiguration {\n\n\t/**\n\t * Configuration specific to the process to fork.\n\t */\n\tprocess: ISharedProcessWorkerProcess;\n\n\t/**\n\t * Configuration specific for how to respond with the\n\t * communication message port to the receiver window.\n\t */\n\treply: {\n\t\twindowId: number;\n\t\tchannel?: string;\n\t\tnonce?: string;\n\t};\n}\n\n/**\n * Converts the process configuration into a hash to\n * identify processes of the same kind by taking those\n * components that make the process and reply unique.\n */\nexport function hash(configuration: ISharedProcessWorkerConfiguration): number {\n\treturn hashObject({\n\t\tmoduleId: configuration.process.moduleId,\n\t\twindowId: configuration.reply.windowId\n\t});\n}\n\nexport const ISharedProcessWorkerService = createDecorator<ISharedProcessWorkerService>('sharedProcessWorkerService');\n\nexport const ipcSharedProcessWorkerChannelName = 'sharedProcessWorker';\n\nexport interface ISharedProcessWorkerService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Will fork a new process with the provided module identifier off the shared\n\t * process and establishes a message port connection to that process. The other\n\t * end of the message port connection will be sent back to the calling window\n\t * as identified by the `reply` configuration.\n\t *\n\t * Requires the forked process to be AMD module that uses our IPC channel framework\n\t * to respond to the provided `channelName` as a server.\n\t *\n\t * The process will be automatically terminated when the receiver window closes,\n\t * crashes or loads/reloads. It can also explicitly be terminated by calling\n\t * `disposeWorker`.\n\t *\n\t * Note on affinity: repeated calls to `createWorker` with the same `moduleId` from\n\t * the same window will result in any previous forked process to get terminated.\n\t * In other words, it is not possible, nor intended to create multiple workers of\n\t * the same process from one window. The intent of these workers is to be reused per\n\t * window and the communication channel allows to dynamically update the processes\n\t * after the fact.\n\t *\n\t * @returns a promise that resolves then the worker terminated. Provides more details\n\t * about the termination that can be used to figure out if the termination was unexpected\n\t * or not and whether the worker needs to be restarted.\n\t */\n\tcreateWorker(configuration: ISharedProcessWorkerConfiguration): Promise<IOnDidTerminateSharedProcessWorkerProcess>;\n\n\t/**\n\t * Terminates the process for the provided configuration if any.\n\t */\n\tdisposeWorker(configuration: ISharedProcessWorkerConfiguration): Promise<void>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ISharedProcessWorkerConfiguration } from 'vs/platform/sharedProcess/common/sharedProcessWorkerService';\n\nexport enum SharedProcessWorkerMessages {\n\n\t// Process\n\tSpawn = 'vscode:shared-process->shared-process-worker=spawn',\n\tTerminate = 'vscode:shared-process->shared-process-worker=terminate',\n\tSelfTerminated = 'vscode:shared-process-worker->shared-process=selfTerminated',\n\n\t// Lifecycle\n\tReady = 'vscode:shared-process-worker->shared-process=ready',\n\tAck = 'vscode:shared-process-worker->shared-process=ack',\n\n\t// Diagnostics\n\tTrace = 'vscode:shared-process-worker->shared-process=trace',\n\tInfo = 'vscode:shared-process-worker->shared-process=info',\n\tWarn = 'vscode:shared-process-worker->shared-process=warn',\n\tError = 'vscode:shared-process-worker->shared-process=error'\n}\n\nexport interface ISharedProcessWorkerEnvironment {\n\n\t/**\n\t * Full absolute path to our `bootstrap-fork.js` file.\n\t */\n\tbootstrapPath: string;\n\n\t/**\n\t * Extra environment to use for the process to fork.\n\t */\n\tenv: NodeJS.ProcessEnv;\n}\n\ninterface IBaseMessage {\n\tid: string;\n\tnonce?: string;\n}\n\nexport interface ISharedProcessToWorkerMessage extends IBaseMessage {\n\tconfiguration: ISharedProcessWorkerConfiguration;\n\tenvironment?: ISharedProcessWorkerEnvironment;\n}\n\nexport interface IWorkerToSharedProcessMessage extends IBaseMessage {\n\tconfiguration?: ISharedProcessWorkerConfiguration;\n\tmessage?: string;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CrashReporterStartOptions, ipcRenderer } from 'electron';\nimport { join } from 'path';\nimport { DeferredPromise } from 'vs/base/common/async';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { FileAccess } from 'vs/base/common/network';\nimport { isLinux } from 'vs/base/common/platform';\nimport { generateUuid, isUUID } from 'vs/base/common/uuid';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { hash, IOnDidTerminateSharedProcessWorkerProcess, ISharedProcessWorkerConfiguration, ISharedProcessWorkerProcessExit, ISharedProcessWorkerService } from 'vs/platform/sharedProcess/common/sharedProcessWorkerService';\nimport { SharedProcessWorkerMessages, ISharedProcessToWorkerMessage, IWorkerToSharedProcessMessage, ISharedProcessWorkerEnvironment } from 'vs/platform/sharedProcess/electron-browser/sharedProcessWorker';\n\nexport class SharedProcessWorkerService implements ISharedProcessWorkerService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly workers = new Map<string /* process module ID */, Promise<SharedProcessWebWorker>>();\n\n\tprivate readonly processeDisposables = new Map<number /* process configuration hash */, (reason?: ISharedProcessWorkerProcessExit) => void>();\n\tprivate readonly processResolvers = new Map<number /* process configuration hash */, (process: IOnDidTerminateSharedProcessWorkerProcess) => void>();\n\n\tconstructor(\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@INativeEnvironmentService private readonly environmentService: INativeEnvironmentService\n\t) {\n\t}\n\n\tasync createWorker(configuration: ISharedProcessWorkerConfiguration): Promise<IOnDidTerminateSharedProcessWorkerProcess> {\n\t\tconst workerLogId = `window: ${configuration.reply.windowId}, moduleId: ${configuration.process.moduleId}`;\n\t\tthis.logService.trace(`SharedProcess: createWorker (${workerLogId})`);\n\n\t\t// Ensure to dispose any existing process for config\n\t\tconst configurationHash = hash(configuration);\n\t\tif (this.processeDisposables.has(configurationHash)) {\n\t\t\tthis.logService.warn(`SharedProcess: createWorker found an existing worker that will be terminated (${workerLogId})`);\n\n\t\t\tthis.doDisposeWorker(configuration);\n\t\t}\n\n\t\tconst cts = new CancellationTokenSource();\n\n\t\tlet worker: SharedProcessWebWorker | undefined = undefined;\n\t\tlet windowPort: MessagePort | undefined = undefined;\n\t\tlet workerPort: MessagePort | undefined = undefined;\n\n\t\t// Store as process for termination support\n\t\tthis.processeDisposables.set(configurationHash, (reason?: ISharedProcessWorkerProcessExit) => {\n\n\t\t\t// Signal to token\n\t\t\tcts.dispose(true);\n\n\t\t\t// Terminate process\n\t\t\tworker?.terminate(configuration, CancellationToken.None /* we want to deliver this message */);\n\n\t\t\t// Close ports\n\t\t\twindowPort?.close();\n\t\t\tworkerPort?.close();\n\n\t\t\t// Remove from processes\n\t\t\tthis.processeDisposables.delete(configurationHash);\n\n\t\t\t// Release process resolvers if any\n\t\t\tconst processResolver = this.processResolvers.get(configurationHash);\n\t\t\tif (processResolver) {\n\t\t\t\tthis.processResolvers.delete(configurationHash);\n\t\t\t\tprocessResolver({ reason });\n\t\t\t}\n\t\t});\n\n\t\t// Acquire a worker for the configuration\n\t\tworker = await this.getOrCreateWebWorker(configuration);\n\n\t\t// Keep a promise that will resolve in the future when the\n\t\t// underlying process terminates.\n\t\tconst onDidTerminate = new Promise<IOnDidTerminateSharedProcessWorkerProcess>(resolve => {\n\t\t\tthis.processResolvers.set(configurationHash, resolve);\n\t\t});\n\n\t\tif (cts.token.isCancellationRequested) {\n\t\t\treturn onDidTerminate;\n\t\t}\n\n\t\t// Create a `MessageChannel` with 2 ports:\n\t\t// `windowPort`: send back to the requesting window\n\t\t// `workerPort`: send into a new worker to use\n\t\tconst { port1, port2 } = new MessageChannel();\n\t\twindowPort = port1;\n\t\tworkerPort = port2;\n\n\t\t// Spawn in worker and pass over port\n\t\tawait worker.spawn(configuration, workerPort, cts.token);\n\n\t\tif (cts.token.isCancellationRequested) {\n\t\t\treturn onDidTerminate;\n\t\t}\n\n\t\t// We cannot just send the `MessagePort` through our protocol back\n\t\t// because the port can only be sent via `postMessage`. So we need\n\t\t// to send it through the main process back to the window.\n\t\tthis.logService.trace(`SharedProcess: createWorker sending message port back to window (${workerLogId})`);\n\t\tipcRenderer.postMessage('vscode:relaySharedProcessWorkerMessageChannel', configuration, [windowPort]);\n\n\t\treturn onDidTerminate;\n\t}\n\n\tprivate getOrCreateWebWorker(configuration: ISharedProcessWorkerConfiguration): Promise<SharedProcessWebWorker> {\n\n\t\t// keep 1 web-worker per process module id to reduce\n\t\t// the overall number of web workers while still\n\t\t// keeping workers for separate processes around.\n\t\tlet webWorkerPromise = this.workers.get(configuration.process.moduleId);\n\n\t\t// create a new web worker if this is the first time\n\t\t// for the given process\n\t\tif (!webWorkerPromise) {\n\t\t\tthis.logService.trace(`SharedProcess: creating new web worker (${configuration.process.moduleId})`);\n\n\t\t\tconst sharedProcessWorker = new SharedProcessWebWorker(configuration.process.type, this.logService, this.productService, this.environmentService);\n\t\t\twebWorkerPromise = sharedProcessWorker.init();\n\n\t\t\t// Make sure to run through our normal `disposeWorker` call\n\t\t\t// when the process terminates by itself.\n\t\t\tsharedProcessWorker.onDidProcessSelfTerminate(({ configuration, reason }) => {\n\t\t\t\tthis.doDisposeWorker(configuration, reason);\n\t\t\t});\n\n\t\t\tthis.workers.set(configuration.process.moduleId, webWorkerPromise);\n\t\t}\n\n\t\treturn webWorkerPromise;\n\t}\n\n\tasync disposeWorker(configuration: ISharedProcessWorkerConfiguration): Promise<void> {\n\t\treturn this.doDisposeWorker(configuration);\n\t}\n\n\tprivate doDisposeWorker(configuration: ISharedProcessWorkerConfiguration, reason?: ISharedProcessWorkerProcessExit): void {\n\t\tconst processDisposable = this.processeDisposables.get(hash(configuration));\n\t\tif (processDisposable) {\n\t\t\tthis.logService.trace(`SharedProcess: disposeWorker (window: ${configuration.reply.windowId}, moduleId: ${configuration.process.moduleId})`);\n\n\t\t\tprocessDisposable(reason);\n\t\t}\n\t}\n}\n\nclass SharedProcessWebWorker extends Disposable {\n\n\tprivate readonly _onDidProcessSelfTerminate = this._register(new Emitter<{ configuration: ISharedProcessWorkerConfiguration, reason: ISharedProcessWorkerProcessExit }>());\n\treadonly onDidProcessSelfTerminate = this._onDidProcessSelfTerminate.event;\n\n\tprivate readonly workerReady: Promise<Worker> = this.doInit();\n\tprivate readonly mapMessageNonceToPendingMessageResolve = new Map<string, () => void>();\n\n\tconstructor(\n\t\tprivate readonly type: string,\n\t\tprivate readonly logService: ILogService,\n\t\tprivate readonly productService: IProductService,\n\t\tprivate readonly environmentService: INativeEnvironmentService\n\t) {\n\t\tsuper();\n\t}\n\n\tasync init(): Promise<SharedProcessWebWorker> {\n\t\tawait this.workerReady;\n\n\t\treturn this;\n\t}\n\n\tprivate doInit(): Promise<Worker> {\n\t\tconst readyPromise = new DeferredPromise<Worker>();\n\n\t\tconst worker = new Worker('../../../base/worker/workerMain.js', {\n\t\t\tname: `Shared Process Worker (${this.type})`\n\t\t});\n\n\t\tworker.onerror = event => {\n\t\t\tthis.logService.error(`SharedProcess: worker error (${this.type})`, event.message);\n\t\t};\n\n\t\tworker.onmessageerror = event => {\n\t\t\tthis.logService.error(`SharedProcess: worker message error (${this.type})`, event);\n\t\t};\n\n\t\tworker.onmessage = event => {\n\t\t\tconst { id, message, configuration, nonce } = event.data as IWorkerToSharedProcessMessage;\n\n\t\t\tswitch (id) {\n\n\t\t\t\t// Lifecycle: Ready\n\t\t\t\tcase SharedProcessWorkerMessages.Ready:\n\t\t\t\t\treadyPromise.complete(worker);\n\t\t\t\t\tbreak;\n\n\t\t\t\t// Lifecycle: Ack\n\t\t\t\tcase SharedProcessWorkerMessages.Ack:\n\t\t\t\t\tif (nonce) {\n\t\t\t\t\t\tconst messageAwaiter = this.mapMessageNonceToPendingMessageResolve.get(nonce);\n\t\t\t\t\t\tif (messageAwaiter) {\n\t\t\t\t\t\t\tthis.mapMessageNonceToPendingMessageResolve.delete(nonce);\n\t\t\t\t\t\t\tmessageAwaiter();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\t// Lifecycle: self termination\n\t\t\t\tcase SharedProcessWorkerMessages.SelfTerminated:\n\t\t\t\t\tif (configuration && message) {\n\t\t\t\t\t\tthis._onDidProcessSelfTerminate.fire({ configuration, reason: JSON.parse(message) });\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\t// Diagostics: trace\n\t\t\t\tcase SharedProcessWorkerMessages.Trace:\n\t\t\t\t\tthis.logService.trace(`SharedProcess (worker, ${this.type}):`, message);\n\t\t\t\t\tbreak;\n\n\t\t\t\t// Diagostics: info\n\t\t\t\tcase SharedProcessWorkerMessages.Info:\n\t\t\t\t\tif (message) {\n\t\t\t\t\t\tthis.logService.info(message); // take as is\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t\t// Diagostics: warn\n\t\t\t\tcase SharedProcessWorkerMessages.Warn:\n\t\t\t\t\tthis.logService.warn(`SharedProcess (worker, ${this.type}):`, message);\n\t\t\t\t\tbreak;\n\n\t\t\t\t// Diagnostics: error\n\t\t\t\tcase SharedProcessWorkerMessages.Error:\n\t\t\t\t\tthis.logService.error(`SharedProcess (worker, ${this.type}):`, message);\n\t\t\t\t\tbreak;\n\n\t\t\t\t// Any other message\n\t\t\t\tdefault:\n\t\t\t\t\tthis.logService.warn(`SharedProcess: unexpected worker message (${this.type})`, event);\n\t\t\t}\n\t\t};\n\n\t\t// First message triggers the load of the worker\n\t\tworker.postMessage('vs/platform/sharedProcess/electron-browser/sharedProcessWorkerMain');\n\n\t\treturn readyPromise.p;\n\t}\n\n\tprivate async send(message: ISharedProcessToWorkerMessage, token: CancellationToken, port?: MessagePort): Promise<void> {\n\t\tconst worker = await this.workerReady;\n\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn new Promise<void>(resolve => {\n\n\t\t\t// Store the awaiter for resolving when message\n\t\t\t// is received with the given nonce\n\t\t\tconst nonce = generateUuid();\n\t\t\tthis.mapMessageNonceToPendingMessageResolve.set(nonce, resolve);\n\n\t\t\t// Post message into worker\n\t\t\tconst workerMessage: ISharedProcessToWorkerMessage = { ...message, nonce };\n\t\t\tif (port) {\n\t\t\t\tworker.postMessage(workerMessage, [port]);\n\t\t\t} else {\n\t\t\t\tworker.postMessage(workerMessage);\n\t\t\t}\n\n\t\t\t// Release on cancellation if still pending\n\t\t\ttoken.onCancellationRequested(() => {\n\t\t\t\tif (this.mapMessageNonceToPendingMessageResolve.delete(nonce)) {\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tspawn(configuration: ISharedProcessWorkerConfiguration, port: MessagePort, token: CancellationToken): Promise<void> {\n\t\tconst workerMessage: ISharedProcessToWorkerMessage = {\n\t\t\tid: SharedProcessWorkerMessages.Spawn,\n\t\t\tconfiguration,\n\t\t\tenvironment: this.getSharedProcessWorkerEnvironment()\n\t\t};\n\n\t\treturn this.send(workerMessage, token, port);\n\t}\n\n\tprivate getSharedProcessWorkerEnvironment(): ISharedProcessWorkerEnvironment {\n\t\tconst sharedProcessWorkerEnvironment = {\n\t\t\tbootstrapPath: FileAccess.asFileUri('bootstrap-fork', require).fsPath,\n\t\t\tenv: Object.create(null)\n\t\t};\n\n\t\t// Crash reporter support\n\t\t// TODO@bpasero TODO@deepak1556 remove once we updated to Electron 15\n\t\tif (isLinux) {\n\t\t\tconst crashReporterStartOptions: CrashReporterStartOptions = {\n\t\t\t\tcompanyName: this.productService.crashReporter?.companyName || 'Microsoft',\n\t\t\t\tproductName: this.productService.crashReporter?.productName || this.productService.nameShort,\n\t\t\t\tsubmitURL: '',\n\t\t\t\tuploadToServer: false\n\t\t\t};\n\n\t\t\tconst crashReporterId = this.environmentService.args['crash-reporter-id']; // crashReporterId is set by the main process only when crash reporting is enabled by the user.\n\t\t\tconst appcenter = this.productService.appCenter;\n\t\t\tconst uploadCrashesToServer = !this.environmentService.args['crash-reporter-directory']; // only upload unless --crash-reporter-directory is provided\n\t\t\tif (uploadCrashesToServer && appcenter && crashReporterId && isUUID(crashReporterId)) {\n\t\t\t\tconst submitURL = appcenter[`linux-x64`];\n\t\t\t\tcrashReporterStartOptions.submitURL = submitURL.concat('&uid=', crashReporterId, '&iid=', crashReporterId, '&sid=', crashReporterId);\n\t\t\t\tcrashReporterStartOptions.uploadToServer = true;\n\t\t\t}\n\t\t\t// In the upload to server case, there is a bug in electron that creates client_id file in the current\n\t\t\t// working directory. Setting the env BREAKPAD_DUMP_LOCATION will force electron to create the file in that location,\n\t\t\t// For https://github.com/microsoft/vscode/issues/105743\n\t\t\tconst extHostCrashDirectory = this.environmentService.args['crash-reporter-directory'] || this.environmentService.userDataPath;\n\t\t\tsharedProcessWorkerEnvironment.env.BREAKPAD_DUMP_LOCATION = join(extHostCrashDirectory, this.type);\n\t\t\tsharedProcessWorkerEnvironment.env.VSCODE_CRASH_REPORTER_START_OPTIONS = JSON.stringify(crashReporterStartOptions);\n\t\t}\n\n\t\treturn sharedProcessWorkerEnvironment;\n\t}\n\n\tterminate(configuration: ISharedProcessWorkerConfiguration, token: CancellationToken): Promise<void> {\n\t\tconst workerMessage: ISharedProcessToWorkerMessage = {\n\t\t\tid: SharedProcessWorkerMessages.Terminate,\n\t\t\tconfiguration\n\t\t};\n\n\t\treturn this.send(workerMessage, token);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const SIGN_SERVICE_ID = 'signService';\nexport const ISignService = createDecorator<ISignService>(SIGN_SERVICE_ID);\n\nexport interface IMessage {\n\tid: string;\n\tdata: string;\n}\n\nexport interface ISignService {\n\treadonly _serviceBrand: undefined;\n\n\tcreateNewMessage(value: string): Promise<IMessage>;\n\tvalidate(message: IMessage, value: string): Promise<boolean>;\n\tsign(value: string): Promise<string>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IMessage, ISignService } from 'vs/platform/sign/common/sign';\n\ndeclare module vsda {\n\t// the signer is a native module that for historical reasons uses a lower case class name\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\texport class signer {\n\t\tsign(arg: string): string;\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\texport class validator {\n\t\tcreateNewMessage(arg: string): string;\n\t\tvalidate(arg: string): 'ok' | 'error';\n\t}\n}\n\nexport class SignService implements ISignService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate static _nextId = 1;\n\tprivate readonly validators = new Map<string, vsda.validator>();\n\n\tprivate vsda(): Promise<typeof vsda> {\n\t\treturn new Promise((resolve, reject) => require(['vsda'], resolve, reject));\n\t}\n\n\tasync createNewMessage(value: string): Promise<IMessage> {\n\t\ttry {\n\t\t\tconst vsda = await this.vsda();\n\t\t\tconst validator = new vsda.validator();\n\t\t\tif (validator) {\n\t\t\t\tconst id = String(SignService._nextId++);\n\t\t\t\tthis.validators.set(id, validator);\n\t\t\t\treturn {\n\t\t\t\t\tid: id,\n\t\t\t\t\tdata: validator.createNewMessage(value)\n\t\t\t\t};\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// ignore errors silently\n\t\t}\n\t\treturn { id: '', data: value };\n\t}\n\n\tasync validate(message: IMessage, value: string): Promise<boolean> {\n\t\tif (!message.id) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst validator = this.validators.get(message.id);\n\t\tif (!validator) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.validators.delete(message.id);\n\t\ttry {\n\t\t\treturn (validator.validate(value) === 'ok');\n\t\t} catch (e) {\n\t\t\t// ignore errors silently\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tasync sign(value: string): Promise<string> {\n\t\ttry {\n\t\t\tconst vsda = await this.vsda();\n\t\t\tconst signer = new vsda.signer();\n\t\t\tif (signer) {\n\t\t\t\treturn signer.sign(value);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// ignore errors silently\n\t\t}\n\t\treturn value;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Promises, RunOnceScheduler, runWhenIdle } from 'vs/base/common/async';\nimport { Emitter, Event, PauseableEmitter } from 'vs/base/common/event';\nimport { Disposable, dispose, MutableDisposable } from 'vs/base/common/lifecycle';\nimport { mark } from 'vs/base/common/performance';\nimport { isUndefinedOrNull } from 'vs/base/common/types';\nimport { InMemoryStorageDatabase, IStorage, Storage } from 'vs/base/parts/storage/common/storage';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IWorkspaceInitializationPayload } from 'vs/platform/workspaces/common/workspaces';\n\nexport const IS_NEW_KEY = '__$__isNewStorageMarker';\nconst TARGET_KEY = '__$__targetStorageMarker';\n\nexport const IStorageService = createDecorator<IStorageService>('storageService');\n\nexport enum WillSaveStateReason {\n\n\t/**\n\t * No specific reason to save state.\n\t */\n\tNONE,\n\n\t/**\n\t * A hint that the workbench is about to shutdown.\n\t */\n\tSHUTDOWN\n}\n\nexport interface IWillSaveStateEvent {\n\treason: WillSaveStateReason;\n}\n\nexport interface IStorageService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Emitted whenever data is updated or deleted.\n\t */\n\treadonly onDidChangeValue: Event<IStorageValueChangeEvent>;\n\n\t/**\n\t * Emitted whenever target of a storage entry changes.\n\t */\n\treadonly onDidChangeTarget: Event<IStorageTargetChangeEvent>;\n\n\t/**\n\t * Emitted when the storage is about to persist. This is the right time\n\t * to persist data to ensure it is stored before the application shuts\n\t * down.\n\t *\n\t * The will save state event allows to optionally ask for the reason of\n\t * saving the state, e.g. to find out if the state is saved due to a\n\t * shutdown.\n\t *\n\t * Note: this event may be fired many times, not only on shutdown to prevent\n\t * loss of state in situations where the shutdown is not sufficient to\n\t * persist the data properly.\n\t */\n\treadonly onWillSaveState: Event<IWillSaveStateEvent>;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided `defaultValue` if the element is `null` or `undefined`.\n\t *\n\t * @param scope allows to define the scope of the storage operation\n\t * to either the current workspace only or all workspaces.\n\t */\n\tget(key: string, scope: StorageScope, fallbackValue: string): string;\n\tget(key: string, scope: StorageScope, fallbackValue?: string): string | undefined;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided `defaultValue` if the element is `null` or `undefined`.\n\t * The element will be converted to a `boolean`.\n\t *\n\t * @param scope allows to define the scope of the storage operation\n\t * to either the current workspace only or all workspaces.\n\t */\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue: boolean): boolean;\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue?: boolean): boolean | undefined;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided `defaultValue` if the element is `null` or `undefined`.\n\t * The element will be converted to a `number` using `parseInt` with a\n\t * base of `10`.\n\t *\n\t * @param scope allows to define the scope of the storage operation\n\t * to either the current workspace only or all workspaces.\n\t */\n\tgetNumber(key: string, scope: StorageScope, fallbackValue: number): number;\n\tgetNumber(key: string, scope: StorageScope, fallbackValue?: number): number | undefined;\n\n\t/**\n\t * Store a value under the given key to storage. The value will be\n\t * converted to a `string`. Storing either `undefined` or `null` will\n\t * remove the entry under the key.\n\t *\n\t * @param scope allows to define the scope of the storage operation\n\t * to either the current workspace only or all workspaces.\n\t *\n\t * @param target allows to define the target of the storage operation\n\t * to either the current machine or user.\n\t */\n\tstore(key: string, value: string | boolean | number | undefined | null, scope: StorageScope, target: StorageTarget): void;\n\n\t/**\n\t * Delete an element stored under the provided key from storage.\n\t *\n\t * The scope argument allows to define the scope of the storage\n\t * operation to either the current workspace only or all workspaces.\n\t */\n\tremove(key: string, scope: StorageScope): void;\n\n\t/**\n\t * Returns all the keys used in the storage for the provided `scope`\n\t * and `target`.\n\t *\n\t * Note: this will NOT return all keys stored in the storage layer.\n\t * Some keys may not have an associated `StorageTarget` and thus\n\t * will be excluded from the results.\n\t *\n\t * @param scope allows to define the scope for the keys\n\t * to either the current workspace only or all workspaces.\n\t *\n\t * @param target allows to define the target for the keys\n\t * to either the current machine or user.\n\t */\n\tkeys(scope: StorageScope, target: StorageTarget): string[];\n\n\t/**\n\t * Log the contents of the storage to the console.\n\t */\n\tlogStorage(): void;\n\n\t/**\n\t * Migrate the storage contents to another workspace.\n\t */\n\tmigrate(toWorkspace: IWorkspaceInitializationPayload): Promise<void>;\n\n\t/**\n\t * Whether the storage for the given scope was created during this session or\n\t * existed before.\n\t */\n\tisNew(scope: StorageScope): boolean;\n\n\t/**\n\t * Allows to flush state, e.g. in cases where a shutdown is\n\t * imminent. This will send out the `onWillSaveState` to ask\n\t * everyone for latest state.\n\t *\n\t * @returns a `Promise` that can be awaited on when all updates\n\t * to the underlying storage have been flushed.\n\t */\n\tflush(reason?: WillSaveStateReason): Promise<void>;\n}\n\nexport const enum StorageScope {\n\n\t/**\n\t * The stored data will be scoped to all workspaces.\n\t */\n\tGLOBAL,\n\n\t/**\n\t * The stored data will be scoped to the current workspace.\n\t */\n\tWORKSPACE\n}\n\nexport const enum StorageTarget {\n\n\t/**\n\t * The stored data is user specific and applies across machines.\n\t */\n\tUSER,\n\n\t/**\n\t * The stored data is machine specific.\n\t */\n\tMACHINE\n}\n\nexport interface IStorageValueChangeEvent {\n\n\t/**\n\t * The scope for the storage entry that changed\n\t * or was removed.\n\t */\n\treadonly scope: StorageScope;\n\n\t/**\n\t * The `key` of the storage entry that was changed\n\t * or was removed.\n\t */\n\treadonly key: string;\n\n\t/**\n\t * The `target` can be `undefined` if a key is being\n\t * removed.\n\t */\n\treadonly target: StorageTarget | undefined;\n}\n\nexport interface IStorageTargetChangeEvent {\n\n\t/**\n\t * The scope for the target that changed. Listeners\n\t * should use `keys(scope, target)` to get an updated\n\t * list of keys for the given `scope` and `target`.\n\t */\n\treadonly scope: StorageScope;\n}\n\ninterface IKeyTargets {\n\t[key: string]: StorageTarget\n}\n\nexport interface IStorageServiceOptions {\n\tflushInterval: number;\n}\n\nexport abstract class AbstractStorageService extends Disposable implements IStorageService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate static DEFAULT_FLUSH_INTERVAL = 60 * 1000; // every minute\n\n\tprivate readonly _onDidChangeValue = this._register(new PauseableEmitter<IStorageValueChangeEvent>());\n\treadonly onDidChangeValue = this._onDidChangeValue.event;\n\n\tprivate readonly _onDidChangeTarget = this._register(new PauseableEmitter<IStorageTargetChangeEvent>());\n\treadonly onDidChangeTarget = this._onDidChangeTarget.event;\n\n\tprivate readonly _onWillSaveState = this._register(new Emitter<IWillSaveStateEvent>());\n\treadonly onWillSaveState = this._onWillSaveState.event;\n\n\tprivate initializationPromise: Promise<void> | undefined;\n\n\tprivate readonly flushWhenIdleScheduler = this._register(new RunOnceScheduler(() => this.doFlushWhenIdle(), this.options.flushInterval));\n\tprivate readonly runFlushWhenIdle = this._register(new MutableDisposable());\n\n\tconstructor(private options: IStorageServiceOptions = { flushInterval: AbstractStorageService.DEFAULT_FLUSH_INTERVAL }) {\n\t\tsuper();\n\t}\n\n\tprivate doFlushWhenIdle(): void {\n\t\tthis.runFlushWhenIdle.value = runWhenIdle(() => {\n\t\t\tif (this.shouldFlushWhenIdle()) {\n\t\t\t\tthis.flush();\n\t\t\t}\n\n\t\t\t// repeat\n\t\t\tthis.flushWhenIdleScheduler.schedule();\n\t\t});\n\t}\n\n\tprotected shouldFlushWhenIdle(): boolean {\n\t\treturn true;\n\t}\n\n\tprotected stopFlushWhenIdle(): void {\n\t\tdispose([this.runFlushWhenIdle, this.flushWhenIdleScheduler]);\n\t}\n\n\tinitialize(): Promise<void> {\n\t\tif (!this.initializationPromise) {\n\t\t\tthis.initializationPromise = (async () => {\n\n\t\t\t\t// Init all storage locations\n\t\t\t\tmark('code/willInitStorage');\n\t\t\t\ttry {\n\t\t\t\t\t// Ask subclasses to initialize storage\n\t\t\t\t\tawait this.doInitialize();\n\t\t\t\t} finally {\n\t\t\t\t\tmark('code/didInitStorage');\n\t\t\t\t}\n\n\t\t\t\t// On some OS we do not get enough time to persist state on shutdown (e.g. when\n\t\t\t\t// Windows restarts after applying updates). In other cases, VSCode might crash,\n\t\t\t\t// so we periodically save state to reduce the chance of loosing any state.\n\t\t\t\t// In the browser we do not have support for long running unload sequences. As such,\n\t\t\t\t// we cannot ask for saving state in that moment, because that would result in a\n\t\t\t\t// long running operation.\n\t\t\t\t// Instead, periodically ask customers to save save. The library will be clever enough\n\t\t\t\t// to only save state that has actually changed.\n\t\t\t\tthis.flushWhenIdleScheduler.schedule();\n\t\t\t})();\n\t\t}\n\n\t\treturn this.initializationPromise;\n\t}\n\n\tprotected emitDidChangeValue(scope: StorageScope, key: string): void {\n\n\t\t// Specially handle `TARGET_KEY`\n\t\tif (key === TARGET_KEY) {\n\n\t\t\t// Clear our cached version which is now out of date\n\t\t\tif (scope === StorageScope.GLOBAL) {\n\t\t\t\tthis._globalKeyTargets = undefined;\n\t\t\t} else if (scope === StorageScope.WORKSPACE) {\n\t\t\t\tthis._workspaceKeyTargets = undefined;\n\t\t\t}\n\n\t\t\t// Emit as `didChangeTarget` event\n\t\t\tthis._onDidChangeTarget.fire({ scope });\n\t\t}\n\n\t\t// Emit any other key to outside\n\t\telse {\n\t\t\tthis._onDidChangeValue.fire({ scope, key, target: this.getKeyTargets(scope)[key] });\n\t\t}\n\t}\n\n\tprotected emitWillSaveState(reason: WillSaveStateReason): void {\n\t\tthis._onWillSaveState.fire({ reason });\n\t}\n\n\tget(key: string, scope: StorageScope, fallbackValue: string): string;\n\tget(key: string, scope: StorageScope): string | undefined;\n\tget(key: string, scope: StorageScope, fallbackValue?: string): string | undefined {\n\t\treturn this.getStorage(scope)?.get(key, fallbackValue);\n\t}\n\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue: boolean): boolean;\n\tgetBoolean(key: string, scope: StorageScope): boolean | undefined;\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue?: boolean): boolean | undefined {\n\t\treturn this.getStorage(scope)?.getBoolean(key, fallbackValue);\n\t}\n\n\tgetNumber(key: string, scope: StorageScope, fallbackValue: number): number;\n\tgetNumber(key: string, scope: StorageScope): number | undefined;\n\tgetNumber(key: string, scope: StorageScope, fallbackValue?: number): number | undefined {\n\t\treturn this.getStorage(scope)?.getNumber(key, fallbackValue);\n\t}\n\n\tstore(key: string, value: string | boolean | number | undefined | null, scope: StorageScope, target: StorageTarget): void {\n\n\t\t// We remove the key for undefined/null values\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\tthis.remove(key, scope);\n\t\t\treturn;\n\t\t}\n\n\t\t// Update our datastructures but send events only after\n\t\tthis.withPausedEmitters(() => {\n\n\t\t\t// Update key-target map\n\t\t\tthis.updateKeyTarget(key, scope, target);\n\n\t\t\t// Store actual value\n\t\t\tthis.getStorage(scope)?.set(key, value);\n\t\t});\n\t}\n\n\tremove(key: string, scope: StorageScope): void {\n\n\t\t// Update our datastructures but send events only after\n\t\tthis.withPausedEmitters(() => {\n\n\t\t\t// Update key-target map\n\t\t\tthis.updateKeyTarget(key, scope, undefined);\n\n\t\t\t// Remove actual key\n\t\t\tthis.getStorage(scope)?.delete(key);\n\t\t});\n\t}\n\n\tprivate withPausedEmitters(fn: Function): void {\n\n\t\t// Pause emitters\n\t\tthis._onDidChangeValue.pause();\n\t\tthis._onDidChangeTarget.pause();\n\n\t\ttry {\n\t\t\tfn();\n\t\t} finally {\n\n\t\t\t// Resume emitters\n\t\t\tthis._onDidChangeValue.resume();\n\t\t\tthis._onDidChangeTarget.resume();\n\t\t}\n\t}\n\n\tkeys(scope: StorageScope, target: StorageTarget): string[] {\n\t\tconst keys: string[] = [];\n\n\t\tconst keyTargets = this.getKeyTargets(scope);\n\t\tfor (const key of Object.keys(keyTargets)) {\n\t\t\tconst keyTarget = keyTargets[key];\n\t\t\tif (keyTarget === target) {\n\t\t\t\tkeys.push(key);\n\t\t\t}\n\t\t}\n\n\t\treturn keys;\n\t}\n\n\tprivate updateKeyTarget(key: string, scope: StorageScope, target: StorageTarget | undefined): void {\n\n\t\t// Add\n\t\tconst keyTargets = this.getKeyTargets(scope);\n\t\tif (typeof target === 'number') {\n\t\t\tif (keyTargets[key] !== target) {\n\t\t\t\tkeyTargets[key] = target;\n\t\t\t\tthis.getStorage(scope)?.set(TARGET_KEY, JSON.stringify(keyTargets));\n\t\t\t}\n\t\t}\n\n\t\t// Remove\n\t\telse {\n\t\t\tif (typeof keyTargets[key] === 'number') {\n\t\t\t\tdelete keyTargets[key];\n\t\t\t\tthis.getStorage(scope)?.set(TARGET_KEY, JSON.stringify(keyTargets));\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _workspaceKeyTargets: IKeyTargets | undefined = undefined;\n\tprivate get workspaceKeyTargets(): IKeyTargets {\n\t\tif (!this._workspaceKeyTargets) {\n\t\t\tthis._workspaceKeyTargets = this.loadKeyTargets(StorageScope.WORKSPACE);\n\t\t}\n\n\t\treturn this._workspaceKeyTargets;\n\t}\n\n\tprivate _globalKeyTargets: IKeyTargets | undefined = undefined;\n\tprivate get globalKeyTargets(): IKeyTargets {\n\t\tif (!this._globalKeyTargets) {\n\t\t\tthis._globalKeyTargets = this.loadKeyTargets(StorageScope.GLOBAL);\n\t\t}\n\n\t\treturn this._globalKeyTargets;\n\t}\n\n\tprivate getKeyTargets(scope: StorageScope): IKeyTargets {\n\t\treturn scope === StorageScope.GLOBAL ? this.globalKeyTargets : this.workspaceKeyTargets;\n\t}\n\n\tprivate loadKeyTargets(scope: StorageScope): { [key: string]: StorageTarget } {\n\t\tconst keysRaw = this.get(TARGET_KEY, scope);\n\t\tif (keysRaw) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(keysRaw);\n\t\t\t} catch (error) {\n\t\t\t\t// Fail gracefully\n\t\t\t}\n\t\t}\n\n\t\treturn Object.create(null);\n\t}\n\n\tisNew(scope: StorageScope): boolean {\n\t\treturn this.getBoolean(IS_NEW_KEY, scope) === true;\n\t}\n\n\tasync flush(reason = WillSaveStateReason.NONE): Promise<void> {\n\n\t\t// Signal event to collect changes\n\t\tthis._onWillSaveState.fire({ reason });\n\n\t\tconst globalStorage = this.getStorage(StorageScope.GLOBAL);\n\t\tconst workspaceStorage = this.getStorage(StorageScope.WORKSPACE);\n\n\t\tswitch (reason) {\n\n\t\t\t// Unspecific reason: just wait when data is flushed\n\t\t\tcase WillSaveStateReason.NONE:\n\t\t\t\tawait Promises.settled([\n\t\t\t\t\tglobalStorage?.whenFlushed() ?? Promise.resolve(),\n\t\t\t\t\tworkspaceStorage?.whenFlushed() ?? Promise.resolve()\n\t\t\t\t]);\n\t\t\t\tbreak;\n\n\t\t\t// Shutdown: we want to flush as soon as possible\n\t\t\t// and not hit any delays that might be there\n\t\t\tcase WillSaveStateReason.SHUTDOWN:\n\t\t\t\tawait Promises.settled([\n\t\t\t\t\tglobalStorage?.flush(0) ?? Promise.resolve(),\n\t\t\t\t\tworkspaceStorage?.flush(0) ?? Promise.resolve()\n\t\t\t\t]);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tasync logStorage(): Promise<void> {\n\t\tconst globalItems = this.getStorage(StorageScope.GLOBAL)?.items ?? new Map<string, string>();\n\t\tconst workspaceItems = this.getStorage(StorageScope.WORKSPACE)?.items ?? new Map<string, string>();\n\n\t\treturn logStorage(\n\t\t\tglobalItems,\n\t\t\tworkspaceItems,\n\t\t\tthis.getLogDetails(StorageScope.GLOBAL) ?? '',\n\t\t\tthis.getLogDetails(StorageScope.WORKSPACE) ?? ''\n\t\t);\n\t}\n\n\t// --- abstract\n\n\tprotected abstract doInitialize(): Promise<void>;\n\n\tprotected abstract getStorage(scope: StorageScope): IStorage | undefined;\n\n\tprotected abstract getLogDetails(scope: StorageScope): string | undefined;\n\n\tabstract migrate(toWorkspace: IWorkspaceInitializationPayload): Promise<void>;\n}\n\nexport class InMemoryStorageService extends AbstractStorageService {\n\n\tprivate readonly globalStorage = this._register(new Storage(new InMemoryStorageDatabase()));\n\tprivate readonly workspaceStorage = this._register(new Storage(new InMemoryStorageDatabase()));\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._register(this.workspaceStorage.onDidChangeStorage(key => this.emitDidChangeValue(StorageScope.WORKSPACE, key)));\n\t\tthis._register(this.globalStorage.onDidChangeStorage(key => this.emitDidChangeValue(StorageScope.GLOBAL, key)));\n\t}\n\n\tprotected getStorage(scope: StorageScope): IStorage {\n\t\treturn scope === StorageScope.GLOBAL ? this.globalStorage : this.workspaceStorage;\n\t}\n\n\tprotected getLogDetails(scope: StorageScope): string | undefined {\n\t\treturn scope === StorageScope.GLOBAL ? 'inMemory (global)' : 'inMemory (workspace)';\n\t}\n\n\tprotected async doInitialize(): Promise<void> { }\n\n\tasync migrate(toWorkspace: IWorkspaceInitializationPayload): Promise<void> {\n\t\t// not supported\n\t}\n}\n\nexport async function logStorage(global: Map<string, string>, workspace: Map<string, string>, globalPath: string, workspacePath: string): Promise<void> {\n\tconst safeParse = (value: string) => {\n\t\ttry {\n\t\t\treturn JSON.parse(value);\n\t\t} catch (error) {\n\t\t\treturn value;\n\t\t}\n\t};\n\n\tconst globalItems = new Map<string, string>();\n\tconst globalItemsParsed = new Map<string, string>();\n\tglobal.forEach((value, key) => {\n\t\tglobalItems.set(key, value);\n\t\tglobalItemsParsed.set(key, safeParse(value));\n\t});\n\n\tconst workspaceItems = new Map<string, string>();\n\tconst workspaceItemsParsed = new Map<string, string>();\n\tworkspace.forEach((value, key) => {\n\t\tworkspaceItems.set(key, value);\n\t\tworkspaceItemsParsed.set(key, safeParse(value));\n\t});\n\n\tconsole.group(`Storage: Global (path: ${globalPath})`);\n\tlet globalValues: { key: string, value: string }[] = [];\n\tglobalItems.forEach((value, key) => {\n\t\tglobalValues.push({ key, value });\n\t});\n\tconsole.table(globalValues);\n\tconsole.groupEnd();\n\n\tconsole.log(globalItemsParsed);\n\n\tconsole.group(`Storage: Workspace (path: ${workspacePath})`);\n\tlet workspaceValues: { key: string, value: string }[] = [];\n\tworkspaceItems.forEach((value, key) => {\n\t\tworkspaceValues.push({ key, value });\n\t});\n\tconsole.table(workspaceValues);\n\tconsole.groupEnd();\n\n\tconsole.log(workspaceItemsParsed);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { isUndefinedOrNull } from 'vs/base/common/types';\nimport { DISABLED_EXTENSIONS_STORAGE_PATH, IExtensionIdentifier, IExtensionManagementService, IGlobalExtensionEnablementService, InstallOperation } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { IStorageService, IStorageValueChangeEvent, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\n\nexport class GlobalExtensionEnablementService extends Disposable implements IGlobalExtensionEnablementService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _onDidChangeEnablement = new Emitter<{ readonly extensions: IExtensionIdentifier[], readonly source?: string }>();\n\treadonly onDidChangeEnablement: Event<{ readonly extensions: IExtensionIdentifier[], readonly source?: string }> = this._onDidChangeEnablement.event;\n\tprivate readonly storageManger: StorageManager;\n\n\tconstructor(\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IExtensionManagementService extensionManagementService: IExtensionManagementService,\n\t) {\n\t\tsuper();\n\t\tthis.storageManger = this._register(new StorageManager(storageService));\n\t\tthis._register(this.storageManger.onDidChange(extensions => this._onDidChangeEnablement.fire({ extensions, source: 'storage' })));\n\t\tthis._register(extensionManagementService.onDidInstallExtensions(e => e.forEach(({ local, operation }) => {\n\t\t\tif (local && operation === InstallOperation.Migrate) {\n\t\t\t\tthis._removeFromDisabledExtensions(local.identifier); /* Reset migrated extensions */\n\t\t\t}\n\t\t})));\n\t}\n\n\tasync enableExtension(extension: IExtensionIdentifier, source?: string): Promise<boolean> {\n\t\tif (this._removeFromDisabledExtensions(extension)) {\n\t\t\tthis._onDidChangeEnablement.fire({ extensions: [extension], source });\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tasync disableExtension(extension: IExtensionIdentifier, source?: string): Promise<boolean> {\n\t\tif (this._addToDisabledExtensions(extension)) {\n\t\t\tthis._onDidChangeEnablement.fire({ extensions: [extension], source });\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tgetDisabledExtensions(): IExtensionIdentifier[] {\n\t\treturn this._getExtensions(DISABLED_EXTENSIONS_STORAGE_PATH);\n\t}\n\n\tasync getDisabledExtensionsAsync(): Promise<IExtensionIdentifier[]> {\n\t\treturn this.getDisabledExtensions();\n\t}\n\n\tprivate _addToDisabledExtensions(identifier: IExtensionIdentifier): boolean {\n\t\tlet disabledExtensions = this.getDisabledExtensions();\n\t\tif (disabledExtensions.every(e => !areSameExtensions(e, identifier))) {\n\t\t\tdisabledExtensions.push(identifier);\n\t\t\tthis._setDisabledExtensions(disabledExtensions);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _removeFromDisabledExtensions(identifier: IExtensionIdentifier): boolean {\n\t\tlet disabledExtensions = this.getDisabledExtensions();\n\t\tfor (let index = 0; index < disabledExtensions.length; index++) {\n\t\t\tconst disabledExtension = disabledExtensions[index];\n\t\t\tif (areSameExtensions(disabledExtension, identifier)) {\n\t\t\t\tdisabledExtensions.splice(index, 1);\n\t\t\t\tthis._setDisabledExtensions(disabledExtensions);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate _setDisabledExtensions(disabledExtensions: IExtensionIdentifier[]): void {\n\t\tthis._setExtensions(DISABLED_EXTENSIONS_STORAGE_PATH, disabledExtensions);\n\t}\n\n\tprivate _getExtensions(storageId: string): IExtensionIdentifier[] {\n\t\treturn this.storageManger.get(storageId, StorageScope.GLOBAL);\n\t}\n\n\tprivate _setExtensions(storageId: string, extensions: IExtensionIdentifier[]): void {\n\t\tthis.storageManger.set(storageId, extensions, StorageScope.GLOBAL);\n\t}\n\n}\n\nexport class StorageManager extends Disposable {\n\n\tprivate storage: { [key: string]: string } = Object.create(null);\n\n\tprivate _onDidChange: Emitter<IExtensionIdentifier[]> = this._register(new Emitter<IExtensionIdentifier[]>());\n\treadonly onDidChange: Event<IExtensionIdentifier[]> = this._onDidChange.event;\n\n\tconstructor(private storageService: IStorageService) {\n\t\tsuper();\n\t\tthis._register(storageService.onDidChangeValue(e => this.onDidStorageChange(e)));\n\t}\n\n\tget(key: string, scope: StorageScope): IExtensionIdentifier[] {\n\t\tlet value: string;\n\t\tif (scope === StorageScope.GLOBAL) {\n\t\t\tif (isUndefinedOrNull(this.storage[key])) {\n\t\t\t\tthis.storage[key] = this._get(key, scope);\n\t\t\t}\n\t\t\tvalue = this.storage[key];\n\t\t} else {\n\t\t\tvalue = this._get(key, scope);\n\t\t}\n\t\treturn JSON.parse(value);\n\t}\n\n\tset(key: string, value: IExtensionIdentifier[], scope: StorageScope): void {\n\t\tlet newValue: string = JSON.stringify(value.map(({ id, uuid }) => (<IExtensionIdentifier>{ id, uuid })));\n\t\tconst oldValue = this._get(key, scope);\n\t\tif (oldValue !== newValue) {\n\t\t\tif (scope === StorageScope.GLOBAL) {\n\t\t\t\tif (value.length) {\n\t\t\t\t\tthis.storage[key] = newValue;\n\t\t\t\t} else {\n\t\t\t\t\tdelete this.storage[key];\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._set(key, value.length ? newValue : undefined, scope);\n\t\t}\n\t}\n\n\tprivate onDidStorageChange(storageChangeEvent: IStorageValueChangeEvent): void {\n\t\tif (storageChangeEvent.scope === StorageScope.GLOBAL) {\n\t\t\tif (!isUndefinedOrNull(this.storage[storageChangeEvent.key])) {\n\t\t\t\tconst newValue = this._get(storageChangeEvent.key, storageChangeEvent.scope);\n\t\t\t\tif (newValue !== this.storage[storageChangeEvent.key]) {\n\t\t\t\t\tconst oldValues = this.get(storageChangeEvent.key, storageChangeEvent.scope);\n\t\t\t\t\tdelete this.storage[storageChangeEvent.key];\n\t\t\t\t\tconst newValues = this.get(storageChangeEvent.key, storageChangeEvent.scope);\n\t\t\t\t\tconst added = oldValues.filter(oldValue => !newValues.some(newValue => areSameExtensions(oldValue, newValue)));\n\t\t\t\t\tconst removed = newValues.filter(newValue => !oldValues.some(oldValue => areSameExtensions(oldValue, newValue)));\n\t\t\t\t\tif (added.length || removed.length) {\n\t\t\t\t\t\tthis._onDidChange.fire([...added, ...removed]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _get(key: string, scope: StorageScope): string {\n\t\treturn this.storageService.get(key, scope, '[]');\n\t}\n\n\tprivate _set(key: string, value: string | undefined, scope: StorageScope): void {\n\t\tif (value) {\n\t\t\t// Enablement state is synced separately through extensions\n\t\t\tthis.storageService.store(key, value, scope, StorageTarget.MACHINE);\n\t\t} else {\n\t\t\tthis.storageService.remove(key, scope);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IStorageDatabase, IStorageItemsChangeEvent, IUpdateRequest } from 'vs/base/parts/storage/common/storage';\nimport { IEmptyWorkspaceIdentifier, ISerializedSingleFolderWorkspaceIdentifier, ISerializedWorkspaceIdentifier, ISingleFolderWorkspaceIdentifier, IWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\n\nexport type Key = string;\nexport type Value = string;\nexport type Item = [Key, Value];\n\nexport interface IBaseSerializableStorageRequest {\n\treadonly workspace: ISerializedWorkspaceIdentifier | ISerializedSingleFolderWorkspaceIdentifier | IEmptyWorkspaceIdentifier | undefined\n}\n\nexport interface ISerializableUpdateRequest extends IBaseSerializableStorageRequest {\n\tinsert?: Item[];\n\tdelete?: Key[];\n}\n\nexport interface ISerializableItemsChangeEvent {\n\treadonly changed?: Item[];\n\treadonly deleted?: Key[];\n}\n\nabstract class BaseStorageDatabaseClient extends Disposable implements IStorageDatabase {\n\n\tabstract readonly onDidChangeItemsExternal: Event<IStorageItemsChangeEvent>;\n\n\tconstructor(protected channel: IChannel, protected workspace: IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | IEmptyWorkspaceIdentifier | undefined) {\n\t\tsuper();\n\t}\n\n\tasync getItems(): Promise<Map<string, string>> {\n\t\tconst serializableRequest: IBaseSerializableStorageRequest = { workspace: this.workspace };\n\t\tconst items: Item[] = await this.channel.call('getItems', serializableRequest);\n\n\t\treturn new Map(items);\n\t}\n\n\tupdateItems(request: IUpdateRequest): Promise<void> {\n\t\tconst serializableRequest: ISerializableUpdateRequest = { workspace: this.workspace };\n\n\t\tif (request.insert) {\n\t\t\tserializableRequest.insert = Array.from(request.insert.entries());\n\t\t}\n\n\t\tif (request.delete) {\n\t\t\tserializableRequest.delete = Array.from(request.delete.values());\n\t\t}\n\n\t\treturn this.channel.call('updateItems', serializableRequest);\n\t}\n\n\tabstract close(): Promise<void>;\n}\n\nclass GlobalStorageDatabaseClient extends BaseStorageDatabaseClient implements IStorageDatabase {\n\n\tprivate readonly _onDidChangeItemsExternal = this._register(new Emitter<IStorageItemsChangeEvent>());\n\treadonly onDidChangeItemsExternal = this._onDidChangeItemsExternal.event;\n\n\tconstructor(channel: IChannel) {\n\t\tsuper(channel, undefined);\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.channel.listen<ISerializableItemsChangeEvent>('onDidChangeGlobalStorage')((e: ISerializableItemsChangeEvent) => this.onDidChangeGlobalStorage(e)));\n\t}\n\n\tprivate onDidChangeGlobalStorage(e: ISerializableItemsChangeEvent): void {\n\t\tif (Array.isArray(e.changed) || Array.isArray(e.deleted)) {\n\t\t\tthis._onDidChangeItemsExternal.fire({\n\t\t\t\tchanged: e.changed ? new Map(e.changed) : undefined,\n\t\t\t\tdeleted: e.deleted ? new Set<string>(e.deleted) : undefined\n\t\t\t});\n\t\t}\n\t}\n\n\tasync close(): Promise<void> {\n\n\t\t// The global storage database is shared across all instances so\n\t\t// we do not await it. However we dispose the listener for external\n\t\t// changes because we no longer interested int it.\n\t\tthis.dispose();\n\t}\n}\n\nclass WorkspaceStorageDatabaseClient extends BaseStorageDatabaseClient implements IStorageDatabase {\n\n\treadonly onDidChangeItemsExternal = Event.None; // unsupported for workspace storage because we only ever write from one window\n\n\tconstructor(channel: IChannel, workspace: IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | IEmptyWorkspaceIdentifier) {\n\t\tsuper(channel, workspace);\n\t}\n\n\tasync close(): Promise<void> {\n\t\tconst serializableRequest: ISerializableUpdateRequest = { workspace: this.workspace };\n\n\t\treturn this.channel.call('close', serializableRequest);\n\t}\n}\n\nexport class StorageDatabaseChannelClient extends Disposable {\n\n\tprivate _globalStorage: GlobalStorageDatabaseClient | undefined = undefined;\n\tget globalStorage() {\n\t\tif (!this._globalStorage) {\n\t\t\tthis._globalStorage = new GlobalStorageDatabaseClient(this.channel);\n\t\t}\n\n\t\treturn this._globalStorage;\n\t}\n\n\tprivate _workspaceStorage: WorkspaceStorageDatabaseClient | undefined = undefined;\n\tget workspaceStorage() {\n\t\tif (!this._workspaceStorage && this.workspace) {\n\t\t\tthis._workspaceStorage = new WorkspaceStorageDatabaseClient(this.channel, this.workspace);\n\t\t}\n\n\t\treturn this._workspaceStorage;\n\t}\n\n\tconstructor(\n\t\tprivate channel: IChannel,\n\t\tprivate workspace: IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | IEmptyWorkspaceIdentifier | undefined\n\t) {\n\t\tsuper();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Promises } from 'vs/base/common/async';\nimport { MutableDisposable } from 'vs/base/common/lifecycle';\nimport { joinPath } from 'vs/base/common/resources';\nimport { IStorage, Storage } from 'vs/base/parts/storage/common/storage';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IMainProcessService } from 'vs/platform/ipc/electron-sandbox/services';\nimport { AbstractStorageService, StorageScope, WillSaveStateReason } from 'vs/platform/storage/common/storage';\nimport { StorageDatabaseChannelClient } from 'vs/platform/storage/common/storageIpc';\nimport { IEmptyWorkspaceIdentifier, ISingleFolderWorkspaceIdentifier, IWorkspaceIdentifier, IWorkspaceInitializationPayload } from 'vs/platform/workspaces/common/workspaces';\n\nexport class NativeStorageService extends AbstractStorageService {\n\n\t// Global Storage is readonly and shared across windows\n\tprivate readonly globalStorage: IStorage;\n\n\t// Workspace Storage is scoped to a window but can change\n\t// in the current window, when entering a workspace!\n\tprivate workspaceStorage: IStorage | undefined = undefined;\n\tprivate workspaceStorageId: string | undefined = undefined;\n\tprivate workspaceStorageDisposable = this._register(new MutableDisposable());\n\n\tconstructor(\n\t\tworkspace: IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | IEmptyWorkspaceIdentifier | undefined,\n\t\tprivate readonly mainProcessService: IMainProcessService,\n\t\tprivate readonly environmentService: IEnvironmentService\n\t) {\n\t\tsuper();\n\n\t\tthis.globalStorage = this.createGlobalStorage();\n\t\tthis.workspaceStorage = this.createWorkspaceStorage(workspace);\n\t}\n\n\tprivate createGlobalStorage(): IStorage {\n\t\tconst storageDataBaseClient = new StorageDatabaseChannelClient(this.mainProcessService.getChannel('storage'), undefined);\n\n\t\tconst globalStorage = new Storage(storageDataBaseClient.globalStorage);\n\n\t\tthis._register(globalStorage.onDidChangeStorage(key => this.emitDidChangeValue(StorageScope.GLOBAL, key)));\n\n\t\treturn globalStorage;\n\t}\n\n\tprivate createWorkspaceStorage(workspace: IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | IEmptyWorkspaceIdentifier): IStorage;\n\tprivate createWorkspaceStorage(workspace: IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | IEmptyWorkspaceIdentifier | undefined): IStorage | undefined;\n\tprivate createWorkspaceStorage(workspace: IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | IEmptyWorkspaceIdentifier | undefined): IStorage | undefined {\n\t\tconst storageDataBaseClient = new StorageDatabaseChannelClient(this.mainProcessService.getChannel('storage'), workspace);\n\n\t\tif (storageDataBaseClient.workspaceStorage) {\n\t\t\tconst workspaceStorage = new Storage(storageDataBaseClient.workspaceStorage);\n\n\t\t\tthis.workspaceStorageDisposable.value = workspaceStorage.onDidChangeStorage(key => this.emitDidChangeValue(StorageScope.WORKSPACE, key));\n\t\t\tthis.workspaceStorageId = workspace?.id;\n\n\t\t\treturn workspaceStorage;\n\t\t} else {\n\t\t\tthis.workspaceStorageDisposable.clear();\n\t\t\tthis.workspaceStorageId = undefined;\n\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\tprotected async doInitialize(): Promise<void> {\n\t\t\n\t\t// Init all storage locations\n\t\tawait Promises.settled([\n\t\t\tthis.globalStorage.init(),\n\t\t\tthis.workspaceStorage?.init() ?? Promise.resolve()\n\t\t]);\n\t}\n\n\tprotected getStorage(scope: StorageScope): IStorage | undefined {\n\t\treturn scope === StorageScope.GLOBAL ? this.globalStorage : this.workspaceStorage;\n\t}\n\n\tprotected getLogDetails(scope: StorageScope): string | undefined {\n\t\treturn scope === StorageScope.GLOBAL ? this.environmentService.globalStorageHome.fsPath : this.workspaceStorageId ? `${joinPath(this.environmentService.workspaceStorageHome, this.workspaceStorageId, 'state.vscdb').fsPath}` : undefined;\n\t}\n\n\tasync close(): Promise<void> {\n\n\t\t// Stop periodic scheduler and idle runner as we now collect state normally\n\t\tthis.stopFlushWhenIdle();\n\n\t\t// Signal as event so that clients can still store data\n\t\tthis.emitWillSaveState(WillSaveStateReason.SHUTDOWN);\n\n\t\t// Do it\n\t\tawait Promises.settled([\n\t\t\tthis.globalStorage.close(),\n\t\t\tthis.workspaceStorage?.close() ?? Promise.resolve()\n\t\t]);\n\t}\n\n\tasync migrate(toWorkspace: IWorkspaceInitializationPayload): Promise<void> {\n\n\t\t// Keep current workspace storage items around to restore\n\t\tconst oldWorkspaceStorage = this.workspaceStorage;\n\t\tconst oldItems = oldWorkspaceStorage?.items ?? new Map();\n\n\t\t// Close current which will change to new workspace storage\n\t\tif (oldWorkspaceStorage) {\n\t\t\tawait oldWorkspaceStorage.close();\n\t\t\toldWorkspaceStorage.dispose();\n\t\t}\n\n\t\t// Create new workspace storage & init\n\t\tthis.workspaceStorage = this.createWorkspaceStorage(toWorkspace);\n\t\tawait this.workspaceStorage.init();\n\n\t\t// Copy over previous keys\n\t\tfor (const [key, value] of oldItems) {\n\t\t\tthis.workspaceStorage.set(key, value);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isLinuxSnap, platform, Platform, PlatformToString } from 'vs/base/common/platform';\nimport { env, platform as nodePlatform } from 'vs/base/common/process';\nimport { URI } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IFileService } from 'vs/platform/files/common/files';\n\nfunction getPlatformDetail(hostname: string): string | undefined {\n\tif (platform === Platform.Linux && /^penguin(\\.|$)/i.test(hostname)) {\n\t\treturn 'chromebook';\n\t}\n\n\treturn undefined;\n}\n\nexport async function resolveCommonProperties(\n\tfileService: IFileService,\n\trelease: string,\n\thostname: string,\n\tarch: string,\n\tcommit: string | undefined,\n\tversion: string | undefined,\n\tmachineId: string | undefined,\n\tmsftInternalDomains: string[] | undefined,\n\tinstallSourcePath: string,\n\tproduct?: string\n): Promise<{ [name: string]: string | boolean | undefined; }> {\n\tconst result: { [name: string]: string | boolean | undefined; } = Object.create(null);\n\n\t// __GDPR__COMMON__ \"common.machineId\" : { \"endPoint\": \"MacAddressHash\", \"classification\": \"EndUserPseudonymizedInformation\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.machineId'] = machineId;\n\t// __GDPR__COMMON__ \"sessionID\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['sessionID'] = generateUuid() + Date.now();\n\t// __GDPR__COMMON__ \"commitHash\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['commitHash'] = commit;\n\t// __GDPR__COMMON__ \"version\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['version'] = version;\n\t// __GDPR__COMMON__ \"common.platformVersion\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.platformVersion'] = (release || '').replace(/^(\\d+)(\\.\\d+)?(\\.\\d+)?(.*)/, '$1$2$3');\n\t// __GDPR__COMMON__ \"common.platform\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.platform'] = PlatformToString(platform);\n\t// __GDPR__COMMON__ \"common.nodePlatform\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.nodePlatform'] = nodePlatform;\n\t// __GDPR__COMMON__ \"common.nodeArch\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.nodeArch'] = arch;\n\t// __GDPR__COMMON__ \"common.product\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.product'] = product || 'desktop';\n\n\tconst msftInternal = verifyMicrosoftInternalDomain(msftInternalDomains || []);\n\tif (msftInternal) {\n\t\t// __GDPR__COMMON__ \"common.msftInternal\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\tresult['common.msftInternal'] = msftInternal;\n\t}\n\n\t// dynamic properties which value differs on each call\n\tlet seq = 0;\n\tconst startTime = Date.now();\n\tObject.defineProperties(result, {\n\t\t// __GDPR__COMMON__ \"timestamp\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t'timestamp': {\n\t\t\tget: () => new Date(),\n\t\t\tenumerable: true\n\t\t},\n\t\t// __GDPR__COMMON__ \"common.timesincesessionstart\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t'common.timesincesessionstart': {\n\t\t\tget: () => Date.now() - startTime,\n\t\t\tenumerable: true\n\t\t},\n\t\t// __GDPR__COMMON__ \"common.sequence\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t'common.sequence': {\n\t\t\tget: () => seq++,\n\t\t\tenumerable: true\n\t\t}\n\t});\n\n\tif (isLinuxSnap) {\n\t\t// __GDPR__COMMON__ \"common.snap\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\tresult['common.snap'] = 'true';\n\t}\n\n\tconst platformDetail = getPlatformDetail(hostname);\n\n\tif (platformDetail) {\n\t\t// __GDPR__COMMON__ \"common.platformDetail\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\tresult['common.platformDetail'] = platformDetail;\n\t}\n\n\ttry {\n\t\tconst contents = await fileService.readFile(URI.file(installSourcePath));\n\n\t\t// __GDPR__COMMON__ \"common.source\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\tresult['common.source'] = contents.value.toString().slice(0, 30);\n\t} catch (error) {\n\t\t// ignore error\n\t}\n\n\treturn result;\n}\n\nexport function verifyMicrosoftInternalDomain(domainList: readonly string[]): boolean {\n\tconst userDnsDomain = env['USERDNSDOMAIN'];\n\tif (!userDnsDomain) {\n\t\treturn false;\n\t}\n\n\tconst domain = userDnsDomain.toLowerCase();\n\treturn domainList.some(msftDomain => domain === msftDomain);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ClassifiedEvent, GDPRClassification, StrictPropertyCheck } from 'vs/platform/telemetry/common/gdprTypings';\n\nexport const ITelemetryService = createDecorator<ITelemetryService>('telemetryService');\n\nexport interface ITelemetryInfo {\n\tsessionId: string;\n\tmachineId: string;\n\tfirstSessionDate: string;\n\tmsftInternal?: boolean;\n}\n\nexport interface ITelemetryData {\n\tfrom?: string;\n\ttarget?: string;\n\t[key: string]: any;\n}\n\nexport interface ITelemetryService {\n\n\t/**\n\t * Whether error telemetry will get sent. If false, `publicLogError` will no-op.\n\t */\n\treadonly sendErrorTelemetry: boolean;\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Sends a telemetry event that has been privacy approved.\n\t * Do not call this unless you have been given approval.\n\t */\n\tpublicLog(eventName: string, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<void>;\n\n\tpublicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>, anonymizeFilePaths?: boolean): Promise<void>;\n\n\tpublicLogError(errorEventName: string, data?: ITelemetryData): Promise<void>;\n\n\tpublicLogError2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>): Promise<void>;\n\n\tgetTelemetryInfo(): Promise<ITelemetryInfo>;\n\n\tsetExperimentProperty(name: string, value: string): void;\n\n\ttelemetryLevel: TelemetryLevel;\n}\n\nexport interface ITelemetryEndpoint {\n\tid: string;\n\taiKey: string;\n\tsendErrorTelemetry: boolean;\n}\n\nexport const ICustomEndpointTelemetryService = createDecorator<ICustomEndpointTelemetryService>('customEndpointTelemetryService');\n\nexport interface ICustomEndpointTelemetryService {\n\treadonly _serviceBrand: undefined;\n\n\tpublicLog(endpoint: ITelemetryEndpoint, eventName: string, data?: ITelemetryData): Promise<void>;\n\tpublicLogError(endpoint: ITelemetryEndpoint, errorEventName: string, data?: ITelemetryData): Promise<void>;\n}\n\n// Keys\nexport const currentSessionDateStorageKey = 'telemetry.currentSessionDate';\nexport const firstSessionDateStorageKey = 'telemetry.firstSessionDate';\nexport const lastSessionDateStorageKey = 'telemetry.lastSessionDate';\nexport const machineIdKey = 'telemetry.machineId';\n\n// Configuration Keys\nexport const TELEMETRY_SECTION_ID = 'telemetry';\nexport const TELEMETRY_SETTING_ID = 'telemetry.telemetryLevel';\nexport const TELEMETRY_OLD_SETTING_ID = 'telemetry.enableTelemetry';\n\nexport const enum TelemetryLevel {\n\tNONE = 0,\n\tCRASH = 1,\n\tERROR = 2,\n\tUSAGE = 3\n}\n\nexport const enum TelemetryConfiguration {\n\tOFF = 'off',\n\tCRASH = 'crash',\n\tERROR = 'error',\n\tON = 'all'\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as osLib from 'os';\nimport { Iterable } from 'vs/base/common/iterator';\nimport { Promises } from 'vs/base/common/async';\nimport { getNodeType, parse, ParseError } from 'vs/base/common/json';\nimport { Schemas } from 'vs/base/common/network';\nimport { basename, join } from 'vs/base/common/path';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { ProcessItem } from 'vs/base/common/processes';\nimport { URI } from 'vs/base/common/uri';\nimport { virtualMachineHint } from 'vs/base/node/id';\nimport { IDirent, Promises as pfs } from 'vs/base/node/pfs';\nimport { listProcesses } from 'vs/base/node/ps';\nimport { IDiagnosticsService, IMachineInfo, IRemoteDiagnosticError, IRemoteDiagnosticInfo, isRemoteDiagnosticError, IWorkspaceInformation, PerformanceInfo, SystemInfo, WorkspaceStatItem, WorkspaceStats } from 'vs/platform/diagnostics/common/diagnostics';\nimport { ByteSize } from 'vs/platform/files/common/files';\nimport { IMainProcessInfo } from 'vs/platform/launch/common/launch';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\n\nexport interface VersionInfo {\n\tvscodeVersion: string;\n\tos: string;\n}\n\nexport interface ProcessInfo {\n\tcpu: number;\n\tmemory: number;\n\tpid: number;\n\tname: string;\n}\n\ninterface ConfigFilePatterns {\n\ttag: string;\n\tfilePattern: RegExp;\n\trelativePathPattern?: RegExp;\n}\n\ninterface RootFileMatcher {\n\ttag: string;\n\tmatcher: (path: string) => boolean;\n}\n\nexport async function collectWorkspaceStats(folder: string, filter: string[]): Promise<WorkspaceStats> {\n\tconst configFilePatterns: ConfigFilePatterns[] = [\n\t\t{ tag: 'grunt.js', filePattern: /^gruntfile\\.js$/i },\n\t\t{ tag: 'gulp.js', filePattern: /^gulpfile\\.js$/i },\n\t\t{ tag: 'tsconfig.json', filePattern: /^tsconfig\\.json$/i },\n\t\t{ tag: 'package.json', filePattern: /^package\\.json$/i },\n\t\t{ tag: 'jsconfig.json', filePattern: /^jsconfig\\.json$/i },\n\t\t{ tag: 'tslint.json', filePattern: /^tslint\\.json$/i },\n\t\t{ tag: 'eslint.json', filePattern: /^eslint\\.json$/i },\n\t\t{ tag: 'tasks.json', filePattern: /^tasks\\.json$/i },\n\t\t{ tag: 'launch.json', filePattern: /^launch\\.json$/i },\n\t\t{ tag: 'settings.json', filePattern: /^settings\\.json$/i },\n\t\t{ tag: 'webpack.config.js', filePattern: /^webpack\\.config\\.js$/i },\n\t\t{ tag: 'project.json', filePattern: /^project\\.json$/i },\n\t\t{ tag: 'makefile', filePattern: /^makefile$/i },\n\t\t{ tag: 'sln', filePattern: /^.+\\.sln$/i },\n\t\t{ tag: 'csproj', filePattern: /^.+\\.csproj$/i },\n\t\t{ tag: 'cmake', filePattern: /^.+\\.cmake$/i },\n\t\t{ tag: 'github-actions', filePattern: /^.+\\.ya?ml$/i, relativePathPattern: /^\\.github(?:\\/|\\\\)workflows$/i },\n\t\t{ tag: 'devcontainer.json', filePattern: /^devcontainer\\.json$/i },\n\t\t{ tag: 'dockerfile', filePattern: /^(dockerfile|docker\\-compose\\.ya?ml)$/i }\n\t];\n\n\tlet rootFileMatchers: RootFileMatcher[];\n\n\t// Linux is omitted because few cloud sync clients support it, and for those who are available on Linux, there are multiple clients and they can be configured differently\n\tconst homeDir = osLib.homedir().toLowerCase();\n\tswitch (process.platform) {\n\t\tcase 'win32':\n\t\t\trootFileMatchers = [\n\t\t\t\t{\n\t\t\t\t\ttag: 'gdrive', matcher: (path) => {\n\t\t\t\t\t\t// File Streaming or Mirror Files mode\n\t\t\t\t\t\treturn /^[a-z]:\\\\(my drive|shared drives)\\\\/.test(path) || path.startsWith(homeDir + '\\\\my drive\\\\');\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttag: 'dropbox', matcher: path => path.startsWith(homeDir + '\\\\dropbox') // Ending in *\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttag: 'onedrive', matcher: path => path.startsWith(homeDir + '\\\\onedrive') // Ending in *\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttag: 'box', matcher: path => path.startsWith(homeDir + '\\\\box\\\\')\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttag: 'nextcloud', matcher: path => path.startsWith(homeDir + '\\\\nextcloud\\\\')\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttag: 'owncloud', matcher: path => path.startsWith(homeDir + '\\\\owncloud\\\\')\n\t\t\t\t},\n\t\t\t];\n\t\t\tbreak;\n\n\t\tcase 'darwin':\n\t\t\trootFileMatchers = [\n\t\t\t\t{\n\t\t\t\t\ttag: 'gdrive', matcher: (path) => {\n\t\t\t\t\t\t// File Streaming mode\n\t\t\t\t\t\treturn path.startsWith('/volumes/googledrive/') || path.startsWith(homeDir + '/my drive/');\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttag: 'dropbox', matcher: path => path.startsWith(homeDir + '/dropbox') // Ending in *\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttag: 'onedrive', matcher: (path) => {\n\t\t\t\t\t\t// Old vs new client\n\t\t\t\t\t\treturn path.startsWith(homeDir + '/onedrive') || path.startsWith(homeDir + '/library/cloudstorage/onedrive');\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttag: 'icloud', matcher: path => path.startsWith(homeDir + '/library/mobile documents/')\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttag: 'box', matcher: path => path.startsWith(homeDir + '/box/')\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttag: 'nextcloud', matcher: path => path.startsWith(homeDir + '/nextcloud/')\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttag: 'owncloud', matcher: path => path.startsWith(homeDir + '/owncloud/')\n\t\t\t\t},\n\t\t\t];\n\t\t\tbreak;\n\t}\n\n\tconst fileTypes = new Map<string, number>();\n\tconst configFiles = new Map<string, number>();\n\n\tconst MAX_FILES = 20000;\n\n\tfunction collect(root: string, dir: string, filter: string[], token: { count: number, maxReached: boolean }): Promise<void> {\n\t\tfor (const rootPath of rootFileMatchers) {\n\t\t\tconst lowercaseRoot = root.toLowerCase();\n\t\t\tif (rootPath.matcher(lowercaseRoot)) {\n\t\t\t\tconfigFiles.set(rootPath.tag, 1);\n\t\t\t}\n\t\t}\n\n\t\tconst relativePath = dir.substring(root.length + 1);\n\n\t\treturn Promises.withAsyncBody(async resolve => {\n\t\t\tlet files: IDirent[];\n\t\t\ttry {\n\t\t\t\tfiles = await pfs.readdir(dir, { withFileTypes: true });\n\t\t\t} catch (error) {\n\t\t\t\t// Ignore folders that can't be read\n\t\t\t\tresolve();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (token.count >= MAX_FILES) {\n\t\t\t\ttoken.count += files.length;\n\t\t\t\ttoken.maxReached = true;\n\t\t\t\tresolve();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet pending = files.length;\n\t\t\tif (pending === 0) {\n\t\t\t\tresolve();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet filesToRead = files;\n\t\t\tif (token.count + files.length > MAX_FILES) {\n\t\t\t\ttoken.maxReached = true;\n\t\t\t\tpending = MAX_FILES - token.count;\n\t\t\t\tfilesToRead = files.slice(0, pending);\n\t\t\t}\n\n\t\t\ttoken.count += files.length;\n\n\t\t\tfor (const file of filesToRead) {\n\t\t\t\tif (file.isDirectory()) {\n\t\t\t\t\tif (!filter.includes(file.name)) {\n\t\t\t\t\t\tawait collect(root, join(dir, file.name), filter, token);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (--pending === 0) {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst index = file.name.lastIndexOf('.');\n\t\t\t\t\tif (index >= 0) {\n\t\t\t\t\t\tconst fileType = file.name.substring(index + 1);\n\t\t\t\t\t\tif (fileType) {\n\t\t\t\t\t\t\tfileTypes.set(fileType, (fileTypes.get(fileType) ?? 0) + 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const configFile of configFilePatterns) {\n\t\t\t\t\t\tif (configFile.relativePathPattern?.test(relativePath) !== false && configFile.filePattern.test(file.name)) {\n\t\t\t\t\t\t\tconfigFiles.set(configFile.tag, (configFiles.get(configFile.tag) ?? 0) + 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (--pending === 0) {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tconst token: { count: number, maxReached: boolean } = { count: 0, maxReached: false };\n\n\tawait collect(folder, folder, filter, token);\n\tconst launchConfigs = await collectLaunchConfigs(folder);\n\treturn {\n\t\tconfigFiles: asSortedItems(configFiles),\n\t\tfileTypes: asSortedItems(fileTypes),\n\t\tfileCount: token.count,\n\t\tmaxFilesReached: token.maxReached,\n\t\tlaunchConfigFiles: launchConfigs\n\t};\n}\n\nfunction asSortedItems(items: Map<string, number>): WorkspaceStatItem[] {\n\treturn [\n\t\t...Iterable.map(items.entries(), ([name, count]) => ({ name: name, count: count }))\n\t].sort((a, b) => b.count - a.count);\n}\n\nexport function getMachineInfo(): IMachineInfo {\n\n\tconst machineInfo: IMachineInfo = {\n\t\tos: `${osLib.type()} ${osLib.arch()} ${osLib.release()}`,\n\t\tmemory: `${(osLib.totalmem() / ByteSize.GB).toFixed(2)}GB (${(osLib.freemem() / ByteSize.GB).toFixed(2)}GB free)`,\n\t\tvmHint: `${Math.round((virtualMachineHint.value() * 100))}%`,\n\t};\n\n\tconst cpus = osLib.cpus();\n\tif (cpus && cpus.length > 0) {\n\t\tmachineInfo.cpus = `${cpus[0].model} (${cpus.length} x ${cpus[0].speed})`;\n\t}\n\n\treturn machineInfo;\n}\n\nexport async function collectLaunchConfigs(folder: string): Promise<WorkspaceStatItem[]> {\n\ttry {\n\t\tconst launchConfigs = new Map<string, number>();\n\t\tconst launchConfig = join(folder, '.vscode', 'launch.json');\n\n\t\tconst contents = await pfs.readFile(launchConfig);\n\n\t\tconst errors: ParseError[] = [];\n\t\tconst json = parse(contents.toString(), errors);\n\t\tif (errors.length) {\n\t\t\tconsole.log(`Unable to parse ${launchConfig}`);\n\t\t\treturn [];\n\t\t}\n\n\t\tif (getNodeType(json) === 'object' && json['configurations']) {\n\t\t\tfor (const each of json['configurations']) {\n\t\t\t\tconst type = each['type'];\n\t\t\t\tif (type) {\n\t\t\t\t\tif (launchConfigs.has(type)) {\n\t\t\t\t\t\tlaunchConfigs.set(type, launchConfigs.get(type)! + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlaunchConfigs.set(type, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn asSortedItems(launchConfigs);\n\t} catch (error) {\n\t\treturn [];\n\t}\n}\n\nexport class DiagnosticsService implements IDiagnosticsService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IProductService private readonly productService: IProductService\n\t) { }\n\n\tprivate formatMachineInfo(info: IMachineInfo): string {\n\t\tconst output: string[] = [];\n\t\toutput.push(`OS Version:       ${info.os}`);\n\t\toutput.push(`CPUs:             ${info.cpus}`);\n\t\toutput.push(`Memory (System):  ${info.memory}`);\n\t\toutput.push(`VM:               ${info.vmHint}`);\n\n\t\treturn output.join('\\n');\n\t}\n\n\tprivate formatEnvironment(info: IMainProcessInfo): string {\n\t\tconst output: string[] = [];\n\t\toutput.push(`Version:          ${this.productService.nameShort} ${this.productService.version} (${this.productService.commit || 'Commit unknown'}, ${this.productService.date || 'Date unknown'})`);\n\t\toutput.push(`OS Version:       ${osLib.type()} ${osLib.arch()} ${osLib.release()}`);\n\t\tconst cpus = osLib.cpus();\n\t\tif (cpus && cpus.length > 0) {\n\t\t\toutput.push(`CPUs:             ${cpus[0].model} (${cpus.length} x ${cpus[0].speed})`);\n\t\t}\n\t\toutput.push(`Memory (System):  ${(osLib.totalmem() / ByteSize.GB).toFixed(2)}GB (${(osLib.freemem() / ByteSize.GB).toFixed(2)}GB free)`);\n\t\tif (!isWindows) {\n\t\t\toutput.push(`Load (avg):       ${osLib.loadavg().map(l => Math.round(l)).join(', ')}`); // only provided on Linux/macOS\n\t\t}\n\t\toutput.push(`VM:               ${Math.round((virtualMachineHint.value() * 100))}%`);\n\t\toutput.push(`Screen Reader:    ${info.screenReader ? 'yes' : 'no'}`);\n\t\toutput.push(`Process Argv:     ${info.mainArguments.join(' ')}`);\n\t\toutput.push(`GPU Status:       ${this.expandGPUFeatures(info.gpuFeatureStatus)}`);\n\n\t\treturn output.join('\\n');\n\t}\n\n\tpublic async getPerformanceInfo(info: IMainProcessInfo, remoteData: (IRemoteDiagnosticInfo | IRemoteDiagnosticError)[]): Promise<PerformanceInfo> {\n\t\treturn Promise.all([listProcesses(info.mainPID), this.formatWorkspaceMetadata(info)]).then(async result => {\n\t\t\tlet [rootProcess, workspaceInfo] = result;\n\t\t\tlet processInfo = this.formatProcessList(info, rootProcess);\n\n\t\t\tremoteData.forEach(diagnostics => {\n\t\t\t\tif (isRemoteDiagnosticError(diagnostics)) {\n\t\t\t\t\tprocessInfo += `\\n${diagnostics.errorMessage}`;\n\t\t\t\t\tworkspaceInfo += `\\n${diagnostics.errorMessage}`;\n\t\t\t\t} else {\n\t\t\t\t\tprocessInfo += `\\n\\nRemote: ${diagnostics.hostName}`;\n\t\t\t\t\tif (diagnostics.processes) {\n\t\t\t\t\t\tprocessInfo += `\\n${this.formatProcessList(info, diagnostics.processes)}`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diagnostics.workspaceMetadata) {\n\t\t\t\t\t\tworkspaceInfo += `\\n|  Remote: ${diagnostics.hostName}`;\n\t\t\t\t\t\tfor (const folder of Object.keys(diagnostics.workspaceMetadata)) {\n\t\t\t\t\t\t\tconst metadata = diagnostics.workspaceMetadata[folder];\n\n\t\t\t\t\t\t\tlet countMessage = `${metadata.fileCount} files`;\n\t\t\t\t\t\t\tif (metadata.maxFilesReached) {\n\t\t\t\t\t\t\t\tcountMessage = `more than ${countMessage}`;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tworkspaceInfo += `|    Folder (${folder}): ${countMessage}`;\n\t\t\t\t\t\t\tworkspaceInfo += this.formatWorkspaceStats(metadata);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\tprocessInfo,\n\t\t\t\tworkspaceInfo\n\t\t\t};\n\t\t});\n\t}\n\n\tpublic async getSystemInfo(info: IMainProcessInfo, remoteData: (IRemoteDiagnosticInfo | IRemoteDiagnosticError)[]): Promise<SystemInfo> {\n\t\tconst { memory, vmHint, os, cpus } = getMachineInfo();\n\t\tconst systemInfo: SystemInfo = {\n\t\t\tos,\n\t\t\tmemory,\n\t\t\tcpus,\n\t\t\tvmHint,\n\t\t\tprocessArgs: `${info.mainArguments.join(' ')}`,\n\t\t\tgpuStatus: info.gpuFeatureStatus,\n\t\t\tscreenReader: `${info.screenReader ? 'yes' : 'no'}`,\n\t\t\tremoteData\n\t\t};\n\n\t\tif (!isWindows) {\n\t\t\tsystemInfo.load = `${osLib.loadavg().map(l => Math.round(l)).join(', ')}`;\n\t\t}\n\n\t\tif (isLinux) {\n\t\t\tsystemInfo.linuxEnv = {\n\t\t\t\tdesktopSession: process.env['DESKTOP_SESSION'],\n\t\t\t\txdgSessionDesktop: process.env['XDG_SESSION_DESKTOP'],\n\t\t\t\txdgCurrentDesktop: process.env['XDG_CURRENT_DESKTOP'],\n\t\t\t\txdgSessionType: process.env['XDG_SESSION_TYPE']\n\t\t\t};\n\t\t}\n\n\t\treturn Promise.resolve(systemInfo);\n\t}\n\n\tpublic async getDiagnostics(info: IMainProcessInfo, remoteDiagnostics: (IRemoteDiagnosticInfo | IRemoteDiagnosticError)[]): Promise<string> {\n\t\tconst output: string[] = [];\n\t\treturn listProcesses(info.mainPID).then(async rootProcess => {\n\n\t\t\t// Environment Info\n\t\t\toutput.push('');\n\t\t\toutput.push(this.formatEnvironment(info));\n\n\t\t\t// Process List\n\t\t\toutput.push('');\n\t\t\toutput.push(this.formatProcessList(info, rootProcess));\n\n\t\t\t// Workspace Stats\n\t\t\tif (info.windows.some(window => window.folderURIs && window.folderURIs.length > 0 && !window.remoteAuthority)) {\n\t\t\t\toutput.push('');\n\t\t\t\toutput.push('Workspace Stats: ');\n\t\t\t\toutput.push(await this.formatWorkspaceMetadata(info));\n\t\t\t}\n\n\t\t\tremoteDiagnostics.forEach(diagnostics => {\n\t\t\t\tif (isRemoteDiagnosticError(diagnostics)) {\n\t\t\t\t\toutput.push(`\\n${diagnostics.errorMessage}`);\n\t\t\t\t} else {\n\t\t\t\t\toutput.push('\\n\\n');\n\t\t\t\t\toutput.push(`Remote:           ${diagnostics.hostName}`);\n\t\t\t\t\toutput.push(this.formatMachineInfo(diagnostics.machineInfo));\n\n\t\t\t\t\tif (diagnostics.processes) {\n\t\t\t\t\t\toutput.push(this.formatProcessList(info, diagnostics.processes));\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diagnostics.workspaceMetadata) {\n\t\t\t\t\t\tfor (const folder of Object.keys(diagnostics.workspaceMetadata)) {\n\t\t\t\t\t\t\tconst metadata = diagnostics.workspaceMetadata[folder];\n\n\t\t\t\t\t\t\tlet countMessage = `${metadata.fileCount} files`;\n\t\t\t\t\t\t\tif (metadata.maxFilesReached) {\n\t\t\t\t\t\t\t\tcountMessage = `more than ${countMessage}`;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\toutput.push(`Folder (${folder}): ${countMessage}`);\n\t\t\t\t\t\t\toutput.push(this.formatWorkspaceStats(metadata));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\toutput.push('');\n\t\t\toutput.push('');\n\n\t\t\treturn output.join('\\n');\n\t\t});\n\t}\n\n\tprivate formatWorkspaceStats(workspaceStats: WorkspaceStats): string {\n\t\tconst output: string[] = [];\n\t\tconst lineLength = 60;\n\t\tlet col = 0;\n\n\t\tconst appendAndWrap = (name: string, count: number) => {\n\t\t\tconst item = ` ${name}(${count})`;\n\n\t\t\tif (col + item.length > lineLength) {\n\t\t\t\toutput.push(line);\n\t\t\t\tline = '|                 ';\n\t\t\t\tcol = line.length;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcol += item.length;\n\t\t\t}\n\t\t\tline += item;\n\t\t};\n\n\t\t// File Types\n\t\tlet line = '|      File types:';\n\t\tconst maxShown = 10;\n\t\tlet max = workspaceStats.fileTypes.length > maxShown ? maxShown : workspaceStats.fileTypes.length;\n\t\tfor (let i = 0; i < max; i++) {\n\t\t\tconst item = workspaceStats.fileTypes[i];\n\t\t\tappendAndWrap(item.name, item.count);\n\t\t}\n\t\toutput.push(line);\n\n\t\t// Conf Files\n\t\tif (workspaceStats.configFiles.length >= 0) {\n\t\t\tline = '|      Conf files:';\n\t\t\tcol = 0;\n\t\t\tworkspaceStats.configFiles.forEach((item) => {\n\t\t\t\tappendAndWrap(item.name, item.count);\n\t\t\t});\n\t\t\toutput.push(line);\n\t\t}\n\n\t\tif (workspaceStats.launchConfigFiles.length > 0) {\n\t\t\tlet line = '|      Launch Configs:';\n\t\t\tworkspaceStats.launchConfigFiles.forEach(each => {\n\t\t\t\tconst item = each.count > 1 ? ` ${each.name}(${each.count})` : ` ${each.name}`;\n\t\t\t\tline += item;\n\t\t\t});\n\t\t\toutput.push(line);\n\t\t}\n\t\treturn output.join('\\n');\n\t}\n\n\tprivate expandGPUFeatures(gpuFeatures: any): string {\n\t\tconst longestFeatureName = Math.max(...Object.keys(gpuFeatures).map(feature => feature.length));\n\t\t// Make columns aligned by adding spaces after feature name\n\t\treturn Object.keys(gpuFeatures).map(feature => `${feature}:  ${' '.repeat(longestFeatureName - feature.length)}  ${gpuFeatures[feature]}`).join('\\n                  ');\n\t}\n\n\tprivate formatWorkspaceMetadata(info: IMainProcessInfo): Promise<string> {\n\t\tconst output: string[] = [];\n\t\tconst workspaceStatPromises: Promise<void>[] = [];\n\n\t\tinfo.windows.forEach(window => {\n\t\t\tif (window.folderURIs.length === 0 || !!window.remoteAuthority) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\toutput.push(`|  Window (${window.title})`);\n\n\t\t\twindow.folderURIs.forEach(uriComponents => {\n\t\t\t\tconst folderUri = URI.revive(uriComponents);\n\t\t\t\tif (folderUri.scheme === Schemas.file) {\n\t\t\t\t\tconst folder = folderUri.fsPath;\n\t\t\t\t\tworkspaceStatPromises.push(collectWorkspaceStats(folder, ['node_modules', '.git']).then(stats => {\n\t\t\t\t\t\tlet countMessage = `${stats.fileCount} files`;\n\t\t\t\t\t\tif (stats.maxFilesReached) {\n\t\t\t\t\t\t\tcountMessage = `more than ${countMessage}`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\toutput.push(`|    Folder (${basename(folder)}): ${countMessage}`);\n\t\t\t\t\t\toutput.push(this.formatWorkspaceStats(stats));\n\n\t\t\t\t\t}).catch(error => {\n\t\t\t\t\t\toutput.push(`|      Error: Unable to collect workspace stats for folder ${folder} (${error.toString()})`);\n\t\t\t\t\t}));\n\t\t\t\t} else {\n\t\t\t\t\toutput.push(`|    Folder (${folderUri.toString()}): Workspace stats not available.`);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn Promise.all(workspaceStatPromises)\n\t\t\t.then(_ => output.join('\\n'))\n\t\t\t.catch(e => `Unable to collect workspace stats: ${e}`);\n\t}\n\n\tprivate formatProcessList(info: IMainProcessInfo, rootProcess: ProcessItem): string {\n\t\tconst mapPidToWindowTitle = new Map<number, string>();\n\t\tinfo.windows.forEach(window => mapPidToWindowTitle.set(window.pid, window.title));\n\n\t\tconst output: string[] = [];\n\n\t\toutput.push('CPU %\\tMem MB\\t   PID\\tProcess');\n\n\t\tif (rootProcess) {\n\t\t\tthis.formatProcessItem(info.mainPID, mapPidToWindowTitle, output, rootProcess, 0);\n\t\t}\n\n\t\treturn output.join('\\n');\n\t}\n\n\tprivate formatProcessItem(mainPid: number, mapPidToWindowTitle: Map<number, string>, output: string[], item: ProcessItem, indent: number): void {\n\t\tconst isRoot = (indent === 0);\n\n\t\t// Format name with indent\n\t\tlet name: string;\n\t\tif (isRoot) {\n\t\t\tname = item.pid === mainPid ? `${this.productService.applicationName} main` : 'remote agent';\n\t\t} else {\n\t\t\tname = `${'  '.repeat(indent)} ${item.name}`;\n\n\t\t\tif (item.name === 'window') {\n\t\t\t\tname = `${name} (${mapPidToWindowTitle.get(item.pid)})`;\n\t\t\t}\n\t\t}\n\n\t\tconst memory = process.platform === 'win32' ? item.mem : (osLib.totalmem() * (item.mem / 100));\n\t\toutput.push(`${item.load.toFixed(0).padStart(5, ' ')}\\t${(memory / ByteSize.MB).toFixed(0).padStart(6, ' ')}\\t${item.pid.toFixed(0).padStart(6, ' ')}\\t${name}`);\n\n\t\t// Recurse into children if any\n\t\tif (Array.isArray(item.children)) {\n\t\t\titem.children.forEach(child => this.formatProcessItem(mainPid, mapPidToWindowTitle, output, child, indent + 1));\n\t\t}\n\t}\n\n\tpublic async reportWorkspaceStats(workspace: IWorkspaceInformation): Promise<void> {\n\t\tfor (const { uri } of workspace.folders) {\n\t\t\tconst folderUri = URI.revive(uri);\n\t\t\tif (folderUri.scheme !== Schemas.file) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst folder = folderUri.fsPath;\n\t\t\ttry {\n\t\t\t\tconst stats = await collectWorkspaceStats(folder, ['node_modules', '.git']);\n\t\t\t\ttype WorkspaceStatsClassification = {\n\t\t\t\t\t'workspace.id': { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t\t\trendererSessionId: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t\t};\n\t\t\t\ttype WorkspaceStatsEvent = {\n\t\t\t\t\t'workspace.id': string | undefined;\n\t\t\t\t\trendererSessionId: string;\n\t\t\t\t};\n\t\t\t\tthis.telemetryService.publicLog2<WorkspaceStatsEvent, WorkspaceStatsClassification>('workspace.stats', {\n\t\t\t\t\t'workspace.id': workspace.telemetryId,\n\t\t\t\t\trendererSessionId: workspace.rendererSessionId\n\t\t\t\t});\n\t\t\t\ttype WorkspaceStatsFileClassification = {\n\t\t\t\t\trendererSessionId: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t\t\ttype: { classification: 'SystemMetaData', purpose: 'FeatureInsight', isMeasurement: true };\n\t\t\t\t\tcount: { classification: 'SystemMetaData', purpose: 'FeatureInsight', isMeasurement: true };\n\t\t\t\t};\n\t\t\t\ttype WorkspaceStatsFileEvent = {\n\t\t\t\t\trendererSessionId: string;\n\t\t\t\t\ttype: string;\n\t\t\t\t\tcount: number;\n\t\t\t\t};\n\t\t\t\tstats.fileTypes.forEach(e => {\n\t\t\t\t\tthis.telemetryService.publicLog2<WorkspaceStatsFileEvent, WorkspaceStatsFileClassification>('workspace.stats.file', {\n\t\t\t\t\t\trendererSessionId: workspace.rendererSessionId,\n\t\t\t\t\t\ttype: e.name,\n\t\t\t\t\t\tcount: e.count\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tstats.launchConfigFiles.forEach(e => {\n\t\t\t\t\tthis.telemetryService.publicLog2<WorkspaceStatsFileEvent, WorkspaceStatsFileClassification>('workspace.stats.launchConfigFile', {\n\t\t\t\t\t\trendererSessionId: workspace.rendererSessionId,\n\t\t\t\t\t\ttype: e.name,\n\t\t\t\t\t\tcount: e.count\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tstats.configFiles.forEach(e => {\n\t\t\t\t\tthis.telemetryService.publicLog2<WorkspaceStatsFileEvent, WorkspaceStatsFileClassification>('workspace.stats.configFiles', {\n\t\t\t\t\t\trendererSessionId: workspace.rendererSessionId,\n\t\t\t\t\t\ttype: e.name,\n\t\t\t\t\t\tcount: e.count\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} catch {\n\t\t\t\t// Report nothing if collecting metadata fails.\n\t\t\t}\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isNonEmptyArray } from 'vs/base/common/arrays';\nimport { Barrier, CancelablePromise, createCancelablePromise } from 'vs/base/common/async';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled, getErrorMessage } from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { isWeb } from 'vs/base/common/platform';\nimport { isUndefined } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport * as nls from 'vs/nls';\nimport {\n\tDidUninstallExtensionEvent, ExtensionManagementError, IExtensionGalleryService, IExtensionIdentifier, IExtensionManagementParticipant, IExtensionManagementService, IGalleryExtension, IGalleryMetadata, ILocalExtension, InstallExtensionEvent, InstallExtensionResult, InstallOperation, InstallOptions,\n\tInstallVSIXOptions, IExtensionsControlManifest, StatisticType, UninstallOptions, TargetPlatform, isTargetPlatformCompatible, TargetPlatformToString, ExtensionManagementErrorCode\n} from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { areSameExtensions, ExtensionIdentifierWithVersion, getGalleryExtensionTelemetryData, getLocalExtensionTelemetryData, getMaliciousExtensionsSet } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { ExtensionType, IExtensionManifest } from 'vs/platform/extensions/common/extensions';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\n\nexport interface IInstallExtensionTask {\n\treadonly identifier: IExtensionIdentifier;\n\treadonly source: IGalleryExtension | URI;\n\treadonly operation: InstallOperation;\n\trun(): Promise<ILocalExtension>;\n\twaitUntilTaskIsFinished(): Promise<ILocalExtension>;\n\tcancel(): void;\n}\n\nexport type UninstallExtensionTaskOptions = { readonly remove?: boolean; readonly versionOnly?: boolean };\n\nexport interface IUninstallExtensionTask {\n\treadonly extension: ILocalExtension;\n\trun(): Promise<void>;\n\twaitUntilTaskIsFinished(): Promise<void>;\n\tcancel(): void;\n}\n\nexport abstract class AbstractExtensionManagementService extends Disposable implements IExtensionManagementService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate extensionsControlManifest: Promise<IExtensionsControlManifest> | undefined;\n\tprivate lastReportTimestamp = 0;\n\tprivate readonly installingExtensions = new Map<string, IInstallExtensionTask>();\n\tprivate readonly uninstallingExtensions = new Map<string, IUninstallExtensionTask>();\n\n\tprivate readonly _onInstallExtension = this._register(new Emitter<InstallExtensionEvent>());\n\treadonly onInstallExtension: Event<InstallExtensionEvent> = this._onInstallExtension.event;\n\n\tprotected readonly _onDidInstallExtensions = this._register(new Emitter<InstallExtensionResult[]>());\n\treadonly onDidInstallExtensions = this._onDidInstallExtensions.event;\n\n\tprotected readonly _onUninstallExtension = this._register(new Emitter<IExtensionIdentifier>());\n\treadonly onUninstallExtension: Event<IExtensionIdentifier> = this._onUninstallExtension.event;\n\n\tprotected _onDidUninstallExtension = this._register(new Emitter<DidUninstallExtensionEvent>());\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent> = this._onDidUninstallExtension.event;\n\n\tprivate readonly participants: IExtensionManagementParticipant[] = [];\n\n\tconstructor(\n\t\t@IExtensionGalleryService protected readonly galleryService: IExtensionGalleryService,\n\t\t@ITelemetryService protected readonly telemetryService: ITelemetryService,\n\t\t@ILogService protected readonly logService: ILogService,\n\t\t@IProductService protected readonly productService: IProductService\n\t) {\n\t\tsuper();\n\t\tthis._register(toDisposable(() => {\n\t\t\tthis.installingExtensions.forEach(task => task.cancel());\n\t\t\tthis.uninstallingExtensions.forEach(promise => promise.cancel());\n\t\t\tthis.installingExtensions.clear();\n\t\t\tthis.uninstallingExtensions.clear();\n\t\t}));\n\t}\n\n\tasync canInstall(extension: IGalleryExtension): Promise<boolean> {\n\t\tconst currentTargetPlatform = await this.getTargetPlatform();\n\t\treturn extension.allTargetPlatforms.some(targetPlatform => isTargetPlatformCompatible(targetPlatform, extension.allTargetPlatforms, currentTargetPlatform));\n\t}\n\n\tasync installFromGallery(extension: IGalleryExtension, options: InstallOptions = {}): Promise<ILocalExtension> {\n\t\ttry {\n\t\t\tif (!this.galleryService.isEnabled()) {\n\t\t\t\tthrow new ExtensionManagementError(nls.localize('MarketPlaceDisabled', \"Marketplace is not enabled\"), ExtensionManagementErrorCode.Internal);\n\t\t\t}\n\t\t\tconst compatible = await this.checkAndGetCompatibleVersion(extension, !options.installGivenVersion, !!options.installPreReleaseVersion);\n\t\t\treturn await this.installExtension(compatible.manifest, compatible.extension, options);\n\t\t} catch (error) {\n\t\t\treportTelemetry(this.telemetryService, 'extensionGallery:install', getGalleryExtensionTelemetryData(extension), undefined, error);\n\t\t\tthis.logService.error(`Failed to install extension.`, extension.identifier.id);\n\t\t\tthis.logService.error(error);\n\t\t\tthrow toExtensionManagementError(error);\n\t\t}\n\t}\n\n\tasync migrateUnsupportedExtensions(): Promise<void> {\n\t\ttry {\n\t\t\tconst extensionsControlManifest = await this.getExtensionsControlManifest();\n\t\t\tif (!extensionsControlManifest.unsupportedPreReleaseExtensions) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst installed = await this.getInstalled(ExtensionType.User);\n\t\t\tfor (const [unsupportedPreReleaseExtensionId, preReleaseExtension] of Object.entries(extensionsControlManifest.unsupportedPreReleaseExtensions)) {\n\t\t\t\tconst local = installed.find(i => areSameExtensions(i.identifier, { id: unsupportedPreReleaseExtensionId }));\n\t\t\t\tif (!local) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst gallery = await this.galleryService.getCompatibleExtension({ id: preReleaseExtension.id }, true, await this.getTargetPlatform());\n\t\t\t\tif (!gallery) {\n\t\t\t\t\tthis.logService.info(`Skipping migrating '${local.identifier.id}' extension because, the comaptible target '${preReleaseExtension.id}' extension is not found`);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst manifest = await this.galleryService.getManifest(gallery, CancellationToken.None);\n\t\t\t\tif (!manifest) {\n\t\t\t\t\tthis.logService.info(`Skipping migrating '${local.identifier.id}' extension because, the manifest for '${preReleaseExtension.id}' extension is not found`);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tthis.logService.info(`Migrating '${local.identifier.id}' extension to '${preReleaseExtension.id}' extension...`);\n\t\t\t\t\tawait Promise.allSettled([\n\t\t\t\t\t\tthis.uninstall(local),\n\t\t\t\t\t\tthis.installExtension(manifest, gallery, { installPreReleaseVersion: true, isMachineScoped: local.isMachineScoped, operation: InstallOperation.Migrate })\n\t\t\t\t\t]);\n\t\t\t\t\tthis.logService.info(`Migrated '${local.identifier.id}' extension to '${preReleaseExtension.id}' extension.`);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t}\n\t}\n\n\tasync uninstall(extension: ILocalExtension, options: UninstallOptions = {}): Promise<void> {\n\t\tthis.logService.trace('ExtensionManagementService#uninstall', extension.identifier.id);\n\t\treturn this.unininstallExtension(extension, options);\n\t}\n\n\tasync reinstallFromGallery(extension: ILocalExtension): Promise<void> {\n\t\tthis.logService.trace('ExtensionManagementService#reinstallFromGallery', extension.identifier.id);\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\tthrow new Error(nls.localize('MarketPlaceDisabled', \"Marketplace is not enabled\"));\n\t\t}\n\n\t\tconst galleryExtension = await this.findGalleryExtension(extension);\n\t\tif (!galleryExtension) {\n\t\t\tthrow new Error(nls.localize('Not a Marketplace extension', \"Only Marketplace Extensions can be reinstalled\"));\n\t\t}\n\n\t\tawait this.createUninstallExtensionTask(extension, { remove: true, versionOnly: true }).run();\n\t\tawait this.installFromGallery(galleryExtension);\n\t}\n\n\tgetExtensionsControlManifest(): Promise<IExtensionsControlManifest> {\n\t\tconst now = new Date().getTime();\n\n\t\tif (!this.extensionsControlManifest || now - this.lastReportTimestamp > 1000 * 60 * 5) { // 5 minute cache freshness\n\t\t\tthis.extensionsControlManifest = this.updateControlCache();\n\t\t\tthis.lastReportTimestamp = now;\n\t\t}\n\n\t\treturn this.extensionsControlManifest;\n\t}\n\n\tregisterParticipant(participant: IExtensionManagementParticipant): void {\n\t\tthis.participants.push(participant);\n\t}\n\n\tprotected async installExtension(manifest: IExtensionManifest, extension: URI | IGalleryExtension, options: InstallOptions & InstallVSIXOptions & { operation?: InstallOperation }): Promise<ILocalExtension> {\n\t\t// only cache gallery extensions tasks\n\t\tif (!URI.isUri(extension)) {\n\t\t\tlet installExtensionTask = this.installingExtensions.get(new ExtensionIdentifierWithVersion(extension.identifier, extension.version).key());\n\t\t\tif (installExtensionTask) {\n\t\t\t\tthis.logService.info('Extensions is already requested to install', extension.identifier.id);\n\t\t\t\treturn installExtensionTask.waitUntilTaskIsFinished();\n\t\t\t}\n\t\t\toptions = { ...options, installOnlyNewlyAddedFromExtensionPack: true /* always true for gallery extensions */ };\n\t\t}\n\n\t\tconst allInstallExtensionTasks: { task: IInstallExtensionTask, manifest: IExtensionManifest }[] = [];\n\t\tconst installResults: (InstallExtensionResult & { local: ILocalExtension })[] = [];\n\t\tconst installExtensionTask = this.createInstallExtensionTask(manifest, extension, options);\n\t\tif (!URI.isUri(extension)) {\n\t\t\tthis.installingExtensions.set(new ExtensionIdentifierWithVersion(installExtensionTask.identifier, manifest.version).key(), installExtensionTask);\n\t\t}\n\t\tthis._onInstallExtension.fire({ identifier: installExtensionTask.identifier, source: extension });\n\t\tthis.logService.info('Installing extension:', installExtensionTask.identifier.id);\n\t\tallInstallExtensionTasks.push({ task: installExtensionTask, manifest });\n\t\tlet installExtensionHasDependents: boolean = false;\n\n\t\ttry {\n\t\t\tif (options.donotIncludePackAndDependencies) {\n\t\t\t\tthis.logService.info('Installing the extension without checking dependencies and pack', installExtensionTask.identifier.id);\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tconst allDepsAndPackExtensionsToInstall = await this.getAllDepsAndPackExtensionsToInstall(installExtensionTask.identifier, manifest, !!options.installOnlyNewlyAddedFromExtensionPack, !!options.installPreReleaseVersion);\n\t\t\t\t\tfor (const { gallery, manifest } of allDepsAndPackExtensionsToInstall) {\n\t\t\t\t\t\tinstallExtensionHasDependents = installExtensionHasDependents || !!manifest.extensionDependencies?.some(id => areSameExtensions({ id }, installExtensionTask.identifier));\n\t\t\t\t\t\tif (this.installingExtensions.has(new ExtensionIdentifierWithVersion(gallery.identifier, gallery.version).key())) {\n\t\t\t\t\t\t\tthis.logService.info('Extension is already requested to install', gallery.identifier.id);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst task = this.createInstallExtensionTask(manifest, gallery, { ...options, donotIncludePackAndDependencies: true });\n\t\t\t\t\t\t\tthis.installingExtensions.set(new ExtensionIdentifierWithVersion(task.identifier, manifest.version).key(), task);\n\t\t\t\t\t\t\tthis._onInstallExtension.fire({ identifier: task.identifier, source: gallery });\n\t\t\t\t\t\t\tthis.logService.info('Installing extension:', task.identifier.id);\n\t\t\t\t\t\t\tallInstallExtensionTasks.push({ task, manifest });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// Installing through VSIX\n\t\t\t\t\tif (URI.isUri(installExtensionTask.source)) {\n\t\t\t\t\t\t// Ignore installing dependencies and packs\n\t\t\t\t\t\tif (isNonEmptyArray(manifest.extensionDependencies)) {\n\t\t\t\t\t\t\tthis.logService.warn(`Cannot install dependencies of extension:`, installExtensionTask.identifier.id, error.message);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (isNonEmptyArray(manifest.extensionPack)) {\n\t\t\t\t\t\t\tthis.logService.warn(`Cannot install packed extensions of extension:`, installExtensionTask.identifier.id, error.message);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.logService.error('Error while preparing to install dependencies and extension packs of the extension:', installExtensionTask.identifier.id);\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst extensionsToInstallMap = allInstallExtensionTasks.reduce((result, { task, manifest }) => {\n\t\t\t\tresult.set(task.identifier.id.toLowerCase(), { task, manifest });\n\t\t\t\treturn result;\n\t\t\t}, new Map<string, { task: IInstallExtensionTask, manifest: IExtensionManifest }>());\n\n\t\t\twhile (extensionsToInstallMap.size) {\n\t\t\t\tlet extensionsToInstall;\n\t\t\t\tconst extensionsWithoutDepsToInstall = [...extensionsToInstallMap.values()].filter(({ manifest }) => !manifest.extensionDependencies?.some(id => extensionsToInstallMap.has(id.toLowerCase())));\n\t\t\t\tif (extensionsWithoutDepsToInstall.length) {\n\t\t\t\t\textensionsToInstall = extensionsToInstallMap.size === 1 ? extensionsWithoutDepsToInstall\n\t\t\t\t\t\t/* If the main extension has no dependents remove it and install it at the end */\n\t\t\t\t\t\t: extensionsWithoutDepsToInstall.filter(({ task }) => !(task === installExtensionTask && !installExtensionHasDependents));\n\t\t\t\t} else {\n\t\t\t\t\tthis.logService.info('Found extensions with circular dependencies', extensionsWithoutDepsToInstall.map(({ task }) => task.identifier.id));\n\t\t\t\t\textensionsToInstall = [...extensionsToInstallMap.values()];\n\t\t\t\t}\n\n\t\t\t\t// Install extensions in parallel and wait until all extensions are installed / failed\n\t\t\t\tawait this.joinAllSettled(extensionsToInstall.map(async ({ task }) => {\n\t\t\t\t\tconst startTime = new Date().getTime();\n\t\t\t\t\tconst operation = isUndefined(options.operation) ? task.operation : options.operation;\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst local = await task.run();\n\t\t\t\t\t\tawait this.joinAllSettled(this.participants.map(participant => participant.postInstall(local, task.source, options, CancellationToken.None)));\n\t\t\t\t\t\tif (!URI.isUri(task.source)) {\n\t\t\t\t\t\t\treportTelemetry(this.telemetryService, operation === InstallOperation.Update ? 'extensionGallery:update' : 'extensionGallery:install', getGalleryExtensionTelemetryData(task.source), new Date().getTime() - startTime, undefined);\n\t\t\t\t\t\t\t// In web, report extension install statistics explicitly. In Desktop, statistics are automatically updated while downloading the VSIX.\n\t\t\t\t\t\t\tif (isWeb && operation !== InstallOperation.Update) {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tawait this.galleryService.reportStatistic(local.manifest.publisher, local.manifest.name, local.manifest.version, StatisticType.Install);\n\t\t\t\t\t\t\t\t} catch (error) { /* ignore */ }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinstallResults.push({ local, identifier: task.identifier, operation, source: task.source });\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tif (!URI.isUri(task.source)) {\n\t\t\t\t\t\t\treportTelemetry(this.telemetryService, operation === InstallOperation.Update ? 'extensionGallery:update' : 'extensionGallery:install', getGalleryExtensionTelemetryData(task.source), new Date().getTime() - startTime, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.logService.error('Error while installing the extension:', task.identifier.id);\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t} finally { extensionsToInstallMap.delete(task.identifier.id.toLowerCase()); }\n\t\t\t\t}));\n\t\t\t}\n\n\t\t\tinstallResults.forEach(({ identifier }) => this.logService.info(`Extension installed successfully:`, identifier.id));\n\t\t\tthis._onDidInstallExtensions.fire(installResults);\n\t\t\treturn installResults.filter(({ identifier }) => areSameExtensions(identifier, installExtensionTask.identifier))[0].local;\n\n\t\t} catch (error) {\n\n\t\t\t// cancel all tasks\n\t\t\tallInstallExtensionTasks.forEach(({ task }) => task.cancel());\n\n\t\t\t// rollback installed extensions\n\t\t\tif (installResults.length) {\n\t\t\t\ttry {\n\t\t\t\t\tconst result = await Promise.allSettled(installResults.map(({ local }) => this.createUninstallExtensionTask(local, { versionOnly: true }).run()));\n\t\t\t\t\tfor (let index = 0; index < result.length; index++) {\n\t\t\t\t\t\tconst r = result[index];\n\t\t\t\t\t\tconst { identifier } = installResults[index];\n\t\t\t\t\t\tif (r.status === 'fulfilled') {\n\t\t\t\t\t\t\tthis.logService.info('Rollback: Uninstalled extension', identifier.id);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.logService.warn('Rollback: Error while uninstalling extension', identifier.id, getErrorMessage(r.reason));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// ignore error\n\t\t\t\t\tthis.logService.warn('Error while rolling back extensions', getErrorMessage(error), installResults.map(({ identifier }) => identifier.id));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._onDidInstallExtensions.fire(allInstallExtensionTasks.map(({ task }) => ({ identifier: task.identifier, operation: InstallOperation.Install, source: task.source })));\n\t\t\tthrow error;\n\t\t} finally {\n\t\t\t/* Remove the gallery tasks from the cache */\n\t\t\tfor (const { task, manifest } of allInstallExtensionTasks) {\n\t\t\t\tif (!URI.isUri(task.source)) {\n\t\t\t\t\tconst key = new ExtensionIdentifierWithVersion(task.identifier, manifest.version).key();\n\t\t\t\t\tif (!this.installingExtensions.delete(key)) {\n\t\t\t\t\t\tthis.logService.warn('Installation task is not found in the cache', key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async joinAllSettled<T>(promises: Promise<T>[]): Promise<T[]> {\n\t\tconst results: T[] = [];\n\t\tconst errors: any[] = [];\n\t\tconst promiseResults = await Promise.allSettled(promises);\n\t\tfor (const r of promiseResults) {\n\t\t\tif (r.status === 'fulfilled') {\n\t\t\t\tresults.push(r.value);\n\t\t\t} else {\n\t\t\t\terrors.push(r.reason);\n\t\t\t}\n\t\t}\n\t\t// If there are errors, throw the error.\n\t\tif (errors.length) { throw joinErrors(errors); }\n\t\treturn results;\n\t}\n\n\tprivate async getAllDepsAndPackExtensionsToInstall(extensionIdentifier: IExtensionIdentifier, manifest: IExtensionManifest, getOnlyNewlyAddedFromExtensionPack: boolean, installPreRelease: boolean): Promise<{ gallery: IGalleryExtension, manifest: IExtensionManifest }[]> {\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\treturn [];\n\t\t}\n\n\t\tlet installed = await this.getInstalled();\n\t\tconst knownIdentifiers = [extensionIdentifier, ...(installed).map(i => i.identifier)];\n\n\t\tconst allDependenciesAndPacks: { gallery: IGalleryExtension, manifest: IExtensionManifest }[] = [];\n\t\tconst collectDependenciesAndPackExtensionsToInstall = async (extensionIdentifier: IExtensionIdentifier, manifest: IExtensionManifest): Promise<void> => {\n\t\t\tconst dependecies: string[] = manifest.extensionDependencies || [];\n\t\t\tconst dependenciesAndPackExtensions = [...dependecies];\n\t\t\tif (manifest.extensionPack) {\n\t\t\t\tconst existing = getOnlyNewlyAddedFromExtensionPack ? installed.find(e => areSameExtensions(e.identifier, extensionIdentifier)) : undefined;\n\t\t\t\tfor (const extension of manifest.extensionPack) {\n\t\t\t\t\t// add only those extensions which are new in currently installed extension\n\t\t\t\t\tif (!(existing && existing.manifest.extensionPack && existing.manifest.extensionPack.some(old => areSameExtensions({ id: old }, { id: extension })))) {\n\t\t\t\t\t\tif (dependenciesAndPackExtensions.every(e => !areSameExtensions({ id: e }, { id: extension }))) {\n\t\t\t\t\t\t\tdependenciesAndPackExtensions.push(extension);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (dependenciesAndPackExtensions.length) {\n\t\t\t\t// filter out installed and known extensions\n\t\t\t\tconst identifiers = [...knownIdentifiers, ...allDependenciesAndPacks.map(r => r.gallery.identifier)];\n\t\t\t\tconst names = dependenciesAndPackExtensions.filter(id => identifiers.every(galleryIdentifier => !areSameExtensions(galleryIdentifier, { id })));\n\t\t\t\tif (names.length) {\n\t\t\t\t\tconst galleryResult = await this.galleryService.query({ names, pageSize: dependenciesAndPackExtensions.length }, CancellationToken.None);\n\t\t\t\t\tfor (const galleryExtension of galleryResult.firstPage) {\n\t\t\t\t\t\tif (identifiers.find(identifier => areSameExtensions(identifier, galleryExtension.identifier))) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst isDependency = dependecies.some(id => areSameExtensions({ id }, galleryExtension.identifier));\n\t\t\t\t\t\tlet compatible;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tcompatible = await this.checkAndGetCompatibleVersion(galleryExtension, true, installPreRelease);\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tif (error instanceof ExtensionManagementError && error.code === ExtensionManagementErrorCode.IncompatibleTargetPlatform && !isDependency) {\n\t\t\t\t\t\t\t\tthis.logService.info('Skipping the packed extension as it cannot be installed', galleryExtension.identifier.id);\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tallDependenciesAndPacks.push({ gallery: compatible.extension, manifest: compatible.manifest });\n\t\t\t\t\t\tawait collectDependenciesAndPackExtensionsToInstall(compatible.extension.identifier, manifest);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tawait collectDependenciesAndPackExtensionsToInstall(extensionIdentifier, manifest);\n\t\tinstalled = await this.getInstalled();\n\t\treturn allDependenciesAndPacks.filter(e => !installed.some(i => areSameExtensions(i.identifier, e.gallery.identifier)));\n\t}\n\n\tprivate async checkAndGetCompatibleVersion(extension: IGalleryExtension, fetchCompatibleVersion: boolean, installPreRelease: boolean): Promise<{ extension: IGalleryExtension, manifest: IExtensionManifest }> {\n\t\tconst report = await this.getExtensionsControlManifest();\n\t\tif (getMaliciousExtensionsSet(report).has(extension.identifier.id)) {\n\t\t\tthrow new ExtensionManagementError(nls.localize('malicious extension', \"Can't install '{0}' extension since it was reported to be problematic.\", extension.identifier.id), ExtensionManagementErrorCode.Malicious);\n\t\t}\n\n\t\tif (!!report.unsupportedPreReleaseExtensions && !!report.unsupportedPreReleaseExtensions[extension.identifier.id]) {\n\t\t\tthrow new ExtensionManagementError(nls.localize('unsupported prerelease extension', \"Can't install '{0}' extension because it is no longer supported. It is now part of the '{1}' extension as a pre-release version.\", extension.identifier.id, report.unsupportedPreReleaseExtensions[extension.identifier.id].displayName), ExtensionManagementErrorCode.UnsupportedPreRelease);\n\t\t}\n\n\t\tif (!await this.canInstall(extension)) {\n\t\t\tconst targetPlatform = await this.getTargetPlatform();\n\t\t\tthrow new ExtensionManagementError(nls.localize('incompatible platform', \"The '{0}' extension is not available in {1} for {2}.\", extension.identifier.id, this.productService.nameLong, TargetPlatformToString(targetPlatform)), ExtensionManagementErrorCode.IncompatibleTargetPlatform);\n\t\t}\n\n\t\tconst compatibleExtension = await this.getCompatibleVersion(extension, fetchCompatibleVersion, installPreRelease);\n\t\tif (compatibleExtension) {\n\t\t\tif (installPreRelease && extension.hasPreReleaseVersion && !compatibleExtension.properties.isPreReleaseVersion) {\n\t\t\t\tthrow new ExtensionManagementError(nls.localize('notFoundCompatiblePrereleaseDependency', \"Can't install pre-release version of '{0}' extension because it is not compatible with the current version of {1} (version {2}).\", extension.identifier.id, this.productService.nameLong, this.productService.version), ExtensionManagementErrorCode.IncompatiblePreRelease);\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new ExtensionManagementError(nls.localize('notFoundCompatibleDependency', \"Can't install '{0}' extension because it is not compatible with the current version of {1} (version {2}).\", extension.identifier.id, this.productService.nameLong, this.productService.version), ExtensionManagementErrorCode.Incompatible);\n\t\t}\n\n\t\tconst manifest = await this.galleryService.getManifest(compatibleExtension, CancellationToken.None);\n\t\tif (manifest === null) {\n\t\t\tthrow new ExtensionManagementError(`Missing manifest for extension ${extension.identifier.id}`, ExtensionManagementErrorCode.Invalid);\n\t\t}\n\n\t\tif (manifest.version !== compatibleExtension.version) {\n\t\t\tthrow new ExtensionManagementError(`Cannot install '${extension.identifier.id}' extension because of version mismatch in Marketplace`, ExtensionManagementErrorCode.Invalid);\n\t\t}\n\n\t\treturn { extension: compatibleExtension, manifest };\n\t}\n\n\tprotected async getCompatibleVersion(extension: IGalleryExtension, fetchCompatibleVersion: boolean, includePreRelease: boolean): Promise<IGalleryExtension | null> {\n\t\tconst targetPlatform = await this.getTargetPlatform();\n\t\tlet compatibleExtension: IGalleryExtension | null = null;\n\n\t\tif (fetchCompatibleVersion && extension.hasPreReleaseVersion && extension.properties.isPreReleaseVersion !== includePreRelease) {\n\t\t\tcompatibleExtension = await this.galleryService.getCompatibleExtension(extension.identifier, includePreRelease, targetPlatform);\n\t\t}\n\n\t\tif (!compatibleExtension && await this.galleryService.isExtensionCompatible(extension, includePreRelease, targetPlatform)) {\n\t\t\tcompatibleExtension = extension;\n\t\t}\n\n\t\tif (!compatibleExtension && fetchCompatibleVersion) {\n\t\t\tcompatibleExtension = await this.galleryService.getCompatibleExtension(extension, includePreRelease, targetPlatform);\n\t\t}\n\n\t\treturn compatibleExtension;\n\t}\n\n\tprivate async unininstallExtension(extension: ILocalExtension, options: UninstallOptions): Promise<void> {\n\t\tconst uninstallExtensionTask = this.uninstallingExtensions.get(extension.identifier.id.toLowerCase());\n\t\tif (uninstallExtensionTask) {\n\t\t\tthis.logService.info('Extensions is already requested to uninstall', extension.identifier.id);\n\t\t\treturn uninstallExtensionTask.waitUntilTaskIsFinished();\n\t\t}\n\n\t\tconst createUninstallExtensionTask = (extension: ILocalExtension, options: UninstallExtensionTaskOptions): IUninstallExtensionTask => {\n\t\t\tconst uninstallExtensionTask = this.createUninstallExtensionTask(extension, options);\n\t\t\tthis.uninstallingExtensions.set(uninstallExtensionTask.extension.identifier.id.toLowerCase(), uninstallExtensionTask);\n\t\t\tthis.logService.info('Uninstalling extension:', extension.identifier.id);\n\t\t\tthis._onUninstallExtension.fire(extension.identifier);\n\t\t\treturn uninstallExtensionTask;\n\t\t};\n\n\t\tconst postUninstallExtension = (extension: ILocalExtension, error?: ExtensionManagementError): void => {\n\t\t\tif (error) {\n\t\t\t\tthis.logService.error('Failed to uninstall extension:', extension.identifier.id, error.message);\n\t\t\t} else {\n\t\t\t\tthis.logService.info('Successfully uninstalled extension:', extension.identifier.id);\n\t\t\t}\n\t\t\treportTelemetry(this.telemetryService, 'extensionGallery:uninstall', getLocalExtensionTelemetryData(extension), undefined, error);\n\t\t\tthis._onDidUninstallExtension.fire({ identifier: extension.identifier, error: error?.code });\n\t\t};\n\n\t\tconst allTasks: IUninstallExtensionTask[] = [];\n\t\tconst processedTasks: IUninstallExtensionTask[] = [];\n\n\t\ttry {\n\t\t\tallTasks.push(createUninstallExtensionTask(extension, {}));\n\t\t\tconst installed = await this.getInstalled(ExtensionType.User);\n\n\t\t\tif (options.donotIncludePack) {\n\t\t\t\tthis.logService.info('Uninstalling the extension without including packed extension', extension.identifier.id);\n\t\t\t} else {\n\t\t\t\tconst packedExtensions = this.getAllPackExtensionsToUninstall(extension, installed);\n\t\t\t\tfor (const packedExtension of packedExtensions) {\n\t\t\t\t\tif (this.uninstallingExtensions.has(packedExtension.identifier.id.toLowerCase())) {\n\t\t\t\t\t\tthis.logService.info('Extensions is already requested to uninstall', packedExtension.identifier.id);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tallTasks.push(createUninstallExtensionTask(packedExtension, {}));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (options.donotCheckDependents) {\n\t\t\t\tthis.logService.info('Uninstalling the extension without checking dependents', extension.identifier.id);\n\t\t\t} else {\n\t\t\t\tthis.checkForDependents(allTasks.map(task => task.extension), installed, extension);\n\t\t\t}\n\n\t\t\t// Uninstall extensions in parallel and wait until all extensions are uninstalled / failed\n\t\t\tawait this.joinAllSettled(allTasks.map(async task => {\n\t\t\t\ttry {\n\t\t\t\t\tawait task.run();\n\t\t\t\t\tawait this.joinAllSettled(this.participants.map(participant => participant.postUninstall(task.extension, options, CancellationToken.None)));\n\t\t\t\t\t// only report if extension has a mapped gallery extension. UUID identifies the gallery extension.\n\t\t\t\t\tif (task.extension.identifier.uuid) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tawait this.galleryService.reportStatistic(task.extension.manifest.publisher, task.extension.manifest.name, task.extension.manifest.version, StatisticType.Uninstall);\n\t\t\t\t\t\t} catch (error) { /* ignore */ }\n\t\t\t\t\t}\n\t\t\t\t\tpostUninstallExtension(task.extension);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconst error = e instanceof ExtensionManagementError ? e : new ExtensionManagementError(getErrorMessage(e), ExtensionManagementErrorCode.Internal);\n\t\t\t\t\tpostUninstallExtension(task.extension, error);\n\t\t\t\t\tthrow error;\n\t\t\t\t} finally {\n\t\t\t\t\tprocessedTasks.push(task);\n\t\t\t\t}\n\t\t\t}));\n\n\t\t} catch (e) {\n\t\t\tconst error = e instanceof ExtensionManagementError ? e : new ExtensionManagementError(getErrorMessage(e), ExtensionManagementErrorCode.Internal);\n\t\t\tfor (const task of allTasks) {\n\t\t\t\t// cancel the tasks\n\t\t\t\ttry { task.cancel(); } catch (error) { /* ignore */ }\n\t\t\t\tif (!processedTasks.includes(task)) {\n\t\t\t\t\tpostUninstallExtension(task.extension, error);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrow error;\n\t\t} finally {\n\t\t\t// Remove tasks from cache\n\t\t\tfor (const task of allTasks) {\n\t\t\t\tif (!this.uninstallingExtensions.delete(task.extension.identifier.id.toLowerCase())) {\n\t\t\t\t\tthis.logService.warn('Uninstallation task is not found in the cache', task.extension.identifier.id);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate checkForDependents(extensionsToUninstall: ILocalExtension[], installed: ILocalExtension[], extensionToUninstall: ILocalExtension): void {\n\t\tfor (const extension of extensionsToUninstall) {\n\t\t\tconst dependents = this.getDependents(extension, installed);\n\t\t\tif (dependents.length) {\n\t\t\t\tconst remainingDependents = dependents.filter(dependent => !extensionsToUninstall.some(e => areSameExtensions(e.identifier, dependent.identifier)));\n\t\t\t\tif (remainingDependents.length) {\n\t\t\t\t\tthrow new Error(this.getDependentsErrorMessage(extension, remainingDependents, extensionToUninstall));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getDependentsErrorMessage(dependingExtension: ILocalExtension, dependents: ILocalExtension[], extensionToUninstall: ILocalExtension): string {\n\t\tif (extensionToUninstall === dependingExtension) {\n\t\t\tif (dependents.length === 1) {\n\t\t\t\treturn nls.localize('singleDependentError', \"Cannot uninstall '{0}' extension. '{1}' extension depends on this.\",\n\t\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name);\n\t\t\t}\n\t\t\tif (dependents.length === 2) {\n\t\t\t\treturn nls.localize('twoDependentsError', \"Cannot uninstall '{0}' extension. '{1}' and '{2}' extensions depend on this.\",\n\t\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t\t\t}\n\t\t\treturn nls.localize('multipleDependentsError', \"Cannot uninstall '{0}' extension. '{1}', '{2}' and other extension depend on this.\",\n\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t\t}\n\t\tif (dependents.length === 1) {\n\t\t\treturn nls.localize('singleIndirectDependentError', \"Cannot uninstall '{0}' extension . It includes uninstalling '{1}' extension and '{2}' extension depends on this.\",\n\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependingExtension.manifest.displayName\n\t\t\t|| dependingExtension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name);\n\t\t}\n\t\tif (dependents.length === 2) {\n\t\t\treturn nls.localize('twoIndirectDependentsError', \"Cannot uninstall '{0}' extension. It includes uninstalling '{1}' extension and '{2}' and '{3}' extensions depend on this.\",\n\t\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependingExtension.manifest.displayName\n\t\t\t|| dependingExtension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\t\t}\n\t\treturn nls.localize('multipleIndirectDependentsError', \"Cannot uninstall '{0}' extension. It includes uninstalling '{1}' extension and '{2}', '{3}' and other extensions depend on this.\",\n\t\t\textensionToUninstall.manifest.displayName || extensionToUninstall.manifest.name, dependingExtension.manifest.displayName\n\t\t|| dependingExtension.manifest.name, dependents[0].manifest.displayName || dependents[0].manifest.name, dependents[1].manifest.displayName || dependents[1].manifest.name);\n\n\t}\n\n\tprivate getAllPackExtensionsToUninstall(extension: ILocalExtension, installed: ILocalExtension[], checked: ILocalExtension[] = []): ILocalExtension[] {\n\t\tif (checked.indexOf(extension) !== -1) {\n\t\t\treturn [];\n\t\t}\n\t\tchecked.push(extension);\n\t\tconst extensionsPack = extension.manifest.extensionPack ? extension.manifest.extensionPack : [];\n\t\tif (extensionsPack.length) {\n\t\t\tconst packedExtensions = installed.filter(i => !i.isBuiltin && extensionsPack.some(id => areSameExtensions({ id }, i.identifier)));\n\t\t\tconst packOfPackedExtensions: ILocalExtension[] = [];\n\t\t\tfor (const packedExtension of packedExtensions) {\n\t\t\t\tpackOfPackedExtensions.push(...this.getAllPackExtensionsToUninstall(packedExtension, installed, checked));\n\t\t\t}\n\t\t\treturn [...packedExtensions, ...packOfPackedExtensions];\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate getDependents(extension: ILocalExtension, installed: ILocalExtension[]): ILocalExtension[] {\n\t\treturn installed.filter(e => e.manifest.extensionDependencies && e.manifest.extensionDependencies.some(id => areSameExtensions({ id }, extension.identifier)));\n\t}\n\n\tprivate async findGalleryExtension(local: ILocalExtension): Promise<IGalleryExtension> {\n\t\tif (local.identifier.uuid) {\n\t\t\tconst galleryExtension = await this.findGalleryExtensionById(local.identifier.uuid);\n\t\t\treturn galleryExtension ? galleryExtension : this.findGalleryExtensionByName(local.identifier.id);\n\t\t}\n\t\treturn this.findGalleryExtensionByName(local.identifier.id);\n\t}\n\n\tprivate async findGalleryExtensionById(uuid: string): Promise<IGalleryExtension> {\n\t\tconst galleryResult = await this.galleryService.query({ ids: [uuid], pageSize: 1 }, CancellationToken.None);\n\t\treturn galleryResult.firstPage[0];\n\t}\n\n\tprivate async findGalleryExtensionByName(name: string): Promise<IGalleryExtension> {\n\t\tconst galleryResult = await this.galleryService.query({ names: [name], pageSize: 1 }, CancellationToken.None);\n\t\treturn galleryResult.firstPage[0];\n\t}\n\n\tprivate async updateControlCache(): Promise<IExtensionsControlManifest> {\n\t\ttry {\n\t\t\tthis.logService.trace('ExtensionManagementService.refreshReportedCache');\n\t\t\tconst manifest = await this.galleryService.getExtensionsControlManifest();\n\t\t\tthis.logService.trace(`ExtensionManagementService.refreshControlCache`, manifest);\n\t\t\treturn manifest;\n\t\t} catch (err) {\n\t\t\tthis.logService.trace('ExtensionManagementService.refreshControlCache - failed to get extension control manifest');\n\t\t\treturn { malicious: [] };\n\t\t}\n\t}\n\n\tabstract getTargetPlatform(): Promise<TargetPlatform>;\n\tabstract zip(extension: ILocalExtension): Promise<URI>;\n\tabstract unzip(zipLocation: URI): Promise<IExtensionIdentifier>;\n\tabstract getManifest(vsix: URI): Promise<IExtensionManifest>;\n\tabstract install(vsix: URI, options?: InstallVSIXOptions): Promise<ILocalExtension>;\n\tabstract getInstalled(type?: ExtensionType): Promise<ILocalExtension[]>;\n\n\tabstract updateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension>;\n\tabstract updateExtensionScope(local: ILocalExtension, isMachineScoped: boolean): Promise<ILocalExtension>;\n\n\tprotected abstract createInstallExtensionTask(manifest: IExtensionManifest, extension: URI | IGalleryExtension, options: InstallOptions & InstallVSIXOptions): IInstallExtensionTask;\n\tprotected abstract createUninstallExtensionTask(extension: ILocalExtension, options: UninstallExtensionTaskOptions): IUninstallExtensionTask;\n}\n\nexport function joinErrors(errorOrErrors: (Error | string) | (Array<Error | string>)): Error {\n\tconst errors = Array.isArray(errorOrErrors) ? errorOrErrors : [errorOrErrors];\n\tif (errors.length === 1) {\n\t\treturn errors[0] instanceof Error ? <Error>errors[0] : new Error(<string>errors[0]);\n\t}\n\treturn errors.reduce<Error>((previousValue: Error, currentValue: Error | string) => {\n\t\treturn new Error(`${previousValue.message}${previousValue.message ? ',' : ''}${currentValue instanceof Error ? currentValue.message : currentValue}`);\n\t}, new Error(''));\n}\n\nfunction toExtensionManagementError(error: Error): ExtensionManagementError {\n\tif (error instanceof ExtensionManagementError) {\n\t\treturn error;\n\t}\n\tconst e = new ExtensionManagementError(error.message, ExtensionManagementErrorCode.Internal);\n\te.stack = error.stack;\n\treturn e;\n}\n\nexport function reportTelemetry(telemetryService: ITelemetryService, eventName: string, extensionData: any, duration?: number, error?: Error): void {\n\tconst errorcode = error ? error instanceof ExtensionManagementError ? error.code : ExtensionManagementErrorCode.Internal : undefined;\n\t/* __GDPR__\n\t\t\"extensionGallery:install\" : {\n\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\"recommendationReason\": { \"retiredFromVersion\": \"1.23.0\", \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\"${include}\": [\n\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t]\n\t\t}\n\t*/\n\t/* __GDPR__\n\t\t\"extensionGallery:uninstall\" : {\n\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\"${include}\": [\n\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t]\n\t\t}\n\t*/\n\t/* __GDPR__\n\t\t\"extensionGallery:update\" : {\n\t\t\t\"success\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\"duration\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\"errorcode\": { \"classification\": \"CallstackOrException\", \"purpose\": \"PerformanceAndHealth\" },\n\t\t\t\"${include}\": [\n\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t]\n\t\t}\n\t*/\n\ttelemetryService.publicLogError(eventName, { ...extensionData, success: !error, duration, errorcode });\n}\n\nexport abstract class AbstractExtensionTask<T> {\n\n\tprivate readonly barrier = new Barrier();\n\tprivate cancellablePromise: CancelablePromise<T> | undefined;\n\n\tasync waitUntilTaskIsFinished(): Promise<T> {\n\t\tawait this.barrier.wait();\n\t\treturn this.cancellablePromise!;\n\t}\n\n\tasync run(): Promise<T> {\n\t\tif (!this.cancellablePromise) {\n\t\t\tthis.cancellablePromise = createCancelablePromise(token => this.doRun(token));\n\t\t}\n\t\tthis.barrier.open();\n\t\treturn this.cancellablePromise;\n\t}\n\n\tcancel(): void {\n\t\tif (!this.cancellablePromise) {\n\t\t\tthis.cancellablePromise = createCancelablePromise(token => {\n\t\t\t\treturn new Promise((c, e) => {\n\t\t\t\t\tconst disposable = token.onCancellationRequested(() => {\n\t\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\t\te(canceled());\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t\tthis.barrier.open();\n\t\t}\n\t\tthis.cancellablePromise.cancel();\n\t}\n\n\tprotected abstract doRun(token: CancellationToken): Promise<T>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isNonEmptyArray } from 'vs/base/common/arrays';\nimport { disposableTimeout, timeout } from 'vs/base/common/async';\nimport { forEach, IStringDictionary } from 'vs/base/common/collections';\nimport { Event } from 'vs/base/common/event';\nimport { join } from 'vs/base/common/path';\nimport { isWindows } from 'vs/base/common/platform';\nimport { env } from 'vs/base/common/process';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IExecutableBasedExtensionTip, IExtensionManagementService, ILocalExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionTipsService as BaseExtensionTipsService } from 'vs/platform/extensionManagement/common/extensionTipsService';\nimport { IExtensionRecommendationNotificationService, RecommendationsNotificationResult, RecommendationSource } from 'vs/platform/extensionRecommendations/common/extensionRecommendations';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { INativeHostService } from 'vs/platform/native/electron-sandbox/native';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IRequestService } from 'vs/platform/request/common/request';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\n\ntype ExeExtensionRecommendationsClassification = {\n\textensionId: { classification: 'PublicNonPersonalData', purpose: 'FeatureInsight' };\n\texeName: { classification: 'PublicNonPersonalData', purpose: 'FeatureInsight' };\n};\n\ntype IExeBasedExtensionTips = {\n\treadonly exeFriendlyName: string,\n\treadonly windowsPath?: string,\n\treadonly recommendations: { extensionId: string, extensionName: string, isExtensionPack: boolean }[];\n};\n\nconst promptedExecutableTipsStorageKey = 'extensionTips/promptedExecutableTips';\nconst lastPromptedMediumImpExeTimeStorageKey = 'extensionTips/lastPromptedMediumImpExeTime';\n\nexport class ExtensionTipsService extends BaseExtensionTipsService {\n\n\toverride _serviceBrand: any;\n\n\tprivate readonly highImportanceExecutableTips: Map<string, IExeBasedExtensionTips> = new Map<string, IExeBasedExtensionTips>();\n\tprivate readonly mediumImportanceExecutableTips: Map<string, IExeBasedExtensionTips> = new Map<string, IExeBasedExtensionTips>();\n\tprivate readonly allOtherExecutableTips: Map<string, IExeBasedExtensionTips> = new Map<string, IExeBasedExtensionTips>();\n\n\tprivate highImportanceTipsByExe = new Map<string, IExecutableBasedExtensionTip[]>();\n\tprivate mediumImportanceTipsByExe = new Map<string, IExecutableBasedExtensionTip[]>();\n\n\tconstructor(\n\t\t@INativeEnvironmentService private readonly environmentService: INativeEnvironmentService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@INativeHostService private readonly nativeHostService: INativeHostService,\n\t\t@IExtensionRecommendationNotificationService private readonly extensionRecommendationNotificationService: IExtensionRecommendationNotificationService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IProductService productService: IProductService,\n\t\t@IRequestService requestService: IRequestService,\n\t\t@ILogService logService: ILogService,\n\t) {\n\t\tsuper(fileService, productService, requestService, logService);\n\t\tif (productService.exeBasedExtensionTips) {\n\t\t\tforEach(productService.exeBasedExtensionTips, ({ key, value: exeBasedExtensionTip }) => {\n\t\t\t\tconst highImportanceRecommendations: { extensionId: string, extensionName: string, isExtensionPack: boolean }[] = [];\n\t\t\t\tconst mediumImportanceRecommendations: { extensionId: string, extensionName: string, isExtensionPack: boolean }[] = [];\n\t\t\t\tconst otherRecommendations: { extensionId: string, extensionName: string, isExtensionPack: boolean }[] = [];\n\t\t\t\tforEach(exeBasedExtensionTip.recommendations, ({ key: extensionId, value }) => {\n\t\t\t\t\tif (value.important) {\n\t\t\t\t\t\tif (exeBasedExtensionTip.important) {\n\t\t\t\t\t\t\thighImportanceRecommendations.push({ extensionId, extensionName: value.name, isExtensionPack: !!value.isExtensionPack });\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmediumImportanceRecommendations.push({ extensionId, extensionName: value.name, isExtensionPack: !!value.isExtensionPack });\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\totherRecommendations.push({ extensionId, extensionName: value.name, isExtensionPack: !!value.isExtensionPack });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tif (highImportanceRecommendations.length) {\n\t\t\t\t\tthis.highImportanceExecutableTips.set(key, { exeFriendlyName: exeBasedExtensionTip.friendlyName, windowsPath: exeBasedExtensionTip.windowsPath, recommendations: highImportanceRecommendations });\n\t\t\t\t}\n\t\t\t\tif (mediumImportanceRecommendations.length) {\n\t\t\t\t\tthis.mediumImportanceExecutableTips.set(key, { exeFriendlyName: exeBasedExtensionTip.friendlyName, windowsPath: exeBasedExtensionTip.windowsPath, recommendations: mediumImportanceRecommendations });\n\t\t\t\t}\n\t\t\t\tif (otherRecommendations.length) {\n\t\t\t\t\tthis.allOtherExecutableTips.set(key, { exeFriendlyName: exeBasedExtensionTip.friendlyName, windowsPath: exeBasedExtensionTip.windowsPath, recommendations: otherRecommendations });\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t/*\n\t\t\t3s has come out to be the good number to fetch and prompt important exe based recommendations\n\t\t\tAlso fetch important exe based recommendations for reporting telemetry\n\t\t*/\n\t\ttimeout(3000).then(async () => {\n\t\t\tawait this.collectTips();\n\t\t\tthis.promptHighImportanceExeBasedTip();\n\t\t\tthis.promptMediumImportanceExeBasedTip();\n\t\t});\n\t}\n\n\toverride async getImportantExecutableBasedTips(): Promise<IExecutableBasedExtensionTip[]> {\n\t\tconst highImportanceExeTips = await this.getValidExecutableBasedExtensionTips(this.highImportanceExecutableTips);\n\t\tconst mediumImportanceExeTips = await this.getValidExecutableBasedExtensionTips(this.mediumImportanceExecutableTips);\n\t\treturn [...highImportanceExeTips, ...mediumImportanceExeTips];\n\t}\n\n\toverride getOtherExecutableBasedTips(): Promise<IExecutableBasedExtensionTip[]> {\n\t\treturn this.getValidExecutableBasedExtensionTips(this.allOtherExecutableTips);\n\t}\n\n\tprivate async collectTips(): Promise<void> {\n\t\tconst highImportanceExeTips = await this.getValidExecutableBasedExtensionTips(this.highImportanceExecutableTips);\n\t\tconst mediumImportanceExeTips = await this.getValidExecutableBasedExtensionTips(this.mediumImportanceExecutableTips);\n\t\tconst local = await this.extensionManagementService.getInstalled();\n\n\t\tthis.highImportanceTipsByExe = this.groupImportantTipsByExe(highImportanceExeTips, local);\n\t\tthis.mediumImportanceTipsByExe = this.groupImportantTipsByExe(mediumImportanceExeTips, local);\n\t}\n\n\tprivate groupImportantTipsByExe(importantExeBasedTips: IExecutableBasedExtensionTip[], local: ILocalExtension[]): Map<string, IExecutableBasedExtensionTip[]> {\n\t\tconst importantExeBasedRecommendations = new Map<string, IExecutableBasedExtensionTip>();\n\t\timportantExeBasedTips.forEach(tip => importantExeBasedRecommendations.set(tip.extensionId.toLowerCase(), tip));\n\n\t\tconst { installed, uninstalled: recommendations } = this.groupByInstalled([...importantExeBasedRecommendations.keys()], local);\n\n\t\t/* Log installed and uninstalled exe based recommendations */\n\t\tfor (const extensionId of installed) {\n\t\t\tconst tip = importantExeBasedRecommendations.get(extensionId);\n\t\t\tif (tip) {\n\t\t\t\tthis.telemetryService.publicLog2<{ exeName: string, extensionId: string }, ExeExtensionRecommendationsClassification>('exeExtensionRecommendations:alreadyInstalled', { extensionId, exeName: tip.exeName });\n\t\t\t}\n\t\t}\n\t\tfor (const extensionId of recommendations) {\n\t\t\tconst tip = importantExeBasedRecommendations.get(extensionId);\n\t\t\tif (tip) {\n\t\t\t\tthis.telemetryService.publicLog2<{ exeName: string, extensionId: string }, ExeExtensionRecommendationsClassification>('exeExtensionRecommendations:notInstalled', { extensionId, exeName: tip.exeName });\n\t\t\t}\n\t\t}\n\n\t\tconst promptedExecutableTips = this.getPromptedExecutableTips();\n\t\tconst tipsByExe = new Map<string, IExecutableBasedExtensionTip[]>();\n\t\tfor (const extensionId of recommendations) {\n\t\t\tconst tip = importantExeBasedRecommendations.get(extensionId);\n\t\t\tif (tip && (!promptedExecutableTips[tip.exeName] || !promptedExecutableTips[tip.exeName].includes(tip.extensionId))) {\n\t\t\t\tlet tips = tipsByExe.get(tip.exeName);\n\t\t\t\tif (!tips) {\n\t\t\t\t\ttips = [];\n\t\t\t\t\ttipsByExe.set(tip.exeName, tips);\n\t\t\t\t}\n\t\t\t\ttips.push(tip);\n\t\t\t}\n\t\t}\n\n\t\treturn tipsByExe;\n\t}\n\n\t/**\n\t * High importance tips are prompted once per restart session\n\t */\n\tprivate promptHighImportanceExeBasedTip(): void {\n\t\tif (this.highImportanceTipsByExe.size === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst [exeName, tips] = [...this.highImportanceTipsByExe.entries()][0];\n\t\tthis.promptExeRecommendations(tips)\n\t\t\t.then(result => {\n\t\t\t\tswitch (result) {\n\t\t\t\t\tcase RecommendationsNotificationResult.Accepted:\n\t\t\t\t\t\tthis.addToRecommendedExecutables(tips[0].exeName, tips);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase RecommendationsNotificationResult.Ignored:\n\t\t\t\t\t\tthis.highImportanceTipsByExe.delete(exeName);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase RecommendationsNotificationResult.IncompatibleWindow:\n\t\t\t\t\t\t// Recommended in incompatible window. Schedule the prompt after active window change\n\t\t\t\t\t\tconst onActiveWindowChange = Event.once(Event.latch(Event.any(this.nativeHostService.onDidOpenWindow, this.nativeHostService.onDidFocusWindow)));\n\t\t\t\t\t\tthis._register(onActiveWindowChange(() => this.promptHighImportanceExeBasedTip()));\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase RecommendationsNotificationResult.TooMany:\n\t\t\t\t\t\t// Too many notifications. Schedule the prompt after one hour\n\t\t\t\t\t\tconst disposable = this._register(disposableTimeout(() => { disposable.dispose(); this.promptHighImportanceExeBasedTip(); }, 60 * 60 * 1000 /* 1 hour */));\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\t/**\n\t * Medium importance tips are prompted once per 7 days\n\t */\n\tprivate promptMediumImportanceExeBasedTip(): void {\n\t\tif (this.mediumImportanceTipsByExe.size === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst lastPromptedMediumExeTime = this.getLastPromptedMediumExeTime();\n\t\tconst timeSinceLastPrompt = Date.now() - lastPromptedMediumExeTime;\n\t\tconst promptInterval = 7 * 24 * 60 * 60 * 1000; // 7 Days\n\t\tif (timeSinceLastPrompt < promptInterval) {\n\t\t\t// Wait until interval and prompt\n\t\t\tconst disposable = this._register(disposableTimeout(() => { disposable.dispose(); this.promptMediumImportanceExeBasedTip(); }, promptInterval - timeSinceLastPrompt));\n\t\t\treturn;\n\t\t}\n\n\t\tconst [exeName, tips] = [...this.mediumImportanceTipsByExe.entries()][0];\n\t\tthis.promptExeRecommendations(tips)\n\t\t\t.then(result => {\n\t\t\t\tswitch (result) {\n\t\t\t\t\tcase RecommendationsNotificationResult.Accepted:\n\t\t\t\t\t\t// Accepted: Update the last prompted time and caches.\n\t\t\t\t\t\tthis.updateLastPromptedMediumExeTime(Date.now());\n\t\t\t\t\t\tthis.mediumImportanceTipsByExe.delete(exeName);\n\t\t\t\t\t\tthis.addToRecommendedExecutables(tips[0].exeName, tips);\n\n\t\t\t\t\t\t// Schedule the next recommendation for next internval\n\t\t\t\t\t\tconst disposable1 = this._register(disposableTimeout(() => { disposable1.dispose(); this.promptMediumImportanceExeBasedTip(); }, promptInterval));\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase RecommendationsNotificationResult.Ignored:\n\t\t\t\t\t\t// Ignored: Remove from the cache and prompt next recommendation\n\t\t\t\t\t\tthis.mediumImportanceTipsByExe.delete(exeName);\n\t\t\t\t\t\tthis.promptMediumImportanceExeBasedTip();\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase RecommendationsNotificationResult.IncompatibleWindow:\n\t\t\t\t\t\t// Recommended in incompatible window. Schedule the prompt after active window change\n\t\t\t\t\t\tconst onActiveWindowChange = Event.once(Event.latch(Event.any(this.nativeHostService.onDidOpenWindow, this.nativeHostService.onDidFocusWindow)));\n\t\t\t\t\t\tthis._register(onActiveWindowChange(() => this.promptMediumImportanceExeBasedTip()));\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase RecommendationsNotificationResult.TooMany:\n\t\t\t\t\t\t// Too many notifications. Schedule the prompt after one hour\n\t\t\t\t\t\tconst disposable2 = this._register(disposableTimeout(() => { disposable2.dispose(); this.promptMediumImportanceExeBasedTip(); }, 60 * 60 * 1000 /* 1 hour */));\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprivate promptExeRecommendations(tips: IExecutableBasedExtensionTip[]): Promise<RecommendationsNotificationResult> {\n\t\tconst extensionIds = tips.map(({ extensionId }) => extensionId.toLowerCase());\n\t\tconst message = localize({ key: 'exeRecommended', comment: ['Placeholder string is the name of the software that is installed.'] }, \"You have {0} installed on your system. Do you want to install the recommended extensions for it?\", tips[0].exeFriendlyName);\n\t\treturn this.extensionRecommendationNotificationService.promptImportantExtensionsInstallNotification(extensionIds, message, `@exe:\"${tips[0].exeName}\"`, RecommendationSource.EXE);\n\t}\n\n\tprivate getLastPromptedMediumExeTime(): number {\n\t\tlet value = this.storageService.getNumber(lastPromptedMediumImpExeTimeStorageKey, StorageScope.GLOBAL);\n\t\tif (!value) {\n\t\t\tvalue = Date.now();\n\t\t\tthis.updateLastPromptedMediumExeTime(value);\n\t\t}\n\t\treturn value;\n\t}\n\n\tprivate updateLastPromptedMediumExeTime(value: number): void {\n\t\tthis.storageService.store(lastPromptedMediumImpExeTimeStorageKey, value, StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t}\n\n\tprivate getPromptedExecutableTips(): IStringDictionary<string[]> {\n\t\treturn JSON.parse(this.storageService.get(promptedExecutableTipsStorageKey, StorageScope.GLOBAL, '{}'));\n\t}\n\n\tprivate addToRecommendedExecutables(exeName: string, tips: IExecutableBasedExtensionTip[]) {\n\t\tconst promptedExecutableTips = this.getPromptedExecutableTips();\n\t\tpromptedExecutableTips[exeName] = tips.map(({ extensionId }) => extensionId.toLowerCase());\n\t\tthis.storageService.store(promptedExecutableTipsStorageKey, JSON.stringify(promptedExecutableTips), StorageScope.GLOBAL, StorageTarget.USER);\n\t}\n\n\tprivate groupByInstalled(recommendationsToSuggest: string[], local: ILocalExtension[]): { installed: string[], uninstalled: string[] } {\n\t\tconst installed: string[] = [], uninstalled: string[] = [];\n\t\tconst installedExtensionsIds = local.reduce((result, i) => { result.add(i.identifier.id.toLowerCase()); return result; }, new Set<string>());\n\t\trecommendationsToSuggest.forEach(id => {\n\t\t\tif (installedExtensionsIds.has(id.toLowerCase())) {\n\t\t\t\tinstalled.push(id);\n\t\t\t} else {\n\t\t\t\tuninstalled.push(id);\n\t\t\t}\n\t\t});\n\t\treturn { installed, uninstalled };\n\t}\n\n\tprivate async getValidExecutableBasedExtensionTips(executableTips: Map<string, IExeBasedExtensionTips>): Promise<IExecutableBasedExtensionTip[]> {\n\t\tconst result: IExecutableBasedExtensionTip[] = [];\n\n\t\tconst checkedExecutables: Map<string, boolean> = new Map<string, boolean>();\n\t\tfor (const exeName of executableTips.keys()) {\n\t\t\tconst extensionTip = executableTips.get(exeName);\n\t\t\tif (!extensionTip || !isNonEmptyArray(extensionTip.recommendations)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst exePaths: string[] = [];\n\t\t\tif (isWindows) {\n\t\t\t\tif (extensionTip.windowsPath) {\n\t\t\t\t\texePaths.push(extensionTip.windowsPath.replace('%USERPROFILE%', env['USERPROFILE']!)\n\t\t\t\t\t\t.replace('%ProgramFiles(x86)%', env['ProgramFiles(x86)']!)\n\t\t\t\t\t\t.replace('%ProgramFiles%', env['ProgramFiles']!)\n\t\t\t\t\t\t.replace('%APPDATA%', env['APPDATA']!)\n\t\t\t\t\t\t.replace('%WINDIR%', env['WINDIR']!));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\texePaths.push(join('/usr/local/bin', exeName));\n\t\t\t\texePaths.push(join('/usr/bin', exeName));\n\t\t\t\texePaths.push(join(this.environmentService.userHome.fsPath, exeName));\n\t\t\t}\n\n\t\t\tfor (const exePath of exePaths) {\n\t\t\t\tlet exists = checkedExecutables.get(exePath);\n\t\t\t\tif (exists === undefined) {\n\t\t\t\t\texists = await this.fileService.exists(URI.file(exePath));\n\t\t\t\t\tcheckedExecutables.set(exePath, exists);\n\t\t\t\t}\n\t\t\t\tif (exists) {\n\t\t\t\t\tfor (const { extensionId, extensionName, isExtensionPack } of extensionTip.recommendations) {\n\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\textensionId,\n\t\t\t\t\t\t\textensionName,\n\t\t\t\t\t\t\tisExtensionPack,\n\t\t\t\t\t\t\texeName,\n\t\t\t\t\t\t\texeFriendlyName: extensionTip.exeFriendlyName,\n\t\t\t\t\t\t\twindowsPath: extensionTip.windowsPath,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { ITelemetryAppender } from 'vs/platform/telemetry/common/telemetryUtils';\n\nexport interface ITelemetryLog {\n\teventName: string;\n\tdata?: any;\n}\n\nexport class TelemetryAppenderChannel implements IServerChannel {\n\n\tconstructor(private appenders: ITelemetryAppender[]) { }\n\n\tlisten<T>(_: unknown, event: string): Event<T> {\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, { eventName, data }: ITelemetryLog): Promise<any> {\n\t\tthis.appenders.forEach(a => a.log(eventName, data));\n\t\treturn Promise.resolve(null);\n\t}\n}\n\nexport class TelemetryAppenderClient implements ITelemetryAppender {\n\n\tconstructor(private channel: IChannel) { }\n\n\tlog(eventName: string, data?: any): any {\n\t\tthis.channel.call('log', { eventName, data })\n\t\t\t.then(undefined, err => `Failed to log telemetry: ${console.warn(err)}`);\n\n\t\treturn Promise.resolve(null);\n\t}\n\n\tflush(): Promise<void> {\n\t\t// TODO\n\t\treturn Promise.resolve();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { safeStringify } from 'vs/base/common/objects';\nimport { isObject } from 'vs/base/common/types';\nimport { ConfigurationTarget, ConfigurationTargetToString, IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ClassifiedEvent, GDPRClassification, StrictPropertyCheck } from 'vs/platform/telemetry/common/gdprTypings';\nimport { ICustomEndpointTelemetryService, ITelemetryData, ITelemetryEndpoint, ITelemetryInfo, ITelemetryService, TelemetryConfiguration, TelemetryLevel, TELEMETRY_OLD_SETTING_ID, TELEMETRY_SETTING_ID } from 'vs/platform/telemetry/common/telemetry';\n\nexport class NullTelemetryServiceShape implements ITelemetryService {\n\tdeclare readonly _serviceBrand: undefined;\n\treadonly sendErrorTelemetry = false;\n\n\tpublicLog(eventName: string, data?: ITelemetryData) {\n\t\treturn Promise.resolve(undefined);\n\t}\n\tpublicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>) {\n\t\treturn this.publicLog(eventName, data as ITelemetryData);\n\t}\n\tpublicLogError(eventName: string, data?: ITelemetryData) {\n\t\treturn Promise.resolve(undefined);\n\t}\n\tpublicLogError2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>) {\n\t\treturn this.publicLogError(eventName, data as ITelemetryData);\n\t}\n\n\tsetExperimentProperty() { }\n\ttelemetryLevel = TelemetryLevel.NONE;\n\tgetTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\treturn Promise.resolve({\n\t\t\tinstanceId: 'someValue.instanceId',\n\t\t\tsessionId: 'someValue.sessionId',\n\t\t\tmachineId: 'someValue.machineId',\n\t\t\tfirstSessionDate: 'someValue.firstSessionDate'\n\t\t});\n\t}\n}\n\nexport const NullTelemetryService = new NullTelemetryServiceShape();\n\nexport class NullEndpointTelemetryService implements ICustomEndpointTelemetryService {\n\t_serviceBrand: undefined;\n\n\tasync publicLog(_endpoint: ITelemetryEndpoint, _eventName: string, _data?: ITelemetryData): Promise<void> {\n\t\t// noop\n\t}\n\n\tasync publicLogError(_endpoint: ITelemetryEndpoint, _errorEventName: string, _data?: ITelemetryData): Promise<void> {\n\t\t// noop\n\t}\n}\n\nexport interface ITelemetryAppender {\n\tlog(eventName: string, data: any): void;\n\tflush(): Promise<any>;\n}\n\nexport const NullAppender: ITelemetryAppender = { log: () => null, flush: () => Promise.resolve(null) };\n\n\n/* __GDPR__FRAGMENT__\n\t\"URIDescriptor\" : {\n\t\t\"mimeType\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"scheme\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"ext\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"path\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t}\n*/\nexport interface URIDescriptor {\n\tmimeType?: string;\n\tscheme?: string;\n\text?: string;\n\tpath?: string;\n}\n\nexport function configurationTelemetry(telemetryService: ITelemetryService, configurationService: IConfigurationService): IDisposable {\n\treturn configurationService.onDidChangeConfiguration(event => {\n\t\tif (event.source !== ConfigurationTarget.DEFAULT) {\n\t\t\ttype UpdateConfigurationClassification = {\n\t\t\t\tconfigurationSource: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t\tconfigurationKeys: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t};\n\t\t\ttype UpdateConfigurationEvent = {\n\t\t\t\tconfigurationSource: string;\n\t\t\t\tconfigurationKeys: string[];\n\t\t\t};\n\t\t\ttelemetryService.publicLog2<UpdateConfigurationEvent, UpdateConfigurationClassification>('updateConfiguration', {\n\t\t\t\tconfigurationSource: ConfigurationTargetToString(event.source),\n\t\t\t\tconfigurationKeys: flattenKeys(event.sourceConfig)\n\t\t\t});\n\t\t}\n\t});\n}\n\n/**\n * Determines how telemetry is handled based on the current running configuration.\n * To log telemetry locally, the client must not disable telemetry via the CLI\n * If client is a built product and telemetry is enabled via the product.json, telemetry is supported\n * This function is only used to determine if telemetry contructs should occur, but is not impacted by user configuration\n *\n * @param productService\n * @param environmentService\n * @returns false - telemetry is completely disabled, true - telemetry is logged locally, but may not be sent\n */\nexport function supportsTelemetry(productService: IProductService, environmentService: IEnvironmentService): boolean {\n\treturn !(environmentService.disableTelemetry || !productService.enableTelemetry);\n}\n\n/**\n * Determines how telemetry is handled based on the user's configuration.\n *\n * @param configurationService\n * @returns OFF, ERROR, ON\n */\nexport function getTelemetryLevel(configurationService: IConfigurationService): TelemetryLevel {\n\tconst newConfig = configurationService.getValue<TelemetryConfiguration>(TELEMETRY_SETTING_ID);\n\tconst crashReporterConfig = configurationService.getValue<boolean | undefined>('telemetry.enableCrashReporter');\n\tconst oldConfig = configurationService.getValue<boolean | undefined>(TELEMETRY_OLD_SETTING_ID);\n\n\t// If `telemetry.enableCrashReporter` is false or `telemetry.enableTelemetry' is false, disable telemetry\n\tif (oldConfig === false || crashReporterConfig === false) {\n\t\treturn TelemetryLevel.NONE;\n\t}\n\n\t// Maps new telemetry setting to a telemetry level\n\tswitch (newConfig ?? TelemetryConfiguration.ON) {\n\t\tcase TelemetryConfiguration.ON:\n\t\t\treturn TelemetryLevel.USAGE;\n\t\tcase TelemetryConfiguration.ERROR:\n\t\t\treturn TelemetryLevel.ERROR;\n\t\tcase TelemetryConfiguration.CRASH:\n\t\t\treturn TelemetryLevel.CRASH;\n\t\tcase TelemetryConfiguration.OFF:\n\t\t\treturn TelemetryLevel.NONE;\n\t}\n}\n\nexport interface Properties {\n\t[key: string]: string;\n}\n\nexport interface Measurements {\n\t[key: string]: number;\n}\n\nexport function validateTelemetryData(data?: any): { properties: Properties, measurements: Measurements } {\n\n\tconst properties: Properties = Object.create(null);\n\tconst measurements: Measurements = Object.create(null);\n\n\tconst flat = Object.create(null);\n\tflatten(data, flat);\n\n\tfor (let prop in flat) {\n\t\t// enforce property names less than 150 char, take the last 150 char\n\t\tprop = prop.length > 150 ? prop.substr(prop.length - 149) : prop;\n\t\tconst value = flat[prop];\n\n\t\tif (typeof value === 'number') {\n\t\t\tmeasurements[prop] = value;\n\n\t\t} else if (typeof value === 'boolean') {\n\t\t\tmeasurements[prop] = value ? 1 : 0;\n\n\t\t} else if (typeof value === 'string') {\n\t\t\tif (value.length > 8192) {\n\t\t\t\tconsole.warn(`Telemetry property: ${prop} has been trimmed to 8192, the original length is ${value.length}`);\n\t\t\t}\n\t\t\t//enforce property value to be less than 8192 char, take the first 8192 char\n\t\t\t// https://docs.microsoft.com/en-us/azure/azure-monitor/app/api-custom-events-metrics#limits\n\t\t\tproperties[prop] = value.substring(0, 8191);\n\n\t\t} else if (typeof value !== 'undefined' && value !== null) {\n\t\t\tproperties[prop] = value;\n\t\t}\n\t}\n\n\treturn {\n\t\tproperties,\n\t\tmeasurements\n\t};\n}\n\nexport function cleanRemoteAuthority(remoteAuthority?: string): string {\n\tif (!remoteAuthority) {\n\t\treturn 'none';\n\t}\n\n\tlet ret = 'other';\n\tconst allowedAuthorities = ['ssh-remote', 'dev-container', 'attached-container', 'wsl'];\n\tallowedAuthorities.forEach((res: string) => {\n\t\tif (remoteAuthority!.indexOf(`${res}+`) === 0) {\n\t\t\tret = res;\n\t\t}\n\t});\n\n\treturn ret;\n}\n\nfunction flatten(obj: any, result: { [key: string]: any }, order: number = 0, prefix?: string): void {\n\tif (!obj) {\n\t\treturn;\n\t}\n\n\tfor (let item of Object.getOwnPropertyNames(obj)) {\n\t\tconst value = obj[item];\n\t\tconst index = prefix ? prefix + item : item;\n\n\t\tif (Array.isArray(value)) {\n\t\t\tresult[index] = safeStringify(value);\n\n\t\t} else if (value instanceof Date) {\n\t\t\t// TODO unsure why this is here and not in _getData\n\t\t\tresult[index] = value.toISOString();\n\n\t\t} else if (isObject(value)) {\n\t\t\tif (order < 2) {\n\t\t\t\tflatten(value, result, order + 1, index + '.');\n\t\t\t} else {\n\t\t\t\tresult[index] = safeStringify(value);\n\t\t\t}\n\t\t} else {\n\t\t\tresult[index] = value;\n\t\t}\n\t}\n}\n\nfunction flattenKeys(value: Object | undefined): string[] {\n\tif (!value) {\n\t\treturn [];\n\t}\n\tconst result: string[] = [];\n\tflatKeys(result, '', value);\n\treturn result;\n}\n\nfunction flatKeys(result: string[], prefix: string, value: { [key: string]: any } | undefined): void {\n\tif (value && typeof value === 'object' && !Array.isArray(value)) {\n\t\tObject.keys(value)\n\t\t\t.forEach(key => flatKeys(result, prefix ? `${prefix}.${key}` : key, value[key]));\n\t} else {\n\t\tresult.push(prefix);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { IExperimentationTelemetry, ExperimentationService as TASClient, IKeyValueStorage } from 'tas-client-umd';\nimport { TelemetryLevel } from 'vs/platform/telemetry/common/telemetry';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { getTelemetryLevel } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { AssignmentFilterProvider, ASSIGNMENT_REFETCH_INTERVAL, ASSIGNMENT_STORAGE_KEY, IAssignmentService, TargetPopulation } from 'vs/platform/assignment/common/assignment';\n\nclass NullAssignmentServiceTelemetry implements IExperimentationTelemetry {\n\tconstructor() { }\n\n\tsetSharedProperty(name: string, value: string): void {\n\t\t// noop due to lack of telemetry service\n\t}\n\n\tpostEvent(eventName: string, props: Map<string, string>): void {\n\t\t// noop due to lack of telemetry service\n\t}\n}\n\nexport abstract class BaseAssignmentService implements IAssignmentService {\n\t_serviceBrand: undefined;\n\tprotected tasClient: Promise<TASClient> | undefined;\n\tprivate networkInitialized = false;\n\tprivate overrideInitDelay: Promise<void>;\n\n\tprotected get experimentsEnabled(): boolean {\n\t\treturn true;\n\t}\n\n\tconstructor(\n\t\tprivate readonly getMachineId: () => Promise<string>,\n\t\tprotected readonly configurationService: IConfigurationService,\n\t\tprotected readonly productService: IProductService,\n\t\tprotected telemetry: IExperimentationTelemetry,\n\t\tprivate keyValueStorage?: IKeyValueStorage\n\t) {\n\n\t\tif (productService.tasConfig && this.experimentsEnabled && getTelemetryLevel(this.configurationService) === TelemetryLevel.USAGE) {\n\t\t\tthis.tasClient = this.setupTASClient();\n\t\t}\n\n\t\t// For development purposes, configure the delay until tas local tas treatment ovverrides are available\n\t\tconst overrideDelaySetting = this.configurationService.getValue('experiments.overrideDelay');\n\t\tconst overrideDelay = typeof overrideDelaySetting === 'number' ? overrideDelaySetting : 0;\n\t\tthis.overrideInitDelay = new Promise(resolve => setTimeout(resolve, overrideDelay));\n\t}\n\n\tasync getTreatment<T extends string | number | boolean>(name: string): Promise<T | undefined> {\n\t\t// For development purposes, allow overriding tas assignments to test variants locally.\n\t\tawait this.overrideInitDelay;\n\t\tconst override = this.configurationService.getValue<T>('experiments.override.' + name);\n\t\tif (override !== undefined) {\n\t\t\treturn override;\n\t\t}\n\n\t\tif (!this.tasClient) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this.experimentsEnabled) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tlet result: T | undefined;\n\t\tconst client = await this.tasClient;\n\n\t\t// The TAS client is initialized but we need to check if the initial fetch has completed yet\n\t\t// If it is complete, return a cached value for the treatment\n\t\t// If not, use the async call with `checkCache: true`. This will allow the module to return a cached value if it is present.\n\t\t// Otherwise it will await the initial fetch to return the most up to date value.\n\t\tif (this.networkInitialized) {\n\t\t\tresult = client.getTreatmentVariable<T>('vscode', name);\n\t\t} else {\n\t\t\tresult = await client.getTreatmentVariableAsync<T>('vscode', name, true);\n\t\t}\n\n\t\tresult = client.getTreatmentVariable<T>('vscode', name);\n\t\treturn result;\n\t}\n\n\tprivate async setupTASClient(): Promise<TASClient> {\n\t\tconst targetPopulation = this.productService.quality === 'stable' ? TargetPopulation.Public : TargetPopulation.Insiders;\n\t\tconst machineId = await this.getMachineId();\n\t\tconst filterProvider = new AssignmentFilterProvider(\n\t\t\tthis.productService.version,\n\t\t\tthis.productService.nameLong,\n\t\t\tmachineId,\n\t\t\ttargetPopulation\n\t\t);\n\n\t\tconst tasConfig = this.productService.tasConfig!;\n\t\tconst tasClient = new (await import('tas-client-umd')).ExperimentationService({\n\t\t\tfilterProviders: [filterProvider],\n\t\t\ttelemetry: this.telemetry,\n\t\t\tstorageKey: ASSIGNMENT_STORAGE_KEY,\n\t\t\tkeyValueStorage: this.keyValueStorage,\n\t\t\tfeaturesTelemetryPropertyName: tasConfig.featuresTelemetryPropertyName,\n\t\t\tassignmentContextTelemetryPropertyName: tasConfig.assignmentContextTelemetryPropertyName,\n\t\t\ttelemetryEventName: tasConfig.telemetryEventName,\n\t\t\tendpoint: tasConfig.endpoint,\n\t\t\trefetchInterval: ASSIGNMENT_REFETCH_INTERVAL,\n\t\t});\n\n\t\tawait tasClient.initializePromise;\n\t\ttasClient.initialFetch.then(() => this.networkInitialized = true);\n\n\t\treturn tasClient;\n\t}\n}\n\nexport class AssignmentService extends BaseAssignmentService {\n\tconstructor(\n\t\tmachineId: string,\n\t\tconfigurationService: IConfigurationService,\n\t\tproductService: IProductService) {\n\t\tsuper(() => Promise.resolve(machineId), configurationService, productService, new NullAssignmentServiceTelemetry());\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { distinct } from 'vs/base/common/arrays';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { canceled, getErrorMessage, isPromiseCanceledError } from 'vs/base/common/errors';\nimport { getOrDefault } from 'vs/base/common/objects';\nimport { IPager } from 'vs/base/common/paging';\nimport { isWeb, platform } from 'vs/base/common/platform';\nimport { arch } from 'vs/base/common/process';\nimport { isBoolean } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { IHeaders, IRequestContext, IRequestOptions } from 'vs/base/parts/request/common/request';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { DefaultIconPath, getFallbackTargetPlarforms, getTargetPlatform, IExtensionGalleryService, IExtensionIdentifier, IExtensionIdentifierWithVersion, IGalleryExtension, IGalleryExtensionAsset, IGalleryExtensionAssets, IGalleryExtensionVersion, InstallOperation, IQueryOptions, IExtensionsControlManifest, isIExtensionIdentifier, isNotWebExtensionInWebTargetPlatform, isTargetPlatformCompatible, ITranslation, SortBy, SortOrder, StatisticType, TargetPlatform, toTargetPlatform, WEB_EXTENSION_TAG, IExtensionIdentifierWithPreRelease } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { adoptToGalleryExtensionId, areSameExtensions, getGalleryExtensionId, getGalleryExtensionTelemetryData } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\nimport { isEngineValid } from 'vs/platform/extensions/common/extensionValidator';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { asJson, asText, IRequestService, isSuccess } from 'vs/platform/request/common/request';\nimport { getServiceMachineId } from 'vs/platform/serviceMachineId/common/serviceMachineId';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { ITelemetryService, TelemetryLevel } from 'vs/platform/telemetry/common/telemetry';\nimport { getTelemetryLevel, supportsTelemetry } from 'vs/platform/telemetry/common/telemetryUtils';\n\nconst CURRENT_TARGET_PLATFORM = isWeb ? TargetPlatform.WEB : getTargetPlatform(platform, arch);\n\ninterface IRawGalleryExtensionFile {\n\treadonly assetType: string;\n\treadonly source: string;\n}\n\ninterface IRawGalleryExtensionProperty {\n\treadonly key: string;\n\treadonly value: string;\n}\n\nexport interface IRawGalleryExtensionVersion {\n\treadonly version: string;\n\treadonly lastUpdated: string;\n\treadonly assetUri: string;\n\treadonly fallbackAssetUri: string;\n\treadonly files: IRawGalleryExtensionFile[];\n\treadonly properties?: IRawGalleryExtensionProperty[];\n\treadonly targetPlatform?: string;\n}\n\ninterface IRawGalleryExtensionStatistics {\n\treadonly statisticName: string;\n\treadonly value: number;\n}\n\ninterface IRawGalleryExtensionPublisher {\n\treadonly displayName: string;\n\treadonly publisherId: string;\n\treadonly publisherName: string;\n\treadonly domain?: string | null;\n\treadonly isDomainVerified?: boolean;\n}\n\ninterface IRawGalleryExtension {\n\treadonly extensionId: string;\n\treadonly extensionName: string;\n\treadonly displayName: string;\n\treadonly shortDescription: string;\n\treadonly publisher: IRawGalleryExtensionPublisher;\n\treadonly versions: IRawGalleryExtensionVersion[];\n\treadonly statistics: IRawGalleryExtensionStatistics[];\n\treadonly tags: string[] | undefined;\n\treadonly releaseDate: string;\n\treadonly publishedDate: string;\n\treadonly lastUpdated: string;\n\treadonly categories: string[] | undefined;\n\treadonly flags: string;\n}\n\ninterface IRawGalleryQueryResult {\n\treadonly results: {\n\t\treadonly extensions: IRawGalleryExtension[];\n\t\treadonly resultMetadata: {\n\t\t\treadonly metadataType: string;\n\t\t\treadonly metadataItems: {\n\t\t\t\treadonly name: string;\n\t\t\t\treadonly count: number;\n\t\t\t}[];\n\t\t}[]\n\t}[];\n}\n\nenum Flags {\n\tNone = 0x0,\n\tIncludeVersions = 0x1,\n\tIncludeFiles = 0x2,\n\tIncludeCategoryAndTags = 0x4,\n\tIncludeSharedAccounts = 0x8,\n\tIncludeVersionProperties = 0x10,\n\tExcludeNonValidated = 0x20,\n\tIncludeInstallationTargets = 0x40,\n\tIncludeAssetUri = 0x80,\n\tIncludeStatistics = 0x100,\n\tIncludeLatestVersionOnly = 0x200,\n\tUnpublished = 0x1000\n}\n\nfunction flagsToString(...flags: Flags[]): string {\n\treturn String(flags.reduce((r, f) => r | f, 0));\n}\n\nenum FilterType {\n\tTag = 1,\n\tExtensionId = 4,\n\tCategory = 5,\n\tExtensionName = 7,\n\tTarget = 8,\n\tFeatured = 9,\n\tSearchText = 10,\n\tExcludeWithFlags = 12\n}\n\nconst AssetType = {\n\tIcon: 'Microsoft.VisualStudio.Services.Icons.Default',\n\tDetails: 'Microsoft.VisualStudio.Services.Content.Details',\n\tChangelog: 'Microsoft.VisualStudio.Services.Content.Changelog',\n\tManifest: 'Microsoft.VisualStudio.Code.Manifest',\n\tVSIX: 'Microsoft.VisualStudio.Services.VSIXPackage',\n\tLicense: 'Microsoft.VisualStudio.Services.Content.License',\n\tRepository: 'Microsoft.VisualStudio.Services.Links.Source'\n};\n\nconst PropertyType = {\n\tDependency: 'Microsoft.VisualStudio.Code.ExtensionDependencies',\n\tExtensionPack: 'Microsoft.VisualStudio.Code.ExtensionPack',\n\tEngine: 'Microsoft.VisualStudio.Code.Engine',\n\tPreRelease: 'Microsoft.VisualStudio.Code.PreRelease',\n\tLocalizedLanguages: 'Microsoft.VisualStudio.Code.LocalizedLanguages',\n\tWebExtension: 'Microsoft.VisualStudio.Code.WebExtension'\n};\n\ninterface ICriterium {\n\treadonly filterType: FilterType;\n\treadonly value?: string;\n}\n\nconst DefaultPageSize = 10;\n\ninterface IQueryState {\n\treadonly pageNumber: number;\n\treadonly pageSize: number;\n\treadonly sortBy: SortBy;\n\treadonly sortOrder: SortOrder;\n\treadonly flags: Flags;\n\treadonly criteria: ICriterium[];\n\treadonly assetTypes: string[];\n}\n\nconst DefaultQueryState: IQueryState = {\n\tpageNumber: 1,\n\tpageSize: DefaultPageSize,\n\tsortBy: SortBy.NoneOrRelevance,\n\tsortOrder: SortOrder.Default,\n\tflags: Flags.None,\n\tcriteria: [],\n\tassetTypes: []\n};\n\ntype GalleryServiceQueryClassification = {\n\treadonly filterTypes: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\treadonly sortBy: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\treadonly sortOrder: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\treadonly duration: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth', 'isMeasurement': true };\n\treadonly success: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\treadonly requestBodySize: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\treadonly responseBodySize?: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\treadonly statusCode?: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\treadonly errorCode?: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\treadonly count?: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n};\n\ntype QueryTelemetryData = {\n\treadonly filterTypes: string[];\n\treadonly sortBy: string;\n\treadonly sortOrder: string;\n};\n\ntype GalleryServiceQueryEvent = QueryTelemetryData & {\n\treadonly duration: number;\n\treadonly success: boolean;\n\treadonly requestBodySize: string;\n\treadonly responseBodySize?: string;\n\treadonly statusCode?: string;\n\treadonly errorCode?: string;\n\treadonly count?: string;\n};\n\ntype GalleryServicePreReleaseQueryClassification = {\n\treadonly duration: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth', 'isMeasurement': true };\n\treadonly count: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n};\n\ntype GalleryServicePreReleasesQueryEvent = {\n\treadonly duration: number;\n\treadonly count: number;\n};\n\nclass Query {\n\n\tconstructor(private state = DefaultQueryState) { }\n\n\tget pageNumber(): number { return this.state.pageNumber; }\n\tget pageSize(): number { return this.state.pageSize; }\n\tget sortBy(): number { return this.state.sortBy; }\n\tget sortOrder(): number { return this.state.sortOrder; }\n\tget flags(): number { return this.state.flags; }\n\n\twithPage(pageNumber: number, pageSize: number = this.state.pageSize): Query {\n\t\treturn new Query({ ...this.state, pageNumber, pageSize });\n\t}\n\n\twithFilter(filterType: FilterType, ...values: string[]): Query {\n\t\tconst criteria = [\n\t\t\t...this.state.criteria,\n\t\t\t...values.length ? values.map(value => ({ filterType, value })) : [{ filterType }]\n\t\t];\n\n\t\treturn new Query({ ...this.state, criteria });\n\t}\n\n\twithSortBy(sortBy: SortBy): Query {\n\t\treturn new Query({ ...this.state, sortBy });\n\t}\n\n\twithSortOrder(sortOrder: SortOrder): Query {\n\t\treturn new Query({ ...this.state, sortOrder });\n\t}\n\n\twithFlags(...flags: Flags[]): Query {\n\t\treturn new Query({ ...this.state, flags: flags.reduce<number>((r, f) => r | f, 0) });\n\t}\n\n\twithAssetTypes(...assetTypes: string[]): Query {\n\t\treturn new Query({ ...this.state, assetTypes });\n\t}\n\n\tget raw(): any {\n\t\tconst { criteria, pageNumber, pageSize, sortBy, sortOrder, flags, assetTypes } = this.state;\n\t\tconst filters = [{ criteria, pageNumber, pageSize, sortBy, sortOrder }];\n\t\treturn { filters, assetTypes, flags };\n\t}\n\n\tget searchText(): string {\n\t\tconst criterium = this.state.criteria.filter(criterium => criterium.filterType === FilterType.SearchText)[0];\n\t\treturn criterium && criterium.value ? criterium.value : '';\n\t}\n\n\tget telemetryData(): QueryTelemetryData {\n\t\treturn {\n\t\t\tfilterTypes: this.state.criteria.map(criterium => String(criterium.filterType)),\n\t\t\tsortBy: String(this.sortBy),\n\t\t\tsortOrder: String(this.sortOrder)\n\t\t};\n\t}\n}\n\nfunction getStatistic(statistics: IRawGalleryExtensionStatistics[], name: string): number {\n\tconst result = (statistics || []).filter(s => s.statisticName === name)[0];\n\treturn result ? result.value : 0;\n}\n\nfunction getCoreTranslationAssets(version: IRawGalleryExtensionVersion): [string, IGalleryExtensionAsset][] {\n\tconst coreTranslationAssetPrefix = 'Microsoft.VisualStudio.Code.Translation.';\n\tconst result = version.files.filter(f => f.assetType.indexOf(coreTranslationAssetPrefix) === 0);\n\treturn result.reduce<[string, IGalleryExtensionAsset][]>((result, file) => {\n\t\tconst asset = getVersionAsset(version, file.assetType);\n\t\tif (asset) {\n\t\t\tresult.push([file.assetType.substring(coreTranslationAssetPrefix.length), asset]);\n\t\t}\n\t\treturn result;\n\t}, []);\n}\n\nfunction getRepositoryAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset | null {\n\tif (version.properties) {\n\t\tconst results = version.properties.filter(p => p.key === AssetType.Repository);\n\t\tconst gitRegExp = new RegExp('((git|ssh|http(s)?)|(git@[\\\\w.]+))(:(//)?)([\\\\w.@:/\\\\-~]+)(.git)(/)?');\n\n\t\tconst uri = results.filter(r => gitRegExp.test(r.value))[0];\n\t\treturn uri ? { uri: uri.value, fallbackUri: uri.value } : null;\n\t}\n\treturn getVersionAsset(version, AssetType.Repository);\n}\n\nfunction getDownloadAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset {\n\treturn {\n\t\turi: `${version.fallbackAssetUri}/${AssetType.VSIX}?redirect=true${version.targetPlatform ? `&targetPlatform=${version.targetPlatform}` : ''}`,\n\t\tfallbackUri: `${version.fallbackAssetUri}/${AssetType.VSIX}${version.targetPlatform ? `?targetPlatform=${version.targetPlatform}` : ''}`\n\t};\n}\n\nfunction getIconAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset {\n\tconst asset = getVersionAsset(version, AssetType.Icon);\n\tif (asset) {\n\t\treturn asset;\n\t}\n\tconst uri = DefaultIconPath;\n\treturn { uri, fallbackUri: uri };\n}\n\nfunction getVersionAsset(version: IRawGalleryExtensionVersion, type: string): IGalleryExtensionAsset | null {\n\tconst result = version.files.filter(f => f.assetType === type)[0];\n\treturn result ? { uri: `${version.assetUri}/${type}`, fallbackUri: `${version.fallbackAssetUri}/${type}` } : null;\n}\n\nfunction getExtensions(version: IRawGalleryExtensionVersion, property: string): string[] {\n\tconst values = version.properties ? version.properties.filter(p => p.key === property) : [];\n\tconst value = values.length > 0 && values[0].value;\n\treturn value ? value.split(',').map(v => adoptToGalleryExtensionId(v)) : [];\n}\n\nfunction getEngine(version: IRawGalleryExtensionVersion): string {\n\tconst values = version.properties ? version.properties.filter(p => p.key === PropertyType.Engine) : [];\n\treturn (values.length > 0 && values[0].value) || '';\n}\n\nfunction isPreReleaseVersion(version: IRawGalleryExtensionVersion): boolean {\n\tconst values = version.properties ? version.properties.filter(p => p.key === PropertyType.PreRelease) : [];\n\treturn values.length > 0 && values[0].value === 'true';\n}\n\nfunction getLocalizedLanguages(version: IRawGalleryExtensionVersion): string[] {\n\tconst values = version.properties ? version.properties.filter(p => p.key === PropertyType.LocalizedLanguages) : [];\n\tconst value = (values.length > 0 && values[0].value) || '';\n\treturn value ? value.split(',') : [];\n}\n\nfunction getIsPreview(flags: string): boolean {\n\treturn flags.indexOf('preview') !== -1;\n}\n\nfunction getTargetPlatformForExtensionVersion(version: IRawGalleryExtensionVersion): TargetPlatform {\n\treturn version.targetPlatform ? toTargetPlatform(version.targetPlatform) : TargetPlatform.UNDEFINED;\n}\n\nfunction getAllTargetPlatforms(rawGalleryExtension: IRawGalleryExtension): TargetPlatform[] {\n\tconst allTargetPlatforms = distinct(rawGalleryExtension.versions.map(getTargetPlatformForExtensionVersion));\n\n\t// Is a web extension only if it has WEB_EXTENSION_TAG\n\tconst isWebExtension = !!rawGalleryExtension.tags?.includes(WEB_EXTENSION_TAG);\n\n\t// Include Web Target Platform only if it is a web extension\n\tconst webTargetPlatformIndex = allTargetPlatforms.indexOf(TargetPlatform.WEB);\n\tif (isWebExtension) {\n\t\tif (webTargetPlatformIndex === -1) {\n\t\t\t// Web extension but does not has web target platform -> add it\n\t\t\tallTargetPlatforms.push(TargetPlatform.WEB);\n\t\t}\n\t} else {\n\t\tif (webTargetPlatformIndex !== -1) {\n\t\t\t// Not a web extension but has web target platform -> remove it\n\t\t\tallTargetPlatforms.splice(webTargetPlatformIndex, 1);\n\t\t}\n\t}\n\n\treturn allTargetPlatforms;\n}\n\nexport function sortExtensionVersions(versions: IRawGalleryExtensionVersion[], preferredTargetPlatform: TargetPlatform): IRawGalleryExtensionVersion[] {\n\t/* It is expected that versions from Marketplace are sorted by version. So we are just sorting by preferred targetPlatform */\n\tconst fallbackTargetPlatforms = getFallbackTargetPlarforms(preferredTargetPlatform);\n\tfor (let index = 0; index < versions.length; index++) {\n\t\tconst version = versions[index];\n\t\tif (version.version === versions[index - 1]?.version) {\n\t\t\tlet insertionIndex = index;\n\t\t\tconst versionTargetPlatform = getTargetPlatformForExtensionVersion(version);\n\t\t\t/* put it at the beginning */\n\t\t\tif (versionTargetPlatform === preferredTargetPlatform) {\n\t\t\t\twhile (insertionIndex > 0 && versions[insertionIndex - 1].version === version.version) { insertionIndex--; }\n\t\t\t}\n\t\t\t/* put it after version with preferred targetPlatform or at the beginning */\n\t\t\telse if (fallbackTargetPlatforms.includes(versionTargetPlatform)) {\n\t\t\t\twhile (insertionIndex > 0 && versions[insertionIndex - 1].version === version.version && getTargetPlatformForExtensionVersion(versions[insertionIndex - 1]) !== preferredTargetPlatform) { insertionIndex--; }\n\t\t\t}\n\t\t\tif (insertionIndex !== index) {\n\t\t\t\tversions.splice(index, 1);\n\t\t\t\tversions.splice(insertionIndex, 0, version);\n\t\t\t}\n\t\t}\n\t}\n\treturn versions;\n}\n\nfunction toExtension(galleryExtension: IRawGalleryExtension, version: IRawGalleryExtensionVersion, allTargetPlatforms: TargetPlatform[], hasReleaseVersion: boolean, telemetryData?: IStringDictionary<any>): IGalleryExtension {\n\tconst latestVersion = galleryExtension.versions[0];\n\tconst assets = <IGalleryExtensionAssets>{\n\t\tmanifest: getVersionAsset(version, AssetType.Manifest),\n\t\treadme: getVersionAsset(version, AssetType.Details),\n\t\tchangelog: getVersionAsset(version, AssetType.Changelog),\n\t\tlicense: getVersionAsset(version, AssetType.License),\n\t\trepository: getRepositoryAsset(version),\n\t\tdownload: getDownloadAsset(version),\n\t\ticon: getIconAsset(version),\n\t\tcoreTranslations: getCoreTranslationAssets(version)\n\t};\n\n\treturn {\n\t\tidentifier: {\n\t\t\tid: getGalleryExtensionId(galleryExtension.publisher.publisherName, galleryExtension.extensionName),\n\t\t\tuuid: galleryExtension.extensionId\n\t\t},\n\t\tname: galleryExtension.extensionName,\n\t\tversion: version.version,\n\t\tdisplayName: galleryExtension.displayName,\n\t\tpublisherId: galleryExtension.publisher.publisherId,\n\t\tpublisher: galleryExtension.publisher.publisherName,\n\t\tpublisherDisplayName: galleryExtension.publisher.displayName,\n\t\tpublisherDomain: galleryExtension.publisher.domain ? { link: galleryExtension.publisher.domain, verified: !!galleryExtension.publisher.isDomainVerified } : undefined,\n\t\tdescription: galleryExtension.shortDescription || '',\n\t\tinstallCount: getStatistic(galleryExtension.statistics, 'install'),\n\t\trating: getStatistic(galleryExtension.statistics, 'averagerating'),\n\t\tratingCount: getStatistic(galleryExtension.statistics, 'ratingcount'),\n\t\tcategories: galleryExtension.categories || [],\n\t\ttags: galleryExtension.tags || [],\n\t\treleaseDate: Date.parse(galleryExtension.releaseDate),\n\t\tlastUpdated: Date.parse(galleryExtension.lastUpdated),\n\t\tallTargetPlatforms,\n\t\tassets,\n\t\tproperties: {\n\t\t\tdependencies: getExtensions(version, PropertyType.Dependency),\n\t\t\textensionPack: getExtensions(version, PropertyType.ExtensionPack),\n\t\t\tengine: getEngine(version),\n\t\t\tlocalizedLanguages: getLocalizedLanguages(version),\n\t\t\ttargetPlatform: getTargetPlatformForExtensionVersion(version),\n\t\t\tisPreReleaseVersion: isPreReleaseVersion(version)\n\t\t},\n\t\thasPreReleaseVersion: isPreReleaseVersion(latestVersion),\n\t\thasReleaseVersion,\n\t\tpreview: getIsPreview(galleryExtension.flags),\n\t\t/* __GDPR__FRAGMENT__\n\t\t\t\"GalleryExtensionTelemetryData2\" : {\n\t\t\t\t\"index\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\t\"querySource\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t}\n\t\t*/\n\t\ttelemetryData,\n\t};\n}\n\ninterface IRawExtensionsControlManifest {\n\tmalicious: string[];\n\tunsupported: IStringDictionary<boolean | { preReleaseExtension: { id: string, displayName: string } }>;\n}\n\nabstract class AbstractExtensionGalleryService implements IExtensionGalleryService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate extensionsGalleryUrl: string | undefined;\n\tprivate extensionsControlUrl: string | undefined;\n\n\tprivate readonly commonHeadersPromise: Promise<{ [key: string]: string; }>;\n\n\tconstructor(\n\t\tstorageService: IStorageService | undefined,\n\t\t@IRequestService private readonly requestService: IRequestService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t) {\n\t\tconst config = productService.extensionsGallery;\n\t\tthis.extensionsGalleryUrl = config && config.serviceUrl;\n\t\tthis.extensionsControlUrl = config && config.controlUrl;\n\t\tthis.commonHeadersPromise = resolveMarketplaceHeaders(productService.version, productService, this.environmentService, this.configurationService, this.fileService, storageService);\n\t}\n\n\tprivate api(path = ''): string {\n\t\treturn `${this.extensionsGalleryUrl}${path}`;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn !!this.extensionsGalleryUrl;\n\t}\n\n\tgetExtensions(identifiers: ReadonlyArray<IExtensionIdentifier | IExtensionIdentifierWithVersion>, token: CancellationToken): Promise<IGalleryExtension[]>\n\tgetExtensions(identifiers: ReadonlyArray<IExtensionIdentifier | IExtensionIdentifierWithVersion>, includePreRelease: boolean, token: CancellationToken): Promise<IGalleryExtension[]>\n\tasync getExtensions(identifiers: ReadonlyArray<IExtensionIdentifier | IExtensionIdentifierWithVersion>, arg1: any, arg2?: any): Promise<IGalleryExtension[]> {\n\t\tconst includePreRelease = isBoolean(arg1) ? arg1 : false;\n\t\tconst token: CancellationToken = isBoolean(arg1) ? arg2 : arg1;\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeCategoryAndTags, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n\t\t\t.withPage(1, identifiers.length)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code')\n\t\t\t.withFilter(FilterType.ExtensionName, ...identifiers.map(({ id }) => id.toLowerCase()));\n\n\t\tif (identifiers.every(identifier => !(<IExtensionIdentifierWithVersion>identifier).version)) {\n\t\t\tquery = query.withFlags(Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeCategoryAndTags, Flags.IncludeFiles, Flags.IncludeVersionProperties, Flags.IncludeLatestVersionOnly);\n\t\t}\n\n\t\tconst { galleryExtensions } = await this.queryGallery(query, CURRENT_TARGET_PLATFORM, CancellationToken.None);\n\t\tconst galleryExtensionsByVersion = galleryExtensions.map(rawGalleryExtension => {\n\t\t\tconst id = getGalleryExtensionId(rawGalleryExtension.publisher.publisherName, rawGalleryExtension.extensionName);\n\t\t\treturn { rawGalleryExtension, version: (<IExtensionIdentifierWithVersion | undefined>identifiers.find(identifier => areSameExtensions(identifier, { id })))?.version, preRelease: includePreRelease };\n\t\t});\n\t\treturn this.converToGalleryExtensions(galleryExtensionsByVersion, CURRENT_TARGET_PLATFORM, () => undefined, token);\n\t}\n\n\tasync getExtensions2(identifiers: ReadonlyArray<IExtensionIdentifierWithPreRelease>): Promise<IGalleryExtension[]> {\n\t\tconst names: string[] = []; const ids: string[] = [];\n\t\tfor (const identifier of identifiers) {\n\t\t\tif (identifier.uuid) {\n\t\t\t\tids.push(identifier.uuid);\n\t\t\t} else {\n\t\t\t\tnames.push(identifier.id.toLowerCase());\n\t\t\t}\n\t\t}\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeCategoryAndTags, Flags.IncludeFiles, Flags.IncludeVersionProperties, Flags.IncludeLatestVersionOnly)\n\t\t\t.withPage(1, identifiers.length)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code');\n\t\tif (ids.length) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, ...ids);\n\t\t}\n\t\tif (names.length) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, ...names);\n\t\t}\n\n\t\tconst { galleryExtensions: rawGalleryExtensions } = await this.queryGallery(query, CURRENT_TARGET_PLATFORM, CancellationToken.None);\n\t\tconst rawGalleryExtensionsInput = rawGalleryExtensions.map(rawGalleryExtension => {\n\t\t\tconst id = getGalleryExtensionId(rawGalleryExtension.publisher.publisherName, rawGalleryExtension.extensionName);\n\t\t\tconst identifier = identifiers.find(identifier => areSameExtensions(identifier, { id, uuid: rawGalleryExtension.extensionId }));\n\t\t\treturn { rawGalleryExtension, preRelease: !!identifier?.preRelease };\n\t\t});\n\n\t\treturn this.converToGalleryExtensions(rawGalleryExtensionsInput, CURRENT_TARGET_PLATFORM, () => undefined, CancellationToken.None);\n\t}\n\n\tasync getCompatibleExtension(arg1: IExtensionIdentifier | IGalleryExtension, includePreRelease: boolean, targetPlatform: TargetPlatform): Promise<IGalleryExtension | null> {\n\t\tconst extension: IGalleryExtension | null = isIExtensionIdentifier(arg1) ? null : arg1;\n\t\tif (extension) {\n\t\t\tif (isNotWebExtensionInWebTargetPlatform(extension.allTargetPlatforms, targetPlatform)) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (await this.isExtensionCompatible(extension, includePreRelease, targetPlatform)) {\n\t\t\t\treturn extension;\n\t\t\t}\n\t\t}\n\t\tconst { id, uuid } = extension ? extension.identifier : <IExtensionIdentifier>arg1;\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeCategoryAndTags, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n\t\t\t.withPage(1, 1)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code');\n\n\t\tif (uuid) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, uuid);\n\t\t} else {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, id);\n\t\t}\n\n\t\tconst { galleryExtensions } = await this.queryGallery(query, targetPlatform, CancellationToken.None);\n\t\tconst [rawExtension] = galleryExtensions;\n\t\tif (!rawExtension || !rawExtension.versions.length) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst allTargetPlatforms = getAllTargetPlatforms(rawExtension);\n\t\tif (isNotWebExtensionInWebTargetPlatform(allTargetPlatforms, targetPlatform)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tfor (let rawVersion of rawExtension.versions) {\n\t\t\t// set engine property if does not exist\n\t\t\tif (!getEngine(rawVersion)) {\n\t\t\t\tconst engine = await this.getEngine(rawVersion);\n\t\t\t\trawVersion = {\n\t\t\t\t\t...rawVersion,\n\t\t\t\t\tproperties: [...(rawVersion.properties || []), { key: PropertyType.Engine, value: engine }]\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (await this.isRawExtensionVersionCompatible(rawVersion, includePreRelease, allTargetPlatforms, targetPlatform)) {\n\t\t\t\tconst hasReleaseVersion = rawExtension.versions.some(version => !isPreReleaseVersion(version));\n\t\t\t\treturn toExtension(rawExtension, rawVersion, allTargetPlatforms, hasReleaseVersion);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tasync isExtensionCompatible(extension: IGalleryExtension, includePreRelease: boolean, targetPlatform: TargetPlatform): Promise<boolean> {\n\t\tif (!isTargetPlatformCompatible(extension.properties.targetPlatform, extension.allTargetPlatforms, targetPlatform)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!includePreRelease && extension.properties.isPreReleaseVersion) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet engine = extension.properties.engine;\n\t\tif (!engine) {\n\t\t\tconst manifest = await this.getManifest(extension, CancellationToken.None);\n\t\t\tif (!manifest) {\n\t\t\t\tthrow new Error('Manifest was not found');\n\t\t\t}\n\t\t\tengine = manifest.engines.vscode;\n\t\t}\n\t\treturn isEngineValid(engine, this.productService.version, this.productService.date);\n\t}\n\n\tprivate async isRawExtensionVersionCompatible(rawExtensionVersion: IRawGalleryExtensionVersion, includePreRelease: boolean, allTargetPlatforms: TargetPlatform[], targetPlatform: TargetPlatform): Promise<boolean> {\n\t\tif (!isTargetPlatformCompatible(getTargetPlatformForExtensionVersion(rawExtensionVersion), allTargetPlatforms, targetPlatform)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!includePreRelease && isPreReleaseVersion(rawExtensionVersion)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst engine = await this.getEngine(rawExtensionVersion);\n\t\treturn isEngineValid(engine, this.productService.version, this.productService.date);\n\t}\n\n\tasync query(options: IQueryOptions, token: CancellationToken): Promise<IPager<IGalleryExtension>> {\n\t\tif (!this.isEnabled()) {\n\t\t\tthrow new Error('No extension gallery service configured.');\n\t\t}\n\n\t\tlet text = options.text || '';\n\t\tconst pageSize = getOrDefault(options, o => o.pageSize, 50);\n\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeLatestVersionOnly, Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeCategoryAndTags, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n\t\t\t.withPage(1, pageSize)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code');\n\n\t\tif (text) {\n\t\t\t// Use category filter instead of \"category:themes\"\n\t\t\ttext = text.replace(/\\bcategory:(\"([^\"]*)\"|([^\"]\\S*))(\\s+|\\b|$)/g, (_, quotedCategory, category) => {\n\t\t\t\tquery = query.withFilter(FilterType.Category, category || quotedCategory);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\t// Use tag filter instead of \"tag:debuggers\"\n\t\t\ttext = text.replace(/\\btag:(\"([^\"]*)\"|([^\"]\\S*))(\\s+|\\b|$)/g, (_, quotedTag, tag) => {\n\t\t\t\tquery = query.withFilter(FilterType.Tag, tag || quotedTag);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\t// Use featured filter\n\t\t\ttext = text.replace(/\\bfeatured(\\s+|\\b|$)/g, () => {\n\t\t\t\tquery = query.withFilter(FilterType.Featured);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\ttext = text.trim();\n\n\t\t\tif (text) {\n\t\t\t\ttext = text.length < 200 ? text : text.substring(0, 200);\n\t\t\t\tquery = query.withFilter(FilterType.SearchText, text);\n\t\t\t}\n\n\t\t\tquery = query.withSortBy(SortBy.NoneOrRelevance);\n\t\t} else if (options.ids) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, ...options.ids);\n\t\t} else if (options.names) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, ...options.names);\n\t\t} else {\n\t\t\tquery = query.withSortBy(SortBy.InstallCount);\n\t\t}\n\n\t\tif (typeof options.sortBy === 'number') {\n\t\t\tquery = query.withSortBy(options.sortBy);\n\t\t}\n\n\t\tif (typeof options.sortOrder === 'number') {\n\t\t\tquery = query.withSortOrder(options.sortOrder);\n\t\t}\n\n\t\tconst { galleryExtensions, total } = await this.queryGallery(query, CURRENT_TARGET_PLATFORM, token);\n\t\tconst telemetryData = (index: number) => ({ index: ((query.pageNumber - 1) * query.pageSize) + index, querySource: options.source });\n\t\tconst extensions = await this.converToGalleryExtensions(galleryExtensions.map(rawGalleryExtension => ({ rawGalleryExtension, preRelease: !!options.includePreRelease })), CURRENT_TARGET_PLATFORM, telemetryData, token);\n\t\tconst getPage = async (pageIndex: number, ct: CancellationToken) => {\n\t\t\tif (ct.isCancellationRequested) {\n\t\t\t\tthrow canceled();\n\t\t\t}\n\t\t\tconst nextPageQuery = query.withPage(pageIndex + 1);\n\t\t\tconst { galleryExtensions } = await this.queryGallery(nextPageQuery, CURRENT_TARGET_PLATFORM, ct);\n\t\t\treturn await this.converToGalleryExtensions(galleryExtensions.map(rawGalleryExtension => ({ rawGalleryExtension, preRelease: !!options.includePreRelease })), CURRENT_TARGET_PLATFORM, telemetryData, token);\n\t\t};\n\n\t\treturn { firstPage: extensions, total, pageSize: query.pageSize, getPage } as IPager<IGalleryExtension>;\n\t}\n\n\tprivate async converToGalleryExtensions(rawGalleryExtensions: { rawGalleryExtension: IRawGalleryExtension, preRelease: boolean, version?: string }[], targetPlatform: TargetPlatform, telemetryData: (index: number) => IStringDictionary<any> | undefined, token: CancellationToken): Promise<IGalleryExtension[]> {\n\t\tconst toExtensionWithLatestVersion = (galleryExtension: IRawGalleryExtension, index: number, hasReleaseVersion: boolean, preRelease: boolean): IGalleryExtension => {\n\t\t\tconst allTargetPlatforms = getAllTargetPlatforms(galleryExtension);\n\t\t\tlet latestVersion = galleryExtension.versions[0];\n\t\t\tlatestVersion = galleryExtension.versions.find(version => version.version === latestVersion.version && isTargetPlatformCompatible(getTargetPlatformForExtensionVersion(version), allTargetPlatforms, targetPlatform)) || latestVersion;\n\t\t\tif (isPreReleaseVersion(latestVersion) && !preRelease) {\n\t\t\t\tlatestVersion = galleryExtension.versions.find(version => version.version !== latestVersion.version && !isPreReleaseVersion(version)) || latestVersion;\n\t\t\t}\n\t\t\treturn toExtension(galleryExtension, latestVersion, allTargetPlatforms, hasReleaseVersion, telemetryData(index));\n\t\t};\n\t\tconst result: [number, IGalleryExtension][] = [];\n\t\tconst preReleaseVersions = new Map<string, { index: number, preRelease: boolean }>();\n\t\tfor (let index = 0; index < rawGalleryExtensions.length; index++) {\n\t\t\tconst { rawGalleryExtension, version, preRelease } = rawGalleryExtensions[index];\n\t\t\tconst hasReleaseVersion = rawGalleryExtension.versions.some(version => !isPreReleaseVersion(version));\n\t\t\tif (version) {\n\t\t\t\tconst versionAsset = rawGalleryExtension.versions.find(v => v.version === version);\n\t\t\t\tif (versionAsset) {\n\t\t\t\t\tresult.push([index, toExtension(rawGalleryExtension, versionAsset, getAllTargetPlatforms(rawGalleryExtension), hasReleaseVersion)]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst extension = toExtensionWithLatestVersion(rawGalleryExtension, index, hasReleaseVersion, preRelease);\n\t\t\t\tif (extension.properties.isPreReleaseVersion) {\n\t\t\t\t\tpreReleaseVersions.set(extension.identifier.uuid, { index, preRelease });\n\t\t\t\t} else {\n\t\t\t\t\tresult.push([index, extension]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (preReleaseVersions.size) {\n\t\t\tconst startTime = new Date().getTime();\n\t\t\tconst query = new Query()\n\t\t\t\t.withFlags(Flags.IncludeVersions, Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeCategoryAndTags, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n\t\t\t\t.withPage(1, preReleaseVersions.size)\n\t\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code')\n\t\t\t\t.withFilter(FilterType.ExtensionId, ...preReleaseVersions.keys());\n\t\t\tconst { galleryExtensions } = await this.queryGallery(query, targetPlatform, token);\n\t\t\tthis.telemetryService.publicLog2<GalleryServicePreReleasesQueryEvent, GalleryServicePreReleaseQueryClassification>('galleryService:preReleasesQuery', {\n\t\t\t\tduration: new Date().getTime() - startTime,\n\t\t\t\tcount: preReleaseVersions.size\n\t\t\t});\n\t\t\tif (galleryExtensions.length !== preReleaseVersions.size) {\n\t\t\t\tthrow new Error('Not all extensions with latest versions are returned');\n\t\t\t}\n\t\t\tfor (const rawGalleryExtension of galleryExtensions) {\n\t\t\t\tconst hasReleaseVersion = rawGalleryExtension.versions.some(version => !isPreReleaseVersion(version));\n\t\t\t\tconst { index, preRelease } = preReleaseVersions.get(rawGalleryExtension.extensionId)!;\n\t\t\t\tconst extension = toExtensionWithLatestVersion(rawGalleryExtension, index, hasReleaseVersion, preRelease);\n\t\t\t\tresult.push([index, extension]);\n\t\t\t}\n\t\t}\n\n\t\treturn result.sort((a, b) => a[0] - b[0]).map(([, extension]) => extension);\n\t}\n\n\tprivate async queryGallery(query: Query, targetPlatform: TargetPlatform, token: CancellationToken): Promise<{ galleryExtensions: IRawGalleryExtension[], total: number; }> {\n\t\tif (!this.isEnabled()) {\n\t\t\tthrow new Error('No extension gallery service configured.');\n\t\t}\n\n\t\t// Always exclude non validated and unpublished extensions\n\t\tquery = query\n\t\t\t.withFlags(query.flags, Flags.ExcludeNonValidated)\n\t\t\t.withFilter(FilterType.ExcludeWithFlags, flagsToString(Flags.Unpublished));\n\n\t\tconst commonHeaders = await this.commonHeadersPromise;\n\t\tconst data = JSON.stringify(query.raw);\n\t\tconst headers = {\n\t\t\t...commonHeaders,\n\t\t\t'Content-Type': 'application/json',\n\t\t\t'Accept': 'application/json;api-version=3.0-preview.1',\n\t\t\t'Accept-Encoding': 'gzip',\n\t\t\t'Content-Length': String(data.length)\n\t\t};\n\n\t\tconst startTime = new Date().getTime();\n\t\tlet context: IRequestContext | undefined, error: any, total: number = 0;\n\n\t\ttry {\n\t\t\tcontext = await this.requestService.request({\n\t\t\t\ttype: 'POST',\n\t\t\t\turl: this.api('/extensionquery'),\n\t\t\t\tdata,\n\t\t\t\theaders\n\t\t\t}, token);\n\n\t\t\tif (context.res.statusCode && context.res.statusCode >= 400 && context.res.statusCode < 500) {\n\t\t\t\treturn { galleryExtensions: [], total };\n\t\t\t}\n\n\t\t\tconst result = await asJson<IRawGalleryQueryResult>(context);\n\t\t\tif (result) {\n\t\t\t\tconst r = result.results[0];\n\t\t\t\tconst galleryExtensions = r.extensions;\n\t\t\t\tgalleryExtensions.forEach(e => sortExtensionVersions(e.versions, targetPlatform));\n\t\t\t\tconst resultCount = r.resultMetadata && r.resultMetadata.filter(m => m.metadataType === 'ResultCount')[0];\n\t\t\t\ttotal = resultCount && resultCount.metadataItems.filter(i => i.name === 'TotalCount')[0].count || 0;\n\n\t\t\t\treturn { galleryExtensions, total };\n\t\t\t}\n\t\t\treturn { galleryExtensions: [], total };\n\n\t\t} catch (e) {\n\t\t\terror = e;\n\t\t\tthrow e;\n\t\t} finally {\n\t\t\tthis.telemetryService.publicLog2<GalleryServiceQueryEvent, GalleryServiceQueryClassification>('galleryService:query', {\n\t\t\t\t...query.telemetryData,\n\t\t\t\trequestBodySize: String(data.length),\n\t\t\t\tduration: new Date().getTime() - startTime,\n\t\t\t\tsuccess: !!context && isSuccess(context),\n\t\t\t\tresponseBodySize: context?.res.headers['Content-Length'],\n\t\t\t\tstatusCode: context ? String(context.res.statusCode) : undefined,\n\t\t\t\terrorCode: error\n\t\t\t\t\t? isPromiseCanceledError(error) ? 'canceled' : getErrorMessage(error).startsWith('XHR timeout') ? 'timeout' : 'failed'\n\t\t\t\t\t: undefined,\n\t\t\t\tcount: String(total)\n\t\t\t});\n\t\t}\n\t}\n\n\tasync reportStatistic(publisher: string, name: string, version: string, type: StatisticType): Promise<void> {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst url = isWeb ? this.api(`/itemName/${publisher}.${name}/version/${version}/statType/${type === StatisticType.Install ? '1' : '3'}/vscodewebextension`) : this.api(`/publishers/${publisher}/extensions/${name}/${version}/stats?statType=${type}`);\n\t\tconst Accept = isWeb ? 'api-version=6.1-preview.1' : '*/*;api-version=4.0-preview.1';\n\n\t\tconst commonHeaders = await this.commonHeadersPromise;\n\t\tconst headers = { ...commonHeaders, Accept };\n\t\ttry {\n\t\t\tawait this.requestService.request({\n\t\t\t\ttype: 'POST',\n\t\t\t\turl,\n\t\t\t\theaders\n\t\t\t}, CancellationToken.None);\n\t\t} catch (error) { /* Ignore */ }\n\t}\n\n\tasync download(extension: IGalleryExtension, location: URI, operation: InstallOperation): Promise<void> {\n\t\tthis.logService.trace('ExtensionGalleryService#download', extension.identifier.id);\n\t\tconst data = getGalleryExtensionTelemetryData(extension);\n\t\tconst startTime = new Date().getTime();\n\t\t/* __GDPR__\n\t\t\t\"galleryService:downloadVSIX\" : {\n\t\t\t\t\"duration\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\tconst log = (duration: number) => this.telemetryService.publicLog('galleryService:downloadVSIX', { ...data, duration });\n\n\t\tconst operationParam = operation === InstallOperation.Install ? 'install' : operation === InstallOperation.Update ? 'update' : '';\n\t\tconst downloadAsset = operationParam ? {\n\t\t\turi: `${extension.assets.download.uri}${URI.parse(extension.assets.download.uri).query ? '&' : '?'}${operationParam}=true`,\n\t\t\tfallbackUri: `${extension.assets.download.fallbackUri}${URI.parse(extension.assets.download.fallbackUri).query ? '&' : '?'}${operationParam}=true`\n\t\t} : extension.assets.download;\n\n\t\tconst context = await this.getAsset(downloadAsset);\n\t\tawait this.fileService.writeFile(location, context.stream);\n\t\tlog(new Date().getTime() - startTime);\n\t}\n\n\tasync getReadme(extension: IGalleryExtension, token: CancellationToken): Promise<string> {\n\t\tif (extension.assets.readme) {\n\t\t\tconst context = await this.getAsset(extension.assets.readme, {}, token);\n\t\t\tconst content = await asText(context);\n\t\t\treturn content || '';\n\t\t}\n\t\treturn '';\n\t}\n\n\tasync getManifest(extension: IGalleryExtension, token: CancellationToken): Promise<IExtensionManifest | null> {\n\t\tif (extension.assets.manifest) {\n\t\t\tconst context = await this.getAsset(extension.assets.manifest, {}, token);\n\t\t\tconst text = await asText(context);\n\t\t\treturn text ? JSON.parse(text) : null;\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate async getManifestFromRawExtensionVersion(rawExtensionVersion: IRawGalleryExtensionVersion, token: CancellationToken): Promise<IExtensionManifest | null> {\n\t\tconst manifestAsset = getVersionAsset(rawExtensionVersion, AssetType.Manifest);\n\t\tif (!manifestAsset) {\n\t\t\tthrow new Error('Manifest was not found');\n\t\t}\n\t\tconst headers = { 'Accept-Encoding': 'gzip' };\n\t\tconst context = await this.getAsset(manifestAsset, { headers });\n\t\treturn await asJson<IExtensionManifest>(context);\n\t}\n\n\tasync getCoreTranslation(extension: IGalleryExtension, languageId: string): Promise<ITranslation | null> {\n\t\tconst asset = extension.assets.coreTranslations.filter(t => t[0] === languageId.toUpperCase())[0];\n\t\tif (asset) {\n\t\t\tconst context = await this.getAsset(asset[1]);\n\t\t\tconst text = await asText(context);\n\t\t\treturn text ? JSON.parse(text) : null;\n\t\t}\n\t\treturn null;\n\t}\n\n\tasync getChangelog(extension: IGalleryExtension, token: CancellationToken): Promise<string> {\n\t\tif (extension.assets.changelog) {\n\t\t\tconst context = await this.getAsset(extension.assets.changelog, {}, token);\n\t\t\tconst content = await asText(context);\n\t\t\treturn content || '';\n\t\t}\n\t\treturn '';\n\t}\n\n\tasync getAllCompatibleVersions(extension: IGalleryExtension, includePreRelease: boolean, targetPlatform: TargetPlatform): Promise<IGalleryExtensionVersion[]> {\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeVersions, Flags.IncludeCategoryAndTags, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n\t\t\t.withPage(1, 1)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code');\n\n\t\tif (extension.identifier.uuid) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, extension.identifier.uuid);\n\t\t} else {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, extension.identifier.id);\n\t\t}\n\n\t\tconst { galleryExtensions } = await this.queryGallery(query, targetPlatform, CancellationToken.None);\n\t\tif (!galleryExtensions.length) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst allTargetPlatforms = getAllTargetPlatforms(galleryExtensions[0]);\n\t\tif (isNotWebExtensionInWebTargetPlatform(allTargetPlatforms, targetPlatform)) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst result: IGalleryExtensionVersion[] = [];\n\t\tfor (const version of galleryExtensions[0].versions) {\n\t\t\ttry {\n\t\t\t\tif (result[result.length - 1]?.version !== version.version && await this.isRawExtensionVersionCompatible(version, includePreRelease, allTargetPlatforms, targetPlatform)) {\n\t\t\t\t\tresult.push({ version: version.version, date: version.lastUpdated, isPreReleaseVersion: isPreReleaseVersion(version) });\n\t\t\t\t}\n\t\t\t} catch (error) { /* Ignore error and skip version */ }\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate async getAsset(asset: IGalleryExtensionAsset, options: IRequestOptions = {}, token: CancellationToken = CancellationToken.None): Promise<IRequestContext> {\n\t\tconst commonHeaders = await this.commonHeadersPromise;\n\t\tconst baseOptions = { type: 'GET' };\n\t\tconst headers = { ...commonHeaders, ...(options.headers || {}) };\n\t\toptions = { ...options, ...baseOptions, headers };\n\n\t\tconst url = asset.uri;\n\t\tconst fallbackUrl = asset.fallbackUri;\n\t\tconst firstOptions = { ...options, url };\n\n\t\ttry {\n\t\t\tconst context = await this.requestService.request(firstOptions, token);\n\t\t\tif (context.res.statusCode === 200) {\n\t\t\t\treturn context;\n\t\t\t}\n\t\t\tconst message = await asText(context);\n\t\t\tthrow new Error(`Expected 200, got back ${context.res.statusCode} instead.\\n\\n${message}`);\n\t\t} catch (err) {\n\t\t\tif (isPromiseCanceledError(err)) {\n\t\t\t\tthrow err;\n\t\t\t}\n\n\t\t\tconst message = getErrorMessage(err);\n\t\t\ttype GalleryServiceCDNFallbackClassification = {\n\t\t\t\turl: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t\tmessage: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t};\n\t\t\ttype GalleryServiceCDNFallbackEvent = {\n\t\t\t\turl: string;\n\t\t\t\tmessage: string;\n\t\t\t};\n\t\t\tthis.telemetryService.publicLog2<GalleryServiceCDNFallbackEvent, GalleryServiceCDNFallbackClassification>('galleryService:cdnFallback', { url, message });\n\n\t\t\tconst fallbackOptions = { ...options, url: fallbackUrl };\n\t\t\treturn this.requestService.request(fallbackOptions, token);\n\t\t}\n\t}\n\n\tprivate async getEngine(rawExtensionVersion: IRawGalleryExtensionVersion): Promise<string> {\n\t\tlet engine = getEngine(rawExtensionVersion);\n\t\tif (!engine) {\n\t\t\tconst manifest = await this.getManifestFromRawExtensionVersion(rawExtensionVersion, CancellationToken.None);\n\t\t\tif (!manifest) {\n\t\t\t\tthrow new Error('Manifest was not found');\n\t\t\t}\n\t\t\tengine = manifest.engines.vscode;\n\t\t}\n\t\treturn engine;\n\t}\n\n\tasync getExtensionsControlManifest(): Promise<IExtensionsControlManifest> {\n\t\tif (!this.isEnabled()) {\n\t\t\tthrow new Error('No extension gallery service configured.');\n\t\t}\n\n\t\tif (!this.extensionsControlUrl) {\n\t\t\treturn { malicious: [] };\n\t\t}\n\n\t\tconst context = await this.requestService.request({ type: 'GET', url: this.extensionsControlUrl }, CancellationToken.None);\n\t\tif (context.res.statusCode !== 200) {\n\t\t\tthrow new Error('Could not get extensions report.');\n\t\t}\n\n\t\tconst result = await asJson<IRawExtensionsControlManifest>(context);\n\t\tconst malicious: IExtensionIdentifier[] = [];\n\t\tconst unsupportedPreReleaseExtensions: IStringDictionary<{ id: string, displayName: string }> = {};\n\n\t\tif (result) {\n\t\t\tfor (const id of result.malicious) {\n\t\t\t\tmalicious.push({ id });\n\t\t\t}\n\t\t\tif (result.unsupported) {\n\t\t\t\tfor (const extensionId of Object.keys(result.unsupported)) {\n\t\t\t\t\tconst value = result.unsupported[extensionId];\n\t\t\t\t\tif (!isBoolean(value)) {\n\t\t\t\t\t\tunsupportedPreReleaseExtensions[extensionId.toLowerCase()] = value.preReleaseExtension;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { malicious, unsupportedPreReleaseExtensions };\n\t}\n}\n\nexport class ExtensionGalleryService extends AbstractExtensionGalleryService {\n\n\tconstructor(\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IRequestService requestService: IRequestService,\n\t\t@ILogService logService: ILogService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IProductService productService: IProductService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t) {\n\t\tsuper(storageService, requestService, logService, environmentService, telemetryService, fileService, productService, configurationService);\n\t}\n}\n\nexport class ExtensionGalleryServiceWithNoStorageService extends AbstractExtensionGalleryService {\n\n\tconstructor(\n\t\t@IRequestService requestService: IRequestService,\n\t\t@ILogService logService: ILogService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IProductService productService: IProductService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t) {\n\t\tsuper(undefined, requestService, logService, environmentService, telemetryService, fileService, productService, configurationService);\n\t}\n}\n\nexport async function resolveMarketplaceHeaders(version: string, productService: IProductService, environmentService: IEnvironmentService, configurationService: IConfigurationService, fileService: IFileService, storageService: {\n\tget: (key: string, scope: StorageScope) => string | undefined,\n\tstore: (key: string, value: string, scope: StorageScope, target: StorageTarget) => void\n} | undefined): Promise<{ [key: string]: string; }> {\n\tconst headers: IHeaders = {\n\t\t'X-Market-Client-Id': `VSCode ${version}`,\n\t\t'User-Agent': `VSCode ${version}`\n\t};\n\tconst uuid = await getServiceMachineId(environmentService, fileService, storageService);\n\tif (supportsTelemetry(productService, environmentService) && getTelemetryLevel(configurationService) === TelemetryLevel.USAGE) {\n\t\theaders['X-Market-User-Id'] = uuid;\n\t}\n\treturn headers;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ILogger, ILoggerService } from 'vs/platform/log/common/log';\nimport { ITelemetryAppender, validateTelemetryData } from 'vs/platform/telemetry/common/telemetryUtils';\n\nexport class TelemetryLogAppender extends Disposable implements ITelemetryAppender {\n\n\tprivate readonly logger: ILogger;\n\n\tconstructor(\n\t\t@ILoggerService loggerService: ILoggerService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\tprivate readonly prefix: string = '',\n\t) {\n\t\tsuper();\n\n\t\tconst logger = loggerService.getLogger(environmentService.telemetryLogResource);\n\t\tif (logger) {\n\t\t\tthis.logger = this._register(logger);\n\t\t} else {\n\t\t\tthis.logger = this._register(loggerService.createLogger(environmentService.telemetryLogResource));\n\t\t\tthis.logger.info('The below are logs for every telemetry event sent from VS Code once the log level is set to trace.');\n\t\t\tthis.logger.info('===========================================================');\n\t\t}\n\t}\n\n\tflush(): Promise<any> {\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tlog(eventName: string, data: any): void {\n\t\tthis.logger.trace(`${this.prefix}telemetry/${eventName}`, validateTelemetryData(data));\n\t}\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { cloneAndChange, mixin } from 'vs/base/common/objects';\nimport { isWeb } from 'vs/base/common/platform';\nimport { escapeRegExpCharacters } from 'vs/base/common/strings';\nimport { localize } from 'vs/nls';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationScope, Extensions, IConfigurationRegistry } from 'vs/platform/configuration/common/configurationRegistry';\nimport product from 'vs/platform/product/common/product';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { ClassifiedEvent, GDPRClassification, StrictPropertyCheck } from 'vs/platform/telemetry/common/gdprTypings';\nimport { ITelemetryData, ITelemetryInfo, ITelemetryService, TelemetryConfiguration, TelemetryLevel, TELEMETRY_OLD_SETTING_ID, TELEMETRY_SECTION_ID, TELEMETRY_SETTING_ID } from 'vs/platform/telemetry/common/telemetry';\nimport { getTelemetryLevel, ITelemetryAppender } from 'vs/platform/telemetry/common/telemetryUtils';\n\nexport interface ITelemetryServiceConfig {\n\tappenders: ITelemetryAppender[];\n\tsendErrorTelemetry?: boolean;\n\tcommonProperties?: Promise<{ [name: string]: any }>;\n\tpiiPaths?: string[];\n}\n\nexport class TelemetryService implements ITelemetryService {\n\n\tstatic readonly IDLE_START_EVENT_NAME = 'UserIdleStart';\n\tstatic readonly IDLE_STOP_EVENT_NAME = 'UserIdleStop';\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _appenders: ITelemetryAppender[];\n\tprivate _commonProperties: Promise<{ [name: string]: any; }>;\n\tprivate _experimentProperties: { [name: string]: string } = {};\n\tprivate _piiPaths: string[];\n\tprivate _telemetryLevel: TelemetryLevel;\n\tpublic readonly sendErrorTelemetry: boolean;\n\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate _cleanupPatterns: RegExp[] = [];\n\n\tconstructor(\n\t\tconfig: ITelemetryServiceConfig,\n\t\t@IConfigurationService private _configurationService: IConfigurationService\n\t) {\n\t\tthis._appenders = config.appenders;\n\t\tthis._commonProperties = config.commonProperties || Promise.resolve({});\n\t\tthis._piiPaths = config.piiPaths || [];\n\t\tthis._telemetryLevel = TelemetryLevel.USAGE;\n\t\tthis.sendErrorTelemetry = !!config.sendErrorTelemetry;\n\n\t\t// static cleanup pattern for: `file:///DANGEROUS/PATH/resources/app/Useful/Information`\n\t\tthis._cleanupPatterns = [/file:\\/\\/\\/.*?\\/resources\\/app\\//gi];\n\n\t\tfor (let piiPath of this._piiPaths) {\n\t\t\tthis._cleanupPatterns.push(new RegExp(escapeRegExpCharacters(piiPath), 'gi'));\n\t\t}\n\n\n\t\tthis._updateTelemetryLevel();\n\t\tthis._configurationService.onDidChangeConfiguration(this._updateTelemetryLevel, this, this._disposables);\n\t\ttype OptInClassification = {\n\t\t\toptIn: { classification: 'SystemMetaData', purpose: 'BusinessInsight', isMeasurement: true };\n\t\t};\n\t\ttype OptInEvent = {\n\t\t\toptIn: boolean;\n\t\t};\n\t\tthis.publicLog2<OptInEvent, OptInClassification>('optInStatus', { optIn: this._telemetryLevel === TelemetryLevel.USAGE });\n\n\t\tthis._commonProperties.then(values => {\n\t\t\tconst isHashedId = /^[a-f0-9]+$/i.test(values['common.machineId']);\n\n\t\t\ttype MachineIdFallbackClassification = {\n\t\t\t\tusingFallbackGuid: { classification: 'SystemMetaData', purpose: 'BusinessInsight', isMeasurement: true };\n\t\t\t};\n\t\t\tthis.publicLog2<{ usingFallbackGuid: boolean }, MachineIdFallbackClassification>('machineIdFallback', { usingFallbackGuid: !isHashedId });\n\t\t});\n\t}\n\n\tsetExperimentProperty(name: string, value: string): void {\n\t\tthis._experimentProperties[name] = value;\n\t}\n\n\tprivate _updateTelemetryLevel(): void {\n\t\tthis._telemetryLevel = getTelemetryLevel(this._configurationService);\n\t}\n\n\tget telemetryLevel(): TelemetryLevel {\n\t\treturn this._telemetryLevel;\n\t}\n\n\tasync getTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\tconst values = await this._commonProperties;\n\n\t\t// well known properties\n\t\tlet sessionId = values['sessionID'];\n\t\tlet machineId = values['common.machineId'];\n\t\tlet firstSessionDate = values['common.firstSessionDate'];\n\t\tlet msftInternal = values['common.msftInternal'];\n\n\t\treturn { sessionId, machineId, firstSessionDate, msftInternal };\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t}\n\n\tprivate _log(eventName: string, eventLevel: TelemetryLevel, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<any> {\n\t\t// don't send events when the user is optout\n\t\tif (this.telemetryLevel < eventLevel) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn this._commonProperties.then(values => {\n\n\t\t\t// (first) add common properties\n\t\t\tdata = mixin(data, values);\n\n\t\t\t// (next) add experiment properties\n\t\t\tdata = mixin(data, this._experimentProperties);\n\n\t\t\t// (last) remove all PII from data\n\t\t\tdata = cloneAndChange(data, value => {\n\t\t\t\tif (typeof value === 'string') {\n\t\t\t\t\treturn this._cleanupInfo(value, anonymizeFilePaths);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\n\t\t\t// Log to the appenders of sufficient level\n\t\t\tthis._appenders.forEach(a => a.log(eventName, data));\n\n\t\t}, err => {\n\t\t\t// unsure what to do now...\n\t\t\tconsole.error(err);\n\t\t});\n\t}\n\n\tpublicLog(eventName: string, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<any> {\n\t\treturn this._log(eventName, TelemetryLevel.USAGE, data, anonymizeFilePaths);\n\t}\n\n\tpublicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>, anonymizeFilePaths?: boolean): Promise<any> {\n\t\treturn this.publicLog(eventName, data as ITelemetryData, anonymizeFilePaths);\n\t}\n\n\tpublicLogError(errorEventName: string, data?: ITelemetryData): Promise<any> {\n\t\tif (!this.sendErrorTelemetry) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\t// Send error event and anonymize paths\n\t\treturn this._log(errorEventName, TelemetryLevel.ERROR, data, true);\n\t}\n\n\tpublicLogError2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>): Promise<any> {\n\t\treturn this.publicLogError(eventName, data as ITelemetryData);\n\t}\n\n\tprivate _anonymizeFilePaths(stack: string): string {\n\t\tlet updatedStack = stack;\n\n\t\tconst cleanUpIndexes: [number, number][] = [];\n\t\tfor (let regexp of this._cleanupPatterns) {\n\t\t\twhile (true) {\n\t\t\t\tconst result = regexp.exec(stack);\n\t\t\t\tif (!result) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcleanUpIndexes.push([result.index, regexp.lastIndex]);\n\t\t\t}\n\t\t}\n\n\t\tconst nodeModulesRegex = /^[\\\\\\/]?(node_modules|node_modules\\.asar)[\\\\\\/]/;\n\t\tconst fileRegex = /(file:\\/\\/)?([a-zA-Z]:(\\\\\\\\|\\\\|\\/)|(\\\\\\\\|\\\\|\\/))?([\\w-\\._]+(\\\\\\\\|\\\\|\\/))+[\\w-\\._]*/g;\n\t\tlet lastIndex = 0;\n\t\tupdatedStack = '';\n\n\t\twhile (true) {\n\t\t\tconst result = fileRegex.exec(stack);\n\t\t\tif (!result) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// Anoynimize user file paths that do not need to be retained or cleaned up.\n\t\t\tif (!nodeModulesRegex.test(result[0]) && cleanUpIndexes.every(([x, y]) => result.index < x || result.index >= y)) {\n\t\t\t\tupdatedStack += stack.substring(lastIndex, result.index) + '<REDACTED: user-file-path>';\n\t\t\t\tlastIndex = fileRegex.lastIndex;\n\t\t\t}\n\t\t}\n\t\tif (lastIndex < stack.length) {\n\t\t\tupdatedStack += stack.substr(lastIndex);\n\t\t}\n\n\t\treturn updatedStack;\n\t}\n\n\tprivate _removePropertiesWithPossibleUserInfo(property: string): string {\n\t\t// If for some reason it is undefined we skip it (this shouldn't be possible);\n\t\tif (!property) {\n\t\t\treturn property;\n\t\t}\n\n\t\tconst value = property.toLowerCase();\n\n\t\t// Regex which matches @*.site\n\t\tconst emailRegex = /@[a-zA-Z0-9-.]+/;\n\t\tconst secretRegex = /(key|token|sig|signature|password|passwd|pwd)[=\"':\\s]/;\n\n\t\t// Check for common user data in the telemetry events\n\t\tif (secretRegex.test(value)) {\n\t\t\treturn '<REDACTED: secret>';\n\t\t} else if (emailRegex.test(value)) {\n\t\t\treturn '<REDACTED: email>';\n\t\t}\n\n\t\treturn property;\n\t}\n\n\n\tprivate _cleanupInfo(property: string, anonymizeFilePaths?: boolean): string {\n\t\tlet updatedProperty = property;\n\n\t\t// anonymize file paths\n\t\tif (anonymizeFilePaths) {\n\t\t\tupdatedProperty = this._anonymizeFilePaths(updatedProperty);\n\t\t}\n\n\t\t// sanitize with configured cleanup patterns\n\t\tfor (let regexp of this._cleanupPatterns) {\n\t\t\tupdatedProperty = updatedProperty.replace(regexp, '');\n\t\t}\n\n\t\t// remove possible user info\n\t\tupdatedProperty = this._removePropertiesWithPossibleUserInfo(updatedProperty);\n\n\t\treturn updatedProperty;\n\t}\n}\n\nfunction getTelemetryLevelSettingDescription(): string {\n\tconst telemetryText = localize('telemetry.telemetryLevelMd', \"Controls all core and first party extension telemetry. This helps us to better understand how {0} is performing, where improvements need to be made, and how features are being used.\", product.nameLong);\n\tconst externalLinksStatement = !product.privacyStatementUrl ?\n\t\tlocalize(\"telemetry.docsStatement\", \"Read more about the [data we collect]({0}).\", 'https://aka.ms/vscode-telemetry') :\n\t\tlocalize(\"telemetry.docsAndPrivacyStatement\", \"Read more about the [data we collect]({0}) and our [privacy statement]({1}).\", 'https://aka.ms/vscode-telemetry', product.privacyStatementUrl);\n\tconst restartString = !isWeb ? localize('telemetry.restart', 'A full restart of the application is necessary for crash reporting changes to take effect.') : '';\n\n\tconst crashReportsHeader = localize('telemetry.crashReports', \"Crash Reports\");\n\tconst errorsHeader = localize('telemetry.errors', \"Error Telemetry\");\n\tconst usageHeader = localize('telemetry.usage', \"Usage Data\");\n\n\tconst telemetryTableDescription = localize('telemetry.telemetryLevel.tableDescription', \"The following table outlines the data sent with each setting:\");\n\tconst telemetryTable = `\n|       | ${crashReportsHeader} | ${errorsHeader} | ${usageHeader} |\n|:------|:---------------------:|:---------------:|:--------------:|\n| all   |            ✓          |        ✓        |        ✓       |\n| error |            ✓          |        ✓        |        -       |\n| crash |            ✓          |        -        |        -       |\n| off   |            -          |        -        |        -       |\n`;\n\n\tconst deprecatedSettingNote = localize('telemetry.telemetryLevel.deprecated', \"****Note:*** If this setting is 'off', no telemetry will be sent regardless of other telemetry settings. If this setting is set to anything except 'off' and telemetry is disabled with deprecated settings, no telemetry will be sent.*\");\n\tconst telemetryDescription = `\n${telemetryText} ${externalLinksStatement} ${restartString}\n\n&nbsp;\n\n${telemetryTableDescription}\n${telemetryTable}\n\n&nbsp;\n\n${deprecatedSettingNote}\n`;\n\n\treturn telemetryDescription;\n}\n\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration).registerConfiguration({\n\t'id': TELEMETRY_SECTION_ID,\n\t'order': 110,\n\t'type': 'object',\n\t'title': localize('telemetryConfigurationTitle', \"Telemetry\"),\n\t'properties': {\n\t\t[TELEMETRY_SETTING_ID]: {\n\t\t\t'type': 'string',\n\t\t\t'enum': [TelemetryConfiguration.ON, TelemetryConfiguration.ERROR, TelemetryConfiguration.CRASH, TelemetryConfiguration.OFF],\n\t\t\t'enumDescriptions': [\n\t\t\t\tlocalize('telemetry.telemetryLevel.default', \"Sends usage data, errors, and crash reports.\"),\n\t\t\t\tlocalize('telemetry.telemetryLevel.error', \"Sends general error telemetry and crash reports.\"),\n\t\t\t\tlocalize('telemetry.telemetryLevel.crash', \"Sends OS level crash reports.\"),\n\t\t\t\tlocalize('telemetry.telemetryLevel.off', \"Disables all product telemetry.\")\n\t\t\t],\n\t\t\t'markdownDescription': getTelemetryLevelSettingDescription(),\n\t\t\t'default': TelemetryConfiguration.ON,\n\t\t\t'restricted': true,\n\t\t\t'scope': ConfigurationScope.APPLICATION,\n\t\t\t'tags': ['usesOnlineServices', 'telemetry']\n\t\t}\n\t}\n});\n\n// Deprecated telemetry setting\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration).registerConfiguration({\n\t'id': TELEMETRY_SECTION_ID,\n\t'order': 110,\n\t'type': 'object',\n\t'title': localize('telemetryConfigurationTitle', \"Telemetry\"),\n\t'properties': {\n\t\t[TELEMETRY_OLD_SETTING_ID]: {\n\t\t\t'type': 'boolean',\n\t\t\t'markdownDescription':\n\t\t\t\t!product.privacyStatementUrl ?\n\t\t\t\t\tlocalize('telemetry.enableTelemetry', \"Enable diagnostic data to be collected. This helps us to better understand how {0} is performing and where improvements need to be made.\", product.nameLong) :\n\t\t\t\t\tlocalize('telemetry.enableTelemetryMd', \"Enable diagnostic data to be collected. This helps us to better understand how {0} is performing and where improvements need to be made. [Read more]({1}) about what we collect and our privacy statement.\", product.nameLong, product.privacyStatementUrl),\n\t\t\t'default': true,\n\t\t\t'restricted': true,\n\t\t\t'markdownDeprecationMessage': localize('enableTelemetryDeprecated', \"If this setting is false, no telemetry will be sent regardless of the new setting's value. Deprecated in favor of the {0} setting.\", `\\`#${TELEMETRY_SETTING_ID}#\\``),\n\t\t\t'scope': ConfigurationScope.APPLICATION,\n\t\t\t'tags': ['usesOnlineServices', 'telemetry']\n\t\t}\n\t}\n});\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport type { TelemetryClient } from 'applicationinsights';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { mixin } from 'vs/base/common/objects';\nimport { ITelemetryAppender, validateTelemetryData } from 'vs/platform/telemetry/common/telemetryUtils';\n\nasync function getClient(aiKey: string, testCollector: boolean): Promise<TelemetryClient> {\n\tconst appInsights = await import('applicationinsights');\n\tlet client: TelemetryClient;\n\tif (appInsights.defaultClient) {\n\t\tclient = new appInsights.TelemetryClient(aiKey);\n\t\tclient.channel.setUseDiskRetryCaching(true);\n\t} else {\n\t\tappInsights.setup(aiKey)\n\t\t\t.setAutoCollectRequests(false)\n\t\t\t.setAutoCollectPerformance(false)\n\t\t\t.setAutoCollectExceptions(false)\n\t\t\t.setAutoCollectDependencies(false)\n\t\t\t.setAutoDependencyCorrelation(false)\n\t\t\t.setAutoCollectConsole(false)\n\t\t\t.setInternalLogging(false, false)\n\t\t\t.setUseDiskRetryCaching(true)\n\t\t\t.start();\n\t\tclient = appInsights.defaultClient;\n\t}\n\n\tif (aiKey.indexOf('AIF-') === 0) {\n\t\tclient.config.endpointUrl = testCollector ? 'https://mobile.events.data.microsoft.com/collect/v1' : 'https://vortex.data.microsoft.com/collect/v1';\n\t}\n\treturn client;\n}\n\n\nexport class AppInsightsAppender implements ITelemetryAppender {\n\n\tprivate _aiClient: string | TelemetryClient | undefined;\n\tprivate _asyncAIClient: Promise<TelemetryClient> | null;\n\n\tconstructor(\n\t\tprivate _eventPrefix: string,\n\t\tprivate _defaultData: { [key: string]: any } | null,\n\t\taiKeyOrClientFactory: string | (() => TelemetryClient), // allow factory function for testing\n\t\tprivate readonly testCollector?: boolean,\n\t\tprivate readonly mirrored?: boolean\n\t) {\n\t\tif (!this._defaultData) {\n\t\t\tthis._defaultData = Object.create(null);\n\t\t}\n\n\t\tif (typeof aiKeyOrClientFactory === 'function') {\n\t\t\tthis._aiClient = aiKeyOrClientFactory();\n\t\t} else {\n\t\t\tthis._aiClient = aiKeyOrClientFactory;\n\t\t}\n\t\tthis._asyncAIClient = null;\n\t}\n\n\tprivate _withAIClient(callback: (aiClient: TelemetryClient) => void): void {\n\t\tif (!this._aiClient) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (typeof this._aiClient !== 'string') {\n\t\t\tcallback(this._aiClient);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._asyncAIClient) {\n\t\t\tthis._asyncAIClient = getClient(this._aiClient, this.testCollector ?? false);\n\t\t}\n\n\t\tthis._asyncAIClient.then(\n\t\t\t(aiClient) => {\n\t\t\t\tcallback(aiClient);\n\t\t\t},\n\t\t\t(err) => {\n\t\t\t\tonUnexpectedError(err);\n\t\t\t\tconsole.error(err);\n\t\t\t}\n\t\t);\n\t}\n\n\tlog(eventName: string, data?: any): void {\n\t\tif (!this._aiClient) {\n\t\t\treturn;\n\t\t}\n\t\tdata = mixin(data, this._defaultData);\n\t\tdata = validateTelemetryData(data);\n\n\t\tif (this.testCollector) {\n\t\t\tdata.properties['common.useragent'] = this.mirrored ? 'mirror-collector++' : 'collector++';\n\t\t}\n\n\t\tthis._withAIClient((aiClient) => aiClient.trackEvent({\n\t\t\tname: this._eventPrefix + '/' + eventName,\n\t\t\tproperties: data.properties,\n\t\t\tmeasurements: data.measurements\n\t\t}));\n\t}\n\n\tflush(): Promise<any> {\n\t\tif (this._aiClient) {\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tthis._withAIClient((aiClient) => {\n\t\t\t\t\taiClient.flush({\n\t\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\t\t// all data flushed\n\t\t\t\t\t\t\tthis._aiClient = undefined;\n\t\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { FileAccess } from 'vs/base/common/network';\nimport { Client as TelemetryClient } from 'vs/base/parts/ipc/node/ipc.cp';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ILoggerService } from 'vs/platform/log/common/log';\nimport { ICustomEndpointTelemetryService, ITelemetryData, ITelemetryEndpoint, ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { TelemetryAppenderClient } from 'vs/platform/telemetry/common/telemetryIpc';\nimport { TelemetryLogAppender } from 'vs/platform/telemetry/common/telemetryLogAppender';\nimport { TelemetryService } from 'vs/platform/telemetry/common/telemetryService';\nexport class CustomEndpointTelemetryService implements ICustomEndpointTelemetryService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate customTelemetryServices = new Map<string, ITelemetryService>();\n\n\tconstructor(\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@ILoggerService private readonly loggerService: ILoggerService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t) { }\n\n\tprivate async getCustomTelemetryService(endpoint: ITelemetryEndpoint): Promise<ITelemetryService> {\n\t\tif (!this.customTelemetryServices.has(endpoint.id)) {\n\t\t\tconst { machineId, sessionId } = await this.telemetryService.getTelemetryInfo();\n\t\t\tconst telemetryInfo: { [key: string]: string } = Object.create(null);\n\t\t\ttelemetryInfo['common.vscodemachineid'] = machineId;\n\t\t\ttelemetryInfo['common.vscodesessionid'] = sessionId;\n\t\t\tconst args = [endpoint.id, JSON.stringify(telemetryInfo), endpoint.aiKey];\n\t\t\tconst client = new TelemetryClient(\n\t\t\t\tFileAccess.asFileUri('bootstrap-fork', require).fsPath,\n\t\t\t\t{\n\t\t\t\t\tserverName: 'Debug Telemetry',\n\t\t\t\t\ttimeout: 1000 * 60 * 5,\n\t\t\t\t\targs,\n\t\t\t\t\tenv: {\n\t\t\t\t\t\tELECTRON_RUN_AS_NODE: 1,\n\t\t\t\t\t\tVSCODE_PIPE_LOGGING: 'true',\n\t\t\t\t\t\tVSCODE_AMD_ENTRYPOINT: 'vs/workbench/contrib/debug/node/telemetryApp'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tconst channel = client.getChannel('telemetryAppender');\n\t\t\tconst appenders = [\n\t\t\t\tnew TelemetryAppenderClient(channel),\n\t\t\t\tnew TelemetryLogAppender(this.loggerService, this.environmentService, `[${endpoint.id}] `),\n\t\t\t];\n\n\t\t\tthis.customTelemetryServices.set(endpoint.id, new TelemetryService({\n\t\t\t\tappenders,\n\t\t\t\tsendErrorTelemetry: endpoint.sendErrorTelemetry\n\t\t\t}, this.configurationService));\n\t\t}\n\n\t\treturn this.customTelemetryServices.get(endpoint.id)!;\n\t}\n\n\tasync publicLog(telemetryEndpoint: ITelemetryEndpoint, eventName: string, data?: ITelemetryData): Promise<void> {\n\t\tconst customTelemetryService = await this.getCustomTelemetryService(telemetryEndpoint);\n\t\tawait customTelemetryService.publicLog(eventName, data);\n\t}\n\n\tasync publicLogError(telemetryEndpoint: ITelemetryEndpoint, errorEventName: string, data?: ITelemetryData): Promise<void> {\n\t\tconst customTelemetryService = await this.getCustomTelemetryService(telemetryEndpoint);\n\t\tawait customTelemetryService.publicLogError(errorEventName, data);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { timeout } from 'vs/base/common/async';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable, dispose, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { ILogService } from 'vs/platform/log/common/log';\n\n/**\n * A helper class to track requests that have replies. Using this it's easy to implement an event\n * that accepts a reply.\n */\nexport class RequestStore<T, RequestArgs> extends Disposable {\n\tprivate _lastRequestId = 0;\n\tprivate readonly _timeout: number;\n\tprivate _pendingRequests: Map<number, (resolved: T) => void> = new Map();\n\tprivate _pendingRequestDisposables: Map<number, IDisposable[]> = new Map();\n\n\tprivate readonly _onCreateRequest = this._register(new Emitter<RequestArgs & { requestId: number }>());\n\treadonly onCreateRequest = this._onCreateRequest.event;\n\n\t/**\n\t * @param timeout How long in ms to allow requests to go unanswered for, undefined will use the\n\t * default (15 seconds).\n\t */\n\tconstructor(\n\t\ttimeout: number | undefined,\n\t\t@ILogService private readonly _logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis._timeout = timeout === undefined ? 15000 : timeout;\n\t}\n\n\t/**\n\t * Creates a request.\n\t * @param args The arguments to pass to the onCreateRequest event.\n\t */\n\tcreateRequest(args: RequestArgs): Promise<T> {\n\t\treturn new Promise<T>((resolve, reject) => {\n\t\t\tconst requestId = ++this._lastRequestId;\n\t\t\tthis._pendingRequests.set(requestId, resolve);\n\t\t\tthis._onCreateRequest.fire({ requestId, ...args });\n\t\t\tconst tokenSource = new CancellationTokenSource();\n\t\t\ttimeout(this._timeout, tokenSource.token).then(() => reject(`Request ${requestId} timed out (${this._timeout}ms)`));\n\t\t\tthis._pendingRequestDisposables.set(requestId, [toDisposable(() => tokenSource.cancel())]);\n\t\t});\n\t}\n\n\t/**\n\t * Accept a reply to a request.\n\t * @param requestId The request ID originating from the onCreateRequest event.\n\t * @param data The reply data.\n\t */\n\tacceptReply(requestId: number, data: T) {\n\t\tconst resolveRequest = this._pendingRequests.get(requestId);\n\t\tif (resolveRequest) {\n\t\t\tthis._pendingRequests.delete(requestId);\n\t\t\tdispose(this._pendingRequestDisposables.get(requestId) || []);\n\t\t\tthis._pendingRequestDisposables.delete(requestId);\n\t\t\tresolveRequest(data);\n\t\t} else {\n\t\t\tthis._logService.warn(`RequestStore#acceptReply was called without receiving a matching request ${requestId}`);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { IProcessEnvironment, OperatingSystem } from 'vs/base/common/platform';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IGetTerminalLayoutInfoArgs, IProcessDetails, IPtyHostProcessReplayEvent, ISetTerminalLayoutInfoArgs } from 'vs/platform/terminal/common/terminalProcess';\nimport { ThemeIcon } from 'vs/platform/theme/common/themeService';\n\nexport const enum TerminalSettingPrefix {\n\tShell = 'terminal.integrated.shell.',\n\tShellArgs = 'terminal.integrated.shellArgs.',\n\tDefaultProfile = 'terminal.integrated.defaultProfile.',\n\tProfiles = 'terminal.integrated.profiles.'\n}\n\nexport const enum TerminalSettingId {\n\tShellLinux = 'terminal.integrated.shell.linux',\n\tShellMacOs = 'terminal.integrated.shell.osx',\n\tShellWindows = 'terminal.integrated.shell.windows',\n\tSendKeybindingsToShell = 'terminal.integrated.sendKeybindingsToShell',\n\tAutomationShellLinux = 'terminal.integrated.automationShell.linux',\n\tAutomationShellMacOs = 'terminal.integrated.automationShell.osx',\n\tAutomationShellWindows = 'terminal.integrated.automationShell.windows',\n\tAutomationProfileLinux = 'terminal.integrated.automationProfile.linux',\n\tAutomationProfileMacOs = 'terminal.integrated.automationProfile.osx',\n\tAutomationProfileWindows = 'terminal.integrated.automationProfile.windows',\n\tShellArgsLinux = 'terminal.integrated.shellArgs.linux',\n\tShellArgsMacOs = 'terminal.integrated.shellArgs.osx',\n\tShellArgsWindows = 'terminal.integrated.shellArgs.windows',\n\tProfilesWindows = 'terminal.integrated.profiles.windows',\n\tProfilesMacOs = 'terminal.integrated.profiles.osx',\n\tProfilesLinux = 'terminal.integrated.profiles.linux',\n\tDefaultProfileLinux = 'terminal.integrated.defaultProfile.linux',\n\tDefaultProfileMacOs = 'terminal.integrated.defaultProfile.osx',\n\tDefaultProfileWindows = 'terminal.integrated.defaultProfile.windows',\n\tUseWslProfiles = 'terminal.integrated.useWslProfiles',\n\tTabsEnabled = 'terminal.integrated.tabs.enabled',\n\tTabsEnableAnimation = 'terminal.integrated.tabs.enableAnimation',\n\tTabsHideCondition = 'terminal.integrated.tabs.hideCondition',\n\tTabsShowActiveTerminal = 'terminal.integrated.tabs.showActiveTerminal',\n\tTabsShowActions = 'terminal.integrated.tabs.showActions',\n\tTabsLocation = 'terminal.integrated.tabs.location',\n\tTabsFocusMode = 'terminal.integrated.tabs.focusMode',\n\tMacOptionIsMeta = 'terminal.integrated.macOptionIsMeta',\n\tMacOptionClickForcesSelection = 'terminal.integrated.macOptionClickForcesSelection',\n\tAltClickMovesCursor = 'terminal.integrated.altClickMovesCursor',\n\tCopyOnSelection = 'terminal.integrated.copyOnSelection',\n\tDrawBoldTextInBrightColors = 'terminal.integrated.drawBoldTextInBrightColors',\n\tFontFamily = 'terminal.integrated.fontFamily',\n\tFontSize = 'terminal.integrated.fontSize',\n\tLetterSpacing = 'terminal.integrated.letterSpacing',\n\tLineHeight = 'terminal.integrated.lineHeight',\n\tMinimumContrastRatio = 'terminal.integrated.minimumContrastRatio',\n\tFastScrollSensitivity = 'terminal.integrated.fastScrollSensitivity',\n\tMouseWheelScrollSensitivity = 'terminal.integrated.mouseWheelScrollSensitivity',\n\tBellDuration = 'terminal.integrated.bellDuration',\n\tFontWeight = 'terminal.integrated.fontWeight',\n\tFontWeightBold = 'terminal.integrated.fontWeightBold',\n\tCursorBlinking = 'terminal.integrated.cursorBlinking',\n\tCursorStyle = 'terminal.integrated.cursorStyle',\n\tCursorWidth = 'terminal.integrated.cursorWidth',\n\tScrollback = 'terminal.integrated.scrollback',\n\tDetectLocale = 'terminal.integrated.detectLocale',\n\tDefaultLocation = 'terminal.integrated.defaultLocation',\n\tGpuAcceleration = 'terminal.integrated.gpuAcceleration',\n\tTerminalTitleSeparator = 'terminal.integrated.tabs.separator',\n\tTerminalTitle = 'terminal.integrated.tabs.title',\n\tTerminalDescription = 'terminal.integrated.tabs.description',\n\tRightClickBehavior = 'terminal.integrated.rightClickBehavior',\n\tCwd = 'terminal.integrated.cwd',\n\tConfirmOnExit = 'terminal.integrated.confirmOnExit',\n\tConfirmOnKill = 'terminal.integrated.confirmOnKill',\n\tEnableBell = 'terminal.integrated.enableBell',\n\tCommandsToSkipShell = 'terminal.integrated.commandsToSkipShell',\n\tAllowChords = 'terminal.integrated.allowChords',\n\tAllowMnemonics = 'terminal.integrated.allowMnemonics',\n\tEnvMacOs = 'terminal.integrated.env.osx',\n\tEnvLinux = 'terminal.integrated.env.linux',\n\tEnvWindows = 'terminal.integrated.env.windows',\n\tEnvironmentChangesIndicator = 'terminal.integrated.environmentChangesIndicator',\n\tEnvironmentChangesRelaunch = 'terminal.integrated.environmentChangesRelaunch',\n\tShowExitAlert = 'terminal.integrated.showExitAlert',\n\tSplitCwd = 'terminal.integrated.splitCwd',\n\tWindowsEnableConpty = 'terminal.integrated.windowsEnableConpty',\n\tWordSeparators = 'terminal.integrated.wordSeparators',\n\tEnableFileLinks = 'terminal.integrated.enableFileLinks',\n\tUnicodeVersion = 'terminal.integrated.unicodeVersion',\n\tExperimentalLinkProvider = 'terminal.integrated.experimentalLinkProvider',\n\tLocalEchoLatencyThreshold = 'terminal.integrated.localEchoLatencyThreshold',\n\tLocalEchoEnabled = 'terminal.integrated.localEchoEnabled',\n\tLocalEchoExcludePrograms = 'terminal.integrated.localEchoExcludePrograms',\n\tLocalEchoStyle = 'terminal.integrated.localEchoStyle',\n\tEnablePersistentSessions = 'terminal.integrated.enablePersistentSessions',\n\tPersistentSessionReviveProcess = 'terminal.integrated.persistentSessionReviveProcess',\n\tCustomGlyphs = 'terminal.integrated.customGlyphs',\n\tPersistentSessionScrollback = 'terminal.integrated.persistentSessionScrollback',\n\tInheritEnv = 'terminal.integrated.inheritEnv',\n\tShowLinkHover = 'terminal.integrated.showLinkHover',\n\tIgnoreProcessNames = 'terminal.integrated.ignoreProcessNames',\n}\n\nexport enum WindowsShellType {\n\tCommandPrompt = 'cmd',\n\tPowerShell = 'pwsh',\n\tWsl = 'wsl',\n\tGitBash = 'gitbash'\n}\nexport type TerminalShellType = WindowsShellType | undefined;\nexport interface IRawTerminalInstanceLayoutInfo<T> {\n\trelativeSize: number;\n\tterminal: T;\n}\nexport type ITerminalInstanceLayoutInfoById = IRawTerminalInstanceLayoutInfo<number>;\nexport type ITerminalInstanceLayoutInfo = IRawTerminalInstanceLayoutInfo<IPtyHostAttachTarget>;\n\nexport interface IRawTerminalTabLayoutInfo<T> {\n\tisActive: boolean;\n\tactivePersistentProcessId: number | undefined;\n\tterminals: IRawTerminalInstanceLayoutInfo<T>[];\n}\n\nexport type ITerminalTabLayoutInfoById = IRawTerminalTabLayoutInfo<number>;\n\nexport interface IRawTerminalsLayoutInfo<T> {\n\ttabs: IRawTerminalTabLayoutInfo<T>[];\n}\n\nexport interface IPtyHostAttachTarget {\n\tid: number;\n\tpid: number;\n\ttitle: string;\n\ttitleSource: TitleEventSource;\n\tcwd: string;\n\tworkspaceId: string;\n\tworkspaceName: string;\n\tisOrphan: boolean;\n\ticon: TerminalIcon | undefined;\n\tfixedDimensions: IFixedTerminalDimensions | undefined;\n}\n\nexport enum TitleEventSource {\n\t/** From the API or the rename command that overrides any other type */\n\tApi,\n\t/** From the process name property*/\n\tProcess,\n\t/** From the VT sequence */\n\tSequence,\n\t/** Config changed */\n\tConfig\n}\n\nexport type ITerminalsLayoutInfo = IRawTerminalsLayoutInfo<IPtyHostAttachTarget | null>;\nexport type ITerminalsLayoutInfoById = IRawTerminalsLayoutInfo<number>;\n\nexport interface IRawTerminalInstanceLayoutInfo<T> {\n\trelativeSize: number;\n\tterminal: T;\n}\n\nexport enum TerminalIpcChannels {\n\t/**\n\t * Communicates between the renderer process and shared process.\n\t */\n\tLocalPty = 'localPty',\n\t/**\n\t * Communicates between the shared process and the pty host process.\n\t */\n\tPtyHost = 'ptyHost',\n\t/**\n\t * Deals with logging from the pty host process.\n\t */\n\tLog = 'log',\n\t/**\n\t * Enables the detection of unresponsive pty hosts.\n\t */\n\tHeartbeat = 'heartbeat'\n}\n\nexport const IPtyService = createDecorator<IPtyService>('ptyService');\n\nexport const enum ProcessPropertyType {\n\tCwd = 'cwd',\n\tInitialCwd = 'initialCwd',\n\tFixedDimensions = 'fixedDimensions',\n\tTitle = 'title',\n\tShellType = 'shellType',\n\tHasChildProcesses = 'hasChildProcesses',\n\tResolvedShellLaunchConfig = 'resolvedShellLaunchConfig',\n\tOverrideDimensions = 'overrideDimensions'\n}\n\nexport interface IProcessProperty<T extends ProcessPropertyType> {\n\ttype: T,\n\tvalue: IProcessPropertyMap[T]\n}\n\nexport interface IProcessPropertyMap {\n\t[ProcessPropertyType.Cwd]: string,\n\t[ProcessPropertyType.InitialCwd]: string,\n\t[ProcessPropertyType.FixedDimensions]: IFixedTerminalDimensions,\n\t[ProcessPropertyType.Title]: string\n\t[ProcessPropertyType.ShellType]: TerminalShellType | undefined,\n\t[ProcessPropertyType.HasChildProcesses]: boolean,\n\t[ProcessPropertyType.ResolvedShellLaunchConfig]: IShellLaunchConfig,\n\t[ProcessPropertyType.OverrideDimensions]: ITerminalDimensionsOverride | undefined\n}\n\nexport interface IFixedTerminalDimensions {\n\t/**\n\t * The fixed columns of the terminal.\n\t */\n\tcols?: number;\n\n\t/**\n\t * The fixed rows of the terminal.\n\t */\n\trows?: number;\n}\n\n\nexport interface IPtyService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly onPtyHostExit?: Event<number>;\n\treadonly onPtyHostStart?: Event<void>;\n\treadonly onPtyHostUnresponsive?: Event<void>;\n\treadonly onPtyHostResponsive?: Event<void>;\n\treadonly onPtyHostRequestResolveVariables?: Event<IRequestResolveVariablesEvent>;\n\n\treadonly onProcessData: Event<{ id: number, event: IProcessDataEvent | string }>;\n\treadonly onProcessReady: Event<{ id: number, event: IProcessReadyEvent }>;\n\treadonly onProcessReplay: Event<{ id: number, event: IPtyHostProcessReplayEvent }>;\n\treadonly onProcessOrphanQuestion: Event<{ id: number }>;\n\treadonly onDidRequestDetach: Event<{ requestId: number, workspaceId: string, instanceId: number }>;\n\treadonly onDidChangeProperty: Event<{ id: number, property: IProcessProperty<any> }>\n\treadonly onProcessExit: Event<{ id: number, event: number | undefined }>;\n\n\trestartPtyHost?(): Promise<void>;\n\tshutdownAll?(): Promise<void>;\n\tacceptPtyHostResolvedVariables?(requestId: number, resolved: string[]): Promise<void>;\n\n\tcreateProcess(\n\t\tshellLaunchConfig: IShellLaunchConfig,\n\t\tcwd: string,\n\t\tcols: number,\n\t\trows: number,\n\t\tunicodeVersion: '6' | '11',\n\t\tenv: IProcessEnvironment,\n\t\texecutableEnv: IProcessEnvironment,\n\t\twindowsEnableConpty: boolean,\n\t\tshouldPersist: boolean,\n\t\tworkspaceId: string,\n\t\tworkspaceName: string\n\t): Promise<number>;\n\tattachToProcess(id: number): Promise<void>;\n\tdetachFromProcess(id: number): Promise<void>;\n\n\t/**\n\t * Lists all orphaned processes, ie. those without a connected frontend.\n\t */\n\tlistProcesses(): Promise<IProcessDetails[]>;\n\n\tstart(id: number): Promise<ITerminalLaunchError | undefined>;\n\tshutdown(id: number, immediate: boolean): Promise<void>;\n\tinput(id: number, data: string): Promise<void>;\n\tresize(id: number, cols: number, rows: number): Promise<void>;\n\tgetInitialCwd(id: number): Promise<string>;\n\tgetCwd(id: number): Promise<string>;\n\tgetLatency(id: number): Promise<number>;\n\tacknowledgeDataEvent(id: number, charCount: number): Promise<void>;\n\tsetUnicodeVersion(id: number, version: '6' | '11'): Promise<void>;\n\tprocessBinary(id: number, data: string): Promise<void>;\n\t/** Confirm the process is _not_ an orphan. */\n\torphanQuestionReply(id: number): Promise<void>;\n\tupdateTitle(id: number, title: string, titleSource: TitleEventSource): Promise<void>;\n\tupdateIcon(id: number, icon: TerminalIcon, color?: string): Promise<void>;\n\tgetDefaultSystemShell(osOverride?: OperatingSystem): Promise<string>;\n\tgetProfiles?(workspaceId: string, profiles: unknown, defaultProfile: unknown, includeDetectedProfiles?: boolean): Promise<ITerminalProfile[]>;\n\tgetEnvironment(): Promise<IProcessEnvironment>;\n\tgetWslPath(original: string): Promise<string>;\n\tsetTerminalLayoutInfo(args: ISetTerminalLayoutInfoArgs): Promise<void>;\n\tgetTerminalLayoutInfo(args: IGetTerminalLayoutInfoArgs): Promise<ITerminalsLayoutInfo | undefined>;\n\treduceConnectionGraceTime(): Promise<void>;\n\trequestDetachInstance(workspaceId: string, instanceId: number): Promise<IProcessDetails | undefined>;\n\tacceptDetachInstanceReply(requestId: number, persistentProcessId?: number): Promise<void>;\n\t/**\n\t * Serializes and returns terminal state.\n\t * @param ids The persistent terminal IDs to serialize.\n\t */\n\tserializeTerminalState(ids: number[]): Promise<string>;\n\t/**\n\t * Revives a workspaces terminal processes, these can then be reconnected to using the normal\n\t * flow for restoring terminals after reloading.\n\t */\n\treviveTerminalProcesses(state: string): Promise<void>;\n\trefreshProperty<T extends ProcessPropertyType>(id: number, property: T): Promise<IProcessPropertyMap[T]>;\n\tupdateProperty<T extends ProcessPropertyType>(id: number, property: T, value: IProcessPropertyMap[T]): Promise<void>;\n\n\trefreshIgnoreProcessNames?(names: string[]): Promise<void>;\n}\n\nexport interface IRequestResolveVariablesEvent {\n\trequestId: number;\n\tworkspaceId: string;\n\toriginalText: string[];\n}\n\nexport enum HeartbeatConstants {\n\t/**\n\t * The duration between heartbeats\n\t */\n\tBeatInterval = 5000,\n\t/**\n\t * Defines a multiplier for BeatInterval for how long to wait before starting the second wait\n\t * timer.\n\t */\n\tFirstWaitMultiplier = 1.2,\n\t/**\n\t * Defines a multiplier for BeatInterval for how long to wait before telling the user about\n\t * non-responsiveness. The second timer is to avoid informing the user incorrectly when waking\n\t * the computer up from sleep\n\t */\n\tSecondWaitMultiplier = 1,\n\t/**\n\t * How long to wait before telling the user about non-responsiveness when they try to create a\n\t * process. This short circuits the standard wait timeouts to tell the user sooner and only\n\t * create process is handled to avoid additional perf overhead.\n\t */\n\tCreateProcessTimeout = 5000\n}\n\nexport interface IHeartbeatService {\n\treadonly onBeat: Event<void>;\n}\n\nexport interface IShellLaunchConfig {\n\t/**\n\t * The name of the terminal, if this is not set the name of the process will be used.\n\t */\n\tname?: string;\n\n\t/**\n\t * An string to follow the name of the terminal with, indicating a special kind of terminal\n\t */\n\tdescription?: string;\n\n\t/**\n\t * The shell executable (bash, cmd, etc.).\n\t */\n\texecutable?: string;\n\n\t/**\n\t * The CLI arguments to use with executable, a string[] is in argv format and will be escaped,\n\t * a string is in \"CommandLine\" pre-escaped format and will be used as is. The string option is\n\t * only supported on Windows and will throw an exception if used on macOS or Linux.\n\t */\n\targs?: string[] | string;\n\n\t/**\n\t * The current working directory of the terminal, this overrides the `terminal.integrated.cwd`\n\t * settings key.\n\t */\n\tcwd?: string | URI;\n\n\t/**\n\t * A custom environment for the terminal, if this is not set the environment will be inherited\n\t * from the VS Code process.\n\t */\n\tenv?: ITerminalEnvironment;\n\n\t/**\n\t * Whether to ignore a custom cwd from the `terminal.integrated.cwd` settings key (e.g. if the\n\t * shell is being launched by an extension).\n\t */\n\tignoreConfigurationCwd?: boolean;\n\n\t/** Whether to wait for a key press before closing the terminal. */\n\twaitOnExit?: boolean | string;\n\n\t/**\n\t * A string including ANSI escape sequences that will be written to the terminal emulator\n\t * _before_ the terminal process has launched, a trailing \\n is added at the end of the string.\n\t * This allows for example the terminal instance to display a styled message as the first line\n\t * of the terminal. Use \\x1b over \\033 or \\e for the escape control character.\n\t */\n\tinitialText?: string;\n\n\t/**\n\t * Custom PTY/pseudoterminal process to use.\n\t */\n\tcustomPtyImplementation?: (terminalId: number, cols: number, rows: number) => ITerminalChildProcess;\n\n\t/**\n\t * A UUID generated by the extension host process for terminals created on the extension host process.\n\t */\n\textHostTerminalId?: string;\n\n\t/**\n\t * This is a terminal that attaches to an already running terminal.\n\t */\n\tattachPersistentProcess?: { id: number; pid: number; title: string; titleSource: TitleEventSource; cwd: string; icon?: TerminalIcon; color?: string, hasChildProcesses?: boolean, fixedDimensions?: IFixedTerminalDimensions };\n\n\t/**\n\t * Whether the terminal process environment should be exactly as provided in\n\t * `TerminalOptions.env`. When this is false (default), the environment will be based on the\n\t * window's environment and also apply configured platform settings like\n\t * `terminal.integrated.windows.env` on top. When this is true, the complete environment must be\n\t * provided as nothing will be inherited from the process or any configuration.\n\t */\n\tstrictEnv?: boolean;\n\n\t/**\n\t * Whether the terminal process environment will inherit VS Code's \"shell environment\" that may\n\t * get sourced from running a login shell depnding on how the application was launched.\n\t * Consumers that rely on development tools being present in the $PATH should set this to true.\n\t * This will overwrite the value of the inheritEnv setting.\n\t */\n\tuseShellEnvironment?: boolean;\n\n\t/**\n\t * When enabled the terminal will run the process as normal but not be surfaced to the user\n\t * until `Terminal.show` is called. The typical usage for this is when you need to run\n\t * something that may need interactivity but only want to tell the user about it when\n\t * interaction is needed. Note that the terminals will still be exposed to all extensions\n\t * as normal.\n\t */\n\thideFromUser?: boolean;\n\n\t/**\n\t * Whether this terminal is not a terminal that the user directly created and uses, but rather\n\t * a terminal used to drive some VS Code feature.\n\t */\n\tisFeatureTerminal?: boolean;\n\n\t/**\n\t * Whether this terminal was created by an extension.\n\t */\n\tisExtensionOwnedTerminal?: boolean;\n\n\t/**\n\t * The icon for the terminal, used primarily in the terminal tab.\n\t */\n\ticon?: TerminalIcon;\n\n\t/**\n\t * The color ID to use for this terminal. If not specified it will use the default fallback\n\t */\n\tcolor?: string;\n\n\t/**\n\t * When a parent terminal is provided via API, the group needs\n\t * to find the index in order to place the child\n\t * directly to the right of its parent.\n\t */\n\tparentTerminalId?: number;\n\n\t/**\n\t * The dimensions for the instance as set by the user\n\t * or via Size to Content Width\n\t */\n\tfixedDimensions?: IFixedTerminalDimensions;\n}\n\nexport interface ICreateContributedTerminalProfileOptions {\n\ticon?: URI | string | { light: URI, dark: URI };\n\tcolor?: string;\n\tlocation?: TerminalLocation | { viewColumn: number, preserveState?: boolean } | { splitActiveTerminal: boolean };\n}\n\nexport enum TerminalLocation {\n\tPanel = 1,\n\tEditor = 2\n}\n\nexport const enum TerminalLocationString {\n\tTerminalView = 'view',\n\tEditor = 'editor'\n}\n\nexport type TerminalIcon = ThemeIcon | URI | { light: URI; dark: URI };\n\nexport interface IShellLaunchConfigDto {\n\tname?: string;\n\texecutable?: string;\n\targs?: string[] | string;\n\tcwd?: string | UriComponents;\n\tenv?: ITerminalEnvironment;\n\tuseShellEnvironment?: boolean;\n\thideFromUser?: boolean;\n}\n\nexport interface ITerminalEnvironment {\n\t[key: string]: string | null | undefined;\n}\n\nexport interface ITerminalLaunchError {\n\tmessage: string;\n\tcode?: number;\n}\n\nexport interface IProcessReadyEvent {\n\tpid: number,\n\tcwd: string,\n\tcapabilities: ProcessCapability[],\n\trequiresWindowsMode?: boolean\n}\n\nexport const enum ProcessCapability {\n\tCwdDetection = 'cwdDetection'\n}\n\n/**\n * An interface representing a raw terminal child process, this contains a subset of the\n * child_process.ChildProcess node.js interface.\n */\nexport interface ITerminalChildProcess {\n\t/**\n\t * A unique identifier for the terminal process. Note that the uniqueness only applies to a\n\t * given pty service connection, IDs will be duplicated for remote and local terminals for\n\t * example. The ID will be 0 if it does not support reconnection.\n\t */\n\tid: number;\n\n\t/**\n\t * Whether the process should be persisted across reloads.\n\t */\n\tshouldPersist: boolean;\n\n\t/**\n\t * Capabilities of the process, designated when it starts\n\t */\n\tcapabilities: ProcessCapability[];\n\n\tonProcessData: Event<IProcessDataEvent | string>;\n\tonProcessReady: Event<IProcessReadyEvent>;\n\tonDidChangeProperty: Event<IProcessProperty<any>>;\n\tonProcessExit: Event<number | undefined>;\n\n\t/**\n\t * Starts the process.\n\t *\n\t * @returns undefined when the process was successfully started, otherwise an object containing\n\t * information on what went wrong.\n\t */\n\tstart(): Promise<ITerminalLaunchError | undefined>;\n\n\t/**\n\t * Detach the process from the UI and await reconnect.\n\t */\n\tdetach?(): Promise<void>;\n\n\t/**\n\t * Shutdown the terminal process.\n\t *\n\t * @param immediate When true the process will be killed immediately, otherwise the process will\n\t * be given some time to make sure no additional data comes through.\n\t */\n\tshutdown(immediate: boolean): void;\n\tinput(data: string): void;\n\tprocessBinary(data: string): Promise<void>;\n\tresize(cols: number, rows: number): void;\n\n\t/**\n\t * Acknowledge a data event has been parsed by the terminal, this is used to implement flow\n\t * control to ensure remote processes to not get too far ahead of the client and flood the\n\t * connection.\n\t * @param charCount The number of characters being acknowledged.\n\t */\n\tacknowledgeDataEvent(charCount: number): void;\n\n\t/**\n\t * Sets the unicode version for the process, this drives the size of some characters in the\n\t * xterm-headless instance.\n\t */\n\tsetUnicodeVersion(version: '6' | '11'): Promise<void>;\n\n\tgetInitialCwd(): Promise<string>;\n\tgetCwd(): Promise<string>;\n\tgetLatency(): Promise<number>;\n\trefreshProperty<T extends ProcessPropertyType>(property: T): Promise<IProcessPropertyMap[T]>;\n\tupdateProperty<T extends ProcessPropertyType>(property: T, value: IProcessPropertyMap[T]): Promise<void>;\n}\n\nexport interface IReconnectConstants {\n\tgraceTime: number;\n\tshortGraceTime: number;\n\tscrollback: number;\n}\n\nexport const enum LocalReconnectConstants {\n\t/**\n\t * If there is no reconnection within this time-frame, consider the connection permanently closed...\n\t*/\n\tGraceTime = 60000, // 60 seconds\n\t/**\n\t * Maximal grace time between the first and the last reconnection...\n\t*/\n\tShortGraceTime = 6000, // 6 seconds\n}\n\nexport const enum FlowControlConstants {\n\t/**\n\t * The number of _unacknowledged_ chars to have been sent before the pty is paused in order for\n\t * the client to catch up.\n\t */\n\tHighWatermarkChars = 100000,\n\t/**\n\t * After flow control pauses the pty for the client the catch up, this is the number of\n\t * _unacknowledged_ chars to have been caught up to on the client before resuming the pty again.\n\t * This is used to attempt to prevent pauses in the flowing data; ideally while the pty is\n\t * paused the number of unacknowledged chars would always be greater than 0 or the client will\n\t * appear to stutter. In reality this balance is hard to accomplish though so heavy commands\n\t * will likely pause as latency grows, not flooding the connection is the important thing as\n\t * it's shared with other core functionality.\n\t */\n\tLowWatermarkChars = 5000,\n\t/**\n\t * The number characters that are accumulated on the client side before sending an ack event.\n\t * This must be less than or equal to LowWatermarkChars or the terminal max never unpause.\n\t */\n\tCharCountAckSize = 5000\n}\n\nexport interface IProcessDataEvent {\n\tdata: string;\n\ttrackCommit: boolean;\n\t/**\n\t * When trackCommit is set, this will be set to a promise that resolves when the data is parsed.\n\t */\n\twritePromise?: Promise<void>;\n}\n\nexport interface ITerminalDimensions {\n\t/**\n\t * The columns of the terminal.\n\t */\n\tcols: number;\n\n\t/**\n\t * The rows of the terminal.\n\t */\n\trows: number;\n}\n\nexport interface ITerminalProfile {\n\tprofileName: string;\n\tpath: string;\n\tisDefault: boolean;\n\tisAutoDetected?: boolean;\n\targs?: string | string[] | undefined;\n\tenv?: ITerminalEnvironment;\n\toverrideName?: boolean;\n\tcolor?: string;\n\ticon?: ThemeIcon | URI | { light: URI, dark: URI };\n}\n\nexport interface ITerminalDimensionsOverride extends Readonly<ITerminalDimensions> {\n\t/**\n\t * indicate that xterm must receive these exact dimensions, even if they overflow the ui!\n\t */\n\tforceExactSize?: boolean;\n}\n\nexport const enum ProfileSource {\n\tGitBash = 'Git Bash',\n\tPwsh = 'PowerShell'\n}\n\nexport interface IBaseUnresolvedTerminalProfile {\n\targs?: string | string[] | undefined;\n\tisAutoDetected?: boolean;\n\toverrideName?: boolean;\n\ticon?: string | ThemeIcon | URI | { light: URI, dark: URI };\n\tcolor?: string;\n\tenv?: ITerminalEnvironment;\n}\n\nexport interface ITerminalExecutable extends IBaseUnresolvedTerminalProfile {\n\tpath: string | string[];\n}\n\nexport interface ITerminalProfileSource extends IBaseUnresolvedTerminalProfile {\n\tsource: ProfileSource;\n}\n\n\nexport interface ITerminalContributions {\n\tprofiles?: ITerminalProfileContribution[];\n}\n\nexport interface ITerminalProfileContribution {\n\ttitle: string;\n\tid: string;\n\ticon?: URI | { light: URI, dark: URI } | string;\n\tcolor?: string;\n}\n\nexport interface IExtensionTerminalProfile extends ITerminalProfileContribution {\n\textensionIdentifier: string;\n}\n\nexport type ITerminalProfileObject = ITerminalExecutable | ITerminalProfileSource | IExtensionTerminalProfile | null;\nexport type ITerminalProfileType = ITerminalProfile | IExtensionTerminalProfile;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IPtyService } from 'vs/platform/terminal/common/terminal';\n\nexport const ILocalPtyService = createDecorator<ILocalPtyService>('localPtyService');\n\n/**\n * A service responsible for communicating with the pty host process on Electron.\n *\n * **This service should only be used within the terminal component.**\n */\nexport interface ILocalPtyService extends IPtyService { }\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as os from 'os';\nimport { getCaseInsensitive } from 'vs/base/common/objects';\nimport * as path from 'vs/base/common/path';\nimport { IProcessEnvironment, isWindows } from 'vs/base/common/platform';\nimport * as process from 'vs/base/common/process';\nimport { isString } from 'vs/base/common/types';\nimport * as pfs from 'vs/base/node/pfs';\n\nexport function getWindowsBuildNumber(): number {\n\tconst osVersion = (/(\\d+)\\.(\\d+)\\.(\\d+)/g).exec(os.release());\n\tlet buildNumber: number = 0;\n\tif (osVersion && osVersion.length === 4) {\n\t\tbuildNumber = parseInt(osVersion[3]);\n\t}\n\treturn buildNumber;\n}\n\nexport async function findExecutable(command: string, cwd?: string, paths?: string[], env: IProcessEnvironment = process.env as IProcessEnvironment, exists: (path: string) => Promise<boolean> = pfs.Promises.exists): Promise<string | undefined> {\n\t// If we have an absolute path then we take it.\n\tif (path.isAbsolute(command)) {\n\t\treturn await exists(command) ? command : undefined;\n\t}\n\tif (cwd === undefined) {\n\t\tcwd = process.cwd();\n\t}\n\tconst dir = path.dirname(command);\n\tif (dir !== '.') {\n\t\t// We have a directory and the directory is relative (see above). Make the path absolute\n\t\t// to the current working directory.\n\t\tconst fullPath = path.join(cwd, command);\n\t\treturn await exists(fullPath) ? fullPath : undefined;\n\t}\n\tconst envPath = getCaseInsensitive(env, 'PATH');\n\tif (paths === undefined && isString(envPath)) {\n\t\tpaths = envPath.split(path.delimiter);\n\t}\n\t// No PATH environment. Make path absolute to the cwd.\n\tif (paths === undefined || paths.length === 0) {\n\t\tconst fullPath = path.join(cwd, command);\n\t\treturn await exists(fullPath) ? fullPath : undefined;\n\t}\n\t// We have a simple file name. We get the path variable from the env\n\t// and try to find the executable on the path.\n\tfor (let pathEntry of paths) {\n\t\t// The path entry is absolute.\n\t\tlet fullPath: string;\n\t\tif (path.isAbsolute(pathEntry)) {\n\t\t\tfullPath = path.join(pathEntry, command);\n\t\t} else {\n\t\t\tfullPath = path.join(cwd, pathEntry, command);\n\t\t}\n\n\t\tif (await exists(fullPath)) {\n\t\t\treturn fullPath;\n\t\t}\n\t\tif (isWindows) {\n\t\t\tlet withExtension = fullPath + '.com';\n\t\t\tif (await exists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t\twithExtension = fullPath + '.exe';\n\t\t\tif (await exists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t}\n\t}\n\tconst fullPath = path.join(cwd, command);\n\treturn await exists(fullPath) ? fullPath : undefined;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Color scheme used by the OS and by color themes.\n */\nexport enum ColorScheme {\n\tDARK = 'dark',\n\tLIGHT = 'light',\n\tHIGH_CONTRAST = 'hc'\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Codicon, CSSIcon } from 'vs/base/common/codicons';\nimport { Color } from 'vs/base/common/color';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport * as platform from 'vs/platform/registry/common/platform';\nimport { ColorIdentifier } from 'vs/platform/theme/common/colorRegistry';\nimport { ColorScheme } from 'vs/platform/theme/common/theme';\n\nexport const IThemeService = createDecorator<IThemeService>('themeService');\n\nexport interface ThemeColor {\n\tid: string;\n}\n\nexport namespace ThemeColor {\n\texport function isThemeColor(obj: any): obj is ThemeColor {\n\t\treturn obj && typeof obj === 'object' && typeof (<ThemeColor>obj).id === 'string';\n\t}\n}\n\nexport function themeColorFromId(id: ColorIdentifier) {\n\treturn { id };\n}\n\n// theme icon\nexport interface ThemeIcon {\n\treadonly id: string;\n\treadonly color?: ThemeColor;\n}\n\nexport namespace ThemeIcon {\n\texport function isThemeIcon(obj: any): obj is ThemeIcon {\n\t\treturn obj && typeof obj === 'object' && typeof (<ThemeIcon>obj).id === 'string' && (typeof (<ThemeIcon>obj).color === 'undefined' || ThemeColor.isThemeColor((<ThemeIcon>obj).color));\n\t}\n\n\tconst _regexFromString = new RegExp(`^\\\\$\\\\((${CSSIcon.iconNameExpression}(?:${CSSIcon.iconModifierExpression})?)\\\\)$`);\n\n\texport function fromString(str: string): ThemeIcon | undefined {\n\t\tconst match = _regexFromString.exec(str);\n\t\tif (!match) {\n\t\t\treturn undefined;\n\t\t}\n\t\tlet [, name] = match;\n\t\treturn { id: name };\n\t}\n\n\texport function modify(icon: ThemeIcon, modifier: 'disabled' | 'spin' | undefined): ThemeIcon {\n\t\tlet id = icon.id;\n\t\tconst tildeIndex = id.lastIndexOf('~');\n\t\tif (tildeIndex !== -1) {\n\t\t\tid = id.substring(0, tildeIndex);\n\t\t}\n\t\tif (modifier) {\n\t\t\tid = `${id}~${modifier}`;\n\t\t}\n\t\treturn { id };\n\t}\n\n\texport function getModifier(icon: ThemeIcon): string | undefined {\n\t\tconst tildeIndex = icon.id.lastIndexOf('~');\n\t\tif (tildeIndex !== -1) {\n\t\t\treturn icon.id.substring(tildeIndex + 1);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\texport function isEqual(ti1: ThemeIcon, ti2: ThemeIcon): boolean {\n\t\treturn ti1.id === ti2.id && ti1.color?.id === ti2.color?.id;\n\t}\n\n\texport function asThemeIcon(codicon: Codicon, color?: string): ThemeIcon {\n\t\treturn { id: codicon.id, color: color ? themeColorFromId(color) : undefined };\n\t}\n\n\texport const asClassNameArray: (icon: ThemeIcon) => string[] = CSSIcon.asClassNameArray;\n\texport const asClassName: (icon: ThemeIcon) => string = CSSIcon.asClassName;\n\texport const asCSSSelector: (icon: ThemeIcon) => string = CSSIcon.asCSSSelector;\n}\n\nexport const FileThemeIcon = Codicon.file;\nexport const FolderThemeIcon = Codicon.folder;\n\nexport function getThemeTypeSelector(type: ColorScheme): string {\n\tswitch (type) {\n\t\tcase ColorScheme.DARK: return 'vs-dark';\n\t\tcase ColorScheme.HIGH_CONTRAST: return 'hc-black';\n\t\tdefault: return 'vs';\n\t}\n}\n\nexport interface ITokenStyle {\n\treadonly foreground?: number;\n\treadonly bold?: boolean;\n\treadonly underline?: boolean;\n\treadonly italic?: boolean;\n}\n\nexport interface IColorTheme {\n\n\treadonly type: ColorScheme;\n\n\treadonly label: string;\n\n\t/**\n\t * Resolves the color of the given color identifier. If the theme does not\n\t * specify the color, the default color is returned unless <code>useDefault</code> is set to false.\n\t * @param color the id of the color\n\t * @param useDefault specifies if the default color should be used. If not set, the default is used.\n\t */\n\tgetColor(color: ColorIdentifier, useDefault?: boolean): Color | undefined;\n\n\t/**\n\t * Returns whether the theme defines a value for the color. If not, that means the\n\t * default color will be used.\n\t */\n\tdefines(color: ColorIdentifier): boolean;\n\n\t/**\n\t * Returns the token style for a given classification. The result uses the <code>MetadataConsts</code> format\n\t */\n\tgetTokenStyleMetadata(type: string, modifiers: string[], modelLanguage: string): ITokenStyle | undefined;\n\n\t/**\n\t * List of all colors used with tokens. <code>getTokenStyleMetadata</code> references the colors by index into this list.\n\t */\n\treadonly tokenColorMap: string[];\n\n\t/**\n\t * Defines whether semantic highlighting should be enabled for the theme.\n\t */\n\treadonly semanticHighlighting: boolean;\n}\n\nexport interface IFileIconTheme {\n\treadonly hasFileIcons: boolean;\n\treadonly hasFolderIcons: boolean;\n\treadonly hidesExplorerArrows: boolean;\n}\n\nexport interface ICssStyleCollector {\n\taddRule(rule: string): void;\n}\n\nexport interface IThemingParticipant {\n\t(theme: IColorTheme, collector: ICssStyleCollector, environment: IEnvironmentService): void;\n}\n\nexport interface IThemeService {\n\treadonly _serviceBrand: undefined;\n\n\tgetColorTheme(): IColorTheme;\n\n\treadonly onDidColorThemeChange: Event<IColorTheme>;\n\n\tgetFileIconTheme(): IFileIconTheme;\n\n\treadonly onDidFileIconThemeChange: Event<IFileIconTheme>;\n\n}\n\n// static theming participant\nexport const Extensions = {\n\tThemingContribution: 'base.contributions.theming'\n};\n\nexport interface IThemingRegistry {\n\n\t/**\n\t * Register a theming participant that is invoked on every theme change.\n\t */\n\tonColorThemeChange(participant: IThemingParticipant): IDisposable;\n\n\tgetThemingParticipants(): IThemingParticipant[];\n\n\treadonly onThemingParticipantAdded: Event<IThemingParticipant>;\n}\n\nclass ThemingRegistry implements IThemingRegistry {\n\tprivate themingParticipants: IThemingParticipant[] = [];\n\tprivate readonly onThemingParticipantAddedEmitter: Emitter<IThemingParticipant>;\n\n\tconstructor() {\n\t\tthis.themingParticipants = [];\n\t\tthis.onThemingParticipantAddedEmitter = new Emitter<IThemingParticipant>();\n\t}\n\n\tpublic onColorThemeChange(participant: IThemingParticipant): IDisposable {\n\t\tthis.themingParticipants.push(participant);\n\t\tthis.onThemingParticipantAddedEmitter.fire(participant);\n\t\treturn toDisposable(() => {\n\t\t\tconst idx = this.themingParticipants.indexOf(participant);\n\t\t\tthis.themingParticipants.splice(idx, 1);\n\t\t});\n\t}\n\n\tpublic get onThemingParticipantAdded(): Event<IThemingParticipant> {\n\t\treturn this.onThemingParticipantAddedEmitter.event;\n\t}\n\n\tpublic getThemingParticipants(): IThemingParticipant[] {\n\t\treturn this.themingParticipants;\n\t}\n}\n\nlet themingRegistry = new ThemingRegistry();\nplatform.Registry.add(Extensions.ThemingContribution, themingRegistry);\n\nexport function registerThemingParticipant(participant: IThemingParticipant): IDisposable {\n\treturn themingRegistry.onColorThemeChange(participant);\n}\n\n/**\n * Utility base class for all themable components.\n */\nexport class Themable extends Disposable {\n\tprotected theme: IColorTheme;\n\n\tconstructor(\n\t\tprotected themeService: IThemeService\n\t) {\n\t\tsuper();\n\n\t\tthis.theme = themeService.getColorTheme();\n\n\t\t// Hook up to theme changes\n\t\tthis._register(this.themeService.onDidColorThemeChange(theme => this.onThemeChange(theme)));\n\t}\n\n\tprotected onThemeChange(theme: IColorTheme): void {\n\t\tthis.theme = theme;\n\n\t\tthis.updateStyles();\n\t}\n\n\tprotected updateStyles(): void {\n\t\t// Subclasses to override\n\t}\n\n\tprotected getColor(id: string, modify?: (color: Color, theme: IColorTheme) => Color): string | null {\n\t\tlet color = this.theme.getColor(id);\n\n\t\tif (color && modify) {\n\t\t\tcolor = modify(color, this.theme);\n\t\t}\n\n\t\treturn color ? color.toString() : null;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Codicon } from 'vs/base/common/codicons';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IExtensionTerminalProfile, ITerminalProfile, TerminalIcon } from 'vs/platform/terminal/common/terminal';\nimport { ThemeIcon } from 'vs/platform/theme/common/themeService';\n\nexport function createProfileSchemaEnums(detectedProfiles: ITerminalProfile[], extensionProfiles?: readonly IExtensionTerminalProfile[]): {\n\tvalues: string[] | undefined,\n\tmarkdownDescriptions: string[] | undefined\n} {\n\tconst result = detectedProfiles.map(e => {\n\t\treturn {\n\t\t\tname: e.profileName,\n\t\t\tdescription: createProfileDescription(e)\n\t\t};\n\t});\n\tif (extensionProfiles) {\n\t\tresult.push(...extensionProfiles.map(extensionProfile => {\n\t\t\treturn {\n\t\t\t\tname: extensionProfile.title,\n\t\t\t\tdescription: createExtensionProfileDescription(extensionProfile)\n\t\t\t};\n\t\t}));\n\t}\n\treturn {\n\t\tvalues: result.map(e => e.name),\n\t\tmarkdownDescriptions: result.map(e => e.description)\n\t};\n}\n\nfunction createProfileDescription(profile: ITerminalProfile): string {\n\tlet description = `$(${ThemeIcon.isThemeIcon(profile.icon) ? profile.icon.id : profile.icon ? profile.icon : Codicon.terminal.id}) ${profile.profileName}\\n- path: ${profile.path}`;\n\tif (profile.args) {\n\t\tif (typeof profile.args === 'string') {\n\t\t\tdescription += `\\n- args: \"${profile.args}\"`;\n\t\t} else {\n\t\t\tdescription += `\\n- args: [${profile.args.length === 0 ? '' : `'${profile.args.join(`','`)}'`}]`;\n\t\t}\n\t}\n\tif (profile.overrideName !== undefined) {\n\t\tdescription += `\\n- overrideName: ${profile.overrideName}`;\n\t}\n\tif (profile.color) {\n\t\tdescription += `\\n- color: ${profile.color}`;\n\t}\n\tif (profile.env) {\n\t\tdescription += `\\n- env: ${JSON.stringify(profile.env)}`;\n\t}\n\treturn description;\n}\n\nfunction createExtensionProfileDescription(profile: IExtensionTerminalProfile): string {\n\tlet description = `$(${ThemeIcon.isThemeIcon(profile.icon) ? profile.icon.id : profile.icon ? profile.icon : Codicon.terminal.id}) ${profile.title}\\n- extensionIdenfifier: ${profile.extensionIdentifier}`;\n\treturn description;\n}\n\n\nexport function terminalProfileArgsMatch(args1: string | string[] | undefined, args2: string | string[] | undefined): boolean {\n\tif (!args1 && !args2) {\n\t\treturn true;\n\t} else if (typeof args1 === 'string' && typeof args2 === 'string') {\n\t\treturn args1 === args2;\n\t} else if (Array.isArray(args1) && Array.isArray(args2)) {\n\t\tif (args1.length !== args2.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0; i < args1.length; i++) {\n\t\t\tif (args1[i] !== args2[i]) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nexport function terminalIconsEqual(iconOne?: TerminalIcon, iconTwo?: TerminalIcon): boolean {\n\tif (!iconOne && !iconTwo) {\n\t\treturn true;\n\t} else if (!iconOne || !iconTwo) {\n\t\treturn false;\n\t}\n\n\tif (ThemeIcon.isThemeIcon(iconOne) && ThemeIcon.isThemeIcon(iconTwo)) {\n\t\treturn iconOne.id === iconTwo.id && iconOne.color === iconTwo.color;\n\t}\n\tif (typeof iconOne === 'object' && iconOne && 'light' in iconOne && 'dark' in iconOne\n\t\t&& typeof iconTwo === 'object' && iconTwo && 'light' in iconTwo && 'dark' in iconTwo) {\n\t\tconst castedIcon = (iconOne as { light: unknown, dark: unknown });\n\t\tconst castedIconTwo = (iconTwo as { light: unknown, dark: unknown });\n\t\tif ((URI.isUri(castedIcon.light) || isUriComponents(castedIcon.light)) && (URI.isUri(castedIcon.dark) || isUriComponents(castedIcon.dark))\n\t\t\t&& (URI.isUri(castedIconTwo.light) || isUriComponents(castedIconTwo.light)) && (URI.isUri(castedIconTwo.dark) || isUriComponents(castedIconTwo.dark))) {\n\t\t\treturn castedIcon.light.path === castedIconTwo.light.path && castedIcon.dark.path === castedIconTwo.dark.path;\n\t\t}\n\t}\n\tif ((URI.isUri(iconOne) && URI.isUri(iconTwo)) || (isUriComponents(iconOne) || isUriComponents(iconTwo))) {\n\t\tconst castedIcon = (iconOne as { scheme: unknown, path: unknown });\n\t\tconst castedIconTwo = (iconTwo as { scheme: unknown, path: unknown });\n\t\treturn castedIcon.path === castedIconTwo.path && castedIcon.scheme === castedIconTwo.scheme;\n\t}\n\n\treturn false;\n}\n\n\nexport function isUriComponents(thing: unknown): thing is UriComponents {\n\tif (!thing) {\n\t\treturn false;\n\t}\n\treturn typeof (<any>thing).path === 'string' &&\n\t\ttypeof (<any>thing).scheme === 'string';\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { iconRegistry } from 'vs/base/common/codicons';\nimport { IJSONSchema, IJSONSchemaMap } from 'vs/base/common/jsonSchema';\nimport { OperatingSystem } from 'vs/base/common/platform';\nimport { localize } from 'vs/nls';\nimport { ConfigurationScope, Extensions, IConfigurationNode, IConfigurationRegistry } from 'vs/platform/configuration/common/configurationRegistry';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { IExtensionTerminalProfile, ITerminalProfile, TerminalSettingId } from 'vs/platform/terminal/common/terminal';\nimport { createProfileSchemaEnums } from 'vs/platform/terminal/common/terminalProfiles';\n\nconst terminalProfileBaseProperties: IJSONSchemaMap = {\n\targs: {\n\t\tdescription: localize('terminalProfile.args', 'An optional set of arguments to run the shell executable with.'),\n\t\ttype: 'array',\n\t\titems: {\n\t\t\ttype: 'string'\n\t\t}\n\t},\n\toverrideName: {\n\t\tdescription: localize('terminalProfile.overrideName', 'Controls whether or not the profile name overrides the auto detected one.'),\n\t\ttype: 'boolean'\n\t},\n\ticon: {\n\t\tdescription: localize('terminalProfile.icon', 'A codicon ID to associate with this terminal.'),\n\t\ttype: 'string',\n\t\tenum: Array.from(iconRegistry.all, icon => icon.id),\n\t\tmarkdownEnumDescriptions: Array.from(iconRegistry.all, icon => `$(${icon.id})`),\n\t},\n\tcolor: {\n\t\tdescription: localize('terminalProfile.color', 'A theme color ID to associate with this terminal.'),\n\t\ttype: ['string', 'null'],\n\t\tenum: [\n\t\t\t'terminal.ansiBlack',\n\t\t\t'terminal.ansiRed',\n\t\t\t'terminal.ansiGreen',\n\t\t\t'terminal.ansiYellow',\n\t\t\t'terminal.ansiBlue',\n\t\t\t'terminal.ansiMagenta',\n\t\t\t'terminal.ansiCyan',\n\t\t\t'terminal.ansiWhite'\n\t\t],\n\t\tdefault: null\n\t},\n\tenv: {\n\t\tmarkdownDescription: localize('terminalProfile.env', \"An object with environment variables that will be added to the terminal profile process. Set to `null` to delete environment variables from the base environment.\"),\n\t\ttype: 'object',\n\t\tadditionalProperties: {\n\t\t\ttype: ['string', 'null']\n\t\t},\n\t\tdefault: {}\n\t}\n};\n\nconst terminalProfileSchema: IJSONSchema = {\n\ttype: 'object',\n\trequired: ['path'],\n\tproperties: {\n\t\tpath: {\n\t\t\tdescription: localize('terminalProfile.path', 'A single path to a shell executable or an array of paths that will be used as fallbacks when one fails.'),\n\t\t\ttype: ['string', 'array'],\n\t\t\titems: {\n\t\t\t\ttype: 'string'\n\t\t\t}\n\t\t},\n\t\t...terminalProfileBaseProperties\n\t}\n};\n\nconst terminalAutomationProfileSchema: IJSONSchema = {\n\ttype: 'object',\n\trequired: ['path'],\n\tproperties: {\n\t\tpath: {\n\t\t\tdescription: localize('terminalAutomationProfile.path', 'A single path to a shell executable.'),\n\t\t\ttype: ['string'],\n\t\t\titems: {\n\t\t\t\ttype: 'string'\n\t\t\t}\n\t\t},\n\t\t...terminalProfileBaseProperties\n\t}\n};\n\nconst shellDeprecationMessageLinux = localize('terminal.integrated.shell.linux.deprecation', \"This is deprecated, the new recommended way to configure your default shell is by creating a terminal profile in {0} and setting its profile name as the default in {1}. This will currently take priority over the new profiles settings but that will change in the future.\", '`#terminal.integrated.profiles.linux#`', '`#terminal.integrated.defaultProfile.linux#`');\nconst shellDeprecationMessageOsx = localize('terminal.integrated.shell.osx.deprecation', \"This is deprecated, the new recommended way to configure your default shell is by creating a terminal profile in {0} and setting its profile name as the default in {1}. This will currently take priority over the new profiles settings but that will change in the future.\", '`#terminal.integrated.profiles.osx#`', '`#terminal.integrated.defaultProfile.osx#`');\nconst shellDeprecationMessageWindows = localize('terminal.integrated.shell.windows.deprecation', \"This is deprecated, the new recommended way to configure your default shell is by creating a terminal profile in {0} and setting its profile name as the default in {1}. This will currently take priority over the new profiles settings but that will change in the future.\", '`#terminal.integrated.profiles.windows#`', '`#terminal.integrated.defaultProfile.windows#`');\nconst automationShellDeprecationMessageLinux = localize('terminal.integrated.automationShell.linux.deprecation', \"This is deprecated, the new recommended way to configure your automation shell is by creating a terminal automation profile with {0}. This will currently take priority over the new automation profile settings but that will change in the future.\", '`#terminal.integrated.automationProfile.linux#`');\nconst automationShellDeprecationMessageOsx = localize('terminal.integrated.automationShell.osx.deprecation', \"This is deprecated, the new recommended way to configure your automation shell is by creating a terminal automation profile with {0}. This will currently take priority over the new automation profile settings but that will change in the future.\", '`#terminal.integrated.automationProfile.osx#`');\nconst automationShellDeprecationMessageWindows = localize('terminal.integrated.automationShell.windows.deprecation', \"This is deprecated, the new recommended way to configure your automation shell is by creating a terminal automation profile with {0}. This will currently take priority over the new automation profile settings but that will change in the future.\", '`#terminal.integrated.automationProfile.windows#`');\n\nconst terminalPlatformConfiguration: IConfigurationNode = {\n\tid: 'terminal',\n\torder: 100,\n\ttitle: localize('terminalIntegratedConfigurationTitle', \"Integrated Terminal\"),\n\ttype: 'object',\n\tproperties: {\n\t\t[TerminalSettingId.AutomationShellLinux]: {\n\t\t\trestricted: true,\n\t\t\tmarkdownDescription: localize({\n\t\t\t\tkey: 'terminal.integrated.automationShell.linux',\n\t\t\t\tcomment: ['{0} and {1} are the `shell` and `shellArgs` settings keys']\n\t\t\t}, \"A path that when set will override {0} and ignore {1} values for automation-related terminal usage like tasks and debug.\", '`terminal.integrated.shell.linux`', '`shellArgs`'),\n\t\t\ttype: ['string', 'null'],\n\t\t\tdefault: null,\n\t\t\tmarkdownDeprecationMessage: automationShellDeprecationMessageLinux\n\t\t},\n\t\t[TerminalSettingId.AutomationShellMacOs]: {\n\t\t\trestricted: true,\n\t\t\tmarkdownDescription: localize({\n\t\t\t\tkey: 'terminal.integrated.automationShell.osx',\n\t\t\t\tcomment: ['{0} and {1} are the `shell` and `shellArgs` settings keys']\n\t\t\t}, \"A path that when set will override {0} and ignore {1} values for automation-related terminal usage like tasks and debug.\", '`terminal.integrated.shell.osx`', '`shellArgs`'),\n\t\t\ttype: ['string', 'null'],\n\t\t\tdefault: null,\n\t\t\tmarkdownDeprecationMessage: automationShellDeprecationMessageOsx\n\t\t},\n\t\t[TerminalSettingId.AutomationShellWindows]: {\n\t\t\trestricted: true,\n\t\t\tmarkdownDescription: localize({\n\t\t\t\tkey: 'terminal.integrated.automationShell.windows',\n\t\t\t\tcomment: ['{0} and {1} are the `shell` and `shellArgs` settings keys']\n\t\t\t}, \"A path that when set will override {0} and ignore {1} values for automation-related terminal usage like tasks and debug.\", '`terminal.integrated.shell.windows`', '`shellArgs`'),\n\t\t\ttype: ['string', 'null'],\n\t\t\tdefault: null,\n\t\t\tmarkdownDeprecationMessage: automationShellDeprecationMessageWindows\n\t\t},\n\t\t[TerminalSettingId.AutomationProfileLinux]: {\n\t\t\trestricted: true,\n\t\t\tmarkdownDescription: localize('terminal.integrated.automationProfile.linux', \"The terminal profile to use on Linux for automation-related terminal usage like tasks and debug. This setting will currently be ignored if {0} is set.\", '#terminal.integrated.automationShell.linux#'),\n\t\t\ttype: ['object', 'null'],\n\t\t\tdefault: null,\n\t\t\t'anyOf': [\n\t\t\t\t{ type: 'null' },\n\t\t\t\tterminalAutomationProfileSchema\n\t\t\t],\n\t\t\tdefaultSnippets: [\n\t\t\t\t{\n\t\t\t\t\tbody: {\n\t\t\t\t\t\tpath: '${1}',\n\t\t\t\t\t\ticon: '${2}'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t[TerminalSettingId.AutomationProfileMacOs]: {\n\t\t\trestricted: true,\n\t\t\tdescription: localize('terminal.integrated.automationProfile.osx', \"The terminal profile to use on macOS for automation-related terminal usage like tasks and debug. This setting will currently be ignored if {0} is set.\", '#terminal.integrated.automationShell.osx#'),\n\t\t\ttype: ['object', 'null'],\n\t\t\tdefault: null,\n\t\t\t'anyOf': [\n\t\t\t\t{ type: 'null' },\n\t\t\t\tterminalAutomationProfileSchema\n\t\t\t],\n\t\t\tdefaultSnippets: [\n\t\t\t\t{\n\t\t\t\t\tbody: {\n\t\t\t\t\t\tpath: '${1}',\n\t\t\t\t\t\ticon: '${2}'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t[TerminalSettingId.AutomationProfileWindows]: {\n\t\t\trestricted: true,\n\t\t\tdescription: localize('terminal.integrated.automationProfile.windows', \"The terminal profile to use for automation-related terminal usage like tasks and debug. This setting will currently be ignored if {0} is set.\", '#terminal.integrated.automationShell.windows#'),\n\t\t\ttype: ['object', 'null'],\n\t\t\tdefault: null,\n\t\t\t'anyOf': [\n\t\t\t\t{ type: 'null' },\n\t\t\t\tterminalAutomationProfileSchema\n\t\t\t],\n\t\t\tdefaultSnippets: [\n\t\t\t\t{\n\t\t\t\t\tbody: {\n\t\t\t\t\t\tpath: '${1}',\n\t\t\t\t\t\ticon: '${2}'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t[TerminalSettingId.ShellLinux]: {\n\t\t\trestricted: true,\n\t\t\tmarkdownDescription: localize('terminal.integrated.shell.linux', \"The path of the shell that the terminal uses on Linux. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).\"),\n\t\t\ttype: ['string', 'null'],\n\t\t\tdefault: null,\n\t\t\tmarkdownDeprecationMessage: shellDeprecationMessageLinux\n\t\t},\n\t\t[TerminalSettingId.ShellMacOs]: {\n\t\t\trestricted: true,\n\t\t\tmarkdownDescription: localize('terminal.integrated.shell.osx', \"The path of the shell that the terminal uses on macOS. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).\"),\n\t\t\ttype: ['string', 'null'],\n\t\t\tdefault: null,\n\t\t\tmarkdownDeprecationMessage: shellDeprecationMessageOsx\n\t\t},\n\t\t[TerminalSettingId.ShellWindows]: {\n\t\t\trestricted: true,\n\t\t\tmarkdownDescription: localize('terminal.integrated.shell.windows', \"The path of the shell that the terminal uses on Windows. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).\"),\n\t\t\ttype: ['string', 'null'],\n\t\t\tdefault: null,\n\t\t\tmarkdownDeprecationMessage: shellDeprecationMessageWindows\n\t\t},\n\t\t[TerminalSettingId.ShellArgsLinux]: {\n\t\t\trestricted: true,\n\t\t\tmarkdownDescription: localize('terminal.integrated.shellArgs.linux', \"The command line arguments to use when on the Linux terminal. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).\"),\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\ttype: 'string'\n\t\t\t},\n\t\t\tdefault: [],\n\t\t\tmarkdownDeprecationMessage: shellDeprecationMessageLinux\n\t\t},\n\t\t[TerminalSettingId.ShellArgsMacOs]: {\n\t\t\trestricted: true,\n\t\t\tmarkdownDescription: localize('terminal.integrated.shellArgs.osx', \"The command line arguments to use when on the macOS terminal. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).\"),\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\ttype: 'string'\n\t\t\t},\n\t\t\t// Unlike on Linux, ~/.profile is not sourced when logging into a macOS session. This\n\t\t\t// is the reason terminals on macOS typically run login shells by default which set up\n\t\t\t// the environment. See http://unix.stackexchange.com/a/119675/115410\n\t\t\tdefault: ['-l'],\n\t\t\tmarkdownDeprecationMessage: shellDeprecationMessageOsx\n\t\t},\n\t\t[TerminalSettingId.ShellArgsWindows]: {\n\t\t\trestricted: true,\n\t\t\tmarkdownDescription: localize('terminal.integrated.shellArgs.windows', \"The command line arguments to use when on the Windows terminal. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).\"),\n\t\t\t'anyOf': [\n\t\t\t\t{\n\t\t\t\t\ttype: 'array',\n\t\t\t\t\titems: {\n\t\t\t\t\t\ttype: 'string',\n\t\t\t\t\t\tmarkdownDescription: localize('terminal.integrated.shellArgs.windows', \"The command line arguments to use when on the Windows terminal. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).\")\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tmarkdownDescription: localize('terminal.integrated.shellArgs.windows.string', \"The command line arguments in [command-line format](https://msdn.microsoft.com/en-au/08dfcab2-eb6e-49a4-80eb-87d4076c98c6) to use when on the Windows terminal. [Read more about configuring the shell](https://code.visualstudio.com/docs/editor/integrated-terminal#_terminal-profiles).\")\n\t\t\t\t}\n\t\t\t],\n\t\t\tdefault: [],\n\t\t\tmarkdownDeprecationMessage: shellDeprecationMessageWindows\n\t\t},\n\t\t[TerminalSettingId.ProfilesWindows]: {\n\t\t\trestricted: true,\n\t\t\tmarkdownDescription: localize(\n\t\t\t\t{\n\t\t\t\t\tkey: 'terminal.integrated.profiles.windows',\n\t\t\t\t\tcomment: ['{0}, {1}, and {2} are the `source`, `path` and optional `args` settings keys']\n\t\t\t\t},\n\t\t\t\t\"The Windows profiles to present when creating a new terminal via the terminal dropdown. Use the {0} property to automatically detect the shell's location. Or set the {1} property manually with an optional {2}.\\n\\nSet an existing profile to {3} to hide the profile from the list, for example: {4}.\", '`source`', '`path`', '`args`', '`null`', '`\"Ubuntu-20.04 (WSL)\": null`'\n\t\t\t),\n\t\t\ttype: 'object',\n\t\t\tdefault: {\n\t\t\t\t'PowerShell': {\n\t\t\t\t\tsource: 'PowerShell',\n\t\t\t\t\ticon: 'terminal-powershell'\n\t\t\t\t},\n\t\t\t\t'Command Prompt': {\n\t\t\t\t\tpath: [\n\t\t\t\t\t\t'${env:windir}\\\\Sysnative\\\\cmd.exe',\n\t\t\t\t\t\t'${env:windir}\\\\System32\\\\cmd.exe'\n\t\t\t\t\t],\n\t\t\t\t\targs: [],\n\t\t\t\t\ticon: 'terminal-cmd'\n\t\t\t\t},\n\t\t\t\t'Git Bash': {\n\t\t\t\t\tsource: 'Git Bash'\n\t\t\t\t}\n\t\t\t},\n\t\t\tadditionalProperties: {\n\t\t\t\t'anyOf': [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\trequired: ['source'],\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\tsource: {\n\t\t\t\t\t\t\t\tdescription: localize('terminalProfile.windowsSource', 'A profile source that will auto detect the paths to the shell.'),\n\t\t\t\t\t\t\t\tenum: ['PowerShell', 'Git Bash']\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t...terminalProfileBaseProperties\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\trequired: ['extensionIdentifier', 'id', 'title'],\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\textensionIdentifier: {\n\t\t\t\t\t\t\t\tdescription: localize('terminalProfile.windowsExtensionIdentifier', 'The extension that contributed this profile.'),\n\t\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tid: {\n\t\t\t\t\t\t\t\tdescription: localize('terminalProfile.windowsExtensionId', 'The id of the extension terminal'),\n\t\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\t\tdescription: localize('terminalProfile.windowsExtensionTitle', 'The name of the extension terminal'),\n\t\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t...terminalProfileBaseProperties\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{ type: 'null' },\n\t\t\t\t\tterminalProfileSchema\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t[TerminalSettingId.ProfilesMacOs]: {\n\t\t\trestricted: true,\n\t\t\tmarkdownDescription: localize(\n\t\t\t\t{\n\t\t\t\t\tkey: 'terminal.integrated.profile.osx',\n\t\t\t\t\tcomment: ['{0} and {1} are the `path` and optional `args` settings keys']\n\t\t\t\t},\n\t\t\t\t\"The macOS profiles to present when creating a new terminal via the terminal dropdown. Set the {0} property manually with an optional {1}.\\n\\nSet an existing profile to {2} to hide the profile from the list, for example: {3}.\", '`path`', '`args`', '`null`', '`\"bash\": null`'\n\t\t\t),\n\t\t\ttype: 'object',\n\t\t\tdefault: {\n\t\t\t\t'bash': {\n\t\t\t\t\tpath: 'bash',\n\t\t\t\t\targs: ['-l'],\n\t\t\t\t\ticon: 'terminal-bash'\n\t\t\t\t},\n\t\t\t\t'zsh': {\n\t\t\t\t\tpath: 'zsh',\n\t\t\t\t\targs: ['-l']\n\t\t\t\t},\n\t\t\t\t'fish': {\n\t\t\t\t\tpath: 'fish',\n\t\t\t\t\targs: ['-l']\n\t\t\t\t},\n\t\t\t\t'tmux': {\n\t\t\t\t\tpath: 'tmux',\n\t\t\t\t\ticon: 'terminal-tmux'\n\t\t\t\t},\n\t\t\t\t'pwsh': {\n\t\t\t\t\tpath: 'pwsh',\n\t\t\t\t\ticon: 'terminal-powershell'\n\t\t\t\t}\n\t\t\t},\n\t\t\tadditionalProperties: {\n\t\t\t\t'anyOf': [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\trequired: ['extensionIdentifier', 'id', 'title'],\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\textensionIdentifier: {\n\t\t\t\t\t\t\t\tdescription: localize('terminalProfile.osxExtensionIdentifier', 'The extension that contributed this profile.'),\n\t\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tid: {\n\t\t\t\t\t\t\t\tdescription: localize('terminalProfile.osxExtensionId', 'The id of the extension terminal'),\n\t\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\t\tdescription: localize('terminalProfile.osxExtensionTitle', 'The name of the extension terminal'),\n\t\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t...terminalProfileBaseProperties\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{ type: 'null' },\n\t\t\t\t\tterminalProfileSchema\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t[TerminalSettingId.ProfilesLinux]: {\n\t\t\trestricted: true,\n\t\t\tmarkdownDescription: localize(\n\t\t\t\t{\n\t\t\t\t\tkey: 'terminal.integrated.profile.linux',\n\t\t\t\t\tcomment: ['{0} and {1} are the `path` and optional `args` settings keys']\n\t\t\t\t},\n\t\t\t\t\"The Linux profiles to present when creating a new terminal via the terminal dropdown. Set the {0} property manually with an optional {1}.\\n\\nSet an existing profile to {2} to hide the profile from the list, for example: {3}.\", '`path`', '`args`', '`null`', '`\"bash\": null`'\n\t\t\t),\n\t\t\ttype: 'object',\n\t\t\tdefault: {\n\t\t\t\t'bash': {\n\t\t\t\t\tpath: 'bash',\n\t\t\t\t\ticon: 'terminal-bash'\n\t\t\t\t},\n\t\t\t\t'zsh': {\n\t\t\t\t\tpath: 'zsh'\n\t\t\t\t},\n\t\t\t\t'fish': {\n\t\t\t\t\tpath: 'fish'\n\t\t\t\t},\n\t\t\t\t'tmux': {\n\t\t\t\t\tpath: 'tmux',\n\t\t\t\t\ticon: 'terminal-tmux'\n\t\t\t\t},\n\t\t\t\t'pwsh': {\n\t\t\t\t\tpath: 'pwsh',\n\t\t\t\t\ticon: 'terminal-powershell'\n\t\t\t\t}\n\t\t\t},\n\t\t\tadditionalProperties: {\n\t\t\t\t'anyOf': [\n\t\t\t\t\t{\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\trequired: ['extensionIdentifier', 'id', 'title'],\n\t\t\t\t\t\tproperties: {\n\t\t\t\t\t\t\textensionIdentifier: {\n\t\t\t\t\t\t\t\tdescription: localize('terminalProfile.linuxExtensionIdentifier', 'The extension that contributed this profile.'),\n\t\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tid: {\n\t\t\t\t\t\t\t\tdescription: localize('terminalProfile.linuxExtensionId', 'The id of the extension terminal'),\n\t\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttitle: {\n\t\t\t\t\t\t\t\tdescription: localize('terminalProfile.linuxExtensionTitle', 'The name of the extension terminal'),\n\t\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t...terminalProfileBaseProperties\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{ type: 'null' },\n\t\t\t\t\tterminalProfileSchema\n\t\t\t\t]\n\t\t\t}\n\t\t},\n\t\t[TerminalSettingId.UseWslProfiles]: {\n\t\t\tdescription: localize('terminal.integrated.useWslProfiles', 'Controls whether or not WSL distros are shown in the terminal dropdown'),\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true\n\t\t},\n\t\t[TerminalSettingId.InheritEnv]: {\n\t\t\tscope: ConfigurationScope.APPLICATION,\n\t\t\tdescription: localize('terminal.integrated.inheritEnv', \"Whether new shells should inherit their environment from VS Code, which may source a login shell to ensure $PATH and other development variables are initialized. This has no effect on Windows.\"),\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true\n\t\t},\n\t\t[TerminalSettingId.PersistentSessionScrollback]: {\n\t\t\tscope: ConfigurationScope.APPLICATION,\n\t\t\tmarkdownDescription: localize('terminal.integrated.persistentSessionScrollback', \"Controls the maximum amount of lines that will be restored when reconnecting to a persistent terminal session. Increasing this will restore more lines of scrollback at the cost of more memory and increase the time it takes to connect to terminals on start up. This setting requires a restart to take effect and should be set to a value less than or equal to `#terminal.integrated.scrollback#`.\"),\n\t\t\ttype: 'number',\n\t\t\tdefault: 100\n\t\t},\n\t\t[TerminalSettingId.ShowLinkHover]: {\n\t\t\tscope: ConfigurationScope.APPLICATION,\n\t\t\tdescription: localize('terminal.integrated.showLinkHover', \"Whether to show hovers for links in the terminal output.\"),\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true\n\t\t},\n\t\t[TerminalSettingId.IgnoreProcessNames]: {\n\t\t\tdescription: localize('terminal.integrated.confirmIgnoreProcesses', \"Configurable to provide a custom setting to ignore processes\"),\n\t\t\ttype: 'array',\n\t\t\titems: {\n\t\t\t\ttype: 'string',\n\t\t\t\tuniqueItems: true\n\t\t\t},\n\t\t\tdefault: [\n\t\t\t\t// Popular prompt programs, these should not count as child processes\n\t\t\t\t'starship',\n\t\t\t\t'oh-my-posh',\n\t\t\t\t// Git bash may runs a subprocess of itself (bin\\bash.exe -> usr\\bin\\bash.exe)\n\t\t\t\t'bash',\n\t\t\t\t'zsh',\n\t\t\t]\n\t\t}\n\t}\n};\n\n/**\n * Registers terminal configurations required by shared process and remote server.\n */\nexport function registerTerminalPlatformConfiguration() {\n\tRegistry.as<IConfigurationRegistry>(Extensions.Configuration).registerConfiguration(terminalPlatformConfiguration);\n\tregisterTerminalDefaultProfileConfiguration();\n}\n\nlet defaultProfilesConfiguration: IConfigurationNode | undefined;\nexport function registerTerminalDefaultProfileConfiguration(detectedProfiles?: { os: OperatingSystem, profiles: ITerminalProfile[] }, extensionContributedProfiles?: readonly IExtensionTerminalProfile[]) {\n\tconst registry = Registry.as<IConfigurationRegistry>(Extensions.Configuration);\n\tlet profileEnum;\n\tif (detectedProfiles) {\n\t\tprofileEnum = createProfileSchemaEnums(detectedProfiles?.profiles, extensionContributedProfiles);\n\t}\n\tconst oldDefaultProfilesConfiguration = defaultProfilesConfiguration;\n\tdefaultProfilesConfiguration = {\n\t\tid: 'terminal',\n\t\torder: 100,\n\t\ttitle: localize('terminalIntegratedConfigurationTitle', \"Integrated Terminal\"),\n\t\ttype: 'object',\n\t\tproperties: {\n\t\t\t[TerminalSettingId.DefaultProfileLinux]: {\n\t\t\t\trestricted: true,\n\t\t\t\tmarkdownDescription: localize('terminal.integrated.defaultProfile.linux', \"The default profile used on Linux. This setting will currently be ignored if either {0} or {1} are set.\", '`terminal.integrated.shell.linux`', '`terminal.integrated.shellArgs.linux`'),\n\t\t\t\ttype: ['string', 'null'],\n\t\t\t\tdefault: null,\n\t\t\t\tenum: detectedProfiles?.os === OperatingSystem.Linux ? profileEnum?.values : undefined,\n\t\t\t\tmarkdownEnumDescriptions: detectedProfiles?.os === OperatingSystem.Linux ? profileEnum?.markdownDescriptions : undefined\n\t\t\t},\n\t\t\t[TerminalSettingId.DefaultProfileMacOs]: {\n\t\t\t\trestricted: true,\n\t\t\t\tmarkdownDescription: localize('terminal.integrated.defaultProfile.osx', \"The default profile used on macOS. This setting will currently be ignored if either {0} or {1} are set.\", '`terminal.integrated.shell.osx`', '`terminal.integrated.shellArgs.osx`'),\n\t\t\t\ttype: ['string', 'null'],\n\t\t\t\tdefault: null,\n\t\t\t\tenum: detectedProfiles?.os === OperatingSystem.Macintosh ? profileEnum?.values : undefined,\n\t\t\t\tmarkdownEnumDescriptions: detectedProfiles?.os === OperatingSystem.Macintosh ? profileEnum?.markdownDescriptions : undefined\n\t\t\t},\n\t\t\t[TerminalSettingId.DefaultProfileWindows]: {\n\t\t\t\trestricted: true,\n\t\t\t\tmarkdownDescription: localize('terminal.integrated.defaultProfile.windows', \"The default profile used on Windows. This setting will currently be ignored if either {0} or {1} are set.\", '`terminal.integrated.shell.windows`', '`terminal.integrated.shellArgs.windows`'),\n\t\t\t\ttype: ['string', 'null'],\n\t\t\t\tdefault: null,\n\t\t\t\tenum: detectedProfiles?.os === OperatingSystem.Windows ? profileEnum?.values : undefined,\n\t\t\t\tmarkdownEnumDescriptions: detectedProfiles?.os === OperatingSystem.Windows ? profileEnum?.markdownDescriptions : undefined\n\t\t\t},\n\t\t}\n\t};\n\tregistry.updateConfigurations({ add: [defaultProfilesConfiguration], remove: oldDefaultProfilesConfiguration ? [oldDefaultProfilesConfiguration] : [] });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as cp from 'child_process';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { basename, delimiter, normalize } from 'vs/base/common/path';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport * as pfs from 'vs/base/node/pfs';\nimport { enumeratePowerShellInstallations } from 'vs/base/node/powershell';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ITerminalEnvironment, ITerminalExecutable, ITerminalProfile, ITerminalProfileSource, ProfileSource, TerminalIcon, TerminalSettingId } from 'vs/platform/terminal/common/terminal';\nimport { findExecutable, getWindowsBuildNumber } from 'vs/platform/terminal/node/terminalEnvironment';\nimport { ThemeIcon } from 'vs/platform/theme/common/themeService';\n\nlet profileSources: Map<string, IPotentialTerminalProfile> | undefined;\nlet logIfWslNotInstalled: boolean = true;\n\nexport function detectAvailableProfiles(\n\tprofiles: unknown,\n\tdefaultProfile: unknown,\n\tincludeDetectedProfiles: boolean,\n\tconfigurationService: IConfigurationService,\n\tshellEnv: typeof process.env = process.env,\n\tfsProvider?: IFsProvider,\n\tlogService?: ILogService,\n\tvariableResolver?: (text: string[]) => Promise<string[]>,\n\ttestPwshSourcePaths?: string[]\n): Promise<ITerminalProfile[]> {\n\tfsProvider = fsProvider || {\n\t\texistsFile: pfs.SymlinkSupport.existsFile,\n\t\treadFile: pfs.Promises.readFile\n\t};\n\tif (isWindows) {\n\t\treturn detectAvailableWindowsProfiles(\n\t\t\tincludeDetectedProfiles,\n\t\t\tfsProvider,\n\t\t\tshellEnv,\n\t\t\tlogService,\n\t\t\tconfigurationService.getValue(TerminalSettingId.UseWslProfiles) !== false,\n\t\t\tprofiles && typeof profiles === 'object' ? { ...profiles } : configurationService.getValue<{ [key: string]: IUnresolvedTerminalProfile }>(TerminalSettingId.ProfilesWindows),\n\t\t\ttypeof defaultProfile === 'string' ? defaultProfile : configurationService.getValue<string>(TerminalSettingId.DefaultProfileWindows),\n\t\t\ttestPwshSourcePaths,\n\t\t\tvariableResolver\n\t\t);\n\t}\n\treturn detectAvailableUnixProfiles(\n\t\tfsProvider,\n\t\tlogService,\n\t\tincludeDetectedProfiles,\n\t\tprofiles && typeof profiles === 'object' ? { ...profiles } : configurationService.getValue<{ [key: string]: IUnresolvedTerminalProfile }>(isLinux ? TerminalSettingId.ProfilesLinux : TerminalSettingId.ProfilesMacOs),\n\t\ttypeof defaultProfile === 'string' ? defaultProfile : configurationService.getValue<string>(isLinux ? TerminalSettingId.DefaultProfileLinux : TerminalSettingId.DefaultProfileMacOs),\n\t\ttestPwshSourcePaths,\n\t\tvariableResolver,\n\t\tshellEnv\n\t);\n}\n\nasync function detectAvailableWindowsProfiles(\n\tincludeDetectedProfiles: boolean,\n\tfsProvider: IFsProvider,\n\tshellEnv: typeof process.env,\n\tlogService?: ILogService,\n\tuseWslProfiles?: boolean,\n\tconfigProfiles?: { [key: string]: IUnresolvedTerminalProfile },\n\tdefaultProfileName?: string,\n\ttestPwshSourcePaths?: string[],\n\tvariableResolver?: (text: string[]) => Promise<string[]>\n): Promise<ITerminalProfile[]> {\n\t// Determine the correct System32 path. We want to point to Sysnative\n\t// when the 32-bit version of VS Code is running on a 64-bit machine.\n\t// The reason for this is because PowerShell's important PSReadline\n\t// module doesn't work if this is not the case. See #27915.\n\tconst is32ProcessOn64Windows = process.env.hasOwnProperty('PROCESSOR_ARCHITEW6432');\n\tconst system32Path = `${process.env['windir']}\\\\${is32ProcessOn64Windows ? 'Sysnative' : 'System32'}`;\n\n\tlet useWSLexe = false;\n\n\tif (getWindowsBuildNumber() >= 16299) {\n\t\tuseWSLexe = true;\n\t}\n\n\tawait initializeWindowsProfiles(testPwshSourcePaths);\n\n\tconst detectedProfiles: Map<string, IUnresolvedTerminalProfile> = new Map();\n\n\t// Add auto detected profiles\n\tif (includeDetectedProfiles) {\n\t\tdetectedProfiles.set('PowerShell', {\n\t\t\tsource: ProfileSource.Pwsh,\n\t\t\ticon: Codicon.terminalPowershell,\n\t\t\tisAutoDetected: true\n\t\t});\n\t\tdetectedProfiles.set('Windows PowerShell', {\n\t\t\tpath: `${system32Path}\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe`,\n\t\t\ticon: Codicon.terminalPowershell,\n\t\t\tisAutoDetected: true\n\t\t});\n\t\tdetectedProfiles.set('Git Bash', {\n\t\t\tsource: ProfileSource.GitBash,\n\t\t\tisAutoDetected: true\n\t\t});\n\t\tdetectedProfiles.set('Cygwin', {\n\t\t\tpath: [\n\t\t\t\t`${process.env['HOMEDRIVE']}\\\\cygwin64\\\\bin\\\\bash.exe`,\n\t\t\t\t`${process.env['HOMEDRIVE']}\\\\cygwin\\\\bin\\\\bash.exe`\n\t\t\t],\n\t\t\targs: ['--login'],\n\t\t\tisAutoDetected: true\n\t\t});\n\t\tdetectedProfiles.set('Command Prompt', {\n\t\t\tpath: `${system32Path}\\\\cmd.exe`,\n\t\t\ticon: Codicon.terminalCmd,\n\t\t\tisAutoDetected: true\n\t\t});\n\t}\n\n\tapplyConfigProfilesToMap(configProfiles, detectedProfiles);\n\n\tconst resultProfiles: ITerminalProfile[] = await transformToTerminalProfiles(detectedProfiles.entries(), defaultProfileName, fsProvider, shellEnv, logService, variableResolver);\n\n\tif (includeDetectedProfiles || (!includeDetectedProfiles && useWslProfiles)) {\n\t\ttry {\n\t\t\tconst result = await getWslProfiles(`${system32Path}\\\\${useWSLexe ? 'wsl' : 'bash'}.exe`, defaultProfileName);\n\t\t\tfor (const wslProfile of result) {\n\t\t\t\tif (!configProfiles || !(wslProfile.profileName in configProfiles)) {\n\t\t\t\t\tresultProfiles.push(wslProfile);\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tif (logIfWslNotInstalled) {\n\t\t\t\tlogService?.info('WSL is not installed, so could not detect WSL profiles');\n\t\t\t\tlogIfWslNotInstalled = false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn resultProfiles;\n}\n\nasync function transformToTerminalProfiles(\n\tentries: IterableIterator<[string, IUnresolvedTerminalProfile]>,\n\tdefaultProfileName: string | undefined,\n\tfsProvider: IFsProvider,\n\tshellEnv: typeof process.env = process.env,\n\tlogService?: ILogService,\n\tvariableResolver?: (text: string[]) => Promise<string[]>,\n): Promise<ITerminalProfile[]> {\n\tconst resultProfiles: ITerminalProfile[] = [];\n\tfor (const [profileName, profile] of entries) {\n\t\tif (profile === null) { continue; }\n\t\tlet originalPaths: string[];\n\t\tlet args: string[] | string | undefined;\n\t\tlet icon: ThemeIcon | URI | { light: URI, dark: URI } | undefined = undefined;\n\t\tif ('source' in profile) {\n\t\t\tconst source = profileSources?.get(profile.source);\n\t\t\tif (!source) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\toriginalPaths = source.paths;\n\n\t\t\t// if there are configured args, override the default ones\n\t\t\targs = profile.args || source.args;\n\t\t\tif (profile.icon) {\n\t\t\t\ticon = validateIcon(profile.icon);\n\t\t\t} else if (source.icon) {\n\t\t\t\ticon = source.icon;\n\t\t\t}\n\t\t} else {\n\t\t\toriginalPaths = Array.isArray(profile.path) ? profile.path : [profile.path];\n\t\t\targs = isWindows ? profile.args : Array.isArray(profile.args) ? profile.args : undefined;\n\t\t\ticon = validateIcon(profile.icon) || undefined;\n\t\t}\n\n\t\tconst paths = (await variableResolver?.(originalPaths)) || originalPaths.slice();\n\t\tconst validatedProfile = await validateProfilePaths(profileName, defaultProfileName, paths, fsProvider, shellEnv, args, profile.env, profile.overrideName, profile.isAutoDetected, logService);\n\t\tif (validatedProfile) {\n\t\t\tvalidatedProfile.isAutoDetected = profile.isAutoDetected;\n\t\t\tvalidatedProfile.icon = icon;\n\t\t\tvalidatedProfile.color = profile.color;\n\t\t\tresultProfiles.push(validatedProfile);\n\t\t} else {\n\t\t\tlogService?.trace('profile not validated', profileName, originalPaths);\n\t\t}\n\t}\n\treturn resultProfiles;\n}\n\nfunction validateIcon(icon: string | TerminalIcon | undefined): TerminalIcon | undefined {\n\tif (typeof icon === 'string') {\n\t\treturn { id: icon };\n\t}\n\treturn icon;\n}\n\nasync function initializeWindowsProfiles(testPwshSourcePaths?: string[]): Promise<void> {\n\tif (profileSources && !testPwshSourcePaths) {\n\t\treturn;\n\t}\n\n\tprofileSources = new Map();\n\tprofileSources.set(\n\t\t'Git Bash', {\n\t\tprofileName: 'Git Bash',\n\t\tpaths: [\n\t\t\t`${process.env['ProgramW6432']}\\\\Git\\\\bin\\\\bash.exe`,\n\t\t\t`${process.env['ProgramW6432']}\\\\Git\\\\usr\\\\bin\\\\bash.exe`,\n\t\t\t`${process.env['ProgramFiles']}\\\\Git\\\\bin\\\\bash.exe`,\n\t\t\t`${process.env['ProgramFiles']}\\\\Git\\\\usr\\\\bin\\\\bash.exe`,\n\t\t\t`${process.env['LocalAppData']}\\\\Programs\\\\Git\\\\bin\\\\bash.exe`,\n\t\t\t`${process.env['UserProfile']}\\\\scoop\\\\apps\\\\git-with-openssh\\\\current\\\\bin\\\\bash.exe`,\n\t\t\t`${process.env['AllUsersProfile']}\\\\scoop\\\\apps\\\\git-with-openssh\\\\current\\\\bin\\\\bash.exe`\n\t\t],\n\t\targs: ['--login']\n\t});\n\tprofileSources.set('PowerShell', {\n\t\tprofileName: 'PowerShell',\n\t\tpaths: testPwshSourcePaths || await getPowershellPaths(),\n\t\ticon: ThemeIcon.asThemeIcon(Codicon.terminalPowershell)\n\t});\n}\n\nasync function getPowershellPaths(): Promise<string[]> {\n\tconst paths: string[] = [];\n\t// Add all of the different kinds of PowerShells\n\tfor await (const pwshExe of enumeratePowerShellInstallations()) {\n\t\tpaths.push(pwshExe.exePath);\n\t}\n\treturn paths;\n}\n\nasync function getWslProfiles(wslPath: string, defaultProfileName: string | undefined): Promise<ITerminalProfile[]> {\n\tconst profiles: ITerminalProfile[] = [];\n\tconst distroOutput = await new Promise<string>((resolve, reject) => {\n\t\t// wsl.exe output is encoded in utf16le (ie. A -> 0x4100)\n\t\tcp.exec('wsl.exe -l -q', { encoding: 'utf16le', timeout: 1000 }, (err, stdout) => {\n\t\t\tif (err) {\n\t\t\t\treturn reject('Problem occurred when getting wsl distros');\n\t\t\t}\n\t\t\tresolve(stdout);\n\t\t});\n\t});\n\tif (!distroOutput) {\n\t\treturn [];\n\t}\n\tconst regex = new RegExp(/[\\r?\\n]/);\n\tconst distroNames = distroOutput.split(regex).filter(t => t.trim().length > 0 && t !== '');\n\tfor (const distroName of distroNames) {\n\t\t// Skip empty lines\n\t\tif (distroName === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// docker-desktop and docker-desktop-data are treated as implementation details of\n\t\t// Docker Desktop for Windows and therefore not exposed\n\t\tif (distroName.startsWith('docker-desktop')) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Create the profile, adding the icon depending on the distro\n\t\tconst profileName = `${distroName} (WSL)`;\n\t\tconst profile: ITerminalProfile = {\n\t\t\tprofileName,\n\t\t\tpath: wslPath,\n\t\t\targs: [`-d`, `${distroName}`],\n\t\t\tisDefault: profileName === defaultProfileName,\n\t\t\ticon: getWslIcon(distroName)\n\t\t};\n\t\t// Add the profile\n\t\tprofiles.push(profile);\n\t}\n\treturn profiles;\n}\n\nfunction getWslIcon(distroName: string): ThemeIcon {\n\tif (distroName.includes('Ubuntu')) {\n\t\treturn ThemeIcon.asThemeIcon(Codicon.terminalUbuntu);\n\t} else if (distroName.includes('Debian')) {\n\t\treturn ThemeIcon.asThemeIcon(Codicon.terminalDebian);\n\t} else {\n\t\treturn ThemeIcon.asThemeIcon(Codicon.terminalLinux);\n\t}\n}\n\nasync function detectAvailableUnixProfiles(\n\tfsProvider: IFsProvider,\n\tlogService?: ILogService,\n\tincludeDetectedProfiles?: boolean,\n\tconfigProfiles?: { [key: string]: IUnresolvedTerminalProfile },\n\tdefaultProfileName?: string,\n\ttestPaths?: string[],\n\tvariableResolver?: (text: string[]) => Promise<string[]>,\n\tshellEnv?: typeof process.env\n): Promise<ITerminalProfile[]> {\n\tconst detectedProfiles: Map<string, IUnresolvedTerminalProfile> = new Map();\n\n\t// Add non-quick launch profiles\n\tif (includeDetectedProfiles) {\n\t\tconst contents = (await fsProvider.readFile('/etc/shells')).toString();\n\t\tconst profiles = testPaths || contents.split('\\n').filter(e => e.trim().indexOf('#') !== 0 && e.trim().length > 0);\n\t\tconst counts: Map<string, number> = new Map();\n\t\tfor (const profile of profiles) {\n\t\t\tlet profileName = basename(profile);\n\t\t\tlet count = counts.get(profileName) || 0;\n\t\t\tcount++;\n\t\t\tif (count > 1) {\n\t\t\t\tprofileName = `${profileName} (${count})`;\n\t\t\t}\n\t\t\tcounts.set(profileName, count);\n\t\t\tdetectedProfiles.set(profileName, { path: profile, isAutoDetected: true });\n\t\t}\n\t}\n\n\tapplyConfigProfilesToMap(configProfiles, detectedProfiles);\n\n\treturn await transformToTerminalProfiles(detectedProfiles.entries(), defaultProfileName, fsProvider, shellEnv, logService, variableResolver);\n}\n\nfunction applyConfigProfilesToMap(configProfiles: { [key: string]: IUnresolvedTerminalProfile } | undefined, profilesMap: Map<string, IUnresolvedTerminalProfile>) {\n\tif (!configProfiles) {\n\t\treturn;\n\t}\n\tfor (const [profileName, value] of Object.entries(configProfiles)) {\n\t\tif (value === null || (!('path' in value) && !('source' in value))) {\n\t\t\tprofilesMap.delete(profileName);\n\t\t} else {\n\t\t\tprofilesMap.set(profileName, value);\n\t\t}\n\t}\n}\n\nasync function validateProfilePaths(profileName: string, defaultProfileName: string | undefined, potentialPaths: string[], fsProvider: IFsProvider, shellEnv: typeof process.env, args?: string[] | string, env?: ITerminalEnvironment, overrideName?: boolean, isAutoDetected?: boolean, logService?: ILogService): Promise<ITerminalProfile | undefined> {\n\tif (potentialPaths.length === 0) {\n\t\treturn Promise.resolve(undefined);\n\t}\n\tconst path = potentialPaths.shift()!;\n\tif (path === '') {\n\t\treturn validateProfilePaths(profileName, defaultProfileName, potentialPaths, fsProvider, shellEnv, args, env, overrideName, isAutoDetected);\n\t}\n\n\tconst profile: ITerminalProfile = { profileName, path, args, env, overrideName, isAutoDetected, isDefault: profileName === defaultProfileName };\n\n\t// For non-absolute paths, check if it's available on $PATH\n\tif (basename(path) === path) {\n\t\t// The executable isn't an absolute path, try find it on the PATH\n\t\tconst envPaths: string[] | undefined = shellEnv.PATH ? shellEnv.PATH.split(delimiter) : undefined;\n\t\tconst executable = await findExecutable(path, undefined, envPaths, undefined, fsProvider.existsFile);\n\t\tif (!executable) {\n\t\t\treturn validateProfilePaths(profileName, defaultProfileName, potentialPaths, fsProvider, shellEnv, args);\n\t\t}\n\t\treturn profile;\n\t}\n\n\tconst result = await fsProvider.existsFile(normalize(path));\n\tif (result) {\n\t\treturn profile;\n\t}\n\n\treturn validateProfilePaths(profileName, defaultProfileName, potentialPaths, fsProvider, shellEnv, args, env, overrideName, isAutoDetected);\n}\n\nexport interface IFsProvider {\n\texistsFile(path: string): Promise<boolean>,\n\treadFile(path: string): Promise<Buffer>;\n}\n\nexport interface IProfileVariableResolver {\n\tresolve(text: string[]): Promise<string[]>;\n}\n\ninterface IPotentialTerminalProfile {\n\tprofileName: string;\n\tpaths: string[];\n\targs?: string[];\n\ticon?: ThemeIcon | URI | { light: URI, dark: URI };\n}\n\nexport type IUnresolvedTerminalProfile = ITerminalExecutable | ITerminalProfileSource | null;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { FileAccess } from 'vs/base/common/network';\nimport { IProcessEnvironment, isWindows, OperatingSystem } from 'vs/base/common/platform';\nimport { ProxyChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Client, IIPCOptions } from 'vs/base/parts/ipc/node/ipc.cp';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IEnvironmentService, INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { parsePtyHostPort } from 'vs/platform/environment/common/environmentService';\nimport { getResolvedShellEnv } from 'vs/platform/environment/node/shellEnv';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { LogLevelChannelClient } from 'vs/platform/log/common/logIpc';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { RequestStore } from 'vs/platform/terminal/common/requestStore';\nimport { HeartbeatConstants, IHeartbeatService, IProcessDataEvent, IPtyService, IReconnectConstants, IRequestResolveVariablesEvent, IShellLaunchConfig, ITerminalLaunchError, ITerminalProfile, ITerminalsLayoutInfo, TerminalIcon, TerminalIpcChannels, IProcessProperty, TitleEventSource, ProcessPropertyType, ProcessCapability, IProcessPropertyMap, TerminalSettingId } from 'vs/platform/terminal/common/terminal';\nimport { registerTerminalPlatformConfiguration } from 'vs/platform/terminal/common/terminalPlatformConfiguration';\nimport { IGetTerminalLayoutInfoArgs, IProcessDetails, IPtyHostProcessReplayEvent, ISetTerminalLayoutInfoArgs } from 'vs/platform/terminal/common/terminalProcess';\nimport { detectAvailableProfiles } from 'vs/platform/terminal/node/terminalProfiles';\n\nenum Constants {\n\tMaxRestarts = 5\n}\n\n/**\n * Tracks the last terminal ID from the pty host so we can give it to the new pty host if it's\n * restarted and avoid ID conflicts.\n */\nlet lastPtyId = 0;\n\n/**\n * This service implements IPtyService by launching a pty host process, forwarding messages to and\n * from the pty host process and manages the connection.\n */\nexport class PtyHostService extends Disposable implements IPtyService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _client: Client;\n\t// ProxyChannel is not used here because events get lost when forwarding across multiple proxies\n\tprivate _proxy: IPtyService;\n\n\tprivate readonly _shellEnv: Promise<typeof process.env>;\n\tprivate readonly _resolveVariablesRequestStore: RequestStore<string[], { workspaceId: string, originalText: string[] }>;\n\tprivate _restartCount = 0;\n\tprivate _isResponsive = true;\n\tprivate _isDisposed = false;\n\tprivate _heartbeatFirstTimeout?: NodeJS.Timeout;\n\tprivate _heartbeatSecondTimeout?: NodeJS.Timeout;\n\n\tprivate readonly _onPtyHostExit = this._register(new Emitter<number>());\n\treadonly onPtyHostExit = this._onPtyHostExit.event;\n\tprivate readonly _onPtyHostStart = this._register(new Emitter<void>());\n\treadonly onPtyHostStart = this._onPtyHostStart.event;\n\tprivate readonly _onPtyHostUnresponsive = this._register(new Emitter<void>());\n\treadonly onPtyHostUnresponsive = this._onPtyHostUnresponsive.event;\n\tprivate readonly _onPtyHostResponsive = this._register(new Emitter<void>());\n\treadonly onPtyHostResponsive = this._onPtyHostResponsive.event;\n\tprivate readonly _onPtyHostRequestResolveVariables = this._register(new Emitter<IRequestResolveVariablesEvent>());\n\treadonly onPtyHostRequestResolveVariables = this._onPtyHostRequestResolveVariables.event;\n\n\tprivate readonly _onProcessData = this._register(new Emitter<{ id: number, event: IProcessDataEvent | string }>());\n\treadonly onProcessData = this._onProcessData.event;\n\tprivate readonly _onProcessReady = this._register(new Emitter<{ id: number, event: { pid: number, cwd: string, capabilities: ProcessCapability[] } }>());\n\treadonly onProcessReady = this._onProcessReady.event;\n\tprivate readonly _onProcessReplay = this._register(new Emitter<{ id: number, event: IPtyHostProcessReplayEvent }>());\n\treadonly onProcessReplay = this._onProcessReplay.event;\n\tprivate readonly _onProcessOrphanQuestion = this._register(new Emitter<{ id: number }>());\n\treadonly onProcessOrphanQuestion = this._onProcessOrphanQuestion.event;\n\tprivate readonly _onDidRequestDetach = this._register(new Emitter<{ requestId: number, workspaceId: string, instanceId: number }>());\n\treadonly onDidRequestDetach = this._onDidRequestDetach.event;\n\tprivate readonly _onDidChangeProperty = this._register(new Emitter<{ id: number, property: IProcessProperty<any> }>());\n\treadonly onDidChangeProperty = this._onDidChangeProperty.event;\n\tprivate readonly _onProcessExit = this._register(new Emitter<{ id: number, event: number | undefined }>());\n\treadonly onProcessExit = this._onProcessExit.event;\n\n\tconstructor(\n\t\tprivate readonly _reconnectConstants: IReconnectConstants,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IEnvironmentService private readonly _environmentService: INativeEnvironmentService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@ITelemetryService private readonly _telemetryService: ITelemetryService\n\t) {\n\t\tsuper();\n\n\t\t// Platform configuration is required on the process running the pty host (shared process or\n\t\t// remote server).\n\t\tregisterTerminalPlatformConfiguration();\n\n\t\tthis._shellEnv = this._resolveShellEnv();\n\n\t\tthis._register(toDisposable(() => this._disposePtyHost()));\n\n\t\tthis._resolveVariablesRequestStore = this._register(new RequestStore(undefined, this._logService));\n\t\tthis._resolveVariablesRequestStore.onCreateRequest(this._onPtyHostRequestResolveVariables.fire, this._onPtyHostRequestResolveVariables);\n\n\t\t[this._client, this._proxy] = this._startPtyHost();\n\n\t\tthis._register(this._configurationService.onDidChangeConfiguration(async e => {\n\t\t\tif (e.affectsConfiguration(TerminalSettingId.IgnoreProcessNames)) {\n\t\t\t\tawait this._refreshIgnoreProcessNames();\n\t\t\t}\n\t\t}));\n\t}\n\n\tasync initialize(): Promise<void> {\n\t\tawait this._refreshIgnoreProcessNames();\n\t}\n\n\tprivate get _ignoreProcessNames(): string[] {\n\t\treturn this._configurationService.getValue<string[]>(TerminalSettingId.IgnoreProcessNames);\n\t}\n\n\tprivate async _refreshIgnoreProcessNames(): Promise<void> {\n\t\treturn this._proxy.refreshIgnoreProcessNames?.(this._ignoreProcessNames);\n\t}\n\n\tprivate async _resolveShellEnv(): Promise<typeof process.env> {\n\t\tif (isWindows) {\n\t\t\treturn process.env;\n\t\t}\n\n\t\ttry {\n\t\t\treturn await getResolvedShellEnv(this._logService, { _: [] }, process.env);\n\t\t} catch (error) {\n\t\t\tthis._logService.error('ptyHost was unable to resolve shell environment', error);\n\n\t\t\treturn {};\n\t\t}\n\t}\n\n\tprivate _startPtyHost(): [Client, IPtyService] {\n\t\tconst opts: IIPCOptions = {\n\t\t\tserverName: 'Pty Host',\n\t\t\targs: ['--type=ptyHost'],\n\t\t\tenv: {\n\t\t\t\tVSCODE_LAST_PTY_ID: lastPtyId,\n\t\t\t\tVSCODE_AMD_ENTRYPOINT: 'vs/platform/terminal/node/ptyHostMain',\n\t\t\t\tVSCODE_PIPE_LOGGING: 'true',\n\t\t\t\tVSCODE_VERBOSE_LOGGING: 'true', // transmit console logs from server to client,\n\t\t\t\tVSCODE_RECONNECT_GRACE_TIME: this._reconnectConstants.graceTime,\n\t\t\t\tVSCODE_RECONNECT_SHORT_GRACE_TIME: this._reconnectConstants.shortGraceTime,\n\t\t\t\tVSCODE_RECONNECT_SCROLLBACK: this._reconnectConstants.scrollback\n\t\t\t}\n\t\t};\n\n\t\tconst ptyHostDebug = parsePtyHostPort(this._environmentService.args, this._environmentService.isBuilt);\n\t\tif (ptyHostDebug) {\n\t\t\tif (ptyHostDebug.break && ptyHostDebug.port) {\n\t\t\t\topts.debugBrk = ptyHostDebug.port;\n\t\t\t} else if (!ptyHostDebug.break && ptyHostDebug.port) {\n\t\t\t\topts.debug = ptyHostDebug.port;\n\t\t\t}\n\t\t}\n\n\t\tconst client = new Client(FileAccess.asFileUri('bootstrap-fork', require).fsPath, opts);\n\t\tthis._onPtyHostStart.fire();\n\n\t\t// Setup heartbeat service and trigger a heartbeat immediately to reset the timeouts\n\t\tconst heartbeatService = ProxyChannel.toService<IHeartbeatService>(client.getChannel(TerminalIpcChannels.Heartbeat));\n\t\theartbeatService.onBeat(() => this._handleHeartbeat());\n\t\tthis._handleHeartbeat();\n\n\t\t// Handle exit\n\t\tthis._register(client.onDidProcessExit(e => {\n\t\t\t/* __GDPR__\n\t\t\t\t\"ptyHost/exit\" : {}\n\t\t\t*/\n\t\t\tthis._telemetryService.publicLog('ptyHost/exit');\n\t\t\tthis._onPtyHostExit.fire(e.code);\n\t\t\tif (!this._isDisposed) {\n\t\t\t\tif (this._restartCount <= Constants.MaxRestarts) {\n\t\t\t\t\tthis._logService.error(`ptyHost terminated unexpectedly with code ${e.code}`);\n\t\t\t\t\tthis._restartCount++;\n\t\t\t\t\tthis.restartPtyHost();\n\t\t\t\t} else {\n\t\t\t\t\tthis._logService.error(`ptyHost terminated unexpectedly with code ${e.code}, giving up`);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\t// Setup logging\n\t\tconst logChannel = client.getChannel(TerminalIpcChannels.Log);\n\t\tLogLevelChannelClient.setLevel(logChannel, this._logService.getLevel());\n\t\tthis._register(this._logService.onDidChangeLogLevel(() => {\n\t\t\tLogLevelChannelClient.setLevel(logChannel, this._logService.getLevel());\n\t\t}));\n\n\t\t// Create proxy and forward events\n\t\tconst proxy = ProxyChannel.toService<IPtyService>(client.getChannel(TerminalIpcChannels.PtyHost));\n\t\tthis._register(proxy.onProcessData(e => this._onProcessData.fire(e)));\n\t\tthis._register(proxy.onProcessReady(e => this._onProcessReady.fire(e)));\n\t\tthis._register(proxy.onProcessExit(e => this._onProcessExit.fire(e)));\n\t\tthis._register(proxy.onDidChangeProperty(e => this._onDidChangeProperty.fire(e)));\n\t\tthis._register(proxy.onProcessReplay(e => this._onProcessReplay.fire(e)));\n\t\tthis._register(proxy.onProcessOrphanQuestion(e => this._onProcessOrphanQuestion.fire(e)));\n\t\tthis._register(proxy.onDidRequestDetach(e => this._onDidRequestDetach.fire(e)));\n\n\t\treturn [client, proxy];\n\t}\n\n\toverride dispose() {\n\t\tthis._isDisposed = true;\n\t\tsuper.dispose();\n\t}\n\n\tasync createProcess(shellLaunchConfig: IShellLaunchConfig, cwd: string, cols: number, rows: number, unicodeVersion: '6' | '11', env: IProcessEnvironment, executableEnv: IProcessEnvironment, windowsEnableConpty: boolean, shouldPersist: boolean, workspaceId: string, workspaceName: string): Promise<number> {\n\t\tconst timeout = setTimeout(() => this._handleUnresponsiveCreateProcess(), HeartbeatConstants.CreateProcessTimeout);\n\t\tconst id = await this._proxy.createProcess(shellLaunchConfig, cwd, cols, rows, unicodeVersion, env, executableEnv, windowsEnableConpty, shouldPersist, workspaceId, workspaceName);\n\t\tclearTimeout(timeout);\n\t\tlastPtyId = Math.max(lastPtyId, id);\n\t\treturn id;\n\t}\n\tupdateTitle(id: number, title: string, titleSource: TitleEventSource): Promise<void> {\n\t\treturn this._proxy.updateTitle(id, title, titleSource);\n\t}\n\tupdateIcon(id: number, icon: TerminalIcon, color?: string): Promise<void> {\n\t\treturn this._proxy.updateIcon(id, icon, color);\n\t}\n\tattachToProcess(id: number): Promise<void> {\n\t\treturn this._proxy.attachToProcess(id);\n\t}\n\tdetachFromProcess(id: number): Promise<void> {\n\t\treturn this._proxy.detachFromProcess(id);\n\t}\n\tlistProcesses(): Promise<IProcessDetails[]> {\n\t\treturn this._proxy.listProcesses();\n\t}\n\treduceConnectionGraceTime(): Promise<void> {\n\t\treturn this._proxy.reduceConnectionGraceTime();\n\t}\n\tstart(id: number): Promise<ITerminalLaunchError | undefined> {\n\t\treturn this._proxy.start(id);\n\t}\n\tshutdown(id: number, immediate: boolean): Promise<void> {\n\t\treturn this._proxy.shutdown(id, immediate);\n\t}\n\tinput(id: number, data: string): Promise<void> {\n\t\treturn this._proxy.input(id, data);\n\t}\n\tprocessBinary(id: number, data: string): Promise<void> {\n\t\treturn this._proxy.processBinary(id, data);\n\t}\n\tresize(id: number, cols: number, rows: number): Promise<void> {\n\t\treturn this._proxy.resize(id, cols, rows);\n\t}\n\tacknowledgeDataEvent(id: number, charCount: number): Promise<void> {\n\t\treturn this._proxy.acknowledgeDataEvent(id, charCount);\n\t}\n\tsetUnicodeVersion(id: number, version: '6' | '11'): Promise<void> {\n\t\treturn this._proxy.setUnicodeVersion(id, version);\n\t}\n\tgetInitialCwd(id: number): Promise<string> {\n\t\treturn this._proxy.getInitialCwd(id);\n\t}\n\tgetCwd(id: number): Promise<string> {\n\t\treturn this._proxy.getCwd(id);\n\t}\n\tgetLatency(id: number): Promise<number> {\n\t\treturn this._proxy.getLatency(id);\n\t}\n\torphanQuestionReply(id: number): Promise<void> {\n\t\treturn this._proxy.orphanQuestionReply(id);\n\t}\n\n\tgetDefaultSystemShell(osOverride?: OperatingSystem): Promise<string> {\n\t\treturn this._proxy.getDefaultSystemShell(osOverride);\n\t}\n\tasync getProfiles(workspaceId: string, profiles: unknown, defaultProfile: unknown, includeDetectedProfiles: boolean = false): Promise<ITerminalProfile[]> {\n\t\tconst shellEnv = await this._shellEnv;\n\t\treturn detectAvailableProfiles(profiles, defaultProfile, includeDetectedProfiles, this._configurationService, shellEnv, undefined, this._logService, this._resolveVariables.bind(this, workspaceId));\n\t}\n\tgetEnvironment(): Promise<IProcessEnvironment> {\n\t\treturn this._proxy.getEnvironment();\n\t}\n\tgetWslPath(original: string): Promise<string> {\n\t\treturn this._proxy.getWslPath(original);\n\t}\n\n\tsetTerminalLayoutInfo(args: ISetTerminalLayoutInfoArgs): Promise<void> {\n\t\treturn this._proxy.setTerminalLayoutInfo(args);\n\t}\n\tasync getTerminalLayoutInfo(args: IGetTerminalLayoutInfoArgs): Promise<ITerminalsLayoutInfo | undefined> {\n\t\treturn await this._proxy.getTerminalLayoutInfo(args);\n\t}\n\n\tasync requestDetachInstance(workspaceId: string, instanceId: number): Promise<IProcessDetails | undefined> {\n\t\treturn this._proxy.requestDetachInstance(workspaceId, instanceId);\n\t}\n\n\tasync acceptDetachInstanceReply(requestId: number, persistentProcessId: number): Promise<void> {\n\t\treturn this._proxy.acceptDetachInstanceReply(requestId, persistentProcessId);\n\t}\n\n\tasync serializeTerminalState(ids: number[]): Promise<string> {\n\t\treturn this._proxy.serializeTerminalState(ids);\n\t}\n\n\tasync reviveTerminalProcesses(state: string) {\n\t\treturn this._proxy.reviveTerminalProcesses(state);\n\t}\n\n\tasync refreshProperty<T extends ProcessPropertyType>(id: number, property: T): Promise<IProcessPropertyMap[T]> {\n\t\treturn this._proxy.refreshProperty(id, property);\n\n\t}\n\tasync updateProperty<T extends ProcessPropertyType>(id: number, property: T, value: IProcessPropertyMap[T]): Promise<void> {\n\t\treturn this._proxy.updateProperty(id, property, value);\n\t}\n\n\tasync restartPtyHost(): Promise<void> {\n\t\t/* __GDPR__\n\t\t\t\"ptyHost/restart\" : {}\n\t\t*/\n\t\tthis._telemetryService.publicLog('ptyHost/restart');\n\t\tthis._isResponsive = true;\n\t\tthis._disposePtyHost();\n\t\t[this._client, this._proxy] = this._startPtyHost();\n\t}\n\n\tprivate _disposePtyHost(): void {\n\t\tthis._proxy.shutdownAll?.();\n\t\tthis._client.dispose();\n\t}\n\n\tprivate _handleHeartbeat() {\n\t\tthis._clearHeartbeatTimeouts();\n\t\tthis._heartbeatFirstTimeout = setTimeout(() => this._handleHeartbeatFirstTimeout(), HeartbeatConstants.BeatInterval * HeartbeatConstants.FirstWaitMultiplier);\n\t\tif (!this._isResponsive) {\n\t\t\t/* __GDPR__\n\t\t\t\t\"ptyHost/responsive\" : {}\n\t\t\t*/\n\t\t\tthis._telemetryService.publicLog('ptyHost/responsive');\n\t\t\tthis._isResponsive = true;\n\t\t}\n\t\tthis._onPtyHostResponsive.fire();\n\t}\n\n\tprivate _handleHeartbeatFirstTimeout() {\n\t\tthis._logService.warn(`No ptyHost heartbeat after ${HeartbeatConstants.BeatInterval * HeartbeatConstants.FirstWaitMultiplier / 1000} seconds`);\n\t\tthis._heartbeatFirstTimeout = undefined;\n\t\tthis._heartbeatSecondTimeout = setTimeout(() => this._handleHeartbeatSecondTimeout(), HeartbeatConstants.BeatInterval * HeartbeatConstants.SecondWaitMultiplier);\n\t}\n\n\tprivate _handleHeartbeatSecondTimeout() {\n\t\tthis._logService.error(`No ptyHost heartbeat after ${(HeartbeatConstants.BeatInterval * HeartbeatConstants.FirstWaitMultiplier + HeartbeatConstants.BeatInterval * HeartbeatConstants.FirstWaitMultiplier) / 1000} seconds`);\n\t\tthis._heartbeatSecondTimeout = undefined;\n\t\tif (this._isResponsive) {\n\t\t\t/* __GDPR__\n\t\t\t\t\"ptyHost/responsive\" : {}\n\t\t\t*/\n\t\t\tthis._telemetryService.publicLog('ptyHost/unresponsive');\n\t\t\tthis._isResponsive = false;\n\t\t}\n\t\tthis._onPtyHostUnresponsive.fire();\n\t}\n\n\tprivate _handleUnresponsiveCreateProcess() {\n\t\tthis._clearHeartbeatTimeouts();\n\t\tthis._logService.error(`No ptyHost response to createProcess after ${HeartbeatConstants.CreateProcessTimeout / 1000} seconds`);\n\t\t/* __GDPR__\n\t\t\t\"ptyHost/responsive\" : {}\n\t\t*/\n\t\tthis._telemetryService.publicLog('ptyHost/responsive');\n\t\tthis._onPtyHostUnresponsive.fire();\n\t}\n\n\tprivate _clearHeartbeatTimeouts() {\n\t\tif (this._heartbeatFirstTimeout) {\n\t\t\tclearTimeout(this._heartbeatFirstTimeout);\n\t\t\tthis._heartbeatFirstTimeout = undefined;\n\t\t}\n\t\tif (this._heartbeatSecondTimeout) {\n\t\t\tclearTimeout(this._heartbeatSecondTimeout);\n\t\t\tthis._heartbeatSecondTimeout = undefined;\n\t\t}\n\t}\n\n\tprivate _resolveVariables(workspaceId: string, text: string[]): Promise<string[]> {\n\t\treturn this._resolveVariablesRequestStore.createRequest({ workspaceId, originalText: text });\n\t}\n\tasync acceptPtyHostResolvedVariables(requestId: number, resolved: string[]) {\n\t\tthis._resolveVariablesRequestStore.acceptReply(requestId, resolved);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IExtUri } from 'vs/base/common/resources';\n\n\nexport const IUriIdentityService = createDecorator<IUriIdentityService>('IUriIdentityService');\n\nexport interface IUriIdentityService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Uri extensions that are aware of casing.\n\t */\n\treadonly extUri: IExtUri;\n\n\t/**\n\t * Returns a canonical uri for the given resource. Different uris can point to the same\n\t * resource. That's because of casing or missing normalization, e.g the following uris\n\t * are different but refer to the same document (because windows paths are not case-sensitive)\n\t *\n\t * ```txt\n\t * file:///c:/foo/bar.txt\n\t * file:///c:/FOO/BAR.txt\n\t * ```\n\t *\n\t * This function should be invoked when feeding uris into the system that represent the truth,\n\t * e.g document uris or marker-to-document associations etc. This function should NOT be called\n\t * to pretty print a label nor to sanitize a uri.\n\t *\n\t * Samples:\n\t *\n\t * | in | out | |\n\t * |---|---|---|\n\t * | `file:///foo/bar/../bar` | `file:///foo/bar` | n/a |\n\t * | `file:///foo/bar/../bar#frag` | `file:///foo/bar#frag` | keep fragment |\n\t * | `file:///foo/BAR` | `file:///foo/bar` | assume ignore case |\n\t * | `file:///foo/bar/../BAR?q=2` | `file:///foo/BAR?q=2` | query makes it a different document |\n\t */\n\tasCanonicalUri(uri: URI): URI;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { DidUninstallExtensionEvent, IExtensionManagementService, ILocalExtension, InstallExtensionEvent, InstallExtensionResult } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { areSameExtensions } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { ExtensionType, IExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { FileChangeType, IFileChange, IFileService } from 'vs/platform/files/common/files';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\n\nexport class ExtensionsWatcher extends Disposable {\n\n\tprivate readonly _onDidChangeExtensionsByAnotherSource = this._register(new Emitter<{ added: ILocalExtension[], removed: IExtensionIdentifier[] }>());\n\treadonly onDidChangeExtensionsByAnotherSource = this._onDidChangeExtensionsByAnotherSource.event;\n\n\tprivate startTimestamp = 0;\n\tprivate installingExtensions: IExtensionIdentifier[] = [];\n\tprivate installedExtensions: IExtensionIdentifier[] | undefined;\n\n\tconstructor(\n\t\tprivate readonly extensionsManagementService: IExtensionManagementService,\n\t\t@IFileService fileService: IFileService,\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IUriIdentityService private readonly uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper();\n\t\tthis.extensionsManagementService.getInstalled(ExtensionType.User).then(extensions => {\n\t\t\tthis.installedExtensions = extensions.map(e => e.identifier);\n\t\t\tthis.startTimestamp = Date.now();\n\t\t});\n\t\tthis._register(extensionsManagementService.onInstallExtension(e => this.onInstallExtension(e)));\n\t\tthis._register(extensionsManagementService.onDidInstallExtensions(e => this.onDidInstallExtensions(e)));\n\t\tthis._register(extensionsManagementService.onDidUninstallExtension(e => this.onDidUninstallExtension(e)));\n\n\t\tconst extensionsResource = URI.file(environmentService.extensionsPath);\n\t\tthis._register(fileService.watch(extensionsResource));\n\t\tthis._register(Event.filter(fileService.onDidChangeFilesRaw, e => e.changes.some(change => this.doesChangeAffects(change, extensionsResource)))(() => this.onDidChange()));\n\t}\n\n\tprivate doesChangeAffects(change: IFileChange, extensionsResource: URI): boolean {\n\t\t// Is not immediate child of extensions resource\n\t\tif (!this.uriIdentityService.extUri.isEqual(this.uriIdentityService.extUri.dirname(change.resource), extensionsResource)) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// .obsolete file changed\n\t\tif (this.uriIdentityService.extUri.isEqual(change.resource, this.uriIdentityService.extUri.joinPath(extensionsResource, '.obsolete'))) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Only interested in added/deleted changes\n\t\tif (change.type !== FileChangeType.ADDED && change.type !== FileChangeType.DELETED) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Ingore changes to files starting with `.`\n\t\tif (this.uriIdentityService.extUri.basename(change.resource).startsWith('.')) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate onInstallExtension(e: InstallExtensionEvent): void {\n\t\tthis.addInstallingExtension(e.identifier);\n\t}\n\n\tprivate onDidInstallExtensions(results: readonly InstallExtensionResult[]): void {\n\t\tfor (const e of results) {\n\t\t\tthis.removeInstallingExtension(e.identifier);\n\t\t\tif (e.local) {\n\t\t\t\tthis.addInstalledExtension(e.identifier);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onDidUninstallExtension(e: DidUninstallExtensionEvent): void {\n\t\tif (!e.error) {\n\t\t\tthis.removeInstalledExtension(e.identifier);\n\t\t}\n\t}\n\n\tprivate addInstallingExtension(extension: IExtensionIdentifier) {\n\t\tthis.removeInstallingExtension(extension);\n\t\tthis.installingExtensions.push(extension);\n\t}\n\n\tprivate removeInstallingExtension(identifier: IExtensionIdentifier) {\n\t\tthis.installingExtensions = this.installingExtensions.filter(e => !areSameExtensions(e, identifier));\n\t}\n\n\tprivate addInstalledExtension(extension: IExtensionIdentifier): void {\n\t\tif (this.installedExtensions) {\n\t\t\tthis.removeInstalledExtension(extension);\n\t\t\tthis.installedExtensions.push(extension);\n\t\t}\n\t}\n\n\tprivate removeInstalledExtension(identifier: IExtensionIdentifier): void {\n\t\tif (this.installedExtensions) {\n\t\t\tthis.installedExtensions = this.installedExtensions.filter(e => !areSameExtensions(e, identifier));\n\t\t}\n\t}\n\n\tprivate async onDidChange(): Promise<void> {\n\t\tif (this.installedExtensions) {\n\t\t\tconst extensions = await this.extensionsManagementService.getInstalled(ExtensionType.User);\n\t\t\tconst added = extensions.filter(e => {\n\t\t\t\tif ([...this.installingExtensions, ...this.installedExtensions!].some(identifier => areSameExtensions(identifier, e.identifier))) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (e.installedTimestamp && e.installedTimestamp > this.startTimestamp) {\n\t\t\t\t\tthis.logService.info('Detected extension installed from another source', e.identifier.id);\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\tthis.logService.info('Ignored extension installed by another source because of invalid timestamp', e.identifier.id);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\t\t\tconst removed = this.installedExtensions.filter(identifier => {\n\t\t\t\t// Extension being installed\n\t\t\t\tif (this.installingExtensions.some(installingExtension => areSameExtensions(installingExtension, identifier))) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (extensions.every(e => !areSameExtensions(e.identifier, identifier))) {\n\t\t\t\t\tthis.logService.info('Detected extension removed from another source', identifier.id);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t});\n\t\t\tthis.installedExtensions = extensions.map(e => e.identifier);\n\t\t\tif (added.length || removed.length) {\n\t\t\t\tthis._onDidChangeExtensionsByAnotherSource.fire({ added, removed });\n\t\t\t}\n\t\t}\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { URI } from 'vs/base/common/uri';\nimport { registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { IFileService, FileSystemProviderCapabilities, IFileSystemProviderCapabilitiesChangeEvent, IFileSystemProviderRegistrationEvent } from 'vs/platform/files/common/files';\nimport { ExtUri, IExtUri, normalizePath } from 'vs/base/common/resources';\nimport { SkipList } from 'vs/base/common/skipList';\nimport { Event } from 'vs/base/common/event';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\n\nclass Entry {\n\tstatic _clock = 0;\n\ttime: number = Entry._clock++;\n\tconstructor(readonly uri: URI) { }\n\ttouch() {\n\t\tthis.time = Entry._clock++;\n\t\treturn this;\n\t}\n}\n\nexport class UriIdentityService implements IUriIdentityService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\treadonly extUri: IExtUri;\n\n\tprivate readonly _dispooables = new DisposableStore();\n\tprivate readonly _canonicalUris: SkipList<URI, Entry>;\n\tprivate readonly _limit = 2 ** 16;\n\n\tconstructor(@IFileService private readonly _fileService: IFileService) {\n\n\t\tconst schemeIgnoresPathCasingCache = new Map<string, boolean>();\n\n\t\t// assume path casing matters unless the file system provider spec'ed the opposite.\n\t\t// for all other cases path casing matters, e.g for\n\t\t// * virtual documents\n\t\t// * in-memory uris\n\t\t// * all kind of \"private\" schemes\n\t\tconst ignorePathCasing = (uri: URI): boolean => {\n\t\t\tlet ignorePathCasing = schemeIgnoresPathCasingCache.get(uri.scheme);\n\t\t\tif (ignorePathCasing === undefined) {\n\t\t\t\t// retrieve once and then case per scheme until a change happens\n\t\t\t\tignorePathCasing = _fileService.hasProvider(uri) && !this._fileService.hasCapability(uri, FileSystemProviderCapabilities.PathCaseSensitive);\n\t\t\t\tschemeIgnoresPathCasingCache.set(uri.scheme, ignorePathCasing);\n\t\t\t}\n\t\t\treturn ignorePathCasing;\n\t\t};\n\t\tthis._dispooables.add(Event.any<IFileSystemProviderCapabilitiesChangeEvent | IFileSystemProviderRegistrationEvent>(\n\t\t\t_fileService.onDidChangeFileSystemProviderRegistrations,\n\t\t\t_fileService.onDidChangeFileSystemProviderCapabilities\n\t\t)(e => {\n\t\t\t// remove from cache\n\t\t\tschemeIgnoresPathCasingCache.delete(e.scheme);\n\t\t}));\n\n\t\tthis.extUri = new ExtUri(ignorePathCasing);\n\t\tthis._canonicalUris = new SkipList((a, b) => this.extUri.compare(a, b, true), this._limit);\n\t}\n\n\tdispose(): void {\n\t\tthis._dispooables.dispose();\n\t\tthis._canonicalUris.clear();\n\t}\n\n\tasCanonicalUri(uri: URI): URI {\n\n\t\t// (1) normalize URI\n\t\tif (this._fileService.hasProvider(uri)) {\n\t\t\turi = normalizePath(uri);\n\t\t}\n\n\t\t// (2) find the uri in its canonical form or use this uri to define it\n\t\tlet item = this._canonicalUris.get(uri);\n\t\tif (item) {\n\t\t\treturn item.touch().uri.with({ fragment: uri.fragment });\n\t\t}\n\n\t\t// this uri is first and defines the canonical form\n\t\tthis._canonicalUris.set(uri, new Entry(uri));\n\t\tthis._checkTrim();\n\n\t\treturn uri;\n\t}\n\n\tprivate _checkTrim(): void {\n\t\tif (this._canonicalUris.size < this._limit) {\n\t\t\treturn;\n\t\t}\n\n\t\t// get all entries, sort by touch (MRU) and re-initalize\n\t\t// the uri cache and the entry clock. this is an expensive\n\t\t// operation and should happen rarely\n\t\tconst entries = [...this._canonicalUris.entries()].sort((a, b) => {\n\t\t\tif (a[1].touch < b[1].touch) {\n\t\t\t\treturn 1;\n\t\t\t} else if (a[1].touch > b[1].touch) {\n\t\t\t\treturn -1;\n\t\t\t} else {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\t});\n\n\t\tEntry._clock = 0;\n\t\tthis._canonicalUris.clear();\n\t\tconst newSize = this._limit * 0.5;\n\t\tfor (let i = 0; i < newSize; i++) {\n\t\t\tthis._canonicalUris.set(entries[i][0], entries[i][1].touch());\n\t\t}\n\t}\n}\n\nregisterSingleton(IUriIdentityService, UriIdentityService, true);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { JSONPath } from 'vs/base/common/json';\nimport { setProperty } from 'vs/base/common/jsonEdit';\nimport { FormattingOptions } from 'vs/base/common/jsonFormatter';\n\n\nexport function edit(content: string, originalPath: JSONPath, value: any, formattingOptions: FormattingOptions): string {\n\tconst edit = setProperty(content, originalPath, value, formattingOptions)[0];\n\tif (edit) {\n\t\tcontent = content.substring(0, edit.offset) + edit.content + content.substring(edit.offset + edit.length);\n\t}\n\treturn content;\n}\n\nexport function getLineStartOffset(content: string, eol: string, atOffset: number): number {\n\tlet lineStartingOffset = atOffset;\n\twhile (lineStartingOffset >= 0) {\n\t\tif (content.charAt(lineStartingOffset) === eol.charAt(eol.length - 1)) {\n\t\t\tif (eol.length === 1) {\n\t\t\t\treturn lineStartingOffset + 1;\n\t\t\t}\n\t\t}\n\t\tlineStartingOffset--;\n\t\tif (eol.length === 2) {\n\t\t\tif (lineStartingOffset >= 0 && content.charAt(lineStartingOffset) === eol.charAt(0)) {\n\t\t\t\treturn lineStartingOffset + 2;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\n\nexport function getLineEndOffset(content: string, eol: string, atOffset: number): number {\n\tlet lineEndOffset = atOffset;\n\twhile (lineEndOffset >= 0) {\n\t\tif (content.charAt(lineEndOffset) === eol.charAt(eol.length - 1)) {\n\t\t\tif (eol.length === 1) {\n\t\t\t\treturn lineEndOffset;\n\t\t\t}\n\t\t}\n\t\tlineEndOffset++;\n\t\tif (eol.length === 2) {\n\t\t\tif (lineEndOffset >= 0 && content.charAt(lineEndOffset) === eol.charAt(1)) {\n\t\t\t\treturn lineEndOffset;\n\t\t\t}\n\t\t}\n\t}\n\treturn content.length - 1;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { deepClone, equals } from 'vs/base/common/objects';\nimport * as semver from 'vs/base/common/semver/semver';\nimport { isUndefined } from 'vs/base/common/types';\nimport { IExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { ISyncExtension, ISyncExtensionWithVersion } from 'vs/platform/userDataSync/common/userDataSync';\n\nexport interface IMergeResult {\n\treadonly local: { added: ISyncExtension[], removed: IExtensionIdentifier[], updated: ISyncExtension[] };\n\treadonly remote: { added: ISyncExtension[], removed: ISyncExtension[], updated: ISyncExtension[], all: ISyncExtension[] } | null;\n}\n\nexport function merge(localExtensions: ISyncExtensionWithVersion[], remoteExtensions: ISyncExtension[] | null, lastSyncExtensions: ISyncExtension[] | null, skippedExtensions: ISyncExtension[], ignoredExtensions: string[]): IMergeResult {\n\tconst added: ISyncExtension[] = [];\n\tconst removed: IExtensionIdentifier[] = [];\n\tconst updated: ISyncExtensionWithVersion[] = [];\n\n\tif (!remoteExtensions) {\n\t\tconst remote = localExtensions.filter(({ identifier }) => ignoredExtensions.every(id => id.toLowerCase() !== identifier.id.toLowerCase()));\n\t\treturn {\n\t\t\tlocal: {\n\t\t\t\tadded,\n\t\t\t\tremoved,\n\t\t\t\tupdated,\n\t\t\t},\n\t\t\tremote: remote.length > 0 ? {\n\t\t\t\tadded: remote,\n\t\t\t\tupdated: [],\n\t\t\t\tremoved: [],\n\t\t\t\tall: remote\n\t\t\t} : null\n\t\t};\n\t}\n\n\tlocalExtensions = localExtensions.map(massageIncomingExtension);\n\tremoteExtensions = remoteExtensions.map(massageIncomingExtension);\n\tlastSyncExtensions = lastSyncExtensions ? lastSyncExtensions.map(massageIncomingExtension) : null;\n\n\tconst uuids: Map<string, string> = new Map<string, string>();\n\tconst addUUID = (identifier: IExtensionIdentifier) => { if (identifier.uuid) { uuids.set(identifier.id.toLowerCase(), identifier.uuid); } };\n\tlocalExtensions.forEach(({ identifier }) => addUUID(identifier));\n\tremoteExtensions.forEach(({ identifier }) => addUUID(identifier));\n\tif (lastSyncExtensions) {\n\t\tlastSyncExtensions.forEach(({ identifier }) => addUUID(identifier));\n\t}\n\n\tconst getKey = (extension: ISyncExtension): string => {\n\t\tconst uuid = extension.identifier.uuid || uuids.get(extension.identifier.id.toLowerCase());\n\t\treturn uuid ? `uuid:${uuid}` : `id:${extension.identifier.id.toLowerCase()}`;\n\t};\n\tconst addExtensionToMap = <T extends ISyncExtension>(map: Map<string, T>, extension: T) => {\n\t\tmap.set(getKey(extension), extension);\n\t\treturn map;\n\t};\n\tconst localExtensionsMap: Map<string, ISyncExtensionWithVersion> = localExtensions.reduce(addExtensionToMap, new Map<string, ISyncExtensionWithVersion>());\n\tconst remoteExtensionsMap = remoteExtensions.reduce(addExtensionToMap, new Map<string, ISyncExtension>());\n\tconst newRemoteExtensionsMap = remoteExtensions.reduce((map: Map<string, ISyncExtension>, extension: ISyncExtension) => {\n\t\tconst key = getKey(extension);\n\t\textension = deepClone(extension);\n\t\tconst localExtension = localExtensionsMap.get(key);\n\t\tif (localExtension) {\n\t\t\tif (localExtension.installed) {\n\t\t\t\textension.installed = true;\n\t\t\t}\n\t\t\tif (!extension.version) {\n\t\t\t\textension.version = localExtension.version;\n\t\t\t}\n\t\t}\n\t\treturn addExtensionToMap(map, extension);\n\t}, new Map<string, ISyncExtension>());\n\tconst lastSyncExtensionsMap = lastSyncExtensions ? lastSyncExtensions.reduce(addExtensionToMap, new Map<string, ISyncExtension>()) : null;\n\tconst skippedExtensionsMap = skippedExtensions.reduce(addExtensionToMap, new Map<string, ISyncExtension>());\n\tconst ignoredExtensionsSet = ignoredExtensions.reduce((set, id) => {\n\t\tconst uuid = uuids.get(id.toLowerCase());\n\t\treturn set.add(uuid ? `uuid:${uuid}` : `id:${id.toLowerCase()}`);\n\t}, new Set<string>());\n\n\tconst localToRemote = compare(localExtensionsMap, remoteExtensionsMap, ignoredExtensionsSet);\n\tif (localToRemote.added.size > 0 || localToRemote.removed.size > 0 || localToRemote.updated.size > 0) {\n\n\t\tconst baseToLocal = compare(lastSyncExtensionsMap, localExtensionsMap, ignoredExtensionsSet);\n\t\tconst baseToRemote = compare(lastSyncExtensionsMap, remoteExtensionsMap, ignoredExtensionsSet);\n\n\t\tconst merge = (key: string, updatedInRemote: boolean): ISyncExtensionWithVersion | undefined => {\n\t\t\tconst localExtension = localExtensionsMap.get(key);\n\t\t\tif (localExtension) {\n\t\t\t\tconst remoteExtension = remoteExtensionsMap.get(key)!;\n\t\t\t\tconst mergedExtension = updatedInRemote ? remoteExtension : localExtension;\n\t\t\t\treturn {\n\t\t\t\t\t...mergedExtension,\n\t\t\t\t\tversion: remoteExtension.version && semver.gt(remoteExtension.version, localExtension.version) ? localExtension.version : localExtension.version,\n\t\t\t\t\tstate: mergeExtensionState(localExtension, remoteExtension, lastSyncExtensionsMap?.get(key)),\n\t\t\t\t\tpreRelease: isUndefined(mergedExtension.preRelease) /* from older client*/ ? localExtension.preRelease : mergedExtension.preRelease\n\t\t\t\t};\n\n\t\t\t}\n\t\t\treturn undefined;\n\t\t};\n\n\t\t// Remotely removed extension.\n\t\tfor (const key of baseToRemote.removed.values()) {\n\t\t\tconst e = localExtensionsMap.get(key);\n\t\t\tif (e) {\n\t\t\t\tremoved.push(e.identifier);\n\t\t\t}\n\t\t}\n\n\t\t// Remotely added extension\n\t\tfor (const key of baseToRemote.added.values()) {\n\t\t\t// Got added in local\n\t\t\tif (baseToLocal.added.has(key)) {\n\t\t\t\t// Is different from local to remote\n\t\t\t\tif (localToRemote.updated.has(key)) {\n\t\t\t\t\tconst mergedExtension = merge(key, true);\n\t\t\t\t\tif (mergedExtension) {\n\t\t\t\t\t\tupdated.push(massageOutgoingExtension(mergedExtension, key));\n\t\t\t\t\t\tnewRemoteExtensionsMap.set(key, mergedExtension);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Add only installed extension to local\n\t\t\t\tconst remoteExtension = remoteExtensionsMap.get(key)!;\n\t\t\t\tif (remoteExtension.installed) {\n\t\t\t\t\tadded.push(massageOutgoingExtension(remoteExtension, key));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Remotely updated extensions\n\t\tfor (const key of baseToRemote.updated.values()) {\n\t\t\t// Update in local always\n\t\t\tconst mergedExtension = merge(key, true);\n\t\t\tif (mergedExtension) {\n\t\t\t\tupdated.push(massageOutgoingExtension(mergedExtension, key));\n\t\t\t\tnewRemoteExtensionsMap.set(key, mergedExtension);\n\t\t\t}\n\t\t}\n\n\t\t// Locally added extensions\n\t\tfor (const key of baseToLocal.added.values()) {\n\t\t\t// Not there in remote\n\t\t\tif (!baseToRemote.added.has(key)) {\n\t\t\t\tnewRemoteExtensionsMap.set(key, localExtensionsMap.get(key)!);\n\t\t\t}\n\t\t}\n\n\t\t// Locally updated extensions\n\t\tfor (const key of baseToLocal.updated.values()) {\n\t\t\t// If removed in remote\n\t\t\tif (baseToRemote.removed.has(key)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If not updated in remote\n\t\t\tif (!baseToRemote.updated.has(key)) {\n\t\t\t\tconst mergedExtension = merge(key, false);\n\t\t\t\tif (mergedExtension) {\n\t\t\t\t\t// Retain installed property\n\t\t\t\t\tif (newRemoteExtensionsMap.get(key)?.installed) {\n\t\t\t\t\t\tmergedExtension.installed = true;\n\t\t\t\t\t}\n\t\t\t\t\tnewRemoteExtensionsMap.set(key, mergedExtension);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Locally removed extensions\n\t\tfor (const key of baseToLocal.removed.values()) {\n\t\t\t// If not skipped and not updated in remote\n\t\t\tif (!skippedExtensionsMap.has(key) && !baseToRemote.updated.has(key)) {\n\t\t\t\t// Remove only if it is an installed extension\n\t\t\t\tif (lastSyncExtensionsMap?.get(key)?.installed) {\n\t\t\t\t\tnewRemoteExtensionsMap.delete(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tconst remote: ISyncExtension[] = [];\n\tconst remoteChanges = compare(remoteExtensionsMap, newRemoteExtensionsMap, new Set<string>(), { checkInstalledProperty: true, checkVersionProperty: true });\n\tif (remoteChanges.added.size > 0 || remoteChanges.updated.size > 0 || remoteChanges.removed.size > 0) {\n\t\tnewRemoteExtensionsMap.forEach((value, key) => remote.push(massageOutgoingExtension(value, key)));\n\t}\n\n\treturn {\n\t\tlocal: { added, removed, updated },\n\t\tremote: remote.length ? {\n\t\t\tadded: [...remoteChanges.added].map(id => newRemoteExtensionsMap.get(id)!),\n\t\t\tupdated: [...remoteChanges.updated].map(id => newRemoteExtensionsMap.get(id)!),\n\t\t\tremoved: [...remoteChanges.removed].map(id => remoteExtensionsMap.get(id)!),\n\t\t\tall: remote\n\t\t} : null\n\t};\n}\n\nfunction compare(from: Map<string, ISyncExtension> | null, to: Map<string, ISyncExtension>, ignoredExtensions: Set<string>, { checkInstalledProperty, checkVersionProperty }: { checkInstalledProperty: boolean, checkVersionProperty: boolean } = { checkInstalledProperty: false, checkVersionProperty: false }): { added: Set<string>, removed: Set<string>, updated: Set<string> } {\n\tconst fromKeys = from ? [...from.keys()].filter(key => !ignoredExtensions.has(key)) : [];\n\tconst toKeys = [...to.keys()].filter(key => !ignoredExtensions.has(key));\n\tconst added = toKeys.filter(key => fromKeys.indexOf(key) === -1).reduce((r, key) => { r.add(key); return r; }, new Set<string>());\n\tconst removed = fromKeys.filter(key => toKeys.indexOf(key) === -1).reduce((r, key) => { r.add(key); return r; }, new Set<string>());\n\tconst updated: Set<string> = new Set<string>();\n\n\tfor (const key of fromKeys) {\n\t\tif (removed.has(key)) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst fromExtension = from!.get(key)!;\n\t\tconst toExtension = to.get(key);\n\t\tif (!toExtension\n\t\t\t|| fromExtension.disabled !== toExtension.disabled\n\t\t\t|| fromExtension.preRelease !== toExtension.preRelease\n\t\t\t|| !isSameExtensionState(fromExtension.state, toExtension.state)\n\t\t\t|| (checkVersionProperty && fromExtension.version !== toExtension.version)\n\t\t\t|| (checkInstalledProperty && fromExtension.installed !== toExtension.installed)\n\t\t) {\n\t\t\tupdated.add(key);\n\t\t}\n\t}\n\n\treturn { added, removed, updated };\n}\n\nfunction mergeExtensionState(localExtension: ISyncExtensionWithVersion, remoteExtension: ISyncExtension, lastSyncExtension: ISyncExtension | undefined): IStringDictionary<any> | undefined {\n\tconst localState = localExtension.state;\n\tconst remoteState = remoteExtension.state;\n\tconst baseState = lastSyncExtension?.state;\n\n\t// If remote extension has no version, use local state\n\tif (!remoteExtension.version) {\n\t\treturn localState;\n\t}\n\n\t// If local state exists and local extension is latest then use local state\n\tif (localState && semver.gt(localExtension.version, remoteExtension.version)) {\n\t\treturn localState;\n\t}\n\t// If remote state exists and remote extension is latest, use remote state\n\tif (remoteState && semver.gt(remoteExtension.version, localExtension.version)) {\n\t\treturn remoteState;\n\t}\n\n\n\t/* Remote and local are on same version */\n\n\t// If local state is not yet set, use remote state\n\tif (!localState) {\n\t\treturn remoteState;\n\t}\n\t// If remote state is not yet set, use local state\n\tif (!remoteState) {\n\t\treturn localState;\n\t}\n\n\tconst mergedState: IStringDictionary<any> = deepClone(localState);\n\tconst baseToRemote = baseState ? compareExtensionState(baseState, remoteState) : { added: Object.keys(remoteState).reduce((r, k) => { r.add(k); return r; }, new Set<string>()), removed: new Set<string>(), updated: new Set<string>() };\n\tconst baseToLocal = baseState ? compareExtensionState(baseState, localState) : { added: Object.keys(localState).reduce((r, k) => { r.add(k); return r; }, new Set<string>()), removed: new Set<string>(), updated: new Set<string>() };\n\t// Added/Updated in remote\n\tfor (const key of [...baseToRemote.added.values(), ...baseToRemote.updated.values()]) {\n\t\tmergedState[key] = remoteState[key];\n\t}\n\t// Removed in remote\n\tfor (const key of baseToRemote.removed.values()) {\n\t\t// Not updated in local\n\t\tif (!baseToLocal.updated.has(key)) {\n\t\t\tdelete mergedState[key];\n\t\t}\n\t}\n\treturn mergedState;\n}\n\nfunction compareExtensionState(from: IStringDictionary<any>, to: IStringDictionary<any>): { added: Set<string>, removed: Set<string>, updated: Set<string> } {\n\tconst fromKeys = Object.keys(from);\n\tconst toKeys = Object.keys(to);\n\tconst added = toKeys.filter(key => fromKeys.indexOf(key) === -1).reduce((r, key) => { r.add(key); return r; }, new Set<string>());\n\tconst removed = fromKeys.filter(key => toKeys.indexOf(key) === -1).reduce((r, key) => { r.add(key); return r; }, new Set<string>());\n\tconst updated: Set<string> = new Set<string>();\n\n\tfor (const key of fromKeys) {\n\t\tif (removed.has(key)) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst value1 = from[key];\n\t\tconst value2 = to[key];\n\t\tif (!equals(value1, value2)) {\n\t\t\tupdated.add(key);\n\t\t}\n\t}\n\n\treturn { added, removed, updated };\n}\n\nfunction isSameExtensionState(a: IStringDictionary<any> = {}, b: IStringDictionary<any> = {}): boolean {\n\tconst { added, removed, updated } = compareExtensionState(a, b);\n\treturn added.size === 0 && removed.size === 0 && updated.size === 0;\n}\n\n// massage incoming extension - add optional properties\nfunction massageIncomingExtension<T extends ISyncExtension>(extension: T): T {\n\treturn { ...extension, ...{ disabled: !!extension.disabled, installed: !!extension.installed } };\n}\n\n// massage outgoing extension - remove optional properties\nfunction massageOutgoingExtension<T extends ISyncExtension>(extension: T, key: string): T {\n\tconst massagedExtension: ISyncExtension = {\n\t\tidentifier: {\n\t\t\tid: extension.identifier.id,\n\t\t\tuuid: key.startsWith('uuid:') ? key.substring('uuid:'.length) : undefined\n\t\t},\n\t\tpreRelease: !!extension.preRelease /* set it always so that to differentiate with older clients */\n\t};\n\tif (extension.version) {\n\t\tmassagedExtension.version = extension.version;\n\t}\n\tif (extension.disabled) {\n\t\tmassagedExtension.disabled = true;\n\t}\n\tif (extension.installed) {\n\t\tmassagedExtension.installed = true;\n\t}\n\tif (extension.state) {\n\t\tmassagedExtension.state = extension.state;\n\t}\n\treturn massagedExtension as T;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { distinct } from 'vs/base/common/arrays';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { adoptToGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IStorageService, IStorageValueChangeEvent, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\n\nexport interface IExtensionIdWithVersion {\n\tid: string;\n\tversion: string;\n}\n\nexport const IExtensionsStorageSyncService = createDecorator<IExtensionsStorageSyncService>('IExtensionsStorageSyncService');\n\nexport interface IExtensionsStorageSyncService {\n\n\t_serviceBrand: any;\n\n\treadonly onDidChangeExtensionsStorage: Event<void>;\n\tsetKeysForSync(extensionIdWithVersion: IExtensionIdWithVersion, keys: string[]): void;\n\tgetKeysForSync(extensionIdWithVersion: IExtensionIdWithVersion): string[] | undefined;\n\n}\n\nconst EXTENSION_KEYS_ID_VERSION_REGEX = /^extensionKeys\\/([^.]+\\..+)@(\\d+\\.\\d+\\.\\d+(-.*)?)$/;\n\nexport class ExtensionsStorageSyncService extends Disposable implements IExtensionsStorageSyncService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate static toKey(extension: IExtensionIdWithVersion): string {\n\t\treturn `extensionKeys/${adoptToGalleryExtensionId(extension.id)}@${extension.version}`;\n\t}\n\n\tprivate static fromKey(key: string): IExtensionIdWithVersion | undefined {\n\t\tconst matches = EXTENSION_KEYS_ID_VERSION_REGEX.exec(key);\n\t\tif (matches && matches[1]) {\n\t\t\treturn { id: matches[1], version: matches[2] };\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate readonly _onDidChangeExtensionsStorage = this._register(new Emitter<void>());\n\treadonly onDidChangeExtensionsStorage = this._onDidChangeExtensionsStorage.event;\n\n\tprivate readonly extensionsWithKeysForSync = new Set<string>();\n\n\tconstructor(\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IProductService private readonly productService: IProductService,\n\t) {\n\t\tsuper();\n\t\tthis.initialize();\n\t\tthis._register(this.storageService.onDidChangeValue(e => this.onDidChangeStorageValue(e)));\n\t}\n\n\tprivate initialize(): void {\n\t\tconst keys = this.storageService.keys(StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\tfor (const key of keys) {\n\t\t\tconst extensionIdWithVersion = ExtensionsStorageSyncService.fromKey(key);\n\t\t\tif (extensionIdWithVersion) {\n\t\t\t\tthis.extensionsWithKeysForSync.add(extensionIdWithVersion.id.toLowerCase());\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onDidChangeStorageValue(e: IStorageValueChangeEvent): void {\n\t\tif (e.scope !== StorageScope.GLOBAL) {\n\t\t\treturn;\n\t\t}\n\n\t\t// State of extension with keys for sync has changed\n\t\tif (this.extensionsWithKeysForSync.has(e.key.toLowerCase())) {\n\t\t\tthis._onDidChangeExtensionsStorage.fire();\n\t\t\treturn;\n\t\t}\n\n\t\t// Keys for sync of an extension has changed\n\t\tconst extensionIdWithVersion = ExtensionsStorageSyncService.fromKey(e.key);\n\t\tif (extensionIdWithVersion) {\n\t\t\tthis.extensionsWithKeysForSync.add(extensionIdWithVersion.id.toLowerCase());\n\t\t\tthis._onDidChangeExtensionsStorage.fire();\n\t\t\treturn;\n\t\t}\n\t}\n\n\tsetKeysForSync(extensionIdWithVersion: IExtensionIdWithVersion, keys: string[]): void {\n\t\tthis.storageService.store(ExtensionsStorageSyncService.toKey(extensionIdWithVersion), JSON.stringify(keys), StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t}\n\n\tgetKeysForSync(extensionIdWithVersion: IExtensionIdWithVersion): string[] | undefined {\n\t\tconst extensionKeysForSyncFromProduct = this.productService.extensionSyncedKeys?.[extensionIdWithVersion.id.toLowerCase()];\n\t\tconst extensionKeysForSyncFromStorageValue = this.storageService.get(ExtensionsStorageSyncService.toKey(extensionIdWithVersion), StorageScope.GLOBAL);\n\t\tconst extensionKeysForSyncFromStorage = extensionKeysForSyncFromStorageValue ? JSON.parse(extensionKeysForSyncFromStorageValue) : undefined;\n\n\t\treturn extensionKeysForSyncFromStorage && extensionKeysForSyncFromProduct\n\t\t\t? distinct([...extensionKeysForSyncFromStorage, ...extensionKeysForSyncFromProduct])\n\t\t\t: (extensionKeysForSyncFromStorage || extensionKeysForSyncFromProduct);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { distinct } from 'vs/base/common/arrays';\nimport { ConfigurationTarget, IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ILocalExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IIgnoredExtensionsManagementService = createDecorator<IIgnoredExtensionsManagementService>('IIgnoredExtensionsManagementService');\nexport interface IIgnoredExtensionsManagementService {\n\treadonly _serviceBrand: any;\n\n\tgetIgnoredExtensions(installed: ILocalExtension[]): string[];\n\n\thasToNeverSyncExtension(extensionId: string): boolean;\n\thasToAlwaysSyncExtension(extensionId: string): boolean;\n\tupdateIgnoredExtensions(ignoredExtensionId: string, ignore: boolean): Promise<void>;\n\tupdateSynchronizedExtensions(ignoredExtensionId: string, sync: boolean): Promise<void>;\n}\n\nexport class IgnoredExtensionsManagementService implements IIgnoredExtensionsManagementService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t) {\n\t}\n\n\thasToNeverSyncExtension(extensionId: string): boolean {\n\t\tconst configuredIgnoredExtensions = this.getConfiguredIgnoredExtensions();\n\t\treturn configuredIgnoredExtensions.includes(extensionId.toLowerCase());\n\t}\n\n\thasToAlwaysSyncExtension(extensionId: string): boolean {\n\t\tconst configuredIgnoredExtensions = this.getConfiguredIgnoredExtensions();\n\t\treturn configuredIgnoredExtensions.includes(`-${extensionId.toLowerCase()}`);\n\t}\n\n\tupdateIgnoredExtensions(ignoredExtensionId: string, ignore: boolean): Promise<void> {\n\t\t// first remove the extension completely from ignored extensions\n\t\tlet currentValue = [...this.configurationService.getValue<string[]>('settingsSync.ignoredExtensions')].map(id => id.toLowerCase());\n\t\tcurrentValue = currentValue.filter(v => v !== ignoredExtensionId && v !== `-${ignoredExtensionId}`);\n\n\t\t// Add only if ignored\n\t\tif (ignore) {\n\t\t\tcurrentValue.push(ignoredExtensionId.toLowerCase());\n\t\t}\n\n\t\treturn this.configurationService.updateValue('settingsSync.ignoredExtensions', currentValue.length ? currentValue : undefined, ConfigurationTarget.USER);\n\t}\n\n\tupdateSynchronizedExtensions(extensionId: string, sync: boolean): Promise<void> {\n\t\t// first remove the extension completely from ignored extensions\n\t\tlet currentValue = [...this.configurationService.getValue<string[]>('settingsSync.ignoredExtensions')].map(id => id.toLowerCase());\n\t\tcurrentValue = currentValue.filter(v => v !== extensionId && v !== `-${extensionId}`);\n\n\t\t// Add only if synced\n\t\tif (sync) {\n\t\t\tcurrentValue.push(`-${extensionId.toLowerCase()}`);\n\t\t}\n\n\t\treturn this.configurationService.updateValue('settingsSync.ignoredExtensions', currentValue.length ? currentValue : undefined, ConfigurationTarget.USER);\n\t}\n\n\tgetIgnoredExtensions(installed: ILocalExtension[]): string[] {\n\t\tconst defaultIgnoredExtensions = installed.filter(i => i.isMachineScoped).map(i => i.identifier.id.toLowerCase());\n\t\tconst value = this.getConfiguredIgnoredExtensions().map(id => id.toLowerCase());\n\t\tconst added: string[] = [], removed: string[] = [];\n\t\tif (Array.isArray(value)) {\n\t\t\tfor (const key of value) {\n\t\t\t\tif (key.startsWith('-')) {\n\t\t\t\t\tremoved.push(key.substring(1));\n\t\t\t\t} else {\n\t\t\t\t\tadded.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn distinct([...defaultIgnoredExtensions, ...added,].filter(setting => removed.indexOf(setting) === -1));\n\t}\n\n\tprivate getConfiguredIgnoredExtensions(): ReadonlyArray<string> {\n\t\tlet userValue = this.configurationService.inspect<string[]>('settingsSync.ignoredExtensions').userValue;\n\t\tif (userValue !== undefined) {\n\t\t\treturn userValue;\n\t\t}\n\t\tuserValue = this.configurationService.inspect<string[]>('sync.ignoredExtensions').userValue;\n\t\tif (userValue !== undefined) {\n\t\t\treturn userValue;\n\t\t}\n\t\treturn (this.configurationService.getValue<string[]>('settingsSync.ignoredExtensions') || []).map(id => id.toLowerCase());\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { equals } from 'vs/base/common/arrays';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { parse } from 'vs/base/common/json';\nimport { FormattingOptions } from 'vs/base/common/jsonFormatter';\nimport * as objects from 'vs/base/common/objects';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { IUserFriendlyKeybinding } from 'vs/platform/keybinding/common/keybinding';\nimport * as contentUtil from 'vs/platform/userDataSync/common/content';\nimport { IUserDataSyncUtilService } from 'vs/platform/userDataSync/common/userDataSync';\n\ninterface ICompareResult {\n\tadded: Set<string>;\n\tremoved: Set<string>;\n\tupdated: Set<string>;\n}\n\ninterface IMergeResult {\n\thasLocalForwarded: boolean;\n\thasRemoteForwarded: boolean;\n\tadded: Set<string>;\n\tremoved: Set<string>;\n\tupdated: Set<string>;\n\tconflicts: Set<string>;\n}\n\nexport function parseKeybindings(content: string): IUserFriendlyKeybinding[] {\n\treturn parse(content) || [];\n}\n\nexport async function merge(localContent: string, remoteContent: string, baseContent: string | null, formattingOptions: FormattingOptions, userDataSyncUtilService: IUserDataSyncUtilService): Promise<{ mergeContent: string, hasChanges: boolean, hasConflicts: boolean }> {\n\tconst local = parseKeybindings(localContent);\n\tconst remote = parseKeybindings(remoteContent);\n\tconst base = baseContent ? parseKeybindings(baseContent) : null;\n\n\tconst userbindings: string[] = [...local, ...remote, ...(base || [])].map(keybinding => keybinding.key);\n\tconst normalizedKeys = await userDataSyncUtilService.resolveUserBindings(userbindings);\n\tlet keybindingsMergeResult = computeMergeResultByKeybinding(local, remote, base, normalizedKeys);\n\n\tif (!keybindingsMergeResult.hasLocalForwarded && !keybindingsMergeResult.hasRemoteForwarded) {\n\t\t// No changes found between local and remote.\n\t\treturn { mergeContent: localContent, hasChanges: false, hasConflicts: false };\n\t}\n\n\tif (!keybindingsMergeResult.hasLocalForwarded && keybindingsMergeResult.hasRemoteForwarded) {\n\t\treturn { mergeContent: remoteContent, hasChanges: true, hasConflicts: false };\n\t}\n\n\tif (keybindingsMergeResult.hasLocalForwarded && !keybindingsMergeResult.hasRemoteForwarded) {\n\t\t// Local has moved forward and remote has not. Return local.\n\t\treturn { mergeContent: localContent, hasChanges: true, hasConflicts: false };\n\t}\n\n\t// Both local and remote has moved forward.\n\tconst localByCommand = byCommand(local);\n\tconst remoteByCommand = byCommand(remote);\n\tconst baseByCommand = base ? byCommand(base) : null;\n\tconst localToRemoteByCommand = compareByCommand(localByCommand, remoteByCommand, normalizedKeys);\n\tconst baseToLocalByCommand = baseByCommand ? compareByCommand(baseByCommand, localByCommand, normalizedKeys) : { added: [...localByCommand.keys()].reduce((r, k) => { r.add(k); return r; }, new Set<string>()), removed: new Set<string>(), updated: new Set<string>() };\n\tconst baseToRemoteByCommand = baseByCommand ? compareByCommand(baseByCommand, remoteByCommand, normalizedKeys) : { added: [...remoteByCommand.keys()].reduce((r, k) => { r.add(k); return r; }, new Set<string>()), removed: new Set<string>(), updated: new Set<string>() };\n\n\tconst commandsMergeResult = computeMergeResult(localToRemoteByCommand, baseToLocalByCommand, baseToRemoteByCommand);\n\tlet mergeContent = localContent;\n\n\t// Removed commands in Remote\n\tfor (const command of commandsMergeResult.removed.values()) {\n\t\tif (commandsMergeResult.conflicts.has(command)) {\n\t\t\tcontinue;\n\t\t}\n\t\tmergeContent = removeKeybindings(mergeContent, command, formattingOptions);\n\t}\n\n\t// Added commands in remote\n\tfor (const command of commandsMergeResult.added.values()) {\n\t\tif (commandsMergeResult.conflicts.has(command)) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst keybindings = remoteByCommand.get(command)!;\n\t\t// Ignore negated commands\n\t\tif (keybindings.some(keybinding => keybinding.command !== `-${command}` && keybindingsMergeResult.conflicts.has(normalizedKeys[keybinding.key]))) {\n\t\t\tcommandsMergeResult.conflicts.add(command);\n\t\t\tcontinue;\n\t\t}\n\t\tmergeContent = addKeybindings(mergeContent, keybindings, formattingOptions);\n\t}\n\n\t// Updated commands in Remote\n\tfor (const command of commandsMergeResult.updated.values()) {\n\t\tif (commandsMergeResult.conflicts.has(command)) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst keybindings = remoteByCommand.get(command)!;\n\t\t// Ignore negated commands\n\t\tif (keybindings.some(keybinding => keybinding.command !== `-${command}` && keybindingsMergeResult.conflicts.has(normalizedKeys[keybinding.key]))) {\n\t\t\tcommandsMergeResult.conflicts.add(command);\n\t\t\tcontinue;\n\t\t}\n\t\tmergeContent = updateKeybindings(mergeContent, command, keybindings, formattingOptions);\n\t}\n\n\treturn { mergeContent, hasChanges: true, hasConflicts: commandsMergeResult.conflicts.size > 0 };\n}\n\nfunction computeMergeResult(localToRemote: ICompareResult, baseToLocal: ICompareResult, baseToRemote: ICompareResult): { added: Set<string>, removed: Set<string>, updated: Set<string>, conflicts: Set<string> } {\n\tconst added: Set<string> = new Set<string>();\n\tconst removed: Set<string> = new Set<string>();\n\tconst updated: Set<string> = new Set<string>();\n\tconst conflicts: Set<string> = new Set<string>();\n\n\t// Removed keys in Local\n\tfor (const key of baseToLocal.removed.values()) {\n\t\t// Got updated in remote\n\t\tif (baseToRemote.updated.has(key)) {\n\t\t\tconflicts.add(key);\n\t\t}\n\t}\n\n\t// Removed keys in Remote\n\tfor (const key of baseToRemote.removed.values()) {\n\t\tif (conflicts.has(key)) {\n\t\t\tcontinue;\n\t\t}\n\t\t// Got updated in local\n\t\tif (baseToLocal.updated.has(key)) {\n\t\t\tconflicts.add(key);\n\t\t} else {\n\t\t\t// remove the key\n\t\t\tremoved.add(key);\n\t\t}\n\t}\n\n\t// Added keys in Local\n\tfor (const key of baseToLocal.added.values()) {\n\t\tif (conflicts.has(key)) {\n\t\t\tcontinue;\n\t\t}\n\t\t// Got added in remote\n\t\tif (baseToRemote.added.has(key)) {\n\t\t\t// Has different value\n\t\t\tif (localToRemote.updated.has(key)) {\n\t\t\t\tconflicts.add(key);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Added keys in remote\n\tfor (const key of baseToRemote.added.values()) {\n\t\tif (conflicts.has(key)) {\n\t\t\tcontinue;\n\t\t}\n\t\t// Got added in local\n\t\tif (baseToLocal.added.has(key)) {\n\t\t\t// Has different value\n\t\t\tif (localToRemote.updated.has(key)) {\n\t\t\t\tconflicts.add(key);\n\t\t\t}\n\t\t} else {\n\t\t\tadded.add(key);\n\t\t}\n\t}\n\n\t// Updated keys in Local\n\tfor (const key of baseToLocal.updated.values()) {\n\t\tif (conflicts.has(key)) {\n\t\t\tcontinue;\n\t\t}\n\t\t// Got updated in remote\n\t\tif (baseToRemote.updated.has(key)) {\n\t\t\t// Has different value\n\t\t\tif (localToRemote.updated.has(key)) {\n\t\t\t\tconflicts.add(key);\n\t\t\t}\n\t\t}\n\t}\n\n\t// Updated keys in Remote\n\tfor (const key of baseToRemote.updated.values()) {\n\t\tif (conflicts.has(key)) {\n\t\t\tcontinue;\n\t\t}\n\t\t// Got updated in local\n\t\tif (baseToLocal.updated.has(key)) {\n\t\t\t// Has different value\n\t\t\tif (localToRemote.updated.has(key)) {\n\t\t\t\tconflicts.add(key);\n\t\t\t}\n\t\t} else {\n\t\t\t// updated key\n\t\t\tupdated.add(key);\n\t\t}\n\t}\n\treturn { added, removed, updated, conflicts };\n}\n\nfunction computeMergeResultByKeybinding(local: IUserFriendlyKeybinding[], remote: IUserFriendlyKeybinding[], base: IUserFriendlyKeybinding[] | null, normalizedKeys: IStringDictionary<string>): IMergeResult {\n\tconst empty = new Set<string>();\n\tconst localByKeybinding = byKeybinding(local, normalizedKeys);\n\tconst remoteByKeybinding = byKeybinding(remote, normalizedKeys);\n\tconst baseByKeybinding = base ? byKeybinding(base, normalizedKeys) : null;\n\n\tconst localToRemoteByKeybinding = compareByKeybinding(localByKeybinding, remoteByKeybinding);\n\tif (localToRemoteByKeybinding.added.size === 0 && localToRemoteByKeybinding.removed.size === 0 && localToRemoteByKeybinding.updated.size === 0) {\n\t\treturn { hasLocalForwarded: false, hasRemoteForwarded: false, added: empty, removed: empty, updated: empty, conflicts: empty };\n\t}\n\n\tconst baseToLocalByKeybinding = baseByKeybinding ? compareByKeybinding(baseByKeybinding, localByKeybinding) : { added: [...localByKeybinding.keys()].reduce((r, k) => { r.add(k); return r; }, new Set<string>()), removed: new Set<string>(), updated: new Set<string>() };\n\tif (baseToLocalByKeybinding.added.size === 0 && baseToLocalByKeybinding.removed.size === 0 && baseToLocalByKeybinding.updated.size === 0) {\n\t\t// Remote has moved forward and local has not.\n\t\treturn { hasLocalForwarded: false, hasRemoteForwarded: true, added: empty, removed: empty, updated: empty, conflicts: empty };\n\t}\n\n\tconst baseToRemoteByKeybinding = baseByKeybinding ? compareByKeybinding(baseByKeybinding, remoteByKeybinding) : { added: [...remoteByKeybinding.keys()].reduce((r, k) => { r.add(k); return r; }, new Set<string>()), removed: new Set<string>(), updated: new Set<string>() };\n\tif (baseToRemoteByKeybinding.added.size === 0 && baseToRemoteByKeybinding.removed.size === 0 && baseToRemoteByKeybinding.updated.size === 0) {\n\t\treturn { hasLocalForwarded: true, hasRemoteForwarded: false, added: empty, removed: empty, updated: empty, conflicts: empty };\n\t}\n\n\tconst { added, removed, updated, conflicts } = computeMergeResult(localToRemoteByKeybinding, baseToLocalByKeybinding, baseToRemoteByKeybinding);\n\treturn { hasLocalForwarded: true, hasRemoteForwarded: true, added, removed, updated, conflicts };\n}\n\nfunction byKeybinding(keybindings: IUserFriendlyKeybinding[], keys: IStringDictionary<string>) {\n\tconst map: Map<string, IUserFriendlyKeybinding[]> = new Map<string, IUserFriendlyKeybinding[]>();\n\tfor (const keybinding of keybindings) {\n\t\tconst key = keys[keybinding.key];\n\t\tlet value = map.get(key);\n\t\tif (!value) {\n\t\t\tvalue = [];\n\t\t\tmap.set(key, value);\n\t\t}\n\t\tvalue.push(keybinding);\n\n\t}\n\treturn map;\n}\n\nfunction byCommand(keybindings: IUserFriendlyKeybinding[]): Map<string, IUserFriendlyKeybinding[]> {\n\tconst map: Map<string, IUserFriendlyKeybinding[]> = new Map<string, IUserFriendlyKeybinding[]>();\n\tfor (const keybinding of keybindings) {\n\t\tconst command = keybinding.command[0] === '-' ? keybinding.command.substring(1) : keybinding.command;\n\t\tlet value = map.get(command);\n\t\tif (!value) {\n\t\t\tvalue = [];\n\t\t\tmap.set(command, value);\n\t\t}\n\t\tvalue.push(keybinding);\n\t}\n\treturn map;\n}\n\n\nfunction compareByKeybinding(from: Map<string, IUserFriendlyKeybinding[]>, to: Map<string, IUserFriendlyKeybinding[]>): ICompareResult {\n\tconst fromKeys = [...from.keys()];\n\tconst toKeys = [...to.keys()];\n\tconst added = toKeys.filter(key => fromKeys.indexOf(key) === -1).reduce((r, key) => { r.add(key); return r; }, new Set<string>());\n\tconst removed = fromKeys.filter(key => toKeys.indexOf(key) === -1).reduce((r, key) => { r.add(key); return r; }, new Set<string>());\n\tconst updated: Set<string> = new Set<string>();\n\n\tfor (const key of fromKeys) {\n\t\tif (removed.has(key)) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst value1: IUserFriendlyKeybinding[] = from.get(key)!.map(keybinding => ({ ...keybinding, ...{ key } }));\n\t\tconst value2: IUserFriendlyKeybinding[] = to.get(key)!.map(keybinding => ({ ...keybinding, ...{ key } }));\n\t\tif (!equals(value1, value2, (a, b) => isSameKeybinding(a, b))) {\n\t\t\tupdated.add(key);\n\t\t}\n\t}\n\n\treturn { added, removed, updated };\n}\n\nfunction compareByCommand(from: Map<string, IUserFriendlyKeybinding[]>, to: Map<string, IUserFriendlyKeybinding[]>, normalizedKeys: IStringDictionary<string>): ICompareResult {\n\tconst fromKeys = [...from.keys()];\n\tconst toKeys = [...to.keys()];\n\tconst added = toKeys.filter(key => fromKeys.indexOf(key) === -1).reduce((r, key) => { r.add(key); return r; }, new Set<string>());\n\tconst removed = fromKeys.filter(key => toKeys.indexOf(key) === -1).reduce((r, key) => { r.add(key); return r; }, new Set<string>());\n\tconst updated: Set<string> = new Set<string>();\n\n\tfor (const key of fromKeys) {\n\t\tif (removed.has(key)) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst value1: IUserFriendlyKeybinding[] = from.get(key)!.map(keybinding => ({ ...keybinding, ...{ key: normalizedKeys[keybinding.key] } }));\n\t\tconst value2: IUserFriendlyKeybinding[] = to.get(key)!.map(keybinding => ({ ...keybinding, ...{ key: normalizedKeys[keybinding.key] } }));\n\t\tif (!areSameKeybindingsWithSameCommand(value1, value2)) {\n\t\t\tupdated.add(key);\n\t\t}\n\t}\n\n\treturn { added, removed, updated };\n}\n\nfunction areSameKeybindingsWithSameCommand(value1: IUserFriendlyKeybinding[], value2: IUserFriendlyKeybinding[]): boolean {\n\t// Compare entries adding keybindings\n\tif (!equals(value1.filter(({ command }) => command[0] !== '-'), value2.filter(({ command }) => command[0] !== '-'), (a, b) => isSameKeybinding(a, b))) {\n\t\treturn false;\n\t}\n\t// Compare entries removing keybindings\n\tif (!equals(value1.filter(({ command }) => command[0] === '-'), value2.filter(({ command }) => command[0] === '-'), (a, b) => isSameKeybinding(a, b))) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\nfunction isSameKeybinding(a: IUserFriendlyKeybinding, b: IUserFriendlyKeybinding): boolean {\n\tif (a.command !== b.command) {\n\t\treturn false;\n\t}\n\tif (a.key !== b.key) {\n\t\treturn false;\n\t}\n\tconst whenA = ContextKeyExpr.deserialize(a.when);\n\tconst whenB = ContextKeyExpr.deserialize(b.when);\n\tif ((whenA && !whenB) || (!whenA && whenB)) {\n\t\treturn false;\n\t}\n\tif (whenA && whenB && !whenA.equals(whenB)) {\n\t\treturn false;\n\t}\n\tif (!objects.equals(a.args, b.args)) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\nfunction addKeybindings(content: string, keybindings: IUserFriendlyKeybinding[], formattingOptions: FormattingOptions): string {\n\tfor (const keybinding of keybindings) {\n\t\tcontent = contentUtil.edit(content, [-1], keybinding, formattingOptions);\n\t}\n\treturn content;\n}\n\nfunction removeKeybindings(content: string, command: string, formattingOptions: FormattingOptions): string {\n\tconst keybindings = parseKeybindings(content);\n\tfor (let index = keybindings.length - 1; index >= 0; index--) {\n\t\tif (keybindings[index].command === command || keybindings[index].command === `-${command}`) {\n\t\t\tcontent = contentUtil.edit(content, [index], undefined, formattingOptions);\n\t\t}\n\t}\n\treturn content;\n}\n\nfunction updateKeybindings(content: string, command: string, keybindings: IUserFriendlyKeybinding[], formattingOptions: FormattingOptions): string {\n\tconst allKeybindings = parseKeybindings(content);\n\tconst location = allKeybindings.findIndex(keybinding => keybinding.command === command || keybinding.command === `-${command}`);\n\t// Remove all entries with this command\n\tfor (let index = allKeybindings.length - 1; index >= 0; index--) {\n\t\tif (allKeybindings[index].command === command || allKeybindings[index].command === `-${command}`) {\n\t\t\tcontent = contentUtil.edit(content, [index], undefined, formattingOptions);\n\t\t}\n\t}\n\t// add all entries at the same location where the entry with this command was located.\n\tfor (let index = keybindings.length - 1; index >= 0; index--) {\n\t\tcontent = contentUtil.edit(content, [location], keybindings[index], formattingOptions);\n\t}\n\treturn content;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IStringDictionary } from 'vs/base/common/collections';\n\nexport interface IMergeResult {\n\tlocal: {\n\t\tadded: IStringDictionary<string>;\n\t\tupdated: IStringDictionary<string>;\n\t\tremoved: string[];\n\t};\n\tremote: {\n\t\tadded: IStringDictionary<string>;\n\t\tupdated: IStringDictionary<string>;\n\t\tremoved: string[];\n\t};\n\tconflicts: string[];\n}\n\nexport function merge(local: IStringDictionary<string>, remote: IStringDictionary<string> | null, base: IStringDictionary<string> | null): IMergeResult {\n\tconst localAdded: IStringDictionary<string> = {};\n\tconst localUpdated: IStringDictionary<string> = {};\n\tconst localRemoved: Set<string> = new Set<string>();\n\n\tif (!remote) {\n\t\treturn {\n\t\t\tlocal: { added: localAdded, updated: localUpdated, removed: [...localRemoved.values()] },\n\t\t\tremote: { added: local, updated: {}, removed: [] },\n\t\t\tconflicts: []\n\t\t};\n\t}\n\n\tconst localToRemote = compare(local, remote);\n\tif (localToRemote.added.size === 0 && localToRemote.removed.size === 0 && localToRemote.updated.size === 0) {\n\t\t// No changes found between local and remote.\n\t\treturn {\n\t\t\tlocal: { added: localAdded, updated: localUpdated, removed: [...localRemoved.values()] },\n\t\t\tremote: { added: {}, updated: {}, removed: [] },\n\t\t\tconflicts: []\n\t\t};\n\t}\n\n\tconst baseToLocal = compare(base, local);\n\tconst baseToRemote = compare(base, remote);\n\n\tconst remoteAdded: IStringDictionary<string> = {};\n\tconst remoteUpdated: IStringDictionary<string> = {};\n\tconst remoteRemoved: Set<string> = new Set<string>();\n\n\tconst conflicts: Set<string> = new Set<string>();\n\n\t// Removed snippets in Local\n\tfor (const key of baseToLocal.removed.values()) {\n\t\t// Conflict - Got updated in remote.\n\t\tif (baseToRemote.updated.has(key)) {\n\t\t\t// Add to local\n\t\t\tlocalAdded[key] = remote[key];\n\t\t}\n\t\t// Remove it in remote\n\t\telse {\n\t\t\tremoteRemoved.add(key);\n\t\t}\n\t}\n\n\t// Removed snippets in Remote\n\tfor (const key of baseToRemote.removed.values()) {\n\t\tif (conflicts.has(key)) {\n\t\t\tcontinue;\n\t\t}\n\t\t// Conflict - Got updated in local\n\t\tif (baseToLocal.updated.has(key)) {\n\t\t\tconflicts.add(key);\n\t\t}\n\t\t// Also remove in Local\n\t\telse {\n\t\t\tlocalRemoved.add(key);\n\t\t}\n\t}\n\n\t// Updated snippets in Local\n\tfor (const key of baseToLocal.updated.values()) {\n\t\tif (conflicts.has(key)) {\n\t\t\tcontinue;\n\t\t}\n\t\t// Got updated in remote\n\t\tif (baseToRemote.updated.has(key)) {\n\t\t\t// Has different value\n\t\t\tif (localToRemote.updated.has(key)) {\n\t\t\t\tconflicts.add(key);\n\t\t\t}\n\t\t} else {\n\t\t\tremoteUpdated[key] = local[key];\n\t\t}\n\t}\n\n\t// Updated snippets in Remote\n\tfor (const key of baseToRemote.updated.values()) {\n\t\tif (conflicts.has(key)) {\n\t\t\tcontinue;\n\t\t}\n\t\t// Got updated in local\n\t\tif (baseToLocal.updated.has(key)) {\n\t\t\t// Has different value\n\t\t\tif (localToRemote.updated.has(key)) {\n\t\t\t\tconflicts.add(key);\n\t\t\t}\n\t\t} else if (local[key] !== undefined) {\n\t\t\tlocalUpdated[key] = remote[key];\n\t\t}\n\t}\n\n\t// Added snippets in Local\n\tfor (const key of baseToLocal.added.values()) {\n\t\tif (conflicts.has(key)) {\n\t\t\tcontinue;\n\t\t}\n\t\t// Got added in remote\n\t\tif (baseToRemote.added.has(key)) {\n\t\t\t// Has different value\n\t\t\tif (localToRemote.updated.has(key)) {\n\t\t\t\tconflicts.add(key);\n\t\t\t}\n\t\t} else {\n\t\t\tremoteAdded[key] = local[key];\n\t\t}\n\t}\n\n\t// Added snippets in remote\n\tfor (const key of baseToRemote.added.values()) {\n\t\tif (conflicts.has(key)) {\n\t\t\tcontinue;\n\t\t}\n\t\t// Got added in local\n\t\tif (baseToLocal.added.has(key)) {\n\t\t\t// Has different value\n\t\t\tif (localToRemote.updated.has(key)) {\n\t\t\t\tconflicts.add(key);\n\t\t\t}\n\t\t} else {\n\t\t\tlocalAdded[key] = remote[key];\n\t\t}\n\t}\n\n\treturn {\n\t\tlocal: { added: localAdded, removed: [...localRemoved.values()], updated: localUpdated },\n\t\tremote: { added: remoteAdded, removed: [...remoteRemoved.values()], updated: remoteUpdated },\n\t\tconflicts: [...conflicts.values()],\n\t};\n}\n\nfunction compare(from: IStringDictionary<string> | null, to: IStringDictionary<string> | null): { added: Set<string>, removed: Set<string>, updated: Set<string> } {\n\tconst fromKeys = from ? Object.keys(from) : [];\n\tconst toKeys = to ? Object.keys(to) : [];\n\tconst added = toKeys.filter(key => fromKeys.indexOf(key) === -1).reduce((r, key) => { r.add(key); return r; }, new Set<string>());\n\tconst removed = fromKeys.filter(key => toKeys.indexOf(key) === -1).reduce((r, key) => { r.add(key); return r; }, new Set<string>());\n\tconst updated: Set<string> = new Set<string>();\n\n\tfor (const key of fromKeys) {\n\t\tif (removed.has(key)) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst fromSnippet = from![key]!;\n\t\tconst toSnippet = to![key]!;\n\t\tif (fromSnippet !== toSnippet) {\n\t\t\tupdated.add(key);\n\t\t}\n\t}\n\n\treturn { added, removed, updated };\n}\n\nexport function areSame(a: IStringDictionary<string>, b: IStringDictionary<string>): boolean {\n\tconst { added, removed, updated } = compare(a, b);\n\treturn added.size === 0 && removed.size === 0 && updated.size === 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { distinct } from 'vs/base/common/arrays';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { Event } from 'vs/base/common/event';\nimport { FormattingOptions } from 'vs/base/common/jsonFormatter';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { IExtUri, isEqualOrParent, joinPath } from 'vs/base/common/resources';\nimport { isArray, isObject, isString } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { IHeaders } from 'vs/base/parts/request/common/request';\nimport { localize } from 'vs/nls';\nimport { allSettings, ConfigurationScope, Extensions as ConfigurationExtensions, IConfigurationRegistry } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { EXTENSION_IDENTIFIER_PATTERN, IExtensionIdentifier } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Extensions as JSONExtensions, IJSONContributionRegistry } from 'vs/platform/jsonschemas/common/jsonContributionRegistry';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { Registry } from 'vs/platform/registry/common/platform';\n\nexport const CONFIGURATION_SYNC_STORE_KEY = 'configurationSync.store';\n\nexport function getDisallowedIgnoredSettings(): string[] {\n\tconst allSettings = Registry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration).getConfigurationProperties();\n\treturn Object.keys(allSettings).filter(setting => !!allSettings[setting].disallowSyncIgnore);\n}\n\nexport function getDefaultIgnoredSettings(): string[] {\n\tconst allSettings = Registry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration).getConfigurationProperties();\n\tconst ignoreSyncSettings = Object.keys(allSettings).filter(setting => !!allSettings[setting].ignoreSync);\n\tconst machineSettings = Object.keys(allSettings).filter(setting => allSettings[setting].scope === ConfigurationScope.MACHINE || allSettings[setting].scope === ConfigurationScope.MACHINE_OVERRIDABLE);\n\tconst disallowedSettings = getDisallowedIgnoredSettings();\n\treturn distinct([CONFIGURATION_SYNC_STORE_KEY, ...ignoreSyncSettings, ...machineSettings, ...disallowedSettings]);\n}\n\nexport const USER_DATA_SYNC_CONFIGURATION_SCOPE = 'settingsSync';\n\nexport interface IUserDataSyncConfiguration {\n\tkeybindingsPerPlatform?: boolean;\n\tignoredExtensions?: string[];\n\tignoredSettings?: string[];\n}\n\nexport function registerConfiguration(): IDisposable {\n\tconst ignoredSettingsSchemaId = 'vscode://schemas/ignoredSettings';\n\tconst configurationRegistry = Registry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration);\n\tconfigurationRegistry.registerConfiguration({\n\t\tid: 'settingsSync',\n\t\torder: 30,\n\t\ttitle: localize('settings sync', \"Settings Sync\"),\n\t\ttype: 'object',\n\t\tproperties: {\n\t\t\t'settingsSync.keybindingsPerPlatform': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdescription: localize('settingsSync.keybindingsPerPlatform', \"Synchronize keybindings for each platform.\"),\n\t\t\t\tdefault: true,\n\t\t\t\tscope: ConfigurationScope.APPLICATION,\n\t\t\t\ttags: ['sync', 'usesOnlineServices']\n\t\t\t},\n\t\t\t'settingsSync.ignoredExtensions': {\n\t\t\t\t'type': 'array',\n\t\t\t\tmarkdownDescription: localize('settingsSync.ignoredExtensions', \"List of extensions to be ignored while synchronizing. The identifier of an extension is always `${publisher}.${name}`. For example: `vscode.csharp`.\"),\n\t\t\t\titems: [{\n\t\t\t\t\ttype: 'string',\n\t\t\t\t\tpattern: EXTENSION_IDENTIFIER_PATTERN,\n\t\t\t\t\terrorMessage: localize('app.extension.identifier.errorMessage', \"Expected format '${publisher}.${name}'. Example: 'vscode.csharp'.\")\n\t\t\t\t}],\n\t\t\t\t'default': [],\n\t\t\t\t'scope': ConfigurationScope.APPLICATION,\n\t\t\t\tuniqueItems: true,\n\t\t\t\tdisallowSyncIgnore: true,\n\t\t\t\ttags: ['sync', 'usesOnlineServices']\n\t\t\t},\n\t\t\t'settingsSync.ignoredSettings': {\n\t\t\t\t'type': 'array',\n\t\t\t\tdescription: localize('settingsSync.ignoredSettings', \"Configure settings to be ignored while synchronizing.\"),\n\t\t\t\t'default': [],\n\t\t\t\t'scope': ConfigurationScope.APPLICATION,\n\t\t\t\t$ref: ignoredSettingsSchemaId,\n\t\t\t\tadditionalProperties: true,\n\t\t\t\tuniqueItems: true,\n\t\t\t\tdisallowSyncIgnore: true,\n\t\t\t\ttags: ['sync', 'usesOnlineServices']\n\t\t\t}\n\t\t}\n\t});\n\tconst jsonRegistry = Registry.as<IJSONContributionRegistry>(JSONExtensions.JSONContribution);\n\tconst registerIgnoredSettingsSchema = () => {\n\t\tconst disallowedIgnoredSettings = getDisallowedIgnoredSettings();\n\t\tconst defaultIgnoredSettings = getDefaultIgnoredSettings().filter(s => s !== CONFIGURATION_SYNC_STORE_KEY);\n\t\tconst settings = Object.keys(allSettings.properties).filter(setting => defaultIgnoredSettings.indexOf(setting) === -1);\n\t\tconst ignoredSettings = defaultIgnoredSettings.filter(setting => disallowedIgnoredSettings.indexOf(setting) === -1);\n\t\tconst ignoredSettingsSchema: IJSONSchema = {\n\t\t\titems: {\n\t\t\t\ttype: 'string',\n\t\t\t\tenum: [...settings, ...ignoredSettings.map(setting => `-${setting}`)]\n\t\t\t},\n\t\t};\n\t\tjsonRegistry.registerSchema(ignoredSettingsSchemaId, ignoredSettingsSchema);\n\t};\n\treturn configurationRegistry.onDidUpdateConfiguration(() => registerIgnoredSettingsSchema());\n}\n\n// #region User Data Sync Store\n\nexport interface IUserData {\n\tref: string;\n\tcontent: string | null;\n}\n\nexport type IAuthenticationProvider = { id: string, scopes: string[] };\n\nexport interface IUserDataSyncStore {\n\treadonly url: URI;\n\treadonly type: UserDataSyncStoreType;\n\treadonly defaultUrl: URI;\n\treadonly stableUrl: URI;\n\treadonly insidersUrl: URI;\n\treadonly canSwitch: boolean;\n\treadonly authenticationProviders: IAuthenticationProvider[];\n}\n\nexport function isAuthenticationProvider(thing: any): thing is IAuthenticationProvider {\n\treturn thing\n\t\t&& isObject(thing)\n\t\t&& isString(thing.id)\n\t\t&& isArray(thing.scopes);\n}\n\nexport const enum SyncResource {\n\tSettings = 'settings',\n\tKeybindings = 'keybindings',\n\tSnippets = 'snippets',\n\tExtensions = 'extensions',\n\tGlobalState = 'globalState'\n}\nexport const ALL_SYNC_RESOURCES: SyncResource[] = [SyncResource.Settings, SyncResource.Keybindings, SyncResource.Snippets, SyncResource.Extensions, SyncResource.GlobalState];\n\nexport function getLastSyncResourceUri(syncResource: SyncResource, environmentService: IEnvironmentService, extUri: IExtUri): URI {\n\treturn extUri.joinPath(environmentService.userDataSyncHome, syncResource, `lastSync${syncResource}.json`);\n}\n\nexport interface IUserDataManifest {\n\treadonly latest?: Record<ServerResource, string>\n\treadonly session: string;\n\treadonly ref: string;\n}\n\nexport interface IResourceRefHandle {\n\tref: string;\n\tcreated: number;\n}\n\nexport type ServerResource = SyncResource | 'machines';\nexport type UserDataSyncStoreType = 'insiders' | 'stable';\n\nexport const IUserDataSyncStoreManagementService = createDecorator<IUserDataSyncStoreManagementService>('IUserDataSyncStoreManagementService');\nexport interface IUserDataSyncStoreManagementService {\n\treadonly _serviceBrand: undefined;\n\treadonly onDidChangeUserDataSyncStore: Event<void>;\n\treadonly userDataSyncStore: IUserDataSyncStore | undefined;\n\tswitch(type: UserDataSyncStoreType): Promise<void>;\n\tgetPreviousUserDataSyncStore(): Promise<IUserDataSyncStore | undefined>;\n}\n\nexport interface IUserDataSyncStoreClient {\n\treadonly onDidChangeDonotMakeRequestsUntil: Event<void>;\n\treadonly donotMakeRequestsUntil: Date | undefined;\n\n\treadonly onTokenFailed: Event<void>;\n\treadonly onTokenSucceed: Event<void>;\n\tsetAuthToken(token: string, type: string): void;\n\n\t// Sync requests\n\tmanifest(oldValue: IUserDataManifest | null, headers?: IHeaders): Promise<IUserDataManifest | null>;\n\tread(resource: ServerResource, oldValue: IUserData | null, headers?: IHeaders): Promise<IUserData>;\n\twrite(resource: ServerResource, content: string, ref: string | null, headers?: IHeaders): Promise<string>;\n\tclear(): Promise<void>;\n\tdelete(resource: ServerResource): Promise<void>;\n\n\tgetAllRefs(resource: ServerResource): Promise<IResourceRefHandle[]>;\n\tresolveContent(resource: ServerResource, ref: string): Promise<string | null>;\n}\n\nexport const IUserDataSyncStoreService = createDecorator<IUserDataSyncStoreService>('IUserDataSyncStoreService');\nexport interface IUserDataSyncStoreService extends IUserDataSyncStoreClient {\n\treadonly _serviceBrand: undefined;\n}\n\nexport const IUserDataSyncBackupStoreService = createDecorator<IUserDataSyncBackupStoreService>('IUserDataSyncBackupStoreService');\nexport interface IUserDataSyncBackupStoreService {\n\treadonly _serviceBrand: undefined;\n\tbackup(resource: SyncResource, content: string): Promise<void>;\n\tgetAllRefs(resource: SyncResource): Promise<IResourceRefHandle[]>;\n\tresolveContent(resource: SyncResource, ref?: string): Promise<string | null>;\n}\n\n//#endregion\n\n// #region User Data Sync Headers\n\nexport const HEADER_OPERATION_ID = 'x-operation-id';\nexport const HEADER_EXECUTION_ID = 'X-Execution-Id';\n\nexport function createSyncHeaders(executionId: string): IHeaders {\n\tconst headers: IHeaders = {};\n\theaders[HEADER_EXECUTION_ID] = executionId;\n\treturn headers;\n}\n\n//#endregion\n\n// #region User Data Sync Error\n\nexport const enum UserDataSyncErrorCode {\n\t// Client Errors (>= 400 )\n\tUnauthorized = 'Unauthorized', /* 401 */\n\tConflict = 'Conflict', /* 409 */\n\tGone = 'Gone', /* 410 */\n\tPreconditionFailed = 'PreconditionFailed', /* 412 */\n\tTooLarge = 'TooLarge', /* 413 */\n\tUpgradeRequired = 'UpgradeRequired', /* 426 */\n\tPreconditionRequired = 'PreconditionRequired', /* 428 */\n\tTooManyRequests = 'RemoteTooManyRequests', /* 429 */\n\tTooManyRequestsAndRetryAfter = 'TooManyRequestsAndRetryAfter', /* 429 + Retry-After */\n\n\t// Local Errors\n\tRequestFailed = 'RequestFailed',\n\tRequestCanceled = 'RequestCanceled',\n\tRequestTimeout = 'RequestTimeout',\n\tRequestProtocolNotSupported = 'RequestProtocolNotSupported',\n\tRequestPathNotEscaped = 'RequestPathNotEscaped',\n\tRequestHeadersNotObject = 'RequestHeadersNotObject',\n\tNoRef = 'NoRef',\n\tEmptyResponse = 'EmptyResponse',\n\tTurnedOff = 'TurnedOff',\n\tSessionExpired = 'SessionExpired',\n\tServiceChanged = 'ServiceChanged',\n\tDefaultServiceChanged = 'DefaultServiceChanged',\n\tLocalTooManyRequests = 'LocalTooManyRequests',\n\tLocalPreconditionFailed = 'LocalPreconditionFailed',\n\tLocalInvalidContent = 'LocalInvalidContent',\n\tLocalError = 'LocalError',\n\tIncompatibleLocalContent = 'IncompatibleLocalContent',\n\tIncompatibleRemoteContent = 'IncompatibleRemoteContent',\n\tUnresolvedConflicts = 'UnresolvedConflicts',\n\n\tUnknown = 'Unknown',\n}\n\nexport class UserDataSyncError extends Error {\n\n\tconstructor(\n\t\tmessage: string,\n\t\treadonly code: UserDataSyncErrorCode,\n\t\treadonly resource?: SyncResource,\n\t\treadonly operationId?: string\n\t) {\n\t\tsuper(message);\n\t\tthis.name = `${this.code} (UserDataSyncError) syncResource:${this.resource || 'unknown'} operationId:${this.operationId || 'unknown'}`;\n\t}\n\n}\n\nexport class UserDataSyncStoreError extends UserDataSyncError {\n\tconstructor(message: string, readonly url: string, code: UserDataSyncErrorCode, readonly serverCode: number | undefined, operationId: string | undefined) {\n\t\tsuper(message, code, undefined, operationId);\n\t}\n}\n\nexport class UserDataAutoSyncError extends UserDataSyncError {\n\tconstructor(message: string, code: UserDataSyncErrorCode) {\n\t\tsuper(message, code);\n\t}\n}\n\nexport namespace UserDataSyncError {\n\n\texport function toUserDataSyncError(error: Error): UserDataSyncError {\n\t\tif (error instanceof UserDataSyncError) {\n\t\t\treturn error;\n\t\t}\n\t\tconst match = /^(.+) \\(UserDataSyncError\\) syncResource:(.+) operationId:(.+)$/.exec(error.name);\n\t\tif (match && match[1]) {\n\t\t\tconst syncResource = match[2] === 'unknown' ? undefined : match[2] as SyncResource;\n\t\t\tconst operationId = match[3] === 'unknown' ? undefined : match[3];\n\t\t\treturn new UserDataSyncError(error.message, <UserDataSyncErrorCode>match[1], syncResource, operationId);\n\t\t}\n\t\treturn new UserDataSyncError(error.message, UserDataSyncErrorCode.Unknown);\n\t}\n\n}\n\n//#endregion\n\n// #region User Data Synchroniser\n\nexport interface ISyncExtension {\n\tidentifier: IExtensionIdentifier;\n\tpreRelease?: boolean;\n\tversion?: string;\n\tdisabled?: boolean;\n\tinstalled?: boolean;\n\tstate?: IStringDictionary<any>;\n}\n\nexport interface ISyncExtensionWithVersion extends ISyncExtension {\n\tversion: string;\n}\n\nexport interface IStorageValue {\n\tversion: number;\n\tvalue: string;\n}\n\nexport interface IGlobalState {\n\tstorage: IStringDictionary<IStorageValue>;\n}\n\nexport const enum SyncStatus {\n\tUninitialized = 'uninitialized',\n\tIdle = 'idle',\n\tSyncing = 'syncing',\n\tHasConflicts = 'hasConflicts',\n}\n\nexport interface ISyncResourceHandle {\n\tcreated: number;\n\turi: URI;\n}\n\nexport interface IRemoteUserData {\n\tref: string;\n\tsyncData: ISyncData | null;\n}\n\nexport interface ISyncData {\n\tversion: number;\n\tmachineId?: string;\n\tcontent: string;\n}\n\nexport const enum Change {\n\tNone,\n\tAdded,\n\tModified,\n\tDeleted,\n}\n\nexport const enum MergeState {\n\tPreview = 'preview',\n\tConflict = 'conflict',\n\tAccepted = 'accepted',\n}\n\nexport interface IResourcePreview {\n\treadonly remoteResource: URI;\n\treadonly localResource: URI;\n\treadonly previewResource: URI;\n\treadonly acceptedResource: URI;\n\treadonly localChange: Change;\n\treadonly remoteChange: Change;\n\treadonly mergeState: MergeState;\n}\n\nexport interface ISyncResourcePreview {\n\treadonly isLastSyncFromCurrentMachine: boolean;\n\treadonly resourcePreviews: IResourcePreview[];\n}\n\nexport interface IUserDataInitializer {\n\tinitialize(userData: IUserData): Promise<void>;\n}\n\nexport interface IUserDataSynchroniser {\n\n\treadonly resource: SyncResource;\n\treadonly status: SyncStatus;\n\treadonly onDidChangeStatus: Event<SyncStatus>;\n\n\treadonly conflicts: IResourcePreview[];\n\treadonly onDidChangeConflicts: Event<IResourcePreview[]>;\n\n\treadonly onDidChangeLocal: Event<void>;\n\n\tsync(manifest: IUserDataManifest | null, headers: IHeaders): Promise<void>;\n\treplace(uri: URI): Promise<boolean>;\n\tstop(): Promise<void>;\n\n\tpreview(manifest: IUserDataManifest | null, userDataSyncConfiguration: IUserDataSyncConfiguration, headers: IHeaders): Promise<ISyncResourcePreview | null>;\n\taccept(resource: URI, content?: string | null): Promise<ISyncResourcePreview | null>;\n\tmerge(resource: URI): Promise<ISyncResourcePreview | null>;\n\tdiscard(resource: URI): Promise<ISyncResourcePreview | null>;\n\tapply(force: boolean, headers: IHeaders): Promise<ISyncResourcePreview | null>;\n\n\thasPreviouslySynced(): Promise<boolean>;\n\thasLocalData(): Promise<boolean>;\n\tresetLocal(): Promise<void>;\n\n\tresolveContent(resource: URI): Promise<string | null>;\n\tgetRemoteSyncResourceHandles(): Promise<ISyncResourceHandle[]>;\n\tgetLocalSyncResourceHandles(): Promise<ISyncResourceHandle[]>;\n\tgetAssociatedResources(syncResourceHandle: ISyncResourceHandle): Promise<{ resource: URI, comparableResource: URI }[]>;\n\tgetMachineId(syncResourceHandle: ISyncResourceHandle): Promise<string | undefined>;\n}\n\n//#endregion\n\n// #region keys synced only in web\n\nexport const SYNC_SERVICE_URL_TYPE = 'sync.store.url.type';\nexport function getEnablementKey(resource: SyncResource) { return `sync.enable.${resource}`; }\n\n// #endregion\n\n// #region User Data Sync Services\n\nexport const IUserDataSyncResourceEnablementService = createDecorator<IUserDataSyncResourceEnablementService>('IUserDataSyncResourceEnablementService');\nexport interface IUserDataSyncResourceEnablementService {\n\t_serviceBrand: any;\n\n\treadonly onDidChangeResourceEnablement: Event<[SyncResource, boolean]>;\n\tisResourceEnabled(resource: SyncResource): boolean;\n\tsetResourceEnablement(resource: SyncResource, enabled: boolean): void;\n\n\tgetResourceSyncStateVersion(resource: SyncResource): string | undefined;\n}\n\nexport interface ISyncTask {\n\treadonly manifest: IUserDataManifest | null;\n\trun(): Promise<void>;\n\tstop(): Promise<void>;\n}\n\nexport interface IManualSyncTask extends IDisposable {\n\treadonly id: string;\n\treadonly status: SyncStatus;\n\treadonly manifest: IUserDataManifest | null;\n\treadonly onSynchronizeResources: Event<[SyncResource, URI[]][]>;\n\tpreview(): Promise<[SyncResource, ISyncResourcePreview][]>;\n\taccept(resource: URI, content?: string | null): Promise<[SyncResource, ISyncResourcePreview][]>;\n\tmerge(resource?: URI): Promise<[SyncResource, ISyncResourcePreview][]>;\n\tdiscard(resource: URI): Promise<[SyncResource, ISyncResourcePreview][]>;\n\tdiscardConflicts(): Promise<[SyncResource, ISyncResourcePreview][]>;\n\tapply(): Promise<[SyncResource, ISyncResourcePreview][]>;\n\tpull(): Promise<void>;\n\tpush(): Promise<void>;\n\tstop(): Promise<void>;\n}\n\nexport const IUserDataSyncService = createDecorator<IUserDataSyncService>('IUserDataSyncService');\nexport interface IUserDataSyncService {\n\t_serviceBrand: any;\n\n\treadonly status: SyncStatus;\n\treadonly onDidChangeStatus: Event<SyncStatus>;\n\n\treadonly conflicts: [SyncResource, IResourcePreview[]][];\n\treadonly onDidChangeConflicts: Event<[SyncResource, IResourcePreview[]][]>;\n\n\treadonly onDidChangeLocal: Event<SyncResource>;\n\treadonly onSyncErrors: Event<[SyncResource, UserDataSyncError][]>;\n\n\treadonly lastSyncTime: number | undefined;\n\treadonly onDidChangeLastSyncTime: Event<number>;\n\n\treadonly onDidResetRemote: Event<void>;\n\treadonly onDidResetLocal: Event<void>;\n\n\tcreateSyncTask(manifest: IUserDataManifest | null, disableCache?: boolean): Promise<ISyncTask>;\n\tcreateManualSyncTask(): Promise<IManualSyncTask>;\n\n\treplace(uri: URI): Promise<void>;\n\treset(): Promise<void>;\n\tresetRemote(): Promise<void>;\n\tresetLocal(): Promise<void>;\n\n\thasLocalData(): Promise<boolean>;\n\thasPreviouslySynced(): Promise<boolean>;\n\tresolveContent(resource: URI): Promise<string | null>;\n\taccept(resource: SyncResource, conflictResource: URI, content: string | null | undefined, apply: boolean): Promise<void>;\n\n\tgetLocalSyncResourceHandles(resource: SyncResource): Promise<ISyncResourceHandle[]>;\n\tgetRemoteSyncResourceHandles(resource: SyncResource): Promise<ISyncResourceHandle[]>;\n\tgetAssociatedResources(resource: SyncResource, syncResourceHandle: ISyncResourceHandle): Promise<{ resource: URI, comparableResource: URI }[]>;\n\tgetMachineId(resource: SyncResource, syncResourceHandle: ISyncResourceHandle): Promise<string | undefined>;\n}\n\nexport const IUserDataAutoSyncEnablementService = createDecorator<IUserDataAutoSyncEnablementService>('IUserDataAutoSyncEnablementService');\nexport interface IUserDataAutoSyncEnablementService {\n\t_serviceBrand: any;\n\treadonly onDidChangeEnablement: Event<boolean>;\n\tisEnabled(): boolean;\n\tcanToggleEnablement(): boolean;\n}\n\nexport const IUserDataAutoSyncService = createDecorator<IUserDataAutoSyncService>('IUserDataAutoSyncService');\nexport interface IUserDataAutoSyncService {\n\t_serviceBrand: any;\n\treadonly onError: Event<UserDataSyncError>;\n\tturnOn(): Promise<void>;\n\tturnOff(everywhere: boolean): Promise<void>;\n\ttriggerSync(sources: string[], hasToLimitSync: boolean, disableCache: boolean): Promise<void>;\n}\n\nexport const IUserDataSyncUtilService = createDecorator<IUserDataSyncUtilService>('IUserDataSyncUtilService');\nexport interface IUserDataSyncUtilService {\n\treadonly _serviceBrand: undefined;\n\tresolveUserBindings(userbindings: string[]): Promise<IStringDictionary<string>>;\n\tresolveFormattingOptions(resource: URI): Promise<FormattingOptions>;\n\tresolveDefaultIgnoredSettings(): Promise<string[]>;\n}\n\nexport const IUserDataSyncLogService = createDecorator<IUserDataSyncLogService>('IUserDataSyncLogService');\nexport interface IUserDataSyncLogService extends ILogService { }\n\nexport interface IConflictSetting {\n\tkey: string;\n\tlocalValue: any | undefined;\n\tremoteValue: any | undefined;\n}\n\n//#endregion\n\nexport const USER_DATA_SYNC_SCHEME = 'vscode-userdata-sync';\nexport const PREVIEW_DIR_NAME = 'preview';\nexport function getSyncResourceFromLocalPreview(localPreview: URI, environmentService: IEnvironmentService): SyncResource | undefined {\n\tif (localPreview.scheme === USER_DATA_SYNC_SCHEME) {\n\t\treturn undefined;\n\t}\n\tlocalPreview = localPreview.with({ scheme: environmentService.userDataSyncHome.scheme });\n\treturn ALL_SYNC_RESOURCES.filter(syncResource => isEqualOrParent(localPreview, joinPath(environmentService.userDataSyncHome, syncResource, PREVIEW_DIR_NAME)))[0];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { equals } from 'vs/base/common/arrays';\nimport { CancelablePromise, createCancelablePromise, RunOnceScheduler } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { parse, ParseError } from 'vs/base/common/json';\nimport { FormattingOptions } from 'vs/base/common/jsonFormatter';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IExtUri } from 'vs/base/common/resources';\nimport { uppercaseFirstLetter } from 'vs/base/common/strings';\nimport { isString } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { IHeaders } from 'vs/base/parts/request/common/request';\nimport { localize } from 'vs/nls';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { FileChangesEvent, FileOperationError, FileOperationResult, IFileContent, IFileService } from 'vs/platform/files/common/files';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { getServiceMachineId } from 'vs/platform/serviceMachineId/common/serviceMachineId';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { Change, getLastSyncResourceUri, IRemoteUserData, IResourcePreview as IBaseResourcePreview, ISyncData, ISyncResourceHandle, ISyncResourcePreview as IBaseSyncResourcePreview, IUserData, IUserDataInitializer, IUserDataManifest, IUserDataSyncBackupStoreService, IUserDataSyncConfiguration, IUserDataSynchroniser, IUserDataSyncLogService, IUserDataSyncResourceEnablementService, IUserDataSyncStoreService, IUserDataSyncUtilService, MergeState, PREVIEW_DIR_NAME, SyncResource, SyncStatus, UserDataSyncError, UserDataSyncErrorCode, USER_DATA_SYNC_CONFIGURATION_SCOPE, USER_DATA_SYNC_SCHEME } from 'vs/platform/userDataSync/common/userDataSync';\n\ntype SyncSourceClassification = {\n\tsource?: { classification: 'SystemMetaData', purpose: 'FeatureInsight', isMeasurement: true };\n};\n\nexport function isSyncData(thing: any): thing is ISyncData {\n\tif (thing\n\t\t&& (thing.version !== undefined && typeof thing.version === 'number')\n\t\t&& (thing.content !== undefined && typeof thing.content === 'string')) {\n\n\t\t// backward compatibility\n\t\tif (Object.keys(thing).length === 2) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (Object.keys(thing).length === 3\n\t\t\t&& (thing.machineId !== undefined && typeof thing.machineId === 'string')) {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\treturn false;\n}\n\nexport interface IResourcePreview {\n\n\treadonly remoteResource: URI;\n\treadonly remoteContent: string | null;\n\treadonly remoteChange: Change;\n\n\treadonly localResource: URI;\n\treadonly localContent: string | null;\n\treadonly localChange: Change;\n\n\treadonly previewResource: URI;\n\treadonly acceptedResource: URI;\n}\n\nexport interface IAcceptResult {\n\treadonly content: string | null;\n\treadonly localChange: Change;\n\treadonly remoteChange: Change;\n}\n\nexport interface IMergeResult extends IAcceptResult {\n\treadonly hasConflicts: boolean;\n}\n\ninterface IEditableResourcePreview extends IBaseResourcePreview, IResourcePreview {\n\tlocalChange: Change;\n\tremoteChange: Change;\n\tmergeState: MergeState;\n\tacceptResult?: IAcceptResult;\n}\n\ninterface ISyncResourcePreview extends IBaseSyncResourcePreview {\n\treadonly remoteUserData: IRemoteUserData;\n\treadonly lastSyncUserData: IRemoteUserData | null;\n\treadonly resourcePreviews: IEditableResourcePreview[];\n}\n\nexport abstract class AbstractSynchroniser extends Disposable implements IUserDataSynchroniser {\n\n\tprivate syncPreviewPromise: CancelablePromise<ISyncResourcePreview> | null = null;\n\n\tprotected readonly syncFolder: URI;\n\tprotected readonly syncPreviewFolder: URI;\n\tprotected readonly extUri: IExtUri;\n\tprivate readonly currentMachineIdPromise: Promise<string>;\n\n\tprivate _status: SyncStatus = SyncStatus.Idle;\n\tget status(): SyncStatus { return this._status; }\n\tprivate _onDidChangStatus: Emitter<SyncStatus> = this._register(new Emitter<SyncStatus>());\n\treadonly onDidChangeStatus: Event<SyncStatus> = this._onDidChangStatus.event;\n\n\tprivate _conflicts: IBaseResourcePreview[] = [];\n\tget conflicts(): IBaseResourcePreview[] { return this._conflicts; }\n\tprivate _onDidChangeConflicts: Emitter<IBaseResourcePreview[]> = this._register(new Emitter<IBaseResourcePreview[]>());\n\treadonly onDidChangeConflicts: Event<IBaseResourcePreview[]> = this._onDidChangeConflicts.event;\n\n\tprivate readonly localChangeTriggerScheduler = new RunOnceScheduler(() => this.doTriggerLocalChange(), 50);\n\tprivate readonly _onDidChangeLocal: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidChangeLocal: Event<void> = this._onDidChangeLocal.event;\n\n\tprotected readonly lastSyncResource: URI;\n\tprivate hasSyncResourceStateVersionChanged: boolean = false;\n\tprotected readonly syncResourceLogLabel: string;\n\n\tprivate syncHeaders: IHeaders = {};\n\n\tconstructor(\n\t\treadonly resource: SyncResource,\n\t\t@IFileService protected readonly fileService: IFileService,\n\t\t@IEnvironmentService protected readonly environmentService: IEnvironmentService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IUserDataSyncStoreService protected readonly userDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncBackupStoreService protected readonly userDataSyncBackupStoreService: IUserDataSyncBackupStoreService,\n\t\t@IUserDataSyncResourceEnablementService protected readonly userDataSyncResourceEnablementService: IUserDataSyncResourceEnablementService,\n\t\t@ITelemetryService protected readonly telemetryService: ITelemetryService,\n\t\t@IUserDataSyncLogService protected readonly logService: IUserDataSyncLogService,\n\t\t@IConfigurationService protected readonly configurationService: IConfigurationService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper();\n\t\tthis.syncResourceLogLabel = uppercaseFirstLetter(this.resource);\n\t\tthis.extUri = uriIdentityService.extUri;\n\t\tthis.syncFolder = this.extUri.joinPath(environmentService.userDataSyncHome, resource);\n\t\tthis.syncPreviewFolder = this.extUri.joinPath(this.syncFolder, PREVIEW_DIR_NAME);\n\t\tthis.lastSyncResource = getLastSyncResourceUri(resource, environmentService, this.extUri);\n\t\tthis.currentMachineIdPromise = getServiceMachineId(environmentService, fileService, storageService);\n\t}\n\n\tprotected isEnabled(): boolean { return this.userDataSyncResourceEnablementService.isResourceEnabled(this.resource); }\n\n\tprotected async triggerLocalChange(): Promise<void> {\n\t\tif (this.isEnabled()) {\n\t\t\tthis.localChangeTriggerScheduler.schedule();\n\t\t}\n\t}\n\n\tprotected async doTriggerLocalChange(): Promise<void> {\n\n\t\t// Sync again if current status is in conflicts\n\t\tif (this.status === SyncStatus.HasConflicts) {\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: In conflicts state and local change detected. Syncing again...`);\n\t\t\tconst preview = await this.syncPreviewPromise!;\n\t\t\tthis.syncPreviewPromise = null;\n\t\t\tconst status = await this.performSync(preview.remoteUserData, preview.lastSyncUserData, true, this.getUserDataSyncConfiguration());\n\t\t\tthis.setStatus(status);\n\t\t}\n\n\t\t// Check if local change causes remote change\n\t\telse {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Checking for local changes...`);\n\t\t\tconst lastSyncUserData = await this.getLastSyncUserData();\n\t\t\tconst hasRemoteChanged = lastSyncUserData ? (await this.doGenerateSyncResourcePreview(lastSyncUserData, lastSyncUserData, true, this.getUserDataSyncConfiguration(), CancellationToken.None)).resourcePreviews.some(({ remoteChange }) => remoteChange !== Change.None) : true;\n\t\t\tif (hasRemoteChanged) {\n\t\t\t\tthis._onDidChangeLocal.fire();\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected setStatus(status: SyncStatus): void {\n\t\tif (this._status !== status) {\n\t\t\tconst oldStatus = this._status;\n\t\t\tif (status === SyncStatus.HasConflicts) {\n\t\t\t\t// Log to telemetry when there is a sync conflict\n\t\t\t\tthis.telemetryService.publicLog2<{ source: string }, SyncSourceClassification>('sync/conflictsDetected', { source: this.resource });\n\t\t\t}\n\t\t\tif (oldStatus === SyncStatus.HasConflicts && status === SyncStatus.Idle) {\n\t\t\t\t// Log to telemetry when conflicts are resolved\n\t\t\t\tthis.telemetryService.publicLog2<{ source: string }, SyncSourceClassification>('sync/conflictsResolved', { source: this.resource });\n\t\t\t}\n\t\t\tthis._status = status;\n\t\t\tthis._onDidChangStatus.fire(status);\n\t\t}\n\t}\n\n\tasync sync(manifest: IUserDataManifest | null, headers: IHeaders = {}): Promise<void> {\n\t\tawait this._sync(manifest, true, this.getUserDataSyncConfiguration(), headers);\n\t}\n\n\tasync preview(manifest: IUserDataManifest | null, userDataSyncConfiguration: IUserDataSyncConfiguration, headers: IHeaders = {}): Promise<ISyncResourcePreview | null> {\n\t\treturn this._sync(manifest, false, userDataSyncConfiguration, headers);\n\t}\n\n\tasync apply(force: boolean, headers: IHeaders = {}): Promise<ISyncResourcePreview | null> {\n\t\ttry {\n\t\t\tthis.syncHeaders = { ...headers };\n\n\t\t\tconst status = await this.doApply(force);\n\t\t\tthis.setStatus(status);\n\n\t\t\treturn this.syncPreviewPromise;\n\t\t} finally {\n\t\t\tthis.syncHeaders = {};\n\t\t}\n\t}\n\n\tprivate async _sync(manifest: IUserDataManifest | null, apply: boolean, userDataSyncConfiguration: IUserDataSyncConfiguration, headers: IHeaders): Promise<ISyncResourcePreview | null> {\n\t\ttry {\n\t\t\tthis.syncHeaders = { ...headers };\n\n\t\t\tif (!this.isEnabled()) {\n\t\t\t\tif (this.status !== SyncStatus.Idle) {\n\t\t\t\t\tawait this.stop();\n\t\t\t\t}\n\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Skipped synchronizing ${this.resource.toLowerCase()} as it is disabled.`);\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tif (this.status === SyncStatus.HasConflicts) {\n\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Skipped synchronizing ${this.resource.toLowerCase()} as there are conflicts.`);\n\t\t\t\treturn this.syncPreviewPromise;\n\t\t\t}\n\n\t\t\tif (this.status === SyncStatus.Syncing) {\n\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Skipped synchronizing ${this.resource.toLowerCase()} as it is running already.`);\n\t\t\t\treturn this.syncPreviewPromise;\n\t\t\t}\n\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Started synchronizing ${this.resource.toLowerCase()}...`);\n\t\t\tthis.setStatus(SyncStatus.Syncing);\n\n\t\t\tlet status: SyncStatus = SyncStatus.Idle;\n\t\t\ttry {\n\t\t\t\tconst lastSyncUserData = await this.getLastSyncUserData();\n\t\t\t\tconst remoteUserData = await this.getLatestRemoteUserData(manifest, lastSyncUserData);\n\t\t\t\tstatus = await this.performSync(remoteUserData, lastSyncUserData, apply, userDataSyncConfiguration);\n\t\t\t\tif (status === SyncStatus.HasConflicts) {\n\t\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Detected conflicts while synchronizing ${this.resource.toLowerCase()}.`);\n\t\t\t\t} else if (status === SyncStatus.Idle) {\n\t\t\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Finished synchronizing ${this.resource.toLowerCase()}.`);\n\t\t\t\t}\n\t\t\t\treturn this.syncPreviewPromise || null;\n\t\t\t} finally {\n\t\t\t\tthis.setStatus(status);\n\t\t\t}\n\t\t} finally {\n\t\t\tthis.syncHeaders = {};\n\t\t}\n\t}\n\n\tasync replace(uri: URI): Promise<boolean> {\n\t\tconst content = await this.resolveContent(uri);\n\t\tif (!content) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst syncData = this.parseSyncData(content);\n\t\tif (!syncData) {\n\t\t\treturn false;\n\t\t}\n\n\t\tawait this.stop();\n\n\t\ttry {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Started resetting ${this.resource.toLowerCase()}...`);\n\t\t\tthis.setStatus(SyncStatus.Syncing);\n\t\t\tconst lastSyncUserData = await this.getLastSyncUserData();\n\t\t\tconst remoteUserData = await this.getLatestRemoteUserData(null, lastSyncUserData);\n\t\t\tconst isRemoteDataFromCurrentMachine = await this.isRemoteDataFromCurrentMachine(remoteUserData);\n\n\t\t\t/* use replace sync data */\n\t\t\tconst resourcePreviewResults = await this.generateSyncPreview({ ref: remoteUserData.ref, syncData }, lastSyncUserData, isRemoteDataFromCurrentMachine, this.getUserDataSyncConfiguration(), CancellationToken.None);\n\n\t\t\tconst resourcePreviews: [IResourcePreview, IAcceptResult][] = [];\n\t\t\tfor (const resourcePreviewResult of resourcePreviewResults) {\n\t\t\t\t/* Accept remote resource */\n\t\t\t\tconst acceptResult: IAcceptResult = await this.getAcceptResult(resourcePreviewResult, resourcePreviewResult.remoteResource, undefined, CancellationToken.None);\n\t\t\t\t/* compute remote change */\n\t\t\t\tconst { remoteChange } = await this.getAcceptResult(resourcePreviewResult, resourcePreviewResult.previewResource, resourcePreviewResult.remoteContent, CancellationToken.None);\n\t\t\t\tresourcePreviews.push([resourcePreviewResult, { ...acceptResult, remoteChange: remoteChange !== Change.None ? remoteChange : Change.Modified }]);\n\t\t\t}\n\n\t\t\tawait this.applyResult(remoteUserData, lastSyncUserData, resourcePreviews, false);\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Finished resetting ${this.resource.toLowerCase()}.`);\n\t\t} finally {\n\t\t\tthis.setStatus(SyncStatus.Idle);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate async isRemoteDataFromCurrentMachine(remoteUserData: IRemoteUserData): Promise<boolean> {\n\t\tconst machineId = await this.currentMachineIdPromise;\n\t\treturn !!remoteUserData.syncData?.machineId && remoteUserData.syncData.machineId === machineId;\n\t}\n\n\tprotected async getLatestRemoteUserData(manifest: IUserDataManifest | null, lastSyncUserData: IRemoteUserData | null): Promise<IRemoteUserData> {\n\t\tif (lastSyncUserData) {\n\n\t\t\tconst latestRef = manifest && manifest.latest ? manifest.latest[this.resource] : undefined;\n\n\t\t\t// Last time synced resource and latest resource on server are same\n\t\t\tif (lastSyncUserData.ref === latestRef) {\n\t\t\t\treturn lastSyncUserData;\n\t\t\t}\n\n\t\t\t// There is no resource on server and last time it was synced with no resource\n\t\t\tif (latestRef === undefined && lastSyncUserData.syncData === null) {\n\t\t\t\treturn lastSyncUserData;\n\t\t\t}\n\t\t}\n\t\treturn this.getRemoteUserData(lastSyncUserData);\n\t}\n\n\tprivate async performSync(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, apply: boolean, userDataSyncConfiguration: IUserDataSyncConfiguration): Promise<SyncStatus> {\n\t\tif (remoteUserData.syncData && remoteUserData.syncData.version > this.version) {\n\t\t\t// current version is not compatible with cloud version\n\t\t\tthis.telemetryService.publicLog2<{ source: string }, SyncSourceClassification>('sync/incompatible', { source: this.resource });\n\t\t\tthrow new UserDataSyncError(localize({ key: 'incompatible', comment: ['This is an error while syncing a resource that its local version is not compatible with its remote version.'] }, \"Cannot sync {0} as its local version {1} is not compatible with its remote version {2}\", this.resource, this.version, remoteUserData.syncData.version), UserDataSyncErrorCode.IncompatibleLocalContent, this.resource);\n\t\t}\n\n\t\ttry {\n\t\t\treturn await this.doSync(remoteUserData, lastSyncUserData, apply, userDataSyncConfiguration);\n\t\t} catch (e) {\n\t\t\tif (e instanceof UserDataSyncError) {\n\t\t\t\tswitch (e.code) {\n\n\t\t\t\t\tcase UserDataSyncErrorCode.LocalPreconditionFailed:\n\t\t\t\t\t\t// Rejected as there is a new local version. Syncing again...\n\t\t\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Failed to synchronize ${this.syncResourceLogLabel} as there is a new local version available. Synchronizing again...`);\n\t\t\t\t\t\treturn this.performSync(remoteUserData, lastSyncUserData, apply, userDataSyncConfiguration);\n\n\t\t\t\t\tcase UserDataSyncErrorCode.Conflict:\n\t\t\t\t\tcase UserDataSyncErrorCode.PreconditionFailed:\n\t\t\t\t\t\t// Rejected as there is a new remote version. Syncing again...\n\t\t\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Failed to synchronize as there is a new remote version available. Synchronizing again...`);\n\n\t\t\t\t\t\t// Avoid cache and get latest remote user data - https://github.com/microsoft/vscode/issues/90624\n\t\t\t\t\t\tremoteUserData = await this.getRemoteUserData(null);\n\n\t\t\t\t\t\t// Get the latest last sync user data. Because multiples parallel syncs (in Web) could share same last sync data\n\t\t\t\t\t\t// and one of them successfully updated remote and last sync state.\n\t\t\t\t\t\tlastSyncUserData = await this.getLastSyncUserData();\n\n\t\t\t\t\t\treturn this.performSync(remoteUserData, lastSyncUserData, apply, userDataSyncConfiguration);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\tprotected async doSync(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, apply: boolean, userDataSyncConfiguration: IUserDataSyncConfiguration): Promise<SyncStatus> {\n\t\ttry {\n\t\t\t// generate or use existing preview\n\t\t\tif (!this.syncPreviewPromise) {\n\t\t\t\tthis.syncPreviewPromise = createCancelablePromise(token => this.doGenerateSyncResourcePreview(remoteUserData, lastSyncUserData, apply, userDataSyncConfiguration, token));\n\t\t\t}\n\n\t\t\tconst preview = await this.syncPreviewPromise;\n\t\t\tthis.updateConflicts(preview.resourcePreviews);\n\t\t\tif (preview.resourcePreviews.some(({ mergeState }) => mergeState === MergeState.Conflict)) {\n\t\t\t\treturn SyncStatus.HasConflicts;\n\t\t\t}\n\n\t\t\tif (apply) {\n\t\t\t\treturn await this.doApply(false);\n\t\t\t}\n\n\t\t\treturn SyncStatus.Syncing;\n\n\t\t} catch (error) {\n\n\t\t\t// reset preview on error\n\t\t\tthis.syncPreviewPromise = null;\n\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tasync merge(resource: URI): Promise<ISyncResourcePreview | null> {\n\t\tawait this.updateSyncResourcePreview(resource, async (resourcePreview) => {\n\t\t\tconst mergeResult = await this.getMergeResult(resourcePreview, CancellationToken.None);\n\t\t\tawait this.fileService.writeFile(resourcePreview.previewResource, VSBuffer.fromString(mergeResult?.content || ''));\n\t\t\tconst acceptResult: IAcceptResult | undefined = mergeResult && !mergeResult.hasConflicts\n\t\t\t\t? await this.getAcceptResult(resourcePreview, resourcePreview.previewResource, undefined, CancellationToken.None)\n\t\t\t\t: undefined;\n\t\t\tresourcePreview.acceptResult = acceptResult;\n\t\t\tresourcePreview.mergeState = mergeResult.hasConflicts ? MergeState.Conflict : acceptResult ? MergeState.Accepted : MergeState.Preview;\n\t\t\tresourcePreview.localChange = acceptResult ? acceptResult.localChange : mergeResult.localChange;\n\t\t\tresourcePreview.remoteChange = acceptResult ? acceptResult.remoteChange : mergeResult.remoteChange;\n\t\t\treturn resourcePreview;\n\t\t});\n\t\treturn this.syncPreviewPromise;\n\t}\n\n\tasync accept(resource: URI, content?: string | null): Promise<ISyncResourcePreview | null> {\n\t\tawait this.updateSyncResourcePreview(resource, async (resourcePreview) => {\n\t\t\tconst acceptResult = await this.getAcceptResult(resourcePreview, resource, content, CancellationToken.None);\n\t\t\tresourcePreview.acceptResult = acceptResult;\n\t\t\tresourcePreview.mergeState = MergeState.Accepted;\n\t\t\tresourcePreview.localChange = acceptResult.localChange;\n\t\t\tresourcePreview.remoteChange = acceptResult.remoteChange;\n\t\t\treturn resourcePreview;\n\t\t});\n\t\treturn this.syncPreviewPromise;\n\t}\n\n\tasync discard(resource: URI): Promise<ISyncResourcePreview | null> {\n\t\tawait this.updateSyncResourcePreview(resource, async (resourcePreview) => {\n\t\t\tconst mergeResult = await this.getMergeResult(resourcePreview, CancellationToken.None);\n\t\t\tawait this.fileService.writeFile(resourcePreview.previewResource, VSBuffer.fromString(mergeResult.content || ''));\n\t\t\tresourcePreview.acceptResult = undefined;\n\t\t\tresourcePreview.mergeState = MergeState.Preview;\n\t\t\tresourcePreview.localChange = mergeResult.localChange;\n\t\t\tresourcePreview.remoteChange = mergeResult.remoteChange;\n\t\t\treturn resourcePreview;\n\t\t});\n\t\treturn this.syncPreviewPromise;\n\t}\n\n\tprivate async updateSyncResourcePreview(resource: URI, updateResourcePreview: (resourcePreview: IEditableResourcePreview) => Promise<IEditableResourcePreview>): Promise<void> {\n\t\tif (!this.syncPreviewPromise) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet preview = await this.syncPreviewPromise;\n\t\tconst index = preview.resourcePreviews.findIndex(({ localResource, remoteResource, previewResource }) =>\n\t\t\tthis.extUri.isEqual(localResource, resource) || this.extUri.isEqual(remoteResource, resource) || this.extUri.isEqual(previewResource, resource));\n\t\tif (index === -1) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.syncPreviewPromise = createCancelablePromise(async token => {\n\t\t\tconst resourcePreviews = [...preview.resourcePreviews];\n\t\t\tresourcePreviews[index] = await updateResourcePreview(resourcePreviews[index]);\n\t\t\treturn {\n\t\t\t\t...preview,\n\t\t\t\tresourcePreviews\n\t\t\t};\n\t\t});\n\n\t\tpreview = await this.syncPreviewPromise;\n\t\tthis.updateConflicts(preview.resourcePreviews);\n\t\tif (preview.resourcePreviews.some(({ mergeState }) => mergeState === MergeState.Conflict)) {\n\t\t\tthis.setStatus(SyncStatus.HasConflicts);\n\t\t} else {\n\t\t\tthis.setStatus(SyncStatus.Syncing);\n\t\t}\n\t}\n\n\tprivate async doApply(force: boolean): Promise<SyncStatus> {\n\t\tif (!this.syncPreviewPromise) {\n\t\t\treturn SyncStatus.Idle;\n\t\t}\n\n\t\tconst preview = await this.syncPreviewPromise;\n\n\t\t// check for conflicts\n\t\tif (preview.resourcePreviews.some(({ mergeState }) => mergeState === MergeState.Conflict)) {\n\t\t\treturn SyncStatus.HasConflicts;\n\t\t}\n\n\t\t// check if all are accepted\n\t\tif (preview.resourcePreviews.some(({ mergeState }) => mergeState !== MergeState.Accepted)) {\n\t\t\treturn SyncStatus.Syncing;\n\t\t}\n\n\t\t// apply preview\n\t\tawait this.applyResult(preview.remoteUserData, preview.lastSyncUserData, preview.resourcePreviews.map(resourcePreview => ([resourcePreview, resourcePreview.acceptResult!])), force);\n\n\t\t// reset preview\n\t\tthis.syncPreviewPromise = null;\n\n\t\t// reset preview folder\n\t\tawait this.clearPreviewFolder();\n\n\t\treturn SyncStatus.Idle;\n\t}\n\n\tprivate async clearPreviewFolder(): Promise<void> {\n\t\ttry {\n\t\t\tawait this.fileService.del(this.syncPreviewFolder, { recursive: true });\n\t\t} catch (error) { /* Ignore */ }\n\t}\n\n\tprivate updateConflicts(resourcePreviews: IEditableResourcePreview[]): void {\n\t\tconst conflicts = resourcePreviews.filter(({ mergeState }) => mergeState === MergeState.Conflict);\n\t\tif (!equals(this._conflicts, conflicts, (a, b) => this.extUri.isEqual(a.previewResource, b.previewResource))) {\n\t\t\tthis._conflicts = conflicts;\n\t\t\tthis._onDidChangeConflicts.fire(conflicts);\n\t\t}\n\t}\n\n\tasync hasPreviouslySynced(): Promise<boolean> {\n\t\tconst lastSyncData = await this.getLastSyncUserData();\n\t\treturn !!lastSyncData;\n\t}\n\n\tasync getRemoteSyncResourceHandles(): Promise<ISyncResourceHandle[]> {\n\t\tconst handles = await this.userDataSyncStoreService.getAllRefs(this.resource);\n\t\treturn handles.map(({ created, ref }) => ({ created, uri: this.toRemoteBackupResource(ref) }));\n\t}\n\n\tasync getLocalSyncResourceHandles(): Promise<ISyncResourceHandle[]> {\n\t\tconst handles = await this.userDataSyncBackupStoreService.getAllRefs(this.resource);\n\t\treturn handles.map(({ created, ref }) => ({ created, uri: this.toLocalBackupResource(ref) }));\n\t}\n\n\tprivate toRemoteBackupResource(ref: string): URI {\n\t\treturn URI.from({ scheme: USER_DATA_SYNC_SCHEME, authority: 'remote-backup', path: `/${this.resource}/${ref}` });\n\t}\n\n\tprivate toLocalBackupResource(ref: string): URI {\n\t\treturn URI.from({ scheme: USER_DATA_SYNC_SCHEME, authority: 'local-backup', path: `/${this.resource}/${ref}` });\n\t}\n\n\tasync getMachineId({ uri }: ISyncResourceHandle): Promise<string | undefined> {\n\t\tconst ref = this.extUri.basename(uri);\n\t\tif (this.extUri.isEqual(uri, this.toRemoteBackupResource(ref))) {\n\t\t\tconst { content } = await this.getUserData(ref);\n\t\t\tif (content) {\n\t\t\t\tconst syncData = this.parseSyncData(content);\n\t\t\t\treturn syncData?.machineId;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tasync resolveContent(uri: URI): Promise<string | null> {\n\t\tconst ref = this.extUri.basename(uri);\n\t\tif (this.extUri.isEqual(uri, this.toRemoteBackupResource(ref))) {\n\t\t\tconst { content } = await this.getUserData(ref);\n\t\t\treturn content;\n\t\t}\n\t\tif (this.extUri.isEqual(uri, this.toLocalBackupResource(ref))) {\n\t\t\treturn this.userDataSyncBackupStoreService.resolveContent(this.resource, ref);\n\t\t}\n\t\treturn null;\n\t}\n\n\tprotected async resolvePreviewContent(uri: URI): Promise<string | null> {\n\t\tconst syncPreview = this.syncPreviewPromise ? await this.syncPreviewPromise : null;\n\t\tif (syncPreview) {\n\t\t\tfor (const resourcePreview of syncPreview.resourcePreviews) {\n\t\t\t\tif (this.extUri.isEqual(resourcePreview.acceptedResource, uri)) {\n\t\t\t\t\treturn resourcePreview.acceptResult ? resourcePreview.acceptResult.content : null;\n\t\t\t\t}\n\t\t\t\tif (this.extUri.isEqual(resourcePreview.remoteResource, uri)) {\n\t\t\t\t\treturn resourcePreview.remoteContent;\n\t\t\t\t}\n\t\t\t\tif (this.extUri.isEqual(resourcePreview.localResource, uri)) {\n\t\t\t\t\treturn resourcePreview.localContent;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tasync resetLocal(): Promise<void> {\n\t\ttry {\n\t\t\tawait this.fileService.del(this.lastSyncResource);\n\t\t} catch (e) { /* ignore */ }\n\t}\n\n\tprivate async doGenerateSyncResourcePreview(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, apply: boolean, userDataSyncConfiguration: IUserDataSyncConfiguration, token: CancellationToken): Promise<ISyncResourcePreview> {\n\t\tconst isRemoteDataFromCurrentMachine = await this.isRemoteDataFromCurrentMachine(remoteUserData);\n\t\tconst resourcePreviewResults = await this.generateSyncPreview(remoteUserData, lastSyncUserData, isRemoteDataFromCurrentMachine, userDataSyncConfiguration, token);\n\n\t\tconst resourcePreviews: IEditableResourcePreview[] = [];\n\t\tfor (const resourcePreviewResult of resourcePreviewResults) {\n\t\t\tconst acceptedResource = resourcePreviewResult.previewResource.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'accepted' });\n\n\t\t\t/* No change -> Accept */\n\t\t\tif (resourcePreviewResult.localChange === Change.None && resourcePreviewResult.remoteChange === Change.None) {\n\t\t\t\tresourcePreviews.push({\n\t\t\t\t\t...resourcePreviewResult,\n\t\t\t\t\tacceptedResource,\n\t\t\t\t\tacceptResult: { content: null, localChange: Change.None, remoteChange: Change.None },\n\t\t\t\t\tmergeState: MergeState.Accepted\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t/* Changed -> Apply ? (Merge ? Conflict | Accept) : Preview */\n\t\t\telse {\n\t\t\t\t/* Merge */\n\t\t\t\tconst mergeResult = apply ? await this.getMergeResult(resourcePreviewResult, token) : undefined;\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tawait this.fileService.writeFile(resourcePreviewResult.previewResource, VSBuffer.fromString(mergeResult?.content || ''));\n\n\t\t\t\t/* Conflict | Accept */\n\t\t\t\tconst acceptResult = mergeResult && !mergeResult.hasConflicts\n\t\t\t\t\t/* Accept if merged and there are no conflicts */\n\t\t\t\t\t? await this.getAcceptResult(resourcePreviewResult, resourcePreviewResult.previewResource, undefined, token)\n\t\t\t\t\t: undefined;\n\n\t\t\t\tresourcePreviews.push({\n\t\t\t\t\t...resourcePreviewResult,\n\t\t\t\t\tacceptResult,\n\t\t\t\t\tmergeState: mergeResult?.hasConflicts ? MergeState.Conflict : acceptResult ? MergeState.Accepted : MergeState.Preview,\n\t\t\t\t\tlocalChange: acceptResult ? acceptResult.localChange : mergeResult ? mergeResult.localChange : resourcePreviewResult.localChange,\n\t\t\t\t\tremoteChange: acceptResult ? acceptResult.remoteChange : mergeResult ? mergeResult.remoteChange : resourcePreviewResult.remoteChange\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn { remoteUserData, lastSyncUserData, resourcePreviews, isLastSyncFromCurrentMachine: isRemoteDataFromCurrentMachine };\n\t}\n\n\tasync getLastSyncUserData<T extends IRemoteUserData>(): Promise<T | null> {\n\t\ttry {\n\t\t\tconst content = await this.fileService.readFile(this.lastSyncResource);\n\t\t\tconst parsed = JSON.parse(content.value.toString());\n\t\t\tconst resourceSyncStateVersion = this.userDataSyncResourceEnablementService.getResourceSyncStateVersion(this.resource);\n\t\t\tthis.hasSyncResourceStateVersionChanged = parsed.version && resourceSyncStateVersion && parsed.version !== resourceSyncStateVersion;\n\t\t\tif (this.hasSyncResourceStateVersionChanged) {\n\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Reset last sync state because last sync state version ${parsed.version} is not compatible with current sync state version ${resourceSyncStateVersion}.`);\n\t\t\t\tawait this.resetLocal();\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst userData: IUserData = parsed as IUserData;\n\t\t\tif (userData.content === null) {\n\t\t\t\treturn { ref: parsed.ref, syncData: null } as T;\n\t\t\t}\n\t\t\tconst syncData: ISyncData = JSON.parse(userData.content);\n\n\t\t\t/* Check if syncData is of expected type. Return only if matches */\n\t\t\tif (isSyncData(syncData)) {\n\t\t\t\treturn { ...parsed, ...{ syncData, content: undefined } };\n\t\t\t}\n\n\t\t} catch (error) {\n\t\t\tif (!(error instanceof FileOperationError && error.fileOperationResult === FileOperationResult.FILE_NOT_FOUND)) {\n\t\t\t\t// log error always except when file does not exist\n\t\t\t\tthis.logService.error(error);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprotected async updateLastSyncUserData(lastSyncRemoteUserData: IRemoteUserData, additionalProps: IStringDictionary<any> = {}): Promise<void> {\n\t\tif (additionalProps['ref'] || additionalProps['content'] || additionalProps['version']) {\n\t\t\tthrow new Error('Cannot have core properties as additional');\n\t\t}\n\n\t\tconst version = this.userDataSyncResourceEnablementService.getResourceSyncStateVersion(this.resource);\n\t\tconst lastSyncUserData = { ref: lastSyncRemoteUserData.ref, content: lastSyncRemoteUserData.syncData ? JSON.stringify(lastSyncRemoteUserData.syncData) : null, version, ...additionalProps };\n\t\tawait this.fileService.writeFile(this.lastSyncResource, VSBuffer.fromString(JSON.stringify(lastSyncUserData)));\n\t}\n\n\tasync getRemoteUserData(lastSyncData: IRemoteUserData | null): Promise<IRemoteUserData> {\n\t\tconst { ref, content } = await this.getUserData(lastSyncData);\n\t\tlet syncData: ISyncData | null = null;\n\t\tif (content !== null) {\n\t\t\tsyncData = this.parseSyncData(content);\n\t\t}\n\t\treturn { ref, syncData };\n\t}\n\n\tprotected parseSyncData(content: string): ISyncData {\n\t\ttry {\n\t\t\tconst syncData: ISyncData = JSON.parse(content);\n\t\t\tif (isSyncData(syncData)) {\n\t\t\t\treturn syncData;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t}\n\t\tthrow new UserDataSyncError(localize('incompatible sync data', \"Cannot parse sync data as it is not compatible with the current version.\"), UserDataSyncErrorCode.IncompatibleRemoteContent, this.resource);\n\t}\n\n\tprivate async getUserData(refOrLastSyncData: string | IRemoteUserData | null): Promise<IUserData> {\n\t\tif (isString(refOrLastSyncData)) {\n\t\t\tconst content = await this.userDataSyncStoreService.resolveContent(this.resource, refOrLastSyncData);\n\t\t\treturn { ref: refOrLastSyncData, content };\n\t\t} else {\n\t\t\tconst lastSyncUserData: IUserData | null = refOrLastSyncData ? { ref: refOrLastSyncData.ref, content: refOrLastSyncData.syncData ? JSON.stringify(refOrLastSyncData.syncData) : null } : null;\n\t\t\treturn this.userDataSyncStoreService.read(this.resource, lastSyncUserData, this.syncHeaders);\n\t\t}\n\t}\n\n\tprotected async updateRemoteUserData(content: string, ref: string | null): Promise<IRemoteUserData> {\n\t\tconst machineId = await this.currentMachineIdPromise;\n\t\tconst syncData: ISyncData = { version: this.version, machineId, content };\n\t\tref = await this.userDataSyncStoreService.write(this.resource, JSON.stringify(syncData), ref, this.syncHeaders);\n\t\treturn { ref, syncData };\n\t}\n\n\tprotected async backupLocal(content: string): Promise<void> {\n\t\tconst syncData: ISyncData = { version: this.version, content };\n\t\treturn this.userDataSyncBackupStoreService.backup(this.resource, JSON.stringify(syncData));\n\t}\n\n\tasync stop(): Promise<void> {\n\t\tif (this.status === SyncStatus.Idle) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Stopping synchronizing ${this.resource.toLowerCase()}.`);\n\t\tif (this.syncPreviewPromise) {\n\t\t\tthis.syncPreviewPromise.cancel();\n\t\t\tthis.syncPreviewPromise = null;\n\t\t}\n\n\t\tthis.updateConflicts([]);\n\t\tawait this.clearPreviewFolder();\n\n\t\tthis.setStatus(SyncStatus.Idle);\n\t\tthis.logService.info(`${this.syncResourceLogLabel}: Stopped synchronizing ${this.resource.toLowerCase()}.`);\n\t}\n\n\tprivate getUserDataSyncConfiguration(): IUserDataSyncConfiguration {\n\t\treturn this.configurationService.getValue(USER_DATA_SYNC_CONFIGURATION_SCOPE);\n\t}\n\n\tprotected abstract readonly version: number;\n\tprotected abstract generateSyncPreview(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, isRemoteDataFromCurrentMachine: boolean, userDataSyncConfiguration: IUserDataSyncConfiguration, token: CancellationToken): Promise<IResourcePreview[]>;\n\tprotected abstract getMergeResult(resourcePreview: IResourcePreview, token: CancellationToken): Promise<IMergeResult>;\n\tprotected abstract getAcceptResult(resourcePreview: IResourcePreview, resource: URI, content: string | null | undefined, token: CancellationToken): Promise<IAcceptResult>;\n\tprotected abstract applyResult(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, result: [IResourcePreview, IAcceptResult][], force: boolean): Promise<void>;\n\n\tabstract hasLocalData(): Promise<boolean>;\n\tabstract getAssociatedResources(syncResourceHandle: ISyncResourceHandle): Promise<{ resource: URI, comparableResource: URI }[]>;\n}\n\nexport interface IFileResourcePreview extends IResourcePreview {\n\treadonly fileContent: IFileContent | null;\n}\n\nexport abstract class AbstractFileSynchroniser extends AbstractSynchroniser {\n\n\tconstructor(\n\t\tprotected readonly file: URI,\n\t\tresource: SyncResource,\n\t\t@IFileService fileService: IFileService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IUserDataSyncStoreService userDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncBackupStoreService userDataSyncBackupStoreService: IUserDataSyncBackupStoreService,\n\t\t@IUserDataSyncResourceEnablementService userDataSyncResourceEnablementService: IUserDataSyncResourceEnablementService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(resource, fileService, environmentService, storageService, userDataSyncStoreService, userDataSyncBackupStoreService, userDataSyncResourceEnablementService, telemetryService, logService, configurationService, uriIdentityService);\n\t\tthis._register(this.fileService.watch(this.extUri.dirname(file)));\n\t\tthis._register(this.fileService.onDidFilesChange(e => this.onFileChanges(e)));\n\t}\n\n\tprotected async getLocalFileContent(): Promise<IFileContent | null> {\n\t\ttry {\n\t\t\treturn await this.fileService.readFile(this.file);\n\t\t} catch (error) {\n\t\t\treturn null;\n\t\t}\n\t}\n\n\tprotected async updateLocalFileContent(newContent: string, oldContent: IFileContent | null, force: boolean): Promise<void> {\n\t\ttry {\n\t\t\tif (oldContent) {\n\t\t\t\t// file exists already\n\t\t\t\tawait this.writeFileContent(newContent, oldContent, force);\n\t\t\t} else {\n\t\t\t\t// file does not exist\n\t\t\t\tawait this.fileService.createFile(this.file, VSBuffer.fromString(newContent), { overwrite: force });\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tif ((e instanceof FileOperationError && e.fileOperationResult === FileOperationResult.FILE_NOT_FOUND) ||\n\t\t\t\t(e instanceof FileOperationError && e.fileOperationResult === FileOperationResult.FILE_MODIFIED_SINCE)) {\n\t\t\t\tthrow new UserDataSyncError(e.message, UserDataSyncErrorCode.LocalPreconditionFailed);\n\t\t\t} else {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected async writeFileContent(newContent: string, oldContent: IFileContent, force: boolean): Promise<void> {\n\t\tawait this.fileService.writeFile(this.file, VSBuffer.fromString(newContent), force ? undefined : oldContent);\n\t}\n\n\tprivate onFileChanges(e: FileChangesEvent): void {\n\t\tif (!e.contains(this.file)) {\n\t\t\treturn;\n\t\t}\n\t\tthis.triggerLocalChange();\n\t}\n\n}\n\nexport abstract class AbstractJsonFileSynchroniser extends AbstractFileSynchroniser {\n\n\tconstructor(\n\t\tfile: URI,\n\t\tresource: SyncResource,\n\t\t@IFileService fileService: IFileService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IUserDataSyncStoreService userDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncBackupStoreService userDataSyncBackupStoreService: IUserDataSyncBackupStoreService,\n\t\t@IUserDataSyncResourceEnablementService userDataSyncResourceEnablementService: IUserDataSyncResourceEnablementService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IUserDataSyncUtilService protected readonly userDataSyncUtilService: IUserDataSyncUtilService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(file, resource, fileService, environmentService, storageService, userDataSyncStoreService, userDataSyncBackupStoreService, userDataSyncResourceEnablementService, telemetryService, logService, configurationService, uriIdentityService);\n\t}\n\n\tprotected hasErrors(content: string): boolean {\n\t\tconst parseErrors: ParseError[] = [];\n\t\tparse(content, parseErrors, { allowEmptyContent: true, allowTrailingComma: true });\n\t\treturn parseErrors.length > 0;\n\t}\n\n\tprivate _formattingOptions: Promise<FormattingOptions> | undefined = undefined;\n\tprotected getFormattingOptions(): Promise<FormattingOptions> {\n\t\tif (!this._formattingOptions) {\n\t\t\tthis._formattingOptions = this.userDataSyncUtilService.resolveFormattingOptions(this.file);\n\t\t}\n\t\treturn this._formattingOptions;\n\t}\n\n}\n\nexport abstract class AbstractInitializer implements IUserDataInitializer {\n\n\tprotected readonly extUri: IExtUri;\n\tprivate readonly lastSyncResource: URI;\n\n\tconstructor(\n\t\treadonly resource: SyncResource,\n\t\t@IEnvironmentService protected readonly environmentService: IEnvironmentService,\n\t\t@ILogService protected readonly logService: ILogService,\n\t\t@IFileService protected readonly fileService: IFileService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tthis.extUri = uriIdentityService.extUri;\n\t\tthis.lastSyncResource = getLastSyncResourceUri(this.resource, environmentService, this.extUri);\n\t}\n\n\tasync initialize({ ref, content }: IUserData): Promise<void> {\n\t\tif (!content) {\n\t\t\tthis.logService.info('Remote content does not exist.', this.resource);\n\t\t\treturn;\n\t\t}\n\n\t\tconst syncData = this.parseSyncData(content);\n\t\tif (!syncData) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tawait this.doInitialize({ ref, syncData });\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t}\n\t}\n\n\tprivate parseSyncData(content: string): ISyncData | undefined {\n\t\ttry {\n\t\t\tconst syncData: ISyncData = JSON.parse(content);\n\t\t\tif (isSyncData(syncData)) {\n\t\t\t\treturn syncData;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t}\n\t\tthis.logService.info('Cannot parse sync data as it is not compatible with the current version.', this.resource);\n\t\treturn undefined;\n\t}\n\n\tprotected async updateLastSyncUserData(lastSyncRemoteUserData: IRemoteUserData, additionalProps: IStringDictionary<any> = {}): Promise<void> {\n\t\tconst lastSyncUserData: IUserData = { ref: lastSyncRemoteUserData.ref, content: lastSyncRemoteUserData.syncData ? JSON.stringify(lastSyncRemoteUserData.syncData) : null, ...additionalProps };\n\t\tawait this.fileService.writeFile(this.lastSyncResource, VSBuffer.fromString(JSON.stringify(lastSyncUserData)));\n\t}\n\n\tprotected abstract doInitialize(remoteUserData: IRemoteUserData): Promise<void>;\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Promises } from 'vs/base/common/async';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { getErrorMessage } from 'vs/base/common/errors';\nimport { Event } from 'vs/base/common/event';\nimport { applyEdits } from 'vs/base/common/jsonEdit';\nimport { format } from 'vs/base/common/jsonFormatter';\nimport { compare } from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IExtensionGalleryService, IExtensionManagementService, IGlobalExtensionEnablementService, ILocalExtension, ExtensionManagementError, ExtensionManagementErrorCode } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { areSameExtensions, getExtensionId, getGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { ExtensionType, IExtensionIdentifier } from 'vs/platform/extensions/common/extensions';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { AbstractInitializer, AbstractSynchroniser, IAcceptResult, IMergeResult, IResourcePreview } from 'vs/platform/userDataSync/common/abstractSynchronizer';\nimport { IMergeResult as IExtensionMergeResult, merge } from 'vs/platform/userDataSync/common/extensionsMerge';\nimport { IExtensionsStorageSyncService } from 'vs/platform/userDataSync/common/extensionsStorageSync';\nimport { IIgnoredExtensionsManagementService } from 'vs/platform/userDataSync/common/ignoredExtensions';\nimport { Change, IRemoteUserData, ISyncData, ISyncExtension, ISyncExtensionWithVersion, ISyncResourceHandle, IUserDataSyncBackupStoreService, IUserDataSynchroniser, IUserDataSyncLogService, IUserDataSyncResourceEnablementService, IUserDataSyncStoreService, SyncResource, USER_DATA_SYNC_SCHEME } from 'vs/platform/userDataSync/common/userDataSync';\n\ntype IExtensionResourceMergeResult = IAcceptResult & IExtensionMergeResult;\n\ninterface IExtensionResourcePreview extends IResourcePreview {\n\treadonly localExtensions: ISyncExtensionWithVersion[];\n\treadonly skippedExtensions: ISyncExtension[];\n\treadonly previewResult: IExtensionResourceMergeResult;\n}\n\ninterface ILastSyncUserData extends IRemoteUserData {\n\tskippedExtensions: ISyncExtension[] | undefined;\n}\n\nasync function parseAndMigrateExtensions(syncData: ISyncData, extensionManagementService: IExtensionManagementService): Promise<ISyncExtension[]> {\n\tconst extensions = JSON.parse(syncData.content);\n\tif (syncData.version === 1\n\t\t|| syncData.version === 2\n\t) {\n\t\tconst builtinExtensions = (await extensionManagementService.getInstalled(ExtensionType.System)).filter(e => e.isBuiltin);\n\t\tfor (const extension of extensions) {\n\t\t\t// #region Migration from v1 (enabled -> disabled)\n\t\t\tif (syncData.version === 1) {\n\t\t\t\tif ((<any>extension).enabled === false) {\n\t\t\t\t\textension.disabled = true;\n\t\t\t\t}\n\t\t\t\tdelete (<any>extension).enabled;\n\t\t\t}\n\t\t\t// #endregion\n\n\t\t\t// #region Migration from v2 (set installed property on extension)\n\t\t\tif (syncData.version === 2) {\n\t\t\t\tif (builtinExtensions.every(installed => !areSameExtensions(installed.identifier, extension.identifier))) {\n\t\t\t\t\textension.installed = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// #endregion\n\t\t}\n\t}\n\treturn extensions;\n}\n\nexport function getExtensionStorageState(publisher: string, name: string, storageService: IStorageService): IStringDictionary<any> {\n\tconst extensionStorageValue = storageService.get(getExtensionId(publisher, name) /* use the same id used in extension host */, StorageScope.GLOBAL) || '{}';\n\treturn JSON.parse(extensionStorageValue);\n}\n\nexport function storeExtensionStorageState(publisher: string, name: string, extensionState: IStringDictionary<any>, storageService: IStorageService): void {\n\tstorageService.store(getExtensionId(publisher, name) /* use the same id used in extension host */, JSON.stringify(extensionState), StorageScope.GLOBAL, StorageTarget.MACHINE);\n}\n\nexport class ExtensionsSynchroniser extends AbstractSynchroniser implements IUserDataSynchroniser {\n\n\tprivate static readonly EXTENSIONS_DATA_URI = URI.from({ scheme: USER_DATA_SYNC_SCHEME, authority: 'extensions', path: `/extensions.json` });\n\n\t/*\n\t\tVersion 3 - Introduce installed property to skip installing built in extensions\n\t\tprotected readonly version: number = 3;\n\t*/\n\t/* Version 4: Change settings from `sync.${setting}` to `settingsSync.{setting}` */\n\t/* Version 5: Introduce extension state */\n\tprotected readonly version: number = 5;\n\n\tprotected override isEnabled(): boolean { return super.isEnabled() && this.extensionGalleryService.isEnabled(); }\n\tprivate readonly previewResource: URI = this.extUri.joinPath(this.syncPreviewFolder, 'extensions.json');\n\tprivate readonly localResource: URI = this.previewResource.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'local' });\n\tprivate readonly remoteResource: URI = this.previewResource.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'remote' });\n\tprivate readonly acceptedResource: URI = this.previewResource.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'accepted' });\n\n\tconstructor(\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IUserDataSyncStoreService userDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncBackupStoreService userDataSyncBackupStoreService: IUserDataSyncBackupStoreService,\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IGlobalExtensionEnablementService private readonly extensionEnablementService: IGlobalExtensionEnablementService,\n\t\t@IIgnoredExtensionsManagementService private readonly ignoredExtensionsManagementService: IIgnoredExtensionsManagementService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IExtensionGalleryService private readonly extensionGalleryService: IExtensionGalleryService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IUserDataSyncResourceEnablementService userDataSyncResourceEnablementService: IUserDataSyncResourceEnablementService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IExtensionsStorageSyncService private readonly extensionsStorageSyncService: IExtensionsStorageSyncService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(SyncResource.Extensions, fileService, environmentService, storageService, userDataSyncStoreService, userDataSyncBackupStoreService, userDataSyncResourceEnablementService, telemetryService, logService, configurationService, uriIdentityService);\n\t\tthis._register(\n\t\t\tEvent.debounce(\n\t\t\t\tEvent.any<any>(\n\t\t\t\t\tEvent.filter(this.extensionManagementService.onDidInstallExtensions, (e => e.some(({ local }) => !!local))),\n\t\t\t\t\tEvent.filter(this.extensionManagementService.onDidUninstallExtension, (e => !e.error)),\n\t\t\t\t\tthis.extensionEnablementService.onDidChangeEnablement,\n\t\t\t\t\tthis.extensionsStorageSyncService.onDidChangeExtensionsStorage),\n\t\t\t\t() => undefined, 500)(() => this.triggerLocalChange()));\n\t}\n\n\tprotected async generateSyncPreview(remoteUserData: IRemoteUserData, lastSyncUserData: ILastSyncUserData | null): Promise<IExtensionResourcePreview[]> {\n\t\tconst remoteExtensions: ISyncExtension[] | null = remoteUserData.syncData ? await parseAndMigrateExtensions(remoteUserData.syncData, this.extensionManagementService) : null;\n\t\tconst skippedExtensions: ISyncExtension[] = lastSyncUserData?.skippedExtensions || [];\n\t\tconst lastSyncExtensions: ISyncExtension[] | null = lastSyncUserData?.syncData ? await parseAndMigrateExtensions(lastSyncUserData.syncData, this.extensionManagementService) : null;\n\n\t\tconst installedExtensions = await this.extensionManagementService.getInstalled(undefined, true);\n\t\tconst localExtensions = this.getLocalExtensions(installedExtensions);\n\t\tconst ignoredExtensions = this.ignoredExtensionsManagementService.getIgnoredExtensions(installedExtensions);\n\n\t\tif (remoteExtensions) {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Merging remote extensions with local extensions...`);\n\t\t} else {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Remote extensions does not exist. Synchronizing extensions for the first time.`);\n\t\t}\n\n\t\tconst { local, remote } = merge(localExtensions, remoteExtensions, lastSyncExtensions, skippedExtensions, ignoredExtensions);\n\t\tconst previewResult: IExtensionResourceMergeResult = {\n\t\t\tlocal, remote,\n\t\t\tcontent: this.getPreviewContent(localExtensions, local.added, local.updated, local.removed),\n\t\t\tlocalChange: local.added.length > 0 || local.removed.length > 0 || local.updated.length > 0 ? Change.Modified : Change.None,\n\t\t\tremoteChange: remote !== null ? Change.Modified : Change.None,\n\t\t};\n\n\t\treturn [{\n\t\t\tskippedExtensions,\n\t\t\tlocalResource: this.localResource,\n\t\t\tlocalContent: this.format(localExtensions),\n\t\t\tlocalExtensions,\n\t\t\tremoteResource: this.remoteResource,\n\t\t\tremoteContent: remoteExtensions ? this.format(remoteExtensions) : null,\n\t\t\tpreviewResource: this.previewResource,\n\t\t\tpreviewResult,\n\t\t\tlocalChange: previewResult.localChange,\n\t\t\tremoteChange: previewResult.remoteChange,\n\t\t\tacceptedResource: this.acceptedResource,\n\t\t}];\n\t}\n\n\tprivate getPreviewContent(localExtensions: ISyncExtension[], added: ISyncExtension[], updated: ISyncExtension[], removed: IExtensionIdentifier[]): string {\n\t\tconst preview: ISyncExtension[] = [...added, ...updated];\n\n\t\tconst idsOrUUIDs: Set<string> = new Set<string>();\n\t\tconst addIdentifier = (identifier: IExtensionIdentifier) => {\n\t\t\tidsOrUUIDs.add(identifier.id.toLowerCase());\n\t\t\tif (identifier.uuid) {\n\t\t\t\tidsOrUUIDs.add(identifier.uuid);\n\t\t\t}\n\t\t};\n\t\tpreview.forEach(({ identifier }) => addIdentifier(identifier));\n\t\tremoved.forEach(addIdentifier);\n\n\t\tfor (const localExtension of localExtensions) {\n\t\t\tif (idsOrUUIDs.has(localExtension.identifier.id.toLowerCase()) || (localExtension.identifier.uuid && idsOrUUIDs.has(localExtension.identifier.uuid))) {\n\t\t\t\t// skip\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tpreview.push(localExtension);\n\t\t}\n\n\t\treturn this.format(preview);\n\t}\n\n\tprotected async getMergeResult(resourcePreview: IExtensionResourcePreview, token: CancellationToken): Promise<IMergeResult> {\n\t\treturn { ...resourcePreview.previewResult, hasConflicts: false };\n\t}\n\n\tprotected async getAcceptResult(resourcePreview: IExtensionResourcePreview, resource: URI, content: string | null | undefined, token: CancellationToken): Promise<IExtensionResourceMergeResult> {\n\n\t\t/* Accept local resource */\n\t\tif (this.extUri.isEqual(resource, this.localResource)) {\n\t\t\treturn this.acceptLocal(resourcePreview);\n\t\t}\n\n\t\t/* Accept remote resource */\n\t\tif (this.extUri.isEqual(resource, this.remoteResource)) {\n\t\t\treturn this.acceptRemote(resourcePreview);\n\t\t}\n\n\t\t/* Accept preview resource */\n\t\tif (this.extUri.isEqual(resource, this.previewResource)) {\n\t\t\treturn resourcePreview.previewResult;\n\t\t}\n\n\t\tthrow new Error(`Invalid Resource: ${resource.toString()}`);\n\t}\n\n\tprivate async acceptLocal(resourcePreview: IExtensionResourcePreview): Promise<IExtensionResourceMergeResult> {\n\t\tconst installedExtensions = await this.extensionManagementService.getInstalled();\n\t\tconst ignoredExtensions = this.ignoredExtensionsManagementService.getIgnoredExtensions(installedExtensions);\n\t\tconst mergeResult = merge(resourcePreview.localExtensions, null, null, resourcePreview.skippedExtensions, ignoredExtensions);\n\t\tconst { local, remote } = mergeResult;\n\t\treturn {\n\t\t\tcontent: resourcePreview.localContent,\n\t\t\tlocal,\n\t\t\tremote,\n\t\t\tlocalChange: local.added.length > 0 || local.removed.length > 0 || local.updated.length > 0 ? Change.Modified : Change.None,\n\t\t\tremoteChange: remote !== null ? Change.Modified : Change.None,\n\t\t};\n\t}\n\n\tprivate async acceptRemote(resourcePreview: IExtensionResourcePreview): Promise<IExtensionResourceMergeResult> {\n\t\tconst installedExtensions = await this.extensionManagementService.getInstalled();\n\t\tconst ignoredExtensions = this.ignoredExtensionsManagementService.getIgnoredExtensions(installedExtensions);\n\t\tconst remoteExtensions = resourcePreview.remoteContent ? JSON.parse(resourcePreview.remoteContent) : null;\n\t\tif (remoteExtensions !== null) {\n\t\t\tconst mergeResult = merge(resourcePreview.localExtensions, remoteExtensions, resourcePreview.localExtensions, [], ignoredExtensions);\n\t\t\tconst { local, remote } = mergeResult;\n\t\t\treturn {\n\t\t\t\tcontent: resourcePreview.remoteContent,\n\t\t\t\tlocal,\n\t\t\t\tremote,\n\t\t\t\tlocalChange: local.added.length > 0 || local.removed.length > 0 || local.updated.length > 0 ? Change.Modified : Change.None,\n\t\t\t\tremoteChange: remote !== null ? Change.Modified : Change.None,\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tcontent: resourcePreview.remoteContent,\n\t\t\t\tlocal: { added: [], removed: [], updated: [] },\n\t\t\t\tremote: null,\n\t\t\t\tlocalChange: Change.None,\n\t\t\t\tremoteChange: Change.None,\n\t\t\t};\n\t\t}\n\t}\n\n\tprotected async applyResult(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, resourcePreviews: [IExtensionResourcePreview, IExtensionResourceMergeResult][], force: boolean): Promise<void> {\n\t\tlet { skippedExtensions, localExtensions } = resourcePreviews[0][0];\n\t\tlet { local, remote, localChange, remoteChange } = resourcePreviews[0][1];\n\n\t\tif (localChange === Change.None && remoteChange === Change.None) {\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: No changes found during synchronizing extensions.`);\n\t\t}\n\n\t\tif (localChange !== Change.None) {\n\t\t\tawait this.backupLocal(JSON.stringify(localExtensions));\n\t\t\tskippedExtensions = await this.updateLocalExtensions(local.added, local.removed, local.updated, skippedExtensions);\n\t\t}\n\n\t\tif (remote) {\n\t\t\t// update remote\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Updating remote extensions...`);\n\t\t\tconst content = JSON.stringify(remote.all);\n\t\t\tremoteUserData = await this.updateRemoteUserData(content, force ? null : remoteUserData.ref);\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Updated remote extensions.${remote.added.length ? ` Added: ${JSON.stringify(remote.added.map(e => e.identifier.id))}.` : ''}${remote.updated.length ? ` Updated: ${JSON.stringify(remote.updated.map(e => e.identifier.id))}.` : ''}${remote.removed.length ? ` Removed: ${JSON.stringify(remote.removed.map(e => e.identifier.id))}.` : ''}`);\n\t\t}\n\n\t\tif (lastSyncUserData?.ref !== remoteUserData.ref) {\n\t\t\t// update last sync\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Updating last synchronized extensions...`);\n\t\t\tawait this.updateLastSyncUserData(remoteUserData, { skippedExtensions });\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Updated last synchronized extensions.${skippedExtensions.length ? ` Skipped: ${JSON.stringify(skippedExtensions.map(e => e.identifier.id))}.` : ''}`);\n\t\t}\n\t}\n\n\tasync getAssociatedResources({ uri }: ISyncResourceHandle): Promise<{ resource: URI, comparableResource: URI }[]> {\n\t\treturn [{ resource: this.extUri.joinPath(uri, 'extensions.json'), comparableResource: ExtensionsSynchroniser.EXTENSIONS_DATA_URI }];\n\t}\n\n\toverride async resolveContent(uri: URI): Promise<string | null> {\n\t\tif (this.extUri.isEqual(uri, ExtensionsSynchroniser.EXTENSIONS_DATA_URI)) {\n\t\t\tconst installedExtensions = await this.extensionManagementService.getInstalled();\n\t\t\tconst ignoredExtensions = this.ignoredExtensionsManagementService.getIgnoredExtensions(installedExtensions);\n\t\t\tconst localExtensions = this.getLocalExtensions(installedExtensions).filter(e => !ignoredExtensions.some(id => areSameExtensions({ id }, e.identifier)));\n\t\t\treturn this.format(localExtensions);\n\t\t}\n\n\t\tif (this.extUri.isEqual(this.remoteResource, uri) || this.extUri.isEqual(this.localResource, uri) || this.extUri.isEqual(this.acceptedResource, uri)) {\n\t\t\treturn this.resolvePreviewContent(uri);\n\t\t}\n\n\t\tlet content = await super.resolveContent(uri);\n\t\tif (content) {\n\t\t\treturn content;\n\t\t}\n\n\t\tcontent = await super.resolveContent(this.extUri.dirname(uri));\n\t\tif (content) {\n\t\t\tconst syncData = this.parseSyncData(content);\n\t\t\tif (syncData) {\n\t\t\t\tswitch (this.extUri.basename(uri)) {\n\t\t\t\t\tcase 'extensions.json':\n\t\t\t\t\t\treturn this.format(this.parseExtensions(syncData));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tprivate format(extensions: ISyncExtension[]): string {\n\t\textensions.sort((e1, e2) => {\n\t\t\tif (!e1.identifier.uuid && e2.identifier.uuid) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif (e1.identifier.uuid && !e2.identifier.uuid) {\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\treturn compare(e1.identifier.id, e2.identifier.id);\n\t\t});\n\t\tconst content = JSON.stringify(extensions);\n\t\tconst edits = format(content, undefined, {});\n\t\treturn applyEdits(content, edits);\n\t}\n\n\tasync hasLocalData(): Promise<boolean> {\n\t\ttry {\n\t\t\tconst installedExtensions = await this.extensionManagementService.getInstalled();\n\t\t\tconst localExtensions = this.getLocalExtensions(installedExtensions);\n\t\t\tif (localExtensions.some(e => e.installed || e.disabled)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t/* ignore error */\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate async updateLocalExtensions(added: ISyncExtension[], removed: IExtensionIdentifier[], updated: ISyncExtension[], skippedExtensions: ISyncExtension[]): Promise<ISyncExtension[]> {\n\t\tconst removeFromSkipped: IExtensionIdentifier[] = [];\n\t\tconst addToSkipped: ISyncExtension[] = [];\n\t\tconst installedExtensions = await this.extensionManagementService.getInstalled();\n\n\t\tif (removed.length) {\n\t\t\tconst extensionsToRemove = installedExtensions.filter(({ identifier, isBuiltin }) => !isBuiltin && removed.some(r => areSameExtensions(identifier, r)));\n\t\t\tawait Promises.settled(extensionsToRemove.map(async extensionToRemove => {\n\t\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Uninstalling local extension...`, extensionToRemove.identifier.id);\n\t\t\t\tawait this.extensionManagementService.uninstall(extensionToRemove, { donotIncludePack: true, donotCheckDependents: true });\n\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Uninstalled local extension.`, extensionToRemove.identifier.id);\n\t\t\t\tremoveFromSkipped.push(extensionToRemove.identifier);\n\t\t\t}));\n\t\t}\n\n\t\tif (added.length || updated.length) {\n\t\t\tawait Promises.settled([...added, ...updated].map(async e => {\n\t\t\t\tconst installedExtension = installedExtensions.find(installed => areSameExtensions(installed.identifier, e.identifier));\n\n\t\t\t\t// Builtin Extension Sync: Enablement & State\n\t\t\t\tif (installedExtension && installedExtension.isBuiltin) {\n\t\t\t\t\tif (e.state && installedExtension.manifest.version === e.version) {\n\t\t\t\t\t\tthis.updateExtensionState(e.state, installedExtension.manifest.publisher, installedExtension.manifest.name, installedExtension.manifest.version);\n\t\t\t\t\t}\n\t\t\t\t\tconst isDisabled = this.extensionEnablementService.getDisabledExtensions().some(disabledExtension => areSameExtensions(disabledExtension, e.identifier));\n\t\t\t\t\tif (isDisabled !== !!e.disabled) {\n\t\t\t\t\t\tif (e.disabled) {\n\t\t\t\t\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Disabling extension...`, e.identifier.id);\n\t\t\t\t\t\t\tawait this.extensionEnablementService.disableExtension(e.identifier);\n\t\t\t\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Disabled extension`, e.identifier.id);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Enabling extension...`, e.identifier.id);\n\t\t\t\t\t\t\tawait this.extensionEnablementService.enableExtension(e.identifier);\n\t\t\t\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Enabled extension`, e.identifier.id);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tremoveFromSkipped.push(e.identifier);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// User Extension Sync: Install/Update, Enablement & State\n\t\t\t\tconst extension = (await this.extensionGalleryService.getExtensions([e.identifier], !!e.preRelease, CancellationToken.None))[0];\n\n\t\t\t\t/* Update extension state only if\n\t\t\t\t *\textension is installed and version is same as synced version or\n\t\t\t\t *\textension is not installed and installable\n\t\t\t\t */\n\t\t\t\tif (e.state &&\n\t\t\t\t\t(installedExtension ? installedExtension.manifest.version === e.version /* Installed and has same version */\n\t\t\t\t\t\t: !!extension /* Installable */)\n\t\t\t\t) {\n\t\t\t\t\tconst publisher = installedExtension ? installedExtension.manifest.publisher : extension!.publisher;\n\t\t\t\t\tconst name = installedExtension ? installedExtension.manifest.name : extension!.name;\n\t\t\t\t\tthis.updateExtensionState(e.state, publisher, name, installedExtension?.manifest.version);\n\t\t\t\t}\n\n\t\t\t\tif (extension) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst isDisabled = this.extensionEnablementService.getDisabledExtensions().some(disabledExtension => areSameExtensions(disabledExtension, e.identifier));\n\t\t\t\t\t\tif (isDisabled !== !!e.disabled) {\n\t\t\t\t\t\t\tif (e.disabled) {\n\t\t\t\t\t\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Disabling extension...`, e.identifier.id, extension.version);\n\t\t\t\t\t\t\t\tawait this.extensionEnablementService.disableExtension(extension.identifier);\n\t\t\t\t\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Disabled extension`, e.identifier.id, extension.version);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Enabling extension...`, e.identifier.id, extension.version);\n\t\t\t\t\t\t\t\tawait this.extensionEnablementService.enableExtension(extension.identifier);\n\t\t\t\t\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Enabled extension`, e.identifier.id, extension.version);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!installedExtension // Install if the extension does not exist\n\t\t\t\t\t\t\t|| installedExtension.preRelease !== e.preRelease // Install if the extension pre-release preference has changed\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tif (await this.extensionManagementService.canInstall(extension)) {\n\t\t\t\t\t\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Installing extension...`, e.identifier.id, extension.version);\n\t\t\t\t\t\t\t\tawait this.extensionManagementService.installFromGallery(extension, { isMachineScoped: false, donotIncludePackAndDependencies: true, installPreReleaseVersion: e.preRelease } /* set isMachineScoped value to prevent install and sync dialog in web */);\n\t\t\t\t\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Installed extension.`, e.identifier.id, extension.version);\n\t\t\t\t\t\t\t\tremoveFromSkipped.push(extension.identifier);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Skipped synchronizing extension because it cannot be installed.`, extension.displayName || extension.identifier.id);\n\t\t\t\t\t\t\t\taddToSkipped.push(e);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\taddToSkipped.push(e);\n\t\t\t\t\t\tif (error instanceof ExtensionManagementError && [ExtensionManagementErrorCode.Incompatible, ExtensionManagementErrorCode.IncompatiblePreRelease, ExtensionManagementErrorCode.IncompatibleTargetPlatform].includes(error.code)) {\n\t\t\t\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Skipped synchronizing extension because the compatible extension is not found.`, extension.displayName || extension.identifier.id);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Skipped synchronizing extension`, extension.displayName || extension.identifier.id);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\taddToSkipped.push(e);\n\t\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Skipped synchronizing extension because the extension is not found.`, e.identifier.id);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\tconst newSkippedExtensions: ISyncExtension[] = [];\n\t\tfor (const skippedExtension of skippedExtensions) {\n\t\t\tif (!removeFromSkipped.some(e => areSameExtensions(e, skippedExtension.identifier))) {\n\t\t\t\tnewSkippedExtensions.push(skippedExtension);\n\t\t\t}\n\t\t}\n\t\tfor (const skippedExtension of addToSkipped) {\n\t\t\tif (!newSkippedExtensions.some(e => areSameExtensions(e.identifier, skippedExtension.identifier))) {\n\t\t\t\tnewSkippedExtensions.push(skippedExtension);\n\t\t\t}\n\t\t}\n\t\treturn newSkippedExtensions;\n\t}\n\n\tprivate updateExtensionState(state: IStringDictionary<any>, publisher: string, name: string, version: string | undefined): void {\n\t\tconst extensionState = getExtensionStorageState(publisher, name, this.storageService);\n\t\tconst keys = version ? this.extensionsStorageSyncService.getKeysForSync({ id: getGalleryExtensionId(publisher, name), version }) : undefined;\n\t\tif (keys) {\n\t\t\tkeys.forEach(key => { extensionState[key] = state[key]; });\n\t\t} else {\n\t\t\tObject.keys(state).forEach(key => extensionState[key] = state[key]);\n\t\t}\n\t\tstoreExtensionStorageState(publisher, name, extensionState, this.storageService);\n\t}\n\n\tprivate parseExtensions(syncData: ISyncData): ISyncExtension[] {\n\t\treturn JSON.parse(syncData.content);\n\t}\n\n\tprivate getLocalExtensions(installedExtensions: ILocalExtension[]): ISyncExtensionWithVersion[] {\n\t\tconst disabledExtensions = this.extensionEnablementService.getDisabledExtensions();\n\t\treturn installedExtensions\n\t\t\t.map(({ identifier, isBuiltin, manifest, preRelease }) => {\n\t\t\t\tconst syncExntesion: ISyncExtensionWithVersion = { identifier, version: manifest.version, preRelease };\n\t\t\t\tif (disabledExtensions.some(disabledExtension => areSameExtensions(disabledExtension, identifier))) {\n\t\t\t\t\tsyncExntesion.disabled = true;\n\t\t\t\t}\n\t\t\t\tif (!isBuiltin) {\n\t\t\t\t\tsyncExntesion.installed = true;\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tconst keys = this.extensionsStorageSyncService.getKeysForSync({ id: identifier.id, version: manifest.version });\n\t\t\t\t\tif (keys) {\n\t\t\t\t\t\tconst extensionStorageState = getExtensionStorageState(manifest.publisher, manifest.name, this.storageService);\n\t\t\t\t\t\tsyncExntesion.state = Object.keys(extensionStorageState).reduce((state: IStringDictionary<any>, key) => {\n\t\t\t\t\t\t\tif (keys.includes(key)) {\n\t\t\t\t\t\t\t\tstate[key] = extensionStorageState[key];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn state;\n\t\t\t\t\t\t}, {});\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Error while parsing extension state`, getErrorMessage(error));\n\t\t\t\t}\n\t\t\t\treturn syncExntesion;\n\t\t\t});\n\t}\n\n}\n\nexport interface IExtensionsInitializerPreviewResult {\n\treadonly installedExtensions: ILocalExtension[];\n\treadonly disabledExtensions: IExtensionIdentifier[];\n\treadonly newExtensions: IExtensionIdentifier[];\n\treadonly remoteExtensions: ISyncExtension[];\n}\n\nexport abstract class AbstractExtensionsInitializer extends AbstractInitializer {\n\n\tconstructor(\n\t\t@IExtensionManagementService protected readonly extensionManagementService: IExtensionManagementService,\n\t\t@IIgnoredExtensionsManagementService private readonly ignoredExtensionsManagementService: IIgnoredExtensionsManagementService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@ILogService logService: ILogService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(SyncResource.Extensions, environmentService, logService, fileService, uriIdentityService);\n\t}\n\n\tprotected async parseExtensions(remoteUserData: IRemoteUserData): Promise<ISyncExtension[] | null> {\n\t\treturn remoteUserData.syncData ? await parseAndMigrateExtensions(remoteUserData.syncData, this.extensionManagementService) : null;\n\t}\n\n\tprotected generatePreview(remoteExtensions: ISyncExtension[], localExtensions: ILocalExtension[]): IExtensionsInitializerPreviewResult {\n\t\tconst installedExtensions: ILocalExtension[] = [];\n\t\tconst newExtensions: IExtensionIdentifier[] = [];\n\t\tconst disabledExtensions: IExtensionIdentifier[] = [];\n\t\tfor (const extension of remoteExtensions) {\n\t\t\tif (this.ignoredExtensionsManagementService.hasToNeverSyncExtension(extension.identifier.id)) {\n\t\t\t\t// Skip extension ignored to sync\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst installedExtension = localExtensions.find(i => areSameExtensions(i.identifier, extension.identifier));\n\t\t\tif (installedExtension) {\n\t\t\t\tinstalledExtensions.push(installedExtension);\n\t\t\t\tif (extension.disabled) {\n\t\t\t\t\tdisabledExtensions.push(extension.identifier);\n\t\t\t\t}\n\t\t\t} else if (extension.installed) {\n\t\t\t\tnewExtensions.push(extension.identifier);\n\t\t\t\tif (extension.disabled) {\n\t\t\t\t\tdisabledExtensions.push(extension.identifier);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { installedExtensions, newExtensions, disabledExtensions, remoteExtensions };\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport * as objects from 'vs/base/common/objects';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IStorageValue, SYNC_SERVICE_URL_TYPE } from 'vs/platform/userDataSync/common/userDataSync';\n\nexport interface IMergeResult {\n\tlocal: { added: IStringDictionary<IStorageValue>, removed: string[], updated: IStringDictionary<IStorageValue> };\n\tremote: IStringDictionary<IStorageValue> | null;\n}\n\nexport function merge(localStorage: IStringDictionary<IStorageValue>, remoteStorage: IStringDictionary<IStorageValue> | null, baseStorage: IStringDictionary<IStorageValue> | null, storageKeys: { machine: ReadonlyArray<string>, unregistered: ReadonlyArray<string> }, logService: ILogService): IMergeResult {\n\tif (!remoteStorage) {\n\t\treturn { remote: Object.keys(localStorage).length > 0 ? localStorage : null, local: { added: {}, removed: [], updated: {} } };\n\t}\n\n\tconst localToRemote = compare(localStorage, remoteStorage);\n\tif (localToRemote.added.size === 0 && localToRemote.removed.size === 0 && localToRemote.updated.size === 0) {\n\t\t// No changes found between local and remote.\n\t\treturn { remote: null, local: { added: {}, removed: [], updated: {} } };\n\t}\n\n\tconst baseToRemote = baseStorage ? compare(baseStorage, remoteStorage) : { added: Object.keys(remoteStorage).reduce((r, k) => { r.add(k); return r; }, new Set<string>()), removed: new Set<string>(), updated: new Set<string>() };\n\tconst baseToLocal = baseStorage ? compare(baseStorage, localStorage) : { added: Object.keys(localStorage).reduce((r, k) => { r.add(k); return r; }, new Set<string>()), removed: new Set<string>(), updated: new Set<string>() };\n\n\tconst local: { added: IStringDictionary<IStorageValue>, removed: string[], updated: IStringDictionary<IStorageValue> } = { added: {}, removed: [], updated: {} };\n\tconst remote: IStringDictionary<IStorageValue> = objects.deepClone(remoteStorage);\n\n\tconst isFirstTimeSync = !baseStorage;\n\n\t// Added in local\n\tfor (const key of baseToLocal.added.values()) {\n\t\t// If syncing for first time remote value gets precedence always,\n\t\t// except for sync service type key - local value takes precedence for this key\n\t\tif (key !== SYNC_SERVICE_URL_TYPE && isFirstTimeSync && baseToRemote.added.has(key)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tremote[key] = localStorage[key];\n\t}\n\n\t// Updated in local\n\tfor (const key of baseToLocal.updated.values()) {\n\t\tremote[key] = localStorage[key];\n\t}\n\n\t// Removed in local\n\tfor (const key of baseToLocal.removed.values()) {\n\t\t// Do not remove from remote if key is not registered.\n\t\tif (storageKeys.unregistered.includes(key)) {\n\t\t\tcontinue;\n\t\t}\n\t\tdelete remote[key];\n\t}\n\n\t// Added in remote\n\tfor (const key of baseToRemote.added.values()) {\n\t\tconst remoteValue = remoteStorage[key];\n\t\tif (storageKeys.machine.includes(key)) {\n\t\t\tlogService.info(`GlobalState: Skipped adding ${key} in local storage because it is declared as machine scoped.`);\n\t\t\tcontinue;\n\t\t}\n\t\t// Skip if the value is also added in local from the time it is last synced\n\t\tif (baseStorage && baseToLocal.added.has(key)) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst localValue = localStorage[key];\n\t\tif (localValue && localValue.value === remoteValue.value) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Local sync service type value takes precedence if syncing for first time\n\t\tif (key === SYNC_SERVICE_URL_TYPE && isFirstTimeSync && baseToLocal.added.has(key)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (localValue) {\n\t\t\tlocal.updated[key] = remoteValue;\n\t\t} else {\n\t\t\tlocal.added[key] = remoteValue;\n\t\t}\n\t}\n\n\t// Updated in Remote\n\tfor (const key of baseToRemote.updated.values()) {\n\t\tconst remoteValue = remoteStorage[key];\n\t\tif (storageKeys.machine.includes(key)) {\n\t\t\tlogService.info(`GlobalState: Skipped updating ${key} in local storage because it is declared as machine scoped.`);\n\t\t\tcontinue;\n\t\t}\n\t\t// Skip if the value is also updated or removed in local\n\t\tif (baseToLocal.updated.has(key) || baseToLocal.removed.has(key)) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst localValue = localStorage[key];\n\t\tif (localValue && localValue.value === remoteValue.value) {\n\t\t\tcontinue;\n\t\t}\n\t\tlocal.updated[key] = remoteValue;\n\t}\n\n\t// Removed in remote\n\tfor (const key of baseToRemote.removed.values()) {\n\t\tif (storageKeys.machine.includes(key)) {\n\t\t\tlogService.trace(`GlobalState: Skipped removing ${key} in local storage because it is declared as machine scoped.`);\n\t\t\tcontinue;\n\t\t}\n\t\t// Skip if the value is also updated or removed in local\n\t\tif (baseToLocal.updated.has(key) || baseToLocal.removed.has(key)) {\n\t\t\tcontinue;\n\t\t}\n\t\tlocal.removed.push(key);\n\t}\n\n\treturn { local, remote: areSame(remote, remoteStorage) ? null : remote };\n}\n\nfunction compare(from: IStringDictionary<any>, to: IStringDictionary<any>): { added: Set<string>, removed: Set<string>, updated: Set<string> } {\n\tconst fromKeys = Object.keys(from);\n\tconst toKeys = Object.keys(to);\n\tconst added = toKeys.filter(key => fromKeys.indexOf(key) === -1).reduce((r, key) => { r.add(key); return r; }, new Set<string>());\n\tconst removed = fromKeys.filter(key => toKeys.indexOf(key) === -1).reduce((r, key) => { r.add(key); return r; }, new Set<string>());\n\tconst updated: Set<string> = new Set<string>();\n\n\tfor (const key of fromKeys) {\n\t\tif (removed.has(key)) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst value1 = from[key];\n\t\tconst value2 = to[key];\n\t\tif (!objects.equals(value1, value2)) {\n\t\t\tupdated.add(key);\n\t\t}\n\t}\n\n\treturn { added, removed, updated };\n}\n\nfunction areSame(a: IStringDictionary<IStorageValue>, b: IStringDictionary<IStorageValue>): boolean {\n\tconst { added, removed, updated } = compare(a, b);\n\treturn added.size === 0 && removed.size === 0 && updated.size === 0;\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { getErrorMessage } from 'vs/base/common/errors';\nimport { Event } from 'vs/base/common/event';\nimport { parse } from 'vs/base/common/json';\nimport { applyEdits } from 'vs/base/common/jsonEdit';\nimport { format } from 'vs/base/common/jsonFormatter';\nimport { isWeb } from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IHeaders } from 'vs/base/parts/request/common/request';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { getServiceMachineId } from 'vs/platform/serviceMachineId/common/serviceMachineId';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { AbstractInitializer, AbstractSynchroniser, IAcceptResult, IMergeResult, IResourcePreview, isSyncData } from 'vs/platform/userDataSync/common/abstractSynchronizer';\nimport { edit } from 'vs/platform/userDataSync/common/content';\nimport { merge } from 'vs/platform/userDataSync/common/globalStateMerge';\nimport { ALL_SYNC_RESOURCES, Change, createSyncHeaders, getEnablementKey, IGlobalState, IRemoteUserData, IStorageValue, ISyncData, ISyncResourceHandle, IUserData, IUserDataSyncBackupStoreService, IUserDataSynchroniser, IUserDataSyncLogService, IUserDataSyncResourceEnablementService, IUserDataSyncStoreService, SyncResource, SYNC_SERVICE_URL_TYPE, UserDataSyncError, UserDataSyncErrorCode, UserDataSyncStoreType, USER_DATA_SYNC_SCHEME } from 'vs/platform/userDataSync/common/userDataSync';\nimport { UserDataSyncStoreClient } from 'vs/platform/userDataSync/common/userDataSyncStoreService';\n\nconst argvStoragePrefx = 'globalState.argv.';\nconst argvProperties: string[] = ['locale'];\n\ntype StorageKeys = { machine: string[], user: string[], unregistered: string[] };\n\ninterface IGlobalStateResourceMergeResult extends IAcceptResult {\n\treadonly local: { added: IStringDictionary<IStorageValue>, removed: string[], updated: IStringDictionary<IStorageValue> };\n\treadonly remote: IStringDictionary<IStorageValue> | null;\n}\n\nexport interface IGlobalStateResourcePreview extends IResourcePreview {\n\treadonly localUserData: IGlobalState;\n\treadonly previewResult: IGlobalStateResourceMergeResult;\n\treadonly storageKeys: StorageKeys;\n}\n\nfunction formatAndStringify(globalState: IGlobalState): string {\n\tconst storageKeys = globalState.storage ? Object.keys(globalState.storage).sort() : [];\n\tconst storage: IStringDictionary<IStorageValue> = {};\n\tstorageKeys.forEach(key => storage[key] = globalState.storage[key]);\n\tglobalState.storage = storage;\n\tconst content = JSON.stringify(globalState);\n\tconst edits = format(content, undefined, {});\n\treturn applyEdits(content, edits);\n}\n\nconst GLOBAL_STATE_DATA_VERSION = 1;\n\n/**\n * Synchronises global state that includes\n * \t- Global storage with user scope\n * \t- Locale from argv properties\n *\n * Global storage is synced without checking version just like other resources (settings, keybindings).\n * If there is a change in format of the value of a storage key which requires migration then\n * \t\tOwner of that key should remove that key from user scope and replace that with new user scoped key.\n */\nexport class GlobalStateSynchroniser extends AbstractSynchroniser implements IUserDataSynchroniser {\n\n\tprivate static readonly GLOBAL_STATE_DATA_URI = URI.from({ scheme: USER_DATA_SYNC_SCHEME, authority: 'globalState', path: `/globalState.json` });\n\tprotected readonly version: number = GLOBAL_STATE_DATA_VERSION;\n\tprivate readonly previewResource: URI = this.extUri.joinPath(this.syncPreviewFolder, 'globalState.json');\n\tprivate readonly localResource: URI = this.previewResource.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'local' });\n\tprivate readonly remoteResource: URI = this.previewResource.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'remote' });\n\tprivate readonly acceptedResource: URI = this.previewResource.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'accepted' });\n\n\tconstructor(\n\t\t@IFileService fileService: IFileService,\n\t\t@IUserDataSyncStoreService userDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncBackupStoreService userDataSyncBackupStoreService: IUserDataSyncBackupStoreService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IUserDataSyncResourceEnablementService userDataSyncResourceEnablementService: IUserDataSyncResourceEnablementService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(SyncResource.GlobalState, fileService, environmentService, storageService, userDataSyncStoreService, userDataSyncBackupStoreService, userDataSyncResourceEnablementService, telemetryService, logService, configurationService, uriIdentityService);\n\t\tthis._register(fileService.watch(this.extUri.dirname(this.environmentService.argvResource)));\n\t\tthis._register(\n\t\t\tEvent.any(\n\t\t\t\t/* Locale change */\n\t\t\t\tEvent.filter(fileService.onDidFilesChange, e => e.contains(this.environmentService.argvResource)),\n\t\t\t\t/* Global storage with user target has changed */\n\t\t\t\tEvent.filter(storageService.onDidChangeValue, e => e.scope === StorageScope.GLOBAL && e.target !== undefined ? e.target === StorageTarget.USER : storageService.keys(StorageScope.GLOBAL, StorageTarget.USER).includes(e.key)),\n\t\t\t\t/* Storage key target has changed */\n\t\t\t\tthis.storageService.onDidChangeTarget\n\t\t\t)((() => this.triggerLocalChange()))\n\t\t);\n\t}\n\n\tprotected async generateSyncPreview(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, isRemoteDataFromCurrentMachine: boolean): Promise<IGlobalStateResourcePreview[]> {\n\t\tconst remoteGlobalState: IGlobalState = remoteUserData.syncData ? JSON.parse(remoteUserData.syncData.content) : null;\n\n\t\t// Use remote data as last sync data if last sync data does not exist and remote data is from same machine\n\t\tlastSyncUserData = lastSyncUserData === null && isRemoteDataFromCurrentMachine ? remoteUserData : lastSyncUserData;\n\t\tconst lastSyncGlobalState: IGlobalState | null = lastSyncUserData && lastSyncUserData.syncData ? JSON.parse(lastSyncUserData.syncData.content) : null;\n\n\t\tconst localGlobalState = await this.getLocalGlobalState();\n\n\t\tif (remoteGlobalState) {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Merging remote ui state with local ui state...`);\n\t\t} else {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Remote ui state does not exist. Synchronizing ui state for the first time.`);\n\t\t}\n\n\t\tconst storageKeys = this.getStorageKeys(lastSyncGlobalState);\n\t\tconst { local, remote } = merge(localGlobalState.storage, remoteGlobalState ? remoteGlobalState.storage : null, lastSyncGlobalState ? lastSyncGlobalState.storage : null, storageKeys, this.logService);\n\t\tconst previewResult: IGlobalStateResourceMergeResult = {\n\t\t\tcontent: null,\n\t\t\tlocal,\n\t\t\tremote,\n\t\t\tlocalChange: Object.keys(local.added).length > 0 || Object.keys(local.updated).length > 0 || local.removed.length > 0 ? Change.Modified : Change.None,\n\t\t\tremoteChange: remote !== null ? Change.Modified : Change.None,\n\t\t};\n\n\t\treturn [{\n\t\t\tlocalResource: this.localResource,\n\t\t\tlocalContent: formatAndStringify(localGlobalState),\n\t\t\tlocalUserData: localGlobalState,\n\t\t\tremoteResource: this.remoteResource,\n\t\t\tremoteContent: remoteGlobalState ? formatAndStringify(remoteGlobalState) : null,\n\t\t\tpreviewResource: this.previewResource,\n\t\t\tpreviewResult,\n\t\t\tlocalChange: previewResult.localChange,\n\t\t\tremoteChange: previewResult.remoteChange,\n\t\t\tacceptedResource: this.acceptedResource,\n\t\t\tstorageKeys\n\t\t}];\n\t}\n\n\tprotected async getMergeResult(resourcePreview: IGlobalStateResourcePreview, token: CancellationToken): Promise<IMergeResult> {\n\t\treturn { ...resourcePreview.previewResult, hasConflicts: false };\n\t}\n\n\tprotected async getAcceptResult(resourcePreview: IGlobalStateResourcePreview, resource: URI, content: string | null | undefined, token: CancellationToken): Promise<IGlobalStateResourceMergeResult> {\n\n\t\t/* Accept local resource */\n\t\tif (this.extUri.isEqual(resource, this.localResource)) {\n\t\t\treturn this.acceptLocal(resourcePreview);\n\t\t}\n\n\t\t/* Accept remote resource */\n\t\tif (this.extUri.isEqual(resource, this.remoteResource)) {\n\t\t\treturn this.acceptRemote(resourcePreview);\n\t\t}\n\n\t\t/* Accept preview resource */\n\t\tif (this.extUri.isEqual(resource, this.previewResource)) {\n\t\t\treturn resourcePreview.previewResult;\n\t\t}\n\n\t\tthrow new Error(`Invalid Resource: ${resource.toString()}`);\n\t}\n\n\tprivate async acceptLocal(resourcePreview: IGlobalStateResourcePreview): Promise<IGlobalStateResourceMergeResult> {\n\t\treturn {\n\t\t\tcontent: resourcePreview.localContent,\n\t\t\tlocal: { added: {}, removed: [], updated: {} },\n\t\t\tremote: resourcePreview.localUserData.storage,\n\t\t\tlocalChange: Change.None,\n\t\t\tremoteChange: Change.Modified,\n\t\t};\n\t}\n\n\tprivate async acceptRemote(resourcePreview: IGlobalStateResourcePreview): Promise<IGlobalStateResourceMergeResult> {\n\t\tif (resourcePreview.remoteContent !== null) {\n\t\t\tconst remoteGlobalState: IGlobalState = JSON.parse(resourcePreview.remoteContent);\n\t\t\tconst { local, remote } = merge(resourcePreview.localUserData.storage, remoteGlobalState.storage, null, resourcePreview.storageKeys, this.logService);\n\t\t\treturn {\n\t\t\t\tcontent: resourcePreview.remoteContent,\n\t\t\t\tlocal,\n\t\t\t\tremote,\n\t\t\t\tlocalChange: Object.keys(local.added).length > 0 || Object.keys(local.updated).length > 0 || local.removed.length > 0 ? Change.Modified : Change.None,\n\t\t\t\tremoteChange: remote !== null ? Change.Modified : Change.None,\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tcontent: resourcePreview.remoteContent,\n\t\t\t\tlocal: { added: {}, removed: [], updated: {} },\n\t\t\t\tremote: null,\n\t\t\t\tlocalChange: Change.None,\n\t\t\t\tremoteChange: Change.None,\n\t\t\t};\n\t\t}\n\t}\n\n\tprotected async applyResult(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, resourcePreviews: [IGlobalStateResourcePreview, IGlobalStateResourceMergeResult][], force: boolean): Promise<void> {\n\t\tlet { localUserData } = resourcePreviews[0][0];\n\t\tlet { local, remote, localChange, remoteChange } = resourcePreviews[0][1];\n\n\t\tif (localChange === Change.None && remoteChange === Change.None) {\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: No changes found during synchronizing ui state.`);\n\t\t}\n\n\t\tif (localChange !== Change.None) {\n\t\t\t// update local\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Updating local ui state...`);\n\t\t\tawait this.backupLocal(JSON.stringify(localUserData));\n\t\t\tawait this.writeLocalGlobalState(local);\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Updated local ui state`);\n\t\t}\n\n\t\tif (remoteChange !== Change.None) {\n\t\t\t// update remote\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Updating remote ui state...`);\n\t\t\tconst content = JSON.stringify(<IGlobalState>{ storage: remote });\n\t\t\tremoteUserData = await this.updateRemoteUserData(content, force ? null : remoteUserData.ref);\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Updated remote ui state`);\n\t\t}\n\n\t\tif (lastSyncUserData?.ref !== remoteUserData.ref) {\n\t\t\t// update last sync\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Updating last synchronized ui state...`);\n\t\t\tawait this.updateLastSyncUserData(remoteUserData);\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Updated last synchronized ui state`);\n\t\t}\n\t}\n\n\tasync getAssociatedResources({ uri }: ISyncResourceHandle): Promise<{ resource: URI, comparableResource: URI }[]> {\n\t\treturn [{ resource: this.extUri.joinPath(uri, 'globalState.json'), comparableResource: GlobalStateSynchroniser.GLOBAL_STATE_DATA_URI }];\n\t}\n\n\toverride async resolveContent(uri: URI): Promise<string | null> {\n\t\tif (this.extUri.isEqual(uri, GlobalStateSynchroniser.GLOBAL_STATE_DATA_URI)) {\n\t\t\tconst localGlobalState = await this.getLocalGlobalState();\n\t\t\treturn formatAndStringify(localGlobalState);\n\t\t}\n\n\t\tif (this.extUri.isEqual(this.remoteResource, uri) || this.extUri.isEqual(this.localResource, uri) || this.extUri.isEqual(this.acceptedResource, uri)) {\n\t\t\treturn this.resolvePreviewContent(uri);\n\t\t}\n\n\t\tlet content = await super.resolveContent(uri);\n\t\tif (content) {\n\t\t\treturn content;\n\t\t}\n\n\t\tcontent = await super.resolveContent(this.extUri.dirname(uri));\n\t\tif (content) {\n\t\t\tconst syncData = this.parseSyncData(content);\n\t\t\tif (syncData) {\n\t\t\t\tswitch (this.extUri.basename(uri)) {\n\t\t\t\t\tcase 'globalState.json':\n\t\t\t\t\t\treturn formatAndStringify(JSON.parse(syncData.content));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tasync hasLocalData(): Promise<boolean> {\n\t\ttry {\n\t\t\tconst { storage } = await this.getLocalGlobalState();\n\t\t\tif (Object.keys(storage).length > 1 || storage[`${argvStoragePrefx}.locale`]?.value !== 'en') {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t/* ignore error */\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate async getLocalGlobalState(): Promise<IGlobalState> {\n\t\tconst storage: IStringDictionary<IStorageValue> = {};\n\t\tconst argvContent: string = await this.getLocalArgvContent();\n\t\tconst argvValue: IStringDictionary<any> = parse(argvContent);\n\t\tfor (const argvProperty of argvProperties) {\n\t\t\tif (argvValue[argvProperty] !== undefined) {\n\t\t\t\tstorage[`${argvStoragePrefx}${argvProperty}`] = { version: 1, value: argvValue[argvProperty] };\n\t\t\t}\n\t\t}\n\t\tfor (const key of this.storageService.keys(StorageScope.GLOBAL, StorageTarget.USER)) {\n\t\t\tconst value = this.storageService.get(key, StorageScope.GLOBAL);\n\t\t\tif (value) {\n\t\t\t\tstorage[key] = { version: 1, value };\n\t\t\t}\n\t\t}\n\t\treturn { storage };\n\t}\n\n\tprivate async getLocalArgvContent(): Promise<string> {\n\t\ttry {\n\t\t\tthis.logService.debug('GlobalStateSync#getLocalArgvContent', this.environmentService.argvResource);\n\t\t\tconst content = await this.fileService.readFile(this.environmentService.argvResource);\n\t\t\tthis.logService.debug('GlobalStateSync#getLocalArgvContent - Resolved', this.environmentService.argvResource);\n\t\t\treturn content.value.toString();\n\t\t} catch (error) {\n\t\t\tthis.logService.debug(getErrorMessage(error));\n\t\t}\n\t\treturn '{}';\n\t}\n\n\tprivate async writeLocalGlobalState({ added, removed, updated }: { added: IStringDictionary<IStorageValue>, updated: IStringDictionary<IStorageValue>, removed: string[] }): Promise<void> {\n\t\tconst argv: IStringDictionary<any> = {};\n\t\tconst updatedStorage: IStringDictionary<any> = {};\n\t\tconst handleUpdatedStorage = (keys: string[], storage?: IStringDictionary<IStorageValue>): void => {\n\t\t\tfor (const key of keys) {\n\t\t\t\tif (key.startsWith(argvStoragePrefx)) {\n\t\t\t\t\targv[key.substring(argvStoragePrefx.length)] = storage ? storage[key].value : undefined;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (storage) {\n\t\t\t\t\tconst storageValue = storage[key];\n\t\t\t\t\tif (storageValue.value !== String(this.storageService.get(key, StorageScope.GLOBAL))) {\n\t\t\t\t\t\tupdatedStorage[key] = storageValue.value;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (this.storageService.get(key, StorageScope.GLOBAL) !== undefined) {\n\t\t\t\t\t\tupdatedStorage[key] = undefined;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\thandleUpdatedStorage(Object.keys(added), added);\n\t\thandleUpdatedStorage(Object.keys(updated), updated);\n\t\thandleUpdatedStorage(removed);\n\t\tif (Object.keys(argv).length) {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Updating locale...`);\n\t\t\tawait this.updateArgv(argv);\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Updated locale`);\n\t\t}\n\t\tconst updatedStorageKeys: string[] = Object.keys(updatedStorage);\n\t\tif (updatedStorageKeys.length) {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Updating global state...`);\n\t\t\tfor (const key of Object.keys(updatedStorage)) {\n\t\t\t\tthis.storageService.store(key, updatedStorage[key], StorageScope.GLOBAL, StorageTarget.USER);\n\t\t\t}\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Updated global state`, Object.keys(updatedStorage));\n\t\t}\n\t}\n\n\tprivate async updateArgv(argv: IStringDictionary<any>): Promise<void> {\n\t\tconst argvContent = await this.getLocalArgvContent();\n\t\tlet content = argvContent;\n\t\tfor (const argvProperty of Object.keys(argv)) {\n\t\t\tcontent = edit(content, [argvProperty], argv[argvProperty], {});\n\t\t}\n\t\tif (argvContent !== content) {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Updating locale...`);\n\t\t\tawait this.fileService.writeFile(this.environmentService.argvResource, VSBuffer.fromString(content));\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Updated locale.`);\n\t\t}\n\t}\n\n\tprivate getStorageKeys(lastSyncGlobalState: IGlobalState | null): StorageKeys {\n\t\tconst user = this.storageService.keys(StorageScope.GLOBAL, StorageTarget.USER);\n\t\tconst machine = this.storageService.keys(StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\tconst registered = [...user, ...machine];\n\t\tconst unregistered = lastSyncGlobalState?.storage ? Object.keys(lastSyncGlobalState.storage).filter(key => !key.startsWith(argvStoragePrefx) && !registered.includes(key) && this.storageService.get(key, StorageScope.GLOBAL) !== undefined) : [];\n\n\t\tif (!isWeb) {\n\t\t\t// Following keys are synced only in web. Do not sync these keys in other platforms\n\t\t\tconst keysSyncedOnlyInWeb = [...ALL_SYNC_RESOURCES.map(resource => getEnablementKey(resource)), SYNC_SERVICE_URL_TYPE];\n\t\t\tunregistered.push(...keysSyncedOnlyInWeb);\n\t\t\tmachine.push(...keysSyncedOnlyInWeb);\n\t\t}\n\n\t\treturn { user, machine, unregistered };\n\t}\n}\n\nexport class GlobalStateInitializer extends AbstractInitializer {\n\n\tconstructor(\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(SyncResource.GlobalState, environmentService, logService, fileService, uriIdentityService);\n\t}\n\n\tasync doInitialize(remoteUserData: IRemoteUserData): Promise<void> {\n\t\tconst remoteGlobalState: IGlobalState = remoteUserData.syncData ? JSON.parse(remoteUserData.syncData.content) : null;\n\t\tif (!remoteGlobalState) {\n\t\t\tthis.logService.info('Skipping initializing global state because remote global state does not exist.');\n\t\t\treturn;\n\t\t}\n\n\t\tconst argv: IStringDictionary<any> = {};\n\t\tconst storage: IStringDictionary<any> = {};\n\t\tfor (const key of Object.keys(remoteGlobalState.storage)) {\n\t\t\tif (key.startsWith(argvStoragePrefx)) {\n\t\t\t\targv[key.substring(argvStoragePrefx.length)] = remoteGlobalState.storage[key].value;\n\t\t\t} else {\n\t\t\t\tif (this.storageService.get(key, StorageScope.GLOBAL) === undefined) {\n\t\t\t\t\tstorage[key] = remoteGlobalState.storage[key].value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (Object.keys(argv).length) {\n\t\t\tlet content = '{}';\n\t\t\ttry {\n\t\t\t\tconst fileContent = await this.fileService.readFile(this.environmentService.argvResource);\n\t\t\t\tcontent = fileContent.value.toString();\n\t\t\t} catch (error) { }\n\t\t\tfor (const argvProperty of Object.keys(argv)) {\n\t\t\t\tcontent = edit(content, [argvProperty], argv[argvProperty], {});\n\t\t\t}\n\t\t\tawait this.fileService.writeFile(this.environmentService.argvResource, VSBuffer.fromString(content));\n\t\t}\n\n\t\tif (Object.keys(storage).length) {\n\t\t\tfor (const key of Object.keys(storage)) {\n\t\t\t\tthis.storageService.store(key, storage[key], StorageScope.GLOBAL, StorageTarget.USER);\n\t\t\t}\n\t\t}\n\t}\n\n}\n\nexport class UserDataSyncStoreTypeSynchronizer {\n\n\tconstructor(\n\t\tprivate readonly userDataSyncStoreClient: UserDataSyncStoreClient,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t}\n\n\tgetSyncStoreType(userData: IUserData): UserDataSyncStoreType | undefined {\n\t\tconst remoteGlobalState = this.parseGlobalState(userData);\n\t\treturn remoteGlobalState?.storage[SYNC_SERVICE_URL_TYPE]?.value as UserDataSyncStoreType;\n\t}\n\n\tasync sync(userDataSyncStoreType: UserDataSyncStoreType): Promise<void> {\n\t\tconst syncHeaders = createSyncHeaders(generateUuid());\n\t\ttry {\n\t\t\treturn await this.doSync(userDataSyncStoreType, syncHeaders);\n\t\t} catch (e) {\n\t\t\tif (e instanceof UserDataSyncError) {\n\t\t\t\tswitch (e.code) {\n\t\t\t\t\tcase UserDataSyncErrorCode.PreconditionFailed:\n\t\t\t\t\t\tthis.logService.info(`Failed to synchronize UserDataSyncStoreType as there is a new remote version available. Synchronizing again...`);\n\t\t\t\t\t\treturn this.doSync(userDataSyncStoreType, syncHeaders);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\tprivate async doSync(userDataSyncStoreType: UserDataSyncStoreType, syncHeaders: IHeaders): Promise<void> {\n\t\t// Read the global state from remote\n\t\tconst globalStateUserData = await this.userDataSyncStoreClient.read(SyncResource.GlobalState, null, syncHeaders);\n\t\tconst remoteGlobalState = this.parseGlobalState(globalStateUserData) || { storage: {} };\n\n\t\t// Update the sync store type\n\t\tremoteGlobalState.storage[SYNC_SERVICE_URL_TYPE] = { value: userDataSyncStoreType, version: GLOBAL_STATE_DATA_VERSION };\n\n\t\t// Write the global state to remote\n\t\tconst machineId = await getServiceMachineId(this.environmentService, this.fileService, this.storageService);\n\t\tconst syncDataToUpdate: ISyncData = { version: GLOBAL_STATE_DATA_VERSION, machineId, content: formatAndStringify(remoteGlobalState) };\n\t\tawait this.userDataSyncStoreClient.write(SyncResource.GlobalState, JSON.stringify(syncDataToUpdate), globalStateUserData.ref, syncHeaders);\n\t}\n\n\tprivate parseGlobalState({ content }: IUserData): IGlobalState | null {\n\t\tif (!content) {\n\t\t\treturn null;\n\t\t}\n\t\tconst syncData = JSON.parse(content);\n\t\tif (isSyncData(syncData)) {\n\t\t\treturn syncData ? JSON.parse(syncData.content) : null;\n\t\t}\n\t\tthrow new Error('Invalid remote data');\n\t}\n\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isNonEmptyArray } from 'vs/base/common/arrays';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Event } from 'vs/base/common/event';\nimport { parse } from 'vs/base/common/json';\nimport { OperatingSystem, OS } from 'vs/base/common/platform';\nimport { isUndefined } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { FileOperationError, FileOperationResult, IFileService } from 'vs/platform/files/common/files';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { AbstractInitializer, AbstractJsonFileSynchroniser, IAcceptResult, IFileResourcePreview, IMergeResult } from 'vs/platform/userDataSync/common/abstractSynchronizer';\nimport { merge } from 'vs/platform/userDataSync/common/keybindingsMerge';\nimport { Change, IRemoteUserData, ISyncResourceHandle, IUserDataSyncBackupStoreService, IUserDataSyncConfiguration, IUserDataSynchroniser, IUserDataSyncLogService, IUserDataSyncResourceEnablementService, IUserDataSyncStoreService, IUserDataSyncUtilService, SyncResource, UserDataSyncError, UserDataSyncErrorCode, USER_DATA_SYNC_SCHEME } from 'vs/platform/userDataSync/common/userDataSync';\n\ninterface ISyncContent {\n\tmac?: string;\n\tlinux?: string;\n\twindows?: string;\n\tall?: string;\n}\n\ninterface IKeybindingsResourcePreview extends IFileResourcePreview {\n\tpreviewResult: IMergeResult;\n}\n\ninterface ILastSyncUserData extends IRemoteUserData {\n\tplatformSpecific?: boolean;\n}\n\nexport function getKeybindingsContentFromSyncContent(syncContent: string, platformSpecific: boolean, logService: ILogService): string | null {\n\ttry {\n\t\tconst parsed = <ISyncContent>JSON.parse(syncContent);\n\t\tif (!platformSpecific) {\n\t\t\treturn isUndefined(parsed.all) ? null : parsed.all;\n\t\t}\n\t\tswitch (OS) {\n\t\t\tcase OperatingSystem.Macintosh:\n\t\t\t\treturn isUndefined(parsed.mac) ? null : parsed.mac;\n\t\t\tcase OperatingSystem.Linux:\n\t\t\t\treturn isUndefined(parsed.linux) ? null : parsed.linux;\n\t\t\tcase OperatingSystem.Windows:\n\t\t\t\treturn isUndefined(parsed.windows) ? null : parsed.windows;\n\t\t}\n\t} catch (e) {\n\t\tlogService.error(e);\n\t\treturn null;\n\t}\n}\n\nexport class KeybindingsSynchroniser extends AbstractJsonFileSynchroniser implements IUserDataSynchroniser {\n\n\t/* Version 2: Change settings from `sync.${setting}` to `settingsSync.{setting}` */\n\tprotected readonly version: number = 2;\n\tprivate readonly previewResource: URI = this.extUri.joinPath(this.syncPreviewFolder, 'keybindings.json');\n\tprivate readonly localResource: URI = this.previewResource.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'local' });\n\tprivate readonly remoteResource: URI = this.previewResource.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'remote' });\n\tprivate readonly acceptedResource: URI = this.previewResource.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'accepted' });\n\n\tconstructor(\n\t\t@IUserDataSyncStoreService userDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncBackupStoreService userDataSyncBackupStoreService: IUserDataSyncBackupStoreService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IUserDataSyncResourceEnablementService userDataSyncResourceEnablementService: IUserDataSyncResourceEnablementService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IUserDataSyncUtilService userDataSyncUtilService: IUserDataSyncUtilService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(environmentService.keybindingsResource, SyncResource.Keybindings, fileService, environmentService, storageService, userDataSyncStoreService, userDataSyncBackupStoreService, userDataSyncResourceEnablementService, telemetryService, logService, userDataSyncUtilService, configurationService, uriIdentityService);\n\t\tthis._register(Event.filter(configurationService.onDidChangeConfiguration, e => e.affectsConfiguration('settingsSync.keybindingsPerPlatform'))(() => this.triggerLocalChange()));\n\t}\n\n\tprotected async generateSyncPreview(remoteUserData: IRemoteUserData, lastSyncUserData: ILastSyncUserData | null, isRemoteDataFromCurrentMachine: boolean, userDataSyncConfiguration: IUserDataSyncConfiguration): Promise<IKeybindingsResourcePreview[]> {\n\t\tconst remoteContent = remoteUserData.syncData ? getKeybindingsContentFromSyncContent(remoteUserData.syncData.content, userDataSyncConfiguration.keybindingsPerPlatform ?? this.syncKeybindingsPerPlatform(), this.logService) : null;\n\n\t\t// Use remote data as last sync data if last sync data does not exist and remote data is from same machine\n\t\tlastSyncUserData = lastSyncUserData === null && isRemoteDataFromCurrentMachine ? remoteUserData : lastSyncUserData;\n\t\tconst lastSyncContent: string | null = lastSyncUserData ? this.getKeybindingsContentFromLastSyncUserData(lastSyncUserData) : null;\n\n\t\t// Get file content last to get the latest\n\t\tconst fileContent = await this.getLocalFileContent();\n\t\tconst formattingOptions = await this.getFormattingOptions();\n\n\t\tlet mergedContent: string | null = null;\n\t\tlet hasLocalChanged: boolean = false;\n\t\tlet hasRemoteChanged: boolean = false;\n\t\tlet hasConflicts: boolean = false;\n\n\t\tif (remoteContent) {\n\t\t\tlet localContent: string = fileContent ? fileContent.value.toString() : '[]';\n\t\t\tlocalContent = localContent || '[]';\n\t\t\tif (this.hasErrors(localContent)) {\n\t\t\t\tthrow new UserDataSyncError(localize('errorInvalidSettings', \"Unable to sync keybindings because the content in the file is not valid. Please open the file and correct it.\"), UserDataSyncErrorCode.LocalInvalidContent, this.resource);\n\t\t\t}\n\n\t\t\tif (!lastSyncContent // First time sync\n\t\t\t\t|| lastSyncContent !== localContent // Local has forwarded\n\t\t\t\t|| lastSyncContent !== remoteContent // Remote has forwarded\n\t\t\t) {\n\t\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Merging remote keybindings with local keybindings...`);\n\t\t\t\tconst result = await merge(localContent, remoteContent, lastSyncContent, formattingOptions, this.userDataSyncUtilService);\n\t\t\t\t// Sync only if there are changes\n\t\t\t\tif (result.hasChanges) {\n\t\t\t\t\tmergedContent = result.mergeContent;\n\t\t\t\t\thasConflicts = result.hasConflicts;\n\t\t\t\t\thasLocalChanged = hasConflicts || result.mergeContent !== localContent;\n\t\t\t\t\thasRemoteChanged = hasConflicts || result.mergeContent !== remoteContent;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// First time syncing to remote\n\t\telse if (fileContent) {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Remote keybindings does not exist. Synchronizing keybindings for the first time.`);\n\t\t\tmergedContent = fileContent.value.toString();\n\t\t\thasRemoteChanged = true;\n\t\t}\n\n\t\tconst previewResult: IMergeResult = {\n\t\t\tcontent: mergedContent,\n\t\t\tlocalChange: hasLocalChanged ? fileContent ? Change.Modified : Change.Added : Change.None,\n\t\t\tremoteChange: hasRemoteChanged ? Change.Modified : Change.None,\n\t\t\thasConflicts\n\t\t};\n\n\t\treturn [{\n\t\t\tfileContent,\n\t\t\tlocalResource: this.localResource,\n\t\t\tlocalContent: fileContent ? fileContent.value.toString() : null,\n\t\t\tlocalChange: previewResult.localChange,\n\n\t\t\tremoteResource: this.remoteResource,\n\t\t\tremoteContent,\n\t\t\tremoteChange: previewResult.remoteChange,\n\n\t\t\tpreviewResource: this.previewResource,\n\t\t\tpreviewResult,\n\t\t\tacceptedResource: this.acceptedResource,\n\t\t}];\n\n\t}\n\n\tprotected async getMergeResult(resourcePreview: IKeybindingsResourcePreview, token: CancellationToken): Promise<IMergeResult> {\n\t\treturn resourcePreview.previewResult;\n\t}\n\n\tprotected async getAcceptResult(resourcePreview: IKeybindingsResourcePreview, resource: URI, content: string | null | undefined, token: CancellationToken): Promise<IAcceptResult> {\n\n\t\t/* Accept local resource */\n\t\tif (this.extUri.isEqual(resource, this.localResource)) {\n\t\t\treturn {\n\t\t\t\tcontent: resourcePreview.fileContent ? resourcePreview.fileContent.value.toString() : null,\n\t\t\t\tlocalChange: Change.None,\n\t\t\t\tremoteChange: Change.Modified,\n\t\t\t};\n\t\t}\n\n\t\t/* Accept remote resource */\n\t\tif (this.extUri.isEqual(resource, this.remoteResource)) {\n\t\t\treturn {\n\t\t\t\tcontent: resourcePreview.remoteContent,\n\t\t\t\tlocalChange: Change.Modified,\n\t\t\t\tremoteChange: Change.None,\n\t\t\t};\n\t\t}\n\n\t\t/* Accept preview resource */\n\t\tif (this.extUri.isEqual(resource, this.previewResource)) {\n\t\t\tif (content === undefined) {\n\t\t\t\treturn {\n\t\t\t\t\tcontent: resourcePreview.previewResult.content,\n\t\t\t\t\tlocalChange: resourcePreview.previewResult.localChange,\n\t\t\t\t\tremoteChange: resourcePreview.previewResult.remoteChange,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\tcontent,\n\t\t\t\t\tlocalChange: Change.Modified,\n\t\t\t\t\tremoteChange: Change.Modified,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(`Invalid Resource: ${resource.toString()}`);\n\t}\n\n\tprotected async applyResult(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, resourcePreviews: [IKeybindingsResourcePreview, IAcceptResult][], force: boolean): Promise<void> {\n\t\tconst { fileContent } = resourcePreviews[0][0];\n\t\tlet { content, localChange, remoteChange } = resourcePreviews[0][1];\n\n\t\tif (localChange === Change.None && remoteChange === Change.None) {\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: No changes found during synchronizing keybindings.`);\n\t\t}\n\n\t\tif (content !== null) {\n\t\t\tcontent = content.trim();\n\t\t\tcontent = content || '[]';\n\t\t\tif (this.hasErrors(content)) {\n\t\t\t\tthrow new UserDataSyncError(localize('errorInvalidSettings', \"Unable to sync keybindings because the content in the file is not valid. Please open the file and correct it.\"), UserDataSyncErrorCode.LocalInvalidContent, this.resource);\n\t\t\t}\n\t\t}\n\n\t\tif (localChange !== Change.None) {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Updating local keybindings...`);\n\t\t\tif (fileContent) {\n\t\t\t\tawait this.backupLocal(this.toSyncContent(fileContent.value.toString()));\n\t\t\t}\n\t\t\tawait this.updateLocalFileContent(content || '[]', fileContent, force);\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Updated local keybindings`);\n\t\t}\n\n\t\tif (remoteChange !== Change.None) {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Updating remote keybindings...`);\n\t\t\tconst remoteContents = this.toSyncContent(content || '[]', remoteUserData.syncData?.content);\n\t\t\tremoteUserData = await this.updateRemoteUserData(remoteContents, force ? null : remoteUserData.ref);\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Updated remote keybindings`);\n\t\t}\n\n\t\t// Delete the preview\n\t\ttry {\n\t\t\tawait this.fileService.del(this.previewResource);\n\t\t} catch (e) { /* ignore */ }\n\n\t\tif (lastSyncUserData?.ref !== remoteUserData.ref) {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Updating last synchronized keybindings...`);\n\t\t\tawait this.updateLastSyncUserData(remoteUserData, { platformSpecific: this.syncKeybindingsPerPlatform() });\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Updated last synchronized keybindings`);\n\t\t}\n\n\t}\n\n\tasync hasLocalData(): Promise<boolean> {\n\t\ttry {\n\t\t\tconst localFileContent = await this.getLocalFileContent();\n\t\t\tif (localFileContent) {\n\t\t\t\tconst keybindings = parse(localFileContent.value.toString());\n\t\t\t\tif (isNonEmptyArray(keybindings)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif ((<FileOperationError>error).fileOperationResult !== FileOperationResult.FILE_NOT_FOUND) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tasync getAssociatedResources({ uri }: ISyncResourceHandle): Promise<{ resource: URI, comparableResource: URI }[]> {\n\t\tconst comparableResource = (await this.fileService.exists(this.file)) ? this.file : this.localResource;\n\t\treturn [{ resource: this.extUri.joinPath(uri, 'keybindings.json'), comparableResource }];\n\t}\n\n\toverride async resolveContent(uri: URI): Promise<string | null> {\n\t\tif (this.extUri.isEqual(this.remoteResource, uri) || this.extUri.isEqual(this.localResource, uri) || this.extUri.isEqual(this.acceptedResource, uri)) {\n\t\t\treturn this.resolvePreviewContent(uri);\n\t\t}\n\t\tlet content = await super.resolveContent(uri);\n\t\tif (content) {\n\t\t\treturn content;\n\t\t}\n\t\tcontent = await super.resolveContent(this.extUri.dirname(uri));\n\t\tif (content) {\n\t\t\tconst syncData = this.parseSyncData(content);\n\t\t\tif (syncData) {\n\t\t\t\tswitch (this.extUri.basename(uri)) {\n\t\t\t\t\tcase 'keybindings.json':\n\t\t\t\t\t\treturn getKeybindingsContentFromSyncContent(syncData.content, this.syncKeybindingsPerPlatform(), this.logService);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate getKeybindingsContentFromLastSyncUserData(lastSyncUserData: ILastSyncUserData): string | null {\n\t\tif (!lastSyncUserData.syncData) {\n\t\t\treturn null;\n\t\t}\n\n\t\t// Return null if there is a change in platform specific property from last time sync.\n\t\tif (lastSyncUserData.platformSpecific !== undefined && lastSyncUserData.platformSpecific !== this.syncKeybindingsPerPlatform()) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn getKeybindingsContentFromSyncContent(lastSyncUserData.syncData.content, this.syncKeybindingsPerPlatform(), this.logService);\n\t}\n\n\tprivate toSyncContent(keybindingsContent: string, syncContent?: string): string {\n\t\tlet parsed: ISyncContent = {};\n\t\ttry {\n\t\t\tparsed = JSON.parse(syncContent || '{}');\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t}\n\t\tif (this.syncKeybindingsPerPlatform()) {\n\t\t\tdelete parsed.all;\n\t\t} else {\n\t\t\tparsed.all = keybindingsContent;\n\t\t}\n\t\tswitch (OS) {\n\t\t\tcase OperatingSystem.Macintosh:\n\t\t\t\tparsed.mac = keybindingsContent;\n\t\t\t\tbreak;\n\t\t\tcase OperatingSystem.Linux:\n\t\t\t\tparsed.linux = keybindingsContent;\n\t\t\t\tbreak;\n\t\t\tcase OperatingSystem.Windows:\n\t\t\t\tparsed.windows = keybindingsContent;\n\t\t\t\tbreak;\n\t\t}\n\t\treturn JSON.stringify(parsed);\n\t}\n\n\tprivate syncKeybindingsPerPlatform(): boolean {\n\t\treturn !!this.configurationService.getValue('settingsSync.keybindingsPerPlatform');\n\t}\n\n}\n\nexport class KeybindingsInitializer extends AbstractInitializer {\n\n\tconstructor(\n\t\t@IFileService fileService: IFileService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(SyncResource.Keybindings, environmentService, logService, fileService, uriIdentityService);\n\t}\n\n\tasync doInitialize(remoteUserData: IRemoteUserData): Promise<void> {\n\t\tconst keybindingsContent = remoteUserData.syncData ? this.getKeybindingsContentFromSyncContent(remoteUserData.syncData.content) : null;\n\t\tif (!keybindingsContent) {\n\t\t\tthis.logService.info('Skipping initializing keybindings because remote keybindings does not exist.');\n\t\t\treturn;\n\t\t}\n\n\t\tconst isEmpty = await this.isEmpty();\n\t\tif (!isEmpty) {\n\t\t\tthis.logService.info('Skipping initializing keybindings because local keybindings exist.');\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.fileService.writeFile(this.environmentService.keybindingsResource, VSBuffer.fromString(keybindingsContent));\n\n\t\tawait this.updateLastSyncUserData(remoteUserData);\n\t}\n\n\tprivate async isEmpty(): Promise<boolean> {\n\t\ttry {\n\t\t\tconst fileContent = await this.fileService.readFile(this.environmentService.settingsResource);\n\t\t\tconst keybindings = parse(fileContent.value.toString());\n\t\t\treturn !isNonEmptyArray(keybindings);\n\t\t} catch (error) {\n\t\t\treturn (<FileOperationError>error).fileOperationResult === FileOperationResult.FILE_NOT_FOUND;\n\t\t}\n\t}\n\n\tprivate getKeybindingsContentFromSyncContent(syncContent: string): string | null {\n\t\ttry {\n\t\t\treturn getKeybindingsContentFromSyncContent(syncContent, true, this.logService);\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t\treturn null;\n\t\t}\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { distinct } from 'vs/base/common/arrays';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { JSONVisitor, parse, visit } from 'vs/base/common/json';\nimport { applyEdits, setProperty, withFormatting } from 'vs/base/common/jsonEdit';\nimport { Edit, FormattingOptions, getEOL } from 'vs/base/common/jsonFormatter';\nimport * as objects from 'vs/base/common/objects';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport * as contentUtil from 'vs/platform/userDataSync/common/content';\nimport { getDisallowedIgnoredSettings, IConflictSetting } from 'vs/platform/userDataSync/common/userDataSync';\n\nexport interface IMergeResult {\n\tlocalContent: string | null;\n\tremoteContent: string | null;\n\thasConflicts: boolean;\n\tconflictsSettings: IConflictSetting[];\n}\n\nexport function getIgnoredSettings(defaultIgnoredSettings: string[], configurationService: IConfigurationService, settingsContent?: string): string[] {\n\tlet value: ReadonlyArray<string> = [];\n\tif (settingsContent) {\n\t\tvalue = getIgnoredSettingsFromContent(settingsContent);\n\t} else {\n\t\tvalue = getIgnoredSettingsFromConfig(configurationService);\n\t}\n\tconst added: string[] = [], removed: string[] = [...getDisallowedIgnoredSettings()];\n\tif (Array.isArray(value)) {\n\t\tfor (const key of value) {\n\t\t\tif (key.startsWith('-')) {\n\t\t\t\tremoved.push(key.substring(1));\n\t\t\t} else {\n\t\t\t\tadded.push(key);\n\t\t\t}\n\t\t}\n\t}\n\treturn distinct([...defaultIgnoredSettings, ...added,].filter(setting => removed.indexOf(setting) === -1));\n}\n\nfunction getIgnoredSettingsFromConfig(configurationService: IConfigurationService): ReadonlyArray<string> {\n\tlet userValue = configurationService.inspect<string[]>('settingsSync.ignoredSettings').userValue;\n\tif (userValue !== undefined) {\n\t\treturn userValue;\n\t}\n\tuserValue = configurationService.inspect<string[]>('sync.ignoredSettings').userValue;\n\tif (userValue !== undefined) {\n\t\treturn userValue;\n\t}\n\treturn configurationService.getValue<string[]>('settingsSync.ignoredSettings') || [];\n}\n\nfunction getIgnoredSettingsFromContent(settingsContent: string): string[] {\n\tconst parsed = parse(settingsContent);\n\treturn parsed ? parsed['settingsSync.ignoredSettings'] || parsed['sync.ignoredSettings'] || [] : [];\n}\n\nexport function updateIgnoredSettings(targetContent: string, sourceContent: string, ignoredSettings: string[], formattingOptions: FormattingOptions): string {\n\tif (ignoredSettings.length) {\n\t\tconst sourceTree = parseSettings(sourceContent);\n\t\tconst source = parse(sourceContent);\n\t\tconst target = parse(targetContent);\n\t\tconst settingsToAdd: INode[] = [];\n\t\tfor (const key of ignoredSettings) {\n\t\t\tconst sourceValue = source[key];\n\t\t\tconst targetValue = target[key];\n\n\t\t\t// Remove in target\n\t\t\tif (sourceValue === undefined) {\n\t\t\t\ttargetContent = contentUtil.edit(targetContent, [key], undefined, formattingOptions);\n\t\t\t}\n\n\t\t\t// Update in target\n\t\t\telse if (targetValue !== undefined) {\n\t\t\t\ttargetContent = contentUtil.edit(targetContent, [key], sourceValue, formattingOptions);\n\t\t\t}\n\n\t\t\telse {\n\t\t\t\tsettingsToAdd.push(findSettingNode(key, sourceTree)!);\n\t\t\t}\n\t\t}\n\n\t\tsettingsToAdd.sort((a, b) => a.startOffset - b.startOffset);\n\t\tsettingsToAdd.forEach(s => targetContent = addSetting(s.setting!.key, sourceContent, targetContent, formattingOptions));\n\t}\n\treturn targetContent;\n}\n\nexport function merge(originalLocalContent: string, originalRemoteContent: string, baseContent: string | null, ignoredSettings: string[], resolvedConflicts: { key: string, value: any | undefined }[], formattingOptions: FormattingOptions): IMergeResult {\n\n\tconst localContentWithoutIgnoredSettings = updateIgnoredSettings(originalLocalContent, originalRemoteContent, ignoredSettings, formattingOptions);\n\tconst localForwarded = baseContent !== localContentWithoutIgnoredSettings;\n\tconst remoteForwarded = baseContent !== originalRemoteContent;\n\n\t/* no changes */\n\tif (!localForwarded && !remoteForwarded) {\n\t\treturn { conflictsSettings: [], localContent: null, remoteContent: null, hasConflicts: false };\n\t}\n\n\t/* local has changed and remote has not */\n\tif (localForwarded && !remoteForwarded) {\n\t\treturn { conflictsSettings: [], localContent: null, remoteContent: localContentWithoutIgnoredSettings, hasConflicts: false };\n\t}\n\n\t/* remote has changed and local has not */\n\tif (remoteForwarded && !localForwarded) {\n\t\treturn { conflictsSettings: [], localContent: updateIgnoredSettings(originalRemoteContent, originalLocalContent, ignoredSettings, formattingOptions), remoteContent: null, hasConflicts: false };\n\t}\n\n\t/* local is empty and not synced before */\n\tif (baseContent === null && isEmpty(originalLocalContent)) {\n\t\tconst localContent = areSame(originalLocalContent, originalRemoteContent, ignoredSettings) ? null : updateIgnoredSettings(originalRemoteContent, originalLocalContent, ignoredSettings, formattingOptions);\n\t\treturn { conflictsSettings: [], localContent, remoteContent: null, hasConflicts: false };\n\t}\n\n\t/* remote and local has changed */\n\tlet localContent = originalLocalContent;\n\tlet remoteContent = originalRemoteContent;\n\tconst local = parse(originalLocalContent);\n\tconst remote = parse(originalRemoteContent);\n\tconst base = baseContent ? parse(baseContent) : null;\n\n\tconst ignored = ignoredSettings.reduce((set, key) => { set.add(key); return set; }, new Set<string>());\n\tconst localToRemote = compare(local, remote, ignored);\n\tconst baseToLocal = compare(base, local, ignored);\n\tconst baseToRemote = compare(base, remote, ignored);\n\n\tconst conflicts: Map<string, IConflictSetting> = new Map<string, IConflictSetting>();\n\tconst handledConflicts: Set<string> = new Set<string>();\n\tconst handleConflict = (conflictKey: string): void => {\n\t\thandledConflicts.add(conflictKey);\n\t\tconst resolvedConflict = resolvedConflicts.filter(({ key }) => key === conflictKey)[0];\n\t\tif (resolvedConflict) {\n\t\t\tlocalContent = contentUtil.edit(localContent, [conflictKey], resolvedConflict.value, formattingOptions);\n\t\t\tremoteContent = contentUtil.edit(remoteContent, [conflictKey], resolvedConflict.value, formattingOptions);\n\t\t} else {\n\t\t\tconflicts.set(conflictKey, { key: conflictKey, localValue: local[conflictKey], remoteValue: remote[conflictKey] });\n\t\t}\n\t};\n\n\t// Removed settings in Local\n\tfor (const key of baseToLocal.removed.values()) {\n\t\t// Conflict - Got updated in remote.\n\t\tif (baseToRemote.updated.has(key)) {\n\t\t\thandleConflict(key);\n\t\t}\n\t\t// Also remove in remote\n\t\telse {\n\t\t\tremoteContent = contentUtil.edit(remoteContent, [key], undefined, formattingOptions);\n\t\t}\n\t}\n\n\t// Removed settings in Remote\n\tfor (const key of baseToRemote.removed.values()) {\n\t\tif (handledConflicts.has(key)) {\n\t\t\tcontinue;\n\t\t}\n\t\t// Conflict - Got updated in local\n\t\tif (baseToLocal.updated.has(key)) {\n\t\t\thandleConflict(key);\n\t\t}\n\t\t// Also remove in locals\n\t\telse {\n\t\t\tlocalContent = contentUtil.edit(localContent, [key], undefined, formattingOptions);\n\t\t}\n\t}\n\n\t// Updated settings in Local\n\tfor (const key of baseToLocal.updated.values()) {\n\t\tif (handledConflicts.has(key)) {\n\t\t\tcontinue;\n\t\t}\n\t\t// Got updated in remote\n\t\tif (baseToRemote.updated.has(key)) {\n\t\t\t// Has different value\n\t\t\tif (localToRemote.updated.has(key)) {\n\t\t\t\thandleConflict(key);\n\t\t\t}\n\t\t} else {\n\t\t\tremoteContent = contentUtil.edit(remoteContent, [key], local[key], formattingOptions);\n\t\t}\n\t}\n\n\t// Updated settings in Remote\n\tfor (const key of baseToRemote.updated.values()) {\n\t\tif (handledConflicts.has(key)) {\n\t\t\tcontinue;\n\t\t}\n\t\t// Got updated in local\n\t\tif (baseToLocal.updated.has(key)) {\n\t\t\t// Has different value\n\t\t\tif (localToRemote.updated.has(key)) {\n\t\t\t\thandleConflict(key);\n\t\t\t}\n\t\t} else {\n\t\t\tlocalContent = contentUtil.edit(localContent, [key], remote[key], formattingOptions);\n\t\t}\n\t}\n\n\t// Added settings in Local\n\tfor (const key of baseToLocal.added.values()) {\n\t\tif (handledConflicts.has(key)) {\n\t\t\tcontinue;\n\t\t}\n\t\t// Got added in remote\n\t\tif (baseToRemote.added.has(key)) {\n\t\t\t// Has different value\n\t\t\tif (localToRemote.updated.has(key)) {\n\t\t\t\thandleConflict(key);\n\t\t\t}\n\t\t} else {\n\t\t\tremoteContent = addSetting(key, localContent, remoteContent, formattingOptions);\n\t\t}\n\t}\n\n\t// Added settings in remote\n\tfor (const key of baseToRemote.added.values()) {\n\t\tif (handledConflicts.has(key)) {\n\t\t\tcontinue;\n\t\t}\n\t\t// Got added in local\n\t\tif (baseToLocal.added.has(key)) {\n\t\t\t// Has different value\n\t\t\tif (localToRemote.updated.has(key)) {\n\t\t\t\thandleConflict(key);\n\t\t\t}\n\t\t} else {\n\t\t\tlocalContent = addSetting(key, remoteContent, localContent, formattingOptions);\n\t\t}\n\t}\n\n\tconst hasConflicts = conflicts.size > 0 || !areSame(localContent, remoteContent, ignoredSettings);\n\tconst hasLocalChanged = hasConflicts || !areSame(localContent, originalLocalContent, []);\n\tconst hasRemoteChanged = hasConflicts || !areSame(remoteContent, originalRemoteContent, []);\n\treturn { localContent: hasLocalChanged ? localContent : null, remoteContent: hasRemoteChanged ? remoteContent : null, conflictsSettings: [...conflicts.values()], hasConflicts };\n}\n\nexport function areSame(localContent: string, remoteContent: string, ignoredSettings: string[]): boolean {\n\tif (localContent === remoteContent) {\n\t\treturn true;\n\t}\n\n\tconst local = parse(localContent);\n\tconst remote = parse(remoteContent);\n\tconst ignored = ignoredSettings.reduce((set, key) => { set.add(key); return set; }, new Set<string>());\n\tconst localTree = parseSettings(localContent).filter(node => !(node.setting && ignored.has(node.setting.key)));\n\tconst remoteTree = parseSettings(remoteContent).filter(node => !(node.setting && ignored.has(node.setting.key)));\n\n\tif (localTree.length !== remoteTree.length) {\n\t\treturn false;\n\t}\n\n\tfor (let index = 0; index < localTree.length; index++) {\n\t\tconst localNode = localTree[index];\n\t\tconst remoteNode = remoteTree[index];\n\t\tif (localNode.setting && remoteNode.setting) {\n\t\t\tif (localNode.setting.key !== remoteNode.setting.key) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif (!objects.equals(local[localNode.setting.key], remote[localNode.setting.key])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else if (!localNode.setting && !remoteNode.setting) {\n\t\t\tif (localNode.value !== remoteNode.value) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function isEmpty(content: string): boolean {\n\tif (content) {\n\t\tconst nodes = parseSettings(content);\n\t\treturn nodes.length === 0;\n\t}\n\treturn true;\n}\n\nfunction compare(from: IStringDictionary<any> | null, to: IStringDictionary<any>, ignored: Set<string>): { added: Set<string>, removed: Set<string>, updated: Set<string> } {\n\tconst fromKeys = from ? Object.keys(from).filter(key => !ignored.has(key)) : [];\n\tconst toKeys = Object.keys(to).filter(key => !ignored.has(key));\n\tconst added = toKeys.filter(key => fromKeys.indexOf(key) === -1).reduce((r, key) => { r.add(key); return r; }, new Set<string>());\n\tconst removed = fromKeys.filter(key => toKeys.indexOf(key) === -1).reduce((r, key) => { r.add(key); return r; }, new Set<string>());\n\tconst updated: Set<string> = new Set<string>();\n\n\tif (from) {\n\t\tfor (const key of fromKeys) {\n\t\t\tif (removed.has(key)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst value1 = from[key];\n\t\t\tconst value2 = to[key];\n\t\t\tif (!objects.equals(value1, value2)) {\n\t\t\t\tupdated.add(key);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { added, removed, updated };\n}\n\nexport function addSetting(key: string, sourceContent: string, targetContent: string, formattingOptions: FormattingOptions): string {\n\tconst source = parse(sourceContent);\n\tconst sourceTree = parseSettings(sourceContent);\n\tconst targetTree = parseSettings(targetContent);\n\tconst insertLocation = getInsertLocation(key, sourceTree, targetTree);\n\treturn insertAtLocation(targetContent, key, source[key], insertLocation, targetTree, formattingOptions);\n}\n\ninterface InsertLocation {\n\tindex: number,\n\tinsertAfter: boolean;\n}\n\nfunction getInsertLocation(key: string, sourceTree: INode[], targetTree: INode[]): InsertLocation {\n\n\tconst sourceNodeIndex = sourceTree.findIndex(node => node.setting?.key === key);\n\n\tconst sourcePreviousNode: INode = sourceTree[sourceNodeIndex - 1];\n\tif (sourcePreviousNode) {\n\t\t/*\n\t\t\tPrevious node in source is a setting.\n\t\t\tFind the same setting in the target.\n\t\t\tInsert it after that setting\n\t\t*/\n\t\tif (sourcePreviousNode.setting) {\n\t\t\tconst targetPreviousSetting = findSettingNode(sourcePreviousNode.setting.key, targetTree);\n\t\t\tif (targetPreviousSetting) {\n\t\t\t\t/* Insert after target's previous setting */\n\t\t\t\treturn { index: targetTree.indexOf(targetPreviousSetting), insertAfter: true };\n\t\t\t}\n\t\t}\n\t\t/* Previous node in source is a comment */\n\t\telse {\n\t\t\tconst sourcePreviousSettingNode = findPreviousSettingNode(sourceNodeIndex, sourceTree);\n\t\t\t/*\n\t\t\t\tSource has a setting defined before the setting to be added.\n\t\t\t\tFind the same previous setting in the target.\n\t\t\t\tIf found, insert before its next setting so that comments are retrieved.\n\t\t\t\tOtherwise, insert at the end.\n\t\t\t*/\n\t\t\tif (sourcePreviousSettingNode) {\n\t\t\t\tconst targetPreviousSetting = findSettingNode(sourcePreviousSettingNode.setting!.key, targetTree);\n\t\t\t\tif (targetPreviousSetting) {\n\t\t\t\t\tconst targetNextSetting = findNextSettingNode(targetTree.indexOf(targetPreviousSetting), targetTree);\n\t\t\t\t\tconst sourceCommentNodes = findNodesBetween(sourceTree, sourcePreviousSettingNode, sourceTree[sourceNodeIndex]);\n\t\t\t\t\tif (targetNextSetting) {\n\t\t\t\t\t\tconst targetCommentNodes = findNodesBetween(targetTree, targetPreviousSetting, targetNextSetting);\n\t\t\t\t\t\tconst targetCommentNode = findLastMatchingTargetCommentNode(sourceCommentNodes, targetCommentNodes);\n\t\t\t\t\t\tif (targetCommentNode) {\n\t\t\t\t\t\t\treturn { index: targetTree.indexOf(targetCommentNode), insertAfter: true }; /* Insert after comment */\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn { index: targetTree.indexOf(targetNextSetting), insertAfter: false }; /* Insert before target next setting */\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst targetCommentNodes = findNodesBetween(targetTree, targetPreviousSetting, targetTree[targetTree.length - 1]);\n\t\t\t\t\t\tconst targetCommentNode = findLastMatchingTargetCommentNode(sourceCommentNodes, targetCommentNodes);\n\t\t\t\t\t\tif (targetCommentNode) {\n\t\t\t\t\t\t\treturn { index: targetTree.indexOf(targetCommentNode), insertAfter: true }; /* Insert after comment */\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn { index: targetTree.length - 1, insertAfter: true }; /* Insert at the end */\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst sourceNextNode = sourceTree[sourceNodeIndex + 1];\n\t\tif (sourceNextNode) {\n\t\t\t/*\n\t\t\t\tNext node in source is a setting.\n\t\t\t\tFind the same setting in the target.\n\t\t\t\tInsert it before that setting\n\t\t\t*/\n\t\t\tif (sourceNextNode.setting) {\n\t\t\t\tconst targetNextSetting = findSettingNode(sourceNextNode.setting.key, targetTree);\n\t\t\t\tif (targetNextSetting) {\n\t\t\t\t\t/* Insert before target's next setting */\n\t\t\t\t\treturn { index: targetTree.indexOf(targetNextSetting), insertAfter: false };\n\t\t\t\t}\n\t\t\t}\n\t\t\t/* Next node in source is a comment */\n\t\t\telse {\n\t\t\t\tconst sourceNextSettingNode = findNextSettingNode(sourceNodeIndex, sourceTree);\n\t\t\t\t/*\n\t\t\t\t\tSource has a setting defined after the setting to be added.\n\t\t\t\t\tFind the same next setting in the target.\n\t\t\t\t\tIf found, insert after its previous setting so that comments are retrieved.\n\t\t\t\t\tOtherwise, insert at the beginning.\n\t\t\t\t*/\n\t\t\t\tif (sourceNextSettingNode) {\n\t\t\t\t\tconst targetNextSetting = findSettingNode(sourceNextSettingNode.setting!.key, targetTree);\n\t\t\t\t\tif (targetNextSetting) {\n\t\t\t\t\t\tconst targetPreviousSetting = findPreviousSettingNode(targetTree.indexOf(targetNextSetting), targetTree);\n\t\t\t\t\t\tconst sourceCommentNodes = findNodesBetween(sourceTree, sourceTree[sourceNodeIndex], sourceNextSettingNode);\n\t\t\t\t\t\tif (targetPreviousSetting) {\n\t\t\t\t\t\t\tconst targetCommentNodes = findNodesBetween(targetTree, targetPreviousSetting, targetNextSetting);\n\t\t\t\t\t\t\tconst targetCommentNode = findLastMatchingTargetCommentNode(sourceCommentNodes.reverse(), targetCommentNodes.reverse());\n\t\t\t\t\t\t\tif (targetCommentNode) {\n\t\t\t\t\t\t\t\treturn { index: targetTree.indexOf(targetCommentNode), insertAfter: false }; /* Insert before comment */\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn { index: targetTree.indexOf(targetPreviousSetting), insertAfter: true }; /* Insert after target previous setting */\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst targetCommentNodes = findNodesBetween(targetTree, targetTree[0], targetNextSetting);\n\t\t\t\t\t\t\tconst targetCommentNode = findLastMatchingTargetCommentNode(sourceCommentNodes.reverse(), targetCommentNodes.reverse());\n\t\t\t\t\t\t\tif (targetCommentNode) {\n\t\t\t\t\t\t\t\treturn { index: targetTree.indexOf(targetCommentNode), insertAfter: false }; /* Insert before comment */\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn { index: 0, insertAfter: false }; /* Insert at the beginning */\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t/* Insert at the end */\n\treturn { index: targetTree.length - 1, insertAfter: true };\n}\n\nfunction insertAtLocation(content: string, key: string, value: any, location: InsertLocation, tree: INode[], formattingOptions: FormattingOptions): string {\n\tlet edits: Edit[];\n\t/* Insert at the end */\n\tif (location.index === -1) {\n\t\tedits = setProperty(content, [key], value, formattingOptions);\n\t} else {\n\t\tedits = getEditToInsertAtLocation(content, key, value, location, tree, formattingOptions).map(edit => withFormatting(content, edit, formattingOptions)[0]);\n\t}\n\treturn applyEdits(content, edits);\n}\n\nfunction getEditToInsertAtLocation(content: string, key: string, value: any, location: InsertLocation, tree: INode[], formattingOptions: FormattingOptions): Edit[] {\n\tconst newProperty = `${JSON.stringify(key)}: ${JSON.stringify(value)}`;\n\tconst eol = getEOL(formattingOptions, content);\n\tconst node = tree[location.index];\n\n\tif (location.insertAfter) {\n\n\t\tconst edits: Edit[] = [];\n\n\t\t/* Insert after a setting */\n\t\tif (node.setting) {\n\t\t\tedits.push({ offset: node.endOffset, length: 0, content: ',' + newProperty });\n\t\t}\n\n\t\t/* Insert after a comment */\n\t\telse {\n\n\t\t\tconst nextSettingNode = findNextSettingNode(location.index, tree);\n\t\t\tconst previousSettingNode = findPreviousSettingNode(location.index, tree);\n\t\t\tconst previousSettingCommaOffset = previousSettingNode?.setting?.commaOffset;\n\n\t\t\t/* If there is a previous setting and it does not has comma then add it */\n\t\t\tif (previousSettingNode && previousSettingCommaOffset === undefined) {\n\t\t\t\tedits.push({ offset: previousSettingNode.endOffset, length: 0, content: ',' });\n\t\t\t}\n\n\t\t\tconst isPreviouisSettingIncludesComment = previousSettingCommaOffset !== undefined && previousSettingCommaOffset > node.endOffset;\n\t\t\tedits.push({\n\t\t\t\toffset: isPreviouisSettingIncludesComment ? previousSettingCommaOffset! + 1 : node.endOffset,\n\t\t\t\tlength: 0,\n\t\t\t\tcontent: nextSettingNode ? eol + newProperty + ',' : eol + newProperty\n\t\t\t});\n\t\t}\n\n\n\t\treturn edits;\n\t}\n\n\telse {\n\n\t\t/* Insert before a setting */\n\t\tif (node.setting) {\n\t\t\treturn [{ offset: node.startOffset, length: 0, content: newProperty + ',' }];\n\t\t}\n\n\t\t/* Insert before a comment */\n\t\tconst content = (tree[location.index - 1] && !tree[location.index - 1].setting /* previous node is comment */ ? eol : '')\n\t\t\t+ newProperty\n\t\t\t+ (findNextSettingNode(location.index, tree) ? ',' : '')\n\t\t\t+ eol;\n\t\treturn [{ offset: node.startOffset, length: 0, content }];\n\t}\n\n}\n\nfunction findSettingNode(key: string, tree: INode[]): INode | undefined {\n\treturn tree.filter(node => node.setting?.key === key)[0];\n}\n\nfunction findPreviousSettingNode(index: number, tree: INode[]): INode | undefined {\n\tfor (let i = index - 1; i >= 0; i--) {\n\t\tif (tree[i].setting) {\n\t\t\treturn tree[i];\n\t\t}\n\t}\n\treturn undefined;\n}\n\nfunction findNextSettingNode(index: number, tree: INode[]): INode | undefined {\n\tfor (let i = index + 1; i < tree.length; i++) {\n\t\tif (tree[i].setting) {\n\t\t\treturn tree[i];\n\t\t}\n\t}\n\treturn undefined;\n}\n\nfunction findNodesBetween(nodes: INode[], from: INode, till: INode): INode[] {\n\tconst fromIndex = nodes.indexOf(from);\n\tconst tillIndex = nodes.indexOf(till);\n\treturn nodes.filter((node, index) => fromIndex < index && index < tillIndex);\n}\n\nfunction findLastMatchingTargetCommentNode(sourceComments: INode[], targetComments: INode[]): INode | undefined {\n\tif (sourceComments.length && targetComments.length) {\n\t\tlet index = 0;\n\t\tfor (; index < targetComments.length && index < sourceComments.length; index++) {\n\t\t\tif (sourceComments[index].value !== targetComments[index].value) {\n\t\t\t\treturn targetComments[index - 1];\n\t\t\t}\n\t\t}\n\t\treturn targetComments[index - 1];\n\t}\n\treturn undefined;\n}\n\ninterface INode {\n\treadonly startOffset: number;\n\treadonly endOffset: number;\n\treadonly value: string;\n\treadonly setting?: {\n\t\treadonly key: string;\n\t\treadonly commaOffset: number | undefined;\n\t};\n\treadonly comment?: string;\n}\n\nfunction parseSettings(content: string): INode[] {\n\tconst nodes: INode[] = [];\n\tlet hierarchyLevel = -1;\n\tlet startOffset: number;\n\tlet key: string;\n\n\tconst visitor: JSONVisitor = {\n\t\tonObjectBegin: (offset: number) => {\n\t\t\thierarchyLevel++;\n\t\t},\n\t\tonObjectProperty: (name: string, offset: number, length: number) => {\n\t\t\tif (hierarchyLevel === 0) {\n\t\t\t\t// this is setting key\n\t\t\t\tstartOffset = offset;\n\t\t\t\tkey = name;\n\t\t\t}\n\t\t},\n\t\tonObjectEnd: (offset: number, length: number) => {\n\t\t\thierarchyLevel--;\n\t\t\tif (hierarchyLevel === 0) {\n\t\t\t\tnodes.push({\n\t\t\t\t\tstartOffset,\n\t\t\t\t\tendOffset: offset + length,\n\t\t\t\t\tvalue: content.substring(startOffset, offset + length),\n\t\t\t\t\tsetting: {\n\t\t\t\t\t\tkey,\n\t\t\t\t\t\tcommaOffset: undefined\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tonArrayBegin: (offset: number, length: number) => {\n\t\t\thierarchyLevel++;\n\t\t},\n\t\tonArrayEnd: (offset: number, length: number) => {\n\t\t\thierarchyLevel--;\n\t\t\tif (hierarchyLevel === 0) {\n\t\t\t\tnodes.push({\n\t\t\t\t\tstartOffset,\n\t\t\t\t\tendOffset: offset + length,\n\t\t\t\t\tvalue: content.substring(startOffset, offset + length),\n\t\t\t\t\tsetting: {\n\t\t\t\t\t\tkey,\n\t\t\t\t\t\tcommaOffset: undefined\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tonLiteralValue: (value: any, offset: number, length: number) => {\n\t\t\tif (hierarchyLevel === 0) {\n\t\t\t\tnodes.push({\n\t\t\t\t\tstartOffset,\n\t\t\t\t\tendOffset: offset + length,\n\t\t\t\t\tvalue: content.substring(startOffset, offset + length),\n\t\t\t\t\tsetting: {\n\t\t\t\t\t\tkey,\n\t\t\t\t\t\tcommaOffset: undefined\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tonSeparator: (sep: string, offset: number, length: number) => {\n\t\t\tif (hierarchyLevel === 0) {\n\t\t\t\tif (sep === ',') {\n\t\t\t\t\tlet index = nodes.length - 1;\n\t\t\t\t\tfor (; index >= 0; index--) {\n\t\t\t\t\t\tif (nodes[index].setting) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tconst node = nodes[index];\n\t\t\t\t\tif (node) {\n\t\t\t\t\t\tnodes.splice(index, 1, {\n\t\t\t\t\t\t\tstartOffset: node.startOffset,\n\t\t\t\t\t\t\tendOffset: node.endOffset,\n\t\t\t\t\t\t\tvalue: node.value,\n\t\t\t\t\t\t\tsetting: {\n\t\t\t\t\t\t\t\tkey: node.setting!.key,\n\t\t\t\t\t\t\t\tcommaOffset: offset\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonComment: (offset: number, length: number) => {\n\t\t\tif (hierarchyLevel === 0) {\n\t\t\t\tnodes.push({\n\t\t\t\t\tstartOffset: offset,\n\t\t\t\t\tendOffset: offset + length,\n\t\t\t\t\tvalue: content.substring(offset, offset + length),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\tvisit(content, visitor);\n\treturn nodes;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Event } from 'vs/base/common/event';\nimport { applyEdits, setProperty } from 'vs/base/common/jsonEdit';\nimport { Edit } from 'vs/base/common/jsonFormatter';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { ConfigurationTarget, IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationModelParser } from 'vs/platform/configuration/common/configurationModels';\nimport { IUserConfigurationFileService } from 'vs/platform/configuration/common/userConfigurationFileService';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IExtensionManagementService } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { FileOperationError, FileOperationResult, IFileContent, IFileService } from 'vs/platform/files/common/files';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { AbstractInitializer, AbstractJsonFileSynchroniser, IAcceptResult, IFileResourcePreview, IMergeResult } from 'vs/platform/userDataSync/common/abstractSynchronizer';\nimport { edit } from 'vs/platform/userDataSync/common/content';\nimport { getIgnoredSettings, isEmpty, merge, updateIgnoredSettings } from 'vs/platform/userDataSync/common/settingsMerge';\nimport { Change, CONFIGURATION_SYNC_STORE_KEY, IRemoteUserData, ISyncData, ISyncResourceHandle, IUserDataManifest, IUserDataSyncBackupStoreService, IUserDataSyncConfiguration, IUserDataSynchroniser, IUserDataSyncLogService, IUserDataSyncResourceEnablementService, IUserDataSyncStoreService, IUserDataSyncUtilService, SyncResource, UserDataSyncError, UserDataSyncErrorCode, USER_DATA_SYNC_CONFIGURATION_SCOPE, USER_DATA_SYNC_SCHEME } from 'vs/platform/userDataSync/common/userDataSync';\n\ninterface ISettingsResourcePreview extends IFileResourcePreview {\n\tpreviewResult: IMergeResult;\n}\n\nexport interface ISettingsSyncContent {\n\tsettings: string;\n}\n\nfunction isSettingsSyncContent(thing: any): thing is ISettingsSyncContent {\n\treturn thing\n\t\t&& (thing.settings && typeof thing.settings === 'string')\n\t\t&& Object.keys(thing).length === 1;\n}\n\nexport function parseSettingsSyncContent(syncContent: string): ISettingsSyncContent {\n\tconst parsed = <ISettingsSyncContent>JSON.parse(syncContent);\n\treturn isSettingsSyncContent(parsed) ? parsed : /* migrate */ { settings: syncContent };\n}\n\nexport class SettingsSynchroniser extends AbstractJsonFileSynchroniser implements IUserDataSynchroniser {\n\n\t/* Version 2: Change settings from `sync.${setting}` to `settingsSync.{setting}` */\n\tprotected readonly version: number = 2;\n\treadonly previewResource: URI = this.extUri.joinPath(this.syncPreviewFolder, 'settings.json');\n\treadonly localResource: URI = this.previewResource.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'local' });\n\treadonly remoteResource: URI = this.previewResource.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'remote' });\n\treadonly acceptedResource: URI = this.previewResource.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'accepted' });\n\n\tconstructor(\n\t\t@IFileService fileService: IFileService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IUserDataSyncStoreService userDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncBackupStoreService userDataSyncBackupStoreService: IUserDataSyncBackupStoreService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IUserDataSyncUtilService userDataSyncUtilService: IUserDataSyncUtilService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IUserDataSyncResourceEnablementService userDataSyncResourceEnablementService: IUserDataSyncResourceEnablementService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IUserConfigurationFileService private readonly userConfigurationFileService: IUserConfigurationFileService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(environmentService.settingsResource, SyncResource.Settings, fileService, environmentService, storageService, userDataSyncStoreService, userDataSyncBackupStoreService, userDataSyncResourceEnablementService, telemetryService, logService, userDataSyncUtilService, configurationService, uriIdentityService);\n\t}\n\n\tasync getRemoteUserDataSyncConfiguration(manifest: IUserDataManifest | null): Promise<IUserDataSyncConfiguration> {\n\t\tconst lastSyncUserData = await this.getLastSyncUserData();\n\t\tconst remoteUserData = await this.getLatestRemoteUserData(manifest, lastSyncUserData);\n\t\tconst remoteSettingsSyncContent = this.getSettingsSyncContent(remoteUserData);\n\t\tconst parser = new ConfigurationModelParser(USER_DATA_SYNC_CONFIGURATION_SCOPE);\n\t\tif (remoteSettingsSyncContent?.settings) {\n\t\t\tparser.parse(remoteSettingsSyncContent.settings);\n\t\t}\n\t\treturn parser.configurationModel.getValue(USER_DATA_SYNC_CONFIGURATION_SCOPE) || {};\n\t}\n\n\tprotected async generateSyncPreview(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, isRemoteDataFromCurrentMachine: boolean): Promise<ISettingsResourcePreview[]> {\n\t\tconst fileContent = await this.getLocalFileContent();\n\t\tconst formattingOptions = await this.getFormattingOptions();\n\t\tconst remoteSettingsSyncContent = this.getSettingsSyncContent(remoteUserData);\n\n\t\t// Use remote data as last sync data if last sync data does not exist and remote data is from same machine\n\t\tlastSyncUserData = lastSyncUserData === null && isRemoteDataFromCurrentMachine ? remoteUserData : lastSyncUserData;\n\t\tconst lastSettingsSyncContent: ISettingsSyncContent | null = lastSyncUserData ? this.getSettingsSyncContent(lastSyncUserData) : null;\n\t\tconst ignoredSettings = await this.getIgnoredSettings();\n\n\t\tlet mergedContent: string | null = null;\n\t\tlet hasLocalChanged: boolean = false;\n\t\tlet hasRemoteChanged: boolean = false;\n\t\tlet hasConflicts: boolean = false;\n\n\t\tif (remoteSettingsSyncContent) {\n\t\t\tlet localContent: string = fileContent ? fileContent.value.toString().trim() : '{}';\n\t\t\tlocalContent = localContent || '{}';\n\t\t\tthis.validateContent(localContent);\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Merging remote settings with local settings...`);\n\t\t\tconst result = merge(localContent, remoteSettingsSyncContent.settings, lastSettingsSyncContent ? lastSettingsSyncContent.settings : null, ignoredSettings, [], formattingOptions);\n\t\t\tmergedContent = result.localContent || result.remoteContent;\n\t\t\thasLocalChanged = result.localContent !== null;\n\t\t\thasRemoteChanged = result.remoteContent !== null;\n\t\t\thasConflicts = result.hasConflicts;\n\t\t}\n\n\t\t// First time syncing to remote\n\t\telse if (fileContent) {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Remote settings does not exist. Synchronizing settings for the first time.`);\n\t\t\tmergedContent = fileContent.value.toString();\n\t\t\thasRemoteChanged = true;\n\t\t}\n\n\t\tconst previewResult = {\n\t\t\tcontent: mergedContent,\n\t\t\tlocalChange: hasLocalChanged ? Change.Modified : Change.None,\n\t\t\tremoteChange: hasRemoteChanged ? Change.Modified : Change.None,\n\t\t\thasConflicts\n\t\t};\n\n\t\treturn [{\n\t\t\tfileContent,\n\t\t\tlocalResource: this.localResource,\n\t\t\tlocalContent: fileContent ? fileContent.value.toString() : null,\n\t\t\tlocalChange: previewResult.localChange,\n\n\t\t\tremoteResource: this.remoteResource,\n\t\t\tremoteContent: remoteSettingsSyncContent ? remoteSettingsSyncContent.settings : null,\n\t\t\tremoteChange: previewResult.remoteChange,\n\n\t\t\tpreviewResource: this.previewResource,\n\t\t\tpreviewResult,\n\t\t\tacceptedResource: this.acceptedResource,\n\t\t}];\n\t}\n\n\tprotected async getMergeResult(resourcePreview: ISettingsResourcePreview, token: CancellationToken): Promise<IMergeResult> {\n\t\tconst formatUtils = await this.getFormattingOptions();\n\t\tconst ignoredSettings = await this.getIgnoredSettings();\n\t\treturn {\n\t\t\t...resourcePreview.previewResult,\n\n\t\t\t// remove ignored settings from the preview content\n\t\t\tcontent: resourcePreview.previewResult.content ? updateIgnoredSettings(resourcePreview.previewResult.content, '{}', ignoredSettings, formatUtils) : null\n\t\t};\n\t}\n\n\tprotected async getAcceptResult(resourcePreview: ISettingsResourcePreview, resource: URI, content: string | null | undefined, token: CancellationToken): Promise<IAcceptResult> {\n\n\t\tconst formattingOptions = await this.getFormattingOptions();\n\t\tconst ignoredSettings = await this.getIgnoredSettings();\n\n\t\t/* Accept local resource */\n\t\tif (this.extUri.isEqual(resource, this.localResource)) {\n\t\t\treturn {\n\t\t\t\t/* Remove ignored settings */\n\t\t\t\tcontent: resourcePreview.fileContent ? updateIgnoredSettings(resourcePreview.fileContent.value.toString(), '{}', ignoredSettings, formattingOptions) : null,\n\t\t\t\tlocalChange: Change.None,\n\t\t\t\tremoteChange: Change.Modified,\n\t\t\t};\n\t\t}\n\n\t\t/* Accept remote resource */\n\t\tif (this.extUri.isEqual(resource, this.remoteResource)) {\n\t\t\treturn {\n\t\t\t\t/* Update ignored settings from local file content */\n\t\t\t\tcontent: resourcePreview.remoteContent !== null ? updateIgnoredSettings(resourcePreview.remoteContent, resourcePreview.fileContent ? resourcePreview.fileContent.value.toString() : '{}', ignoredSettings, formattingOptions) : null,\n\t\t\t\tlocalChange: Change.Modified,\n\t\t\t\tremoteChange: Change.None,\n\t\t\t};\n\t\t}\n\n\t\t/* Accept preview resource */\n\t\tif (this.extUri.isEqual(resource, this.previewResource)) {\n\t\t\tif (content === undefined) {\n\t\t\t\treturn {\n\t\t\t\t\tcontent: resourcePreview.previewResult.content,\n\t\t\t\t\tlocalChange: resourcePreview.previewResult.localChange,\n\t\t\t\t\tremoteChange: resourcePreview.previewResult.remoteChange,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\t/* Add ignored settings from local file content */\n\t\t\t\t\tcontent: content !== null ? updateIgnoredSettings(content, resourcePreview.fileContent ? resourcePreview.fileContent.value.toString() : '{}', ignoredSettings, formattingOptions) : null,\n\t\t\t\t\tlocalChange: Change.Modified,\n\t\t\t\t\tremoteChange: Change.Modified,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(`Invalid Resource: ${resource.toString()}`);\n\t}\n\n\tprotected async applyResult(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, resourcePreviews: [ISettingsResourcePreview, IAcceptResult][], force: boolean): Promise<void> {\n\t\tconst { fileContent } = resourcePreviews[0][0];\n\t\tlet { content, localChange, remoteChange } = resourcePreviews[0][1];\n\n\t\tif (localChange === Change.None && remoteChange === Change.None) {\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: No changes found during synchronizing settings.`);\n\t\t}\n\n\t\tcontent = content ? content.trim() : '{}';\n\t\tcontent = content || '{}';\n\t\tthis.validateContent(content);\n\n\t\tif (localChange !== Change.None) {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Updating local settings...`);\n\t\t\tif (fileContent) {\n\t\t\t\tawait this.backupLocal(JSON.stringify(this.toSettingsSyncContent(fileContent.value.toString())));\n\t\t\t}\n\t\t\tawait this.updateLocalFileContent(content, fileContent, force);\n\t\t\tawait this.configurationService.reloadConfiguration(ConfigurationTarget.USER_LOCAL);\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Updated local settings`);\n\t\t}\n\n\t\tif (remoteChange !== Change.None) {\n\t\t\tconst formatUtils = await this.getFormattingOptions();\n\t\t\t// Update ignored settings from remote\n\t\t\tconst remoteSettingsSyncContent = this.getSettingsSyncContent(remoteUserData);\n\t\t\tconst ignoredSettings = await this.getIgnoredSettings(content);\n\t\t\tcontent = updateIgnoredSettings(content, remoteSettingsSyncContent ? remoteSettingsSyncContent.settings : '{}', ignoredSettings, formatUtils);\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Updating remote settings...`);\n\t\t\tremoteUserData = await this.updateRemoteUserData(JSON.stringify(this.toSettingsSyncContent(content)), force ? null : remoteUserData.ref);\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Updated remote settings`);\n\t\t}\n\n\t\t// Delete the preview\n\t\ttry {\n\t\t\tawait this.fileService.del(this.previewResource);\n\t\t} catch (e) { /* ignore */ }\n\n\t\tif (lastSyncUserData?.ref !== remoteUserData.ref) {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Updating last synchronized settings...`);\n\t\t\tawait this.updateLastSyncUserData(remoteUserData);\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Updated last synchronized settings`);\n\t\t}\n\n\t}\n\n\tasync hasLocalData(): Promise<boolean> {\n\t\ttry {\n\t\t\tconst localFileContent = await this.getLocalFileContent();\n\t\t\tif (localFileContent) {\n\t\t\t\tconst formatUtils = await this.getFormattingOptions();\n\t\t\t\tconst content = edit(localFileContent.value.toString(), [CONFIGURATION_SYNC_STORE_KEY], undefined, formatUtils);\n\t\t\t\treturn !isEmpty(content);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif ((<FileOperationError>error).fileOperationResult !== FileOperationResult.FILE_NOT_FOUND) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tasync getAssociatedResources({ uri }: ISyncResourceHandle): Promise<{ resource: URI, comparableResource: URI }[]> {\n\t\tconst comparableResource = (await this.fileService.exists(this.file)) ? this.file : this.localResource;\n\t\treturn [{ resource: this.extUri.joinPath(uri, 'settings.json'), comparableResource }];\n\t}\n\n\toverride async resolveContent(uri: URI): Promise<string | null> {\n\t\tif (this.extUri.isEqual(this.remoteResource, uri) || this.extUri.isEqual(this.localResource, uri) || this.extUri.isEqual(this.acceptedResource, uri)) {\n\t\t\treturn this.resolvePreviewContent(uri);\n\t\t}\n\t\tlet content = await super.resolveContent(uri);\n\t\tif (content) {\n\t\t\treturn content;\n\t\t}\n\t\tcontent = await super.resolveContent(this.extUri.dirname(uri));\n\t\tif (content) {\n\t\t\tconst syncData = this.parseSyncData(content);\n\t\t\tif (syncData) {\n\t\t\t\tconst settingsSyncContent = this.parseSettingsSyncContent(syncData.content);\n\t\t\t\tif (settingsSyncContent) {\n\t\t\t\t\tswitch (this.extUri.basename(uri)) {\n\t\t\t\t\t\tcase 'settings.json':\n\t\t\t\t\t\t\treturn settingsSyncContent.settings;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprotected override async resolvePreviewContent(resource: URI): Promise<string | null> {\n\t\tlet content = await super.resolvePreviewContent(resource);\n\t\tif (content) {\n\t\t\tconst formatUtils = await this.getFormattingOptions();\n\t\t\t// remove ignored settings from the preview content\n\t\t\tconst ignoredSettings = await this.getIgnoredSettings();\n\t\t\tcontent = updateIgnoredSettings(content, '{}', ignoredSettings, formatUtils);\n\t\t}\n\t\treturn content;\n\t}\n\n\tprivate getSettingsSyncContent(remoteUserData: IRemoteUserData): ISettingsSyncContent | null {\n\t\treturn remoteUserData.syncData ? this.parseSettingsSyncContent(remoteUserData.syncData.content) : null;\n\t}\n\n\tprivate parseSettingsSyncContent(syncContent: string): ISettingsSyncContent | null {\n\t\ttry {\n\t\t\treturn parseSettingsSyncContent(syncContent);\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate toSettingsSyncContent(settings: string): ISettingsSyncContent {\n\t\treturn { settings };\n\t}\n\n\tprivate _defaultIgnoredSettings: Promise<string[]> | undefined = undefined;\n\tprivate async getIgnoredSettings(content?: string): Promise<string[]> {\n\t\tif (!this._defaultIgnoredSettings) {\n\t\t\tthis._defaultIgnoredSettings = this.userDataSyncUtilService.resolveDefaultIgnoredSettings();\n\t\t\tconst disposable = Event.any<any>(\n\t\t\t\tEvent.filter(this.extensionManagementService.onDidInstallExtensions, (e => e.some(({ local }) => !!local))),\n\t\t\t\tEvent.filter(this.extensionManagementService.onDidUninstallExtension, (e => !e.error)))(() => {\n\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\tthis._defaultIgnoredSettings = undefined;\n\t\t\t\t});\n\t\t}\n\t\tconst defaultIgnoredSettings = await this._defaultIgnoredSettings;\n\t\treturn getIgnoredSettings(defaultIgnoredSettings, this.configurationService, content);\n\t}\n\n\tprotected override async writeFileContent(newContent: string, oldContent: IFileContent, force: boolean): Promise<void> {\n\t\tawait this.userConfigurationFileService.write(VSBuffer.fromString(newContent), force ? undefined : { etag: oldContent.etag, mtime: oldContent.mtime });\n\t}\n\n\tprivate validateContent(content: string): void {\n\t\tif (this.hasErrors(content)) {\n\t\t\tthrow new UserDataSyncError(localize('errorInvalidSettings', \"Unable to sync settings as there are errors/warning in settings file.\"), UserDataSyncErrorCode.LocalInvalidContent, this.resource);\n\t\t}\n\t}\n\n\tasync recoverSettings(): Promise<void> {\n\t\ttry {\n\t\t\tconst fileContent = await this.getLocalFileContent();\n\t\t\tif (!fileContent) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst syncData: ISyncData = JSON.parse(fileContent.value.toString());\n\t\t\tif (!isSyncData(syncData)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.telemetryService.publicLog2('sync/settingsCorrupted');\n\t\t\tconst settingsSyncContent = this.parseSettingsSyncContent(syncData.content);\n\t\t\tif (!settingsSyncContent || !settingsSyncContent.settings) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet settings = settingsSyncContent.settings;\n\t\t\tconst formattingOptions = await this.getFormattingOptions();\n\t\t\tfor (const key in syncData) {\n\t\t\t\tif (['version', 'content', 'machineId'].indexOf(key) === -1 && (syncData as any)[key] !== undefined) {\n\t\t\t\t\tconst edits: Edit[] = setProperty(settings, [key], (syncData as any)[key], formattingOptions);\n\t\t\t\t\tif (edits.length) {\n\t\t\t\t\t\tsettings = applyEdits(settings, edits);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tawait this.fileService.writeFile(this.file, VSBuffer.fromString(settings));\n\t\t} catch (e) {/* ignore */ }\n\t}\n}\n\nexport class SettingsInitializer extends AbstractInitializer {\n\n\tconstructor(\n\t\t@IFileService fileService: IFileService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(SyncResource.Settings, environmentService, logService, fileService, uriIdentityService);\n\t}\n\n\tasync doInitialize(remoteUserData: IRemoteUserData): Promise<void> {\n\t\tconst settingsSyncContent = remoteUserData.syncData ? this.parseSettingsSyncContent(remoteUserData.syncData.content) : null;\n\t\tif (!settingsSyncContent) {\n\t\t\tthis.logService.info('Skipping initializing settings because remote settings does not exist.');\n\t\t\treturn;\n\t\t}\n\n\t\tconst isEmpty = await this.isEmpty();\n\t\tif (!isEmpty) {\n\t\t\tthis.logService.info('Skipping initializing settings because local settings exist.');\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.fileService.writeFile(this.environmentService.settingsResource, VSBuffer.fromString(settingsSyncContent.settings));\n\n\t\tawait this.updateLastSyncUserData(remoteUserData);\n\t}\n\n\tprivate async isEmpty(): Promise<boolean> {\n\t\ttry {\n\t\t\tconst fileContent = await this.fileService.readFile(this.environmentService.settingsResource);\n\t\t\treturn isEmpty(fileContent.value.toString().trim());\n\t\t} catch (error) {\n\t\t\treturn (<FileOperationError>error).fileOperationResult === FileOperationResult.FILE_NOT_FOUND;\n\t\t}\n\t}\n\n\tprivate parseSettingsSyncContent(syncContent: string): ISettingsSyncContent | null {\n\t\ttry {\n\t\t\treturn parseSettingsSyncContent(syncContent);\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t}\n\t\treturn null;\n\t}\n\n}\n\nfunction isSyncData(thing: any): thing is ISyncData {\n\tif (thing\n\t\t&& (thing.version !== undefined && typeof thing.version === 'number')\n\t\t&& (thing.content !== undefined && typeof thing.content === 'string')\n\t\t&& (thing.machineId !== undefined && typeof thing.machineId === 'string')\n\t) {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { Event } from 'vs/base/common/event';\nimport { deepClone } from 'vs/base/common/objects';\nimport { URI } from 'vs/base/common/uri';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { FileOperationError, FileOperationResult, IFileContent, IFileService, IFileStat } from 'vs/platform/files/common/files';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { AbstractInitializer, AbstractSynchroniser, IAcceptResult, IFileResourcePreview, IMergeResult } from 'vs/platform/userDataSync/common/abstractSynchronizer';\nimport { areSame, IMergeResult as ISnippetsMergeResult, merge } from 'vs/platform/userDataSync/common/snippetsMerge';\nimport { Change, IRemoteUserData, ISyncData, ISyncResourceHandle, IUserDataSyncBackupStoreService, IUserDataSynchroniser, IUserDataSyncLogService, IUserDataSyncResourceEnablementService, IUserDataSyncStoreService, SyncResource, USER_DATA_SYNC_SCHEME } from 'vs/platform/userDataSync/common/userDataSync';\n\ninterface ISnippetsResourcePreview extends IFileResourcePreview {\n\tpreviewResult: IMergeResult;\n}\n\ninterface ISnippetsAcceptedResourcePreview extends IFileResourcePreview {\n\tacceptResult: IAcceptResult;\n}\n\nexport class SnippetsSynchroniser extends AbstractSynchroniser implements IUserDataSynchroniser {\n\n\tprotected readonly version: number = 1;\n\tprivate readonly snippetsFolder: URI;\n\n\tconstructor(\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IUserDataSyncStoreService userDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncBackupStoreService userDataSyncBackupStoreService: IUserDataSyncBackupStoreService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IUserDataSyncResourceEnablementService userDataSyncResourceEnablementService: IUserDataSyncResourceEnablementService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(SyncResource.Snippets, fileService, environmentService, storageService, userDataSyncStoreService, userDataSyncBackupStoreService, userDataSyncResourceEnablementService, telemetryService, logService, configurationService, uriIdentityService);\n\t\tthis.snippetsFolder = environmentService.snippetsHome;\n\t\tthis._register(this.fileService.watch(environmentService.userRoamingDataHome));\n\t\tthis._register(this.fileService.watch(this.snippetsFolder));\n\t\tthis._register(Event.filter(this.fileService.onDidFilesChange, e => e.affects(this.snippetsFolder))(() => this.triggerLocalChange()));\n\t}\n\n\tprotected async generateSyncPreview(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, isRemoteDataFromCurrentMachine: boolean): Promise<ISnippetsResourcePreview[]> {\n\t\tconst local = await this.getSnippetsFileContents();\n\t\tconst localSnippets = this.toSnippetsContents(local);\n\t\tconst remoteSnippets: IStringDictionary<string> | null = remoteUserData.syncData ? this.parseSnippets(remoteUserData.syncData) : null;\n\n\t\t// Use remote data as last sync data if last sync data does not exist and remote data is from same machine\n\t\tlastSyncUserData = lastSyncUserData === null && isRemoteDataFromCurrentMachine ? remoteUserData : lastSyncUserData;\n\t\tconst lastSyncSnippets: IStringDictionary<string> | null = lastSyncUserData && lastSyncUserData.syncData ? this.parseSnippets(lastSyncUserData.syncData) : null;\n\n\t\tif (remoteSnippets) {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Merging remote snippets with local snippets...`);\n\t\t} else {\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Remote snippets does not exist. Synchronizing snippets for the first time.`);\n\t\t}\n\n\t\tconst mergeResult = merge(localSnippets, remoteSnippets, lastSyncSnippets);\n\t\treturn this.getResourcePreviews(mergeResult, local, remoteSnippets || {});\n\t}\n\n\tprotected async getMergeResult(resourcePreview: ISnippetsResourcePreview, token: CancellationToken): Promise<IMergeResult> {\n\t\treturn resourcePreview.previewResult;\n\t}\n\n\tprotected async getAcceptResult(resourcePreview: ISnippetsResourcePreview, resource: URI, content: string | null | undefined, token: CancellationToken): Promise<IAcceptResult> {\n\n\t\t/* Accept local resource */\n\t\tif (this.extUri.isEqualOrParent(resource, this.syncPreviewFolder.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'local' }))) {\n\t\t\treturn {\n\t\t\t\tcontent: resourcePreview.fileContent ? resourcePreview.fileContent.value.toString() : null,\n\t\t\t\tlocalChange: Change.None,\n\t\t\t\tremoteChange: resourcePreview.fileContent\n\t\t\t\t\t? resourcePreview.remoteContent !== null ? Change.Modified : Change.Added\n\t\t\t\t\t: Change.Deleted\n\t\t\t};\n\t\t}\n\n\t\t/* Accept remote resource */\n\t\tif (this.extUri.isEqualOrParent(resource, this.syncPreviewFolder.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'remote' }))) {\n\t\t\treturn {\n\t\t\t\tcontent: resourcePreview.remoteContent,\n\t\t\t\tlocalChange: resourcePreview.remoteContent !== null\n\t\t\t\t\t? resourcePreview.fileContent ? Change.Modified : Change.Added\n\t\t\t\t\t: Change.Deleted,\n\t\t\t\tremoteChange: Change.None,\n\t\t\t};\n\t\t}\n\n\t\t/* Accept preview resource */\n\t\tif (this.extUri.isEqualOrParent(resource, this.syncPreviewFolder)) {\n\t\t\tif (content === undefined) {\n\t\t\t\treturn {\n\t\t\t\t\tcontent: resourcePreview.previewResult.content,\n\t\t\t\t\tlocalChange: resourcePreview.previewResult.localChange,\n\t\t\t\t\tremoteChange: resourcePreview.previewResult.remoteChange,\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\treturn {\n\t\t\t\t\tcontent,\n\t\t\t\t\tlocalChange: content === null\n\t\t\t\t\t\t? resourcePreview.fileContent !== null ? Change.Deleted : Change.None\n\t\t\t\t\t\t: Change.Modified,\n\t\t\t\t\tremoteChange: content === null\n\t\t\t\t\t\t? resourcePreview.remoteContent !== null ? Change.Deleted : Change.None\n\t\t\t\t\t\t: Change.Modified\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error(`Invalid Resource: ${resource.toString()}`);\n\t}\n\n\tprotected async applyResult(remoteUserData: IRemoteUserData, lastSyncUserData: IRemoteUserData | null, resourcePreviews: [ISnippetsResourcePreview, IAcceptResult][], force: boolean): Promise<void> {\n\t\tconst accptedResourcePreviews: ISnippetsAcceptedResourcePreview[] = resourcePreviews.map(([resourcePreview, acceptResult]) => ({ ...resourcePreview, acceptResult }));\n\t\tif (accptedResourcePreviews.every(({ localChange, remoteChange }) => localChange === Change.None && remoteChange === Change.None)) {\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: No changes found during synchronizing snippets.`);\n\t\t}\n\n\t\tif (accptedResourcePreviews.some(({ localChange }) => localChange !== Change.None)) {\n\t\t\t// back up all snippets\n\t\t\tawait this.updateLocalBackup(accptedResourcePreviews);\n\t\t\tawait this.updateLocalSnippets(accptedResourcePreviews, force);\n\t\t}\n\n\t\tif (accptedResourcePreviews.some(({ remoteChange }) => remoteChange !== Change.None)) {\n\t\t\tremoteUserData = await this.updateRemoteSnippets(accptedResourcePreviews, remoteUserData, force);\n\t\t}\n\n\t\tif (lastSyncUserData?.ref !== remoteUserData.ref) {\n\t\t\t// update last sync\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Updating last synchronized snippets...`);\n\t\t\tawait this.updateLastSyncUserData(remoteUserData);\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Updated last synchronized snippets`);\n\t\t}\n\n\t\tfor (const { previewResource } of accptedResourcePreviews) {\n\t\t\t// Delete the preview\n\t\t\ttry {\n\t\t\t\tawait this.fileService.del(previewResource);\n\t\t\t} catch (e) { /* ignore */ }\n\t\t}\n\n\t}\n\n\tprivate getResourcePreviews(snippetsMergeResult: ISnippetsMergeResult, localFileContent: IStringDictionary<IFileContent>, remoteSnippets: IStringDictionary<string>): ISnippetsResourcePreview[] {\n\t\tconst resourcePreviews: Map<string, ISnippetsResourcePreview> = new Map<string, ISnippetsResourcePreview>();\n\n\t\t/* Snippets added remotely -> add locally */\n\t\tfor (const key of Object.keys(snippetsMergeResult.local.added)) {\n\t\t\tconst previewResult: IMergeResult = {\n\t\t\t\tcontent: snippetsMergeResult.local.added[key],\n\t\t\t\thasConflicts: false,\n\t\t\t\tlocalChange: Change.Added,\n\t\t\t\tremoteChange: Change.None,\n\t\t\t};\n\t\t\tresourcePreviews.set(key, {\n\t\t\t\tfileContent: null,\n\t\t\t\tlocalResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'local' }),\n\t\t\t\tlocalContent: null,\n\t\t\t\tremoteResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'remote' }),\n\t\t\t\tremoteContent: remoteSnippets[key],\n\t\t\t\tpreviewResource: this.extUri.joinPath(this.syncPreviewFolder, key),\n\t\t\t\tpreviewResult,\n\t\t\t\tlocalChange: previewResult.localChange,\n\t\t\t\tremoteChange: previewResult.remoteChange,\n\t\t\t\tacceptedResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'accepted' })\n\t\t\t});\n\t\t}\n\n\t\t/* Snippets updated remotely -> update locally */\n\t\tfor (const key of Object.keys(snippetsMergeResult.local.updated)) {\n\t\t\tconst previewResult: IMergeResult = {\n\t\t\t\tcontent: snippetsMergeResult.local.updated[key],\n\t\t\t\thasConflicts: false,\n\t\t\t\tlocalChange: Change.Modified,\n\t\t\t\tremoteChange: Change.None,\n\t\t\t};\n\t\t\tresourcePreviews.set(key, {\n\t\t\t\tlocalResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'local' }),\n\t\t\t\tfileContent: localFileContent[key],\n\t\t\t\tlocalContent: localFileContent[key].value.toString(),\n\t\t\t\tremoteResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'remote' }),\n\t\t\t\tremoteContent: remoteSnippets[key],\n\t\t\t\tpreviewResource: this.extUri.joinPath(this.syncPreviewFolder, key),\n\t\t\t\tpreviewResult,\n\t\t\t\tlocalChange: previewResult.localChange,\n\t\t\t\tremoteChange: previewResult.remoteChange,\n\t\t\t\tacceptedResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'accepted' })\n\t\t\t});\n\t\t}\n\n\t\t/* Snippets removed remotely -> remove locally */\n\t\tfor (const key of snippetsMergeResult.local.removed) {\n\t\t\tconst previewResult: IMergeResult = {\n\t\t\t\tcontent: null,\n\t\t\t\thasConflicts: false,\n\t\t\t\tlocalChange: Change.Deleted,\n\t\t\t\tremoteChange: Change.None,\n\t\t\t};\n\t\t\tresourcePreviews.set(key, {\n\t\t\t\tlocalResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'local' }),\n\t\t\t\tfileContent: localFileContent[key],\n\t\t\t\tlocalContent: localFileContent[key].value.toString(),\n\t\t\t\tremoteResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'remote' }),\n\t\t\t\tremoteContent: null,\n\t\t\t\tpreviewResource: this.extUri.joinPath(this.syncPreviewFolder, key),\n\t\t\t\tpreviewResult,\n\t\t\t\tlocalChange: previewResult.localChange,\n\t\t\t\tremoteChange: previewResult.remoteChange,\n\t\t\t\tacceptedResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'accepted' })\n\t\t\t});\n\t\t}\n\n\t\t/* Snippets added locally -> add remotely */\n\t\tfor (const key of Object.keys(snippetsMergeResult.remote.added)) {\n\t\t\tconst previewResult: IMergeResult = {\n\t\t\t\tcontent: snippetsMergeResult.remote.added[key],\n\t\t\t\thasConflicts: false,\n\t\t\t\tlocalChange: Change.None,\n\t\t\t\tremoteChange: Change.Added,\n\t\t\t};\n\t\t\tresourcePreviews.set(key, {\n\t\t\t\tlocalResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'local' }),\n\t\t\t\tfileContent: localFileContent[key],\n\t\t\t\tlocalContent: localFileContent[key].value.toString(),\n\t\t\t\tremoteResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'remote' }),\n\t\t\t\tremoteContent: null,\n\t\t\t\tpreviewResource: this.extUri.joinPath(this.syncPreviewFolder, key),\n\t\t\t\tpreviewResult,\n\t\t\t\tlocalChange: previewResult.localChange,\n\t\t\t\tremoteChange: previewResult.remoteChange,\n\t\t\t\tacceptedResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'accepted' })\n\t\t\t});\n\t\t}\n\n\t\t/* Snippets updated locally -> update remotely */\n\t\tfor (const key of Object.keys(snippetsMergeResult.remote.updated)) {\n\t\t\tconst previewResult: IMergeResult = {\n\t\t\t\tcontent: snippetsMergeResult.remote.updated[key],\n\t\t\t\thasConflicts: false,\n\t\t\t\tlocalChange: Change.None,\n\t\t\t\tremoteChange: Change.Modified,\n\t\t\t};\n\t\t\tresourcePreviews.set(key, {\n\t\t\t\tlocalResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'local' }),\n\t\t\t\tfileContent: localFileContent[key],\n\t\t\t\tlocalContent: localFileContent[key].value.toString(),\n\t\t\t\tremoteResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'remote' }),\n\t\t\t\tremoteContent: remoteSnippets[key],\n\t\t\t\tpreviewResource: this.extUri.joinPath(this.syncPreviewFolder, key),\n\t\t\t\tpreviewResult,\n\t\t\t\tlocalChange: previewResult.localChange,\n\t\t\t\tremoteChange: previewResult.remoteChange,\n\t\t\t\tacceptedResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'accepted' })\n\t\t\t});\n\t\t}\n\n\t\t/* Snippets removed locally -> remove remotely */\n\t\tfor (const key of snippetsMergeResult.remote.removed) {\n\t\t\tconst previewResult: IMergeResult = {\n\t\t\t\tcontent: null,\n\t\t\t\thasConflicts: false,\n\t\t\t\tlocalChange: Change.None,\n\t\t\t\tremoteChange: Change.Deleted,\n\t\t\t};\n\t\t\tresourcePreviews.set(key, {\n\t\t\t\tlocalResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'local' }),\n\t\t\t\tfileContent: null,\n\t\t\t\tlocalContent: null,\n\t\t\t\tremoteResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'remote' }),\n\t\t\t\tremoteContent: remoteSnippets[key],\n\t\t\t\tpreviewResource: this.extUri.joinPath(this.syncPreviewFolder, key),\n\t\t\t\tpreviewResult,\n\t\t\t\tlocalChange: previewResult.localChange,\n\t\t\t\tremoteChange: previewResult.remoteChange,\n\t\t\t\tacceptedResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'accepted' })\n\t\t\t});\n\t\t}\n\n\t\t/* Snippets with conflicts */\n\t\tfor (const key of snippetsMergeResult.conflicts) {\n\t\t\tconst previewResult: IMergeResult = {\n\t\t\t\tcontent: localFileContent[key] ? localFileContent[key].value.toString() : null,\n\t\t\t\thasConflicts: true,\n\t\t\t\tlocalChange: localFileContent[key] ? Change.Modified : Change.Added,\n\t\t\t\tremoteChange: remoteSnippets[key] ? Change.Modified : Change.Added\n\t\t\t};\n\t\t\tresourcePreviews.set(key, {\n\t\t\t\tlocalResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'local' }),\n\t\t\t\tfileContent: localFileContent[key] || null,\n\t\t\t\tlocalContent: localFileContent[key] ? localFileContent[key].value.toString() : null,\n\t\t\t\tremoteResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'remote' }),\n\t\t\t\tremoteContent: remoteSnippets[key] || null,\n\t\t\t\tpreviewResource: this.extUri.joinPath(this.syncPreviewFolder, key),\n\t\t\t\tpreviewResult,\n\t\t\t\tlocalChange: previewResult.localChange,\n\t\t\t\tremoteChange: previewResult.remoteChange,\n\t\t\t\tacceptedResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'accepted' })\n\t\t\t});\n\t\t}\n\n\t\t/* Unmodified Snippets */\n\t\tfor (const key of Object.keys(localFileContent)) {\n\t\t\tif (!resourcePreviews.has(key)) {\n\t\t\t\tconst previewResult: IMergeResult = {\n\t\t\t\t\tcontent: localFileContent[key] ? localFileContent[key].value.toString() : null,\n\t\t\t\t\thasConflicts: false,\n\t\t\t\t\tlocalChange: Change.None,\n\t\t\t\t\tremoteChange: Change.None\n\t\t\t\t};\n\t\t\t\tresourcePreviews.set(key, {\n\t\t\t\t\tlocalResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'local' }),\n\t\t\t\t\tfileContent: localFileContent[key] || null,\n\t\t\t\t\tlocalContent: localFileContent[key] ? localFileContent[key].value.toString() : null,\n\t\t\t\t\tremoteResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'remote' }),\n\t\t\t\t\tremoteContent: remoteSnippets[key] || null,\n\t\t\t\t\tpreviewResource: this.extUri.joinPath(this.syncPreviewFolder, key),\n\t\t\t\t\tpreviewResult,\n\t\t\t\t\tlocalChange: previewResult.localChange,\n\t\t\t\t\tremoteChange: previewResult.remoteChange,\n\t\t\t\t\tacceptedResource: this.extUri.joinPath(this.syncPreviewFolder, key).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'accepted' })\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn [...resourcePreviews.values()];\n\t}\n\n\tasync getAssociatedResources({ uri }: ISyncResourceHandle): Promise<{ resource: URI, comparableResource: URI }[]> {\n\t\tlet content = await super.resolveContent(uri);\n\t\tif (content) {\n\t\t\tconst syncData = this.parseSyncData(content);\n\t\t\tif (syncData) {\n\t\t\t\tconst snippets = this.parseSnippets(syncData);\n\t\t\t\tconst result = [];\n\t\t\t\tfor (const snippet of Object.keys(snippets)) {\n\t\t\t\t\tconst resource = this.extUri.joinPath(uri, snippet);\n\t\t\t\t\tconst comparableResource = this.extUri.joinPath(this.snippetsFolder, snippet);\n\t\t\t\t\tconst exists = await this.fileService.exists(comparableResource);\n\t\t\t\t\tresult.push({ resource, comparableResource: exists ? comparableResource : this.extUri.joinPath(this.syncPreviewFolder, snippet).with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'local' }) });\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n\n\toverride async resolveContent(uri: URI): Promise<string | null> {\n\t\tif (this.extUri.isEqualOrParent(uri, this.syncPreviewFolder.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'remote' }))\n\t\t\t|| this.extUri.isEqualOrParent(uri, this.syncPreviewFolder.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'local' }))\n\t\t\t|| this.extUri.isEqualOrParent(uri, this.syncPreviewFolder.with({ scheme: USER_DATA_SYNC_SCHEME, authority: 'accepted' }))) {\n\t\t\treturn this.resolvePreviewContent(uri);\n\t\t}\n\n\t\tlet content = await super.resolveContent(uri);\n\t\tif (content) {\n\t\t\treturn content;\n\t\t}\n\n\t\tcontent = await super.resolveContent(this.extUri.dirname(uri));\n\t\tif (content) {\n\t\t\tconst syncData = this.parseSyncData(content);\n\t\t\tif (syncData) {\n\t\t\t\tconst snippets = this.parseSnippets(syncData);\n\t\t\t\treturn snippets[this.extUri.basename(uri)] || null;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tasync hasLocalData(): Promise<boolean> {\n\t\ttry {\n\t\t\tconst localSnippets = await this.getSnippetsFileContents();\n\t\t\tif (Object.keys(localSnippets).length) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t/* ignore error */\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate async updateLocalBackup(resourcePreviews: IFileResourcePreview[]): Promise<void> {\n\t\tconst local: IStringDictionary<IFileContent> = {};\n\t\tfor (const resourcePreview of resourcePreviews) {\n\t\t\tif (resourcePreview.fileContent) {\n\t\t\t\tlocal[this.extUri.basename(resourcePreview.localResource!)] = resourcePreview.fileContent;\n\t\t\t}\n\t\t}\n\t\tawait this.backupLocal(JSON.stringify(this.toSnippetsContents(local)));\n\t}\n\n\tprivate async updateLocalSnippets(resourcePreviews: ISnippetsAcceptedResourcePreview[], force: boolean): Promise<void> {\n\t\tfor (const { fileContent, acceptResult, localResource, remoteResource, localChange } of resourcePreviews) {\n\t\t\tif (localChange !== Change.None) {\n\t\t\t\tconst key = remoteResource ? this.extUri.basename(remoteResource) : this.extUri.basename(localResource!);\n\t\t\t\tconst resource = this.extUri.joinPath(this.snippetsFolder, key);\n\n\t\t\t\t// Removed\n\t\t\t\tif (localChange === Change.Deleted) {\n\t\t\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Deleting snippet...`, this.extUri.basename(resource));\n\t\t\t\t\tawait this.fileService.del(resource);\n\t\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Deleted snippet`, this.extUri.basename(resource));\n\t\t\t\t}\n\n\t\t\t\t// Added\n\t\t\t\telse if (localChange === Change.Added) {\n\t\t\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Creating snippet...`, this.extUri.basename(resource));\n\t\t\t\t\tawait this.fileService.createFile(resource, VSBuffer.fromString(acceptResult.content!), { overwrite: force });\n\t\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Created snippet`, this.extUri.basename(resource));\n\t\t\t\t}\n\n\t\t\t\t// Updated\n\t\t\t\telse {\n\t\t\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Updating snippet...`, this.extUri.basename(resource));\n\t\t\t\t\tawait this.fileService.writeFile(resource, VSBuffer.fromString(acceptResult.content!), force ? undefined : fileContent!);\n\t\t\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Updated snippet`, this.extUri.basename(resource));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async updateRemoteSnippets(resourcePreviews: ISnippetsAcceptedResourcePreview[], remoteUserData: IRemoteUserData, forcePush: boolean): Promise<IRemoteUserData> {\n\t\tconst currentSnippets: IStringDictionary<string> = remoteUserData.syncData ? this.parseSnippets(remoteUserData.syncData) : {};\n\t\tconst newSnippets: IStringDictionary<string> = deepClone(currentSnippets);\n\n\t\tfor (const { acceptResult, localResource, remoteResource, remoteChange } of resourcePreviews) {\n\t\t\tif (remoteChange !== Change.None) {\n\t\t\t\tconst key = localResource ? this.extUri.basename(localResource) : this.extUri.basename(remoteResource!);\n\t\t\t\tif (remoteChange === Change.Deleted) {\n\t\t\t\t\tdelete newSnippets[key];\n\t\t\t\t} else {\n\t\t\t\t\tnewSnippets[key] = acceptResult.content!;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!areSame(currentSnippets, newSnippets)) {\n\t\t\t// update remote\n\t\t\tthis.logService.trace(`${this.syncResourceLogLabel}: Updating remote snippets...`);\n\t\t\tremoteUserData = await this.updateRemoteUserData(JSON.stringify(newSnippets), forcePush ? null : remoteUserData.ref);\n\t\t\tthis.logService.info(`${this.syncResourceLogLabel}: Updated remote snippets`);\n\t\t}\n\t\treturn remoteUserData;\n\t}\n\n\tprivate parseSnippets(syncData: ISyncData): IStringDictionary<string> {\n\t\treturn JSON.parse(syncData.content);\n\t}\n\n\tprivate toSnippetsContents(snippetsFileContents: IStringDictionary<IFileContent>): IStringDictionary<string> {\n\t\tconst snippets: IStringDictionary<string> = {};\n\t\tfor (const key of Object.keys(snippetsFileContents)) {\n\t\t\tsnippets[key] = snippetsFileContents[key].value.toString();\n\t\t}\n\t\treturn snippets;\n\t}\n\n\tprivate async getSnippetsFileContents(): Promise<IStringDictionary<IFileContent>> {\n\t\tconst snippets: IStringDictionary<IFileContent> = {};\n\t\tlet stat: IFileStat;\n\t\ttry {\n\t\t\tstat = await this.fileService.resolve(this.snippetsFolder);\n\t\t} catch (e) {\n\t\t\t// No snippets\n\t\t\tif (e instanceof FileOperationError && e.fileOperationResult === FileOperationResult.FILE_NOT_FOUND) {\n\t\t\t\treturn snippets;\n\t\t\t} else {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t\tfor (const entry of stat.children || []) {\n\t\t\tconst resource = entry.resource;\n\t\t\tconst extension = this.extUri.extname(resource);\n\t\t\tif (extension === '.json' || extension === '.code-snippets') {\n\t\t\t\tconst key = this.extUri.relativePath(this.snippetsFolder, resource)!;\n\t\t\t\tconst content = await this.fileService.readFile(resource);\n\t\t\t\tsnippets[key] = content;\n\t\t\t}\n\t\t}\n\t\treturn snippets;\n\t}\n}\n\nexport class SnippetsInitializer extends AbstractInitializer {\n\n\tconstructor(\n\t\t@IFileService fileService: IFileService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService,\n\t) {\n\t\tsuper(SyncResource.Snippets, environmentService, logService, fileService, uriIdentityService);\n\t}\n\n\tasync doInitialize(remoteUserData: IRemoteUserData): Promise<void> {\n\t\tconst remoteSnippets: IStringDictionary<string> | null = remoteUserData.syncData ? JSON.parse(remoteUserData.syncData.content) : null;\n\t\tif (!remoteSnippets) {\n\t\t\tthis.logService.info('Skipping initializing snippets because remote snippets does not exist.');\n\t\t\treturn;\n\t\t}\n\n\t\tconst isEmpty = await this.isEmpty();\n\t\tif (!isEmpty) {\n\t\t\tthis.logService.info('Skipping initializing snippets because local snippets exist.');\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const key of Object.keys(remoteSnippets)) {\n\t\t\tconst content = remoteSnippets[key];\n\t\t\tif (content) {\n\t\t\t\tconst resource = this.extUri.joinPath(this.environmentService.snippetsHome, key);\n\t\t\t\tawait this.fileService.createFile(resource, VSBuffer.fromString(content));\n\t\t\t\tthis.logService.info('Created snippet', this.extUri.basename(resource));\n\t\t\t}\n\t\t}\n\n\t\tawait this.updateLastSyncUserData(remoteUserData);\n\t}\n\n\tprivate async isEmpty(): Promise<boolean> {\n\t\ttry {\n\t\t\tconst stat = await this.fileService.resolve(this.environmentService.snippetsHome);\n\t\t\treturn !stat.children?.length;\n\t\t} catch (error) {\n\t\t\treturn (<FileOperationError>error).fileOperationResult === FileOperationResult.FILE_NOT_FOUND;\n\t\t}\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IUserDataSyncLogService, IUserDataSyncStoreService } from 'vs/platform/userDataSync/common/userDataSync';\n\nexport interface IUserDataSyncAccount {\n\treadonly authenticationProviderId: string;\n\treadonly token: string;\n}\n\nexport const IUserDataSyncAccountService = createDecorator<IUserDataSyncAccountService>('IUserDataSyncAccountService');\nexport interface IUserDataSyncAccountService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly onTokenFailed: Event<boolean>;\n\treadonly account: IUserDataSyncAccount | undefined;\n\treadonly onDidChangeAccount: Event<IUserDataSyncAccount | undefined>;\n\tupdateAccount(account: IUserDataSyncAccount | undefined): Promise<void>;\n\n}\n\nexport class UserDataSyncAccountService extends Disposable implements IUserDataSyncAccountService {\n\n\t_serviceBrand: any;\n\n\tprivate _account: IUserDataSyncAccount | undefined;\n\tget account(): IUserDataSyncAccount | undefined { return this._account; }\n\tprivate _onDidChangeAccount = this._register(new Emitter<IUserDataSyncAccount | undefined>());\n\treadonly onDidChangeAccount = this._onDidChangeAccount.event;\n\n\tprivate _onTokenFailed: Emitter<boolean> = this._register(new Emitter<boolean>());\n\treadonly onTokenFailed: Event<boolean> = this._onTokenFailed.event;\n\n\tprivate wasTokenFailed: boolean = false;\n\n\tconstructor(\n\t\t@IUserDataSyncStoreService private readonly userDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncLogService private readonly logService: IUserDataSyncLogService,\n\t) {\n\t\tsuper();\n\t\tthis._register(userDataSyncStoreService.onTokenFailed(() => {\n\t\t\tthis.logService.info('Settings Sync auth token failed', this.account?.authenticationProviderId, this.wasTokenFailed);\n\t\t\tthis.updateAccount(undefined);\n\t\t\tthis._onTokenFailed.fire(this.wasTokenFailed);\n\t\t\tthis.wasTokenFailed = true;\n\t\t}));\n\t\tthis._register(userDataSyncStoreService.onTokenSucceed(() => this.wasTokenFailed = false));\n\t}\n\n\tasync updateAccount(account: IUserDataSyncAccount | undefined): Promise<void> {\n\t\tif (account && this._account ? account.token !== this._account.token || account.authenticationProviderId !== this._account.authenticationProviderId : account !== this._account) {\n\t\t\tthis._account = account;\n\t\t\tif (this._account) {\n\t\t\t\tthis.userDataSyncStoreService.setAuthToken(this._account.token, this._account.authenticationProviderId);\n\t\t\t}\n\t\t\tthis._onDidChangeAccount.fire(account);\n\t\t}\n\t}\n\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Promises } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { toLocalISOString } from 'vs/base/common/date';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { joinPath } from 'vs/base/common/resources';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IFileService, IFileStat } from 'vs/platform/files/common/files';\nimport { ALL_SYNC_RESOURCES, IResourceRefHandle, IUserDataSyncBackupStoreService, IUserDataSyncLogService, SyncResource } from 'vs/platform/userDataSync/common/userDataSync';\n\nexport class UserDataSyncBackupStoreService extends Disposable implements IUserDataSyncBackupStoreService {\n\n\t_serviceBrand: any;\n\n\tconstructor(\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IUserDataSyncLogService private readonly logService: IUserDataSyncLogService,\n\t) {\n\t\tsuper();\n\t\tALL_SYNC_RESOURCES.forEach(resourceKey => this.cleanUpBackup(resourceKey));\n\t}\n\n\tasync getAllRefs(resource: SyncResource): Promise<IResourceRefHandle[]> {\n\t\tconst folder = joinPath(this.environmentService.userDataSyncHome, resource);\n\t\tconst stat = await this.fileService.resolve(folder);\n\t\tif (stat.children) {\n\t\t\tconst all = stat.children.filter(stat => stat.isFile && /^\\d{8}T\\d{6}(\\.json)?$/.test(stat.name)).sort().reverse();\n\t\t\treturn all.map(stat => ({\n\t\t\t\tref: stat.name,\n\t\t\t\tcreated: this.getCreationTime(stat)\n\t\t\t}));\n\t\t}\n\t\treturn [];\n\t}\n\n\tasync resolveContent(resource: SyncResource, ref?: string): Promise<string | null> {\n\t\tif (!ref) {\n\t\t\tconst refs = await this.getAllRefs(resource);\n\t\t\tif (refs.length) {\n\t\t\t\tref = refs[refs.length - 1].ref;\n\t\t\t}\n\t\t}\n\t\tif (ref) {\n\t\t\tconst file = joinPath(this.environmentService.userDataSyncHome, resource, ref);\n\t\t\tconst content = await this.fileService.readFile(file);\n\t\t\treturn content.value.toString();\n\t\t}\n\t\treturn null;\n\t}\n\n\tasync backup(resourceKey: SyncResource, content: string): Promise<void> {\n\t\tconst folder = joinPath(this.environmentService.userDataSyncHome, resourceKey);\n\t\tconst resource = joinPath(folder, `${toLocalISOString(new Date()).replace(/-|:|\\.\\d+Z$/g, '')}.json`);\n\t\ttry {\n\t\t\tawait this.fileService.writeFile(resource, VSBuffer.fromString(content));\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t}\n\t\ttry {\n\t\t\tthis.cleanUpBackup(resourceKey);\n\t\t} catch (e) { /* Ignore */ }\n\t}\n\n\tprivate async cleanUpBackup(resource: SyncResource): Promise<void> {\n\t\tconst folder = joinPath(this.environmentService.userDataSyncHome, resource);\n\t\ttry {\n\t\t\ttry {\n\t\t\t\tif (!(await this.fileService.exists(folder))) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst stat = await this.fileService.resolve(folder);\n\t\t\tif (stat.children) {\n\t\t\t\tconst all = stat.children.filter(stat => stat.isFile && /^\\d{8}T\\d{6}(\\.json)?$/.test(stat.name)).sort();\n\t\t\t\tconst backUpMaxAge = 1000 * 60 * 60 * 24 * (this.configurationService.getValue<number>('sync.localBackupDuration') || 30 /* Default 30 days */);\n\t\t\t\tlet toDelete = all.filter(stat => Date.now() - this.getCreationTime(stat) > backUpMaxAge);\n\t\t\t\tconst remaining = all.length - toDelete.length;\n\t\t\t\tif (remaining < 10) {\n\t\t\t\t\ttoDelete = toDelete.slice(10 - remaining);\n\t\t\t\t}\n\t\t\t\tawait Promises.settled(toDelete.map(async stat => {\n\t\t\t\t\tthis.logService.info('Deleting from backup', stat.resource.path);\n\t\t\t\t\tawait this.fileService.del(stat.resource);\n\t\t\t\t}));\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t}\n\t}\n\n\tprivate getCreationTime(stat: IFileStat) {\n\t\treturn stat.ctime || new Date(\n\t\t\tparseInt(stat.name.substring(0, 4)),\n\t\t\tparseInt(stat.name.substring(4, 6)) - 1,\n\t\t\tparseInt(stat.name.substring(6, 8)),\n\t\t\tparseInt(stat.name.substring(9, 11)),\n\t\t\tparseInt(stat.name.substring(11, 13)),\n\t\t\tparseInt(stat.name.substring(13, 15))\n\t\t).getTime();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { Event } from 'vs/base/common/event';\nimport { FormattingOptions } from 'vs/base/common/jsonFormatter';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IUserDataAutoSyncService, IUserDataSyncStore, IUserDataSyncStoreManagementService, IUserDataSyncUtilService, UserDataSyncStoreType } from 'vs/platform/userDataSync/common/userDataSync';\nimport { IUserDataSyncAccountService } from 'vs/platform/userDataSync/common/userDataSyncAccount';\nimport { IUserDataSyncMachinesService } from 'vs/platform/userDataSync/common/userDataSyncMachines';\n\nexport class UserDataAutoSyncChannel implements IServerChannel {\n\n\tconstructor(private readonly service: IUserDataAutoSyncService) { }\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'onError': return this.service.onError;\n\t\t}\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(context: any, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'triggerSync': return this.service.triggerSync(args[0], args[1], args[2]);\n\t\t\tcase 'turnOn': return this.service.turnOn();\n\t\t\tcase 'turnOff': return this.service.turnOff(args[0]);\n\t\t}\n\t\tthrow new Error('Invalid call');\n\t}\n}\n\nexport class UserDataSycnUtilServiceChannel implements IServerChannel {\n\n\tconstructor(private readonly service: IUserDataSyncUtilService) { }\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(context: any, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'resolveDefaultIgnoredSettings': return this.service.resolveDefaultIgnoredSettings();\n\t\t\tcase 'resolveUserKeybindings': return this.service.resolveUserBindings(args[0]);\n\t\t\tcase 'resolveFormattingOptions': return this.service.resolveFormattingOptions(URI.revive(args[0]));\n\t\t}\n\t\tthrow new Error('Invalid call');\n\t}\n}\n\nexport class UserDataSyncUtilServiceClient implements IUserDataSyncUtilService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private readonly channel: IChannel) {\n\t}\n\n\tasync resolveDefaultIgnoredSettings(): Promise<string[]> {\n\t\treturn this.channel.call('resolveDefaultIgnoredSettings');\n\t}\n\n\tasync resolveUserBindings(userbindings: string[]): Promise<IStringDictionary<string>> {\n\t\treturn this.channel.call('resolveUserKeybindings', [userbindings]);\n\t}\n\n\tasync resolveFormattingOptions(file: URI): Promise<FormattingOptions> {\n\t\treturn this.channel.call('resolveFormattingOptions', [file]);\n\t}\n\n}\n\nexport class UserDataSyncMachinesServiceChannel implements IServerChannel {\n\n\tconstructor(private readonly service: IUserDataSyncMachinesService) { }\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'onDidChange': return this.service.onDidChange;\n\t\t}\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tasync call(context: any, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'getMachines': return this.service.getMachines();\n\t\t\tcase 'addCurrentMachine': return this.service.addCurrentMachine();\n\t\t\tcase 'removeCurrentMachine': return this.service.removeCurrentMachine();\n\t\t\tcase 'renameMachine': return this.service.renameMachine(args[0], args[1]);\n\t\t\tcase 'setEnablement': return this.service.setEnablement(args[0], args[1]);\n\t\t}\n\t\tthrow new Error('Invalid call');\n\t}\n\n}\n\nexport class UserDataSyncAccountServiceChannel implements IServerChannel {\n\tconstructor(private readonly service: IUserDataSyncAccountService) { }\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'onDidChangeAccount': return this.service.onDidChangeAccount;\n\t\t\tcase 'onTokenFailed': return this.service.onTokenFailed;\n\t\t}\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(context: any, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase '_getInitialData': return Promise.resolve(this.service.account);\n\t\t\tcase 'updateAccount': return this.service.updateAccount(args);\n\t\t}\n\t\tthrow new Error('Invalid call');\n\t}\n}\n\nexport class UserDataSyncStoreManagementServiceChannel implements IServerChannel {\n\tconstructor(private readonly service: IUserDataSyncStoreManagementService) { }\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'onDidChangeUserDataSyncStore': return this.service.onDidChangeUserDataSyncStore;\n\t\t}\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(context: any, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'switch': return this.service.switch(args[0]);\n\t\t\tcase 'getPreviousUserDataSyncStore': return this.service.getPreviousUserDataSyncStore();\n\t\t}\n\t\tthrow new Error('Invalid call');\n\t}\n}\n\nexport class UserDataSyncStoreManagementServiceChannelClient extends Disposable {\n\n\treadonly onDidChangeUserDataSyncStore: Event<void>;\n\n\tconstructor(private readonly channel: IChannel) {\n\t\tsuper();\n\t\tthis.onDidChangeUserDataSyncStore = this.channel.listen<void>('onDidChangeUserDataSyncStore');\n\t}\n\n\tasync switch(type: UserDataSyncStoreType): Promise<void> {\n\t\treturn this.channel.call('switch', [type]);\n\t}\n\n\tasync getPreviousUserDataSyncStore(): Promise<IUserDataSyncStore> {\n\t\tconst userDataSyncStore = await this.channel.call<IUserDataSyncStore>('getPreviousUserDataSyncStore');\n\t\treturn this.revive(userDataSyncStore);\n\t}\n\n\tprivate revive(userDataSyncStore: IUserDataSyncStore): IUserDataSyncStore {\n\t\treturn {\n\t\t\turl: URI.revive(userDataSyncStore.url),\n\t\t\ttype: userDataSyncStore.type,\n\t\t\tdefaultUrl: URI.revive(userDataSyncStore.defaultUrl),\n\t\t\tinsidersUrl: URI.revive(userDataSyncStore.insidersUrl),\n\t\t\tstableUrl: URI.revive(userDataSyncStore.stableUrl),\n\t\t\tcanSwitch: userDataSyncStore.canSwitch,\n\t\t\tauthenticationProviders: userDataSyncStore.authenticationProviders,\n\t\t};\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { AbstractLogger, ILogger, ILoggerService } from 'vs/platform/log/common/log';\nimport { IUserDataSyncLogService } from 'vs/platform/userDataSync/common/userDataSync';\n\nexport class UserDataSyncLogService extends AbstractLogger implements IUserDataSyncLogService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\tprivate readonly logger: ILogger;\n\n\tconstructor(\n\t\t@ILoggerService loggerService: ILoggerService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService\n\t) {\n\t\tsuper();\n\t\tthis.logger = this._register(loggerService.createLogger(environmentService.userDataSyncLogResource, { name: 'settingssync' }));\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tthis.logger.trace(message, ...args);\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tthis.logger.debug(message, ...args);\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tthis.logger.info(message, ...args);\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tthis.logger.warn(message, ...args);\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tthis.logger.error(message, ...args);\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tthis.logger.critical(message, ...args);\n\t}\n\n\tflush(): void {\n\t\tthis.logger.flush();\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { isWeb, Platform, platform, PlatformToString } from 'vs/base/common/platform';\nimport { escapeRegExpCharacters } from 'vs/base/common/strings';\nimport { localize } from 'vs/nls';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { getServiceMachineId } from 'vs/platform/serviceMachineId/common/serviceMachineId';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { IUserData, IUserDataManifest, IUserDataSyncLogService, IUserDataSyncStoreService } from 'vs/platform/userDataSync/common/userDataSync';\n\ninterface IMachineData {\n\tid: string;\n\tname: string;\n\tdisabled?: boolean;\n}\n\ninterface IMachinesData {\n\tversion: number;\n\tmachines: IMachineData[];\n}\n\nexport type IUserDataSyncMachine = Readonly<IMachineData> & { readonly isCurrent: boolean };\n\nexport const IUserDataSyncMachinesService = createDecorator<IUserDataSyncMachinesService>('IUserDataSyncMachinesService');\nexport interface IUserDataSyncMachinesService {\n\t_serviceBrand: any;\n\n\treadonly onDidChange: Event<void>;\n\n\tgetMachines(manifest?: IUserDataManifest): Promise<IUserDataSyncMachine[]>;\n\n\taddCurrentMachine(manifest?: IUserDataManifest): Promise<void>;\n\tremoveCurrentMachine(manifest?: IUserDataManifest): Promise<void>;\n\trenameMachine(machineId: string, name: string): Promise<void>;\n\tsetEnablement(machineId: string, enabled: boolean): Promise<void>;\n}\n\nconst currentMachineNameKey = 'sync.currentMachineName';\n\nexport class UserDataSyncMachinesService extends Disposable implements IUserDataSyncMachinesService {\n\n\tprivate static readonly VERSION = 1;\n\tprivate static readonly RESOURCE = 'machines';\n\n\t_serviceBrand: any;\n\n\tprivate readonly _onDidChange = this._register(new Emitter<void>());\n\treadonly onDidChange = this._onDidChange.event;\n\n\tprivate readonly currentMachineIdPromise: Promise<string>;\n\tprivate userData: IUserData | null = null;\n\n\tconstructor(\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IUserDataSyncStoreService private readonly userDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncLogService private readonly logService: IUserDataSyncLogService,\n\t\t@IProductService private readonly productService: IProductService,\n\t) {\n\t\tsuper();\n\t\tthis.currentMachineIdPromise = getServiceMachineId(environmentService, fileService, storageService);\n\t}\n\n\tasync getMachines(manifest?: IUserDataManifest): Promise<IUserDataSyncMachine[]> {\n\t\tconst currentMachineId = await this.currentMachineIdPromise;\n\t\tconst machineData = await this.readMachinesData(manifest);\n\t\treturn machineData.machines.map<IUserDataSyncMachine>(machine => ({ ...machine, ...{ isCurrent: machine.id === currentMachineId } }));\n\t}\n\n\tasync addCurrentMachine(manifest?: IUserDataManifest): Promise<void> {\n\t\tconst currentMachineId = await this.currentMachineIdPromise;\n\t\tconst machineData = await this.readMachinesData(manifest);\n\t\tif (!machineData.machines.some(({ id }) => id === currentMachineId)) {\n\t\t\tmachineData.machines.push({ id: currentMachineId, name: this.computeCurrentMachineName(machineData.machines) });\n\t\t\tawait this.writeMachinesData(machineData);\n\t\t}\n\t}\n\n\tasync removeCurrentMachine(manifest?: IUserDataManifest): Promise<void> {\n\t\tconst currentMachineId = await this.currentMachineIdPromise;\n\t\tconst machineData = await this.readMachinesData(manifest);\n\t\tconst updatedMachines = machineData.machines.filter(({ id }) => id !== currentMachineId);\n\t\tif (updatedMachines.length !== machineData.machines.length) {\n\t\t\tmachineData.machines = updatedMachines;\n\t\t\tawait this.writeMachinesData(machineData);\n\t\t}\n\t}\n\n\tasync renameMachine(machineId: string, name: string, manifest?: IUserDataManifest): Promise<void> {\n\t\tconst currentMachineId = await this.currentMachineIdPromise;\n\t\tconst machineData = await this.readMachinesData(manifest);\n\t\tconst machine = machineData.machines.find(({ id }) => id === machineId);\n\t\tif (machine) {\n\t\t\tmachine.name = name;\n\t\t\tawait this.writeMachinesData(machineData);\n\t\t\tif (machineData.machines.some(({ id }) => id === currentMachineId)) {\n\t\t\t\tthis.storageService.store(currentMachineNameKey, name, StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync setEnablement(machineId: string, enabled: boolean): Promise<void> {\n\t\tconst machineData = await this.readMachinesData();\n\t\tconst machine = machineData.machines.find(({ id }) => id === machineId);\n\t\tif (machine) {\n\t\t\tmachine.disabled = enabled ? undefined : true;\n\t\t\tawait this.writeMachinesData(machineData);\n\t\t}\n\t}\n\n\tprivate computeCurrentMachineName(machines: IMachineData[]): string {\n\t\tconst previousName = this.storageService.get(currentMachineNameKey, StorageScope.GLOBAL);\n\t\tif (previousName) {\n\t\t\treturn previousName;\n\t\t}\n\n\t\tconst namePrefix = `${this.productService.nameLong} (${PlatformToString(isWeb ? Platform.Web : platform)})`;\n\t\tconst nameRegEx = new RegExp(`${escapeRegExpCharacters(namePrefix)}\\\\s#(\\\\d+)`);\n\t\tlet nameIndex = 0;\n\t\tfor (const machine of machines) {\n\t\t\tconst matches = nameRegEx.exec(machine.name);\n\t\t\tconst index = matches ? parseInt(matches[1]) : 0;\n\t\t\tnameIndex = index > nameIndex ? index : nameIndex;\n\t\t}\n\t\treturn `${namePrefix} #${nameIndex + 1}`;\n\t}\n\n\tprivate async readMachinesData(manifest?: IUserDataManifest): Promise<IMachinesData> {\n\t\tthis.userData = await this.readUserData(manifest);\n\t\tconst machinesData = this.parse(this.userData);\n\t\tif (machinesData.version !== UserDataSyncMachinesService.VERSION) {\n\t\t\tthrow new Error(localize('error incompatible', \"Cannot read machines data as the current version is incompatible. Please update {0} and try again.\", this.productService.nameLong));\n\t\t}\n\t\treturn machinesData;\n\t}\n\n\tprivate async writeMachinesData(machinesData: IMachinesData): Promise<void> {\n\t\tconst content = JSON.stringify(machinesData);\n\t\tconst ref = await this.userDataSyncStoreService.write(UserDataSyncMachinesService.RESOURCE, content, this.userData?.ref || null);\n\t\tthis.userData = { ref, content };\n\t\tthis._onDidChange.fire();\n\t}\n\n\tprivate async readUserData(manifest?: IUserDataManifest): Promise<IUserData> {\n\t\tif (this.userData) {\n\n\t\t\tconst latestRef = manifest && manifest.latest ? manifest.latest[UserDataSyncMachinesService.RESOURCE] : undefined;\n\n\t\t\t// Last time synced resource and latest resource on server are same\n\t\t\tif (this.userData.ref === latestRef) {\n\t\t\t\treturn this.userData;\n\t\t\t}\n\n\t\t\t// There is no resource on server and last time it was synced with no resource\n\t\t\tif (latestRef === undefined && this.userData.content === null) {\n\t\t\t\treturn this.userData;\n\t\t\t}\n\t\t}\n\n\t\treturn this.userDataSyncStoreService.read(UserDataSyncMachinesService.RESOURCE, this.userData);\n\t}\n\n\tprivate parse(userData: IUserData): IMachinesData {\n\t\tif (userData.content !== null) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(userData.content);\n\t\t\t} catch (e) {\n\t\t\t\tthis.logService.error(e);\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tversion: UserDataSyncMachinesService.VERSION,\n\t\t\tmachines: []\n\t\t};\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancelablePromise, createCancelablePromise, Delayer, disposableTimeout, timeout } from 'vs/base/common/async';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { toLocalISOString } from 'vs/base/common/date';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { isPromiseCanceledError } from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable, MutableDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { isWeb } from 'vs/base/common/platform';\nimport { isEqual } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IStorageService, IStorageValueChangeEvent, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { ISyncTask, IUserDataAutoSyncEnablementService, IUserDataAutoSyncService, IUserDataManifest, IUserDataSyncLogService, IUserDataSyncResourceEnablementService, IUserDataSyncService, IUserDataSyncStoreManagementService, IUserDataSyncStoreService, UserDataAutoSyncError, UserDataSyncError, UserDataSyncErrorCode } from 'vs/platform/userDataSync/common/userDataSync';\nimport { IUserDataSyncAccountService } from 'vs/platform/userDataSync/common/userDataSyncAccount';\nimport { IUserDataSyncMachinesService } from 'vs/platform/userDataSync/common/userDataSyncMachines';\n\ntype AutoSyncClassification = {\n\tsources: { classification: 'SystemMetaData', purpose: 'FeatureInsight', isMeasurement: true };\n};\n\ntype AutoSyncEnablementClassification = {\n\tenabled?: { classification: 'SystemMetaData', purpose: 'FeatureInsight', isMeasurement: true };\n};\n\ntype AutoSyncErrorClassification = {\n\tcode: { classification: 'SystemMetaData', purpose: 'FeatureInsight', isMeasurement: true };\n\tservice: { classification: 'SystemMetaData', purpose: 'FeatureInsight', isMeasurement: true };\n};\n\nconst enablementKey = 'sync.enable';\nconst disableMachineEventuallyKey = 'sync.disableMachineEventually';\nconst sessionIdKey = 'sync.sessionId';\nconst storeUrlKey = 'sync.storeUrl';\nconst productQualityKey = 'sync.productQuality';\n\ninterface _IUserDataAutoSyncEnablementService extends IUserDataAutoSyncEnablementService {\n\tcanToggleEnablement(): boolean;\n\tsetEnablement(enabled: boolean): void;\n}\n\nexport class UserDataAutoSyncEnablementService extends Disposable implements _IUserDataAutoSyncEnablementService {\n\n\t_serviceBrand: any;\n\n\tprivate _onDidChangeEnablement = new Emitter<boolean>();\n\treadonly onDidChangeEnablement: Event<boolean> = this._onDidChangeEnablement.event;\n\n\tconstructor(\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IEnvironmentService protected readonly environmentService: IEnvironmentService,\n\t\t@IUserDataSyncStoreManagementService private readonly userDataSyncStoreManagementService: IUserDataSyncStoreManagementService,\n\t) {\n\t\tsuper();\n\t\tthis._register(storageService.onDidChangeValue(e => this.onDidStorageChange(e)));\n\t}\n\n\tisEnabled(): boolean {\n\t\tswitch (this.environmentService.sync) {\n\t\t\tcase 'on':\n\t\t\t\treturn true;\n\t\t\tcase 'off':\n\t\t\t\treturn false;\n\t\t}\n\t\treturn this.storageService.getBoolean(enablementKey, StorageScope.GLOBAL, false);\n\t}\n\n\tcanToggleEnablement(): boolean {\n\t\treturn this.userDataSyncStoreManagementService.userDataSyncStore !== undefined && this.environmentService.sync === undefined;\n\t}\n\n\tsetEnablement(enabled: boolean): void {\n\t\tif (enabled && !this.canToggleEnablement()) {\n\t\t\treturn;\n\t\t}\n\t\tthis.storageService.store(enablementKey, enabled, StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t}\n\n\tprivate onDidStorageChange(storageChangeEvent: IStorageValueChangeEvent): void {\n\t\tif (storageChangeEvent.scope !== StorageScope.GLOBAL) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (enablementKey === storageChangeEvent.key) {\n\t\t\tthis._onDidChangeEnablement.fire(this.isEnabled());\n\t\t\treturn;\n\t\t}\n\t}\n\n}\n\nexport class UserDataAutoSyncService extends Disposable implements IUserDataAutoSyncService {\n\n\t_serviceBrand: any;\n\n\tprivate readonly userDataAutoSyncEnablementService: _IUserDataAutoSyncEnablementService;\n\n\tprivate readonly autoSync = this._register(new MutableDisposable<AutoSync>());\n\tprivate successiveFailures: number = 0;\n\tprivate lastSyncTriggerTime: number | undefined = undefined;\n\tprivate readonly syncTriggerDelayer: Delayer<void>;\n\n\tprivate readonly _onError: Emitter<UserDataSyncError> = this._register(new Emitter<UserDataSyncError>());\n\treadonly onError: Event<UserDataSyncError> = this._onError.event;\n\n\tprivate lastSyncUrl: URI | undefined;\n\tprivate get syncUrl(): URI | undefined {\n\t\tconst value = this.storageService.get(storeUrlKey, StorageScope.GLOBAL);\n\t\treturn value ? URI.parse(value) : undefined;\n\t}\n\tprivate set syncUrl(syncUrl: URI | undefined) {\n\t\tif (syncUrl) {\n\t\t\tthis.storageService.store(storeUrlKey, syncUrl.toString(), StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\t} else {\n\t\t\tthis.storageService.remove(storeUrlKey, StorageScope.GLOBAL);\n\t\t}\n\t}\n\n\tprivate previousProductQuality: string | undefined;\n\tprivate get productQuality(): string | undefined {\n\t\treturn this.storageService.get(productQualityKey, StorageScope.GLOBAL);\n\t}\n\tprivate set productQuality(productQuality: string | undefined) {\n\t\tif (productQuality) {\n\t\t\tthis.storageService.store(productQualityKey, productQuality, StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\t} else {\n\t\t\tthis.storageService.remove(productQualityKey, StorageScope.GLOBAL);\n\t\t}\n\t}\n\n\tconstructor(\n\t\t@IProductService productService: IProductService,\n\t\t@IUserDataSyncStoreManagementService private readonly userDataSyncStoreManagementService: IUserDataSyncStoreManagementService,\n\t\t@IUserDataSyncStoreService private readonly userDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncResourceEnablementService private readonly userDataSyncResourceEnablementService: IUserDataSyncResourceEnablementService,\n\t\t@IUserDataSyncService private readonly userDataSyncService: IUserDataSyncService,\n\t\t@IUserDataSyncLogService private readonly logService: IUserDataSyncLogService,\n\t\t@IUserDataSyncAccountService private readonly userDataSyncAccountService: IUserDataSyncAccountService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IUserDataSyncMachinesService private readonly userDataSyncMachinesService: IUserDataSyncMachinesService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IUserDataAutoSyncEnablementService userDataAutoSyncEnablementService: IUserDataAutoSyncEnablementService\n\t) {\n\t\tsuper();\n\t\tthis.userDataAutoSyncEnablementService = userDataAutoSyncEnablementService as _IUserDataAutoSyncEnablementService;\n\t\tthis.syncTriggerDelayer = this._register(new Delayer<void>(0));\n\n\t\tthis.lastSyncUrl = this.syncUrl;\n\t\tthis.syncUrl = userDataSyncStoreManagementService.userDataSyncStore?.url;\n\n\t\tthis.previousProductQuality = this.productQuality;\n\t\tthis.productQuality = productService.quality;\n\n\t\tif (this.syncUrl) {\n\n\t\t\tthis.logService.info('Using settings sync service', this.syncUrl.toString());\n\t\t\tthis._register(userDataSyncStoreManagementService.onDidChangeUserDataSyncStore(() => {\n\t\t\t\tif (!isEqual(this.syncUrl, userDataSyncStoreManagementService.userDataSyncStore?.url)) {\n\t\t\t\t\tthis.lastSyncUrl = this.syncUrl;\n\t\t\t\t\tthis.syncUrl = userDataSyncStoreManagementService.userDataSyncStore?.url;\n\t\t\t\t\tif (this.syncUrl) {\n\t\t\t\t\t\tthis.logService.info('Using settings sync service', this.syncUrl.toString());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\tif (this.userDataAutoSyncEnablementService.isEnabled()) {\n\t\t\t\tthis.logService.info('Auto Sync is enabled.');\n\t\t\t} else {\n\t\t\t\tthis.logService.info('Auto Sync is disabled.');\n\t\t\t}\n\t\t\tthis.updateAutoSync();\n\n\t\t\tif (this.hasToDisableMachineEventually()) {\n\t\t\t\tthis.disableMachineEventually();\n\t\t\t}\n\n\t\t\tthis._register(userDataSyncAccountService.onDidChangeAccount(() => this.updateAutoSync()));\n\t\t\tthis._register(userDataSyncStoreService.onDidChangeDonotMakeRequestsUntil(() => this.updateAutoSync()));\n\t\t\tthis._register(Event.debounce<string, string[]>(userDataSyncService.onDidChangeLocal, (last, source) => last ? [...last, source] : [source], 1000)(sources => this.triggerSync(sources, false, false)));\n\t\t\tthis._register(Event.filter(this.userDataSyncResourceEnablementService.onDidChangeResourceEnablement, ([, enabled]) => enabled)(() => this.triggerSync(['resourceEnablement'], false, false)));\n\t\t\tthis._register(this.userDataSyncStoreManagementService.onDidChangeUserDataSyncStore(() => this.triggerSync(['userDataSyncStoreChanged'], false, false)));\n\t\t}\n\t}\n\n\tprivate updateAutoSync(): void {\n\t\tconst { enabled, message } = this.isAutoSyncEnabled();\n\t\tif (enabled) {\n\t\t\tif (this.autoSync.value === undefined) {\n\t\t\t\tthis.autoSync.value = new AutoSync(this.lastSyncUrl, 1000 * 60 * 5 /* 5 miutes */, this.userDataSyncStoreManagementService, this.userDataSyncStoreService, this.userDataSyncService, this.userDataSyncMachinesService, this.logService, this.storageService);\n\t\t\t\tthis.autoSync.value.register(this.autoSync.value.onDidStartSync(() => this.lastSyncTriggerTime = new Date().getTime()));\n\t\t\t\tthis.autoSync.value.register(this.autoSync.value.onDidFinishSync(e => this.onDidFinishSync(e)));\n\t\t\t\tif (this.startAutoSync()) {\n\t\t\t\t\tthis.autoSync.value.start();\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthis.syncTriggerDelayer.cancel();\n\t\t\tif (this.autoSync.value !== undefined) {\n\t\t\t\tif (message) {\n\t\t\t\t\tthis.logService.info(message);\n\t\t\t\t}\n\t\t\t\tthis.autoSync.clear();\n\t\t\t}\n\n\t\t\t/* log message when auto sync is not disabled by user */\n\t\t\telse if (message && this.userDataAutoSyncEnablementService.isEnabled()) {\n\t\t\t\tthis.logService.info(message);\n\t\t\t}\n\t\t}\n\t}\n\n\t// For tests purpose only\n\tprotected startAutoSync(): boolean { return true; }\n\n\tprivate isAutoSyncEnabled(): { enabled: boolean, message?: string } {\n\t\tif (!this.userDataAutoSyncEnablementService.isEnabled()) {\n\t\t\treturn { enabled: false, message: 'Auto Sync: Disabled.' };\n\t\t}\n\t\tif (!this.userDataSyncAccountService.account) {\n\t\t\treturn { enabled: false, message: 'Auto Sync: Suspended until auth token is available.' };\n\t\t}\n\t\tif (this.userDataSyncStoreService.donotMakeRequestsUntil) {\n\t\t\treturn { enabled: false, message: `Auto Sync: Suspended until ${toLocalISOString(this.userDataSyncStoreService.donotMakeRequestsUntil)} because server is not accepting requests until then.` };\n\t\t}\n\t\treturn { enabled: true };\n\t}\n\n\tasync turnOn(): Promise<void> {\n\t\tthis.stopDisableMachineEventually();\n\t\tthis.lastSyncUrl = this.syncUrl;\n\t\tthis.updateEnablement(true);\n\t}\n\n\tasync turnOff(everywhere: boolean, softTurnOffOnError?: boolean, donotRemoveMachine?: boolean): Promise<void> {\n\t\ttry {\n\n\t\t\t// Remove machine\n\t\t\tif (this.userDataSyncAccountService.account && !donotRemoveMachine) {\n\t\t\t\tawait this.userDataSyncMachinesService.removeCurrentMachine();\n\t\t\t}\n\n\t\t\t// Disable Auto Sync\n\t\t\tthis.updateEnablement(false);\n\n\t\t\t// Reset Session\n\t\t\tthis.storageService.remove(sessionIdKey, StorageScope.GLOBAL);\n\n\t\t\t// Reset\n\t\t\tif (everywhere) {\n\t\t\t\tthis.telemetryService.publicLog2('sync/turnOffEveryWhere');\n\t\t\t\tawait this.userDataSyncService.reset();\n\t\t\t} else {\n\t\t\t\tawait this.userDataSyncService.resetLocal();\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (softTurnOffOnError) {\n\t\t\t\tthis.logService.error(error);\n\t\t\t\tthis.updateEnablement(false);\n\t\t\t} else {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateEnablement(enabled: boolean): void {\n\t\tif (this.userDataAutoSyncEnablementService.isEnabled() !== enabled) {\n\t\t\tthis.telemetryService.publicLog2<{ enabled: boolean }, AutoSyncEnablementClassification>(enablementKey, { enabled });\n\t\t\tthis.userDataAutoSyncEnablementService.setEnablement(enabled);\n\t\t\tthis.updateAutoSync();\n\t\t}\n\t}\n\n\tprivate hasProductQualityChanged(): boolean {\n\t\treturn !!this.previousProductQuality && !!this.productQuality && this.previousProductQuality !== this.productQuality;\n\t}\n\n\tprivate async onDidFinishSync(error: Error | undefined): Promise<void> {\n\t\tif (!error) {\n\t\t\t// Sync finished without errors\n\t\t\tthis.successiveFailures = 0;\n\t\t\treturn;\n\t\t}\n\n\t\t// Error while syncing\n\t\tconst userDataSyncError = UserDataSyncError.toUserDataSyncError(error);\n\n\t\t// Log to telemetry\n\t\tif (userDataSyncError instanceof UserDataAutoSyncError) {\n\t\t\tthis.telemetryService.publicLog2<{ code: string, service: string }, AutoSyncErrorClassification>(`autosync/error`, { code: userDataSyncError.code, service: this.userDataSyncStoreManagementService.userDataSyncStore!.url.toString() });\n\t\t}\n\n\t\t// Session got expired\n\t\tif (userDataSyncError.code === UserDataSyncErrorCode.SessionExpired) {\n\t\t\tawait this.turnOff(false, true /* force soft turnoff on error */);\n\t\t\tthis.logService.info('Auto Sync: Turned off sync because current session is expired');\n\t\t}\n\n\t\t// Turned off from another device\n\t\telse if (userDataSyncError.code === UserDataSyncErrorCode.TurnedOff) {\n\t\t\tawait this.turnOff(false, true /* force soft turnoff on error */);\n\t\t\tthis.logService.info('Auto Sync: Turned off sync because sync is turned off in the cloud');\n\t\t}\n\n\t\t// Exceeded Rate Limit\n\t\telse if (userDataSyncError.code === UserDataSyncErrorCode.LocalTooManyRequests || userDataSyncError.code === UserDataSyncErrorCode.TooManyRequests) {\n\t\t\tawait this.turnOff(false, true /* force soft turnoff on error */,\n\t\t\t\ttrue /* do not disable machine because disabling a machine makes request to server and can fail with TooManyRequests */);\n\t\t\tthis.disableMachineEventually();\n\t\t\tthis.logService.info('Auto Sync: Turned off sync because of making too many requests to server');\n\t\t}\n\n\t\t// Upgrade Required or Gone\n\t\telse if (userDataSyncError.code === UserDataSyncErrorCode.UpgradeRequired || userDataSyncError.code === UserDataSyncErrorCode.Gone) {\n\t\t\tawait this.turnOff(false, true /* force soft turnoff on error */,\n\t\t\t\ttrue /* do not disable machine because disabling a machine makes request to server and can fail with upgrade required or gone */);\n\t\t\tthis.disableMachineEventually();\n\t\t\tthis.logService.info('Auto Sync: Turned off sync because current client is not compatible with server. Requires client upgrade.');\n\t\t}\n\n\t\t// Incompatible Local Content\n\t\telse if (userDataSyncError.code === UserDataSyncErrorCode.IncompatibleLocalContent) {\n\t\t\tawait this.turnOff(false, true /* force soft turnoff on error */);\n\t\t\tthis.logService.info(`Auto Sync: Turned off sync because server has ${userDataSyncError.resource} content with newer version than of client. Requires client upgrade.`);\n\t\t}\n\n\t\t// Incompatible Remote Content\n\t\telse if (userDataSyncError.code === UserDataSyncErrorCode.IncompatibleRemoteContent) {\n\t\t\tawait this.turnOff(false, true /* force soft turnoff on error */);\n\t\t\tthis.logService.info(`Auto Sync: Turned off sync because server has ${userDataSyncError.resource} content with older version than of client. Requires server reset.`);\n\t\t}\n\n\t\t// Service changed\n\t\telse if (userDataSyncError.code === UserDataSyncErrorCode.ServiceChanged || userDataSyncError.code === UserDataSyncErrorCode.DefaultServiceChanged) {\n\n\t\t\t// Check if default settings sync service has changed in web without changing the product quality\n\t\t\t// Then turn off settings sync and ask user to turn on again\n\t\t\tif (isWeb && userDataSyncError.code === UserDataSyncErrorCode.DefaultServiceChanged && !this.hasProductQualityChanged()) {\n\t\t\t\tawait this.turnOff(false, true /* force soft turnoff on error */);\n\t\t\t\tthis.logService.info('Auto Sync: Turned off sync because default sync service is changed.');\n\t\t\t}\n\n\t\t\t// Service has changed by the user. So turn off and turn on sync.\n\t\t\t// Show a prompt to the user about service change.\n\t\t\telse {\n\t\t\t\tawait this.turnOff(false, true /* force soft turnoff on error */, true /* do not disable machine */);\n\t\t\t\tawait this.turnOn();\n\t\t\t\tthis.logService.info('Auto Sync: Sync Service changed. Turned off auto sync, reset local state and turned on auto sync.');\n\t\t\t}\n\n\t\t}\n\n\t\telse {\n\t\t\tthis.logService.error(userDataSyncError);\n\t\t\tthis.successiveFailures++;\n\t\t}\n\n\t\tthis._onError.fire(userDataSyncError);\n\t}\n\n\tprivate async disableMachineEventually(): Promise<void> {\n\t\tthis.storageService.store(disableMachineEventuallyKey, true, StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\tawait timeout(1000 * 60 * 10);\n\n\t\t// Return if got stopped meanwhile.\n\t\tif (!this.hasToDisableMachineEventually()) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.stopDisableMachineEventually();\n\n\t\t// disable only if sync is disabled\n\t\tif (!this.userDataAutoSyncEnablementService.isEnabled() && this.userDataSyncAccountService.account) {\n\t\t\tawait this.userDataSyncMachinesService.removeCurrentMachine();\n\t\t}\n\t}\n\n\tprivate hasToDisableMachineEventually(): boolean {\n\t\treturn this.storageService.getBoolean(disableMachineEventuallyKey, StorageScope.GLOBAL, false);\n\t}\n\n\tprivate stopDisableMachineEventually(): void {\n\t\tthis.storageService.remove(disableMachineEventuallyKey, StorageScope.GLOBAL);\n\t}\n\n\tprivate sources: string[] = [];\n\tasync triggerSync(sources: string[], skipIfSyncedRecently: boolean, disableCache: boolean): Promise<void> {\n\t\tif (this.autoSync.value === undefined) {\n\t\t\treturn this.syncTriggerDelayer.cancel();\n\t\t}\n\n\t\tif (skipIfSyncedRecently && this.lastSyncTriggerTime\n\t\t\t&& Math.round((new Date().getTime() - this.lastSyncTriggerTime) / 1000) < 10) {\n\t\t\tthis.logService.debug('Auto Sync: Skipped. Limited to once per 10 seconds.');\n\t\t\treturn;\n\t\t}\n\n\t\tthis.sources.push(...sources);\n\t\treturn this.syncTriggerDelayer.trigger(async () => {\n\t\t\tthis.logService.trace('activity sources', ...this.sources);\n\t\t\tthis.telemetryService.publicLog2<{ sources: string[] }, AutoSyncClassification>('sync/triggered', { sources: this.sources });\n\t\t\tthis.sources = [];\n\t\t\tif (this.autoSync.value) {\n\t\t\t\tawait this.autoSync.value.sync('Activity', disableCache);\n\t\t\t}\n\t\t}, this.successiveFailures\n\t\t\t? this.getSyncTriggerDelayTime() * 1 * Math.min(Math.pow(2, this.successiveFailures), 60) /* Delay exponentially until max 1 minute */\n\t\t\t: this.getSyncTriggerDelayTime());\n\n\t}\n\n\tprotected getSyncTriggerDelayTime(): number {\n\t\treturn 1000; /* Debounce for a second if there are no failures */\n\t}\n\n}\n\nclass AutoSync extends Disposable {\n\n\tprivate static readonly INTERVAL_SYNCING = 'Interval';\n\n\tprivate readonly intervalHandler = this._register(new MutableDisposable<IDisposable>());\n\n\tprivate readonly _onDidStartSync = this._register(new Emitter<void>());\n\treadonly onDidStartSync = this._onDidStartSync.event;\n\n\tprivate readonly _onDidFinishSync = this._register(new Emitter<Error | undefined>());\n\treadonly onDidFinishSync = this._onDidFinishSync.event;\n\n\tprivate manifest: IUserDataManifest | null = null;\n\tprivate syncTask: ISyncTask | undefined;\n\tprivate syncPromise: CancelablePromise<void> | undefined;\n\n\tconstructor(\n\t\tprivate readonly lastSyncUrl: URI | undefined,\n\t\tprivate readonly interval: number /* in milliseconds */,\n\t\tprivate readonly userDataSyncStoreManagementService: IUserDataSyncStoreManagementService,\n\t\tprivate readonly userDataSyncStoreService: IUserDataSyncStoreService,\n\t\tprivate readonly userDataSyncService: IUserDataSyncService,\n\t\tprivate readonly userDataSyncMachinesService: IUserDataSyncMachinesService,\n\t\tprivate readonly logService: IUserDataSyncLogService,\n\t\tprivate readonly storageService: IStorageService,\n\t) {\n\t\tsuper();\n\t}\n\n\tstart(): void {\n\t\tthis._register(this.onDidFinishSync(() => this.waitUntilNextIntervalAndSync()));\n\t\tthis._register(toDisposable(() => {\n\t\t\tif (this.syncPromise) {\n\t\t\t\tthis.syncPromise.cancel();\n\t\t\t\tthis.logService.info('Auto sync: Cancelled sync that is in progress');\n\t\t\t\tthis.syncPromise = undefined;\n\t\t\t}\n\t\t\tif (this.syncTask) {\n\t\t\t\tthis.syncTask.stop();\n\t\t\t}\n\t\t\tthis.logService.info('Auto Sync: Stopped');\n\t\t}));\n\t\tthis.logService.info('Auto Sync: Started');\n\t\tthis.sync(AutoSync.INTERVAL_SYNCING, false);\n\t}\n\n\tprivate waitUntilNextIntervalAndSync(): void {\n\t\tthis.intervalHandler.value = disposableTimeout(() => this.sync(AutoSync.INTERVAL_SYNCING, false), this.interval);\n\t}\n\n\tsync(reason: string, disableCache: boolean): Promise<void> {\n\t\tconst syncPromise = createCancelablePromise(async token => {\n\t\t\tif (this.syncPromise) {\n\t\t\t\ttry {\n\t\t\t\t\t// Wait until existing sync is finished\n\t\t\t\t\tthis.logService.debug('Auto Sync: Waiting until sync is finished.');\n\t\t\t\t\tawait this.syncPromise;\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (isPromiseCanceledError(error)) {\n\t\t\t\t\t\t// Cancelled => Disposed. Donot continue sync.\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this.doSync(reason, disableCache, token);\n\t\t});\n\t\tthis.syncPromise = syncPromise;\n\t\tthis.syncPromise.finally(() => this.syncPromise = undefined);\n\t\treturn this.syncPromise;\n\t}\n\n\tprivate hasSyncServiceChanged(): boolean {\n\t\treturn this.lastSyncUrl !== undefined && !isEqual(this.lastSyncUrl, this.userDataSyncStoreManagementService.userDataSyncStore?.url);\n\t}\n\n\tprivate async hasDefaultServiceChanged(): Promise<boolean> {\n\t\tconst previous = await this.userDataSyncStoreManagementService.getPreviousUserDataSyncStore();\n\t\tconst current = this.userDataSyncStoreManagementService.userDataSyncStore;\n\t\t// check if defaults changed\n\t\treturn !!current && !!previous &&\n\t\t\t(!isEqual(current.defaultUrl, previous.defaultUrl) ||\n\t\t\t\t!isEqual(current.insidersUrl, previous.insidersUrl) ||\n\t\t\t\t!isEqual(current.stableUrl, previous.stableUrl));\n\t}\n\n\tprivate async doSync(reason: string, disableCache: boolean, token: CancellationToken): Promise<void> {\n\t\tthis.logService.info(`Auto Sync: Triggered by ${reason}`);\n\t\tthis._onDidStartSync.fire();\n\t\tlet error: Error | undefined;\n\t\ttry {\n\t\t\tthis.syncTask = await this.userDataSyncService.createSyncTask(this.manifest, disableCache);\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.manifest = this.syncTask.manifest;\n\n\t\t\t// Server has no data but this machine was synced before\n\t\t\tif (this.manifest === null && await this.userDataSyncService.hasPreviouslySynced()) {\n\t\t\t\tif (this.hasSyncServiceChanged()) {\n\t\t\t\t\tif (await this.hasDefaultServiceChanged()) {\n\t\t\t\t\t\tthrow new UserDataAutoSyncError(localize('default service changed', \"Cannot sync because default service has changed\"), UserDataSyncErrorCode.DefaultServiceChanged);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new UserDataAutoSyncError(localize('service changed', \"Cannot sync because sync service has changed\"), UserDataSyncErrorCode.ServiceChanged);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Sync was turned off in the cloud\n\t\t\t\t\tthrow new UserDataAutoSyncError(localize('turned off', \"Cannot sync because syncing is turned off in the cloud\"), UserDataSyncErrorCode.TurnedOff);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst sessionId = this.storageService.get(sessionIdKey, StorageScope.GLOBAL);\n\t\t\t// Server session is different from client session\n\t\t\tif (sessionId && this.manifest && sessionId !== this.manifest.session) {\n\t\t\t\tif (this.hasSyncServiceChanged()) {\n\t\t\t\t\tif (await this.hasDefaultServiceChanged()) {\n\t\t\t\t\t\tthrow new UserDataAutoSyncError(localize('default service changed', \"Cannot sync because default service has changed\"), UserDataSyncErrorCode.DefaultServiceChanged);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new UserDataAutoSyncError(localize('service changed', \"Cannot sync because sync service has changed\"), UserDataSyncErrorCode.ServiceChanged);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthrow new UserDataAutoSyncError(localize('session expired', \"Cannot sync because current session is expired\"), UserDataSyncErrorCode.SessionExpired);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst machines = await this.userDataSyncMachinesService.getMachines(this.manifest || undefined);\n\t\t\t// Return if cancellation is requested\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst currentMachine = machines.find(machine => machine.isCurrent);\n\t\t\t// Check if sync was turned off from other machine\n\t\t\tif (currentMachine?.disabled) {\n\t\t\t\t// Throw TurnedOff error\n\t\t\t\tthrow new UserDataAutoSyncError(localize('turned off machine', \"Cannot sync because syncing is turned off on this machine from another machine.\"), UserDataSyncErrorCode.TurnedOff);\n\t\t\t}\n\n\t\t\tawait this.syncTask.run();\n\n\t\t\t// After syncing, get the manifest if it was not available before\n\t\t\tif (this.manifest === null) {\n\t\t\t\ttry {\n\t\t\t\t\tthis.manifest = await this.userDataSyncStoreService.manifest(null);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthrow new UserDataAutoSyncError(toErrorMessage(error), error instanceof UserDataSyncError ? error.code : UserDataSyncErrorCode.Unknown);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Update local session id\n\t\t\tif (this.manifest && this.manifest.session !== sessionId) {\n\t\t\t\tthis.storageService.store(sessionIdKey, this.manifest.session, StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\t\t}\n\n\t\t\t// Return if cancellation is requested\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Add current machine\n\t\t\tif (!currentMachine) {\n\t\t\t\tawait this.userDataSyncMachinesService.addCurrentMachine(this.manifest || undefined);\n\t\t\t}\n\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t\terror = e;\n\t\t}\n\n\t\tthis._onDidFinishSync.fire(error);\n\t}\n\n\tregister<T extends IDisposable>(t: T): T {\n\t\treturn super._register(t);\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { isWeb } from 'vs/base/common/platform';\nimport { IStorageService, IStorageValueChangeEvent, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { ALL_SYNC_RESOURCES, getEnablementKey, IUserDataSyncResourceEnablementService, SyncResource } from 'vs/platform/userDataSync/common/userDataSync';\n\ntype SyncEnablementClassification = {\n\tenabled?: { classification: 'SystemMetaData', purpose: 'FeatureInsight', isMeasurement: true };\n};\n\nexport class UserDataSyncResourceEnablementService extends Disposable implements IUserDataSyncResourceEnablementService {\n\n\t_serviceBrand: any;\n\n\tprivate _onDidChangeResourceEnablement = new Emitter<[SyncResource, boolean]>();\n\treadonly onDidChangeResourceEnablement: Event<[SyncResource, boolean]> = this._onDidChangeResourceEnablement.event;\n\n\tconstructor(\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t) {\n\t\tsuper();\n\t\tthis._register(storageService.onDidChangeValue(e => this.onDidStorageChange(e)));\n\t}\n\n\tisResourceEnabled(resource: SyncResource): boolean {\n\t\treturn this.storageService.getBoolean(getEnablementKey(resource), StorageScope.GLOBAL, true);\n\t}\n\n\tsetResourceEnablement(resource: SyncResource, enabled: boolean): void {\n\t\tif (this.isResourceEnabled(resource) !== enabled) {\n\t\t\tconst resourceEnablementKey = getEnablementKey(resource);\n\t\t\tthis.telemetryService.publicLog2<{ enabled: boolean }, SyncEnablementClassification>(resourceEnablementKey, { enabled });\n\t\t\tthis.storeResourceEnablement(resourceEnablementKey, enabled);\n\t\t}\n\t}\n\n\tgetResourceSyncStateVersion(resource: SyncResource): string | undefined {\n\t\treturn undefined;\n\t}\n\n\tprivate storeResourceEnablement(resourceEnablementKey: string, enabled: boolean): void {\n\t\tthis.storageService.store(resourceEnablementKey, enabled, StorageScope.GLOBAL, isWeb ? StorageTarget.USER /* sync in web */ : StorageTarget.MACHINE);\n\t}\n\n\tprivate onDidStorageChange(storageChangeEvent: IStorageValueChangeEvent): void {\n\t\tif (storageChangeEvent.scope === StorageScope.GLOBAL) {\n\t\t\tconst resourceKey = ALL_SYNC_RESOURCES.filter(resourceKey => getEnablementKey(resourceKey) === storageChangeEvent.key)[0];\n\t\t\tif (resourceKey) {\n\t\t\t\tthis._onDidChangeResourceEnablement.fire([resourceKey, this.isResourceEnabled(resourceKey)]);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { equals } from 'vs/base/common/arrays';\nimport { CancelablePromise, createCancelablePromise } from 'vs/base/common/async';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { isPromiseCanceledError } from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { isEqual } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IHeaders } from 'vs/base/parts/request/common/request';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { ExtensionsSynchroniser } from 'vs/platform/userDataSync/common/extensionsSync';\nimport { GlobalStateSynchroniser } from 'vs/platform/userDataSync/common/globalStateSync';\nimport { KeybindingsSynchroniser } from 'vs/platform/userDataSync/common/keybindingsSync';\nimport { SettingsSynchroniser } from 'vs/platform/userDataSync/common/settingsSync';\nimport { SnippetsSynchroniser } from 'vs/platform/userDataSync/common/snippetsSync';\nimport { Change, createSyncHeaders, IManualSyncTask, IResourcePreview, ISyncResourceHandle, ISyncResourcePreview, ISyncTask, IUserDataManifest, IUserDataSyncConfiguration, IUserDataSynchroniser, IUserDataSyncLogService, IUserDataSyncService, IUserDataSyncStoreManagementService, IUserDataSyncStoreService, MergeState, SyncResource, SyncStatus, UserDataSyncError, UserDataSyncErrorCode, UserDataSyncStoreError, USER_DATA_SYNC_CONFIGURATION_SCOPE } from 'vs/platform/userDataSync/common/userDataSync';\n\ntype SyncErrorClassification = {\n\tcode: { classification: 'SystemMetaData', purpose: 'FeatureInsight', isMeasurement: true };\n\tservice: { classification: 'SystemMetaData', purpose: 'FeatureInsight', isMeasurement: true };\n\tserverCode?: { classification: 'SystemMetaData', purpose: 'FeatureInsight', isMeasurement: true };\n\turl?: { classification: 'SystemMetaData', purpose: 'FeatureInsight', isMeasurement: true };\n\tresource?: { classification: 'SystemMetaData', purpose: 'FeatureInsight', isMeasurement: true };\n\texecutionId?: { classification: 'SystemMetaData', purpose: 'FeatureInsight', isMeasurement: true };\n};\n\nconst LAST_SYNC_TIME_KEY = 'sync.lastSyncTime';\n\nexport class UserDataSyncService extends Disposable implements IUserDataSyncService {\n\n\t_serviceBrand: any;\n\n\tprivate readonly synchronisers: IUserDataSynchroniser[];\n\n\tprivate _status: SyncStatus = SyncStatus.Uninitialized;\n\tget status(): SyncStatus { return this._status; }\n\tprivate _onDidChangeStatus: Emitter<SyncStatus> = this._register(new Emitter<SyncStatus>());\n\treadonly onDidChangeStatus: Event<SyncStatus> = this._onDidChangeStatus.event;\n\n\treadonly onDidChangeLocal: Event<SyncResource>;\n\n\tprivate _conflicts: [SyncResource, IResourcePreview[]][] = [];\n\tget conflicts(): [SyncResource, IResourcePreview[]][] { return this._conflicts; }\n\tprivate _onDidChangeConflicts: Emitter<[SyncResource, IResourcePreview[]][]> = this._register(new Emitter<[SyncResource, IResourcePreview[]][]>());\n\treadonly onDidChangeConflicts: Event<[SyncResource, IResourcePreview[]][]> = this._onDidChangeConflicts.event;\n\n\tprivate _syncErrors: [SyncResource, UserDataSyncError][] = [];\n\tprivate _onSyncErrors: Emitter<[SyncResource, UserDataSyncError][]> = this._register(new Emitter<[SyncResource, UserDataSyncError][]>());\n\treadonly onSyncErrors: Event<[SyncResource, UserDataSyncError][]> = this._onSyncErrors.event;\n\n\tprivate _lastSyncTime: number | undefined = undefined;\n\tget lastSyncTime(): number | undefined { return this._lastSyncTime; }\n\tprivate _onDidChangeLastSyncTime: Emitter<number> = this._register(new Emitter<number>());\n\treadonly onDidChangeLastSyncTime: Event<number> = this._onDidChangeLastSyncTime.event;\n\n\tprivate _onDidResetLocal = this._register(new Emitter<void>());\n\treadonly onDidResetLocal = this._onDidResetLocal.event;\n\tprivate _onDidResetRemote = this._register(new Emitter<void>());\n\treadonly onDidResetRemote = this._onDidResetRemote.event;\n\n\tprivate readonly settingsSynchroniser: SettingsSynchroniser;\n\tprivate readonly keybindingsSynchroniser: KeybindingsSynchroniser;\n\tprivate readonly snippetsSynchroniser: SnippetsSynchroniser;\n\tprivate readonly extensionsSynchroniser: ExtensionsSynchroniser;\n\tprivate readonly globalStateSynchroniser: GlobalStateSynchroniser;\n\n\tconstructor(\n\t\t@IUserDataSyncStoreService private readonly userDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncStoreManagementService private readonly userDataSyncStoreManagementService: IUserDataSyncStoreManagementService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IUserDataSyncLogService private readonly logService: IUserDataSyncLogService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t) {\n\t\tsuper();\n\t\tthis.settingsSynchroniser = this._register(this.instantiationService.createInstance(SettingsSynchroniser));\n\t\tthis.keybindingsSynchroniser = this._register(this.instantiationService.createInstance(KeybindingsSynchroniser));\n\t\tthis.snippetsSynchroniser = this._register(this.instantiationService.createInstance(SnippetsSynchroniser));\n\t\tthis.globalStateSynchroniser = this._register(this.instantiationService.createInstance(GlobalStateSynchroniser));\n\t\tthis.extensionsSynchroniser = this._register(this.instantiationService.createInstance(ExtensionsSynchroniser));\n\t\tthis.synchronisers = [this.settingsSynchroniser, this.keybindingsSynchroniser, this.snippetsSynchroniser, this.globalStateSynchroniser, this.extensionsSynchroniser];\n\t\tthis.updateStatus();\n\n\t\tif (this.userDataSyncStoreManagementService.userDataSyncStore) {\n\t\t\tthis._register(Event.any(...this.synchronisers.map(s => Event.map(s.onDidChangeStatus, () => undefined)))(() => this.updateStatus()));\n\t\t\tthis._register(Event.any(...this.synchronisers.map(s => Event.map(s.onDidChangeConflicts, () => undefined)))(() => this.updateConflicts()));\n\t\t}\n\n\t\tthis._lastSyncTime = this.storageService.getNumber(LAST_SYNC_TIME_KEY, StorageScope.GLOBAL, undefined);\n\t\tthis.onDidChangeLocal = Event.any(...this.synchronisers.map(s => Event.map(s.onDidChangeLocal, () => s.resource)));\n\t}\n\n\tasync createSyncTask(manifest: IUserDataManifest | null, disableCache?: boolean): Promise<ISyncTask> {\n\t\tawait this.checkEnablement();\n\n\t\tconst executionId = generateUuid();\n\t\ttry {\n\t\t\tconst syncHeaders = createSyncHeaders(executionId);\n\t\t\tif (disableCache) {\n\t\t\t\tsyncHeaders['Cache-Control'] = 'no-cache';\n\t\t\t}\n\t\t\tmanifest = await this.userDataSyncStoreService.manifest(manifest, syncHeaders);\n\t\t} catch (error) {\n\t\t\tconst userDataSyncError = UserDataSyncError.toUserDataSyncError(error);\n\t\t\tthis.reportUserDataSyncError(userDataSyncError, executionId);\n\t\t\tthrow userDataSyncError;\n\t\t}\n\n\t\tlet executed = false;\n\t\tconst that = this;\n\t\tlet cancellablePromise: CancelablePromise<void> | undefined;\n\t\treturn {\n\t\t\tmanifest,\n\t\t\trun(): Promise<void> {\n\t\t\t\tif (executed) {\n\t\t\t\t\tthrow new Error('Can run a task only once');\n\t\t\t\t}\n\t\t\t\tcancellablePromise = createCancelablePromise(token => that.sync(manifest, executionId, token));\n\t\t\t\treturn cancellablePromise.finally(() => cancellablePromise = undefined);\n\t\t\t},\n\t\t\tasync stop(): Promise<void> {\n\t\t\t\tif (cancellablePromise) {\n\t\t\t\t\tcancellablePromise.cancel();\n\t\t\t\t}\n\t\t\t\tif (that.status !== SyncStatus.Idle) {\n\t\t\t\t\treturn that.stop();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tasync createManualSyncTask(): Promise<IManualSyncTask> {\n\t\tawait this.checkEnablement();\n\n\t\tconst executionId = generateUuid();\n\t\tconst syncHeaders = createSyncHeaders(executionId);\n\n\t\tlet manifest: IUserDataManifest | null;\n\t\ttry {\n\t\t\tmanifest = await this.userDataSyncStoreService.manifest(null, syncHeaders);\n\t\t} catch (error) {\n\t\t\tconst userDataSyncError = UserDataSyncError.toUserDataSyncError(error);\n\t\t\tthis.reportUserDataSyncError(userDataSyncError, executionId);\n\t\t\tthrow userDataSyncError;\n\t\t}\n\n\t\treturn new ManualSyncTask(executionId, manifest, syncHeaders, this.synchronisers, this.configurationService, this.logService);\n\t}\n\n\tprivate recoveredSettings: boolean = false;\n\tprivate async sync(manifest: IUserDataManifest | null, executionId: string, token: CancellationToken): Promise<void> {\n\t\tif (!this.recoveredSettings) {\n\t\t\tawait this.settingsSynchroniser.recoverSettings();\n\t\t\tthis.recoveredSettings = true;\n\t\t}\n\n\t\t// Return if cancellation is requested\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst startTime = new Date().getTime();\n\t\tthis._syncErrors = [];\n\t\ttry {\n\t\t\tthis.logService.trace('Sync started.');\n\t\t\tif (this.status !== SyncStatus.HasConflicts) {\n\t\t\t\tthis.setStatus(SyncStatus.Syncing);\n\t\t\t}\n\n\t\t\tconst syncHeaders = createSyncHeaders(executionId);\n\n\t\t\tfor (const synchroniser of this.synchronisers) {\n\t\t\t\t// Return if cancellation is requested\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tawait synchroniser.sync(manifest, syncHeaders);\n\t\t\t\t} catch (e) {\n\n\t\t\t\t\tlet bailout: boolean = false;\n\t\t\t\t\tif (e instanceof UserDataSyncError) {\n\t\t\t\t\t\tswitch (e.code) {\n\t\t\t\t\t\t\tcase UserDataSyncErrorCode.TooLarge:\n\t\t\t\t\t\t\t\te = new UserDataSyncError(e.message, e.code, synchroniser.resource);\n\t\t\t\t\t\t\t\tbailout = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase UserDataSyncErrorCode.TooManyRequests:\n\t\t\t\t\t\t\tcase UserDataSyncErrorCode.TooManyRequestsAndRetryAfter:\n\t\t\t\t\t\t\tcase UserDataSyncErrorCode.LocalTooManyRequests:\n\t\t\t\t\t\t\tcase UserDataSyncErrorCode.Gone:\n\t\t\t\t\t\t\tcase UserDataSyncErrorCode.UpgradeRequired:\n\t\t\t\t\t\t\tcase UserDataSyncErrorCode.IncompatibleRemoteContent:\n\t\t\t\t\t\t\tcase UserDataSyncErrorCode.IncompatibleLocalContent:\n\t\t\t\t\t\t\t\tbailout = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst userDataSyncError = UserDataSyncError.toUserDataSyncError(e);\n\t\t\t\t\tthis.reportUserDataSyncError(userDataSyncError, executionId);\n\t\t\t\t\tif (bailout) {\n\t\t\t\t\t\tthrow userDataSyncError;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Log and and continue\n\t\t\t\t\tthis.logService.error(e);\n\t\t\t\t\tthis.logService.error(`${synchroniser.resource}: ${toErrorMessage(e)}`);\n\t\t\t\t\tthis._syncErrors.push([synchroniser.resource, userDataSyncError]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.logService.info(`Sync done. Took ${new Date().getTime() - startTime}ms`);\n\t\t\tthis.updateLastSyncTime();\n\t\t} catch (error) {\n\t\t\tconst userDataSyncError = UserDataSyncError.toUserDataSyncError(error);\n\t\t\tthis.reportUserDataSyncError(userDataSyncError, executionId);\n\t\t\tthrow userDataSyncError;\n\t\t} finally {\n\t\t\tthis.updateStatus();\n\t\t\tthis._onSyncErrors.fire(this._syncErrors);\n\t\t}\n\t}\n\n\tprivate async stop(): Promise<void> {\n\t\tif (this.status === SyncStatus.Idle) {\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const synchroniser of this.synchronisers) {\n\t\t\ttry {\n\t\t\t\tif (synchroniser.status !== SyncStatus.Idle) {\n\t\t\t\t\tawait synchroniser.stop();\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tthis.logService.error(e);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tasync replace(uri: URI): Promise<void> {\n\t\tawait this.checkEnablement();\n\t\tfor (const synchroniser of this.synchronisers) {\n\t\t\tif (await synchroniser.replace(uri)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tasync accept(syncResource: SyncResource, resource: URI, content: string | null | undefined, apply: boolean): Promise<void> {\n\t\tawait this.checkEnablement();\n\t\tconst synchroniser = this.getSynchroniser(syncResource);\n\t\tawait synchroniser.accept(resource, content);\n\t\tif (apply) {\n\t\t\tawait synchroniser.apply(false, createSyncHeaders(generateUuid()));\n\t\t}\n\t}\n\n\tasync resolveContent(resource: URI): Promise<string | null> {\n\t\tfor (const synchroniser of this.synchronisers) {\n\t\t\tconst content = await synchroniser.resolveContent(resource);\n\t\t\tif (content) {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tgetRemoteSyncResourceHandles(resource: SyncResource): Promise<ISyncResourceHandle[]> {\n\t\treturn this.getSynchroniser(resource).getRemoteSyncResourceHandles();\n\t}\n\n\tgetLocalSyncResourceHandles(resource: SyncResource): Promise<ISyncResourceHandle[]> {\n\t\treturn this.getSynchroniser(resource).getLocalSyncResourceHandles();\n\t}\n\n\tgetAssociatedResources(resource: SyncResource, syncResourceHandle: ISyncResourceHandle): Promise<{ resource: URI, comparableResource: URI }[]> {\n\t\treturn this.getSynchroniser(resource).getAssociatedResources(syncResourceHandle);\n\t}\n\n\tgetMachineId(resource: SyncResource, syncResourceHandle: ISyncResourceHandle): Promise<string | undefined> {\n\t\treturn this.getSynchroniser(resource).getMachineId(syncResourceHandle);\n\t}\n\n\tasync hasLocalData(): Promise<boolean> {\n\t\t// skip global state synchronizer\n\t\tconst synchronizers = [this.settingsSynchroniser, this.keybindingsSynchroniser, this.snippetsSynchroniser, this.extensionsSynchroniser];\n\t\tfor (const synchroniser of synchronizers) {\n\t\t\tif (await synchroniser.hasLocalData()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tasync reset(): Promise<void> {\n\t\tawait this.checkEnablement();\n\t\tawait this.resetRemote();\n\t\tawait this.resetLocal();\n\t}\n\n\tasync resetRemote(): Promise<void> {\n\t\tawait this.checkEnablement();\n\t\ttry {\n\t\t\tawait this.userDataSyncStoreService.clear();\n\t\t\tthis.logService.info('Cleared data on server');\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t}\n\t\tthis._onDidResetRemote.fire();\n\t}\n\n\tasync resetLocal(): Promise<void> {\n\t\tawait this.checkEnablement();\n\t\tthis.storageService.remove(LAST_SYNC_TIME_KEY, StorageScope.GLOBAL);\n\t\tfor (const synchroniser of this.synchronisers) {\n\t\t\ttry {\n\t\t\t\tawait synchroniser.resetLocal();\n\t\t\t} catch (e) {\n\t\t\t\tthis.logService.error(`${synchroniser.resource}: ${toErrorMessage(e)}`);\n\t\t\t\tthis.logService.error(e);\n\t\t\t}\n\t\t}\n\t\tthis._onDidResetLocal.fire();\n\t\tthis.logService.info('Did reset the local sync state.');\n\t}\n\n\tasync hasPreviouslySynced(): Promise<boolean> {\n\t\tfor (const synchroniser of this.synchronisers) {\n\t\t\tif (await synchroniser.hasPreviouslySynced()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate setStatus(status: SyncStatus): void {\n\t\tconst oldStatus = this._status;\n\t\tif (this._status !== status) {\n\t\t\tthis._status = status;\n\t\t\tthis._onDidChangeStatus.fire(status);\n\t\t\tif (oldStatus === SyncStatus.HasConflicts) {\n\t\t\t\tthis.updateLastSyncTime();\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate updateStatus(): void {\n\t\tthis.updateConflicts();\n\t\tconst status = this.computeStatus();\n\t\tthis.setStatus(status);\n\t}\n\n\tprivate updateConflicts(): void {\n\t\tconst conflicts = this.computeConflicts();\n\t\tif (!equals(this._conflicts, conflicts, ([syncResourceA, conflictsA], [syncResourceB, conflictsB]) => syncResourceA === syncResourceA && equals(conflictsA, conflictsB, (a, b) => isEqual(a.previewResource, b.previewResource)))) {\n\t\t\tthis._conflicts = this.computeConflicts();\n\t\t\tthis._onDidChangeConflicts.fire(conflicts);\n\t\t}\n\t}\n\n\tprivate computeStatus(): SyncStatus {\n\t\tif (!this.userDataSyncStoreManagementService.userDataSyncStore) {\n\t\t\treturn SyncStatus.Uninitialized;\n\t\t}\n\t\tif (this.synchronisers.some(s => s.status === SyncStatus.HasConflicts)) {\n\t\t\treturn SyncStatus.HasConflicts;\n\t\t}\n\t\tif (this.synchronisers.some(s => s.status === SyncStatus.Syncing)) {\n\t\t\treturn SyncStatus.Syncing;\n\t\t}\n\t\treturn SyncStatus.Idle;\n\t}\n\n\tprivate updateLastSyncTime(): void {\n\t\tif (this.status === SyncStatus.Idle) {\n\t\t\tthis._lastSyncTime = new Date().getTime();\n\t\t\tthis.storageService.store(LAST_SYNC_TIME_KEY, this._lastSyncTime, StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\t\tthis._onDidChangeLastSyncTime.fire(this._lastSyncTime);\n\t\t}\n\t}\n\n\tprivate reportUserDataSyncError(userDataSyncError: UserDataSyncError, executionId: string) {\n\t\tthis.telemetryService.publicLog2<{ code: string, service: string, serverCode?: string, url?: string, resource?: string, executionId?: string }, SyncErrorClassification>('sync/error',\n\t\t\t{\n\t\t\t\tcode: userDataSyncError.code,\n\t\t\t\tserverCode: userDataSyncError instanceof UserDataSyncStoreError ? String(userDataSyncError.serverCode) : undefined,\n\t\t\t\turl: userDataSyncError instanceof UserDataSyncStoreError ? userDataSyncError.url : undefined,\n\t\t\t\tresource: userDataSyncError.resource,\n\t\t\t\texecutionId,\n\t\t\t\tservice: this.userDataSyncStoreManagementService.userDataSyncStore!.url.toString()\n\t\t\t});\n\t}\n\n\tprivate computeConflicts(): [SyncResource, IResourcePreview[]][] {\n\t\treturn this.synchronisers.filter(s => s.status === SyncStatus.HasConflicts)\n\t\t\t.map(s => ([s.resource, s.conflicts.map(toStrictResourcePreview)]));\n\t}\n\n\tgetSynchroniser(source: SyncResource): IUserDataSynchroniser {\n\t\treturn this.synchronisers.find(s => s.resource === source)!;\n\t}\n\n\tprivate async checkEnablement(): Promise<void> {\n\t\tif (!this.userDataSyncStoreManagementService.userDataSyncStore) {\n\t\t\tthrow new Error('Not enabled');\n\t\t}\n\t}\n\n}\n\nclass ManualSyncTask extends Disposable implements IManualSyncTask {\n\n\tprivate previewsPromise: CancelablePromise<[SyncResource, ISyncResourcePreview][]> | undefined;\n\tprivate previews: [SyncResource, ISyncResourcePreview][] | undefined;\n\n\tprivate synchronizingResources: [SyncResource, URI[]][] = [];\n\tprivate _onSynchronizeResources = this._register(new Emitter<[SyncResource, URI[]][]>());\n\treadonly onSynchronizeResources = this._onSynchronizeResources.event;\n\n\tprivate isDisposed: boolean = false;\n\n\tget status(): SyncStatus {\n\t\tif (this.synchronisers.some(s => s.status === SyncStatus.HasConflicts)) {\n\t\t\treturn SyncStatus.HasConflicts;\n\t\t}\n\t\tif (this.synchronisers.some(s => s.status === SyncStatus.Syncing)) {\n\t\t\treturn SyncStatus.Syncing;\n\t\t}\n\t\treturn SyncStatus.Idle;\n\t}\n\n\tconstructor(\n\t\treadonly id: string,\n\t\treadonly manifest: IUserDataManifest | null,\n\t\tprivate readonly syncHeaders: IHeaders,\n\t\tprivate readonly synchronisers: IUserDataSynchroniser[],\n\t\tprivate readonly configurationService: IConfigurationService,\n\t\tprivate readonly logService: IUserDataSyncLogService,\n\t) {\n\t\tsuper();\n\t}\n\n\tasync preview(): Promise<[SyncResource, ISyncResourcePreview][]> {\n\t\ttry {\n\t\t\tif (this.isDisposed) {\n\t\t\t\tthrow new Error('Disposed');\n\t\t\t}\n\t\t\tif (!this.previewsPromise) {\n\t\t\t\tthis.previewsPromise = createCancelablePromise(token => this.getPreviews(token));\n\t\t\t}\n\t\t\tif (!this.previews) {\n\t\t\t\tthis.previews = await this.previewsPromise;\n\t\t\t}\n\t\t\treturn this.previews;\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tasync accept(resource: URI, content?: string | null): Promise<[SyncResource, ISyncResourcePreview][]> {\n\t\ttry {\n\t\t\treturn await this.performAction(resource, sychronizer => sychronizer.accept(resource, content));\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tasync merge(resource?: URI): Promise<[SyncResource, ISyncResourcePreview][]> {\n\t\ttry {\n\t\t\tif (resource) {\n\t\t\t\treturn await this.performAction(resource, sychronizer => sychronizer.merge(resource));\n\t\t\t} else {\n\t\t\t\treturn await this.mergeAll();\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tasync discard(resource: URI): Promise<[SyncResource, ISyncResourcePreview][]> {\n\t\ttry {\n\t\t\treturn await this.performAction(resource, sychronizer => sychronizer.discard(resource));\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tasync discardConflicts(): Promise<[SyncResource, ISyncResourcePreview][]> {\n\t\ttry {\n\t\t\tif (!this.previews) {\n\t\t\t\tthrow new Error('Missing preview. Create preview and try again.');\n\t\t\t}\n\t\t\tif (this.synchronizingResources.length) {\n\t\t\t\tthrow new Error('Cannot discard while synchronizing resources');\n\t\t\t}\n\n\t\t\tconst conflictResources: URI[] = [];\n\t\t\tfor (const [, syncResourcePreview] of this.previews) {\n\t\t\t\tfor (const resourcePreview of syncResourcePreview.resourcePreviews) {\n\t\t\t\t\tif (resourcePreview.mergeState === MergeState.Conflict) {\n\t\t\t\t\t\tconflictResources.push(resourcePreview.previewResource);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const resource of conflictResources) {\n\t\t\t\tawait this.discard(resource);\n\t\t\t}\n\t\t\treturn this.previews;\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tasync apply(): Promise<[SyncResource, ISyncResourcePreview][]> {\n\t\ttry {\n\t\t\tif (!this.previews) {\n\t\t\t\tthrow new Error('You need to create preview before applying');\n\t\t\t}\n\t\t\tif (this.synchronizingResources.length) {\n\t\t\t\tthrow new Error('Cannot pull while synchronizing resources');\n\t\t\t}\n\t\t\tconst previews: [SyncResource, ISyncResourcePreview][] = [];\n\t\t\tfor (const [syncResource, preview] of this.previews) {\n\t\t\t\tthis.synchronizingResources.push([syncResource, preview.resourcePreviews.map(r => r.localResource)]);\n\t\t\t\tthis._onSynchronizeResources.fire(this.synchronizingResources);\n\n\t\t\t\tconst synchroniser = this.synchronisers.find(s => s.resource === syncResource)!;\n\n\t\t\t\t/* merge those which are not yet merged */\n\t\t\t\tfor (const resourcePreview of preview.resourcePreviews) {\n\t\t\t\t\tif ((resourcePreview.localChange !== Change.None || resourcePreview.remoteChange !== Change.None) && resourcePreview.mergeState === MergeState.Preview) {\n\t\t\t\t\t\tawait synchroniser.merge(resourcePreview.previewResource);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/* apply */\n\t\t\t\tconst newPreview = await synchroniser.apply(false, this.syncHeaders);\n\t\t\t\tif (newPreview) {\n\t\t\t\t\tpreviews.push(this.toSyncResourcePreview(synchroniser.resource, newPreview));\n\t\t\t\t}\n\n\t\t\t\tthis.synchronizingResources.splice(this.synchronizingResources.findIndex(s => s[0] === syncResource), 1);\n\t\t\t\tthis._onSynchronizeResources.fire(this.synchronizingResources);\n\t\t\t}\n\t\t\tthis.previews = previews;\n\t\t\treturn this.previews;\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tasync pull(): Promise<void> {\n\t\ttry {\n\t\t\tif (!this.previews) {\n\t\t\t\tthrow new Error('You need to create preview before applying');\n\t\t\t}\n\t\t\tif (this.synchronizingResources.length) {\n\t\t\t\tthrow new Error('Cannot pull while synchronizing resources');\n\t\t\t}\n\t\t\tfor (const [syncResource, preview] of this.previews) {\n\t\t\t\tthis.synchronizingResources.push([syncResource, preview.resourcePreviews.map(r => r.localResource)]);\n\t\t\t\tthis._onSynchronizeResources.fire(this.synchronizingResources);\n\t\t\t\tconst synchroniser = this.synchronisers.find(s => s.resource === syncResource)!;\n\t\t\t\tfor (const resourcePreview of preview.resourcePreviews) {\n\t\t\t\t\tawait synchroniser.accept(resourcePreview.remoteResource);\n\t\t\t\t}\n\t\t\t\tawait synchroniser.apply(true, this.syncHeaders);\n\t\t\t\tthis.synchronizingResources.splice(this.synchronizingResources.findIndex(s => s[0] === syncResource), 1);\n\t\t\t\tthis._onSynchronizeResources.fire(this.synchronizingResources);\n\t\t\t}\n\t\t\tthis.previews = [];\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tasync push(): Promise<void> {\n\t\ttry {\n\t\t\tif (!this.previews) {\n\t\t\t\tthrow new Error('You need to create preview before applying');\n\t\t\t}\n\t\t\tif (this.synchronizingResources.length) {\n\t\t\t\tthrow new Error('Cannot pull while synchronizing resources');\n\t\t\t}\n\t\t\tfor (const [syncResource, preview] of this.previews) {\n\t\t\t\tthis.synchronizingResources.push([syncResource, preview.resourcePreviews.map(r => r.localResource)]);\n\t\t\t\tthis._onSynchronizeResources.fire(this.synchronizingResources);\n\t\t\t\tconst synchroniser = this.synchronisers.find(s => s.resource === syncResource)!;\n\t\t\t\tfor (const resourcePreview of preview.resourcePreviews) {\n\t\t\t\t\tawait synchroniser.accept(resourcePreview.localResource);\n\t\t\t\t}\n\t\t\t\tawait synchroniser.apply(true, this.syncHeaders);\n\t\t\t\tthis.synchronizingResources.splice(this.synchronizingResources.findIndex(s => s[0] === syncResource), 1);\n\t\t\t\tthis._onSynchronizeResources.fire(this.synchronizingResources);\n\t\t\t}\n\t\t\tthis.previews = [];\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tasync stop(): Promise<void> {\n\t\tfor (const synchroniser of this.synchronisers) {\n\t\t\ttry {\n\t\t\t\tawait synchroniser.stop();\n\t\t\t} catch (error) {\n\t\t\t\tif (!isPromiseCanceledError(error)) {\n\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.reset();\n\t}\n\n\tprivate async performAction(resource: URI, action: (synchroniser: IUserDataSynchroniser) => Promise<ISyncResourcePreview | null>): Promise<[SyncResource, ISyncResourcePreview][]> {\n\t\tif (!this.previews) {\n\t\t\tthrow new Error('Missing preview. Create preview and try again.');\n\t\t}\n\n\t\tconst index = this.previews.findIndex(([, preview]) => preview.resourcePreviews.some(({ localResource, previewResource, remoteResource }) =>\n\t\t\tisEqual(resource, localResource) || isEqual(resource, previewResource) || isEqual(resource, remoteResource)));\n\t\tif (index === -1) {\n\t\t\treturn this.previews;\n\t\t}\n\n\t\tconst [syncResource, previews] = this.previews[index];\n\t\tconst resourcePreview = previews.resourcePreviews.find(({ localResource, remoteResource, previewResource }) => isEqual(localResource, resource) || isEqual(remoteResource, resource) || isEqual(previewResource, resource));\n\t\tif (!resourcePreview) {\n\t\t\treturn this.previews;\n\t\t}\n\n\t\tlet synchronizingResources = this.synchronizingResources.find(s => s[0] === syncResource);\n\t\tif (!synchronizingResources) {\n\t\t\tsynchronizingResources = [syncResource, []];\n\t\t\tthis.synchronizingResources.push(synchronizingResources);\n\t\t}\n\t\tif (!synchronizingResources[1].some(s => isEqual(s, resourcePreview.localResource))) {\n\t\t\tsynchronizingResources[1].push(resourcePreview.localResource);\n\t\t\tthis._onSynchronizeResources.fire(this.synchronizingResources);\n\t\t}\n\n\t\tconst synchroniser = this.synchronisers.find(s => s.resource === this.previews![index][0])!;\n\t\tconst preview = await action(synchroniser);\n\t\tpreview ? this.previews.splice(index, 1, this.toSyncResourcePreview(synchroniser.resource, preview)) : this.previews.splice(index, 1);\n\n\t\tconst i = this.synchronizingResources.findIndex(s => s[0] === syncResource);\n\t\tthis.synchronizingResources[i][1].splice(synchronizingResources[1].findIndex(r => isEqual(r, resourcePreview.localResource)), 1);\n\t\tif (!synchronizingResources[1].length) {\n\t\t\tthis.synchronizingResources.splice(i, 1);\n\t\t\tthis._onSynchronizeResources.fire(this.synchronizingResources);\n\t\t}\n\n\t\treturn this.previews;\n\t}\n\n\tprivate async mergeAll(): Promise<[SyncResource, ISyncResourcePreview][]> {\n\t\tif (!this.previews) {\n\t\t\tthrow new Error('You need to create preview before merging or applying');\n\t\t}\n\t\tif (this.synchronizingResources.length) {\n\t\t\tthrow new Error('Cannot merge or apply while synchronizing resources');\n\t\t}\n\t\tconst previews: [SyncResource, ISyncResourcePreview][] = [];\n\t\tfor (const [syncResource, preview] of this.previews) {\n\t\t\tthis.synchronizingResources.push([syncResource, preview.resourcePreviews.map(r => r.localResource)]);\n\t\t\tthis._onSynchronizeResources.fire(this.synchronizingResources);\n\n\t\t\tconst synchroniser = this.synchronisers.find(s => s.resource === syncResource)!;\n\n\t\t\t/* merge those which are not yet merged */\n\t\t\tlet newPreview: ISyncResourcePreview | null = preview;\n\t\t\tfor (const resourcePreview of preview.resourcePreviews) {\n\t\t\t\tif ((resourcePreview.localChange !== Change.None || resourcePreview.remoteChange !== Change.None) && resourcePreview.mergeState === MergeState.Preview) {\n\t\t\t\t\tnewPreview = await synchroniser.merge(resourcePreview.previewResource);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newPreview) {\n\t\t\t\tpreviews.push(this.toSyncResourcePreview(synchroniser.resource, newPreview));\n\t\t\t}\n\n\t\t\tthis.synchronizingResources.splice(this.synchronizingResources.findIndex(s => s[0] === syncResource), 1);\n\t\t\tthis._onSynchronizeResources.fire(this.synchronizingResources);\n\t\t}\n\t\tthis.previews = previews;\n\t\treturn this.previews;\n\t}\n\n\tprivate async getPreviews(token: CancellationToken): Promise<[SyncResource, ISyncResourcePreview][]> {\n\t\tconst result: [SyncResource, ISyncResourcePreview][] = [];\n\t\tconst remoteUserDataSyncConfiguration: IUserDataSyncConfiguration = await this.getUserDataSyncConfiguration();\n\t\tfor (const synchroniser of this.synchronisers) {\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\tconst preview = await synchroniser.preview(this.manifest, remoteUserDataSyncConfiguration, this.syncHeaders);\n\t\t\tif (preview) {\n\t\t\t\tresult.push(this.toSyncResourcePreview(synchroniser.resource, preview));\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate async getUserDataSyncConfiguration(): Promise<IUserDataSyncConfiguration> {\n\t\tconst local = this.configurationService.getValue<IUserDataSyncConfiguration>(USER_DATA_SYNC_CONFIGURATION_SCOPE);\n\t\tconst remote = await (<SettingsSynchroniser>this.synchronisers.find(synchronizer => synchronizer instanceof SettingsSynchroniser)).getRemoteUserDataSyncConfiguration(this.manifest);\n\t\treturn { ...local, ...remote };\n\t}\n\n\tprivate toSyncResourcePreview(syncResource: SyncResource, preview: ISyncResourcePreview): [SyncResource, ISyncResourcePreview] {\n\t\treturn [\n\t\t\tsyncResource,\n\t\t\t{\n\t\t\t\tisLastSyncFromCurrentMachine: preview.isLastSyncFromCurrentMachine,\n\t\t\t\tresourcePreviews: preview.resourcePreviews.map(toStrictResourcePreview)\n\t\t\t}\n\t\t];\n\t}\n\n\tprivate reset(): void {\n\t\tif (this.previewsPromise) {\n\t\t\tthis.previewsPromise.cancel();\n\t\t\tthis.previewsPromise = undefined;\n\t\t}\n\t\tthis.previews = undefined;\n\t\tthis.synchronizingResources = [];\n\t}\n\n\toverride dispose(): void {\n\t\tthis.reset();\n\t\tthis.isDisposed = true;\n\t}\n\n}\n\nfunction toStrictResourcePreview(resourcePreview: IResourcePreview): IResourcePreview {\n\treturn {\n\t\tlocalResource: resourcePreview.localResource,\n\t\tpreviewResource: resourcePreview.previewResource,\n\t\tremoteResource: resourcePreview.remoteResource,\n\t\tacceptedResource: resourcePreview.acceptedResource,\n\t\tlocalChange: resourcePreview.localChange,\n\t\tremoteChange: resourcePreview.remoteChange,\n\t\tmergeState: resourcePreview.mergeState,\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { isArray } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IManualSyncTask, IResourcePreview, ISyncResourceHandle, ISyncResourcePreview, ISyncTask, IUserDataManifest, IUserDataSyncService, SyncResource, SyncStatus, UserDataSyncError } from 'vs/platform/userDataSync/common/userDataSync';\n\ntype ManualSyncTaskEvent<T> = { manualSyncTaskId: string, data: T };\n\nexport class UserDataSyncChannel implements IServerChannel {\n\n\tprivate readonly manualSyncTasks = new Map<string, { manualSyncTask: IManualSyncTask, disposables: DisposableStore }>();\n\tprivate readonly onManualSynchronizeResources = new Emitter<ManualSyncTaskEvent<[SyncResource, URI[]][]>>();\n\n\tconstructor(private readonly service: IUserDataSyncService, private readonly logService: ILogService) { }\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\t// sync\n\t\t\tcase 'onDidChangeStatus': return this.service.onDidChangeStatus;\n\t\t\tcase 'onDidChangeConflicts': return this.service.onDidChangeConflicts;\n\t\t\tcase 'onDidChangeLocal': return this.service.onDidChangeLocal;\n\t\t\tcase 'onDidChangeLastSyncTime': return this.service.onDidChangeLastSyncTime;\n\t\t\tcase 'onSyncErrors': return this.service.onSyncErrors;\n\t\t\tcase 'onDidResetLocal': return this.service.onDidResetLocal;\n\t\t\tcase 'onDidResetRemote': return this.service.onDidResetRemote;\n\n\t\t\t// manual sync\n\t\t\tcase 'manualSync/onSynchronizeResources': return this.onManualSynchronizeResources.event;\n\t\t}\n\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tasync call(context: any, command: string, args?: any): Promise<any> {\n\t\ttry {\n\t\t\tconst result = await this._call(context, command, args);\n\t\t\treturn result;\n\t\t} catch (e) {\n\t\t\tthis.logService.error(e);\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\tprivate async _call(context: any, command: string, args?: any): Promise<any> {\n\t\tswitch (command) {\n\n\t\t\t// sync\n\t\t\tcase '_getInitialData': return Promise.resolve([this.service.status, this.service.conflicts, this.service.lastSyncTime]);\n\t\t\tcase 'replace': return this.service.replace(URI.revive(args[0]));\n\t\t\tcase 'reset': return this.service.reset();\n\t\t\tcase 'resetRemote': return this.service.resetRemote();\n\t\t\tcase 'resetLocal': return this.service.resetLocal();\n\t\t\tcase 'hasPreviouslySynced': return this.service.hasPreviouslySynced();\n\t\t\tcase 'hasLocalData': return this.service.hasLocalData();\n\t\t\tcase 'accept': return this.service.accept(args[0], URI.revive(args[1]), args[2], args[3]);\n\t\t\tcase 'resolveContent': return this.service.resolveContent(URI.revive(args[0]));\n\t\t\tcase 'getLocalSyncResourceHandles': return this.service.getLocalSyncResourceHandles(args[0]);\n\t\t\tcase 'getRemoteSyncResourceHandles': return this.service.getRemoteSyncResourceHandles(args[0]);\n\t\t\tcase 'getAssociatedResources': return this.service.getAssociatedResources(args[0], { created: args[1].created, uri: URI.revive(args[1].uri) });\n\t\t\tcase 'getMachineId': return this.service.getMachineId(args[0], { created: args[1].created, uri: URI.revive(args[1].uri) });\n\n\t\t\tcase 'createManualSyncTask': return this.createManualSyncTask();\n\t\t}\n\n\t\t// manual sync\n\t\tif (command.startsWith('manualSync/')) {\n\t\t\tconst manualSyncTaskCommand = command.substring('manualSync/'.length);\n\t\t\tconst manualSyncTaskId = args[0];\n\t\t\tconst manualSyncTask = this.getManualSyncTask(manualSyncTaskId);\n\t\t\targs = (<Array<any>>args).slice(1);\n\n\t\t\tswitch (manualSyncTaskCommand) {\n\t\t\t\tcase 'preview': return manualSyncTask.preview();\n\t\t\t\tcase 'accept': return manualSyncTask.accept(URI.revive(args[0]), args[1]);\n\t\t\t\tcase 'merge': return manualSyncTask.merge(URI.revive(args[0]));\n\t\t\t\tcase 'discard': return manualSyncTask.discard(URI.revive(args[0]));\n\t\t\t\tcase 'discardConflicts': return manualSyncTask.discardConflicts();\n\t\t\t\tcase 'apply': return manualSyncTask.apply();\n\t\t\t\tcase 'pull': return manualSyncTask.pull();\n\t\t\t\tcase 'push': return manualSyncTask.push();\n\t\t\t\tcase 'stop': return manualSyncTask.stop();\n\t\t\t\tcase '_getStatus': return manualSyncTask.status;\n\t\t\t\tcase 'dispose': return this.disposeManualSyncTask(manualSyncTask);\n\t\t\t}\n\t\t}\n\n\t\tthrow new Error('Invalid call');\n\t}\n\n\tprivate getManualSyncTask(manualSyncTaskId: string): IManualSyncTask {\n\t\tconst value = this.manualSyncTasks.get(this.createKey(manualSyncTaskId));\n\t\tif (!value) {\n\t\t\tthrow new Error(`Manual sync taks not found: ${manualSyncTaskId}`);\n\t\t}\n\t\treturn value.manualSyncTask;\n\t}\n\n\tprivate async createManualSyncTask(): Promise<{ id: string, manifest: IUserDataManifest | null, status: SyncStatus }> {\n\t\tconst disposables = new DisposableStore();\n\t\tconst manualSyncTask = disposables.add(await this.service.createManualSyncTask());\n\t\tdisposables.add(manualSyncTask.onSynchronizeResources(synchronizeResources => this.onManualSynchronizeResources.fire({ manualSyncTaskId: manualSyncTask.id, data: synchronizeResources })));\n\t\tthis.manualSyncTasks.set(this.createKey(manualSyncTask.id), { manualSyncTask, disposables });\n\t\treturn { id: manualSyncTask.id, manifest: manualSyncTask.manifest, status: manualSyncTask.status };\n\t}\n\n\tprivate disposeManualSyncTask(manualSyncTask: IManualSyncTask): void {\n\t\tmanualSyncTask.dispose();\n\t\tconst key = this.createKey(manualSyncTask.id);\n\t\tthis.manualSyncTasks.get(key)?.disposables.dispose();\n\t\tthis.manualSyncTasks.delete(key);\n\t}\n\n\tprivate createKey(manualSyncTaskId: string): string { return `manualSyncTask-${manualSyncTaskId}`; }\n\n}\n\nexport class UserDataSyncChannelClient extends Disposable implements IUserDataSyncService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly channel: IChannel;\n\n\tprivate _status: SyncStatus = SyncStatus.Uninitialized;\n\tget status(): SyncStatus { return this._status; }\n\tprivate _onDidChangeStatus: Emitter<SyncStatus> = this._register(new Emitter<SyncStatus>());\n\treadonly onDidChangeStatus: Event<SyncStatus> = this._onDidChangeStatus.event;\n\n\tget onDidChangeLocal(): Event<SyncResource> { return this.channel.listen<SyncResource>('onDidChangeLocal'); }\n\n\tprivate _conflicts: [SyncResource, IResourcePreview[]][] = [];\n\tget conflicts(): [SyncResource, IResourcePreview[]][] { return this._conflicts; }\n\tprivate _onDidChangeConflicts: Emitter<[SyncResource, IResourcePreview[]][]> = this._register(new Emitter<[SyncResource, IResourcePreview[]][]>());\n\treadonly onDidChangeConflicts: Event<[SyncResource, IResourcePreview[]][]> = this._onDidChangeConflicts.event;\n\n\tprivate _lastSyncTime: number | undefined = undefined;\n\tget lastSyncTime(): number | undefined { return this._lastSyncTime; }\n\tprivate _onDidChangeLastSyncTime: Emitter<number> = this._register(new Emitter<number>());\n\treadonly onDidChangeLastSyncTime: Event<number> = this._onDidChangeLastSyncTime.event;\n\n\tprivate _onSyncErrors: Emitter<[SyncResource, UserDataSyncError][]> = this._register(new Emitter<[SyncResource, UserDataSyncError][]>());\n\treadonly onSyncErrors: Event<[SyncResource, UserDataSyncError][]> = this._onSyncErrors.event;\n\n\tget onDidResetLocal(): Event<void> { return this.channel.listen<void>('onDidResetLocal'); }\n\tget onDidResetRemote(): Event<void> { return this.channel.listen<void>('onDidResetRemote'); }\n\n\tconstructor(userDataSyncChannel: IChannel) {\n\t\tsuper();\n\t\tthis.channel = {\n\t\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\treturn userDataSyncChannel.call(command, arg, cancellationToken)\n\t\t\t\t\t.then(null, error => { throw UserDataSyncError.toUserDataSyncError(error); });\n\t\t\t},\n\t\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\t\treturn userDataSyncChannel.listen(event, arg);\n\t\t\t}\n\t\t};\n\t\tthis.channel.call<[SyncStatus, [SyncResource, IResourcePreview[]][], number | undefined]>('_getInitialData').then(([status, conflicts, lastSyncTime]) => {\n\t\t\tthis.updateStatus(status);\n\t\t\tthis.updateConflicts(conflicts);\n\t\t\tif (lastSyncTime) {\n\t\t\t\tthis.updateLastSyncTime(lastSyncTime);\n\t\t\t}\n\t\t\tthis._register(this.channel.listen<SyncStatus>('onDidChangeStatus')(status => this.updateStatus(status)));\n\t\t\tthis._register(this.channel.listen<number>('onDidChangeLastSyncTime')(lastSyncTime => this.updateLastSyncTime(lastSyncTime)));\n\t\t});\n\t\tthis._register(this.channel.listen<[SyncResource, IResourcePreview[]][]>('onDidChangeConflicts')(conflicts => this.updateConflicts(conflicts)));\n\t\tthis._register(this.channel.listen<[SyncResource, Error][]>('onSyncErrors')(errors => this._onSyncErrors.fire(errors.map(([source, error]) => ([source, UserDataSyncError.toUserDataSyncError(error)])))));\n\t}\n\n\tcreateSyncTask(): Promise<ISyncTask> {\n\t\tthrow new Error('not supported');\n\t}\n\n\tasync createManualSyncTask(): Promise<IManualSyncTask> {\n\t\tconst { id, manifest, status } = await this.channel.call<{ id: string, manifest: IUserDataManifest | null, status: SyncStatus }>('createManualSyncTask');\n\t\tconst that = this;\n\t\tconst manualSyncTaskChannelClient = new ManualSyncTaskChannelClient(id, manifest, status, {\n\t\t\tasync call<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\treturn that.channel.call<T>(`manualSync/${command}`, [id, ...(isArray(arg) ? arg : [arg])], cancellationToken);\n\t\t\t},\n\t\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\t\treturn Event.map(\n\t\t\t\t\tEvent.filter(that.channel.listen<{ manualSyncTaskId: string, data: T }>(`manualSync/${event}`, arg), e => !manualSyncTaskChannelClient.isDiposed() && e.manualSyncTaskId === id),\n\t\t\t\t\te => e.data);\n\t\t\t}\n\t\t});\n\t\treturn manualSyncTaskChannelClient;\n\t}\n\n\treplace(uri: URI): Promise<void> {\n\t\treturn this.channel.call('replace', [uri]);\n\t}\n\n\treset(): Promise<void> {\n\t\treturn this.channel.call('reset');\n\t}\n\n\tresetRemote(): Promise<void> {\n\t\treturn this.channel.call('resetRemote');\n\t}\n\n\tresetLocal(): Promise<void> {\n\t\treturn this.channel.call('resetLocal');\n\t}\n\n\thasPreviouslySynced(): Promise<boolean> {\n\t\treturn this.channel.call('hasPreviouslySynced');\n\t}\n\n\thasLocalData(): Promise<boolean> {\n\t\treturn this.channel.call('hasLocalData');\n\t}\n\n\taccept(syncResource: SyncResource, resource: URI, content: string | null, apply: boolean): Promise<void> {\n\t\treturn this.channel.call('accept', [syncResource, resource, content, apply]);\n\t}\n\n\tresolveContent(resource: URI): Promise<string | null> {\n\t\treturn this.channel.call('resolveContent', [resource]);\n\t}\n\n\tasync getLocalSyncResourceHandles(resource: SyncResource): Promise<ISyncResourceHandle[]> {\n\t\tconst handles = await this.channel.call<ISyncResourceHandle[]>('getLocalSyncResourceHandles', [resource]);\n\t\treturn handles.map(({ created, uri }) => ({ created, uri: URI.revive(uri) }));\n\t}\n\n\tasync getRemoteSyncResourceHandles(resource: SyncResource): Promise<ISyncResourceHandle[]> {\n\t\tconst handles = await this.channel.call<ISyncResourceHandle[]>('getRemoteSyncResourceHandles', [resource]);\n\t\treturn handles.map(({ created, uri }) => ({ created, uri: URI.revive(uri) }));\n\t}\n\n\tasync getAssociatedResources(resource: SyncResource, syncResourceHandle: ISyncResourceHandle): Promise<{ resource: URI, comparableResource: URI }[]> {\n\t\tconst result = await this.channel.call<{ resource: URI, comparableResource: URI }[]>('getAssociatedResources', [resource, syncResourceHandle]);\n\t\treturn result.map(({ resource, comparableResource }) => ({ resource: URI.revive(resource), comparableResource: URI.revive(comparableResource) }));\n\t}\n\n\tasync getMachineId(resource: SyncResource, syncResourceHandle: ISyncResourceHandle): Promise<string | undefined> {\n\t\treturn this.channel.call<string | undefined>('getMachineId', [resource, syncResourceHandle]);\n\t}\n\n\tprivate async updateStatus(status: SyncStatus): Promise<void> {\n\t\tthis._status = status;\n\t\tthis._onDidChangeStatus.fire(status);\n\t}\n\n\tprivate async updateConflicts(conflicts: [SyncResource, IResourcePreview[]][]): Promise<void> {\n\t\t// Revive URIs\n\t\tthis._conflicts = conflicts.map(([syncResource, conflicts]) =>\n\t\t([\n\t\t\tsyncResource,\n\t\t\tconflicts.map(r =>\n\t\t\t({\n\t\t\t\t...r,\n\t\t\t\tlocalResource: URI.revive(r.localResource),\n\t\t\t\tremoteResource: URI.revive(r.remoteResource),\n\t\t\t\tpreviewResource: URI.revive(r.previewResource),\n\t\t\t}))\n\t\t]));\n\t\tthis._onDidChangeConflicts.fire(this._conflicts);\n\t}\n\n\tprivate updateLastSyncTime(lastSyncTime: number): void {\n\t\tif (this._lastSyncTime !== lastSyncTime) {\n\t\t\tthis._lastSyncTime = lastSyncTime;\n\t\t\tthis._onDidChangeLastSyncTime.fire(lastSyncTime);\n\t\t}\n\t}\n}\n\nclass ManualSyncTaskChannelClient extends Disposable implements IManualSyncTask {\n\n\tprivate readonly channel: IChannel;\n\n\tget onSynchronizeResources(): Event<[SyncResource, URI[]][]> { return this.channel.listen<[SyncResource, URI[]][]>('onSynchronizeResources'); }\n\n\tprivate _status: SyncStatus;\n\tget status(): SyncStatus { return this._status; }\n\n\tconstructor(\n\t\treadonly id: string,\n\t\treadonly manifest: IUserDataManifest | null,\n\t\tstatus: SyncStatus,\n\t\tmanualSyncTaskChannel: IChannel\n\t) {\n\t\tsuper();\n\t\tthis._status = status;\n\t\tconst that = this;\n\t\tthis.channel = {\n\t\t\tasync call<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\ttry {\n\t\t\t\t\tconst result = await manualSyncTaskChannel.call<T>(command, arg, cancellationToken);\n\t\t\t\t\tif (!that.isDiposed()) {\n\t\t\t\t\t\tthat._status = await manualSyncTaskChannel.call<SyncStatus>('_getStatus');\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthrow UserDataSyncError.toUserDataSyncError(error);\n\t\t\t\t}\n\t\t\t},\n\t\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\t\treturn manualSyncTaskChannel.listen(event, arg);\n\t\t\t}\n\t\t};\n\t}\n\n\tasync preview(): Promise<[SyncResource, ISyncResourcePreview][]> {\n\t\tconst previews = await this.channel.call<[SyncResource, ISyncResourcePreview][]>('preview');\n\t\treturn this.deserializePreviews(previews);\n\t}\n\n\tasync accept(resource: URI, content?: string | null): Promise<[SyncResource, ISyncResourcePreview][]> {\n\t\tconst previews = await this.channel.call<[SyncResource, ISyncResourcePreview][]>('accept', [resource, content]);\n\t\treturn this.deserializePreviews(previews);\n\t}\n\n\tasync merge(resource?: URI): Promise<[SyncResource, ISyncResourcePreview][]> {\n\t\tconst previews = await this.channel.call<[SyncResource, ISyncResourcePreview][]>('merge', [resource]);\n\t\treturn this.deserializePreviews(previews);\n\t}\n\n\tasync discard(resource: URI): Promise<[SyncResource, ISyncResourcePreview][]> {\n\t\tconst previews = await this.channel.call<[SyncResource, ISyncResourcePreview][]>('discard', [resource]);\n\t\treturn this.deserializePreviews(previews);\n\t}\n\n\tasync discardConflicts(): Promise<[SyncResource, ISyncResourcePreview][]> {\n\t\tconst previews = await this.channel.call<[SyncResource, ISyncResourcePreview][]>('discardConflicts');\n\t\treturn this.deserializePreviews(previews);\n\t}\n\n\tasync apply(): Promise<[SyncResource, ISyncResourcePreview][]> {\n\t\tconst previews = await this.channel.call<[SyncResource, ISyncResourcePreview][]>('apply');\n\t\treturn this.deserializePreviews(previews);\n\t}\n\n\tpull(): Promise<void> {\n\t\treturn this.channel.call('pull');\n\t}\n\n\tpush(): Promise<void> {\n\t\treturn this.channel.call('push');\n\t}\n\n\tstop(): Promise<void> {\n\t\treturn this.channel.call('stop');\n\t}\n\n\tprivate _disposed = false;\n\tisDiposed() { return this._disposed; }\n\n\toverride dispose(): void {\n\t\tthis._disposed = true;\n\t\tthis.channel.call('dispose');\n\t}\n\n\tprivate deserializePreviews(previews: [SyncResource, ISyncResourcePreview][]): [SyncResource, ISyncResourcePreview][] {\n\t\treturn previews.map(([syncResource, preview]) =>\n\t\t([\n\t\t\tsyncResource,\n\t\t\t{\n\t\t\t\tisLastSyncFromCurrentMachine: preview.isLastSyncFromCurrentMachine,\n\t\t\t\tresourcePreviews: preview.resourcePreviews.map(r => ({\n\t\t\t\t\t...r,\n\t\t\t\t\tlocalResource: URI.revive(r.localResource),\n\t\t\t\t\tremoteResource: URI.revive(r.remoteResource),\n\t\t\t\t\tpreviewResource: URI.revive(r.previewResource),\n\t\t\t\t\tacceptedResource: URI.revive(r.acceptedResource),\n\t\t\t\t}))\n\t\t\t}\n\t\t]));\n\t}\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancelablePromise, createCancelablePromise, timeout } from 'vs/base/common/async';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { getErrorMessage, isPromiseCanceledError } from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { Mimes } from 'vs/base/common/mime';\nimport { isWeb } from 'vs/base/common/platform';\nimport { ConfigurationSyncStore } from 'vs/base/common/product';\nimport { joinPath, relativePath } from 'vs/base/common/resources';\nimport { isArray, isObject, isString } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IHeaders, IRequestContext, IRequestOptions } from 'vs/base/parts/request/common/request';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { asJson, asText, IRequestService, isSuccess as isSuccessContext } from 'vs/platform/request/common/request';\nimport { getServiceMachineId } from 'vs/platform/serviceMachineId/common/serviceMachineId';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { CONFIGURATION_SYNC_STORE_KEY, HEADER_EXECUTION_ID, HEADER_OPERATION_ID, IAuthenticationProvider, IResourceRefHandle, IUserData, IUserDataManifest, IUserDataSyncLogService, IUserDataSyncStore, IUserDataSyncStoreClient, IUserDataSyncStoreManagementService, IUserDataSyncStoreService, ServerResource, SYNC_SERVICE_URL_TYPE, UserDataSyncErrorCode, UserDataSyncStoreError, UserDataSyncStoreType } from 'vs/platform/userDataSync/common/userDataSync';\n\nconst SYNC_PREVIOUS_STORE = 'sync.previous.store';\nconst DONOT_MAKE_REQUESTS_UNTIL_KEY = 'sync.donot-make-requests-until';\nconst USER_SESSION_ID_KEY = 'sync.user-session-id';\nconst MACHINE_SESSION_ID_KEY = 'sync.machine-session-id';\nconst REQUEST_SESSION_LIMIT = 100;\nconst REQUEST_SESSION_INTERVAL = 1000 * 60 * 5; /* 5 minutes */\n\ntype UserDataSyncStore = IUserDataSyncStore & { defaultType: UserDataSyncStoreType; };\n\nexport abstract class AbstractUserDataSyncStoreManagementService extends Disposable implements IUserDataSyncStoreManagementService {\n\n\t_serviceBrand: any;\n\n\tprivate readonly _onDidChangeUserDataSyncStore = this._register(new Emitter<void>());\n\treadonly onDidChangeUserDataSyncStore = this._onDidChangeUserDataSyncStore.event;\n\tprivate _userDataSyncStore: UserDataSyncStore | undefined;\n\tget userDataSyncStore(): UserDataSyncStore | undefined { return this._userDataSyncStore; }\n\n\tprotected get userDataSyncStoreType(): UserDataSyncStoreType | undefined {\n\t\treturn this.storageService.get(SYNC_SERVICE_URL_TYPE, StorageScope.GLOBAL) as UserDataSyncStoreType;\n\t}\n\tprotected set userDataSyncStoreType(type: UserDataSyncStoreType | undefined) {\n\t\tthis.storageService.store(SYNC_SERVICE_URL_TYPE, type, StorageScope.GLOBAL, isWeb ? StorageTarget.USER /* sync in web */ : StorageTarget.MACHINE);\n\t}\n\n\tconstructor(\n\t\t@IProductService protected readonly productService: IProductService,\n\t\t@IConfigurationService protected readonly configurationService: IConfigurationService,\n\t\t@IStorageService protected readonly storageService: IStorageService,\n\t) {\n\t\tsuper();\n\t\tthis.updateUserDataSyncStore();\n\t\tthis._register(Event.filter(storageService.onDidChangeValue, e => e.key === SYNC_SERVICE_URL_TYPE && e.scope === StorageScope.GLOBAL && this.userDataSyncStoreType !== this.userDataSyncStore?.type)(() => this.updateUserDataSyncStore()));\n\t}\n\n\tprotected updateUserDataSyncStore(): void {\n\t\tthis._userDataSyncStore = this.toUserDataSyncStore(this.productService[CONFIGURATION_SYNC_STORE_KEY], this.configurationService.getValue<ConfigurationSyncStore>(CONFIGURATION_SYNC_STORE_KEY));\n\t\tthis._onDidChangeUserDataSyncStore.fire();\n\t}\n\n\tprotected toUserDataSyncStore(productStore: ConfigurationSyncStore & { web?: ConfigurationSyncStore } | undefined, configuredStore?: ConfigurationSyncStore): UserDataSyncStore | undefined {\n\t\t// Check for web overrides for backward compatibility while reading previous store\n\t\tproductStore = isWeb && productStore?.web ? { ...productStore, ...productStore.web } : productStore;\n\t\tconst value: Partial<ConfigurationSyncStore> = { ...(productStore || {}), ...(configuredStore || {}) };\n\t\tif (value\n\t\t\t&& isString(value.url)\n\t\t\t&& isObject(value.authenticationProviders)\n\t\t\t&& Object.keys(value.authenticationProviders).every(authenticationProviderId => isArray(value!.authenticationProviders![authenticationProviderId].scopes))\n\t\t) {\n\t\t\tconst syncStore = value as ConfigurationSyncStore;\n\t\t\tconst canSwitch = !!syncStore.canSwitch && !configuredStore?.url;\n\t\t\tconst defaultType: UserDataSyncStoreType = syncStore.url === syncStore.insidersUrl ? 'insiders' : 'stable';\n\t\t\tconst type: UserDataSyncStoreType = (canSwitch ? this.userDataSyncStoreType : undefined) || defaultType;\n\t\t\tconst url = configuredStore?.url ||\n\t\t\t\t(type === 'insiders' ? syncStore.insidersUrl\n\t\t\t\t\t: type === 'stable' ? syncStore.stableUrl\n\t\t\t\t\t\t: syncStore.url);\n\t\t\treturn {\n\t\t\t\turl: URI.parse(url),\n\t\t\t\ttype,\n\t\t\t\tdefaultType,\n\t\t\t\tdefaultUrl: URI.parse(syncStore.url),\n\t\t\t\tstableUrl: URI.parse(syncStore.stableUrl),\n\t\t\t\tinsidersUrl: URI.parse(syncStore.insidersUrl),\n\t\t\t\tcanSwitch,\n\t\t\t\tauthenticationProviders: Object.keys(syncStore.authenticationProviders).reduce<IAuthenticationProvider[]>((result, id) => {\n\t\t\t\t\tresult.push({ id, scopes: syncStore!.authenticationProviders[id].scopes });\n\t\t\t\t\treturn result;\n\t\t\t\t}, [])\n\t\t\t};\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tabstract switch(type: UserDataSyncStoreType): Promise<void>;\n\tabstract getPreviousUserDataSyncStore(): Promise<IUserDataSyncStore | undefined>;\n\n}\n\nexport class UserDataSyncStoreManagementService extends AbstractUserDataSyncStoreManagementService implements IUserDataSyncStoreManagementService {\n\n\tprivate readonly previousConfigurationSyncStore: ConfigurationSyncStore | undefined;\n\n\tconstructor(\n\t\t@IProductService productService: IProductService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@IStorageService storageService: IStorageService,\n\t) {\n\t\tsuper(productService, configurationService, storageService);\n\n\t\tconst previousConfigurationSyncStore = this.storageService.get(SYNC_PREVIOUS_STORE, StorageScope.GLOBAL);\n\t\tif (previousConfigurationSyncStore) {\n\t\t\tthis.previousConfigurationSyncStore = JSON.parse(previousConfigurationSyncStore);\n\t\t}\n\n\t\tconst syncStore = this.productService[CONFIGURATION_SYNC_STORE_KEY];\n\t\tif (syncStore) {\n\t\t\tthis.storageService.store(SYNC_PREVIOUS_STORE, JSON.stringify(syncStore), StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\t} else {\n\t\t\tthis.storageService.remove(SYNC_PREVIOUS_STORE, StorageScope.GLOBAL);\n\t\t}\n\t}\n\n\tasync switch(type: UserDataSyncStoreType): Promise<void> {\n\t\tif (type !== this.userDataSyncStoreType) {\n\t\t\tthis.userDataSyncStoreType = type;\n\t\t\tthis.updateUserDataSyncStore();\n\t\t}\n\t}\n\n\tasync getPreviousUserDataSyncStore(): Promise<IUserDataSyncStore | undefined> {\n\t\treturn this.toUserDataSyncStore(this.previousConfigurationSyncStore);\n\t}\n}\n\nexport class UserDataSyncStoreClient extends Disposable implements IUserDataSyncStoreClient {\n\n\tprivate userDataSyncStoreUrl: URI | undefined;\n\n\tprivate authToken: { token: string, type: string } | undefined;\n\tprivate readonly commonHeadersPromise: Promise<{ [key: string]: string; }>;\n\tprivate readonly session: RequestsSession;\n\n\tprivate _onTokenFailed: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onTokenFailed: Event<void> = this._onTokenFailed.event;\n\n\tprivate _onTokenSucceed: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onTokenSucceed: Event<void> = this._onTokenSucceed.event;\n\n\tprivate _donotMakeRequestsUntil: Date | undefined = undefined;\n\tget donotMakeRequestsUntil() { return this._donotMakeRequestsUntil; }\n\tprivate _onDidChangeDonotMakeRequestsUntil = this._register(new Emitter<void>());\n\treadonly onDidChangeDonotMakeRequestsUntil = this._onDidChangeDonotMakeRequestsUntil.event;\n\n\tconstructor(\n\t\tuserDataSyncStoreUrl: URI | undefined,\n\t\t@IProductService productService: IProductService,\n\t\t@IRequestService private readonly requestService: IRequestService,\n\t\t@IUserDataSyncLogService private readonly logService: IUserDataSyncLogService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t) {\n\t\tsuper();\n\t\tthis.updateUserDataSyncStoreUrl(userDataSyncStoreUrl);\n\t\tthis.commonHeadersPromise = getServiceMachineId(environmentService, fileService, storageService)\n\t\t\t.then(uuid => {\n\t\t\t\tconst headers: IHeaders = {\n\t\t\t\t\t'X-Client-Name': `${productService.applicationName}${isWeb ? '-web' : ''}`,\n\t\t\t\t\t'X-Client-Version': productService.version,\n\t\t\t\t};\n\t\t\t\tif (productService.commit) {\n\t\t\t\t\theaders['X-Client-Commit'] = productService.commit;\n\t\t\t\t}\n\t\t\t\treturn headers;\n\t\t\t});\n\n\t\t/* A requests session that limits requests per sessions */\n\t\tthis.session = new RequestsSession(REQUEST_SESSION_LIMIT, REQUEST_SESSION_INTERVAL, this.requestService, this.logService);\n\t\tthis.initDonotMakeRequestsUntil();\n\t\tthis._register(toDisposable(() => {\n\t\t\tif (this.resetDonotMakeRequestsUntilPromise) {\n\t\t\t\tthis.resetDonotMakeRequestsUntilPromise.cancel();\n\t\t\t\tthis.resetDonotMakeRequestsUntilPromise = undefined;\n\t\t\t}\n\t\t}));\n\t}\n\n\tsetAuthToken(token: string, type: string): void {\n\t\tthis.authToken = { token, type };\n\t}\n\n\tprotected updateUserDataSyncStoreUrl(userDataSyncStoreUrl: URI | undefined): void {\n\t\tthis.userDataSyncStoreUrl = userDataSyncStoreUrl ? joinPath(userDataSyncStoreUrl, 'v1') : undefined;\n\t}\n\n\tprivate initDonotMakeRequestsUntil(): void {\n\t\tconst donotMakeRequestsUntil = this.storageService.getNumber(DONOT_MAKE_REQUESTS_UNTIL_KEY, StorageScope.GLOBAL);\n\t\tif (donotMakeRequestsUntil && Date.now() < donotMakeRequestsUntil) {\n\t\t\tthis.setDonotMakeRequestsUntil(new Date(donotMakeRequestsUntil));\n\t\t}\n\t}\n\n\tprivate resetDonotMakeRequestsUntilPromise: CancelablePromise<void> | undefined = undefined;\n\tprivate setDonotMakeRequestsUntil(donotMakeRequestsUntil: Date | undefined): void {\n\t\tif (this._donotMakeRequestsUntil?.getTime() !== donotMakeRequestsUntil?.getTime()) {\n\t\t\tthis._donotMakeRequestsUntil = donotMakeRequestsUntil;\n\n\t\t\tif (this.resetDonotMakeRequestsUntilPromise) {\n\t\t\t\tthis.resetDonotMakeRequestsUntilPromise.cancel();\n\t\t\t\tthis.resetDonotMakeRequestsUntilPromise = undefined;\n\t\t\t}\n\n\t\t\tif (this._donotMakeRequestsUntil) {\n\t\t\t\tthis.storageService.store(DONOT_MAKE_REQUESTS_UNTIL_KEY, this._donotMakeRequestsUntil.getTime(), StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\t\t\tthis.resetDonotMakeRequestsUntilPromise = createCancelablePromise(token => timeout(this._donotMakeRequestsUntil!.getTime() - Date.now(), token).then(() => this.setDonotMakeRequestsUntil(undefined)));\n\t\t\t\tthis.resetDonotMakeRequestsUntilPromise.then(null, e => null /* ignore error */);\n\t\t\t} else {\n\t\t\t\tthis.storageService.remove(DONOT_MAKE_REQUESTS_UNTIL_KEY, StorageScope.GLOBAL);\n\t\t\t}\n\n\t\t\tthis._onDidChangeDonotMakeRequestsUntil.fire();\n\t\t}\n\t}\n\n\tasync getAllRefs(resource: ServerResource): Promise<IResourceRefHandle[]> {\n\t\tif (!this.userDataSyncStoreUrl) {\n\t\t\tthrow new Error('No settings sync store url configured.');\n\t\t}\n\n\t\tconst uri = joinPath(this.userDataSyncStoreUrl, 'resource', resource);\n\t\tconst headers: IHeaders = {};\n\n\t\tconst context = await this.request(uri.toString(), { type: 'GET', headers }, [], CancellationToken.None);\n\n\t\tconst result = await asJson<{ url: string, created: number }[]>(context) || [];\n\t\treturn result.map(({ url, created }) => ({ ref: relativePath(uri, uri.with({ path: url }))!, created: created * 1000 /* Server returns in seconds */ }));\n\t}\n\n\tasync resolveContent(resource: ServerResource, ref: string): Promise<string | null> {\n\t\tif (!this.userDataSyncStoreUrl) {\n\t\t\tthrow new Error('No settings sync store url configured.');\n\t\t}\n\n\t\tconst url = joinPath(this.userDataSyncStoreUrl, 'resource', resource, ref).toString();\n\t\tconst headers: IHeaders = {};\n\t\theaders['Cache-Control'] = 'no-cache';\n\n\t\tconst context = await this.request(url, { type: 'GET', headers }, [], CancellationToken.None);\n\t\tconst content = await asText(context);\n\t\treturn content;\n\t}\n\n\tasync delete(resource: ServerResource): Promise<void> {\n\t\tif (!this.userDataSyncStoreUrl) {\n\t\t\tthrow new Error('No settings sync store url configured.');\n\t\t}\n\n\t\tconst url = joinPath(this.userDataSyncStoreUrl, 'resource', resource).toString();\n\t\tconst headers: IHeaders = {};\n\n\t\tawait this.request(url, { type: 'DELETE', headers }, [], CancellationToken.None);\n\t}\n\n\tasync read(resource: ServerResource, oldValue: IUserData | null, headers: IHeaders = {}): Promise<IUserData> {\n\t\tif (!this.userDataSyncStoreUrl) {\n\t\t\tthrow new Error('No settings sync store url configured.');\n\t\t}\n\n\t\tconst url = joinPath(this.userDataSyncStoreUrl, 'resource', resource, 'latest').toString();\n\t\theaders = { ...headers };\n\t\t// Disable caching as they are cached by synchronisers\n\t\theaders['Cache-Control'] = 'no-cache';\n\t\tif (oldValue) {\n\t\t\theaders['If-None-Match'] = oldValue.ref;\n\t\t}\n\n\t\tconst context = await this.request(url, { type: 'GET', headers }, [304], CancellationToken.None);\n\n\t\tlet userData: IUserData | null = null;\n\t\tif (context.res.statusCode === 304) {\n\t\t\tuserData = oldValue;\n\t\t}\n\n\t\tif (userData === null) {\n\t\t\tconst ref = context.res.headers['etag'];\n\t\t\tif (!ref) {\n\t\t\t\tthrow new UserDataSyncStoreError('Server did not return the ref', url, UserDataSyncErrorCode.NoRef, context.res.statusCode, context.res.headers[HEADER_OPERATION_ID]);\n\t\t\t}\n\n\t\t\tconst content = await asText(context);\n\t\t\tif (!content && context.res.statusCode === 304) {\n\t\t\t\tthrow new UserDataSyncStoreError('Empty response', url, UserDataSyncErrorCode.EmptyResponse, context.res.statusCode, context.res.headers[HEADER_OPERATION_ID]);\n\t\t\t}\n\n\t\t\tuserData = { ref, content };\n\t\t}\n\n\t\treturn userData;\n\t}\n\n\tasync write(resource: ServerResource, data: string, ref: string | null, headers: IHeaders = {}): Promise<string> {\n\t\tif (!this.userDataSyncStoreUrl) {\n\t\t\tthrow new Error('No settings sync store url configured.');\n\t\t}\n\n\t\tconst url = joinPath(this.userDataSyncStoreUrl, 'resource', resource).toString();\n\t\theaders = { ...headers };\n\t\theaders['Content-Type'] = Mimes.text;\n\t\tif (ref) {\n\t\t\theaders['If-Match'] = ref;\n\t\t}\n\n\t\tconst context = await this.request(url, { type: 'POST', data, headers }, [], CancellationToken.None);\n\n\t\tconst newRef = context.res.headers['etag'];\n\t\tif (!newRef) {\n\t\t\tthrow new UserDataSyncStoreError('Server did not return the ref', url, UserDataSyncErrorCode.NoRef, context.res.statusCode, context.res.headers[HEADER_OPERATION_ID]);\n\t\t}\n\t\treturn newRef;\n\t}\n\n\tasync manifest(oldValue: IUserDataManifest | null, headers: IHeaders = {}): Promise<IUserDataManifest | null> {\n\t\tif (!this.userDataSyncStoreUrl) {\n\t\t\tthrow new Error('No settings sync store url configured.');\n\t\t}\n\n\t\tconst url = joinPath(this.userDataSyncStoreUrl, 'manifest').toString();\n\t\theaders = { ...headers };\n\t\theaders['Content-Type'] = 'application/json';\n\t\tif (oldValue) {\n\t\t\theaders['If-None-Match'] = oldValue.ref;\n\t\t}\n\n\t\tconst context = await this.request(url, { type: 'GET', headers }, [304], CancellationToken.None);\n\n\t\tlet manifest: IUserDataManifest | null = null;\n\t\tif (context.res.statusCode === 304) {\n\t\t\tmanifest = oldValue;\n\t\t}\n\n\t\tif (!manifest) {\n\t\t\tconst ref = context.res.headers['etag'];\n\t\t\tif (!ref) {\n\t\t\t\tthrow new UserDataSyncStoreError('Server did not return the ref', url, UserDataSyncErrorCode.NoRef, context.res.statusCode, context.res.headers[HEADER_OPERATION_ID]);\n\t\t\t}\n\n\t\t\tconst content = await asText(context);\n\t\t\tif (!content && context.res.statusCode === 304) {\n\t\t\t\tthrow new UserDataSyncStoreError('Empty response', url, UserDataSyncErrorCode.EmptyResponse, context.res.statusCode, context.res.headers[HEADER_OPERATION_ID]);\n\t\t\t}\n\n\t\t\tif (content) {\n\t\t\t\tmanifest = { ...JSON.parse(content), ref };\n\t\t\t}\n\t\t}\n\n\t\tconst currentSessionId = this.storageService.get(USER_SESSION_ID_KEY, StorageScope.GLOBAL);\n\n\t\tif (currentSessionId && manifest && currentSessionId !== manifest.session) {\n\t\t\t// Server session is different from client session so clear cached session.\n\t\t\tthis.clearSession();\n\t\t}\n\n\t\tif (manifest === null && currentSessionId) {\n\t\t\t// server session is cleared so clear cached session.\n\t\t\tthis.clearSession();\n\t\t}\n\n\t\tif (manifest) {\n\t\t\t// update session\n\t\t\tthis.storageService.store(USER_SESSION_ID_KEY, manifest.session, StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\t}\n\n\t\treturn manifest;\n\t}\n\n\tasync clear(): Promise<void> {\n\t\tif (!this.userDataSyncStoreUrl) {\n\t\t\tthrow new Error('No settings sync store url configured.');\n\t\t}\n\n\t\tconst url = joinPath(this.userDataSyncStoreUrl, 'resource').toString();\n\t\tconst headers: IHeaders = { 'Content-Type': Mimes.text };\n\n\t\tawait this.request(url, { type: 'DELETE', headers }, [], CancellationToken.None);\n\n\t\t// clear cached session.\n\t\tthis.clearSession();\n\t}\n\n\tprivate clearSession(): void {\n\t\tthis.storageService.remove(USER_SESSION_ID_KEY, StorageScope.GLOBAL);\n\t\tthis.storageService.remove(MACHINE_SESSION_ID_KEY, StorageScope.GLOBAL);\n\t}\n\n\tprivate async request(url: string, options: IRequestOptions, successCodes: number[], token: CancellationToken): Promise<IRequestContext> {\n\t\tif (!this.authToken) {\n\t\t\tthrow new UserDataSyncStoreError('No Auth Token Available', url, UserDataSyncErrorCode.Unauthorized, undefined, undefined);\n\t\t}\n\n\t\tif (this._donotMakeRequestsUntil && Date.now() < this._donotMakeRequestsUntil.getTime()) {\n\t\t\tthrow new UserDataSyncStoreError(`${options.type} request '${url}' failed because of too many requests (429).`, url, UserDataSyncErrorCode.TooManyRequestsAndRetryAfter, undefined, undefined);\n\t\t}\n\t\tthis.setDonotMakeRequestsUntil(undefined);\n\n\t\tconst commonHeaders = await this.commonHeadersPromise;\n\t\toptions.headers = {\n\t\t\t...(options.headers || {}),\n\t\t\t...commonHeaders,\n\t\t\t'X-Account-Type': this.authToken.type,\n\t\t\t'authorization': `Bearer ${this.authToken.token}`,\n\t\t};\n\n\t\t// Add session headers\n\t\tthis.addSessionHeaders(options.headers);\n\n\t\tthis.logService.trace('Sending request to server', { url, type: options.type, headers: { ...options.headers, ...{ authorization: undefined } } });\n\n\t\tlet context;\n\t\ttry {\n\t\t\tcontext = await this.session.request(url, options, token);\n\t\t} catch (e) {\n\t\t\tif (!(e instanceof UserDataSyncStoreError)) {\n\t\t\t\tlet code = UserDataSyncErrorCode.RequestFailed;\n\t\t\t\tconst errorMessage = getErrorMessage(e).toLowerCase();\n\n\t\t\t\t// Request timed out\n\t\t\t\tif (errorMessage.includes('xhr timeout')) {\n\t\t\t\t\tcode = UserDataSyncErrorCode.RequestTimeout;\n\t\t\t\t}\n\n\t\t\t\t// Request protocol not supported\n\t\t\t\telse if (errorMessage.includes('protocol') && errorMessage.includes('not supported')) {\n\t\t\t\t\tcode = UserDataSyncErrorCode.RequestProtocolNotSupported;\n\t\t\t\t}\n\n\t\t\t\t// Request path not escaped\n\t\t\t\telse if (errorMessage.includes('request path contains unescaped characters')) {\n\t\t\t\t\tcode = UserDataSyncErrorCode.RequestPathNotEscaped;\n\t\t\t\t}\n\n\t\t\t\t// Request header not an object\n\t\t\t\telse if (errorMessage.includes('headers must be an object')) {\n\t\t\t\t\tcode = UserDataSyncErrorCode.RequestHeadersNotObject;\n\t\t\t\t}\n\n\t\t\t\t// Request canceled\n\t\t\t\telse if (isPromiseCanceledError(e)) {\n\t\t\t\t\tcode = UserDataSyncErrorCode.RequestCanceled;\n\t\t\t\t}\n\n\t\t\t\te = new UserDataSyncStoreError(`Connection refused for the request '${url}'.`, url, code, undefined, undefined);\n\t\t\t}\n\t\t\tthis.logService.info('Request failed', url);\n\t\t\tthrow e;\n\t\t}\n\n\t\tconst operationId = context.res.headers[HEADER_OPERATION_ID];\n\t\tconst requestInfo = { url, status: context.res.statusCode, 'execution-id': options.headers[HEADER_EXECUTION_ID], 'operation-id': operationId };\n\t\tconst isSuccess = isSuccessContext(context) || (context.res.statusCode && successCodes.indexOf(context.res.statusCode) !== -1);\n\t\tif (isSuccess) {\n\t\t\tthis.logService.trace('Request succeeded', requestInfo);\n\t\t} else {\n\t\t\tthis.logService.info('Request failed', requestInfo);\n\t\t}\n\n\t\tif (context.res.statusCode === 401) {\n\t\t\tthis.authToken = undefined;\n\t\t\tthis._onTokenFailed.fire();\n\t\t\tthrow new UserDataSyncStoreError(`Request '${url}' failed because of Unauthorized (401).`, url, UserDataSyncErrorCode.Unauthorized, context.res.statusCode, operationId);\n\t\t}\n\n\t\tthis._onTokenSucceed.fire();\n\n\t\tif (context.res.statusCode === 409) {\n\t\t\tthrow new UserDataSyncStoreError(`${options.type} request '${url}' failed because of Conflict (409). There is new data for this resource. Make the request again with latest data.`, url, UserDataSyncErrorCode.Conflict, context.res.statusCode, operationId);\n\t\t}\n\n\t\tif (context.res.statusCode === 410) {\n\t\t\tthrow new UserDataSyncStoreError(`${options.type} request '${url}' failed because the requested resource is not longer available (410).`, url, UserDataSyncErrorCode.Gone, context.res.statusCode, operationId);\n\t\t}\n\n\t\tif (context.res.statusCode === 412) {\n\t\t\tthrow new UserDataSyncStoreError(`${options.type} request '${url}' failed because of Precondition Failed (412). There is new data for this resource. Make the request again with latest data.`, url, UserDataSyncErrorCode.PreconditionFailed, context.res.statusCode, operationId);\n\t\t}\n\n\t\tif (context.res.statusCode === 413) {\n\t\t\tthrow new UserDataSyncStoreError(`${options.type} request '${url}' failed because of too large payload (413).`, url, UserDataSyncErrorCode.TooLarge, context.res.statusCode, operationId);\n\t\t}\n\n\t\tif (context.res.statusCode === 426) {\n\t\t\tthrow new UserDataSyncStoreError(`${options.type} request '${url}' failed with status Upgrade Required (426). Please upgrade the client and try again.`, url, UserDataSyncErrorCode.UpgradeRequired, context.res.statusCode, operationId);\n\t\t}\n\n\t\tif (context.res.statusCode === 429) {\n\t\t\tconst retryAfter = context.res.headers['retry-after'];\n\t\t\tif (retryAfter) {\n\t\t\t\tthis.setDonotMakeRequestsUntil(new Date(Date.now() + (parseInt(retryAfter) * 1000)));\n\t\t\t\tthrow new UserDataSyncStoreError(`${options.type} request '${url}' failed because of too many requests (429).`, url, UserDataSyncErrorCode.TooManyRequestsAndRetryAfter, context.res.statusCode, operationId);\n\t\t\t} else {\n\t\t\t\tthrow new UserDataSyncStoreError(`${options.type} request '${url}' failed because of too many requests (429).`, url, UserDataSyncErrorCode.TooManyRequests, context.res.statusCode, operationId);\n\t\t\t}\n\t\t}\n\n\t\tif (!isSuccess) {\n\t\t\tthrow new UserDataSyncStoreError('Server returned ' + context.res.statusCode, url, UserDataSyncErrorCode.Unknown, context.res.statusCode, operationId);\n\t\t}\n\n\t\treturn context;\n\t}\n\n\tprivate addSessionHeaders(headers: IHeaders): void {\n\t\tlet machineSessionId = this.storageService.get(MACHINE_SESSION_ID_KEY, StorageScope.GLOBAL);\n\t\tif (machineSessionId === undefined) {\n\t\t\tmachineSessionId = generateUuid();\n\t\t\tthis.storageService.store(MACHINE_SESSION_ID_KEY, machineSessionId, StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t\t}\n\t\theaders['X-Machine-Session-Id'] = machineSessionId;\n\n\t\tconst userSessionId = this.storageService.get(USER_SESSION_ID_KEY, StorageScope.GLOBAL);\n\t\tif (userSessionId !== undefined) {\n\t\t\theaders['X-User-Session-Id'] = userSessionId;\n\t\t}\n\t}\n\n}\n\nexport class UserDataSyncStoreService extends UserDataSyncStoreClient implements IUserDataSyncStoreService {\n\n\t_serviceBrand: any;\n\n\tconstructor(\n\t\t@IUserDataSyncStoreManagementService userDataSyncStoreManagementService: IUserDataSyncStoreManagementService,\n\t\t@IProductService productService: IProductService,\n\t\t@IRequestService requestService: IRequestService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IStorageService storageService: IStorageService,\n\t) {\n\t\tsuper(userDataSyncStoreManagementService.userDataSyncStore?.url, productService, requestService, logService, environmentService, fileService, storageService);\n\t\tthis._register(userDataSyncStoreManagementService.onDidChangeUserDataSyncStore(() => this.updateUserDataSyncStoreUrl(userDataSyncStoreManagementService.userDataSyncStore?.url)));\n\t}\n}\n\nexport class RequestsSession {\n\n\tprivate requests: string[] = [];\n\tprivate startTime: Date | undefined = undefined;\n\n\tconstructor(\n\t\tprivate readonly limit: number,\n\t\tprivate readonly interval: number, /* in ms */\n\t\tprivate readonly requestService: IRequestService,\n\t\tprivate readonly logService: IUserDataSyncLogService,\n\t) { }\n\n\trequest(url: string, options: IRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\t\tif (this.isExpired()) {\n\t\t\tthis.reset();\n\t\t}\n\n\t\toptions.url = url;\n\n\t\tif (this.requests.length >= this.limit) {\n\t\t\tthis.logService.info('Too many requests', ...this.requests);\n\t\t\tthrow new UserDataSyncStoreError(`Too many requests. Only ${this.limit} requests allowed in ${this.interval / (1000 * 60)} minutes.`, url, UserDataSyncErrorCode.LocalTooManyRequests, undefined, undefined);\n\t\t}\n\n\t\tthis.startTime = this.startTime || new Date();\n\t\tthis.requests.push(url);\n\n\t\treturn this.requestService.request(options, token);\n\t}\n\n\tprivate isExpired(): boolean {\n\t\treturn this.startTime !== undefined && new Date().getTime() - this.startTime.getTime() > this.interval;\n\t}\n\n\tprivate reset(): void {\n\t\tthis.requests = [];\n\t\tthis.startTime = undefined;\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n//\nimport { Event } from 'vs/base/common/event';\nimport { INativeHostService } from 'vs/platform/native/electron-sandbox/native';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { UserDataAutoSyncService as BaseUserDataAutoSyncService } from 'vs/platform/userDataSync/common/userDataAutoSyncService';\nimport { IUserDataAutoSyncEnablementService, IUserDataSyncLogService, IUserDataSyncResourceEnablementService, IUserDataSyncService, IUserDataSyncStoreManagementService, IUserDataSyncStoreService } from 'vs/platform/userDataSync/common/userDataSync';\nimport { IUserDataSyncAccountService } from 'vs/platform/userDataSync/common/userDataSyncAccount';\nimport { IUserDataSyncMachinesService } from 'vs/platform/userDataSync/common/userDataSyncMachines';\n\nexport class UserDataAutoSyncService extends BaseUserDataAutoSyncService {\n\n\tconstructor(\n\t\t@IProductService productService: IProductService,\n\t\t@IUserDataSyncStoreManagementService userDataSyncStoreManagementService: IUserDataSyncStoreManagementService,\n\t\t@IUserDataSyncStoreService userDataSyncStoreService: IUserDataSyncStoreService,\n\t\t@IUserDataSyncResourceEnablementService userDataSyncResourceEnablementService: IUserDataSyncResourceEnablementService,\n\t\t@IUserDataSyncService userDataSyncService: IUserDataSyncService,\n\t\t@INativeHostService nativeHostService: INativeHostService,\n\t\t@IUserDataSyncLogService logService: IUserDataSyncLogService,\n\t\t@IUserDataSyncAccountService authTokenService: IUserDataSyncAccountService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IUserDataSyncMachinesService userDataSyncMachinesService: IUserDataSyncMachinesService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IUserDataAutoSyncEnablementService userDataAutoSyncEnablementService: IUserDataAutoSyncEnablementService,\n\t) {\n\t\tsuper(productService, userDataSyncStoreManagementService, userDataSyncStoreService, userDataSyncResourceEnablementService, userDataSyncService, logService, authTokenService, telemetryService, userDataSyncMachinesService, storageService, userDataAutoSyncEnablementService);\n\n\t\tthis._register(Event.debounce<string, string[]>(Event.any<string>(\n\t\t\tEvent.map(nativeHostService.onDidFocusWindow, () => 'windowFocus'),\n\t\t\tEvent.map(nativeHostService.onDidOpenWindow, () => 'windowOpen'),\n\t\t), (last, source) => last ? [...last, source] : [source], 1000)(sources => this.triggerSync(sources, true, false)));\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancelablePromise, createCancelablePromise } from 'vs/base/common/async';\nimport { Event } from 'vs/base/common/event';\nimport { Disposable, DisposableStore } from 'vs/base/common/lifecycle';\n\nexport class ActiveWindowManager extends Disposable {\n\n\tprivate readonly disposables = this._register(new DisposableStore());\n\tprivate firstActiveWindowIdPromise: CancelablePromise<number | undefined> | undefined;\n\n\tprivate activeWindowId: number | undefined;\n\n\tconstructor({ onDidOpenWindow, onDidFocusWindow, getActiveWindowId }: {\n\t\tonDidOpenWindow: Event<number>,\n\t\tonDidFocusWindow: Event<number>,\n\t\tgetActiveWindowId(): Promise<number | undefined>\n\t}) {\n\t\tsuper();\n\n\t\t// remember last active window id upon events\n\t\tconst onActiveWindowChange = Event.latch(Event.any(onDidOpenWindow, onDidFocusWindow));\n\t\tonActiveWindowChange(this.setActiveWindow, this, this.disposables);\n\n\t\t// resolve current active window\n\t\tthis.firstActiveWindowIdPromise = createCancelablePromise(() => getActiveWindowId());\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tconst windowId = await this.firstActiveWindowIdPromise;\n\t\t\t\tthis.activeWindowId = (typeof this.activeWindowId === 'number') ? this.activeWindowId : windowId;\n\t\t\t} catch (error) {\n\t\t\t\t// ignore\n\t\t\t} finally {\n\t\t\t\tthis.firstActiveWindowIdPromise = undefined;\n\t\t\t}\n\t\t})();\n\t}\n\n\tprivate setActiveWindow(windowId: number | undefined) {\n\t\tif (this.firstActiveWindowIdPromise) {\n\t\t\tthis.firstActiveWindowIdPromise.cancel();\n\t\t\tthis.firstActiveWindowIdPromise = undefined;\n\t\t}\n\n\t\tthis.activeWindowId = windowId;\n\t}\n\n\tasync getActiveClientId(): Promise<string | undefined> {\n\t\tconst id = this.firstActiveWindowIdPromise ? (await this.firstActiveWindowIdPromise) : this.activeWindowId;\n\n\t\treturn `window:${id}`;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createWriteStream, WriteStream } from 'fs';\nimport { Readable } from 'stream';\nimport { createCancelablePromise, Sequencer } from 'vs/base/common/async';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport * as path from 'vs/base/common/path';\nimport { assertIsDefined } from 'vs/base/common/types';\nimport { Promises } from 'vs/base/node/pfs';\nimport * as nls from 'vs/nls';\nimport { Entry, open as _openZip, ZipFile } from 'yauzl';\nimport * as yazl from 'yazl';\n\nexport interface IExtractOptions {\n\toverwrite?: boolean;\n\n\t/**\n\t * Source path within the ZIP archive. Only the files contained in this\n\t * path will be extracted.\n\t */\n\tsourcePath?: string;\n}\n\ninterface IOptions {\n\tsourcePathRegex: RegExp;\n}\n\nexport type ExtractErrorType = 'CorruptZip' | 'Incomplete';\n\nexport class ExtractError extends Error {\n\n\treadonly type?: ExtractErrorType;\n\treadonly cause: Error;\n\n\tconstructor(type: ExtractErrorType | undefined, cause: Error) {\n\t\tlet message = cause.message;\n\n\t\tswitch (type) {\n\t\t\tcase 'CorruptZip': message = `Corrupt ZIP: ${message}`; break;\n\t\t}\n\n\t\tsuper(message);\n\t\tthis.type = type;\n\t\tthis.cause = cause;\n\t}\n}\n\nfunction modeFromEntry(entry: Entry) {\n\tconst attr = entry.externalFileAttributes >> 16 || 33188;\n\n\treturn [448 /* S_IRWXU */, 56 /* S_IRWXG */, 7 /* S_IRWXO */]\n\t\t.map(mask => attr & mask)\n\t\t.reduce((a, b) => a + b, attr & 61440 /* S_IFMT */);\n}\n\nfunction toExtractError(err: Error): ExtractError {\n\tif (err instanceof ExtractError) {\n\t\treturn err;\n\t}\n\n\tlet type: ExtractErrorType | undefined = undefined;\n\n\tif (/end of central directory record signature not found/.test(err.message)) {\n\t\ttype = 'CorruptZip';\n\t}\n\n\treturn new ExtractError(type, err);\n}\n\nfunction extractEntry(stream: Readable, fileName: string, mode: number, targetPath: string, options: IOptions, token: CancellationToken): Promise<void> {\n\tconst dirName = path.dirname(fileName);\n\tconst targetDirName = path.join(targetPath, dirName);\n\tif (!targetDirName.startsWith(targetPath)) {\n\t\treturn Promise.reject(new Error(nls.localize('invalid file', \"Error extracting {0}. Invalid file.\", fileName)));\n\t}\n\tconst targetFileName = path.join(targetPath, fileName);\n\n\tlet istream: WriteStream;\n\n\ttoken.onCancellationRequested(() => {\n\t\tif (istream) {\n\t\t\tistream.destroy();\n\t\t}\n\t});\n\n\treturn Promise.resolve(Promises.mkdir(targetDirName, { recursive: true })).then(() => new Promise<void>((c, e) => {\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tistream = createWriteStream(targetFileName, { mode });\n\t\t\tistream.once('close', () => c());\n\t\t\tistream.once('error', e);\n\t\t\tstream.once('error', e);\n\t\t\tstream.pipe(istream);\n\t\t} catch (error) {\n\t\t\te(error);\n\t\t}\n\t}));\n}\n\nfunction extractZip(zipfile: ZipFile, targetPath: string, options: IOptions, token: CancellationToken): Promise<void> {\n\tlet last = createCancelablePromise<void>(() => Promise.resolve());\n\tlet extractedEntriesCount = 0;\n\n\ttoken.onCancellationRequested(() => {\n\t\tlast.cancel();\n\t\tzipfile.close();\n\t});\n\n\treturn new Promise((c, e) => {\n\t\tconst throttler = new Sequencer();\n\n\t\tconst readNextEntry = (token: CancellationToken) => {\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\textractedEntriesCount++;\n\t\t\tzipfile.readEntry();\n\t\t};\n\n\t\tzipfile.once('error', e);\n\t\tzipfile.once('close', () => last.then(() => {\n\t\t\tif (token.isCancellationRequested || zipfile.entryCount === extractedEntriesCount) {\n\t\t\t\tc();\n\t\t\t} else {\n\t\t\t\te(new ExtractError('Incomplete', new Error(nls.localize('incompleteExtract', \"Incomplete. Found {0} of {1} entries\", extractedEntriesCount, zipfile.entryCount))));\n\t\t\t}\n\t\t}, e));\n\t\tzipfile.readEntry();\n\t\tzipfile.on('entry', (entry: Entry) => {\n\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (!options.sourcePathRegex.test(entry.fileName)) {\n\t\t\t\treadNextEntry(token);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst fileName = entry.fileName.replace(options.sourcePathRegex, '');\n\n\t\t\t// directory file names end with '/'\n\t\t\tif (/\\/$/.test(fileName)) {\n\t\t\t\tconst targetFileName = path.join(targetPath, fileName);\n\t\t\t\tlast = createCancelablePromise(token => Promises.mkdir(targetFileName, { recursive: true }).then(() => readNextEntry(token)).then(undefined, e));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst stream = openZipStream(zipfile, entry);\n\t\t\tconst mode = modeFromEntry(entry);\n\n\t\t\tlast = createCancelablePromise(token => throttler.queue(() => stream.then(stream => extractEntry(stream, fileName, mode, targetPath, options, token).then(() => readNextEntry(token)))).then(null, e));\n\t\t});\n\t});\n}\n\nfunction openZip(zipFile: string, lazy: boolean = false): Promise<ZipFile> {\n\treturn new Promise<ZipFile>((resolve, reject) => {\n\t\t_openZip(zipFile, lazy ? { lazyEntries: true } : undefined!, (error?: Error, zipfile?: ZipFile) => {\n\t\t\tif (error) {\n\t\t\t\treject(toExtractError(error));\n\t\t\t} else {\n\t\t\t\tresolve(assertIsDefined(zipfile));\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction openZipStream(zipFile: ZipFile, entry: Entry): Promise<Readable> {\n\treturn new Promise<Readable>((resolve, reject) => {\n\t\tzipFile.openReadStream(entry, (error?: Error, stream?: Readable) => {\n\t\t\tif (error) {\n\t\t\t\treject(toExtractError(error));\n\t\t\t} else {\n\t\t\t\tresolve(assertIsDefined(stream));\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport interface IFile {\n\tpath: string;\n\tcontents?: Buffer | string;\n\tlocalPath?: string;\n}\n\nexport function zip(zipPath: string, files: IFile[]): Promise<string> {\n\treturn new Promise<string>((c, e) => {\n\t\tconst zip = new yazl.ZipFile();\n\t\tfiles.forEach(f => {\n\t\t\tif (f.contents) {\n\t\t\t\tzip.addBuffer(typeof f.contents === 'string' ? Buffer.from(f.contents, 'utf8') : f.contents, f.path);\n\t\t\t} else if (f.localPath) {\n\t\t\t\tzip.addFile(f.localPath, f.path);\n\t\t\t}\n\t\t});\n\t\tzip.end();\n\n\t\tconst zipStream = createWriteStream(zipPath);\n\t\tzip.outputStream.pipe(zipStream);\n\n\t\tzip.outputStream.once('error', e);\n\t\tzipStream.once('error', e);\n\t\tzipStream.once('finish', () => c(zipPath));\n\t});\n}\n\nexport function extract(zipPath: string, targetPath: string, options: IExtractOptions = {}, token: CancellationToken): Promise<void> {\n\tconst sourcePathRegex = new RegExp(options.sourcePath ? `^${options.sourcePath}` : '');\n\n\tlet promise = openZip(zipPath, true);\n\n\tif (options.overwrite) {\n\t\tpromise = promise.then(zipfile => Promises.rm(targetPath).then(() => zipfile));\n\t}\n\n\treturn promise.then(zipfile => extractZip(zipfile, targetPath, { sourcePathRegex }, token));\n}\n\nfunction read(zipPath: string, filePath: string): Promise<Readable> {\n\treturn openZip(zipPath).then(zipfile => {\n\t\treturn new Promise<Readable>((c, e) => {\n\t\t\tzipfile.on('entry', (entry: Entry) => {\n\t\t\t\tif (entry.fileName === filePath) {\n\t\t\t\t\topenZipStream(zipfile, entry).then(stream => c(stream), err => e(err));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tzipfile.once('close', () => e(new Error(nls.localize('notFound', \"{0} not found inside zip.\", filePath))));\n\t\t});\n\t});\n}\n\nexport function buffer(zipPath: string, filePath: string): Promise<Buffer> {\n\treturn read(zipPath, filePath).then(stream => {\n\t\treturn new Promise<Buffer>((c, e) => {\n\t\t\tconst buffers: Buffer[] = [];\n\t\t\tstream.once('error', e);\n\t\t\tstream.on('data', (b: Buffer) => buffers.push(b));\n\t\t\tstream.on('end', () => c(Buffer.concat(buffers)));\n\t\t});\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { buffer } from 'vs/base/node/zip';\nimport { localize } from 'vs/nls';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\n\nexport function getManifest(vsix: string): Promise<IExtensionManifest> {\n\treturn buffer(vsix, 'extension/package.json')\n\t\t.then(buffer => {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString('utf8'));\n\t\t\t} catch (err) {\n\t\t\t\tthrow new Error(localize('invalidManifest', \"VSIX invalid: package.json is not a JSON file.\"));\n\t\t\t}\n\t\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { flatten } from 'vs/base/common/arrays';\nimport { Limiter, Promises, Queue } from 'vs/base/common/async';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { getErrorMessage } from 'vs/base/common/errors';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { FileAccess } from 'vs/base/common/network';\nimport * as path from 'vs/base/common/path';\nimport { isWindows } from 'vs/base/common/platform';\nimport { basename } from 'vs/base/common/resources';\nimport * as semver from 'vs/base/common/semver/semver';\nimport { URI } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport * as pfs from 'vs/base/node/pfs';\nimport { extract, ExtractError } from 'vs/base/node/zip';\nimport { localize } from 'vs/nls';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ExtensionManagementError, ExtensionManagementErrorCode, Metadata, ILocalExtension } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { areSameExtensions, ExtensionIdentifierWithVersion, getGalleryExtensionId, groupByExtension } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { localizeManifest } from 'vs/platform/extensionManagement/common/extensionNls';\nimport { ExtensionType, IExtensionIdentifier, IExtensionManifest } from 'vs/platform/extensions/common/extensions';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { CancellationToken } from 'vscode';\n\nexport type ILocalExtensionManifest = IExtensionManifest & { __metadata?: Metadata };\ntype IRelaxedLocalExtension = Omit<ILocalExtension, 'isBuiltin'> & { isBuiltin: boolean };\n\nexport class ExtensionsScanner extends Disposable {\n\n\tprivate readonly systemExtensionsPath: string;\n\tprivate readonly extensionsPath: string;\n\tprivate readonly uninstalledPath: string;\n\tprivate readonly uninstalledFileLimiter: Queue<any>;\n\n\tconstructor(\n\t\tprivate readonly beforeRemovingExtension: (e: ILocalExtension) => Promise<void>,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@INativeEnvironmentService private readonly environmentService: INativeEnvironmentService,\n\t\t@IProductService private readonly productService: IProductService,\n\t) {\n\t\tsuper();\n\t\tthis.systemExtensionsPath = environmentService.builtinExtensionsPath;\n\t\tthis.extensionsPath = environmentService.extensionsPath;\n\t\tthis.uninstalledPath = path.join(this.extensionsPath, '.obsolete');\n\t\tthis.uninstalledFileLimiter = new Queue();\n\t}\n\n\tasync cleanUp(): Promise<void> {\n\t\tawait this.removeUninstalledExtensions();\n\t\tawait this.removeOutdatedExtensions();\n\t}\n\n\tasync scanExtensions(type: ExtensionType | null): Promise<ILocalExtension[]> {\n\t\tconst promises: Promise<ILocalExtension[]>[] = [];\n\n\t\tif (type === null || type === ExtensionType.System) {\n\t\t\tpromises.push(this.scanSystemExtensions().then(null, e => Promise.reject(new ExtensionManagementError(this.joinErrors(e).message, ExtensionManagementErrorCode.Internal))));\n\t\t}\n\n\t\tif (type === null || type === ExtensionType.User) {\n\t\t\tpromises.push(this.scanUserExtensions(true).then(null, e => Promise.reject(new ExtensionManagementError(this.joinErrors(e).message, ExtensionManagementErrorCode.Internal))));\n\t\t}\n\n\t\ttry {\n\t\t\tconst result = await Promise.all(promises);\n\t\t\treturn flatten(result);\n\t\t} catch (error) {\n\t\t\tthrow this.joinErrors(error);\n\t\t}\n\t}\n\n\tasync scanUserExtensions(excludeOutdated: boolean): Promise<ILocalExtension[]> {\n\t\tthis.logService.trace('Started scanning user extensions');\n\t\tlet [uninstalled, extensions] = await Promise.all([this.getUninstalledExtensions(), this.scanAllUserExtensions()]);\n\t\textensions = extensions.filter(e => !uninstalled[new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version).key()]);\n\t\tif (excludeOutdated) {\n\t\t\tconst byExtension: ILocalExtension[][] = groupByExtension(extensions, e => e.identifier);\n\t\t\textensions = byExtension.map(p => p.sort((a, b) => semver.rcompare(a.manifest.version, b.manifest.version))[0]);\n\t\t}\n\t\tthis.logService.trace('Scanned user extensions:', extensions.length);\n\t\treturn extensions;\n\t}\n\n\tasync scanAllUserExtensions(): Promise<ILocalExtension[]> {\n\t\treturn this.scanExtensionsInDir(this.extensionsPath, ExtensionType.User);\n\t}\n\n\tasync extractUserExtension(identifierWithVersion: ExtensionIdentifierWithVersion, zipPath: string, metadata: Metadata | undefined, token: CancellationToken): Promise<ILocalExtension> {\n\t\tconst folderName = identifierWithVersion.key();\n\t\tconst tempPath = path.join(this.extensionsPath, `.${generateUuid()}`);\n\t\tconst extensionPath = path.join(this.extensionsPath, folderName);\n\n\t\ttry {\n\t\t\tawait pfs.Promises.rm(extensionPath);\n\t\t} catch (error) {\n\t\t\ttry {\n\t\t\t\tawait pfs.Promises.rm(extensionPath);\n\t\t\t} catch (e) { /* ignore */ }\n\t\t\tthrow new ExtensionManagementError(localize('errorDeleting', \"Unable to delete the existing folder '{0}' while installing the extension '{1}'. Please delete the folder manually and try again\", extensionPath, identifierWithVersion.id), ExtensionManagementErrorCode.Delete);\n\t\t}\n\n\t\tawait this.extractAtLocation(identifierWithVersion, zipPath, tempPath, token);\n\t\tlet local = await this.scanExtension(URI.file(tempPath), ExtensionType.User);\n\t\tif (!local) {\n\t\t\tthrow new Error(localize('cannot read', \"Cannot read the extension from {0}\", tempPath));\n\t\t}\n\t\tawait this.storeMetadata(local, { ...metadata, installedTimestamp: Date.now() });\n\n\t\ttry {\n\t\t\tawait this.rename(identifierWithVersion, tempPath, extensionPath, Date.now() + (2 * 60 * 1000) /* Retry for 2 minutes */);\n\t\t\tthis.logService.info('Renamed to', extensionPath);\n\t\t} catch (error) {\n\t\t\ttry {\n\t\t\t\tawait pfs.Promises.rm(tempPath);\n\t\t\t} catch (e) { /* ignore */ }\n\t\t\tif (error.code === 'ENOTEMPTY') {\n\t\t\t\tthis.logService.info(`Rename failed because extension was installed by another source. So ignoring renaming.`, identifierWithVersion.id);\n\t\t\t} else {\n\t\t\t\tthis.logService.info(`Rename failed because of ${getErrorMessage(error)}. Deleted from extracted location`, tempPath);\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tlocal = await this.scanExtension(URI.file(extensionPath), ExtensionType.User);\n\t\t} catch (e) { /*ignore */ }\n\n\t\tif (local) {\n\t\t\treturn local;\n\t\t}\n\t\tthrow new Error(localize('cannot read', \"Cannot read the extension from {0}\", this.extensionsPath));\n\t}\n\n\tasync saveMetadataForLocalExtension(local: ILocalExtension, metadata: Metadata): Promise<ILocalExtension> {\n\t\tthis.setMetadata(local, metadata);\n\t\tawait this.storeMetadata(local, { ...metadata, installedTimestamp: local.installedTimestamp });\n\t\treturn local;\n\t}\n\n\tprivate async storeMetadata(local: ILocalExtension, metaData: Metadata): Promise<ILocalExtension> {\n\t\t// unset if false\n\t\tmetaData.isMachineScoped = metaData.isMachineScoped || undefined;\n\t\tmetaData.isBuiltin = metaData.isBuiltin || undefined;\n\t\tmetaData.installedTimestamp = metaData.installedTimestamp || undefined;\n\t\tconst manifestPath = path.join(local.location.fsPath, 'package.json');\n\t\tconst raw = await pfs.Promises.readFile(manifestPath, 'utf8');\n\t\tconst { manifest } = await this.parseManifest(raw);\n\t\t(manifest as ILocalExtensionManifest).__metadata = metaData;\n\t\tawait pfs.Promises.writeFile(manifestPath, JSON.stringify(manifest, null, '\\t'));\n\t\treturn local;\n\t}\n\n\tgetUninstalledExtensions(): Promise<IStringDictionary<boolean>> {\n\t\treturn this.withUninstalledExtensions();\n\t}\n\n\tasync setUninstalled(...extensions: ILocalExtension[]): Promise<void> {\n\t\tconst ids: ExtensionIdentifierWithVersion[] = extensions.map(e => new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version));\n\t\tawait this.withUninstalledExtensions(uninstalled => {\n\t\t\tids.forEach(id => uninstalled[id.key()] = true);\n\t\t});\n\t}\n\n\tasync setInstalled(identifierWithVersion: ExtensionIdentifierWithVersion): Promise<ILocalExtension | null> {\n\t\tawait this.withUninstalledExtensions(uninstalled => delete uninstalled[identifierWithVersion.key()]);\n\t\tconst installed = await this.scanExtensions(ExtensionType.User);\n\t\tconst localExtension = installed.find(i => new ExtensionIdentifierWithVersion(i.identifier, i.manifest.version).equals(identifierWithVersion)) || null;\n\t\tif (!localExtension) {\n\t\t\treturn null;\n\t\t}\n\t\tawait this.storeMetadata(localExtension, { installedTimestamp: Date.now() });\n\t\treturn this.scanExtension(localExtension.location, ExtensionType.User);\n\t}\n\n\tprivate async withUninstalledExtensions(updateFn?: (uninstalled: IStringDictionary<boolean>) => void): Promise<IStringDictionary<boolean>> {\n\t\treturn this.uninstalledFileLimiter.queue(async () => {\n\t\t\tlet raw: string | undefined;\n\t\t\ttry {\n\t\t\t\traw = await pfs.Promises.readFile(this.uninstalledPath, 'utf8');\n\t\t\t} catch (err) {\n\t\t\t\tif (err.code !== 'ENOENT') {\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet uninstalled = {};\n\t\t\tif (raw) {\n\t\t\t\ttry {\n\t\t\t\t\tuninstalled = JSON.parse(raw);\n\t\t\t\t} catch (e) { /* ignore */ }\n\t\t\t}\n\n\t\t\tif (updateFn) {\n\t\t\t\tupdateFn(uninstalled);\n\t\t\t\tif (Object.keys(uninstalled).length) {\n\t\t\t\t\tawait pfs.Promises.writeFile(this.uninstalledPath, JSON.stringify(uninstalled));\n\t\t\t\t} else {\n\t\t\t\t\tawait pfs.Promises.rm(this.uninstalledPath);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn uninstalled;\n\t\t});\n\t}\n\n\tasync removeExtension(extension: ILocalExtension, type: string): Promise<void> {\n\t\tthis.logService.trace(`Deleting ${type} extension from disk`, extension.identifier.id, extension.location.fsPath);\n\t\tawait pfs.Promises.rm(extension.location.fsPath);\n\t\tthis.logService.info('Deleted from disk', extension.identifier.id, extension.location.fsPath);\n\t}\n\n\tasync removeUninstalledExtension(extension: ILocalExtension): Promise<void> {\n\t\tawait this.removeExtension(extension, 'uninstalled');\n\t\tawait this.withUninstalledExtensions(uninstalled => delete uninstalled[new ExtensionIdentifierWithVersion(extension.identifier, extension.manifest.version).key()]);\n\t}\n\n\tprivate async extractAtLocation(identifier: IExtensionIdentifier, zipPath: string, location: string, token: CancellationToken): Promise<void> {\n\t\tthis.logService.trace(`Started extracting the extension from ${zipPath} to ${location}`);\n\n\t\t// Clean the location\n\t\ttry {\n\t\t\tawait pfs.Promises.rm(location);\n\t\t} catch (e) {\n\t\t\tthrow new ExtensionManagementError(this.joinErrors(e).message, ExtensionManagementErrorCode.Delete);\n\t\t}\n\n\t\ttry {\n\t\t\tawait extract(zipPath, location, { sourcePath: 'extension', overwrite: true }, token);\n\t\t\tthis.logService.info(`Extracted extension to ${location}:`, identifier.id);\n\t\t} catch (e) {\n\t\t\ttry { await pfs.Promises.rm(location); } catch (e) { /* Ignore */ }\n\t\t\tlet errorCode = ExtensionManagementErrorCode.Extract;\n\t\t\tif (e instanceof ExtractError) {\n\t\t\t\tif (e.type === 'CorruptZip') {\n\t\t\t\t\terrorCode = ExtensionManagementErrorCode.CorruptZip;\n\t\t\t\t} else if (e.type === 'Incomplete') {\n\t\t\t\t\terrorCode = ExtensionManagementErrorCode.IncompleteZip;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthrow new ExtensionManagementError(e.message, errorCode);\n\t\t}\n\t}\n\n\tprivate async rename(identifier: IExtensionIdentifier, extractPath: string, renamePath: string, retryUntil: number): Promise<void> {\n\t\ttry {\n\t\t\tawait pfs.Promises.rename(extractPath, renamePath);\n\t\t} catch (error) {\n\t\t\tif (isWindows && error && error.code === 'EPERM' && Date.now() < retryUntil) {\n\t\t\t\tthis.logService.info(`Failed renaming ${extractPath} to ${renamePath} with 'EPERM' error. Trying again...`, identifier.id);\n\t\t\t\treturn this.rename(identifier, extractPath, renamePath, retryUntil);\n\t\t\t}\n\t\t\tthrow new ExtensionManagementError(error.message || localize('renameError', \"Unknown error while renaming {0} to {1}\", extractPath, renamePath), error.code || ExtensionManagementErrorCode.Rename);\n\t\t}\n\t}\n\n\tprivate async scanSystemExtensions(): Promise<ILocalExtension[]> {\n\t\tthis.logService.trace('Started scanning system extensions');\n\t\tconst systemExtensionsPromise = this.scanDefaultSystemExtensions();\n\t\tif (this.environmentService.isBuilt) {\n\t\t\treturn systemExtensionsPromise;\n\t\t}\n\n\t\t// Scan other system extensions during development\n\t\tconst devSystemExtensionsPromise = this.scanDevSystemExtensions();\n\t\tconst [systemExtensions, devSystemExtensions] = await Promise.all([systemExtensionsPromise, devSystemExtensionsPromise]);\n\t\treturn [...systemExtensions, ...devSystemExtensions];\n\t}\n\n\tprivate async scanExtensionsInDir(dir: string, type: ExtensionType): Promise<ILocalExtension[]> {\n\t\tconst limiter = new Limiter<any>(10);\n\t\tconst stat = await this.fileService.resolve(URI.file(dir));\n\t\tif (stat.children) {\n\t\t\tconst extensions = await Promise.all<ILocalExtension>(stat.children.filter(c => c.isDirectory)\n\t\t\t\t.map(c => limiter.queue(async () => {\n\t\t\t\t\tif (type === ExtensionType.User && basename(c.resource).indexOf('.') === 0) { // Do not consider user extension folder starting with `.`\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\treturn this.scanExtension(c.resource, type);\n\t\t\t\t})));\n\t\t\treturn extensions.filter(e => e && e.identifier);\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate async scanExtension(extensionLocation: URI, type: ExtensionType): Promise<ILocalExtension | null> {\n\t\ttry {\n\t\t\tconst stat = await this.fileService.resolve(extensionLocation);\n\t\t\tif (stat.children) {\n\t\t\t\tconst { manifest, metadata } = await this.readManifest(extensionLocation.fsPath);\n\t\t\t\tconst readmeUrl = stat.children.find(({ name }) => /^readme(\\.txt|\\.md|)$/i.test(name))?.resource;\n\t\t\t\tconst changelogUrl = stat.children.find(({ name }) => /^changelog(\\.txt|\\.md|)$/i.test(name))?.resource;\n\t\t\t\tconst identifier = { id: getGalleryExtensionId(manifest.publisher, manifest.name) };\n\t\t\t\tconst local = <ILocalExtension>{ type, identifier, manifest, location: extensionLocation, readmeUrl, changelogUrl, publisherDisplayName: null, publisherId: null, isMachineScoped: false, isBuiltin: type === ExtensionType.System };\n\t\t\t\tthis.setMetadata(local, metadata);\n\t\t\t\treturn local;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tif (type !== ExtensionType.System) {\n\t\t\t\tthis.logService.trace(e);\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate async scanDefaultSystemExtensions(): Promise<ILocalExtension[]> {\n\t\tconst result = await this.scanExtensionsInDir(this.systemExtensionsPath, ExtensionType.System);\n\t\tthis.logService.trace('Scanned system extensions:', result.length);\n\t\treturn result;\n\t}\n\n\tprivate async scanDevSystemExtensions(): Promise<ILocalExtension[]> {\n\t\tconst devSystemExtensionsList = this.getDevSystemExtensionsList();\n\t\tif (devSystemExtensionsList.length) {\n\t\t\tconst result = await this.scanExtensionsInDir(this.devSystemExtensionsPath, ExtensionType.System);\n\t\t\tthis.logService.trace('Scanned dev system extensions:', result.length);\n\t\t\treturn result.filter(r => devSystemExtensionsList.some(id => areSameExtensions(r.identifier, { id })));\n\t\t} else {\n\t\t\treturn [];\n\t\t}\n\t}\n\n\tprivate setMetadata(local: IRelaxedLocalExtension, metadata: Metadata | null): void {\n\t\tlocal.publisherDisplayName = metadata?.publisherDisplayName || null;\n\t\tlocal.publisherId = metadata?.publisherId || null;\n\t\tlocal.identifier.uuid = metadata?.id;\n\t\tlocal.isMachineScoped = !!metadata?.isMachineScoped;\n\t\tlocal.isPreReleaseVersion = !!metadata?.isPreReleaseVersion;\n\t\tlocal.preRelease = !!metadata?.preRelease;\n\t\tlocal.isBuiltin = local.type === ExtensionType.System || !!metadata?.isBuiltin;\n\t\tlocal.installedTimestamp = metadata?.installedTimestamp;\n\t}\n\n\tprivate async removeUninstalledExtensions(): Promise<void> {\n\t\tconst uninstalled = await this.getUninstalledExtensions();\n\t\tconst extensions = await this.scanAllUserExtensions(); // All user extensions\n\t\tconst installed: Set<string> = new Set<string>();\n\t\tfor (const e of extensions) {\n\t\t\tif (!uninstalled[new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version).key()]) {\n\t\t\t\tinstalled.add(e.identifier.id.toLowerCase());\n\t\t\t}\n\t\t}\n\t\tconst byExtension: ILocalExtension[][] = groupByExtension(extensions, e => e.identifier);\n\t\tawait Promises.settled(byExtension.map(async e => {\n\t\t\tconst latest = e.sort((a, b) => semver.rcompare(a.manifest.version, b.manifest.version))[0];\n\t\t\tif (!installed.has(latest.identifier.id.toLowerCase())) {\n\t\t\t\tawait this.beforeRemovingExtension(latest);\n\t\t\t}\n\t\t}));\n\t\tconst toRemove: ILocalExtension[] = extensions.filter(e => uninstalled[new ExtensionIdentifierWithVersion(e.identifier, e.manifest.version).key()]);\n\t\tawait Promises.settled(toRemove.map(e => this.removeUninstalledExtension(e)));\n\t}\n\n\tprivate async removeOutdatedExtensions(): Promise<void> {\n\t\tconst extensions = await this.scanAllUserExtensions();\n\t\tconst toRemove: ILocalExtension[] = [];\n\n\t\t// Outdated extensions\n\t\tconst byExtension: ILocalExtension[][] = groupByExtension(extensions, e => e.identifier);\n\t\ttoRemove.push(...flatten(byExtension.map(p => p.sort((a, b) => semver.rcompare(a.manifest.version, b.manifest.version)).slice(1))));\n\n\t\tawait Promises.settled(toRemove.map(extension => this.removeExtension(extension, 'outdated')));\n\t}\n\n\tprivate getDevSystemExtensionsList(): string[] {\n\t\treturn (this.productService.builtInExtensions || []).map(e => e.name);\n\t}\n\n\tprivate joinErrors(errorOrErrors: (Error | string) | (Array<Error | string>)): Error {\n\t\tconst errors = Array.isArray(errorOrErrors) ? errorOrErrors : [errorOrErrors];\n\t\tif (errors.length === 1) {\n\t\t\treturn errors[0] instanceof Error ? <Error>errors[0] : new Error(<string>errors[0]);\n\t\t}\n\t\treturn errors.reduce<Error>((previousValue: Error, currentValue: Error | string) => {\n\t\t\treturn new Error(`${previousValue.message}${previousValue.message ? ',' : ''}${currentValue instanceof Error ? currentValue.message : currentValue}`);\n\t\t}, new Error(''));\n\t}\n\n\tprivate _devSystemExtensionsPath: string | null = null;\n\tprivate get devSystemExtensionsPath(): string {\n\t\tif (!this._devSystemExtensionsPath) {\n\t\t\tthis._devSystemExtensionsPath = path.normalize(path.join(FileAccess.asFileUri('', require).fsPath, '..', '.build', 'builtInExtensions'));\n\t\t}\n\t\treturn this._devSystemExtensionsPath;\n\t}\n\n\tprivate async readManifest(extensionPath: string): Promise<{ manifest: IExtensionManifest; metadata: Metadata | null; }> {\n\t\tconst promises = [\n\t\t\tpfs.Promises.readFile(path.join(extensionPath, 'package.json'), 'utf8')\n\t\t\t\t.then(raw => this.parseManifest(raw)),\n\t\t\tpfs.Promises.readFile(path.join(extensionPath, 'package.nls.json'), 'utf8')\n\t\t\t\t.then(undefined, err => err.code !== 'ENOENT' ? Promise.reject<string>(err) : '{}')\n\t\t\t\t.then(raw => JSON.parse(raw))\n\t\t];\n\n\t\tconst [{ manifest, metadata }, translations] = await Promise.all(promises);\n\t\treturn {\n\t\t\tmanifest: localizeManifest(manifest, translations),\n\t\t\tmetadata\n\t\t};\n\t}\n\n\tprivate parseManifest(raw: string): Promise<{ manifest: IExtensionManifest; metadata: Metadata | null; }> {\n\t\treturn new Promise((c, e) => {\n\t\t\ttry {\n\t\t\t\tconst manifest = JSON.parse(raw);\n\t\t\t\tconst metadata = manifest.__metadata || null;\n\t\t\t\tc({ manifest, metadata });\n\t\t\t} catch (err) {\n\t\t\t\te(new Error(localize('invalidManifest', \"Extension invalid: package.json is not a JSON file.\")));\n\t\t\t}\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { getErrorMessage } from 'vs/base/common/errors';\nimport { Schemas } from 'vs/base/common/network';\nimport * as path from 'vs/base/common/path';\nimport { isLinux, isMacintosh, platform } from 'vs/base/common/platform';\nimport { arch } from 'vs/base/common/process';\nimport { joinPath } from 'vs/base/common/resources';\nimport * as semver from 'vs/base/common/semver/semver';\nimport { URI } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport * as pfs from 'vs/base/node/pfs';\nimport { IFile, zip } from 'vs/base/node/zip';\nimport * as nls from 'vs/nls';\nimport { IDownloadService } from 'vs/platform/download/common/download';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { AbstractExtensionManagementService, AbstractExtensionTask, IInstallExtensionTask, IUninstallExtensionTask, joinErrors, UninstallExtensionTaskOptions } from 'vs/platform/extensionManagement/common/abstractExtensionManagementService';\nimport {\n\tExtensionManagementError, ExtensionManagementErrorCode, getTargetPlatform, IExtensionGalleryService, IExtensionIdentifier, IExtensionManagementService, IGalleryExtension, IGalleryMetadata, ILocalExtension, InstallOperation, InstallOptions,\n\tInstallVSIXOptions, Metadata, TargetPlatform\n} from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { areSameExtensions, ExtensionIdentifierWithVersion, getGalleryExtensionId } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { ExtensionsDownloader } from 'vs/platform/extensionManagement/node/extensionDownloader';\nimport { ExtensionsLifecycle } from 'vs/platform/extensionManagement/node/extensionLifecycle';\nimport { getManifest } from 'vs/platform/extensionManagement/node/extensionManagementUtil';\nimport { ExtensionsManifestCache } from 'vs/platform/extensionManagement/node/extensionsManifestCache';\nimport { ExtensionsScanner, ILocalExtensionManifest } from 'vs/platform/extensionManagement/node/extensionsScanner';\nimport { ExtensionsWatcher } from 'vs/platform/extensionManagement/node/extensionsWatcher';\nimport { ExtensionType, IExtensionManifest } from 'vs/platform/extensions/common/extensions';\nimport { isEngineValid } from 'vs/platform/extensions/common/extensionValidator';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\n\ninterface InstallableExtension {\n\tzipPath: string;\n\tidentifierWithVersion: ExtensionIdentifierWithVersion;\n\tmetadata?: Metadata;\n}\n\nexport class ExtensionManagementService extends AbstractExtensionManagementService implements IExtensionManagementService {\n\n\tprivate readonly extensionsScanner: ExtensionsScanner;\n\tprivate readonly manifestCache: ExtensionsManifestCache;\n\tprivate readonly extensionsDownloader: ExtensionsDownloader;\n\n\tconstructor(\n\t\t@IExtensionGalleryService galleryService: IExtensionGalleryService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@ILogService logService: ILogService,\n\t\t@INativeEnvironmentService private readonly environmentService: INativeEnvironmentService,\n\t\t@IDownloadService private downloadService: IDownloadService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IProductService productService: IProductService,\n\t\t@IUriIdentityService uriIdentityService: IUriIdentityService\n\t) {\n\t\tsuper(galleryService, telemetryService, logService, productService);\n\t\tconst extensionLifecycle = this._register(instantiationService.createInstance(ExtensionsLifecycle));\n\t\tthis.extensionsScanner = this._register(instantiationService.createInstance(ExtensionsScanner, extension => extensionLifecycle.postUninstall(extension)));\n\t\tthis.manifestCache = this._register(new ExtensionsManifestCache(environmentService, this));\n\t\tthis.extensionsDownloader = this._register(instantiationService.createInstance(ExtensionsDownloader));\n\t\tconst extensionsWatcher = this._register(new ExtensionsWatcher(this, fileService, environmentService, logService, uriIdentityService));\n\n\t\tthis._register(extensionsWatcher.onDidChangeExtensionsByAnotherSource(({ added, removed }) => {\n\t\t\tif (added.length) {\n\t\t\t\tthis._onDidInstallExtensions.fire(added.map(local => ({ identifier: local.identifier, operation: InstallOperation.None, local })));\n\t\t\t}\n\t\t\tremoved.forEach(extension => this._onDidUninstallExtension.fire({ identifier: extension }));\n\t\t}));\n\t}\n\n\tprivate _targetPlatformPromise: Promise<TargetPlatform> | undefined;\n\tgetTargetPlatform(): Promise<TargetPlatform> {\n\t\tif (!this._targetPlatformPromise) {\n\t\t\tthis._targetPlatformPromise = (async () => {\n\t\t\t\tconst isAlpineLinux = await this.isAlpineLinux();\n\t\t\t\tconst targetPlatform = getTargetPlatform(isAlpineLinux ? 'alpine' : platform, arch);\n\t\t\t\tthis.logService.debug('ExtensionManagementService#TargetPlatform:', targetPlatform);\n\t\t\t\treturn targetPlatform;\n\t\t\t})();\n\t\t}\n\t\treturn this._targetPlatformPromise;\n\t}\n\n\tprivate async isAlpineLinux(): Promise<boolean> {\n\t\tif (!isLinux) {\n\t\t\treturn false;\n\t\t}\n\t\tlet content: string | undefined;\n\t\ttry {\n\t\t\tconst fileContent = await this.fileService.readFile(URI.file('/etc/os-release'));\n\t\t\tcontent = fileContent.value.toString();\n\t\t} catch (error) {\n\t\t\ttry {\n\t\t\t\tconst fileContent = await this.fileService.readFile(URI.file('/usr/lib/os-release'));\n\t\t\t\tcontent = fileContent.value.toString();\n\t\t\t} catch (error) {\n\t\t\t\t/* Ignore */\n\t\t\t\tthis.logService.debug(`Error while getting the os-release file.`, getErrorMessage(error));\n\t\t\t}\n\t\t}\n\t\treturn !!content && (content.match(/^ID=([^\\u001b\\r\\n]*)/m) || [])[1] === 'alpine';\n\t}\n\n\tasync zip(extension: ILocalExtension): Promise<URI> {\n\t\tthis.logService.trace('ExtensionManagementService#zip', extension.identifier.id);\n\t\tconst files = await this.collectFiles(extension);\n\t\tconst location = await zip(joinPath(this.environmentService.tmpDir, generateUuid()).fsPath, files);\n\t\treturn URI.file(location);\n\t}\n\n\tasync unzip(zipLocation: URI): Promise<IExtensionIdentifier> {\n\t\tthis.logService.trace('ExtensionManagementService#unzip', zipLocation.toString());\n\t\tconst local = await this.install(zipLocation);\n\t\treturn local.identifier;\n\t}\n\n\tasync getManifest(vsix: URI): Promise<IExtensionManifest> {\n\t\tconst downloadLocation = await this.downloadVsix(vsix);\n\t\tconst zipPath = path.resolve(downloadLocation.fsPath);\n\t\treturn getManifest(zipPath);\n\t}\n\n\tgetInstalled(type: ExtensionType | null = null): Promise<ILocalExtension[]> {\n\t\treturn this.extensionsScanner.scanExtensions(type);\n\t}\n\n\tasync install(vsix: URI, options: InstallVSIXOptions = {}): Promise<ILocalExtension> {\n\t\tthis.logService.trace('ExtensionManagementService#install', vsix.toString());\n\n\t\tconst downloadLocation = await this.downloadVsix(vsix);\n\t\tconst manifest = await getManifest(path.resolve(downloadLocation.fsPath));\n\t\tif (manifest.engines && manifest.engines.vscode && !isEngineValid(manifest.engines.vscode, this.productService.version, this.productService.date)) {\n\t\t\tthrow new Error(nls.localize('incompatible', \"Unable to install extension '{0}' as it is not compatible with VS Code '{1}'.\", getGalleryExtensionId(manifest.publisher, manifest.name), this.productService.version));\n\t\t}\n\n\t\treturn this.installExtension(manifest, downloadLocation, options);\n\t}\n\n\tasync updateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension> {\n\t\tthis.logService.trace('ExtensionManagementService#updateMetadata', local.identifier.id);\n\t\tconst localMetadata: Metadata = { ...((<ILocalExtensionManifest>local.manifest).__metadata || {}), ...metadata };\n\t\tif (metadata.isPreReleaseVersion) {\n\t\t\tlocalMetadata.preRelease = true;\n\t\t}\n\t\tlocal = await this.extensionsScanner.saveMetadataForLocalExtension(local, localMetadata);\n\t\tthis.manifestCache.invalidate();\n\t\treturn local;\n\t}\n\n\tasync updateExtensionScope(local: ILocalExtension, isMachineScoped: boolean): Promise<ILocalExtension> {\n\t\tthis.logService.trace('ExtensionManagementService#updateExtensionScope', local.identifier.id);\n\t\tlocal = await this.extensionsScanner.saveMetadataForLocalExtension(local, { ...((<ILocalExtensionManifest>local.manifest).__metadata || {}), isMachineScoped });\n\t\tthis.manifestCache.invalidate();\n\t\treturn local;\n\t}\n\n\tremoveDeprecatedExtensions(): Promise<void> {\n\t\treturn this.extensionsScanner.cleanUp();\n\t}\n\n\tprivate async downloadVsix(vsix: URI): Promise<URI> {\n\t\tif (vsix.scheme === Schemas.file) {\n\t\t\treturn vsix;\n\t\t}\n\t\tconst downloadedLocation = joinPath(this.environmentService.tmpDir, generateUuid());\n\t\tawait this.downloadService.download(vsix, downloadedLocation);\n\t\treturn downloadedLocation;\n\t}\n\n\tprotected createInstallExtensionTask(manifest: IExtensionManifest, extension: URI | IGalleryExtension, options: InstallOptions & InstallVSIXOptions): IInstallExtensionTask {\n\t\treturn URI.isUri(extension) ? new InstallVSIXTask(manifest, extension, options, this.galleryService, this.extensionsScanner, this.logService) : new InstallGalleryExtensionTask(extension, options, this.extensionsDownloader, this.extensionsScanner, this.logService);\n\t}\n\n\tprotected createUninstallExtensionTask(extension: ILocalExtension, options: UninstallExtensionTaskOptions): IUninstallExtensionTask {\n\t\treturn new UninstallExtensionTask(extension, options, this.extensionsScanner);\n\t}\n\n\tprivate async collectFiles(extension: ILocalExtension): Promise<IFile[]> {\n\n\t\tconst collectFilesFromDirectory = async (dir: string): Promise<string[]> => {\n\t\t\tlet entries = await pfs.Promises.readdir(dir);\n\t\t\tentries = entries.map(e => path.join(dir, e));\n\t\t\tconst stats = await Promise.all(entries.map(e => pfs.Promises.stat(e)));\n\t\t\tlet promise: Promise<string[]> = Promise.resolve([]);\n\t\t\tstats.forEach((stat, index) => {\n\t\t\t\tconst entry = entries[index];\n\t\t\t\tif (stat.isFile()) {\n\t\t\t\t\tpromise = promise.then(result => ([...result, entry]));\n\t\t\t\t}\n\t\t\t\tif (stat.isDirectory()) {\n\t\t\t\t\tpromise = promise\n\t\t\t\t\t\t.then(result => collectFilesFromDirectory(entry)\n\t\t\t\t\t\t\t.then(files => ([...result, ...files])));\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn promise;\n\t\t};\n\n\t\tconst files = await collectFilesFromDirectory(extension.location.fsPath);\n\t\treturn files.map(f => (<IFile>{ path: `extension/${path.relative(extension.location.fsPath, f)}`, localPath: f }));\n\t}\n\n}\n\nabstract class AbstractInstallExtensionTask extends AbstractExtensionTask<ILocalExtension> implements IInstallExtensionTask {\n\n\tprotected _operation = InstallOperation.Install;\n\tget operation() { return this._operation; }\n\n\tconstructor(\n\t\treadonly identifier: IExtensionIdentifier,\n\t\treadonly source: URI | IGalleryExtension,\n\t\tprotected readonly extensionsScanner: ExtensionsScanner,\n\t\tprotected readonly logService: ILogService,\n\t) {\n\t\tsuper();\n\t}\n\n\tprotected async installExtension(installableExtension: InstallableExtension, token: CancellationToken): Promise<ILocalExtension> {\n\t\ttry {\n\t\t\tconst local = await this.unsetUninstalledAndGetLocal(installableExtension.identifierWithVersion);\n\t\t\tif (local) {\n\t\t\t\treturn installableExtension.metadata ? this.extensionsScanner.saveMetadataForLocalExtension(local, { ...((<ILocalExtensionManifest>local.manifest).__metadata || {}), ...installableExtension.metadata }) : local;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tif (isMacintosh) {\n\t\t\t\tthrow new ExtensionManagementError(nls.localize('quitCode', \"Unable to install the extension. Please Quit and Start VS Code before reinstalling.\"), ExtensionManagementErrorCode.Internal);\n\t\t\t} else {\n\t\t\t\tthrow new ExtensionManagementError(nls.localize('exitCode', \"Unable to install the extension. Please Exit and Start VS Code before reinstalling.\"), ExtensionManagementErrorCode.Internal);\n\t\t\t}\n\t\t}\n\t\treturn this.extract(installableExtension, token);\n\t}\n\n\tprotected async unsetUninstalledAndGetLocal(identifierWithVersion: ExtensionIdentifierWithVersion): Promise<ILocalExtension | null> {\n\t\tconst isUninstalled = await this.isUninstalled(identifierWithVersion);\n\t\tif (!isUninstalled) {\n\t\t\treturn null;\n\t\t}\n\n\t\tthis.logService.trace('Removing the extension from uninstalled list:', identifierWithVersion.id);\n\t\t// If the same version of extension is marked as uninstalled, remove it from there and return the local.\n\t\tconst local = await this.extensionsScanner.setInstalled(identifierWithVersion);\n\t\tthis.logService.info('Removed the extension from uninstalled list:', identifierWithVersion.id);\n\n\t\treturn local;\n\t}\n\n\tprivate async isUninstalled(identifier: ExtensionIdentifierWithVersion): Promise<boolean> {\n\t\tconst uninstalled = await this.extensionsScanner.getUninstalledExtensions();\n\t\treturn !!uninstalled[identifier.key()];\n\t}\n\n\tprivate async extract({ zipPath, identifierWithVersion, metadata }: InstallableExtension, token: CancellationToken): Promise<ILocalExtension> {\n\t\tlet local = await this.extensionsScanner.extractUserExtension(identifierWithVersion, zipPath, metadata, token);\n\t\tthis.logService.info('Extracting completed.', identifierWithVersion.id);\n\t\treturn local;\n\t}\n\n}\n\nclass InstallGalleryExtensionTask extends AbstractInstallExtensionTask {\n\n\tconstructor(\n\t\tprivate readonly gallery: IGalleryExtension,\n\t\tprivate readonly options: InstallOptions,\n\t\tprivate readonly extensionsDownloader: ExtensionsDownloader,\n\t\textensionsScanner: ExtensionsScanner,\n\t\tlogService: ILogService,\n\t) {\n\t\tsuper(gallery.identifier, gallery, extensionsScanner, logService);\n\t}\n\n\tprotected async doRun(token: CancellationToken): Promise<ILocalExtension> {\n\t\tconst installed = await this.extensionsScanner.scanExtensions(null);\n\t\tconst existingExtension = installed.find(i => areSameExtensions(i.identifier, this.gallery.identifier));\n\t\tif (existingExtension) {\n\t\t\tthis._operation = InstallOperation.Update;\n\t\t}\n\n\t\tconst installableExtension = await this.downloadInstallableExtension(this.gallery, this._operation);\n\t\tinstallableExtension.metadata.isMachineScoped = this.options.isMachineScoped || existingExtension?.isMachineScoped;\n\t\tinstallableExtension.metadata.isBuiltin = this.options.isBuiltin || existingExtension?.isBuiltin;\n\t\tinstallableExtension.metadata.isPreReleaseVersion = this.gallery.properties.isPreReleaseVersion;\n\t\tinstallableExtension.metadata.preRelease = this.gallery.hasPreReleaseVersion ? this.gallery.properties.isPreReleaseVersion : existingExtension?.preRelease;\n\n\t\ttry {\n\t\t\tconst local = await this.installExtension(installableExtension, token);\n\t\t\tif (existingExtension && semver.neq(existingExtension.manifest.version, this.gallery.version)) {\n\t\t\t\tawait this.extensionsScanner.setUninstalled(existingExtension);\n\t\t\t}\n\t\t\treturn local;\n\t\t} catch (error) {\n\t\t\tawait this.deleteDownloadedVSIX(installableExtension.zipPath);\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\tprivate async deleteDownloadedVSIX(vsix: string): Promise<void> {\n\t\ttry {\n\t\t\tawait this.extensionsDownloader.delete(URI.file(vsix));\n\t\t} catch (error) {\n\t\t\t/* Ignore */\n\t\t\tthis.logService.warn('Error while deleting the downloaded vsix', vsix.toString(), getErrorMessage(error));\n\t\t}\n\t}\n\n\tprivate async downloadInstallableExtension(extension: IGalleryExtension, operation: InstallOperation): Promise<Required<InstallableExtension>> {\n\t\tconst metadata = <IGalleryMetadata>{\n\t\t\tid: extension.identifier.uuid,\n\t\t\tpublisherId: extension.publisherId,\n\t\t\tpublisherDisplayName: extension.publisherDisplayName,\n\t\t};\n\n\t\tlet zipPath: string | undefined;\n\t\ttry {\n\t\t\tthis.logService.trace('Started downloading extension:', extension.identifier.id);\n\t\t\tzipPath = (await this.extensionsDownloader.downloadExtension(extension, operation)).fsPath;\n\t\t\tthis.logService.info('Downloaded extension:', extension.identifier.id, zipPath);\n\t\t} catch (error) {\n\t\t\tthrow new ExtensionManagementError(joinErrors(error).message, ExtensionManagementErrorCode.Download);\n\t\t}\n\n\t\ttry {\n\t\t\tconst manifest = await getManifest(zipPath);\n\t\t\treturn (<Required<InstallableExtension>>{ zipPath, identifierWithVersion: new ExtensionIdentifierWithVersion(extension.identifier, manifest.version), metadata });\n\t\t} catch (error) {\n\t\t\tawait this.deleteDownloadedVSIX(zipPath);\n\t\t\tthrow new ExtensionManagementError(joinErrors(error).message, ExtensionManagementErrorCode.Invalid);\n\t\t}\n\t}\n}\n\nclass InstallVSIXTask extends AbstractInstallExtensionTask {\n\n\tconstructor(\n\t\tprivate readonly manifest: IExtensionManifest,\n\t\tprivate readonly location: URI,\n\t\tprivate readonly options: InstallOptions,\n\t\tprivate readonly galleryService: IExtensionGalleryService,\n\t\textensionsScanner: ExtensionsScanner,\n\t\tlogService: ILogService\n\t) {\n\t\tsuper({ id: getGalleryExtensionId(manifest.publisher, manifest.name) }, location, extensionsScanner, logService);\n\t}\n\n\tprotected async doRun(token: CancellationToken): Promise<ILocalExtension> {\n\t\tconst identifierWithVersion = new ExtensionIdentifierWithVersion(this.identifier, this.manifest.version);\n\t\tconst installedExtensions = await this.extensionsScanner.scanExtensions(ExtensionType.User);\n\t\tconst existing = installedExtensions.find(i => areSameExtensions(this.identifier, i.identifier));\n\t\tconst metadata = await this.getMetadata(this.identifier.id, this.manifest.version, token);\n\t\tmetadata.isMachineScoped = this.options.isMachineScoped || existing?.isMachineScoped;\n\t\tmetadata.isBuiltin = this.options.isBuiltin || existing?.isBuiltin;\n\n\t\tif (existing) {\n\t\t\tthis._operation = InstallOperation.Update;\n\t\t\tif (identifierWithVersion.equals(new ExtensionIdentifierWithVersion(existing.identifier, existing.manifest.version))) {\n\t\t\t\ttry {\n\t\t\t\t\tawait this.extensionsScanner.removeExtension(existing, 'existing');\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthrow new Error(nls.localize('restartCode', \"Please restart VS Code before reinstalling {0}.\", this.manifest.displayName || this.manifest.name));\n\t\t\t\t}\n\t\t\t} else if (semver.gt(existing.manifest.version, this.manifest.version)) {\n\t\t\t\tawait this.extensionsScanner.setUninstalled(existing);\n\t\t\t}\n\t\t} else {\n\t\t\t// Remove the extension with same version if it is already uninstalled.\n\t\t\t// Installing a VSIX extension shall replace the existing extension always.\n\t\t\tconst existing = await this.unsetUninstalledAndGetLocal(identifierWithVersion);\n\t\t\tif (existing) {\n\t\t\t\ttry {\n\t\t\t\t\tawait this.extensionsScanner.removeExtension(existing, 'existing');\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthrow new Error(nls.localize('restartCode', \"Please restart VS Code before reinstalling {0}.\", this.manifest.displayName || this.manifest.name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.installExtension({ zipPath: path.resolve(this.location.fsPath), identifierWithVersion, metadata }, token);\n\t}\n\n\tprivate async getMetadata(id: string, version: string, token: CancellationToken): Promise<Metadata> {\n\t\ttry {\n\t\t\tlet [galleryExtension] = await this.galleryService.getExtensions([{ id, version }], token);\n\t\t\tif (!galleryExtension) {\n\t\t\t\t[galleryExtension] = await this.galleryService.getExtensions([{ id }], token);\n\t\t\t}\n\t\t\tif (galleryExtension) {\n\t\t\t\treturn { id: galleryExtension.identifier.uuid, publisherDisplayName: galleryExtension.publisherDisplayName, publisherId: galleryExtension.publisherId, isPreReleaseVersion: galleryExtension.properties.isPreReleaseVersion, preRelease: galleryExtension.properties.isPreReleaseVersion };\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t/* Ignore Error */\n\t\t}\n\t\treturn {};\n\t}\n}\n\nclass UninstallExtensionTask extends AbstractExtensionTask<void> implements IUninstallExtensionTask {\n\n\tconstructor(\n\t\treadonly extension: ILocalExtension,\n\t\tprivate readonly options: UninstallExtensionTaskOptions,\n\t\tprivate readonly extensionsScanner: ExtensionsScanner\n\t) { super(); }\n\n\tprotected async doRun(token: CancellationToken): Promise<void> {\n\t\tconst toUninstall: ILocalExtension[] = [];\n\t\tconst userExtensions = await this.extensionsScanner.scanUserExtensions(false);\n\t\tif (this.options.versionOnly) {\n\t\t\tconst extensionIdentifierWithVersion = new ExtensionIdentifierWithVersion(this.extension.identifier, this.extension.manifest.version);\n\t\t\ttoUninstall.push(...userExtensions.filter(u => extensionIdentifierWithVersion.equals(new ExtensionIdentifierWithVersion(u.identifier, u.manifest.version))));\n\t\t} else {\n\t\t\ttoUninstall.push(...userExtensions.filter(u => areSameExtensions(u.identifier, this.extension.identifier)));\n\t\t}\n\n\t\tif (!toUninstall.length) {\n\t\t\tthrow new Error(nls.localize('notInstalled', \"Extension '{0}' is not installed.\", this.extension.manifest.displayName || this.extension.manifest.name));\n\t\t}\n\t\tawait this.extensionsScanner.setUninstalled(...toUninstall);\n\n\t\tif (this.options.remove) {\n\t\t\tfor (const extension of toUninstall) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!token.isCancellationRequested) {\n\t\t\t\t\t\tawait this.extensionsScanner.removeUninstalledExtension(extension);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthrow new Error(nls.localize('removeError', \"Error while removing the extension: {0}. Please Quit and Start VS Code before trying again.\", toErrorMessage(e)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createHash } from 'crypto';\nimport { createConnection, createServer, Server as NetServer, Socket } from 'net';\nimport { tmpdir } from 'os';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { join } from 'vs/base/common/path';\nimport { Platform, platform } from 'vs/base/common/platform';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { ClientConnectionEvent, IPCServer } from 'vs/base/parts/ipc/common/ipc';\nimport { ChunkStream, Client, ISocket, Protocol, SocketCloseEvent, SocketCloseEventType, SocketDiagnostics, SocketDiagnosticsEventType } from 'vs/base/parts/ipc/common/ipc.net';\nimport * as zlib from 'zlib';\n\nexport class NodeSocket implements ISocket {\n\n\tpublic readonly debugLabel: string;\n\tpublic readonly socket: Socket;\n\tprivate readonly _errorListener: (err: any) => void;\n\n\tpublic traceSocketEvent(type: SocketDiagnosticsEventType, data?: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView | any): void {\n\t\tSocketDiagnostics.traceSocketEvent(this.socket, this.debugLabel, type, data);\n\t}\n\n\tconstructor(socket: Socket, debugLabel: string = '') {\n\t\tthis.debugLabel = debugLabel;\n\t\tthis.socket = socket;\n\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.Created, { type: 'NodeSocket' });\n\t\tthis._errorListener = (err: any) => {\n\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.Error, { code: err?.code, message: err?.message });\n\t\t\tif (err) {\n\t\t\t\tif (err.code === 'EPIPE') {\n\t\t\t\t\t// An EPIPE exception at the wrong time can lead to a renderer process crash\n\t\t\t\t\t// so ignore the error since the socket will fire the close event soon anyways:\n\t\t\t\t\t// > https://nodejs.org/api/errors.html#errors_common_system_errors\n\t\t\t\t\t// > EPIPE (Broken pipe): A write on a pipe, socket, or FIFO for which there is no\n\t\t\t\t\t// > process to read the data. Commonly encountered at the net and http layers,\n\t\t\t\t\t// > indicative that the remote side of the stream being written to has been closed.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tonUnexpectedError(err);\n\t\t\t}\n\t\t};\n\t\tthis.socket.on('error', this._errorListener);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.socket.off('error', this._errorListener);\n\t\tthis.socket.destroy();\n\t}\n\n\tpublic onData(_listener: (e: VSBuffer) => void): IDisposable {\n\t\tconst listener = (buff: Buffer) => {\n\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.Read, buff);\n\t\t\t_listener(VSBuffer.wrap(buff));\n\t\t};\n\t\tthis.socket.on('data', listener);\n\t\treturn {\n\t\t\tdispose: () => this.socket.off('data', listener)\n\t\t};\n\t}\n\n\tpublic onClose(listener: (e: SocketCloseEvent) => void): IDisposable {\n\t\tconst adapter = (hadError: boolean) => {\n\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.Close, { hadError });\n\t\t\tlistener({\n\t\t\t\ttype: SocketCloseEventType.NodeSocketCloseEvent,\n\t\t\t\thadError: hadError,\n\t\t\t\terror: undefined\n\t\t\t});\n\t\t};\n\t\tthis.socket.on('close', adapter);\n\t\treturn {\n\t\t\tdispose: () => this.socket.off('close', adapter)\n\t\t};\n\t}\n\n\tpublic onEnd(listener: () => void): IDisposable {\n\t\tconst adapter = () => {\n\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.NodeEndReceived);\n\t\t\tlistener();\n\t\t};\n\t\tthis.socket.on('end', adapter);\n\t\treturn {\n\t\t\tdispose: () => this.socket.off('end', adapter)\n\t\t};\n\t}\n\n\tpublic write(buffer: VSBuffer): void {\n\t\t// return early if socket has been destroyed in the meantime\n\t\tif (this.socket.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// we ignore the returned value from `write` because we would have to cached the data\n\t\t// anyways and nodejs is already doing that for us:\n\t\t// > https://nodejs.org/api/stream.html#stream_writable_write_chunk_encoding_callback\n\t\t// > However, the false return value is only advisory and the writable stream will unconditionally\n\t\t// > accept and buffer chunk even if it has not been allowed to drain.\n\t\ttry {\n\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.Write, buffer);\n\t\t\tthis.socket.write(buffer.buffer, (err: any) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tif (err.code === 'EPIPE') {\n\t\t\t\t\t\t// An EPIPE exception at the wrong time can lead to a renderer process crash\n\t\t\t\t\t\t// so ignore the error since the socket will fire the close event soon anyways:\n\t\t\t\t\t\t// > https://nodejs.org/api/errors.html#errors_common_system_errors\n\t\t\t\t\t\t// > EPIPE (Broken pipe): A write on a pipe, socket, or FIFO for which there is no\n\t\t\t\t\t\t// > process to read the data. Commonly encountered at the net and http layers,\n\t\t\t\t\t\t// > indicative that the remote side of the stream being written to has been closed.\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tonUnexpectedError(err);\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tif (err.code === 'EPIPE') {\n\t\t\t\t// An EPIPE exception at the wrong time can lead to a renderer process crash\n\t\t\t\t// so ignore the error since the socket will fire the close event soon anyways:\n\t\t\t\t// > https://nodejs.org/api/errors.html#errors_common_system_errors\n\t\t\t\t// > EPIPE (Broken pipe): A write on a pipe, socket, or FIFO for which there is no\n\t\t\t\t// > process to read the data. Commonly encountered at the net and http layers,\n\t\t\t\t// > indicative that the remote side of the stream being written to has been closed.\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tonUnexpectedError(err);\n\t\t}\n\t}\n\n\tpublic end(): void {\n\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.NodeEndSent);\n\t\tthis.socket.end();\n\t}\n\n\tpublic drain(): Promise<void> {\n\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.NodeDrainBegin);\n\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\tif (this.socket.bufferSize === 0) {\n\t\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.NodeDrainEnd);\n\t\t\t\tresolve();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst finished = () => {\n\t\t\t\tthis.socket.off('close', finished);\n\t\t\t\tthis.socket.off('end', finished);\n\t\t\t\tthis.socket.off('error', finished);\n\t\t\t\tthis.socket.off('timeout', finished);\n\t\t\t\tthis.socket.off('drain', finished);\n\t\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.NodeDrainEnd);\n\t\t\t\tresolve();\n\t\t\t};\n\t\t\tthis.socket.on('close', finished);\n\t\t\tthis.socket.on('end', finished);\n\t\t\tthis.socket.on('error', finished);\n\t\t\tthis.socket.on('timeout', finished);\n\t\t\tthis.socket.on('drain', finished);\n\t\t});\n\t}\n}\n\nconst enum Constants {\n\tMinHeaderByteSize = 2\n}\n\nconst enum ReadState {\n\tPeekHeader = 1,\n\tReadHeader = 2,\n\tReadBody = 3,\n\tFin = 4\n}\n\ninterface ISocketTracer {\n\ttraceSocketEvent(type: SocketDiagnosticsEventType, data?: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView | any): void\n}\n\n/**\n * See https://tools.ietf.org/html/rfc6455#section-5.2\n */\nexport class WebSocketNodeSocket extends Disposable implements ISocket, ISocketTracer {\n\n\tpublic readonly socket: NodeSocket;\n\tprivate readonly _flowManager: WebSocketFlowManager;\n\tprivate readonly _incomingData: ChunkStream;\n\tprivate readonly _onData = this._register(new Emitter<VSBuffer>());\n\tprivate readonly _onClose = this._register(new Emitter<SocketCloseEvent>());\n\tprivate _isEnded: boolean = false;\n\n\tprivate readonly _state = {\n\t\tstate: ReadState.PeekHeader,\n\t\treadLen: Constants.MinHeaderByteSize,\n\t\tfin: 0,\n\t\tcompressed: false,\n\t\tfirstFrameOfMessage: true,\n\t\tmask: 0\n\t};\n\n\tpublic get permessageDeflate(): boolean {\n\t\treturn this._flowManager.permessageDeflate;\n\t}\n\n\tpublic get recordedInflateBytes(): VSBuffer {\n\t\treturn this._flowManager.recordedInflateBytes;\n\t}\n\n\tpublic traceSocketEvent(type: SocketDiagnosticsEventType, data?: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView | any): void {\n\t\tthis.socket.traceSocketEvent(type, data);\n\t}\n\n\t/**\n\t * Create a socket which can communicate using WebSocket frames.\n\t *\n\t * **NOTE**: When using the permessage-deflate WebSocket extension, if parts of inflating was done\n\t *  in a different zlib instance, we need to pass all those bytes into zlib, otherwise the inflate\n\t *  might hit an inflated portion referencing a distance too far back.\n\t *\n\t * @param socket The underlying socket\n\t * @param permessageDeflate Use the permessage-deflate WebSocket extension\n\t * @param inflateBytes \"Seed\" zlib inflate with these bytes.\n\t * @param recordInflateBytes Record all bytes sent to inflate\n\t */\n\tconstructor(socket: NodeSocket, permessageDeflate: boolean, inflateBytes: VSBuffer | null, recordInflateBytes: boolean) {\n\t\tsuper();\n\t\tthis.socket = socket;\n\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.Created, { type: 'WebSocketNodeSocket', permessageDeflate, inflateBytesLength: inflateBytes?.byteLength || 0, recordInflateBytes });\n\t\tthis._flowManager = this._register(new WebSocketFlowManager(\n\t\t\tthis,\n\t\t\tpermessageDeflate,\n\t\t\tinflateBytes,\n\t\t\trecordInflateBytes,\n\t\t\tthis._onData,\n\t\t\t(data, compressed) => this._write(data, compressed)\n\t\t));\n\t\tthis._register(this._flowManager.onError((err) => {\n\t\t\t// zlib errors are fatal, since we have no idea how to recover\n\t\t\tconsole.error(err);\n\t\t\tonUnexpectedError(err);\n\t\t\tthis._onClose.fire({\n\t\t\t\ttype: SocketCloseEventType.NodeSocketCloseEvent,\n\t\t\t\thadError: true,\n\t\t\t\terror: err\n\t\t\t});\n\t\t}));\n\t\tthis._incomingData = new ChunkStream();\n\t\tthis._register(this.socket.onData(data => this._acceptChunk(data)));\n\t\tthis._register(this.socket.onClose((e) => this._onClose.fire(e)));\n\t}\n\n\tpublic override dispose(): void {\n\t\tif (this._flowManager.isProcessingWriteQueue()) {\n\t\t\t// Wait for any outstanding writes to finish before disposing\n\t\t\tthis._register(this._flowManager.onDidFinishProcessingWriteQueue(() => {\n\t\t\t\tthis.dispose();\n\t\t\t}));\n\t\t} else {\n\t\t\tthis.socket.dispose();\n\t\t\tsuper.dispose();\n\t\t}\n\t}\n\n\tpublic onData(listener: (e: VSBuffer) => void): IDisposable {\n\t\treturn this._onData.event(listener);\n\t}\n\n\tpublic onClose(listener: (e: SocketCloseEvent) => void): IDisposable {\n\t\treturn this._onClose.event(listener);\n\t}\n\n\tpublic onEnd(listener: () => void): IDisposable {\n\t\treturn this.socket.onEnd(listener);\n\t}\n\n\tpublic write(buffer: VSBuffer): void {\n\t\tthis._flowManager.writeMessage(buffer);\n\t}\n\n\tprivate _write(buffer: VSBuffer, compressed: boolean): void {\n\t\tif (this._isEnded) {\n\t\t\t// Avoid ERR_STREAM_WRITE_AFTER_END\n\t\t\treturn;\n\t\t}\n\n\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.WebSocketNodeSocketWrite, buffer);\n\t\tlet headerLen = Constants.MinHeaderByteSize;\n\t\tif (buffer.byteLength < 126) {\n\t\t\theaderLen += 0;\n\t\t} else if (buffer.byteLength < 2 ** 16) {\n\t\t\theaderLen += 2;\n\t\t} else {\n\t\t\theaderLen += 8;\n\t\t}\n\t\tconst header = VSBuffer.alloc(headerLen);\n\n\t\tif (compressed) {\n\t\t\t// The RSV1 bit indicates a compressed frame\n\t\t\theader.writeUInt8(0b11000010, 0);\n\t\t} else {\n\t\t\theader.writeUInt8(0b10000010, 0);\n\t\t}\n\t\tif (buffer.byteLength < 126) {\n\t\t\theader.writeUInt8(buffer.byteLength, 1);\n\t\t} else if (buffer.byteLength < 2 ** 16) {\n\t\t\theader.writeUInt8(126, 1);\n\t\t\tlet offset = 1;\n\t\t\theader.writeUInt8((buffer.byteLength >>> 8) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 0) & 0b11111111, ++offset);\n\t\t} else {\n\t\t\theader.writeUInt8(127, 1);\n\t\t\tlet offset = 1;\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 24) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 16) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 8) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 0) & 0b11111111, ++offset);\n\t\t}\n\n\t\tthis.socket.write(VSBuffer.concat([header, buffer]));\n\t}\n\n\tpublic end(): void {\n\t\tthis._isEnded = true;\n\t\tthis.socket.end();\n\t}\n\n\tprivate _acceptChunk(data: VSBuffer): void {\n\t\tif (data.byteLength === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._incomingData.acceptChunk(data);\n\n\t\twhile (this._incomingData.byteLength >= this._state.readLen) {\n\n\t\t\tif (this._state.state === ReadState.PeekHeader) {\n\t\t\t\t// peek to see if we can read the entire header\n\t\t\t\tconst peekHeader = this._incomingData.peek(this._state.readLen);\n\t\t\t\tconst firstByte = peekHeader.readUInt8(0);\n\t\t\t\tconst finBit = (firstByte & 0b10000000) >>> 7;\n\t\t\t\tconst rsv1Bit = (firstByte & 0b01000000) >>> 6;\n\t\t\t\tconst secondByte = peekHeader.readUInt8(1);\n\t\t\t\tconst hasMask = (secondByte & 0b10000000) >>> 7;\n\t\t\t\tconst len = (secondByte & 0b01111111);\n\n\t\t\t\tthis._state.state = ReadState.ReadHeader;\n\t\t\t\tthis._state.readLen = Constants.MinHeaderByteSize + (hasMask ? 4 : 0) + (len === 126 ? 2 : 0) + (len === 127 ? 8 : 0);\n\t\t\t\tthis._state.fin = finBit;\n\t\t\t\tif (this._state.firstFrameOfMessage) {\n\t\t\t\t\t// if the frame is compressed, the RSV1 bit is set only for the first frame of the message\n\t\t\t\t\tthis._state.compressed = Boolean(rsv1Bit);\n\t\t\t\t}\n\t\t\t\tthis._state.firstFrameOfMessage = Boolean(finBit);\n\t\t\t\tthis._state.mask = 0;\n\n\t\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.WebSocketNodeSocketPeekedHeader, { headerSize: this._state.readLen, compressed: this._state.compressed, fin: this._state.fin });\n\n\t\t\t} else if (this._state.state === ReadState.ReadHeader) {\n\t\t\t\t// read entire header\n\t\t\t\tconst header = this._incomingData.read(this._state.readLen);\n\t\t\t\tconst secondByte = header.readUInt8(1);\n\t\t\t\tconst hasMask = (secondByte & 0b10000000) >>> 7;\n\t\t\t\tlet len = (secondByte & 0b01111111);\n\n\t\t\t\tlet offset = 1;\n\t\t\t\tif (len === 126) {\n\t\t\t\t\tlen = (\n\t\t\t\t\t\theader.readUInt8(++offset) * 2 ** 8\n\t\t\t\t\t\t+ header.readUInt8(++offset)\n\t\t\t\t\t);\n\t\t\t\t} else if (len === 127) {\n\t\t\t\t\tlen = (\n\t\t\t\t\t\theader.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 24\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 16\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 8\n\t\t\t\t\t\t+ header.readUInt8(++offset)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tlet mask = 0;\n\t\t\t\tif (hasMask) {\n\t\t\t\t\tmask = (\n\t\t\t\t\t\theader.readUInt8(++offset) * 2 ** 24\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 16\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 8\n\t\t\t\t\t\t+ header.readUInt8(++offset)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tthis._state.state = ReadState.ReadBody;\n\t\t\t\tthis._state.readLen = len;\n\t\t\t\tthis._state.mask = mask;\n\n\t\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.WebSocketNodeSocketPeekedHeader, { bodySize: this._state.readLen, compressed: this._state.compressed, fin: this._state.fin, mask: this._state.mask });\n\n\t\t\t} else if (this._state.state === ReadState.ReadBody) {\n\t\t\t\t// read body\n\n\t\t\t\tconst body = this._incomingData.read(this._state.readLen);\n\t\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.WebSocketNodeSocketReadData, body);\n\n\t\t\t\tunmask(body, this._state.mask);\n\t\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.WebSocketNodeSocketUnmaskedData, body);\n\n\t\t\t\tthis._state.state = ReadState.PeekHeader;\n\t\t\t\tthis._state.readLen = Constants.MinHeaderByteSize;\n\t\t\t\tthis._state.mask = 0;\n\n\t\t\t\tthis._flowManager.acceptFrame(body, this._state.compressed, !!this._state.fin);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async drain(): Promise<void> {\n\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.WebSocketNodeSocketDrainBegin);\n\t\tif (this._flowManager.isProcessingWriteQueue()) {\n\t\t\tawait Event.toPromise(this._flowManager.onDidFinishProcessingWriteQueue);\n\t\t}\n\t\tawait this.socket.drain();\n\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.WebSocketNodeSocketDrainEnd);\n\t}\n}\n\nclass WebSocketFlowManager extends Disposable {\n\n\tprivate readonly _onError = this._register(new Emitter<Error>());\n\tpublic readonly onError = this._onError.event;\n\n\tprivate readonly _zlibInflateStream: ZlibInflateStream | null;\n\tprivate readonly _zlibDeflateStream: ZlibDeflateStream | null;\n\tprivate readonly _writeQueue: VSBuffer[] = [];\n\tprivate readonly _readQueue: { data: VSBuffer, isCompressed: boolean, isLastFrameOfMessage: boolean }[] = [];\n\n\tprivate readonly _onDidFinishProcessingWriteQueue = this._register(new Emitter<void>());\n\tpublic readonly onDidFinishProcessingWriteQueue = this._onDidFinishProcessingWriteQueue.event;\n\n\tpublic get permessageDeflate(): boolean {\n\t\treturn Boolean(this._zlibInflateStream && this._zlibDeflateStream);\n\t}\n\n\tpublic get recordedInflateBytes(): VSBuffer {\n\t\tif (this._zlibInflateStream) {\n\t\t\treturn this._zlibInflateStream.recordedInflateBytes;\n\t\t}\n\t\treturn VSBuffer.alloc(0);\n\t}\n\n\tconstructor(\n\t\tprivate readonly _tracer: ISocketTracer,\n\t\tpermessageDeflate: boolean,\n\t\tinflateBytes: VSBuffer | null,\n\t\trecordInflateBytes: boolean,\n\t\tprivate readonly _onData: Emitter<VSBuffer>,\n\t\tprivate readonly _writeFn: (data: VSBuffer, compressed: boolean) => void\n\t) {\n\t\tsuper();\n\t\tif (permessageDeflate) {\n\t\t\t// See https://tools.ietf.org/html/rfc7692#page-16\n\t\t\t// To simplify our logic, we don't negotiate the window size\n\t\t\t// and simply dedicate (2^15) / 32kb per web socket\n\t\t\tthis._zlibInflateStream = this._register(new ZlibInflateStream(this._tracer, recordInflateBytes, inflateBytes, { windowBits: 15 }));\n\t\t\tthis._zlibDeflateStream = this._register(new ZlibDeflateStream(this._tracer, { windowBits: 15 }));\n\t\t\tthis._register(this._zlibInflateStream.onError((err) => this._onError.fire(err)));\n\t\t\tthis._register(this._zlibDeflateStream.onError((err) => this._onError.fire(err)));\n\t\t} else {\n\t\t\tthis._zlibInflateStream = null;\n\t\t\tthis._zlibDeflateStream = null;\n\t\t}\n\t}\n\n\tpublic writeMessage(message: VSBuffer): void {\n\t\tthis._writeQueue.push(message);\n\t\tthis._processWriteQueue();\n\t}\n\n\tprivate _isProcessingWriteQueue = false;\n\tprivate async _processWriteQueue(): Promise<void> {\n\t\tif (this._isProcessingWriteQueue) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isProcessingWriteQueue = true;\n\t\twhile (this._writeQueue.length > 0) {\n\t\t\tconst message = this._writeQueue.shift()!;\n\t\t\tif (this._zlibDeflateStream) {\n\t\t\t\tconst data = await this._deflateMessage(this._zlibDeflateStream, message);\n\t\t\t\tthis._writeFn(data, true);\n\t\t\t} else {\n\t\t\t\tthis._writeFn(message, false);\n\t\t\t}\n\t\t}\n\t\tthis._isProcessingWriteQueue = false;\n\t\tthis._onDidFinishProcessingWriteQueue.fire();\n\t}\n\n\tpublic isProcessingWriteQueue(): boolean {\n\t\treturn (this._isProcessingWriteQueue);\n\t}\n\n\t/**\n\t * Subsequent calls should wait for the previous `_deflateBuffer` call to complete.\n\t */\n\tprivate _deflateMessage(zlibDeflateStream: ZlibDeflateStream, buffer: VSBuffer): Promise<VSBuffer> {\n\t\treturn new Promise<VSBuffer>((resolve, reject) => {\n\t\t\tzlibDeflateStream.write(buffer);\n\t\t\tzlibDeflateStream.flush(data => resolve(data));\n\t\t});\n\t}\n\n\tpublic acceptFrame(data: VSBuffer, isCompressed: boolean, isLastFrameOfMessage: boolean): void {\n\t\tthis._readQueue.push({ data, isCompressed, isLastFrameOfMessage });\n\t\tthis._processReadQueue();\n\t}\n\n\tprivate _isProcessingReadQueue = false;\n\tprivate async _processReadQueue(): Promise<void> {\n\t\tif (this._isProcessingReadQueue) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isProcessingReadQueue = true;\n\t\twhile (this._readQueue.length > 0) {\n\t\t\tconst frameInfo = this._readQueue.shift()!;\n\t\t\tif (this._zlibInflateStream && frameInfo.isCompressed) {\n\t\t\t\t// See https://datatracker.ietf.org/doc/html/rfc7692#section-9.2\n\t\t\t\t// Even if permessageDeflate is negotiated, it is possible\n\t\t\t\t// that the other side might decide to send uncompressed messages\n\t\t\t\t// So only decompress messages that have the RSV 1 bit set\n\t\t\t\tconst data = await this._inflateFrame(this._zlibInflateStream, frameInfo.data, frameInfo.isLastFrameOfMessage);\n\t\t\t\tthis._onData.fire(data);\n\t\t\t} else {\n\t\t\t\tthis._onData.fire(frameInfo.data);\n\t\t\t}\n\t\t}\n\t\tthis._isProcessingReadQueue = false;\n\t}\n\n\t/**\n\t * Subsequent calls should wait for the previous `transformRead` call to complete.\n\t */\n\tprivate _inflateFrame(zlibInflateStream: ZlibInflateStream, buffer: VSBuffer, isLastFrameOfMessage: boolean): Promise<VSBuffer> {\n\t\treturn new Promise<VSBuffer>((resolve, reject) => {\n\t\t\t// See https://tools.ietf.org/html/rfc7692#section-7.2.2\n\t\t\tzlibInflateStream.write(buffer);\n\t\t\tif (isLastFrameOfMessage) {\n\t\t\t\tzlibInflateStream.write(VSBuffer.fromByteArray([0x00, 0x00, 0xff, 0xff]));\n\t\t\t}\n\t\t\tzlibInflateStream.flush(data => resolve(data));\n\t\t});\n\t}\n}\n\nclass ZlibInflateStream extends Disposable {\n\n\tprivate readonly _onError = this._register(new Emitter<Error>());\n\tpublic readonly onError = this._onError.event;\n\n\tprivate readonly _zlibInflate: zlib.InflateRaw;\n\tprivate readonly _recordedInflateBytes: VSBuffer[] = [];\n\tprivate readonly _pendingInflateData: VSBuffer[] = [];\n\n\tpublic get recordedInflateBytes(): VSBuffer {\n\t\tif (this._recordInflateBytes) {\n\t\t\treturn VSBuffer.concat(this._recordedInflateBytes);\n\t\t}\n\t\treturn VSBuffer.alloc(0);\n\t}\n\n\tconstructor(\n\t\tprivate readonly _tracer: ISocketTracer,\n\t\tprivate readonly _recordInflateBytes: boolean,\n\t\tinflateBytes: VSBuffer | null,\n\t\toptions: zlib.ZlibOptions\n\t) {\n\t\tsuper();\n\t\tthis._zlibInflate = zlib.createInflateRaw(options);\n\t\tthis._zlibInflate.on('error', (err) => {\n\t\t\tthis._tracer.traceSocketEvent(SocketDiagnosticsEventType.zlibInflateError, { message: err?.message, code: (<any>err)?.code });\n\t\t\tthis._onError.fire(err);\n\t\t});\n\t\tthis._zlibInflate.on('data', (data: Buffer) => {\n\t\t\tthis._tracer.traceSocketEvent(SocketDiagnosticsEventType.zlibInflateData, data);\n\t\t\tthis._pendingInflateData.push(VSBuffer.wrap(data));\n\t\t});\n\t\tif (inflateBytes) {\n\t\t\tthis._tracer.traceSocketEvent(SocketDiagnosticsEventType.zlibInflateInitialWrite, inflateBytes.buffer);\n\t\t\tthis._zlibInflate.write(inflateBytes.buffer);\n\t\t\tthis._zlibInflate.flush(() => {\n\t\t\t\tthis._tracer.traceSocketEvent(SocketDiagnosticsEventType.zlibInflateInitialFlushFired);\n\t\t\t\tthis._pendingInflateData.length = 0;\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic write(buffer: VSBuffer): void {\n\t\tif (this._recordInflateBytes) {\n\t\t\tthis._recordedInflateBytes.push(buffer.clone());\n\t\t}\n\t\tthis._tracer.traceSocketEvent(SocketDiagnosticsEventType.zlibInflateWrite, buffer);\n\t\tthis._zlibInflate.write(buffer.buffer);\n\t}\n\n\tpublic flush(callback: (data: VSBuffer) => void): void {\n\t\tthis._zlibInflate.flush(() => {\n\t\t\tthis._tracer.traceSocketEvent(SocketDiagnosticsEventType.zlibInflateFlushFired);\n\t\t\tconst data = VSBuffer.concat(this._pendingInflateData);\n\t\t\tthis._pendingInflateData.length = 0;\n\t\t\tcallback(data);\n\t\t});\n\t}\n}\n\nclass ZlibDeflateStream extends Disposable {\n\n\tprivate readonly _onError = this._register(new Emitter<Error>());\n\tpublic readonly onError = this._onError.event;\n\n\tprivate readonly _zlibDeflate: zlib.DeflateRaw;\n\tprivate readonly _pendingDeflateData: VSBuffer[] = [];\n\n\tconstructor(\n\t\tprivate readonly _tracer: ISocketTracer,\n\t\toptions: zlib.ZlibOptions\n\t) {\n\t\tsuper();\n\n\t\tthis._zlibDeflate = zlib.createDeflateRaw({\n\t\t\twindowBits: 15\n\t\t});\n\t\tthis._zlibDeflate.on('error', (err) => {\n\t\t\tthis._tracer.traceSocketEvent(SocketDiagnosticsEventType.zlibDeflateError, { message: err?.message, code: (<any>err)?.code });\n\t\t\tthis._onError.fire(err);\n\t\t});\n\t\tthis._zlibDeflate.on('data', (data: Buffer) => {\n\t\t\tthis._tracer.traceSocketEvent(SocketDiagnosticsEventType.zlibDeflateData, data);\n\t\t\tthis._pendingDeflateData.push(VSBuffer.wrap(data));\n\t\t});\n\t}\n\n\tpublic write(buffer: VSBuffer): void {\n\t\tthis._tracer.traceSocketEvent(SocketDiagnosticsEventType.zlibDeflateWrite, buffer.buffer);\n\t\tthis._zlibDeflate.write(<Buffer>buffer.buffer);\n\t}\n\n\tpublic flush(callback: (data: VSBuffer) => void): void {\n\t\t// See https://zlib.net/manual.html#Constants\n\t\tthis._zlibDeflate.flush(/*Z_SYNC_FLUSH*/2, () => {\n\t\t\tthis._tracer.traceSocketEvent(SocketDiagnosticsEventType.zlibDeflateFlushFired);\n\n\t\t\tlet data = VSBuffer.concat(this._pendingDeflateData);\n\t\t\tthis._pendingDeflateData.length = 0;\n\n\t\t\t// See https://tools.ietf.org/html/rfc7692#section-7.2.1\n\t\t\tdata = data.slice(0, data.byteLength - 4);\n\n\t\t\tcallback(data);\n\t\t});\n\t}\n}\n\nfunction unmask(buffer: VSBuffer, mask: number): void {\n\tif (mask === 0) {\n\t\treturn;\n\t}\n\tlet cnt = buffer.byteLength >>> 2;\n\tfor (let i = 0; i < cnt; i++) {\n\t\tconst v = buffer.readUInt32BE(i * 4);\n\t\tbuffer.writeUInt32BE(v ^ mask, i * 4);\n\t}\n\tlet offset = cnt * 4;\n\tlet bytesLeft = buffer.byteLength - offset;\n\tconst m3 = (mask >>> 24) & 0b11111111;\n\tconst m2 = (mask >>> 16) & 0b11111111;\n\tconst m1 = (mask >>> 8) & 0b11111111;\n\tif (bytesLeft >= 1) {\n\t\tbuffer.writeUInt8(buffer.readUInt8(offset) ^ m3, offset);\n\t}\n\tif (bytesLeft >= 2) {\n\t\tbuffer.writeUInt8(buffer.readUInt8(offset + 1) ^ m2, offset + 1);\n\t}\n\tif (bytesLeft >= 3) {\n\t\tbuffer.writeUInt8(buffer.readUInt8(offset + 2) ^ m1, offset + 2);\n\t}\n}\n\n// Read this before there's any chance it is overwritten\n// Related to https://github.com/microsoft/vscode/issues/30624\nexport const XDG_RUNTIME_DIR = <string | undefined>process.env['XDG_RUNTIME_DIR'];\n\nconst safeIpcPathLengths: { [platform: number]: number } = {\n\t[Platform.Linux]: 107,\n\t[Platform.Mac]: 103\n};\n\nexport function createRandomIPCHandle(): string {\n\tconst randomSuffix = generateUuid();\n\n\t// Windows: use named pipe\n\tif (process.platform === 'win32') {\n\t\treturn `\\\\\\\\.\\\\pipe\\\\vscode-ipc-${randomSuffix}-sock`;\n\t}\n\n\t// Mac/Unix: use socket file and prefer\n\t// XDG_RUNTIME_DIR over tmpDir\n\tlet result: string;\n\tif (XDG_RUNTIME_DIR) {\n\t\tresult = join(XDG_RUNTIME_DIR, `vscode-ipc-${randomSuffix}.sock`);\n\t} else {\n\t\tresult = join(tmpdir(), `vscode-ipc-${randomSuffix}.sock`);\n\t}\n\n\t// Validate length\n\tvalidateIPCHandleLength(result);\n\n\treturn result;\n}\n\nexport function createStaticIPCHandle(directoryPath: string, type: string, version: string): string {\n\tconst scope = createHash('md5').update(directoryPath).digest('hex');\n\n\t// Windows: use named pipe\n\tif (process.platform === 'win32') {\n\t\treturn `\\\\\\\\.\\\\pipe\\\\${scope}-${version}-${type}-sock`;\n\t}\n\n\t// Mac/Unix: use socket file and prefer\n\t// XDG_RUNTIME_DIR over user data path\n\t// unless portable\n\tlet result: string;\n\tif (XDG_RUNTIME_DIR && !process.env['VSCODE_PORTABLE']) {\n\t\tresult = join(XDG_RUNTIME_DIR, `vscode-${scope.substr(0, 8)}-${version}-${type}.sock`);\n\t} else {\n\t\tresult = join(directoryPath, `${version}-${type}.sock`);\n\t}\n\n\t// Validate length\n\tvalidateIPCHandleLength(result);\n\n\treturn result;\n}\n\nfunction validateIPCHandleLength(handle: string): void {\n\tconst limit = safeIpcPathLengths[platform];\n\tif (typeof limit === 'number' && handle.length >= limit) {\n\t\t// https://nodejs.org/api/net.html#net_identifying_paths_for_ipc_connections\n\t\tconsole.warn(`WARNING: IPC handle \"${handle}\" is longer than ${limit} chars, try a shorter --user-data-dir`);\n\t}\n}\n\nexport class Server extends IPCServer {\n\n\tprivate static toClientConnectionEvent(server: NetServer): Event<ClientConnectionEvent> {\n\t\tconst onConnection = Event.fromNodeEventEmitter<Socket>(server, 'connection');\n\n\t\treturn Event.map(onConnection, socket => ({\n\t\t\tprotocol: new Protocol(new NodeSocket(socket, 'ipc-server-connection')),\n\t\t\tonDidClientDisconnect: Event.once(Event.fromNodeEventEmitter<void>(socket, 'close'))\n\t\t}));\n\t}\n\n\tprivate server: NetServer | null;\n\n\tconstructor(server: NetServer) {\n\t\tsuper(Server.toClientConnectionEvent(server));\n\t\tthis.server = server;\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tif (this.server) {\n\t\t\tthis.server.close();\n\t\t\tthis.server = null;\n\t\t}\n\t}\n}\n\nexport function serve(port: number): Promise<Server>;\nexport function serve(namedPipe: string): Promise<Server>;\nexport function serve(hook: any): Promise<Server> {\n\treturn new Promise<Server>((c, e) => {\n\t\tconst server = createServer();\n\n\t\tserver.on('error', e);\n\t\tserver.listen(hook, () => {\n\t\t\tserver.removeListener('error', e);\n\t\t\tc(new Server(server));\n\t\t});\n\t});\n}\n\nexport function connect(options: { host: string, port: number }, clientId: string): Promise<Client>;\nexport function connect(port: number, clientId: string): Promise<Client>;\nexport function connect(namedPipe: string, clientId: string): Promise<Client>;\nexport function connect(hook: any, clientId: string): Promise<Client> {\n\treturn new Promise<Client>((c, e) => {\n\t\tconst socket = createConnection(hook, () => {\n\t\t\tsocket.removeListener('error', e);\n\t\t\tc(Client.fromSocket(new NodeSocket(socket, `ipc-client${clientId}`), clientId));\n\t\t});\n\n\t\tsocket.once('error', e);\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as net from 'net';\nimport { NodeSocket } from 'vs/base/parts/ipc/node/ipc.net';\nimport { IConnectCallback, ISocketFactory } from 'vs/platform/remote/common/remoteAgentConnection';\n\nexport const nodeSocketFactory = new class implements ISocketFactory {\n\tconnect(host: string, port: number, query: string, debugLabel: string, callback: IConnectCallback): void {\n\t\tconst errorListener = (err: any) => callback(err, undefined);\n\n\t\tconst socket = net.createConnection({ host: host, port: port }, () => {\n\t\t\tsocket.removeListener('error', errorListener);\n\n\t\t\t// https://tools.ietf.org/html/rfc6455#section-4\n\t\t\tconst buffer = Buffer.alloc(16);\n\t\t\tfor (let i = 0; i < 16; i++) {\n\t\t\t\tbuffer[i] = Math.round(Math.random() * 256);\n\t\t\t}\n\t\t\tconst nonce = buffer.toString('base64');\n\n\t\t\tconst headers = [\n\t\t\t\t`GET ws://${/:/.test(host) ? `[${host}]` : host}:${port}/?${query}&skipWebSocketFrames=true HTTP/1.1`,\n\t\t\t\t`Connection: Upgrade`,\n\t\t\t\t`Upgrade: websocket`,\n\t\t\t\t`Sec-WebSocket-Key: ${nonce}`\n\t\t\t];\n\t\t\tsocket.write(headers.join('\\r\\n') + '\\r\\n\\r\\n');\n\n\t\t\tconst onData = (data: Buffer) => {\n\t\t\t\tconst strData = data.toString();\n\t\t\t\tif (strData.indexOf('\\r\\n\\r\\n') >= 0) {\n\t\t\t\t\t// headers received OK\n\t\t\t\t\tsocket.off('data', onData);\n\t\t\t\t\tcallback(undefined, new NodeSocket(socket, debugLabel));\n\t\t\t\t}\n\t\t\t};\n\t\t\tsocket.on('data', onData);\n\t\t});\n\t\t// Disable Nagle's algorithm.\n\t\tsocket.setNoDelay(true);\n\t\tsocket.once('error', errorListener);\n\t}\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as net from 'net';\nimport { BROWSER_RESTRICTED_PORTS, findFreePortFaster } from 'vs/base/node/ports';\nimport { NodeSocket } from 'vs/base/parts/ipc/node/ipc.net';\nimport { nodeSocketFactory } from 'vs/platform/remote/node/nodeSocketFactory';\n\nimport { Barrier } from 'vs/base/common/async';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { connectRemoteAgentTunnel, IAddressProvider, IConnectionOptions, ISocketFactory } from 'vs/platform/remote/common/remoteAgentConnection';\nimport { AbstractTunnelService, isAllInterfaces, ISharedTunnelsService as ISharedTunnelsService, isLocalhost, ITunnelService, RemoteTunnel, TunnelPrivacyId } from 'vs/platform/remote/common/tunnel';\nimport { ISignService } from 'vs/platform/sign/common/sign';\n\nasync function createRemoteTunnel(options: IConnectionOptions, defaultTunnelHost: string, tunnelRemoteHost: string, tunnelRemotePort: number, tunnelLocalPort?: number): Promise<RemoteTunnel> {\n\tlet readyTunnel: NodeRemoteTunnel | undefined;\n\tfor (let attempts = 3; attempts; attempts--) {\n\t\tif (readyTunnel) {\n\t\t\treadyTunnel.dispose();\n\t\t}\n\t\tconst tunnel = new NodeRemoteTunnel(options, defaultTunnelHost, tunnelRemoteHost, tunnelRemotePort, tunnelLocalPort);\n\t\treadyTunnel = await tunnel.waitForReady();\n\t\tif ((tunnelLocalPort && BROWSER_RESTRICTED_PORTS[tunnelLocalPort]) || !BROWSER_RESTRICTED_PORTS[readyTunnel.tunnelLocalPort]) {\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn readyTunnel!;\n}\n\nclass NodeRemoteTunnel extends Disposable implements RemoteTunnel {\n\n\tpublic readonly tunnelRemotePort: number;\n\tpublic tunnelLocalPort!: number;\n\tpublic tunnelRemoteHost: string;\n\tpublic localAddress!: string;\n\tpublic readonly privacy = TunnelPrivacyId.Private;\n\n\tprivate readonly _options: IConnectionOptions;\n\tprivate readonly _server: net.Server;\n\tprivate readonly _barrier: Barrier;\n\n\tprivate readonly _listeningListener: () => void;\n\tprivate readonly _connectionListener: (socket: net.Socket) => void;\n\tprivate readonly _errorListener: () => void;\n\n\tprivate readonly _socketsDispose: Map<string, () => void> = new Map();\n\n\tconstructor(options: IConnectionOptions, private readonly defaultTunnelHost: string, tunnelRemoteHost: string, tunnelRemotePort: number, private readonly suggestedLocalPort?: number) {\n\t\tsuper();\n\t\tthis._options = options;\n\t\tthis._server = net.createServer();\n\t\tthis._barrier = new Barrier();\n\n\t\tthis._listeningListener = () => this._barrier.open();\n\t\tthis._server.on('listening', this._listeningListener);\n\n\t\tthis._connectionListener = (socket) => this._onConnection(socket);\n\t\tthis._server.on('connection', this._connectionListener);\n\n\t\t// If there is no error listener and there is an error it will crash the whole window\n\t\tthis._errorListener = () => { };\n\t\tthis._server.on('error', this._errorListener);\n\n\t\tthis.tunnelRemotePort = tunnelRemotePort;\n\t\tthis.tunnelRemoteHost = tunnelRemoteHost;\n\t}\n\n\tpublic override async dispose(): Promise<void> {\n\t\tsuper.dispose();\n\t\tthis._server.removeListener('listening', this._listeningListener);\n\t\tthis._server.removeListener('connection', this._connectionListener);\n\t\tthis._server.removeListener('error', this._errorListener);\n\t\tthis._server.close();\n\t\tconst disposers = Array.from(this._socketsDispose.values());\n\t\tdisposers.forEach(disposer => {\n\t\t\tdisposer();\n\t\t});\n\t}\n\n\tpublic async waitForReady(): Promise<this> {\n\t\t// try to get the same port number as the remote port number...\n\t\tlet localPort = await findFreePortFaster(this.suggestedLocalPort ?? this.tunnelRemotePort, 2, 1000);\n\n\t\t// if that fails, the method above returns 0, which works out fine below...\n\t\tlet address: string | net.AddressInfo | null = null;\n\t\tthis._server.listen(localPort, this.defaultTunnelHost);\n\t\tawait this._barrier.wait();\n\t\taddress = <net.AddressInfo>this._server.address();\n\n\t\t// It is possible for findFreePortFaster to return a port that there is already a server listening on. This causes the previous listen call to error out.\n\t\tif (!address) {\n\t\t\tlocalPort = 0;\n\t\t\tthis._server.listen(localPort, this.defaultTunnelHost);\n\t\t\tawait this._barrier.wait();\n\t\t\taddress = <net.AddressInfo>this._server.address();\n\t\t}\n\n\t\tthis.tunnelLocalPort = address.port;\n\t\tthis.localAddress = `${this.tunnelRemoteHost === '127.0.0.1' ? '127.0.0.1' : 'localhost'}:${address.port}`;\n\t\treturn this;\n\t}\n\n\tprivate async _onConnection(localSocket: net.Socket): Promise<void> {\n\t\t// pause reading on the socket until we have a chance to forward its data\n\t\tlocalSocket.pause();\n\n\t\tconst tunnelRemoteHost = (isLocalhost(this.tunnelRemoteHost) || isAllInterfaces(this.tunnelRemoteHost)) ? 'localhost' : this.tunnelRemoteHost;\n\t\tconst protocol = await connectRemoteAgentTunnel(this._options, tunnelRemoteHost, this.tunnelRemotePort);\n\t\tconst remoteSocket = (<NodeSocket>protocol.getSocket()).socket;\n\t\tconst dataChunk = protocol.readEntireBuffer();\n\t\tprotocol.dispose();\n\n\t\tif (dataChunk.byteLength > 0) {\n\t\t\tlocalSocket.write(dataChunk.buffer);\n\t\t}\n\n\t\tlocalSocket.on('end', () => {\n\t\t\tthis._socketsDispose.delete(localSocket.localAddress);\n\t\t\tremoteSocket.end();\n\t\t});\n\t\tlocalSocket.on('close', () => remoteSocket.end());\n\t\tlocalSocket.on('error', () => {\n\t\t\tthis._socketsDispose.delete(localSocket.localAddress);\n\t\t\tremoteSocket.destroy();\n\t\t});\n\n\t\tremoteSocket.on('end', () => localSocket.end());\n\t\tremoteSocket.on('close', () => localSocket.end());\n\t\tremoteSocket.on('error', () => {\n\t\t\tlocalSocket.destroy();\n\t\t});\n\n\t\tlocalSocket.pipe(remoteSocket);\n\t\tremoteSocket.pipe(localSocket);\n\t\tthis._socketsDispose.set(localSocket.localAddress, () => {\n\t\t\t// Need to end instead of unpipe, otherwise whatever is connected locally could end up \"stuck\" with whatever state it had until manually exited.\n\t\t\tlocalSocket.end();\n\t\t\tremoteSocket.end();\n\t\t});\n\t}\n}\n\nexport class BaseTunnelService extends AbstractTunnelService {\n\tpublic constructor(\n\t\tprivate readonly socketFactory: ISocketFactory,\n\t\t@ILogService logService: ILogService,\n\t\t@ISignService private readonly signService: ISignService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) {\n\t\tsuper(logService);\n\t}\n\n\tprivate get defaultTunnelHost(): string {\n\t\tconst settingValue = this.configurationService.getValue('remote.localPortHost');\n\t\treturn (!settingValue || settingValue === 'localhost') ? '127.0.0.1' : '0.0.0.0';\n\t}\n\n\tprotected retainOrCreateTunnel(addressProvider: IAddressProvider, remoteHost: string, remotePort: number, localPort: number | undefined, elevateIfNeeded: boolean, privacy: string, protocol?: string): Promise<RemoteTunnel | undefined> | undefined {\n\t\tconst existing = this.getTunnelFromMap(remoteHost, remotePort);\n\t\tif (existing) {\n\t\t\t++existing.refcount;\n\t\t\treturn existing.value;\n\t\t}\n\n\t\tif (this._tunnelProvider) {\n\t\t\treturn this.createWithProvider(this._tunnelProvider, remoteHost, remotePort, localPort, elevateIfNeeded, privacy, protocol);\n\t\t} else {\n\t\t\tthis.logService.trace(`ForwardedPorts: (TunnelService) Creating tunnel without provider ${remoteHost}:${remotePort} on local port ${localPort}.`);\n\t\t\tconst options: IConnectionOptions = {\n\t\t\t\tcommit: this.productService.commit,\n\t\t\t\tsocketFactory: this.socketFactory,\n\t\t\t\taddressProvider,\n\t\t\t\tsignService: this.signService,\n\t\t\t\tlogService: this.logService,\n\t\t\t\tipcLogger: null\n\t\t\t};\n\n\t\t\tconst tunnel = createRemoteTunnel(options, this.defaultTunnelHost, remoteHost, remotePort, localPort);\n\t\t\tthis.logService.trace('ForwardedPorts: (TunnelService) Tunnel created without provider.');\n\t\t\tthis.addTunnelToMap(remoteHost, remotePort, tunnel);\n\t\t\treturn tunnel;\n\t\t}\n\t}\n}\n\nexport class TunnelService extends BaseTunnelService {\n\tpublic constructor(\n\t\t@ILogService logService: ILogService,\n\t\t@ISignService signService: ISignService,\n\t\t@IProductService productService: IProductService,\n\t\t@IConfigurationService configurationService: IConfigurationService\n\t) {\n\t\tsuper(nodeSocketFactory, logService, signService, productService, configurationService);\n\t}\n}\n\nexport class SharedTunnelsService extends Disposable implements ISharedTunnelsService {\n\tdeclare readonly _serviceBrand: undefined;\n\tprivate readonly _tunnelServices: Map<string, ITunnelService> = new Map();\n\n\tpublic constructor(\n\t\t@ILogService protected readonly logService: ILogService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@ISignService private readonly signService: ISignService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t) {\n\t\tsuper();\n\t}\n\n\tasync openTunnel(authority: string, addressProvider: IAddressProvider | undefined, remoteHost: string | undefined, remotePort: number, localPort?: number, elevateIfNeeded?: boolean, privacy?: string, protocol?: string): Promise<RemoteTunnel | undefined> {\n\t\tthis.logService.trace(`ForwardedPorts: (SharedTunnelService) openTunnel request for ${remoteHost}:${remotePort} on local port ${localPort}.`);\n\t\tif (!this._tunnelServices.has(authority)) {\n\t\t\tconst tunnelService = new TunnelService(this.logService, this.signService, this.productService, this.configurationService);\n\t\t\tthis._register(tunnelService);\n\t\t\tthis._tunnelServices.set(authority, tunnelService);\n\t\t\ttunnelService.onTunnelClosed(async () => {\n\t\t\t\tif ((await tunnelService.tunnels).length === 0) {\n\t\t\t\t\ttunnelService.dispose();\n\t\t\t\t\tthis._tunnelServices.delete(authority);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn this._tunnelServices.get(authority)!.openTunnel(addressProvider, remoteHost, remotePort, localPort, elevateIfNeeded, privacy, protocol);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ipcRenderer } from 'electron';\nimport { hostname, release } from 'os';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { onUnexpectedError, setUnexpectedErrorHandler } from 'vs/base/common/errors';\nimport { combinedDisposable, Disposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport { joinPath } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { ProxyChannel, StaticRouter } from 'vs/base/parts/ipc/common/ipc';\nimport { Server as MessagePortServer } from 'vs/base/parts/ipc/electron-browser/ipc.mp';\nimport { CodeCacheCleaner } from 'vs/code/electron-browser/sharedProcess/contrib/codeCacheCleaner';\nimport { ExtensionsCleaner } from 'vs/code/electron-browser/sharedProcess/contrib/extensionsCleaner';\nimport { LanguagePackCachedDataCleaner } from 'vs/code/electron-browser/sharedProcess/contrib/languagePackCachedDataCleaner';\nimport { LocalizationsUpdater } from 'vs/code/electron-browser/sharedProcess/contrib/localizationsUpdater';\nimport { LogsDataCleaner } from 'vs/code/electron-browser/sharedProcess/contrib/logsDataCleaner';\nimport { StorageDataCleaner } from 'vs/code/electron-browser/sharedProcess/contrib/storageDataCleaner';\nimport { IChecksumService } from 'vs/platform/checksum/common/checksumService';\nimport { ChecksumService } from 'vs/platform/checksum/node/checksumService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationService } from 'vs/platform/configuration/common/configurationService';\nimport { IDiagnosticsService } from 'vs/platform/diagnostics/common/diagnostics';\nimport { DiagnosticsService } from 'vs/platform/diagnostics/node/diagnosticsService';\nimport { IDownloadService } from 'vs/platform/download/common/download';\nimport { DownloadService } from 'vs/platform/download/common/downloadService';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { NativeEnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { GlobalExtensionEnablementService } from 'vs/platform/extensionManagement/common/extensionEnablementService';\nimport { ExtensionGalleryService } from 'vs/platform/extensionManagement/common/extensionGalleryService';\nimport { IExtensionGalleryService, IExtensionManagementService, IExtensionTipsService, IGlobalExtensionEnablementService } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionManagementChannel, ExtensionTipsChannel } from 'vs/platform/extensionManagement/common/extensionManagementIpc';\nimport { ExtensionTipsService } from 'vs/platform/extensionManagement/electron-sandbox/extensionTipsService';\nimport { ExtensionManagementService } from 'vs/platform/extensionManagement/node/extensionManagementService';\nimport { IExtensionRecommendationNotificationService } from 'vs/platform/extensionRecommendations/common/extensionRecommendations';\nimport { ExtensionRecommendationNotificationServiceChannelClient } from 'vs/platform/extensionRecommendations/electron-sandbox/extensionRecommendationsIpc';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { DiskFileSystemProvider } from 'vs/platform/files/node/diskFileSystemProvider';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { InstantiationService } from 'vs/platform/instantiation/common/instantiationService';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { MessagePortMainProcessService } from 'vs/platform/ipc/electron-browser/mainProcessService';\nimport { IMainProcessService } from 'vs/platform/ipc/electron-sandbox/services';\nimport { ILocalizationsService } from 'vs/platform/localizations/common/localizations';\nimport { LocalizationsService } from 'vs/platform/localizations/node/localizations';\nimport { ConsoleLogger, ILoggerService, ILogService, MultiplexLogService } from 'vs/platform/log/common/log';\nimport { FollowerLogService, LoggerChannelClient, LogLevelChannelClient } from 'vs/platform/log/common/logIpc';\nimport { INativeHostService } from 'vs/platform/native/electron-sandbox/native';\nimport product from 'vs/platform/product/common/product';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { RequestService } from 'vs/platform/request/browser/requestService';\nimport { IRequestService } from 'vs/platform/request/common/request';\nimport { ISharedProcessConfiguration } from 'vs/platform/sharedProcess/node/sharedProcess';\nimport { IStorageService } from 'vs/platform/storage/common/storage';\nimport { NativeStorageService } from 'vs/platform/storage/electron-sandbox/storageService';\nimport { resolveCommonProperties } from 'vs/platform/telemetry/common/commonProperties';\nimport { ICustomEndpointTelemetryService, ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { TelemetryAppenderChannel } from 'vs/platform/telemetry/common/telemetryIpc';\nimport { TelemetryLogAppender } from 'vs/platform/telemetry/common/telemetryLogAppender';\nimport { TelemetryService } from 'vs/platform/telemetry/common/telemetryService';\nimport { supportsTelemetry, ITelemetryAppender, NullAppender, NullTelemetryService } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { AppInsightsAppender } from 'vs/platform/telemetry/node/appInsightsAppender';\nimport { CustomEndpointTelemetryService } from 'vs/platform/telemetry/node/customEndpointTelemetryService';\nimport { LocalReconnectConstants, TerminalIpcChannels, TerminalSettingId } from 'vs/platform/terminal/common/terminal';\nimport { ILocalPtyService } from 'vs/platform/terminal/electron-sandbox/terminal';\nimport { PtyHostService } from 'vs/platform/terminal/node/ptyHostService';\nimport { ExtensionsStorageSyncService, IExtensionsStorageSyncService } from 'vs/platform/userDataSync/common/extensionsStorageSync';\nimport { IgnoredExtensionsManagementService, IIgnoredExtensionsManagementService } from 'vs/platform/userDataSync/common/ignoredExtensions';\nimport { UserDataAutoSyncEnablementService } from 'vs/platform/userDataSync/common/userDataAutoSyncService';\nimport { IUserDataAutoSyncEnablementService, IUserDataSyncBackupStoreService, IUserDataSyncLogService, IUserDataSyncResourceEnablementService, IUserDataSyncService, IUserDataSyncStoreManagementService, IUserDataSyncStoreService, IUserDataSyncUtilService, registerConfiguration as registerUserDataSyncConfiguration } from 'vs/platform/userDataSync/common/userDataSync';\nimport { IUserDataSyncAccountService, UserDataSyncAccountService } from 'vs/platform/userDataSync/common/userDataSyncAccount';\nimport { UserDataSyncBackupStoreService } from 'vs/platform/userDataSync/common/userDataSyncBackupStoreService';\nimport { UserDataAutoSyncChannel, UserDataSyncAccountServiceChannel, UserDataSyncMachinesServiceChannel, UserDataSyncStoreManagementServiceChannel, UserDataSyncUtilServiceClient } from 'vs/platform/userDataSync/common/userDataSyncIpc';\nimport { UserDataSyncLogService } from 'vs/platform/userDataSync/common/userDataSyncLog';\nimport { IUserDataSyncMachinesService, UserDataSyncMachinesService } from 'vs/platform/userDataSync/common/userDataSyncMachines';\nimport { UserDataSyncResourceEnablementService } from 'vs/platform/userDataSync/common/userDataSyncResourceEnablementService';\nimport { UserDataSyncService } from 'vs/platform/userDataSync/common/userDataSyncService';\nimport { UserDataSyncChannel } from 'vs/platform/userDataSync/common/userDataSyncServiceIpc';\nimport { UserDataSyncStoreManagementService, UserDataSyncStoreService } from 'vs/platform/userDataSync/common/userDataSyncStoreService';\nimport { UserDataAutoSyncService } from 'vs/platform/userDataSync/electron-sandbox/userDataAutoSyncService';\nimport { ActiveWindowManager } from 'vs/platform/windows/node/windowTracker';\nimport { ISignService } from 'vs/platform/sign/common/sign';\nimport { SignService } from 'vs/platform/sign/node/signService';\nimport { ISharedTunnelsService } from 'vs/platform/remote/common/tunnel';\nimport { SharedTunnelsService } from 'vs/platform/remote/node/tunnelService';\nimport { ipcSharedProcessTunnelChannelName, ISharedProcessTunnelService } from 'vs/platform/remote/common/sharedProcessTunnelService';\nimport { SharedProcessTunnelService } from 'vs/platform/remote/node/sharedProcessTunnelService';\nimport { ipcSharedProcessWorkerChannelName, ISharedProcessWorkerConfiguration, ISharedProcessWorkerService } from 'vs/platform/sharedProcess/common/sharedProcessWorkerService';\nimport { SharedProcessWorkerService } from 'vs/platform/sharedProcess/electron-browser/sharedProcessWorkerService';\nimport { IUserConfigurationFileService, UserConfigurationFileServiceId } from 'vs/platform/configuration/common/userConfigurationFileService';\nimport { AssignmentService } from 'vs/platform/assignment/common/assignmentService';\nimport { IUriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentity';\nimport { UriIdentityService } from 'vs/platform/uriIdentity/common/uriIdentityService';\n\nclass SharedProcessMain extends Disposable {\n\n\tprivate server = this._register(new MessagePortServer());\n\n\tprivate sharedProcessWorkerService: ISharedProcessWorkerService | undefined = undefined;\n\n\tconstructor(private configuration: ISharedProcessConfiguration) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// Shared process lifecycle\n\t\tconst onExit = () => this.dispose();\n\t\tprocess.once('exit', onExit);\n\t\tipcRenderer.once('vscode:electron-main->shared-process=exit', onExit);\n\n\t\t// Shared process worker lifecycle\n\t\t//\n\t\t// We dispose the listener when the shared process is\n\t\t// disposed to avoid disposing workers when the entire\n\t\t// application is shutting down anyways.\n\t\t//\n\t\tconst eventName = 'vscode:electron-main->shared-process=disposeWorker';\n\t\tconst onDisposeWorker = (event: unknown, configuration: ISharedProcessWorkerConfiguration) => this.onDisposeWorker(configuration);\n\t\tipcRenderer.on(eventName, onDisposeWorker);\n\t\tthis._register(toDisposable(() => ipcRenderer.removeListener(eventName, onDisposeWorker)));\n\t}\n\n\tprivate onDisposeWorker(configuration: ISharedProcessWorkerConfiguration): void {\n\t\tthis.sharedProcessWorkerService?.disposeWorker(configuration);\n\t}\n\n\tasync open(): Promise<void> {\n\n\t\t// Services\n\t\tconst instantiationService = await this.initServices();\n\n\t\t// Config\n\t\tregisterUserDataSyncConfiguration();\n\n\t\tinstantiationService.invokeFunction(accessor => {\n\t\t\tconst logService = accessor.get(ILogService);\n\n\t\t\t// Log info\n\t\t\tlogService.trace('sharedProcess configuration', JSON.stringify(this.configuration));\n\n\t\t\t// Channels\n\t\t\tthis.initChannels(accessor);\n\n\t\t\t// Error handler\n\t\t\tthis.registerErrorHandler(logService);\n\t\t});\n\n\t\t// Instantiate Contributions\n\t\tthis._register(combinedDisposable(\n\t\t\tinstantiationService.createInstance(CodeCacheCleaner, this.configuration.codeCachePath),\n\t\t\tinstantiationService.createInstance(LanguagePackCachedDataCleaner),\n\t\t\tinstantiationService.createInstance(StorageDataCleaner, this.configuration.backupWorkspacesPath),\n\t\t\tinstantiationService.createInstance(LogsDataCleaner),\n\t\t\tinstantiationService.createInstance(LocalizationsUpdater),\n\t\t\tinstantiationService.createInstance(ExtensionsCleaner)\n\t\t));\n\t}\n\n\tprivate async initServices(): Promise<IInstantiationService> {\n\t\tconst services = new ServiceCollection();\n\n\t\t// Product\n\t\tconst productService = { _serviceBrand: undefined, ...product };\n\t\tservices.set(IProductService, productService);\n\n\t\t// Main Process\n\t\tconst mainRouter = new StaticRouter(ctx => ctx === 'main');\n\t\tconst mainProcessService = new MessagePortMainProcessService(this.server, mainRouter);\n\t\tservices.set(IMainProcessService, mainProcessService);\n\n\t\t// Environment\n\t\tconst environmentService = new NativeEnvironmentService(this.configuration.args, productService);\n\t\tservices.set(INativeEnvironmentService, environmentService);\n\n\t\t// Logger\n\t\tconst logLevelClient = new LogLevelChannelClient(this.server.getChannel('logLevel', mainRouter));\n\t\tconst loggerService = new LoggerChannelClient(this.configuration.logLevel, logLevelClient.onDidChangeLogLevel, mainProcessService.getChannel('logger'));\n\t\tservices.set(ILoggerService, loggerService);\n\n\t\t// Log\n\t\tconst multiplexLogger = this._register(new MultiplexLogService([\n\t\t\tthis._register(new ConsoleLogger(this.configuration.logLevel)),\n\t\t\tthis._register(loggerService.createLogger(joinPath(URI.file(environmentService.logsPath), 'sharedprocess.log'), { name: 'sharedprocess' }))\n\t\t]));\n\n\t\tconst logService = this._register(new FollowerLogService(logLevelClient, multiplexLogger));\n\t\tservices.set(ILogService, logService);\n\n\t\t// Worker\n\t\tthis.sharedProcessWorkerService = new SharedProcessWorkerService(logService, productService, environmentService);\n\t\tservices.set(ISharedProcessWorkerService, this.sharedProcessWorkerService);\n\n\t\t// Files\n\t\tconst fileService = this._register(new FileService(logService));\n\t\tservices.set(IFileService, fileService);\n\n\t\tconst diskFileSystemProvider = this._register(new DiskFileSystemProvider(logService));\n\t\tfileService.registerProvider(Schemas.file, diskFileSystemProvider);\n\n\t\t// Configuration\n\t\tconst configurationService = this._register(new ConfigurationService(environmentService.settingsResource, fileService));\n\t\tservices.set(IConfigurationService, configurationService);\n\n\t\t// Storage (global access only)\n\t\tconst storageService = new NativeStorageService(undefined, mainProcessService, environmentService);\n\t\tservices.set(IStorageService, storageService);\n\t\tthis._register(toDisposable(() => storageService.flush()));\n\n\t\t// Initialize config & storage in parallel\n\t\tawait Promise.all([\n\t\t\tconfigurationService.initialize(),\n\t\t\tstorageService.initialize()\n\t\t]);\n\n\t\t// User Configuration File\n\t\tservices.set(IUserConfigurationFileService, ProxyChannel.toService<IUserConfigurationFileService>(mainProcessService.getChannel(UserConfigurationFileServiceId)));\n\n\t\t// URI Identity\n\t\tservices.set(IUriIdentityService, new UriIdentityService(fileService));\n\n\t\t// Request\n\t\tservices.set(IRequestService, new SyncDescriptor(RequestService));\n\n\t\t// Checksum\n\t\tservices.set(IChecksumService, new SyncDescriptor(ChecksumService));\n\n\t\t// Native Host\n\t\tconst nativeHostService = ProxyChannel.toService<INativeHostService>(mainProcessService.getChannel('nativeHost'), { context: this.configuration.windowId });\n\t\tservices.set(INativeHostService, nativeHostService);\n\n\t\t// Download\n\t\tservices.set(IDownloadService, new SyncDescriptor(DownloadService));\n\n\t\t// Extension recommendations\n\t\tconst activeWindowManager = this._register(new ActiveWindowManager(nativeHostService));\n\t\tconst activeWindowRouter = new StaticRouter(ctx => activeWindowManager.getActiveClientId().then(id => ctx === id));\n\t\tservices.set(IExtensionRecommendationNotificationService, new ExtensionRecommendationNotificationServiceChannelClient(this.server.getChannel('extensionRecommendationNotification', activeWindowRouter)));\n\n\t\t// Assignment Service (Experiment service w/out scorecards)\n\t\tconst assignmentService = new AssignmentService(this.configuration.machineId, configurationService, productService);\n\n\t\t// Telemetry\n\t\tlet telemetryService: ITelemetryService;\n\t\tconst appenders: ITelemetryAppender[] = [];\n\t\tif (supportsTelemetry(productService, environmentService)) {\n\t\t\tconst logAppender = new TelemetryLogAppender(loggerService, environmentService);\n\t\t\tappenders.push(logAppender);\n\t\t\tconst { appRoot, extensionsPath, installSourcePath } = environmentService;\n\n\t\t\t// Application Insights\n\t\t\tif (productService.aiConfig && productService.aiConfig.asimovKey) {\n\t\t\t\tconst testCollector = await assignmentService.getTreatment<boolean>('telemetryMigration') ?? false;\n\t\t\t\tconst insiders = productService.quality !== 'stable';\n\t\t\t\t// Insiders send to both collector and vortex if assigned.\n\t\t\t\t// Stable only send to one\n\t\t\t\tif (insiders && testCollector) {\n\t\t\t\t\tconst collectorAppender = new AppInsightsAppender('monacoworkbench', null, productService.aiConfig.asimovKey, testCollector, true);\n\t\t\t\t\tthis._register(toDisposable(() => collectorAppender.flush())); // Ensure the AI appender is disposed so that it flushes remaining data\n\t\t\t\t\tappenders.push(collectorAppender);\n\t\t\t\t}\n\t\t\t\tconst appInsightsAppender = new AppInsightsAppender('monacoworkbench', null, productService.aiConfig.asimovKey, insiders ? false : testCollector, testCollector && insiders);\n\t\t\t\tthis._register(toDisposable(() => appInsightsAppender.flush())); // Ensure the AI appender is disposed so that it flushes remaining data\n\t\t\t\tappenders.push(appInsightsAppender);\n\t\t\t}\n\n\t\t\ttelemetryService = new TelemetryService({\n\t\t\t\tappenders,\n\t\t\t\tcommonProperties: resolveCommonProperties(fileService, release(), hostname(), process.arch, productService.commit, productService.version, this.configuration.machineId, productService.msftInternalDomains, installSourcePath),\n\t\t\t\tsendErrorTelemetry: true,\n\t\t\t\tpiiPaths: [appRoot, extensionsPath]\n\t\t\t}, configurationService);\n\t\t} else {\n\t\t\ttelemetryService = NullTelemetryService;\n\t\t\tconst nullAppender = NullAppender;\n\t\t\tappenders.push(nullAppender);\n\t\t}\n\n\t\tthis.server.registerChannel('telemetryAppender', new TelemetryAppenderChannel(appenders));\n\t\tservices.set(ITelemetryService, telemetryService);\n\n\t\t// Custom Endpoint Telemetry\n\t\tconst customEndpointTelemetryService = new CustomEndpointTelemetryService(configurationService, telemetryService, loggerService, environmentService);\n\t\tservices.set(ICustomEndpointTelemetryService, customEndpointTelemetryService);\n\n\t\t// Extension Management\n\t\tservices.set(IExtensionManagementService, new SyncDescriptor(ExtensionManagementService));\n\n\t\t// Extension Gallery\n\t\tservices.set(IExtensionGalleryService, new SyncDescriptor(ExtensionGalleryService));\n\n\t\t// Extension Tips\n\t\tservices.set(IExtensionTipsService, new SyncDescriptor(ExtensionTipsService));\n\n\t\t// Localizations\n\t\tservices.set(ILocalizationsService, new SyncDescriptor(LocalizationsService));\n\n\t\t// Diagnostics\n\t\tservices.set(IDiagnosticsService, new SyncDescriptor(DiagnosticsService));\n\n\t\t// Settings Sync\n\t\tservices.set(IUserDataSyncAccountService, new SyncDescriptor(UserDataSyncAccountService));\n\t\tservices.set(IUserDataSyncLogService, new SyncDescriptor(UserDataSyncLogService));\n\t\tservices.set(IUserDataSyncUtilService, new UserDataSyncUtilServiceClient(this.server.getChannel('userDataSyncUtil', client => client.ctx !== 'main')));\n\t\tservices.set(IGlobalExtensionEnablementService, new SyncDescriptor(GlobalExtensionEnablementService));\n\t\tservices.set(IIgnoredExtensionsManagementService, new SyncDescriptor(IgnoredExtensionsManagementService));\n\t\tservices.set(IExtensionsStorageSyncService, new SyncDescriptor(ExtensionsStorageSyncService));\n\t\tservices.set(IUserDataSyncStoreManagementService, new SyncDescriptor(UserDataSyncStoreManagementService));\n\t\tservices.set(IUserDataSyncStoreService, new SyncDescriptor(UserDataSyncStoreService));\n\t\tservices.set(IUserDataSyncMachinesService, new SyncDescriptor(UserDataSyncMachinesService));\n\t\tservices.set(IUserDataSyncBackupStoreService, new SyncDescriptor(UserDataSyncBackupStoreService));\n\t\tservices.set(IUserDataAutoSyncEnablementService, new SyncDescriptor(UserDataAutoSyncEnablementService));\n\t\tservices.set(IUserDataSyncResourceEnablementService, new SyncDescriptor(UserDataSyncResourceEnablementService));\n\t\tservices.set(IUserDataSyncService, new SyncDescriptor(UserDataSyncService));\n\n\t\tconst ptyHostService = new PtyHostService({\n\t\t\tgraceTime: LocalReconnectConstants.GraceTime,\n\t\t\tshortGraceTime: LocalReconnectConstants.ShortGraceTime,\n\t\t\tscrollback: configurationService.getValue<number>(TerminalSettingId.PersistentSessionScrollback) ?? 100\n\t\t},\n\t\t\tconfigurationService,\n\t\t\tenvironmentService,\n\t\t\tlogService,\n\t\t\ttelemetryService\n\t\t);\n\t\tawait ptyHostService.initialize();\n\n\t\t// Terminal\n\t\tservices.set(ILocalPtyService, this._register(ptyHostService));\n\n\t\t// Signing\n\t\tservices.set(ISignService, new SyncDescriptor(SignService));\n\n\t\t// Tunnel\n\t\tservices.set(ISharedTunnelsService, new SyncDescriptor(SharedTunnelsService));\n\t\tservices.set(ISharedProcessTunnelService, new SyncDescriptor(SharedProcessTunnelService));\n\n\t\treturn new InstantiationService(services);\n\t}\n\n\tprivate initChannels(accessor: ServicesAccessor): void {\n\n\t\t// Extensions Management\n\t\tconst channel = new ExtensionManagementChannel(accessor.get(IExtensionManagementService), () => null);\n\t\tthis.server.registerChannel('extensions', channel);\n\n\t\t// Localizations\n\t\tconst localizationsChannel = ProxyChannel.fromService(accessor.get(ILocalizationsService));\n\t\tthis.server.registerChannel('localizations', localizationsChannel);\n\n\t\t// Diagnostics\n\t\tconst diagnosticsChannel = ProxyChannel.fromService(accessor.get(IDiagnosticsService));\n\t\tthis.server.registerChannel('diagnostics', diagnosticsChannel);\n\n\t\t// Extension Tips\n\t\tconst extensionTipsChannel = new ExtensionTipsChannel(accessor.get(IExtensionTipsService));\n\t\tthis.server.registerChannel('extensionTipsService', extensionTipsChannel);\n\n\t\t// Checksum\n\t\tconst checksumChannel = ProxyChannel.fromService(accessor.get(IChecksumService));\n\t\tthis.server.registerChannel('checksum', checksumChannel);\n\n\t\t// Settings Sync\n\t\tconst userDataSyncMachineChannel = new UserDataSyncMachinesServiceChannel(accessor.get(IUserDataSyncMachinesService));\n\t\tthis.server.registerChannel('userDataSyncMachines', userDataSyncMachineChannel);\n\n\t\t// Custom Endpoint Telemetry\n\t\tconst customEndpointTelemetryChannel = ProxyChannel.fromService(accessor.get(ICustomEndpointTelemetryService));\n\t\tthis.server.registerChannel('customEndpointTelemetry', customEndpointTelemetryChannel);\n\n\t\tconst userDataSyncAccountChannel = new UserDataSyncAccountServiceChannel(accessor.get(IUserDataSyncAccountService));\n\t\tthis.server.registerChannel('userDataSyncAccount', userDataSyncAccountChannel);\n\n\t\tconst userDataSyncStoreManagementChannel = new UserDataSyncStoreManagementServiceChannel(accessor.get(IUserDataSyncStoreManagementService));\n\t\tthis.server.registerChannel('userDataSyncStoreManagement', userDataSyncStoreManagementChannel);\n\n\t\tconst userDataSyncChannel = new UserDataSyncChannel(accessor.get(IUserDataSyncService), accessor.get(ILogService));\n\t\tthis.server.registerChannel('userDataSync', userDataSyncChannel);\n\n\t\tconst userDataAutoSync = this._register(accessor.get(IInstantiationService).createInstance(UserDataAutoSyncService));\n\t\tconst userDataAutoSyncChannel = new UserDataAutoSyncChannel(userDataAutoSync);\n\t\tthis.server.registerChannel('userDataAutoSync', userDataAutoSyncChannel);\n\n\t\t// Terminal\n\t\tconst localPtyService = accessor.get(ILocalPtyService);\n\t\tconst localPtyChannel = ProxyChannel.fromService(localPtyService);\n\t\tthis.server.registerChannel(TerminalIpcChannels.LocalPty, localPtyChannel);\n\n\t\t// Tunnel\n\t\tconst sharedProcessTunnelChannel = ProxyChannel.fromService(accessor.get(ISharedProcessTunnelService));\n\t\tthis.server.registerChannel(ipcSharedProcessTunnelChannelName, sharedProcessTunnelChannel);\n\n\t\t// Worker\n\t\tconst sharedProcessWorkerChannel = ProxyChannel.fromService(accessor.get(ISharedProcessWorkerService));\n\t\tthis.server.registerChannel(ipcSharedProcessWorkerChannelName, sharedProcessWorkerChannel);\n\t}\n\n\tprivate registerErrorHandler(logService: ILogService): void {\n\n\t\t// Listen on unhandled rejection events\n\t\twindow.addEventListener('unhandledrejection', (event: PromiseRejectionEvent) => {\n\n\t\t\t// See https://developer.mozilla.org/en-US/docs/Web/API/PromiseRejectionEvent\n\t\t\tonUnexpectedError(event.reason);\n\n\t\t\t// Prevent the printing of this event to the console\n\t\t\tevent.preventDefault();\n\t\t});\n\n\t\t// Install handler for unexpected errors\n\t\tsetUnexpectedErrorHandler(error => {\n\t\t\tconst message = toErrorMessage(error, true);\n\t\t\tif (!message) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlogService.error(`[uncaught exception in sharedProcess]: ${message}`);\n\t\t});\n\t}\n}\n\nexport async function main(configuration: ISharedProcessConfiguration): Promise<void> {\n\n\t// create shared process and signal back to main that we are\n\t// ready to accept message ports as client connections\n\tconst sharedProcess = new SharedProcessMain(configuration);\n\tipcRenderer.send('vscode:shared-process->electron-main=ipc-ready');\n\n\t// await initialization and signal this back to electron-main\n\tawait sharedProcess.open();\n\tipcRenderer.send('vscode:shared-process->electron-main=init-done');\n}\n"],"mappings":"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","names":[],"file":"sharedProcessMain.js"}