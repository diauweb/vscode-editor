{"version":3,"sources":["out-vscode/vs/code/electron-main/fake","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/assert.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/decorators.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/errors.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/arrays.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/functional.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/iterator.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/json.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/jsonFormatter.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/jsonEdit.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/keyCodes.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/keybindings.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/keybindingParser.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/lifecycle.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/linkedList.ts","out-vscode/vs/code/electron-main/vs/base/common/performance.js","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/platform.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/process.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/path.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/processes.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/stopwatch.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/event.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/cancellation.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/codicons.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/stream.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/buffer.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/strings.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/hash.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/map.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/normalization.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/types.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/extpath.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/objects.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/uri.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/console.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/marshalling.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/network.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/resources.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/async.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/labels.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/uriIpc.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/uuid.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/worker/simpleWorker.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/node/crypto.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/node/decoder.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/node/macAddress.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/node/id.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/node/pfs.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/node/extpath.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/node/ports.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/node/powershell.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/node/ps.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/node/watcher.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/parts/contextmenu/common/contextmenu.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/parts/contextmenu/electron-main/contextmenu.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/parts/ipc/common/ipc.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/parts/ipc/common/ipc.electron.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/parts/ipc/common/ipc.mp.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/parts/ipc/common/ipc.net.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/parts/ipc/electron-main/ipc.electron.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/parts/ipc/electron-main/ipc.mp.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/parts/storage/common/storage.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/parts/storage/node/storage.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/date.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/errorMessage.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/common/keybindingLabels.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/node/processes.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/node/shell.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/parts/ipc/node/ipc.cp.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/debug/common/extensionHostDebugIpc.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/driver/common/driverIpc.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/environment/common/environmentService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/environment/node/argv.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/debug/electron-main/extensionHostDebugIpc.ts","out-vscode/vs/code/electron-main/vs/platform/environment/node/userDataPath.js","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/environment/node/environmentService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/environment/node/wait.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensions/common/extensionValidator.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/files/node/diskFileSystemProviderIpc.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/instantiation/common/descriptors.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/instantiation/common/graph.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/instantiation/common/instantiation.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/configuration/common/configuration.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/diagnostics/common/diagnostics.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/encryption/electron-main/encryptionMainService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/environment/common/environment.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensionManagement/common/extensionManagement.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensionManagement/common/extensionUrlTrust.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensions/common/extensionHostStarter.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/externalTerminal/common/externalTerminal.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/externalTerminal/node/externalTerminalService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/files/common/files.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/environment/node/argvHelper.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/environment/node/shellEnv.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/files/common/io.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/files/common/watcher.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/files/node/watcher/nodejs/watcherService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/files/node/watcher/nsfw/watcherService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/files/node/watcher/parcel/watcherService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/instantiation/common/serviceCollection.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/instantiation/common/instantiationService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/keybinding/common/baseResolvedKeybinding.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/keybinding/common/resolvedKeybindingItem.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/keybinding/common/usLayoutResolvedKeybinding.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/lifecycle/common/lifecycle.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/log/common/log.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/configuration/common/userConfigurationFileService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/files/common/diskFileSystemProvider.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/files/common/fileService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/files/electron-main/diskFileSystemProviderIpc.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/files/node/diskFileSystemProvider.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/log/common/bufferLog.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/log/common/fileLog.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/log/common/logIpc.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/log/node/spdlogLog.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/log/node/loggerService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/menubar/common/menubar.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/product/common/product.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/product/common/productService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensionManagement/node/extensionUrlTrustService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/protocol/electron-main/protocol.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/protocol/electron-main/protocolMainService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/registry/common/platform.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/jsonschemas/common/jsonContributionRegistry.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/configuration/common/configurationRegistry.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/configuration/common/configurationModels.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/configuration/common/configurationService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/remote/common/remoteAuthorityResolver.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/remote/common/remoteAgentConnection.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/remote/common/remoteHosts.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensions/common/extensions.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensionManagement/common/extensionManagementUtil.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/remote/common/tunnel.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/request/common/request.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/request/node/proxy.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/serviceMachineId/common/serviceMachineId.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/sign/common/sign.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/sign/node/signService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/state/electron-main/state.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/lifecycle/electron-main/lifecycleMainService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/keyboardLayout/electron-main/keyboardLayoutMainService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/storage/common/storage.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/telemetry/common/commonProperties.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/telemetry/common/telemetry.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/diagnostics/node/diagnosticsService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/telemetry/common/telemetryIpc.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/telemetry/common/telemetryUtils.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensionManagement/common/extensionGalleryService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/telemetry/common/telemetryService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/theme/common/theme.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/theme/common/themeService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/theme/electron-main/themeMainService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/update/common/update.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/update/common/update.config.contribution.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/update/common/updateIpc.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/url/common/url.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/url/common/urlIpc.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/url/common/urlService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/url/electron-main/electronUrlListener.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/webview/common/webviewManagerService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/webview/electron-main/webviewProtocolProvider.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/windows/common/windows.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/windows/electron-main/windows.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/webview/electron-main/webviewMainService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/windows/node/windowTracker.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/workspace/common/workspace.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/workspaces/common/workspaces.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/backup/electron-main/backup.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/dialogs/electron-main/dialogMainService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/storage/electron-main/storageIpc.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/storage/electron-main/storageMain.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/storage/electron-main/storageMainService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/windows/electron-main/windowsFinder.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/windows/electron-main/windowsStateHandler.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/workspaces/electron-main/workspaces.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/extensions/electron-main/workerMainProcessExtensionHostStarter.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/base/parts/ipc/node/ipc.net.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/driver/node/driver.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/driver/electron-main/driver.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/environment/electron-main/environmentMainService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/backup/electron-main/backupMainService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/remote/node/nodeSocketFactory.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/remote/node/tunnelService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/request/node/requestService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/request/electron-main/requestMainService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/sharedProcess/electron-main/sharedProcess.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/state/electron-main/stateMainService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/update/electron-main/abstractUpdateService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/update/electron-main/updateService.darwin.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/update/electron-main/updateService.snap.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/workspaces/electron-main/workspacesManagementMainService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/launch/electron-main/launchMainService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/native/electron-main/nativeHostMainService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/code/electron-main/auth.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/issue/electron-main/issueMainService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/update/electron-main/updateService.linux.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/update/electron-main/updateService.win32.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/windows/electron-main/window.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/workspaces/electron-main/workspacesHistoryMainService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/menubar/electron-main/menubar.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/menubar/electron-main/menubarMainService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/windows/electron-main/windowsMainService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/platform/workspaces/electron-main/workspacesMainService.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/code/electron-main/app.ts","out-vscode/vs/code/electron-main/file:/home/runner/work/vscode-editor/vscode-editor/vscode/src/vs/code/electron-main/main.ts"],"sourcesContent":["}).call(this);","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Throws an error with the provided message if the provided value does not evaluate to a true Javascript value.\n */\nexport function ok(value?: unknown, message?: string) {\n\tif (!value) {\n\t\tthrow new Error(message ? `Assertion failed (${message})` : 'Assertion Failed');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function createDecorator(mapFn: (fn: Function, key: string) => Function): Function {\n\treturn (target: any, key: string, descriptor: any) => {\n\t\tlet fnKey: string | null = null;\n\t\tlet fn: Function | null = null;\n\n\t\tif (typeof descriptor.value === 'function') {\n\t\t\tfnKey = 'value';\n\t\t\tfn = descriptor.value;\n\t\t} else if (typeof descriptor.get === 'function') {\n\t\t\tfnKey = 'get';\n\t\t\tfn = descriptor.get;\n\t\t}\n\n\t\tif (!fn) {\n\t\t\tthrow new Error('not supported');\n\t\t}\n\n\t\tdescriptor[fnKey!] = mapFn(fn, key);\n\t};\n}\n\nexport function memoize(_target: any, key: string, descriptor: any) {\n\tlet fnKey: string | null = null;\n\tlet fn: Function | null = null;\n\n\tif (typeof descriptor.value === 'function') {\n\t\tfnKey = 'value';\n\t\tfn = descriptor.value;\n\n\t\tif (fn!.length !== 0) {\n\t\t\tconsole.warn('Memoize should only be used in functions with zero parameters');\n\t\t}\n\t} else if (typeof descriptor.get === 'function') {\n\t\tfnKey = 'get';\n\t\tfn = descriptor.get;\n\t}\n\n\tif (!fn) {\n\t\tthrow new Error('not supported');\n\t}\n\n\tconst memoizeKey = `$memoize$${key}`;\n\tdescriptor[fnKey!] = function (...args: any[]) {\n\t\tif (!this.hasOwnProperty(memoizeKey)) {\n\t\t\tObject.defineProperty(this, memoizeKey, {\n\t\t\t\tconfigurable: false,\n\t\t\t\tenumerable: false,\n\t\t\t\twritable: false,\n\t\t\t\tvalue: fn!.apply(this, args)\n\t\t\t});\n\t\t}\n\n\t\treturn this[memoizeKey];\n\t};\n}\n\nexport interface IDebounceReducer<T> {\n\t(previousValue: T, ...args: any[]): T;\n}\n\nexport function debounce<T>(delay: number, reducer?: IDebounceReducer<T>, initialValueProvider?: () => T): Function {\n\treturn createDecorator((fn, key) => {\n\t\tconst timerKey = `$debounce$${key}`;\n\t\tconst resultKey = `$debounce$result$${key}`;\n\n\t\treturn function (this: any, ...args: any[]) {\n\t\t\tif (!this[resultKey]) {\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}\n\n\t\t\tclearTimeout(this[timerKey]);\n\n\t\t\tif (reducer) {\n\t\t\t\tthis[resultKey] = reducer(this[resultKey], ...args);\n\t\t\t\targs = [this[resultKey]];\n\t\t\t}\n\n\t\t\tthis[timerKey] = setTimeout(() => {\n\t\t\t\tfn.apply(this, args);\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}, delay);\n\t\t};\n\t});\n}\n\nexport function throttle<T>(delay: number, reducer?: IDebounceReducer<T>, initialValueProvider?: () => T): Function {\n\treturn createDecorator((fn, key) => {\n\t\tconst timerKey = `$throttle$timer$${key}`;\n\t\tconst resultKey = `$throttle$result$${key}`;\n\t\tconst lastRunKey = `$throttle$lastRun$${key}`;\n\t\tconst pendingKey = `$throttle$pending$${key}`;\n\n\t\treturn function (this: any, ...args: any[]) {\n\t\t\tif (!this[resultKey]) {\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t}\n\t\t\tif (this[lastRunKey] === null || this[lastRunKey] === undefined) {\n\t\t\t\tthis[lastRunKey] = -Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tif (reducer) {\n\t\t\t\tthis[resultKey] = reducer(this[resultKey], ...args);\n\t\t\t}\n\n\t\t\tif (this[pendingKey]) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst nextTime = this[lastRunKey] + delay;\n\t\t\tif (nextTime <= Date.now()) {\n\t\t\t\tthis[lastRunKey] = Date.now();\n\t\t\t\tfn.apply(this, [this[resultKey]]);\n\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t} else {\n\t\t\t\tthis[pendingKey] = true;\n\t\t\t\tthis[timerKey] = setTimeout(() => {\n\t\t\t\t\tthis[pendingKey] = false;\n\t\t\t\t\tthis[lastRunKey] = Date.now();\n\t\t\t\t\tfn.apply(this, [this[resultKey]]);\n\t\t\t\t\tthis[resultKey] = initialValueProvider ? initialValueProvider() : undefined;\n\t\t\t\t}, nextTime - Date.now());\n\t\t\t}\n\t\t};\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IAction } from 'vs/base/common/actions';\n\nexport interface ErrorListenerCallback {\n\t(error: any): void;\n}\n\nexport interface ErrorListenerUnbind {\n\t(): void;\n}\n\n// Avoid circular dependency on EventEmitter by implementing a subset of the interface.\nexport class ErrorHandler {\n\tprivate unexpectedErrorHandler: (e: any) => void;\n\tprivate listeners: ErrorListenerCallback[];\n\n\tconstructor() {\n\n\t\tthis.listeners = [];\n\n\t\tthis.unexpectedErrorHandler = function (e: any) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (e.stack) {\n\t\t\t\t\tthrow new Error(e.message + '\\n\\n' + e.stack);\n\t\t\t\t}\n\n\t\t\t\tthrow e;\n\t\t\t}, 0);\n\t\t};\n\t}\n\n\taddListener(listener: ErrorListenerCallback): ErrorListenerUnbind {\n\t\tthis.listeners.push(listener);\n\n\t\treturn () => {\n\t\t\tthis._removeListener(listener);\n\t\t};\n\t}\n\n\tprivate emit(e: any): void {\n\t\tthis.listeners.forEach((listener) => {\n\t\t\tlistener(e);\n\t\t});\n\t}\n\n\tprivate _removeListener(listener: ErrorListenerCallback): void {\n\t\tthis.listeners.splice(this.listeners.indexOf(listener), 1);\n\t}\n\n\tsetUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\t\tthis.unexpectedErrorHandler = newUnexpectedErrorHandler;\n\t}\n\n\tgetUnexpectedErrorHandler(): (e: any) => void {\n\t\treturn this.unexpectedErrorHandler;\n\t}\n\n\tonUnexpectedError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t\tthis.emit(e);\n\t}\n\n\t// For external errors, we don't want the listeners to be called\n\tonUnexpectedExternalError(e: any): void {\n\t\tthis.unexpectedErrorHandler(e);\n\t}\n}\n\nexport const errorHandler = new ErrorHandler();\n\nexport function setUnexpectedErrorHandler(newUnexpectedErrorHandler: (e: any) => void): void {\n\terrorHandler.setUnexpectedErrorHandler(newUnexpectedErrorHandler);\n}\n\nexport function onUnexpectedError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedError(e);\n\t}\n\treturn undefined;\n}\n\nexport function onUnexpectedExternalError(e: any): undefined {\n\t// ignore errors from cancelled promises\n\tif (!isPromiseCanceledError(e)) {\n\t\terrorHandler.onUnexpectedExternalError(e);\n\t}\n\treturn undefined;\n}\n\nexport interface SerializedError {\n\treadonly $isError: true;\n\treadonly name: string;\n\treadonly message: string;\n\treadonly stack: string;\n}\n\nexport function transformErrorForSerialization(error: Error): SerializedError;\nexport function transformErrorForSerialization(error: any): any;\nexport function transformErrorForSerialization(error: any): any {\n\tif (error instanceof Error) {\n\t\tlet { name, message } = error;\n\t\tconst stack: string = (<any>error).stacktrace || (<any>error).stack;\n\t\treturn {\n\t\t\t$isError: true,\n\t\t\tname,\n\t\t\tmessage,\n\t\t\tstack\n\t\t};\n\t}\n\n\t// return as is\n\treturn error;\n}\n\n// see https://github.com/v8/v8/wiki/Stack%20Trace%20API#basic-stack-traces\nexport interface V8CallSite {\n\tgetThis(): any;\n\tgetTypeName(): string;\n\tgetFunction(): string;\n\tgetFunctionName(): string;\n\tgetMethodName(): string;\n\tgetFileName(): string;\n\tgetLineNumber(): number;\n\tgetColumnNumber(): number;\n\tgetEvalOrigin(): string;\n\tisToplevel(): boolean;\n\tisEval(): boolean;\n\tisNative(): boolean;\n\tisConstructor(): boolean;\n\ttoString(): string;\n}\n\nconst canceledName = 'Canceled';\n\n/**\n * Checks if the given error is a promise in canceled state\n */\nexport function isPromiseCanceledError(error: any): boolean {\n\treturn error instanceof Error && error.name === canceledName && error.message === canceledName;\n}\n\n// !!!IMPORTANT!!!\n// Do NOT change this class because it is also used as an API-type.\nexport class CancellationError extends Error {\n\tconstructor() {\n\t\tsuper(canceledName);\n\t\tthis.name = this.message;\n\t}\n}\n\n/**\n * Returns an error that signals cancellation.\n */\nexport function canceled(): Error {\n\tconst error = new Error(canceledName);\n\terror.name = error.message;\n\treturn error;\n}\n\nexport function illegalArgument(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal argument: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal argument');\n\t}\n}\n\nexport function illegalState(name?: string): Error {\n\tif (name) {\n\t\treturn new Error(`Illegal state: ${name}`);\n\t} else {\n\t\treturn new Error('Illegal state');\n\t}\n}\n\nexport function readonly(name?: string): Error {\n\treturn name\n\t\t? new Error(`readonly property '${name} cannot be changed'`)\n\t\t: new Error('readonly property cannot be changed');\n}\n\nexport function disposed(what: string): Error {\n\tconst result = new Error(`${what} has been disposed`);\n\tresult.name = 'DISPOSED';\n\treturn result;\n}\n\nexport function getErrorMessage(err: any): string {\n\tif (!err) {\n\t\treturn 'Error';\n\t}\n\n\tif (err.message) {\n\t\treturn err.message;\n\t}\n\n\tif (err.stack) {\n\t\treturn err.stack.split('\\n')[0];\n\t}\n\n\treturn String(err);\n}\n\nexport class NotImplementedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotImplemented');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n\nexport class NotSupportedError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper('NotSupported');\n\t\tif (message) {\n\t\t\tthis.message = message;\n\t\t}\n\t}\n}\n\nexport class ExpectedError extends Error {\n\treadonly isExpected = true;\n}\n\nexport interface IErrorOptions {\n\tactions?: readonly IAction[];\n}\n\nexport interface IErrorWithActions {\n\tactions?: readonly IAction[];\n}\n\nexport function isErrorWithActions(obj: unknown): obj is IErrorWithActions {\n\tconst candidate = obj as IErrorWithActions | undefined;\n\n\treturn candidate instanceof Error && Array.isArray(candidate.actions);\n}\n\nexport function createErrorWithActions(message: string, options: IErrorOptions = Object.create(null)): Error & IErrorWithActions {\n\tconst result = new Error(message);\n\n\tif (options.actions) {\n\t\t(result as IErrorWithActions).actions = options.actions;\n\t}\n\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { ISplice } from 'vs/base/common/sequence';\n\n/**\n * Returns the last element of an array.\n * @param array The array.\n * @param n Which element from the end (default is zero).\n */\nexport function tail<T>(array: ArrayLike<T>, n: number = 0): T {\n\treturn array[array.length - (1 + n)];\n}\n\nexport function tail2<T>(arr: T[]): [T[], T] {\n\tif (arr.length === 0) {\n\t\tthrow new Error('Invalid tail call');\n\t}\n\n\treturn [arr.slice(0, arr.length - 1), arr[arr.length - 1]];\n}\n\nexport function equals<T>(one: ReadonlyArray<T> | undefined, other: ReadonlyArray<T> | undefined, itemEquals: (a: T, b: T) => boolean = (a, b) => a === b): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\n\tif (!one || !other) {\n\t\treturn false;\n\t}\n\n\tif (one.length !== other.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0, len = one.length; i < len; i++) {\n\t\tif (!itemEquals(one[i], other[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function binarySearch<T>(array: ReadonlyArray<T>, key: T, comparator: (op1: T, op2: T) => number): number {\n\tlet low = 0,\n\t\thigh = array.length - 1;\n\n\twhile (low <= high) {\n\t\tconst mid = ((low + high) / 2) | 0;\n\t\tconst comp = comparator(array[mid], key);\n\t\tif (comp < 0) {\n\t\t\tlow = mid + 1;\n\t\t} else if (comp > 0) {\n\t\t\thigh = mid - 1;\n\t\t} else {\n\t\t\treturn mid;\n\t\t}\n\t}\n\treturn -(low + 1);\n}\n\n/**\n * Takes a sorted array and a function p. The array is sorted in such a way that all elements where p(x) is false\n * are located before all elements where p(x) is true.\n * @returns the least x for which p(x) is true or array.length if no element fullfills the given function.\n */\nexport function findFirstInSorted<T>(array: ReadonlyArray<T>, p: (x: T) => boolean): number {\n\tlet low = 0, high = array.length;\n\tif (high === 0) {\n\t\treturn 0; // no children\n\t}\n\twhile (low < high) {\n\t\tconst mid = Math.floor((low + high) / 2);\n\t\tif (p(array[mid])) {\n\t\t\thigh = mid;\n\t\t} else {\n\t\t\tlow = mid + 1;\n\t\t}\n\t}\n\treturn low;\n}\n\ntype Compare<T> = (a: T, b: T) => number;\n\n\nexport function quickSelect<T>(nth: number, data: T[], compare: Compare<T>): T {\n\n\tnth = nth | 0;\n\n\tif (nth >= data.length) {\n\t\tthrow new TypeError('invalid index');\n\t}\n\n\tlet pivotValue = data[Math.floor(data.length * Math.random())];\n\tlet lower: T[] = [];\n\tlet higher: T[] = [];\n\tlet pivots: T[] = [];\n\n\tfor (let value of data) {\n\t\tconst val = compare(value, pivotValue);\n\t\tif (val < 0) {\n\t\t\tlower.push(value);\n\t\t} else if (val > 0) {\n\t\t\thigher.push(value);\n\t\t} else {\n\t\t\tpivots.push(value);\n\t\t}\n\t}\n\n\tif (nth < lower.length) {\n\t\treturn quickSelect(nth, lower, compare);\n\t} else if (nth < lower.length + pivots.length) {\n\t\treturn pivots[0];\n\t} else {\n\t\treturn quickSelect(nth - (lower.length + pivots.length), higher, compare);\n\t}\n}\n\nexport function groupBy<T>(data: ReadonlyArray<T>, compare: (a: T, b: T) => number): T[][] {\n\tconst result: T[][] = [];\n\tlet currentGroup: T[] | undefined = undefined;\n\tfor (const element of data.slice(0).sort(compare)) {\n\t\tif (!currentGroup || compare(currentGroup[0], element) !== 0) {\n\t\t\tcurrentGroup = [element];\n\t\t\tresult.push(currentGroup);\n\t\t} else {\n\t\t\tcurrentGroup.push(element);\n\t\t}\n\t}\n\treturn result;\n}\n\ninterface IMutableSplice<T> extends ISplice<T> {\n\tdeleteCount: number;\n}\n\n/**\n * Diffs two *sorted* arrays and computes the splices which apply the diff.\n */\nexport function sortedDiff<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): ISplice<T>[] {\n\tconst result: IMutableSplice<T>[] = [];\n\n\tfunction pushSplice(start: number, deleteCount: number, toInsert: T[]): void {\n\t\tif (deleteCount === 0 && toInsert.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst latest = result[result.length - 1];\n\n\t\tif (latest && latest.start + latest.deleteCount === start) {\n\t\t\tlatest.deleteCount += deleteCount;\n\t\t\tlatest.toInsert.push(...toInsert);\n\t\t} else {\n\t\t\tresult.push({ start, deleteCount, toInsert });\n\t\t}\n\t}\n\n\tlet beforeIdx = 0;\n\tlet afterIdx = 0;\n\n\twhile (true) {\n\t\tif (beforeIdx === before.length) {\n\t\t\tpushSplice(beforeIdx, 0, after.slice(afterIdx));\n\t\t\tbreak;\n\t\t}\n\t\tif (afterIdx === after.length) {\n\t\t\tpushSplice(beforeIdx, before.length - beforeIdx, []);\n\t\t\tbreak;\n\t\t}\n\n\t\tconst beforeElement = before[beforeIdx];\n\t\tconst afterElement = after[afterIdx];\n\t\tconst n = compare(beforeElement, afterElement);\n\t\tif (n === 0) {\n\t\t\t// equal\n\t\t\tbeforeIdx += 1;\n\t\t\tafterIdx += 1;\n\t\t} else if (n < 0) {\n\t\t\t// beforeElement is smaller -> before element removed\n\t\t\tpushSplice(beforeIdx, 1, []);\n\t\t\tbeforeIdx += 1;\n\t\t} else if (n > 0) {\n\t\t\t// beforeElement is greater -> after element added\n\t\t\tpushSplice(beforeIdx, 0, [afterElement]);\n\t\t\tafterIdx += 1;\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Takes two *sorted* arrays and computes their delta (removed, added elements).\n * Finishes in `Math.min(before.length, after.length)` steps.\n */\nexport function delta<T>(before: ReadonlyArray<T>, after: ReadonlyArray<T>, compare: (a: T, b: T) => number): { removed: T[], added: T[] } {\n\tconst splices = sortedDiff(before, after, compare);\n\tconst removed: T[] = [];\n\tconst added: T[] = [];\n\n\tfor (const splice of splices) {\n\t\tremoved.push(...before.slice(splice.start, splice.start + splice.deleteCount));\n\t\tadded.push(...splice.toInsert);\n\t}\n\n\treturn { removed, added };\n}\n\n/**\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @return The first n elements from array when sorted with compare.\n */\nexport function top<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, n: number): T[] {\n\tif (n === 0) {\n\t\treturn [];\n\t}\n\tconst result = array.slice(0, n).sort(compare);\n\ttopStep(array, compare, result, n, array.length);\n\treturn result;\n}\n\n/**\n * Asynchronous variant of `top()` allowing for splitting up work in batches between which the event loop can run.\n *\n * Returns the top N elements from the array.\n *\n * Faster than sorting the entire array when the array is a lot larger than N.\n *\n * @param array The unsorted array.\n * @param compare A sort function for the elements.\n * @param n The number of elements to return.\n * @param batch The number of elements to examine before yielding to the event loop.\n * @return The first n elements from array when sorted with compare.\n */\nexport function topAsync<T>(array: T[], compare: (a: T, b: T) => number, n: number, batch: number, token?: CancellationToken): Promise<T[]> {\n\tif (n === 0) {\n\t\treturn Promise.resolve([]);\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\t(async () => {\n\t\t\tconst o = array.length;\n\t\t\tconst result = array.slice(0, n).sort(compare);\n\t\t\tfor (let i = n, m = Math.min(n + batch, o); i < o; i = m, m = Math.min(m + batch, o)) {\n\t\t\t\tif (i > n) {\n\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve)); // any other delay function would starve I/O\n\t\t\t\t}\n\t\t\t\tif (token && token.isCancellationRequested) {\n\t\t\t\t\tthrow canceled();\n\t\t\t\t}\n\t\t\t\ttopStep(array, compare, result, i, m);\n\t\t\t}\n\t\t\treturn result;\n\t\t})()\n\t\t\t.then(resolve, reject);\n\t});\n}\n\nfunction topStep<T>(array: ReadonlyArray<T>, compare: (a: T, b: T) => number, result: T[], i: number, m: number): void {\n\tfor (const n = result.length; i < m; i++) {\n\t\tconst element = array[i];\n\t\tif (compare(element, result[n - 1]) < 0) {\n\t\t\tresult.pop();\n\t\t\tconst j = findFirstInSorted(result, e => compare(element, e) < 0);\n\t\t\tresult.splice(j, 0, element);\n\t\t}\n\t}\n}\n\n/**\n * @returns New array with all falsy values removed. The original array IS NOT modified.\n */\nexport function coalesce<T>(array: ReadonlyArray<T | undefined | null>): T[] {\n\treturn <T[]>array.filter(e => !!e);\n}\n\n/**\n * Remove all falsy values from `array`. The original array IS modified.\n */\nexport function coalesceInPlace<T>(array: Array<T | undefined | null>): void {\n\tlet to = 0;\n\tfor (let i = 0; i < array.length; i++) {\n\t\tif (!!array[i]) {\n\t\t\tarray[to] = array[i];\n\t\t\tto += 1;\n\t\t}\n\t}\n\tarray.length = to;\n}\n\n/**\n * Moves the element in the array for the provided positions.\n */\nexport function move(array: any[], from: number, to: number): void {\n\tarray.splice(to, 0, array.splice(from, 1)[0]);\n}\n\n/**\n * @returns false if the provided object is an array and not empty.\n */\nexport function isFalsyOrEmpty(obj: any): boolean {\n\treturn !Array.isArray(obj) || obj.length === 0;\n}\n\n/**\n * @returns True if the provided object is an array and has at least one element.\n */\nexport function isNonEmptyArray<T>(obj: T[] | undefined | null): obj is T[];\nexport function isNonEmptyArray<T>(obj: readonly T[] | undefined | null): obj is readonly T[];\nexport function isNonEmptyArray<T>(obj: T[] | readonly T[] | undefined | null): obj is T[] | readonly T[] {\n\treturn Array.isArray(obj) && obj.length > 0;\n}\n\n/**\n * Removes duplicates from the given array. The optional keyFn allows to specify\n * how elements are checked for equality by returning an alternate value for each.\n */\nexport function distinct<T>(array: ReadonlyArray<T>, keyFn: (value: T) => any = value => value): T[] {\n\tconst seen = new Set<any>();\n\n\treturn array.filter(element => {\n\t\tconst key = keyFn!(element);\n\t\tif (seen.has(key)) {\n\t\t\treturn false;\n\t\t}\n\t\tseen.add(key);\n\t\treturn true;\n\t});\n}\n\nexport function uniqueFilter<T>(keyFn: (t: T) => string): (t: T) => boolean {\n\tconst seen: { [key: string]: boolean; } = Object.create(null);\n\n\treturn element => {\n\t\tconst key = keyFn(element);\n\n\t\tif (seen[key]) {\n\t\t\treturn false;\n\t\t}\n\n\t\tseen[key] = true;\n\t\treturn true;\n\t};\n}\n\nexport function findLast<T>(arr: readonly T[], predicate: (item: T) => boolean): T | undefined {\n\tconst idx = lastIndex(arr, predicate);\n\tif (idx === -1) {\n\t\treturn undefined;\n\t}\n\treturn arr[idx];\n}\n\nexport function lastIndex<T>(array: ReadonlyArray<T>, fn: (item: T) => boolean): number {\n\tfor (let i = array.length - 1; i >= 0; i--) {\n\t\tconst element = array[i];\n\n\t\tif (fn(element)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue: NotFound): T | NotFound;\nexport function firstOrDefault<T>(array: ReadonlyArray<T>): T | undefined;\nexport function firstOrDefault<T, NotFound = T>(array: ReadonlyArray<T>, notFoundValue?: NotFound): T | NotFound | undefined {\n\treturn array.length > 0 ? array[0] : notFoundValue;\n}\n\nexport function commonPrefixLength<T>(one: ReadonlyArray<T>, other: ReadonlyArray<T>, equals: (a: T, b: T) => boolean = (a, b) => a === b): number {\n\tlet result = 0;\n\n\tfor (let i = 0, len = Math.min(one.length, other.length); i < len && equals(one[i], other[i]); i++) {\n\t\tresult++;\n\t}\n\n\treturn result;\n}\n\nexport function flatten<T>(arr: T[][]): T[] {\n\treturn (<T[]>[]).concat(...arr);\n}\n\nexport function range(to: number): number[];\nexport function range(from: number, to: number): number[];\nexport function range(arg: number, to?: number): number[] {\n\tlet from = typeof to === 'number' ? arg : 0;\n\n\tif (typeof to === 'number') {\n\t\tfrom = arg;\n\t} else {\n\t\tfrom = 0;\n\t\tto = arg;\n\t}\n\n\tconst result: number[] = [];\n\n\tif (from <= to) {\n\t\tfor (let i = from; i < to; i++) {\n\t\t\tresult.push(i);\n\t\t}\n\t} else {\n\t\tfor (let i = from; i > to; i--) {\n\t\t\tresult.push(i);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function index<T>(array: ReadonlyArray<T>, indexer: (t: T) => string): { [key: string]: T; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, mapper: (t: T) => R): { [key: string]: R; };\nexport function index<T, R>(array: ReadonlyArray<T>, indexer: (t: T) => string, mapper?: (t: T) => R): { [key: string]: R; } {\n\treturn array.reduce((r, t) => {\n\t\tr[indexer(t)] = mapper ? mapper(t) : t;\n\t\treturn r;\n\t}, Object.create(null));\n}\n\n/**\n * Inserts an element into an array. Returns a function which, when\n * called, will remove that element from the array.\n */\nexport function insert<T>(array: T[], element: T): () => void {\n\tarray.push(element);\n\n\treturn () => remove(array, element);\n}\n\n/**\n * Removes an element from an array if it can be found.\n */\nexport function remove<T>(array: T[], element: T): T | undefined {\n\tconst index = array.indexOf(element);\n\tif (index > -1) {\n\t\tarray.splice(index, 1);\n\n\t\treturn element;\n\t}\n\n\treturn undefined;\n}\n\n/**\n * Insert `insertArr` inside `target` at `insertIndex`.\n * Please don't touch unless you understand https://jsperf.com/inserting-an-array-within-an-array\n */\nexport function arrayInsert<T>(target: T[], insertIndex: number, insertArr: T[]): T[] {\n\tconst before = target.slice(0, insertIndex);\n\tconst after = target.slice(insertIndex);\n\treturn before.concat(insertArr, after);\n}\n\n/**\n * Uses Fisher-Yates shuffle to shuffle the given array\n */\nexport function shuffle<T>(array: T[], _seed?: number): void {\n\tlet rand: () => number;\n\n\tif (typeof _seed === 'number') {\n\t\tlet seed = _seed;\n\t\t// Seeded random number generator in JS. Modified from:\n\t\t// https://stackoverflow.com/questions/521295/seeding-the-random-number-generator-in-javascript\n\t\trand = () => {\n\t\t\tconst x = Math.sin(seed++) * 179426549; // throw away most significant digits and reduce any potential bias\n\t\t\treturn x - Math.floor(x);\n\t\t};\n\t} else {\n\t\trand = Math.random;\n\t}\n\n\tfor (let i = array.length - 1; i > 0; i -= 1) {\n\t\tconst j = Math.floor(rand() * (i + 1));\n\t\tconst temp = array[i];\n\t\tarray[i] = array[j];\n\t\tarray[j] = temp;\n\t}\n}\n\n/**\n * Pushes an element to the start of the array, if found.\n */\nexport function pushToStart<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.unshift(value);\n\t}\n}\n\n/**\n * Pushes an element to the end of the array, if found.\n */\nexport function pushToEnd<T>(arr: T[], value: T): void {\n\tconst index = arr.indexOf(value);\n\n\tif (index > -1) {\n\t\tarr.splice(index, 1);\n\t\tarr.push(value);\n\t}\n}\n\nexport function mapArrayOrNot<T, U>(items: T | T[], fn: (_: T) => U): U | U[] {\n\treturn Array.isArray(items) ?\n\t\titems.map(fn) :\n\t\tfn(items);\n}\n\nexport function asArray<T>(x: T | T[]): T[];\nexport function asArray<T>(x: T | readonly T[]): readonly T[];\nexport function asArray<T>(x: T | T[]): T[] {\n\treturn Array.isArray(x) ? x : [x];\n}\n\nexport function getRandomElement<T>(arr: T[]): T | undefined {\n\treturn arr[Math.floor(Math.random() * arr.length)];\n}\n\n/**\n * Returns the first mapped value of the array which is not undefined.\n */\nexport function mapFind<T, R>(array: Iterable<T>, mapFn: (value: T) => R | undefined): R | undefined {\n\tfor (const value of array) {\n\t\tconst mapped = mapFn(value);\n\t\tif (mapped !== undefined) {\n\t\t\treturn mapped;\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\n/**\n * Insert the new items in the array.\n * @param array The original array.\n * @param start The zero-based location in the array from which to start inserting elements.\n * @param newItems The items to be inserted\n */\nexport function insertInto<T>(array: T[], start: number, newItems: T[]): void {\n\tconst startIdx = getActualStartIndex(array, start);\n\tconst originalLength = array.length;\n\tconst newItemsLength = newItems.length;\n\tarray.length = originalLength + newItemsLength;\n\t// Move the items after the start index, start from the end so that we don't overwrite any value.\n\tfor (let i = originalLength - 1; i >= startIdx; i--) {\n\t\tarray[i + newItemsLength] = array[i];\n\t}\n\n\tfor (let i = 0; i < newItemsLength; i++) {\n\t\tarray[i + startIdx] = newItems[i];\n\t}\n}\n\n/**\n * Removes elements from an array and inserts new elements in their place, returning the deleted elements. Alternative to the native Array.splice method, it\n * can only support limited number of items due to the maximum call stack size limit.\n * @param array The original array.\n * @param start The zero-based location in the array from which to start removing elements.\n * @param deleteCount The number of elements to remove.\n * @returns An array containing the elements that were deleted.\n */\nexport function splice<T>(array: T[], start: number, deleteCount: number, newItems: T[]): T[] {\n\tconst index = getActualStartIndex(array, start);\n\tconst result = array.splice(index, deleteCount);\n\tinsertInto(array, index, newItems);\n\treturn result;\n}\n\n/**\n * Determine the actual start index (same logic as the native splice() or slice())\n * If greater than the length of the array, start will be set to the length of the array. In this case, no element will be deleted but the method will behave as an adding function, adding as many element as item[n*] provided.\n * If negative, it will begin that many elements from the end of the array. (In this case, the origin -1, meaning -n is the index of the nth last element, and is therefore equivalent to the index of array.length - n.) If array.length + start is less than 0, it will begin from index 0.\n * @param array The target array.\n * @param start The operation index.\n */\nfunction getActualStartIndex<T>(array: T[], start: number): number {\n\treturn start < 0 ? Math.max(start + array.length, 0) : Math.min(start, array.length);\n}\n\n/**\n * Like Math.min with a delegate, and returns the winning index\n */\nexport function minIndex<T>(array: readonly T[], fn: (value: T) => number): number {\n\tlet minValue = Number.MAX_SAFE_INTEGER;\n\tlet minIdx = 0;\n\tarray.forEach((value, i) => {\n\t\tconst thisValue = fn(value);\n\t\tif (thisValue < minValue) {\n\t\t\tminValue = thisValue;\n\t\t\tminIdx = i;\n\t\t}\n\t});\n\n\treturn minIdx;\n}\n\n/**\n * Like Math.max with a delegate, and returns the winning index\n */\nexport function maxIndex<T>(array: readonly T[], fn: (value: T) => number): number {\n\tlet minValue = Number.MIN_SAFE_INTEGER;\n\tlet maxIdx = 0;\n\tarray.forEach((value, i) => {\n\t\tconst thisValue = fn(value);\n\t\tif (thisValue > minValue) {\n\t\t\tminValue = thisValue;\n\t\t\tmaxIdx = i;\n\t\t}\n\t});\n\n\treturn maxIdx;\n}\n\nexport class ArrayQueue<T> {\n\tprivate firstIdx = 0;\n\tprivate lastIdx = this.items.length - 1;\n\n\t/**\n\t * Constructs a queue that is backed by the given array. Runtime is O(1).\n\t*/\n\tconstructor(private readonly items: T[]) { }\n\n\tget length(): number {\n\t\treturn this.lastIdx - this.firstIdx + 1;\n\t}\n\n\t/**\n\t * Consumes elements from the beginning of the queue as long as the predicate returns true.\n\t * If no elements were consumed, `null` is returned. Has a runtime of O(result.length).\n\t*/\n\ttakeWhile(predicate: (value: T) => boolean): T[] | null {\n\t\t// P(k) := k <= this.lastIdx && predicate(this.items[k])\n\t\t// Find s := min { k | k >= this.firstIdx && !P(k) } and return this.data[this.firstIdx...s)\n\n\t\tlet startIdx = this.firstIdx;\n\t\twhile (startIdx < this.items.length && predicate(this.items[startIdx])) {\n\t\t\tstartIdx++;\n\t\t}\n\t\tconst result = startIdx === this.firstIdx ? null : this.items.slice(this.firstIdx, startIdx);\n\t\tthis.firstIdx = startIdx;\n\t\treturn result;\n\t}\n\n\t/**\n\t * Consumes elements from the end of the queue as long as the predicate returns true.\n\t * If no elements were consumed, `null` is returned.\n\t * The result has the same order as the underlying array!\n\t*/\n\ttakeFromEndWhile(predicate: (value: T) => boolean): T[] | null {\n\t\t// P(k) := this.firstIdx >= k && predicate(this.items[k])\n\t\t// Find s := max { k | k <= this.lastIdx && !P(k) } and return this.data(s...this.lastIdx]\n\n\t\tlet endIdx = this.lastIdx;\n\t\twhile (endIdx >= 0 && predicate(this.items[endIdx])) {\n\t\t\tendIdx--;\n\t\t}\n\t\tconst result = endIdx === this.lastIdx ? null : this.items.slice(endIdx + 1, this.lastIdx + 1);\n\t\tthis.lastIdx = endIdx;\n\t\treturn result;\n\t}\n\n\tpeek(): T | undefined {\n\t\treturn this.items[this.firstIdx];\n\t}\n\n\tdequeue(): T | undefined {\n\t\tconst result = this.items[this.firstIdx];\n\t\tthis.firstIdx++;\n\t\treturn result;\n\t}\n\n\ttakeCount(count: number): T[] {\n\t\tconst result = this.items.slice(this.firstIdx, this.firstIdx + count);\n\t\tthis.firstIdx += count;\n\t\treturn result;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function once<T extends Function>(this: unknown, fn: T): T {\n\tconst _this = this;\n\tlet didCall = false;\n\tlet result: unknown;\n\n\treturn function () {\n\t\tif (didCall) {\n\t\t\treturn result;\n\t\t}\n\n\t\tdidCall = true;\n\t\tresult = fn.apply(_this, arguments);\n\n\t\treturn result;\n\t} as unknown as T;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport namespace Iterable {\n\n\texport function is<T = any>(thing: any): thing is IterableIterator<T> {\n\t\treturn thing && typeof thing === 'object' && typeof thing[Symbol.iterator] === 'function';\n\t}\n\n\tconst _empty: Iterable<any> = Object.freeze([]);\n\texport function empty<T = any>(): Iterable<T> {\n\t\treturn _empty;\n\t}\n\n\texport function* single<T>(element: T): Iterable<T> {\n\t\tyield element;\n\t}\n\n\texport function from<T>(iterable: Iterable<T> | undefined | null): Iterable<T> {\n\t\treturn iterable || _empty;\n\t}\n\n\texport function isEmpty<T>(iterable: Iterable<T> | undefined | null): boolean {\n\t\treturn !iterable || iterable[Symbol.iterator]().next().done === true;\n\t}\n\n\texport function first<T>(iterable: Iterable<T>): T | undefined {\n\t\treturn iterable[Symbol.iterator]().next().value;\n\t}\n\n\texport function some<T>(iterable: Iterable<T>, predicate: (t: T) => unknown): boolean {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\texport function find<T, R extends T>(iterable: Iterable<T>, predicate: (t: T) => t is R): T | undefined;\n\texport function find<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): T | undefined;\n\texport function find<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): T | undefined {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\treturn element;\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\texport function filter<T, R extends T>(iterable: Iterable<T>, predicate: (t: T) => t is R): Iterable<R>;\n\texport function filter<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): Iterable<T>;\n\texport function* filter<T>(iterable: Iterable<T>, predicate: (t: T) => boolean): Iterable<T> {\n\t\tfor (const element of iterable) {\n\t\t\tif (predicate(element)) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function* map<T, R>(iterable: Iterable<T>, fn: (t: T, index: number) => R): Iterable<R> {\n\t\tlet index = 0;\n\t\tfor (const element of iterable) {\n\t\t\tyield fn(element, index++);\n\t\t}\n\t}\n\n\texport function* concat<T>(...iterables: Iterable<T>[]): Iterable<T> {\n\t\tfor (const iterable of iterables) {\n\t\t\tfor (const element of iterable) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function* concatNested<T>(iterables: Iterable<Iterable<T>>): Iterable<T> {\n\t\tfor (const iterable of iterables) {\n\t\t\tfor (const element of iterable) {\n\t\t\t\tyield element;\n\t\t\t}\n\t\t}\n\t}\n\n\texport function reduce<T, R>(iterable: Iterable<T>, reducer: (previousValue: R, currentValue: T) => R, initialValue: R): R {\n\t\tlet value = initialValue;\n\t\tfor (const element of iterable) {\n\t\t\tvalue = reducer(value, element);\n\t\t}\n\t\treturn value;\n\t}\n\n\t/**\n\t * Returns an iterable slice of the array, with the same semantics as `array.slice()`.\n\t */\n\texport function* slice<T>(arr: ReadonlyArray<T>, from: number, to = arr.length): Iterable<T> {\n\t\tif (from < 0) {\n\t\t\tfrom += arr.length;\n\t\t}\n\n\t\tif (to < 0) {\n\t\t\tto += arr.length;\n\t\t} else if (to > arr.length) {\n\t\t\tto = arr.length;\n\t\t}\n\n\t\tfor (; from < to; from++) {\n\t\t\tyield arr[from];\n\t\t}\n\t}\n\n\t/**\n\t * Consumes `atMost` elements from iterable and returns the consumed elements,\n\t * and an iterable for the rest of the elements.\n\t */\n\texport function consume<T>(iterable: Iterable<T>, atMost: number = Number.POSITIVE_INFINITY): [T[], Iterable<T>] {\n\t\tconst consumed: T[] = [];\n\n\t\tif (atMost === 0) {\n\t\t\treturn [consumed, iterable];\n\t\t}\n\n\t\tconst iterator = iterable[Symbol.iterator]();\n\n\t\tfor (let i = 0; i < atMost; i++) {\n\t\t\tconst next = iterator.next();\n\n\t\t\tif (next.done) {\n\t\t\t\treturn [consumed, Iterable.empty()];\n\t\t\t}\n\n\t\t\tconsumed.push(next.value);\n\t\t}\n\n\t\treturn [consumed, { [Symbol.iterator]() { return iterator; } }];\n\t}\n\n\t/**\n\t * Returns whether the iterables are the same length and all items are\n\t * equal using the comparator function.\n\t */\n\texport function equals<T>(a: Iterable<T>, b: Iterable<T>, comparator = (at: T, bt: T) => at === bt) {\n\t\tconst ai = a[Symbol.iterator]();\n\t\tconst bi = b[Symbol.iterator]();\n\t\twhile (true) {\n\t\t\tconst an = ai.next();\n\t\t\tconst bn = bi.next();\n\n\t\t\tif (an.done !== bn.done) {\n\t\t\t\treturn false;\n\t\t\t} else if (an.done) {\n\t\t\t\treturn true;\n\t\t\t} else if (!comparator(an.value, bn.value)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport const enum ScanError {\n\tNone = 0,\n\tUnexpectedEndOfComment = 1,\n\tUnexpectedEndOfString = 2,\n\tUnexpectedEndOfNumber = 3,\n\tInvalidUnicode = 4,\n\tInvalidEscapeCharacter = 5,\n\tInvalidCharacter = 6\n}\n\nexport const enum SyntaxKind {\n\tOpenBraceToken = 1,\n\tCloseBraceToken = 2,\n\tOpenBracketToken = 3,\n\tCloseBracketToken = 4,\n\tCommaToken = 5,\n\tColonToken = 6,\n\tNullKeyword = 7,\n\tTrueKeyword = 8,\n\tFalseKeyword = 9,\n\tStringLiteral = 10,\n\tNumericLiteral = 11,\n\tLineCommentTrivia = 12,\n\tBlockCommentTrivia = 13,\n\tLineBreakTrivia = 14,\n\tTrivia = 15,\n\tUnknown = 16,\n\tEOF = 17\n}\n\n/**\n * The scanner object, representing a JSON scanner at a position in the input string.\n */\nexport interface JSONScanner {\n\t/**\n\t * Sets the scan position to a new offset. A call to 'scan' is needed to get the first token.\n\t */\n\tsetPosition(pos: number): void;\n\t/**\n\t * Read the next token. Returns the token code.\n\t */\n\tscan(): SyntaxKind;\n\t/**\n\t * Returns the current scan position, which is after the last read token.\n\t */\n\tgetPosition(): number;\n\t/**\n\t * Returns the last read token.\n\t */\n\tgetToken(): SyntaxKind;\n\t/**\n\t * Returns the last read token value. The value for strings is the decoded string content. For numbers its of type number, for boolean it's true or false.\n\t */\n\tgetTokenValue(): string;\n\t/**\n\t * The start offset of the last read token.\n\t */\n\tgetTokenOffset(): number;\n\t/**\n\t * The length of the last read token.\n\t */\n\tgetTokenLength(): number;\n\t/**\n\t * An error code of the last scan.\n\t */\n\tgetTokenError(): ScanError;\n}\n\n\n\nexport interface ParseError {\n\terror: ParseErrorCode;\n\toffset: number;\n\tlength: number;\n}\n\nexport const enum ParseErrorCode {\n\tInvalidSymbol = 1,\n\tInvalidNumberFormat = 2,\n\tPropertyNameExpected = 3,\n\tValueExpected = 4,\n\tColonExpected = 5,\n\tCommaExpected = 6,\n\tCloseBraceExpected = 7,\n\tCloseBracketExpected = 8,\n\tEndOfFileExpected = 9,\n\tInvalidCommentToken = 10,\n\tUnexpectedEndOfComment = 11,\n\tUnexpectedEndOfString = 12,\n\tUnexpectedEndOfNumber = 13,\n\tInvalidUnicode = 14,\n\tInvalidEscapeCharacter = 15,\n\tInvalidCharacter = 16\n}\n\nexport type NodeType = 'object' | 'array' | 'property' | 'string' | 'number' | 'boolean' | 'null';\n\nexport interface Node {\n\treadonly type: NodeType;\n\treadonly value?: any;\n\treadonly offset: number;\n\treadonly length: number;\n\treadonly colonOffset?: number;\n\treadonly parent?: Node;\n\treadonly children?: Node[];\n}\n\nexport type Segment = string | number;\nexport type JSONPath = Segment[];\n\nexport interface Location {\n\t/**\n\t * The previous property key or literal value (string, number, boolean or null) or undefined.\n\t */\n\tpreviousNode?: Node;\n\t/**\n\t * The path describing the location in the JSON document. The path consists of a sequence strings\n\t * representing an object property or numbers for array indices.\n\t */\n\tpath: JSONPath;\n\t/**\n\t * Matches the locations path against a pattern consisting of strings (for properties) and numbers (for array indices).\n\t * '*' will match a single segment, of any property name or index.\n\t * '**' will match a sequence of segments or no segment, of any property name or index.\n\t */\n\tmatches: (patterns: JSONPath) => boolean;\n\t/**\n\t * If set, the location's offset is at a property key.\n\t */\n\tisAtPropertyKey: boolean;\n}\n\nexport interface ParseOptions {\n\tdisallowComments?: boolean;\n\tallowTrailingComma?: boolean;\n\tallowEmptyContent?: boolean;\n}\n\nexport namespace ParseOptions {\n\texport const DEFAULT = {\n\t\tallowTrailingComma: true\n\t};\n}\n\nexport interface JSONVisitor {\n\t/**\n\t * Invoked when an open brace is encountered and an object is started. The offset and length represent the location of the open brace.\n\t */\n\tonObjectBegin?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a property is encountered. The offset and length represent the location of the property name.\n\t */\n\tonObjectProperty?: (property: string, offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a closing brace is encountered and an object is completed. The offset and length represent the location of the closing brace.\n\t */\n\tonObjectEnd?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when an open bracket is encountered. The offset and length represent the location of the open bracket.\n\t */\n\tonArrayBegin?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a closing bracket is encountered. The offset and length represent the location of the closing bracket.\n\t */\n\tonArrayEnd?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a literal value is encountered. The offset and length represent the location of the literal value.\n\t */\n\tonLiteralValue?: (value: any, offset: number, length: number) => void;\n\n\t/**\n\t * Invoked when a comma or colon separator is encountered. The offset and length represent the location of the separator.\n\t */\n\tonSeparator?: (character: string, offset: number, length: number) => void;\n\n\t/**\n\t * When comments are allowed, invoked when a line or block comment is encountered. The offset and length represent the location of the comment.\n\t */\n\tonComment?: (offset: number, length: number) => void;\n\n\t/**\n\t * Invoked on an error.\n\t */\n\tonError?: (error: ParseErrorCode, offset: number, length: number) => void;\n}\n\n/**\n * Creates a JSON scanner on the given text.\n * If ignoreTrivia is set, whitespaces or comments are ignored.\n */\nexport function createScanner(text: string, ignoreTrivia: boolean = false): JSONScanner {\n\n\tlet pos = 0,\n\t\tlen = text.length,\n\t\tvalue: string = '',\n\t\ttokenOffset = 0,\n\t\ttoken: SyntaxKind = SyntaxKind.Unknown,\n\t\tscanError: ScanError = ScanError.None;\n\n\tfunction scanHexDigits(count: number): number {\n\t\tlet digits = 0;\n\t\tlet hexValue = 0;\n\t\twhile (digits < count) {\n\t\t\tconst ch = text.charCodeAt(pos);\n\t\t\tif (ch >= CharacterCodes._0 && ch <= CharacterCodes._9) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes._0;\n\t\t\t}\n\t\t\telse if (ch >= CharacterCodes.A && ch <= CharacterCodes.F) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes.A + 10;\n\t\t\t}\n\t\t\telse if (ch >= CharacterCodes.a && ch <= CharacterCodes.f) {\n\t\t\t\thexValue = hexValue * 16 + ch - CharacterCodes.a + 10;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpos++;\n\t\t\tdigits++;\n\t\t}\n\t\tif (digits < count) {\n\t\t\thexValue = -1;\n\t\t}\n\t\treturn hexValue;\n\t}\n\n\tfunction setPosition(newPosition: number) {\n\t\tpos = newPosition;\n\t\tvalue = '';\n\t\ttokenOffset = 0;\n\t\ttoken = SyntaxKind.Unknown;\n\t\tscanError = ScanError.None;\n\t}\n\n\tfunction scanNumber(): string {\n\t\tconst start = pos;\n\t\tif (text.charCodeAt(pos) === CharacterCodes._0) {\n\t\t\tpos++;\n\t\t} else {\n\t\t\tpos++;\n\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t}\n\t\t}\n\t\tif (pos < text.length && text.charCodeAt(pos) === CharacterCodes.dot) {\n\t\t\tpos++;\n\t\t\tif (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tscanError = ScanError.UnexpectedEndOfNumber;\n\t\t\t\treturn text.substring(start, pos);\n\t\t\t}\n\t\t}\n\t\tlet end = pos;\n\t\tif (pos < text.length && (text.charCodeAt(pos) === CharacterCodes.E || text.charCodeAt(pos) === CharacterCodes.e)) {\n\t\t\tpos++;\n\t\t\tif (pos < text.length && text.charCodeAt(pos) === CharacterCodes.plus || text.charCodeAt(pos) === CharacterCodes.minus) {\n\t\t\t\tpos++;\n\t\t\t}\n\t\t\tif (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\tpos++;\n\t\t\t\twhile (pos < text.length && isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\tpos++;\n\t\t\t\t}\n\t\t\t\tend = pos;\n\t\t\t} else {\n\t\t\t\tscanError = ScanError.UnexpectedEndOfNumber;\n\t\t\t}\n\t\t}\n\t\treturn text.substring(start, end);\n\t}\n\n\tfunction scanString(): string {\n\n\t\tlet result = '',\n\t\t\tstart = pos;\n\n\t\twhile (true) {\n\t\t\tif (pos >= len) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst ch = text.charCodeAt(pos);\n\t\t\tif (ch === CharacterCodes.doubleQuote) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tpos++;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (ch === CharacterCodes.backslash) {\n\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\tpos++;\n\t\t\t\tif (pos >= len) {\n\t\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tconst ch2 = text.charCodeAt(pos++);\n\t\t\t\tswitch (ch2) {\n\t\t\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\t\t\t\tresult += '\\\"';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.backslash:\n\t\t\t\t\t\tresult += '\\\\';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.slash:\n\t\t\t\t\t\tresult += '/';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.b:\n\t\t\t\t\t\tresult += '\\b';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.f:\n\t\t\t\t\t\tresult += '\\f';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.n:\n\t\t\t\t\t\tresult += '\\n';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.r:\n\t\t\t\t\t\tresult += '\\r';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.t:\n\t\t\t\t\t\tresult += '\\t';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase CharacterCodes.u:\n\t\t\t\t\t\tconst ch3 = scanHexDigits(4);\n\t\t\t\t\t\tif (ch3 >= 0) {\n\t\t\t\t\t\t\tresult += String.fromCharCode(ch3);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tscanError = ScanError.InvalidUnicode;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tscanError = ScanError.InvalidEscapeCharacter;\n\t\t\t\t}\n\t\t\t\tstart = pos;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (ch >= 0 && ch <= 0x1F) {\n\t\t\t\tif (isLineBreak(ch)) {\n\t\t\t\t\tresult += text.substring(start, pos);\n\t\t\t\t\tscanError = ScanError.UnexpectedEndOfString;\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tscanError = ScanError.InvalidCharacter;\n\t\t\t\t\t// mark as error but continue with string\n\t\t\t\t}\n\t\t\t}\n\t\t\tpos++;\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction scanNext(): SyntaxKind {\n\n\t\tvalue = '';\n\t\tscanError = ScanError.None;\n\n\t\ttokenOffset = pos;\n\n\t\tif (pos >= len) {\n\t\t\t// at the end\n\t\t\ttokenOffset = len;\n\t\t\treturn token = SyntaxKind.EOF;\n\t\t}\n\n\t\tlet code = text.charCodeAt(pos);\n\t\t// trivia: whitespace\n\t\tif (isWhitespace(code)) {\n\t\t\tdo {\n\t\t\t\tpos++;\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tcode = text.charCodeAt(pos);\n\t\t\t} while (isWhitespace(code));\n\n\t\t\treturn token = SyntaxKind.Trivia;\n\t\t}\n\n\t\t// trivia: newlines\n\t\tif (isLineBreak(code)) {\n\t\t\tpos++;\n\t\t\tvalue += String.fromCharCode(code);\n\t\t\tif (code === CharacterCodes.carriageReturn && text.charCodeAt(pos) === CharacterCodes.lineFeed) {\n\t\t\t\tpos++;\n\t\t\t\tvalue += '\\n';\n\t\t\t}\n\t\t\treturn token = SyntaxKind.LineBreakTrivia;\n\t\t}\n\n\t\tswitch (code) {\n\t\t\t// tokens: []{}:,\n\t\t\tcase CharacterCodes.openBrace:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.OpenBraceToken;\n\t\t\tcase CharacterCodes.closeBrace:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CloseBraceToken;\n\t\t\tcase CharacterCodes.openBracket:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.OpenBracketToken;\n\t\t\tcase CharacterCodes.closeBracket:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CloseBracketToken;\n\t\t\tcase CharacterCodes.colon:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.ColonToken;\n\t\t\tcase CharacterCodes.comma:\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.CommaToken;\n\n\t\t\t// strings\n\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\t\tpos++;\n\t\t\t\tvalue = scanString();\n\t\t\t\treturn token = SyntaxKind.StringLiteral;\n\n\t\t\t// comments\n\t\t\tcase CharacterCodes.slash:\n\t\t\t\tconst start = pos - 1;\n\t\t\t\t// Single-line comment\n\t\t\t\tif (text.charCodeAt(pos + 1) === CharacterCodes.slash) {\n\t\t\t\t\tpos += 2;\n\n\t\t\t\t\twhile (pos < len) {\n\t\t\t\t\t\tif (isLineBreak(text.charCodeAt(pos))) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos++;\n\n\t\t\t\t\t}\n\t\t\t\t\tvalue = text.substring(start, pos);\n\t\t\t\t\treturn token = SyntaxKind.LineCommentTrivia;\n\t\t\t\t}\n\n\t\t\t\t// Multi-line comment\n\t\t\t\tif (text.charCodeAt(pos + 1) === CharacterCodes.asterisk) {\n\t\t\t\t\tpos += 2;\n\n\t\t\t\t\tconst safeLength = len - 1; // For lookahead.\n\t\t\t\t\tlet commentClosed = false;\n\t\t\t\t\twhile (pos < safeLength) {\n\t\t\t\t\t\tconst ch = text.charCodeAt(pos);\n\n\t\t\t\t\t\tif (ch === CharacterCodes.asterisk && text.charCodeAt(pos + 1) === CharacterCodes.slash) {\n\t\t\t\t\t\t\tpos += 2;\n\t\t\t\t\t\t\tcommentClosed = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!commentClosed) {\n\t\t\t\t\t\tpos++;\n\t\t\t\t\t\tscanError = ScanError.UnexpectedEndOfComment;\n\t\t\t\t\t}\n\n\t\t\t\t\tvalue = text.substring(start, pos);\n\t\t\t\t\treturn token = SyntaxKind.BlockCommentTrivia;\n\t\t\t\t}\n\t\t\t\t// just a single slash\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.Unknown;\n\n\t\t\t// numbers\n\t\t\tcase CharacterCodes.minus:\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\tif (pos === len || !isDigit(text.charCodeAt(pos))) {\n\t\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t\t\t}\n\t\t\t// found a minus, followed by a number so\n\t\t\t// we fall through to proceed with scanning\n\t\t\t// numbers\n\t\t\tcase CharacterCodes._0:\n\t\t\tcase CharacterCodes._1:\n\t\t\tcase CharacterCodes._2:\n\t\t\tcase CharacterCodes._3:\n\t\t\tcase CharacterCodes._4:\n\t\t\tcase CharacterCodes._5:\n\t\t\tcase CharacterCodes._6:\n\t\t\tcase CharacterCodes._7:\n\t\t\tcase CharacterCodes._8:\n\t\t\tcase CharacterCodes._9:\n\t\t\t\tvalue += scanNumber();\n\t\t\t\treturn token = SyntaxKind.NumericLiteral;\n\t\t\t// literals and unknown symbols\n\t\t\tdefault:\n\t\t\t\t// is a literal? Read the full word.\n\t\t\t\twhile (pos < len && isUnknownContentCharacter(code)) {\n\t\t\t\t\tpos++;\n\t\t\t\t\tcode = text.charCodeAt(pos);\n\t\t\t\t}\n\t\t\t\tif (tokenOffset !== pos) {\n\t\t\t\t\tvalue = text.substring(tokenOffset, pos);\n\t\t\t\t\t// keywords: true, false, null\n\t\t\t\t\tswitch (value) {\n\t\t\t\t\t\tcase 'true': return token = SyntaxKind.TrueKeyword;\n\t\t\t\t\t\tcase 'false': return token = SyntaxKind.FalseKeyword;\n\t\t\t\t\t\tcase 'null': return token = SyntaxKind.NullKeyword;\n\t\t\t\t\t}\n\t\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t\t\t}\n\t\t\t\t// some\n\t\t\t\tvalue += String.fromCharCode(code);\n\t\t\t\tpos++;\n\t\t\t\treturn token = SyntaxKind.Unknown;\n\t\t}\n\t}\n\n\tfunction isUnknownContentCharacter(code: CharacterCodes) {\n\t\tif (isWhitespace(code) || isLineBreak(code)) {\n\t\t\treturn false;\n\t\t}\n\t\tswitch (code) {\n\t\t\tcase CharacterCodes.closeBrace:\n\t\t\tcase CharacterCodes.closeBracket:\n\t\t\tcase CharacterCodes.openBrace:\n\t\t\tcase CharacterCodes.openBracket:\n\t\t\tcase CharacterCodes.doubleQuote:\n\t\t\tcase CharacterCodes.colon:\n\t\t\tcase CharacterCodes.comma:\n\t\t\tcase CharacterCodes.slash:\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\n\tfunction scanNextNonTrivia(): SyntaxKind {\n\t\tlet result: SyntaxKind;\n\t\tdo {\n\t\t\tresult = scanNext();\n\t\t} while (result >= SyntaxKind.LineCommentTrivia && result <= SyntaxKind.Trivia);\n\t\treturn result;\n\t}\n\n\treturn {\n\t\tsetPosition: setPosition,\n\t\tgetPosition: () => pos,\n\t\tscan: ignoreTrivia ? scanNextNonTrivia : scanNext,\n\t\tgetToken: () => token,\n\t\tgetTokenValue: () => value,\n\t\tgetTokenOffset: () => tokenOffset,\n\t\tgetTokenLength: () => pos - tokenOffset,\n\t\tgetTokenError: () => scanError\n\t};\n}\n\nfunction isWhitespace(ch: number): boolean {\n\treturn ch === CharacterCodes.space || ch === CharacterCodes.tab || ch === CharacterCodes.verticalTab || ch === CharacterCodes.formFeed ||\n\t\tch === CharacterCodes.nonBreakingSpace || ch === CharacterCodes.ogham || ch >= CharacterCodes.enQuad && ch <= CharacterCodes.zeroWidthSpace ||\n\t\tch === CharacterCodes.narrowNoBreakSpace || ch === CharacterCodes.mathematicalSpace || ch === CharacterCodes.ideographicSpace || ch === CharacterCodes.byteOrderMark;\n}\n\nfunction isLineBreak(ch: number): boolean {\n\treturn ch === CharacterCodes.lineFeed || ch === CharacterCodes.carriageReturn || ch === CharacterCodes.lineSeparator || ch === CharacterCodes.paragraphSeparator;\n}\n\nfunction isDigit(ch: number): boolean {\n\treturn ch >= CharacterCodes._0 && ch <= CharacterCodes._9;\n}\n\nconst enum CharacterCodes {\n\tnullCharacter = 0,\n\tmaxAsciiCharacter = 0x7F,\n\n\tlineFeed = 0x0A,              // \\n\n\tcarriageReturn = 0x0D,        // \\r\n\tlineSeparator = 0x2028,\n\tparagraphSeparator = 0x2029,\n\n\t// REVIEW: do we need to support this?  The scanner doesn't, but our IText does.  This seems\n\t// like an odd disparity?  (Or maybe it's completely fine for them to be different).\n\tnextLine = 0x0085,\n\n\t// Unicode 3.0 space characters\n\tspace = 0x0020,   // \" \"\n\tnonBreakingSpace = 0x00A0,   //\n\tenQuad = 0x2000,\n\temQuad = 0x2001,\n\tenSpace = 0x2002,\n\temSpace = 0x2003,\n\tthreePerEmSpace = 0x2004,\n\tfourPerEmSpace = 0x2005,\n\tsixPerEmSpace = 0x2006,\n\tfigureSpace = 0x2007,\n\tpunctuationSpace = 0x2008,\n\tthinSpace = 0x2009,\n\thairSpace = 0x200A,\n\tzeroWidthSpace = 0x200B,\n\tnarrowNoBreakSpace = 0x202F,\n\tideographicSpace = 0x3000,\n\tmathematicalSpace = 0x205F,\n\togham = 0x1680,\n\n\t_ = 0x5F,\n\t$ = 0x24,\n\n\t_0 = 0x30,\n\t_1 = 0x31,\n\t_2 = 0x32,\n\t_3 = 0x33,\n\t_4 = 0x34,\n\t_5 = 0x35,\n\t_6 = 0x36,\n\t_7 = 0x37,\n\t_8 = 0x38,\n\t_9 = 0x39,\n\n\ta = 0x61,\n\tb = 0x62,\n\tc = 0x63,\n\td = 0x64,\n\te = 0x65,\n\tf = 0x66,\n\tg = 0x67,\n\th = 0x68,\n\ti = 0x69,\n\tj = 0x6A,\n\tk = 0x6B,\n\tl = 0x6C,\n\tm = 0x6D,\n\tn = 0x6E,\n\to = 0x6F,\n\tp = 0x70,\n\tq = 0x71,\n\tr = 0x72,\n\ts = 0x73,\n\tt = 0x74,\n\tu = 0x75,\n\tv = 0x76,\n\tw = 0x77,\n\tx = 0x78,\n\ty = 0x79,\n\tz = 0x7A,\n\n\tA = 0x41,\n\tB = 0x42,\n\tC = 0x43,\n\tD = 0x44,\n\tE = 0x45,\n\tF = 0x46,\n\tG = 0x47,\n\tH = 0x48,\n\tI = 0x49,\n\tJ = 0x4A,\n\tK = 0x4B,\n\tL = 0x4C,\n\tM = 0x4D,\n\tN = 0x4E,\n\tO = 0x4F,\n\tP = 0x50,\n\tQ = 0x51,\n\tR = 0x52,\n\tS = 0x53,\n\tT = 0x54,\n\tU = 0x55,\n\tV = 0x56,\n\tW = 0x57,\n\tX = 0x58,\n\tY = 0x59,\n\tZ = 0x5A,\n\n\tampersand = 0x26,             // &\n\tasterisk = 0x2A,              // *\n\tat = 0x40,                    // @\n\tbackslash = 0x5C,             // \\\n\tbar = 0x7C,                   // |\n\tcaret = 0x5E,                 // ^\n\tcloseBrace = 0x7D,            // }\n\tcloseBracket = 0x5D,          // ]\n\tcloseParen = 0x29,            // )\n\tcolon = 0x3A,                 // :\n\tcomma = 0x2C,                 // ,\n\tdot = 0x2E,                   // .\n\tdoubleQuote = 0x22,           // \"\n\tequals = 0x3D,                // =\n\texclamation = 0x21,           // !\n\tgreaterThan = 0x3E,           // >\n\tlessThan = 0x3C,              // <\n\tminus = 0x2D,                 // -\n\topenBrace = 0x7B,             // {\n\topenBracket = 0x5B,           // [\n\topenParen = 0x28,             // (\n\tpercent = 0x25,               // %\n\tplus = 0x2B,                  // +\n\tquestion = 0x3F,              // ?\n\tsemicolon = 0x3B,             // ;\n\tsingleQuote = 0x27,           // '\n\tslash = 0x2F,                 // /\n\ttilde = 0x7E,                 // ~\n\n\tbackspace = 0x08,             // \\b\n\tformFeed = 0x0C,              // \\f\n\tbyteOrderMark = 0xFEFF,\n\ttab = 0x09,                   // \\t\n\tverticalTab = 0x0B,           // \\v\n}\n\ninterface NodeImpl extends Node {\n\ttype: NodeType;\n\tvalue?: any;\n\toffset: number;\n\tlength: number;\n\tcolonOffset?: number;\n\tparent?: NodeImpl;\n\tchildren?: NodeImpl[];\n}\n\n/**\n * For a given offset, evaluate the location in the JSON document. Each segment in the location path is either a property name or an array index.\n */\nexport function getLocation(text: string, position: number): Location {\n\tconst segments: Segment[] = []; // strings or numbers\n\tconst earlyReturnException = new Object();\n\tlet previousNode: NodeImpl | undefined = undefined;\n\tconst previousNodeInst: NodeImpl = {\n\t\tvalue: {},\n\t\toffset: 0,\n\t\tlength: 0,\n\t\ttype: 'object',\n\t\tparent: undefined\n\t};\n\tlet isAtPropertyKey = false;\n\tfunction setPreviousNode(value: string, offset: number, length: number, type: NodeType) {\n\t\tpreviousNodeInst.value = value;\n\t\tpreviousNodeInst.offset = offset;\n\t\tpreviousNodeInst.length = length;\n\t\tpreviousNodeInst.type = type;\n\t\tpreviousNodeInst.colonOffset = undefined;\n\t\tpreviousNode = previousNodeInst;\n\t}\n\ttry {\n\n\t\tvisit(text, {\n\t\t\tonObjectBegin: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tisAtPropertyKey = position > offset;\n\t\t\t\tsegments.push(''); // push a placeholder (will be replaced)\n\t\t\t},\n\t\t\tonObjectProperty: (name: string, offset: number, length: number) => {\n\t\t\t\tif (position < offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tsetPreviousNode(name, offset, length, 'property');\n\t\t\t\tsegments[segments.length - 1] = name;\n\t\t\t\tif (position <= offset + length) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonObjectEnd: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.pop();\n\t\t\t},\n\t\t\tonArrayBegin: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.push(0);\n\t\t\t},\n\t\t\tonArrayEnd: (offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tpreviousNode = undefined;\n\t\t\t\tsegments.pop();\n\t\t\t},\n\t\t\tonLiteralValue: (value: any, offset: number, length: number) => {\n\t\t\t\tif (position < offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tsetPreviousNode(value, offset, length, getNodeType(value));\n\n\t\t\t\tif (position <= offset + length) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t},\n\t\t\tonSeparator: (sep: string, offset: number, length: number) => {\n\t\t\t\tif (position <= offset) {\n\t\t\t\t\tthrow earlyReturnException;\n\t\t\t\t}\n\t\t\t\tif (sep === ':' && previousNode && previousNode.type === 'property') {\n\t\t\t\t\tpreviousNode.colonOffset = offset;\n\t\t\t\t\tisAtPropertyKey = false;\n\t\t\t\t\tpreviousNode = undefined;\n\t\t\t\t} else if (sep === ',') {\n\t\t\t\t\tconst last = segments[segments.length - 1];\n\t\t\t\t\tif (typeof last === 'number') {\n\t\t\t\t\t\tsegments[segments.length - 1] = last + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tisAtPropertyKey = true;\n\t\t\t\t\t\tsegments[segments.length - 1] = '';\n\t\t\t\t\t}\n\t\t\t\t\tpreviousNode = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} catch (e) {\n\t\tif (e !== earlyReturnException) {\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\treturn {\n\t\tpath: segments,\n\t\tpreviousNode,\n\t\tisAtPropertyKey,\n\t\tmatches: (pattern: Segment[]) => {\n\t\t\tlet k = 0;\n\t\t\tfor (let i = 0; k < pattern.length && i < segments.length; i++) {\n\t\t\t\tif (pattern[k] === segments[i] || pattern[k] === '*') {\n\t\t\t\t\tk++;\n\t\t\t\t} else if (pattern[k] !== '**') {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn k === pattern.length;\n\t\t}\n\t};\n}\n\n\n/**\n * Parses the given text and returns the object the JSON content represents. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n * Therefore always check the errors list to find out if the input was valid.\n */\nexport function parse(text: string, errors: ParseError[] = [], options: ParseOptions = ParseOptions.DEFAULT): any {\n\tlet currentProperty: string | null = null;\n\tlet currentParent: any = [];\n\tconst previousParents: any[] = [];\n\n\tfunction onValue(value: any) {\n\t\tif (Array.isArray(currentParent)) {\n\t\t\t(<any[]>currentParent).push(value);\n\t\t} else if (currentProperty !== null) {\n\t\t\tcurrentParent[currentProperty] = value;\n\t\t}\n\t}\n\n\tconst visitor: JSONVisitor = {\n\t\tonObjectBegin: () => {\n\t\t\tconst object = {};\n\t\t\tonValue(object);\n\t\t\tpreviousParents.push(currentParent);\n\t\t\tcurrentParent = object;\n\t\t\tcurrentProperty = null;\n\t\t},\n\t\tonObjectProperty: (name: string) => {\n\t\t\tcurrentProperty = name;\n\t\t},\n\t\tonObjectEnd: () => {\n\t\t\tcurrentParent = previousParents.pop();\n\t\t},\n\t\tonArrayBegin: () => {\n\t\t\tconst array: any[] = [];\n\t\t\tonValue(array);\n\t\t\tpreviousParents.push(currentParent);\n\t\t\tcurrentParent = array;\n\t\t\tcurrentProperty = null;\n\t\t},\n\t\tonArrayEnd: () => {\n\t\t\tcurrentParent = previousParents.pop();\n\t\t},\n\t\tonLiteralValue: onValue,\n\t\tonError: (error: ParseErrorCode, offset: number, length: number) => {\n\t\t\terrors.push({ error, offset, length });\n\t\t}\n\t};\n\tvisit(text, visitor, options);\n\treturn currentParent[0];\n}\n\n\n/**\n * Parses the given text and returns a tree representation the JSON content. On invalid input, the parser tries to be as fault tolerant as possible, but still return a result.\n */\nexport function parseTree(text: string, errors: ParseError[] = [], options: ParseOptions = ParseOptions.DEFAULT): Node {\n\tlet currentParent: NodeImpl = { type: 'array', offset: -1, length: -1, children: [], parent: undefined }; // artificial root\n\n\tfunction ensurePropertyComplete(endOffset: number) {\n\t\tif (currentParent.type === 'property') {\n\t\t\tcurrentParent.length = endOffset - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t}\n\t}\n\n\tfunction onValue(valueNode: Node): Node {\n\t\tcurrentParent.children!.push(valueNode);\n\t\treturn valueNode;\n\t}\n\n\tconst visitor: JSONVisitor = {\n\t\tonObjectBegin: (offset: number) => {\n\t\t\tcurrentParent = onValue({ type: 'object', offset, length: -1, parent: currentParent, children: [] });\n\t\t},\n\t\tonObjectProperty: (name: string, offset: number, length: number) => {\n\t\t\tcurrentParent = onValue({ type: 'property', offset, length: -1, parent: currentParent, children: [] });\n\t\t\tcurrentParent.children!.push({ type: 'string', value: name, offset, length, parent: currentParent });\n\t\t},\n\t\tonObjectEnd: (offset: number, length: number) => {\n\t\t\tcurrentParent.length = offset + length - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonArrayBegin: (offset: number, length: number) => {\n\t\t\tcurrentParent = onValue({ type: 'array', offset, length: -1, parent: currentParent, children: [] });\n\t\t},\n\t\tonArrayEnd: (offset: number, length: number) => {\n\t\t\tcurrentParent.length = offset + length - currentParent.offset;\n\t\t\tcurrentParent = currentParent.parent!;\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonLiteralValue: (value: any, offset: number, length: number) => {\n\t\t\tonValue({ type: getNodeType(value), offset, length, parent: currentParent, value });\n\t\t\tensurePropertyComplete(offset + length);\n\t\t},\n\t\tonSeparator: (sep: string, offset: number, length: number) => {\n\t\t\tif (currentParent.type === 'property') {\n\t\t\t\tif (sep === ':') {\n\t\t\t\t\tcurrentParent.colonOffset = offset;\n\t\t\t\t} else if (sep === ',') {\n\t\t\t\t\tensurePropertyComplete(offset);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tonError: (error: ParseErrorCode, offset: number, length: number) => {\n\t\t\terrors.push({ error, offset, length });\n\t\t}\n\t};\n\tvisit(text, visitor, options);\n\n\tconst result = currentParent.children![0];\n\tif (result) {\n\t\tdelete result.parent;\n\t}\n\treturn result;\n}\n\n/**\n * Finds the node at the given path in a JSON DOM.\n */\nexport function findNodeAtLocation(root: Node, path: JSONPath): Node | undefined {\n\tif (!root) {\n\t\treturn undefined;\n\t}\n\tlet node = root;\n\tfor (let segment of path) {\n\t\tif (typeof segment === 'string') {\n\t\t\tif (node.type !== 'object' || !Array.isArray(node.children)) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tlet found = false;\n\t\t\tfor (const propertyNode of node.children) {\n\t\t\t\tif (Array.isArray(propertyNode.children) && propertyNode.children[0].value === segment) {\n\t\t\t\t\tnode = propertyNode.children[1];\n\t\t\t\t\tfound = true;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!found) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t} else {\n\t\t\tconst index = <number>segment;\n\t\t\tif (node.type !== 'array' || index < 0 || !Array.isArray(node.children) || index >= node.children.length) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tnode = node.children[index];\n\t\t}\n\t}\n\treturn node;\n}\n\n/**\n * Gets the JSON path of the given JSON DOM node\n */\nexport function getNodePath(node: Node): JSONPath {\n\tif (!node.parent || !node.parent.children) {\n\t\treturn [];\n\t}\n\tconst path = getNodePath(node.parent);\n\tif (node.parent.type === 'property') {\n\t\tconst key = node.parent.children[0].value;\n\t\tpath.push(key);\n\t} else if (node.parent.type === 'array') {\n\t\tconst index = node.parent.children.indexOf(node);\n\t\tif (index !== -1) {\n\t\t\tpath.push(index);\n\t\t}\n\t}\n\treturn path;\n}\n\n/**\n * Evaluates the JavaScript object of the given JSON DOM node\n */\nexport function getNodeValue(node: Node): any {\n\tswitch (node.type) {\n\t\tcase 'array':\n\t\t\treturn node.children!.map(getNodeValue);\n\t\tcase 'object':\n\t\t\tconst obj = Object.create(null);\n\t\t\tfor (let prop of node.children!) {\n\t\t\t\tconst valueNode = prop.children![1];\n\t\t\t\tif (valueNode) {\n\t\t\t\t\tobj[prop.children![0].value] = getNodeValue(valueNode);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn obj;\n\t\tcase 'null':\n\t\tcase 'string':\n\t\tcase 'number':\n\t\tcase 'boolean':\n\t\t\treturn node.value;\n\t\tdefault:\n\t\t\treturn undefined;\n\t}\n\n}\n\nexport function contains(node: Node, offset: number, includeRightBound = false): boolean {\n\treturn (offset >= node.offset && offset < (node.offset + node.length)) || includeRightBound && (offset === (node.offset + node.length));\n}\n\n/**\n * Finds the most inner node at the given offset. If includeRightBound is set, also finds nodes that end at the given offset.\n */\nexport function findNodeAtOffset(node: Node, offset: number, includeRightBound = false): Node | undefined {\n\tif (contains(node, offset, includeRightBound)) {\n\t\tconst children = node.children;\n\t\tif (Array.isArray(children)) {\n\t\t\tfor (let i = 0; i < children.length && children[i].offset <= offset; i++) {\n\t\t\t\tconst item = findNodeAtOffset(children[i], offset, includeRightBound);\n\t\t\t\tif (item) {\n\t\t\t\t\treturn item;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\treturn node;\n\t}\n\treturn undefined;\n}\n\n\n/**\n * Parses the given text and invokes the visitor functions for each object, array and literal reached.\n */\nexport function visit(text: string, visitor: JSONVisitor, options: ParseOptions = ParseOptions.DEFAULT): any {\n\n\tconst _scanner = createScanner(text, false);\n\n\tfunction toNoArgVisit(visitFunction?: (offset: number, length: number) => void): () => void {\n\t\treturn visitFunction ? () => visitFunction(_scanner.getTokenOffset(), _scanner.getTokenLength()) : () => true;\n\t}\n\tfunction toOneArgVisit<T>(visitFunction?: (arg: T, offset: number, length: number) => void): (arg: T) => void {\n\t\treturn visitFunction ? (arg: T) => visitFunction(arg, _scanner.getTokenOffset(), _scanner.getTokenLength()) : () => true;\n\t}\n\n\tconst onObjectBegin = toNoArgVisit(visitor.onObjectBegin),\n\t\tonObjectProperty = toOneArgVisit(visitor.onObjectProperty),\n\t\tonObjectEnd = toNoArgVisit(visitor.onObjectEnd),\n\t\tonArrayBegin = toNoArgVisit(visitor.onArrayBegin),\n\t\tonArrayEnd = toNoArgVisit(visitor.onArrayEnd),\n\t\tonLiteralValue = toOneArgVisit(visitor.onLiteralValue),\n\t\tonSeparator = toOneArgVisit(visitor.onSeparator),\n\t\tonComment = toNoArgVisit(visitor.onComment),\n\t\tonError = toOneArgVisit(visitor.onError);\n\n\tconst disallowComments = options && options.disallowComments;\n\tconst allowTrailingComma = options && options.allowTrailingComma;\n\tfunction scanNext(): SyntaxKind {\n\t\twhile (true) {\n\t\t\tconst token = _scanner.scan();\n\t\t\tswitch (_scanner.getTokenError()) {\n\t\t\t\tcase ScanError.InvalidUnicode:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidUnicode);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.InvalidEscapeCharacter:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidEscapeCharacter);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfNumber:\n\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfNumber);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfComment:\n\t\t\t\t\tif (!disallowComments) {\n\t\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfComment);\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.UnexpectedEndOfString:\n\t\t\t\t\thandleError(ParseErrorCode.UnexpectedEndOfString);\n\t\t\t\t\tbreak;\n\t\t\t\tcase ScanError.InvalidCharacter:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidCharacter);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tswitch (token) {\n\t\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\t\t\tif (disallowComments) {\n\t\t\t\t\t\thandleError(ParseErrorCode.InvalidCommentToken);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tonComment();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Unknown:\n\t\t\t\t\thandleError(ParseErrorCode.InvalidSymbol);\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Trivia:\n\t\t\t\tcase SyntaxKind.LineBreakTrivia:\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn token;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction handleError(error: ParseErrorCode, skipUntilAfter: SyntaxKind[] = [], skipUntil: SyntaxKind[] = []): void {\n\t\tonError(error);\n\t\tif (skipUntilAfter.length + skipUntil.length > 0) {\n\t\t\tlet token = _scanner.getToken();\n\t\t\twhile (token !== SyntaxKind.EOF) {\n\t\t\t\tif (skipUntilAfter.indexOf(token) !== -1) {\n\t\t\t\t\tscanNext();\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (skipUntil.indexOf(token) !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\ttoken = scanNext();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction parseString(isValue: boolean): boolean {\n\t\tconst value = _scanner.getTokenValue();\n\t\tif (isValue) {\n\t\t\tonLiteralValue(value);\n\t\t} else {\n\t\t\tonObjectProperty(value);\n\t\t}\n\t\tscanNext();\n\t\treturn true;\n\t}\n\n\tfunction parseLiteral(): boolean {\n\t\tswitch (_scanner.getToken()) {\n\t\t\tcase SyntaxKind.NumericLiteral:\n\t\t\t\tlet value = 0;\n\t\t\t\ttry {\n\t\t\t\t\tvalue = JSON.parse(_scanner.getTokenValue());\n\t\t\t\t\tif (typeof value !== 'number') {\n\t\t\t\t\t\thandleError(ParseErrorCode.InvalidNumberFormat);\n\t\t\t\t\t\tvalue = 0;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\thandleError(ParseErrorCode.InvalidNumberFormat);\n\t\t\t\t}\n\t\t\t\tonLiteralValue(value);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.NullKeyword:\n\t\t\t\tonLiteralValue(null);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.TrueKeyword:\n\t\t\t\tonLiteralValue(true);\n\t\t\t\tbreak;\n\t\t\tcase SyntaxKind.FalseKeyword:\n\t\t\t\tonLiteralValue(false);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\treturn false;\n\t\t}\n\t\tscanNext();\n\t\treturn true;\n\t}\n\n\tfunction parseProperty(): boolean {\n\t\tif (_scanner.getToken() !== SyntaxKind.StringLiteral) {\n\t\t\thandleError(ParseErrorCode.PropertyNameExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\treturn false;\n\t\t}\n\t\tparseString(false);\n\t\tif (_scanner.getToken() === SyntaxKind.ColonToken) {\n\t\t\tonSeparator(':');\n\t\t\tscanNext(); // consume colon\n\n\t\t\tif (!parseValue()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t} else {\n\t\t\thandleError(ParseErrorCode.ColonExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseObject(): boolean {\n\t\tonObjectBegin();\n\t\tscanNext(); // consume open brace\n\n\t\tlet needsComma = false;\n\t\twhile (_scanner.getToken() !== SyntaxKind.CloseBraceToken && _scanner.getToken() !== SyntaxKind.EOF) {\n\t\t\tif (_scanner.getToken() === SyntaxKind.CommaToken) {\n\t\t\t\tif (!needsComma) {\n\t\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\t\t\t}\n\t\t\t\tonSeparator(',');\n\t\t\t\tscanNext(); // consume comma\n\t\t\t\tif (_scanner.getToken() === SyntaxKind.CloseBraceToken && allowTrailingComma) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (needsComma) {\n\t\t\t\thandleError(ParseErrorCode.CommaExpected, [], []);\n\t\t\t}\n\t\t\tif (!parseProperty()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBraceToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t\tneedsComma = true;\n\t\t}\n\t\tonObjectEnd();\n\t\tif (_scanner.getToken() !== SyntaxKind.CloseBraceToken) {\n\t\t\thandleError(ParseErrorCode.CloseBraceExpected, [SyntaxKind.CloseBraceToken], []);\n\t\t} else {\n\t\t\tscanNext(); // consume close brace\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseArray(): boolean {\n\t\tonArrayBegin();\n\t\tscanNext(); // consume open bracket\n\n\t\tlet needsComma = false;\n\t\twhile (_scanner.getToken() !== SyntaxKind.CloseBracketToken && _scanner.getToken() !== SyntaxKind.EOF) {\n\t\t\tif (_scanner.getToken() === SyntaxKind.CommaToken) {\n\t\t\t\tif (!needsComma) {\n\t\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\t\t\t}\n\t\t\t\tonSeparator(',');\n\t\t\t\tscanNext(); // consume comma\n\t\t\t\tif (_scanner.getToken() === SyntaxKind.CloseBracketToken && allowTrailingComma) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (needsComma) {\n\t\t\t\thandleError(ParseErrorCode.CommaExpected, [], []);\n\t\t\t}\n\t\t\tif (!parseValue()) {\n\t\t\t\thandleError(ParseErrorCode.ValueExpected, [], [SyntaxKind.CloseBracketToken, SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t\tneedsComma = true;\n\t\t}\n\t\tonArrayEnd();\n\t\tif (_scanner.getToken() !== SyntaxKind.CloseBracketToken) {\n\t\t\thandleError(ParseErrorCode.CloseBracketExpected, [SyntaxKind.CloseBracketToken], []);\n\t\t} else {\n\t\t\tscanNext(); // consume close bracket\n\t\t}\n\t\treturn true;\n\t}\n\n\tfunction parseValue(): boolean {\n\t\tswitch (_scanner.getToken()) {\n\t\t\tcase SyntaxKind.OpenBracketToken:\n\t\t\t\treturn parseArray();\n\t\t\tcase SyntaxKind.OpenBraceToken:\n\t\t\t\treturn parseObject();\n\t\t\tcase SyntaxKind.StringLiteral:\n\t\t\t\treturn parseString(true);\n\t\t\tdefault:\n\t\t\t\treturn parseLiteral();\n\t\t}\n\t}\n\n\tscanNext();\n\tif (_scanner.getToken() === SyntaxKind.EOF) {\n\t\tif (options.allowEmptyContent) {\n\t\t\treturn true;\n\t\t}\n\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\treturn false;\n\t}\n\tif (!parseValue()) {\n\t\thandleError(ParseErrorCode.ValueExpected, [], []);\n\t\treturn false;\n\t}\n\tif (_scanner.getToken() !== SyntaxKind.EOF) {\n\t\thandleError(ParseErrorCode.EndOfFileExpected, [], []);\n\t}\n\treturn true;\n}\n\n/**\n * Takes JSON with JavaScript-style comments and remove\n * them. Optionally replaces every none-newline character\n * of comments with a replaceCharacter\n */\nexport function stripComments(text: string, replaceCh?: string): string {\n\n\tlet _scanner = createScanner(text),\n\t\tparts: string[] = [],\n\t\tkind: SyntaxKind,\n\t\toffset = 0,\n\t\tpos: number;\n\n\tdo {\n\t\tpos = _scanner.getPosition();\n\t\tkind = _scanner.scan();\n\t\tswitch (kind) {\n\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\tcase SyntaxKind.EOF:\n\t\t\t\tif (offset !== pos) {\n\t\t\t\t\tparts.push(text.substring(offset, pos));\n\t\t\t\t}\n\t\t\t\tif (replaceCh !== undefined) {\n\t\t\t\t\tparts.push(_scanner.getTokenValue().replace(/[^\\r\\n]/g, replaceCh));\n\t\t\t\t}\n\t\t\t\toffset = _scanner.getPosition();\n\t\t\t\tbreak;\n\t\t}\n\t} while (kind !== SyntaxKind.EOF);\n\n\treturn parts.join('');\n}\n\nexport function getNodeType(value: any): NodeType {\n\tswitch (typeof value) {\n\t\tcase 'boolean': return 'boolean';\n\t\tcase 'number': return 'number';\n\t\tcase 'string': return 'string';\n\t\tcase 'object': {\n\t\t\tif (!value) {\n\t\t\t\treturn 'null';\n\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\treturn 'array';\n\t\t\t}\n\t\t\treturn 'object';\n\t\t}\n\t\tdefault: return 'null';\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createScanner, ScanError, SyntaxKind } from './json';\n\nexport interface FormattingOptions {\n\t/**\n\t * If indentation is based on spaces (`insertSpaces` = true), then what is the number of spaces that make an indent?\n\t */\n\ttabSize?: number;\n\t/**\n\t * Is indentation based on spaces?\n\t */\n\tinsertSpaces?: boolean;\n\t/**\n\t * The default 'end of line' character. If not set, '\\n' is used as default.\n\t */\n\teol?: string;\n}\n\n/**\n * Represents a text modification\n */\nexport interface Edit {\n\t/**\n\t * The start offset of the modification.\n\t */\n\toffset: number;\n\t/**\n\t * The length of the modification. Must not be negative. Empty length represents an *insert*.\n\t */\n\tlength: number;\n\t/**\n\t * The new content. Empty content represents a *remove*.\n\t */\n\tcontent: string;\n}\n\n/**\n * A text range in the document\n*/\nexport interface Range {\n\t/**\n\t * The start offset of the range.\n\t */\n\toffset: number;\n\t/**\n\t * The length of the range. Must not be negative.\n\t */\n\tlength: number;\n}\n\n\nexport function format(documentText: string, range: Range | undefined, options: FormattingOptions): Edit[] {\n\tlet initialIndentLevel: number;\n\tlet formatText: string;\n\tlet formatTextStart: number;\n\tlet rangeStart: number;\n\tlet rangeEnd: number;\n\tif (range) {\n\t\trangeStart = range.offset;\n\t\trangeEnd = rangeStart + range.length;\n\n\t\tformatTextStart = rangeStart;\n\t\twhile (formatTextStart > 0 && !isEOL(documentText, formatTextStart - 1)) {\n\t\t\tformatTextStart--;\n\t\t}\n\t\tlet endOffset = rangeEnd;\n\t\twhile (endOffset < documentText.length && !isEOL(documentText, endOffset)) {\n\t\t\tendOffset++;\n\t\t}\n\t\tformatText = documentText.substring(formatTextStart, endOffset);\n\t\tinitialIndentLevel = computeIndentLevel(formatText, options);\n\t} else {\n\t\tformatText = documentText;\n\t\tinitialIndentLevel = 0;\n\t\tformatTextStart = 0;\n\t\trangeStart = 0;\n\t\trangeEnd = documentText.length;\n\t}\n\tconst eol = getEOL(options, documentText);\n\n\tlet lineBreak = false;\n\tlet indentLevel = 0;\n\tlet indentValue: string;\n\tif (options.insertSpaces) {\n\t\tindentValue = repeat(' ', options.tabSize || 4);\n\t} else {\n\t\tindentValue = '\\t';\n\t}\n\n\tconst scanner = createScanner(formatText, false);\n\tlet hasError = false;\n\n\tfunction newLineAndIndent(): string {\n\t\treturn eol + repeat(indentValue, initialIndentLevel + indentLevel);\n\t}\n\tfunction scanNext(): SyntaxKind {\n\t\tlet token = scanner.scan();\n\t\tlineBreak = false;\n\t\twhile (token === SyntaxKind.Trivia || token === SyntaxKind.LineBreakTrivia) {\n\t\t\tlineBreak = lineBreak || (token === SyntaxKind.LineBreakTrivia);\n\t\t\ttoken = scanner.scan();\n\t\t}\n\t\thasError = token === SyntaxKind.Unknown || scanner.getTokenError() !== ScanError.None;\n\t\treturn token;\n\t}\n\tconst editOperations: Edit[] = [];\n\tfunction addEdit(text: string, startOffset: number, endOffset: number) {\n\t\tif (!hasError && startOffset < rangeEnd && endOffset > rangeStart && documentText.substring(startOffset, endOffset) !== text) {\n\t\t\teditOperations.push({ offset: startOffset, length: endOffset - startOffset, content: text });\n\t\t}\n\t}\n\n\tlet firstToken = scanNext();\n\n\tif (firstToken !== SyntaxKind.EOF) {\n\t\tconst firstTokenStart = scanner.getTokenOffset() + formatTextStart;\n\t\tconst initialIndent = repeat(indentValue, initialIndentLevel);\n\t\taddEdit(initialIndent, formatTextStart, firstTokenStart);\n\t}\n\n\twhile (firstToken !== SyntaxKind.EOF) {\n\t\tlet firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n\t\tlet secondToken = scanNext();\n\n\t\tlet replaceContent = '';\n\t\twhile (!lineBreak && (secondToken === SyntaxKind.LineCommentTrivia || secondToken === SyntaxKind.BlockCommentTrivia)) {\n\t\t\t// comments on the same line: keep them on the same line, but ignore them otherwise\n\t\t\tconst commentTokenStart = scanner.getTokenOffset() + formatTextStart;\n\t\t\taddEdit(' ', firstTokenEnd, commentTokenStart);\n\t\t\tfirstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + formatTextStart;\n\t\t\treplaceContent = secondToken === SyntaxKind.LineCommentTrivia ? newLineAndIndent() : '';\n\t\t\tsecondToken = scanNext();\n\t\t}\n\n\t\tif (secondToken === SyntaxKind.CloseBraceToken) {\n\t\t\tif (firstToken !== SyntaxKind.OpenBraceToken) {\n\t\t\t\tindentLevel--;\n\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t}\n\t\t} else if (secondToken === SyntaxKind.CloseBracketToken) {\n\t\t\tif (firstToken !== SyntaxKind.OpenBracketToken) {\n\t\t\t\tindentLevel--;\n\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (firstToken) {\n\t\t\t\tcase SyntaxKind.OpenBracketToken:\n\t\t\t\tcase SyntaxKind.OpenBraceToken:\n\t\t\t\t\tindentLevel++;\n\t\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.CommaToken:\n\t\t\t\tcase SyntaxKind.LineCommentTrivia:\n\t\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.BlockCommentTrivia:\n\t\t\t\t\tif (lineBreak) {\n\t\t\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// symbol following comment on the same line: keep on same line, separate with ' '\n\t\t\t\t\t\treplaceContent = ' ';\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.ColonToken:\n\t\t\t\t\treplaceContent = ' ';\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.StringLiteral:\n\t\t\t\t\tif (secondToken === SyntaxKind.ColonToken) {\n\t\t\t\t\t\treplaceContent = '';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t// fall through\n\t\t\t\tcase SyntaxKind.NullKeyword:\n\t\t\t\tcase SyntaxKind.TrueKeyword:\n\t\t\t\tcase SyntaxKind.FalseKeyword:\n\t\t\t\tcase SyntaxKind.NumericLiteral:\n\t\t\t\tcase SyntaxKind.CloseBraceToken:\n\t\t\t\tcase SyntaxKind.CloseBracketToken:\n\t\t\t\t\tif (secondToken === SyntaxKind.LineCommentTrivia || secondToken === SyntaxKind.BlockCommentTrivia) {\n\t\t\t\t\t\treplaceContent = ' ';\n\t\t\t\t\t} else if (secondToken !== SyntaxKind.CommaToken && secondToken !== SyntaxKind.EOF) {\n\t\t\t\t\t\thasError = true;\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase SyntaxKind.Unknown:\n\t\t\t\t\thasError = true;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (lineBreak && (secondToken === SyntaxKind.LineCommentTrivia || secondToken === SyntaxKind.BlockCommentTrivia)) {\n\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t}\n\n\t\t}\n\t\tconst secondTokenStart = scanner.getTokenOffset() + formatTextStart;\n\t\taddEdit(replaceContent, firstTokenEnd, secondTokenStart);\n\t\tfirstToken = secondToken;\n\t}\n\treturn editOperations;\n}\n\nfunction repeat(s: string, count: number): string {\n\tlet result = '';\n\tfor (let i = 0; i < count; i++) {\n\t\tresult += s;\n\t}\n\treturn result;\n}\n\nfunction computeIndentLevel(content: string, options: FormattingOptions): number {\n\tlet i = 0;\n\tlet nChars = 0;\n\tconst tabSize = options.tabSize || 4;\n\twhile (i < content.length) {\n\t\tconst ch = content.charAt(i);\n\t\tif (ch === ' ') {\n\t\t\tnChars++;\n\t\t} else if (ch === '\\t') {\n\t\t\tnChars += tabSize;\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\treturn Math.floor(nChars / tabSize);\n}\n\nexport function getEOL(options: FormattingOptions, text: string): string {\n\tfor (let i = 0; i < text.length; i++) {\n\t\tconst ch = text.charAt(i);\n\t\tif (ch === '\\r') {\n\t\t\tif (i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n\t\t\t\treturn '\\r\\n';\n\t\t\t}\n\t\t\treturn '\\r';\n\t\t} else if (ch === '\\n') {\n\t\t\treturn '\\n';\n\t\t}\n\t}\n\treturn (options && options.eol) || '\\n';\n}\n\nexport function isEOL(text: string, offset: number) {\n\treturn '\\r\\n'.indexOf(text.charAt(offset)) !== -1;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { findNodeAtLocation, JSONPath, Node, ParseError, parseTree, Segment } from './json';\nimport { Edit, format, FormattingOptions, isEOL } from './jsonFormatter';\n\n\nexport function removeProperty(text: string, path: JSONPath, formattingOptions: FormattingOptions): Edit[] {\n\treturn setProperty(text, path, undefined, formattingOptions);\n}\n\nexport function setProperty(text: string, originalPath: JSONPath, value: any, formattingOptions: FormattingOptions, getInsertionIndex?: (properties: string[]) => number): Edit[] {\n\tconst path = originalPath.slice();\n\tconst errors: ParseError[] = [];\n\tconst root = parseTree(text, errors);\n\tlet parent: Node | undefined = undefined;\n\n\tlet lastSegment: Segment | undefined = undefined;\n\twhile (path.length > 0) {\n\t\tlastSegment = path.pop();\n\t\tparent = findNodeAtLocation(root, path);\n\t\tif (parent === undefined && value !== undefined) {\n\t\t\tif (typeof lastSegment === 'string') {\n\t\t\t\tvalue = { [lastSegment]: value };\n\t\t\t} else {\n\t\t\t\tvalue = [value];\n\t\t\t}\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (!parent) {\n\t\t// empty document\n\t\tif (value === undefined) { // delete\n\t\t\tthrow new Error('Can not delete in empty document');\n\t\t}\n\t\treturn withFormatting(text, { offset: root ? root.offset : 0, length: root ? root.length : 0, content: JSON.stringify(value) }, formattingOptions);\n\t} else if (parent.type === 'object' && typeof lastSegment === 'string' && Array.isArray(parent.children)) {\n\t\tconst existing = findNodeAtLocation(parent, [lastSegment]);\n\t\tif (existing !== undefined) {\n\t\t\tif (value === undefined) { // delete\n\t\t\t\tif (!existing.parent) {\n\t\t\t\t\tthrow new Error('Malformed AST');\n\t\t\t\t}\n\t\t\t\tconst propertyIndex = parent.children.indexOf(existing.parent);\n\t\t\t\tlet removeBegin: number;\n\t\t\t\tlet removeEnd = existing.parent.offset + existing.parent.length;\n\t\t\t\tif (propertyIndex > 0) {\n\t\t\t\t\t// remove the comma of the previous node\n\t\t\t\t\tconst previous = parent.children[propertyIndex - 1];\n\t\t\t\t\tremoveBegin = previous.offset + previous.length;\n\t\t\t\t} else {\n\t\t\t\t\tremoveBegin = parent.offset + 1;\n\t\t\t\t\tif (parent.children.length > 1) {\n\t\t\t\t\t\t// remove the comma of the next node\n\t\t\t\t\t\tconst next = parent.children[1];\n\t\t\t\t\t\tremoveEnd = next.offset;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn withFormatting(text, { offset: removeBegin, length: removeEnd - removeBegin, content: '' }, formattingOptions);\n\t\t\t} else {\n\t\t\t\t// set value of existing property\n\t\t\t\treturn withFormatting(text, { offset: existing.offset, length: existing.length, content: JSON.stringify(value) }, formattingOptions);\n\t\t\t}\n\t\t} else {\n\t\t\tif (value === undefined) { // delete\n\t\t\t\treturn []; // property does not exist, nothing to do\n\t\t\t}\n\t\t\tconst newProperty = `${JSON.stringify(lastSegment)}: ${JSON.stringify(value)}`;\n\t\t\tconst index = getInsertionIndex ? getInsertionIndex(parent.children.map(p => p.children![0].value)) : parent.children.length;\n\t\t\tlet edit: Edit;\n\t\t\tif (index > 0) {\n\t\t\t\tconst previous = parent.children[index - 1];\n\t\t\t\tedit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n\t\t\t} else if (parent.children.length === 0) {\n\t\t\t\tedit = { offset: parent.offset + 1, length: 0, content: newProperty };\n\t\t\t} else {\n\t\t\t\tedit = { offset: parent.offset + 1, length: 0, content: newProperty + ',' };\n\t\t\t}\n\t\t\treturn withFormatting(text, edit, formattingOptions);\n\t\t}\n\t} else if (parent.type === 'array' && typeof lastSegment === 'number' && Array.isArray(parent.children)) {\n\t\tif (value !== undefined) {\n\t\t\t// Insert\n\t\t\tconst newProperty = `${JSON.stringify(value)}`;\n\t\t\tlet edit: Edit;\n\t\t\tif (parent.children.length === 0 || lastSegment === 0) {\n\t\t\t\tedit = { offset: parent.offset + 1, length: 0, content: parent.children.length === 0 ? newProperty : newProperty + ',' };\n\t\t\t} else {\n\t\t\t\tconst index = lastSegment === -1 || lastSegment > parent.children.length ? parent.children.length : lastSegment;\n\t\t\t\tconst previous = parent.children[index - 1];\n\t\t\t\tedit = { offset: previous.offset + previous.length, length: 0, content: ',' + newProperty };\n\t\t\t}\n\t\t\treturn withFormatting(text, edit, formattingOptions);\n\t\t} else {\n\t\t\t//Removal\n\t\t\tconst removalIndex = lastSegment;\n\t\t\tconst toRemove = parent.children[removalIndex];\n\t\t\tlet edit: Edit;\n\t\t\tif (parent.children.length === 1) {\n\t\t\t\t// only item\n\t\t\t\tedit = { offset: parent.offset + 1, length: parent.length - 2, content: '' };\n\t\t\t} else if (parent.children.length - 1 === removalIndex) {\n\t\t\t\t// last item\n\t\t\t\tconst previous = parent.children[removalIndex - 1];\n\t\t\t\tconst offset = previous.offset + previous.length;\n\t\t\t\tconst parentEndOffset = parent.offset + parent.length;\n\t\t\t\tedit = { offset, length: parentEndOffset - 2 - offset, content: '' };\n\t\t\t} else {\n\t\t\t\tedit = { offset: toRemove.offset, length: parent.children[removalIndex + 1].offset - toRemove.offset, content: '' };\n\t\t\t}\n\t\t\treturn withFormatting(text, edit, formattingOptions);\n\t\t}\n\t} else {\n\t\tthrow new Error(`Can not add ${typeof lastSegment !== 'number' ? 'index' : 'property'} to parent of type ${parent.type}`);\n\t}\n}\n\nexport function withFormatting(text: string, edit: Edit, formattingOptions: FormattingOptions): Edit[] {\n\t// apply the edit\n\tlet newText = applyEdit(text, edit);\n\n\t// format the new text\n\tlet begin = edit.offset;\n\tlet end = edit.offset + edit.content.length;\n\tif (edit.length === 0 || edit.content.length === 0) { // insert or remove\n\t\twhile (begin > 0 && !isEOL(newText, begin - 1)) {\n\t\t\tbegin--;\n\t\t}\n\t\twhile (end < newText.length && !isEOL(newText, end)) {\n\t\t\tend++;\n\t\t}\n\t}\n\n\tconst edits = format(newText, { offset: begin, length: end - begin }, formattingOptions);\n\n\t// apply the formatting edits and track the begin and end offsets of the changes\n\tfor (let i = edits.length - 1; i >= 0; i--) {\n\t\tconst curr = edits[i];\n\t\tnewText = applyEdit(newText, curr);\n\t\tbegin = Math.min(begin, curr.offset);\n\t\tend = Math.max(end, curr.offset + curr.length);\n\t\tend += curr.content.length - curr.length;\n\t}\n\t// create a single edit with all changes\n\tconst editLength = text.length - (newText.length - end) - begin;\n\treturn [{ offset: begin, length: editLength, content: newText.substring(begin, end) }];\n}\n\nexport function applyEdit(text: string, edit: Edit): string {\n\treturn text.substring(0, edit.offset) + edit.content + text.substring(edit.offset + edit.length);\n}\n\nexport function applyEdits(text: string, edits: Edit[]): string {\n\tlet sortedEdits = edits.slice(0).sort((a, b) => {\n\t\tconst diff = a.offset - b.offset;\n\t\tif (diff === 0) {\n\t\t\treturn a.length - b.length;\n\t\t}\n\t\treturn diff;\n\t});\n\tlet lastModifiedOffset = text.length;\n\tfor (let i = sortedEdits.length - 1; i >= 0; i--) {\n\t\tlet e = sortedEdits[i];\n\t\tif (e.offset + e.length <= lastModifiedOffset) {\n\t\t\ttext = applyEdit(text, e);\n\t\t} else {\n\t\t\tthrow new Error('Overlapping edit');\n\t\t}\n\t\tlastModifiedOffset = e.offset;\n\t}\n\treturn text;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Virtual Key Codes, the value does not hold any inherent meaning.\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n * But these are \"more general\", as they should work across browsers & OS`s.\n */\nexport const enum KeyCode {\n\tDependsOnKbLayout = -1,\n\n\t/**\n\t * Placed first to cover the 0 value of the enum.\n\t */\n\tUnknown = 0,\n\n\tBackspace,\n\tTab,\n\tEnter,\n\tShift,\n\tCtrl,\n\tAlt,\n\tPauseBreak,\n\tCapsLock,\n\tEscape,\n\tSpace,\n\tPageUp,\n\tPageDown,\n\tEnd,\n\tHome,\n\tLeftArrow,\n\tUpArrow,\n\tRightArrow,\n\tDownArrow,\n\tInsert,\n\tDelete,\n\n\tDigit0,\n\tDigit1,\n\tDigit2,\n\tDigit3,\n\tDigit4,\n\tDigit5,\n\tDigit6,\n\tDigit7,\n\tDigit8,\n\tDigit9,\n\n\tKeyA,\n\tKeyB,\n\tKeyC,\n\tKeyD,\n\tKeyE,\n\tKeyF,\n\tKeyG,\n\tKeyH,\n\tKeyI,\n\tKeyJ,\n\tKeyK,\n\tKeyL,\n\tKeyM,\n\tKeyN,\n\tKeyO,\n\tKeyP,\n\tKeyQ,\n\tKeyR,\n\tKeyS,\n\tKeyT,\n\tKeyU,\n\tKeyV,\n\tKeyW,\n\tKeyX,\n\tKeyY,\n\tKeyZ,\n\n\tMeta,\n\tContextMenu,\n\n\tF1,\n\tF2,\n\tF3,\n\tF4,\n\tF5,\n\tF6,\n\tF7,\n\tF8,\n\tF9,\n\tF10,\n\tF11,\n\tF12,\n\tF13,\n\tF14,\n\tF15,\n\tF16,\n\tF17,\n\tF18,\n\tF19,\n\n\tNumLock,\n\tScrollLock,\n\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ';:' key\n\t */\n\tSemicolon,\n\t/**\n\t * For any country/region, the '+' key\n\t * For the US standard keyboard, the '=+' key\n\t */\n\tEqual,\n\t/**\n\t * For any country/region, the ',' key\n\t * For the US standard keyboard, the ',<' key\n\t */\n\tComma,\n\t/**\n\t * For any country/region, the '-' key\n\t * For the US standard keyboard, the '-_' key\n\t */\n\tMinus,\n\t/**\n\t * For any country/region, the '.' key\n\t * For the US standard keyboard, the '.>' key\n\t */\n\tPeriod,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '/?' key\n\t */\n\tSlash,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '`~' key\n\t */\n\tBackquote,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '[{' key\n\t */\n\tBracketLeft,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the '\\|' key\n\t */\n\tBackslash,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ']}' key\n\t */\n\tBracketRight,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t * For the US standard keyboard, the ''\"' key\n\t */\n\tQuote,\n\t/**\n\t * Used for miscellaneous characters; it can vary by keyboard.\n\t */\n\tOEM_8,\n\t/**\n\t * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\n\t */\n\tIntlBackslash,\n\n\tNumpad0, // VK_NUMPAD0, 0x60, Numeric keypad 0 key\n\tNumpad1, // VK_NUMPAD1, 0x61, Numeric keypad 1 key\n\tNumpad2, // VK_NUMPAD2, 0x62, Numeric keypad 2 key\n\tNumpad3, // VK_NUMPAD3, 0x63, Numeric keypad 3 key\n\tNumpad4, // VK_NUMPAD4, 0x64, Numeric keypad 4 key\n\tNumpad5, // VK_NUMPAD5, 0x65, Numeric keypad 5 key\n\tNumpad6, // VK_NUMPAD6, 0x66, Numeric keypad 6 key\n\tNumpad7, // VK_NUMPAD7, 0x67, Numeric keypad 7 key\n\tNumpad8, // VK_NUMPAD8, 0x68, Numeric keypad 8 key\n\tNumpad9, // VK_NUMPAD9, 0x69, Numeric keypad 9 key\n\n\tNumpadMultiply,\t// VK_MULTIPLY, 0x6A, Multiply key\n\tNumpadAdd,\t\t// VK_ADD, 0x6B, Add key\n\tNUMPAD_SEPARATOR,\t// VK_SEPARATOR, 0x6C, Separator key\n\tNumpadSubtract,\t// VK_SUBTRACT, 0x6D, Subtract key\n\tNumpadDecimal,\t// VK_DECIMAL, 0x6E, Decimal key\n\tNumpadDivide,\t// VK_DIVIDE, 0x6F,\n\n\t/**\n\t * Cover all key codes when IME is processing input.\n\t */\n\tKEY_IN_COMPOSITION,\n\n\tABNT_C1, // Brazilian (ABNT) Keyboard\n\tABNT_C2, // Brazilian (ABNT) Keyboard\n\n\tAudioVolumeMute,\n\tAudioVolumeUp,\n\tAudioVolumeDown,\n\n\tBrowserSearch,\n\tBrowserHome,\n\tBrowserBack,\n\tBrowserForward,\n\n\tMediaTrackNext,\n\tMediaTrackPrevious,\n\tMediaStop,\n\tMediaPlayPause,\n\tLaunchMediaPlayer,\n\tLaunchMail,\n\tLaunchApp2,\n\n\t/**\n\t * Placed last to cover the length of the enum.\n\t * Please do not depend on this value!\n\t */\n\tMAX_VALUE\n}\n\n/**\n * keyboardEvent.code\n */\nexport const enum ScanCode {\n\tDependsOnKbLayout = -1,\n\tNone,\n\tHyper,\n\tSuper,\n\tFn,\n\tFnLock,\n\tSuspend,\n\tResume,\n\tTurbo,\n\tSleep,\n\tWakeUp,\n\tKeyA,\n\tKeyB,\n\tKeyC,\n\tKeyD,\n\tKeyE,\n\tKeyF,\n\tKeyG,\n\tKeyH,\n\tKeyI,\n\tKeyJ,\n\tKeyK,\n\tKeyL,\n\tKeyM,\n\tKeyN,\n\tKeyO,\n\tKeyP,\n\tKeyQ,\n\tKeyR,\n\tKeyS,\n\tKeyT,\n\tKeyU,\n\tKeyV,\n\tKeyW,\n\tKeyX,\n\tKeyY,\n\tKeyZ,\n\tDigit1,\n\tDigit2,\n\tDigit3,\n\tDigit4,\n\tDigit5,\n\tDigit6,\n\tDigit7,\n\tDigit8,\n\tDigit9,\n\tDigit0,\n\tEnter,\n\tEscape,\n\tBackspace,\n\tTab,\n\tSpace,\n\tMinus,\n\tEqual,\n\tBracketLeft,\n\tBracketRight,\n\tBackslash,\n\tIntlHash,\n\tSemicolon,\n\tQuote,\n\tBackquote,\n\tComma,\n\tPeriod,\n\tSlash,\n\tCapsLock,\n\tF1,\n\tF2,\n\tF3,\n\tF4,\n\tF5,\n\tF6,\n\tF7,\n\tF8,\n\tF9,\n\tF10,\n\tF11,\n\tF12,\n\tPrintScreen,\n\tScrollLock,\n\tPause,\n\tInsert,\n\tHome,\n\tPageUp,\n\tDelete,\n\tEnd,\n\tPageDown,\n\tArrowRight,\n\tArrowLeft,\n\tArrowDown,\n\tArrowUp,\n\tNumLock,\n\tNumpadDivide,\n\tNumpadMultiply,\n\tNumpadSubtract,\n\tNumpadAdd,\n\tNumpadEnter,\n\tNumpad1,\n\tNumpad2,\n\tNumpad3,\n\tNumpad4,\n\tNumpad5,\n\tNumpad6,\n\tNumpad7,\n\tNumpad8,\n\tNumpad9,\n\tNumpad0,\n\tNumpadDecimal,\n\tIntlBackslash,\n\tContextMenu,\n\tPower,\n\tNumpadEqual,\n\tF13,\n\tF14,\n\tF15,\n\tF16,\n\tF17,\n\tF18,\n\tF19,\n\tF20,\n\tF21,\n\tF22,\n\tF23,\n\tF24,\n\tOpen,\n\tHelp,\n\tSelect,\n\tAgain,\n\tUndo,\n\tCut,\n\tCopy,\n\tPaste,\n\tFind,\n\tAudioVolumeMute,\n\tAudioVolumeUp,\n\tAudioVolumeDown,\n\tNumpadComma,\n\tIntlRo,\n\tKanaMode,\n\tIntlYen,\n\tConvert,\n\tNonConvert,\n\tLang1,\n\tLang2,\n\tLang3,\n\tLang4,\n\tLang5,\n\tAbort,\n\tProps,\n\tNumpadParenLeft,\n\tNumpadParenRight,\n\tNumpadBackspace,\n\tNumpadMemoryStore,\n\tNumpadMemoryRecall,\n\tNumpadMemoryClear,\n\tNumpadMemoryAdd,\n\tNumpadMemorySubtract,\n\tNumpadClear,\n\tNumpadClearEntry,\n\tControlLeft,\n\tShiftLeft,\n\tAltLeft,\n\tMetaLeft,\n\tControlRight,\n\tShiftRight,\n\tAltRight,\n\tMetaRight,\n\tBrightnessUp,\n\tBrightnessDown,\n\tMediaPlay,\n\tMediaRecord,\n\tMediaFastForward,\n\tMediaRewind,\n\tMediaTrackNext,\n\tMediaTrackPrevious,\n\tMediaStop,\n\tEject,\n\tMediaPlayPause,\n\tMediaSelect,\n\tLaunchMail,\n\tLaunchApp2,\n\tLaunchApp1,\n\tSelectTask,\n\tLaunchScreenSaver,\n\tBrowserSearch,\n\tBrowserHome,\n\tBrowserBack,\n\tBrowserForward,\n\tBrowserStop,\n\tBrowserRefresh,\n\tBrowserFavorites,\n\tZoomToggle,\n\tMailReply,\n\tMailForward,\n\tMailSend,\n\n\tMAX_VALUE\n}\n\nclass KeyCodeStrMap {\n\n\tpublic _keyCodeToStr: string[];\n\tpublic _strToKeyCode: { [str: string]: KeyCode; };\n\n\tconstructor() {\n\t\tthis._keyCodeToStr = [];\n\t\tthis._strToKeyCode = Object.create(null);\n\t}\n\n\tdefine(keyCode: KeyCode, str: string): void {\n\t\tthis._keyCodeToStr[keyCode] = str;\n\t\tthis._strToKeyCode[str.toLowerCase()] = keyCode;\n\t}\n\n\tkeyCodeToStr(keyCode: KeyCode): string {\n\t\treturn this._keyCodeToStr[keyCode];\n\t}\n\n\tstrToKeyCode(str: string): KeyCode {\n\t\treturn this._strToKeyCode[str.toLowerCase()] || KeyCode.Unknown;\n\t}\n}\n\nconst uiMap = new KeyCodeStrMap();\nconst userSettingsUSMap = new KeyCodeStrMap();\nconst userSettingsGeneralMap = new KeyCodeStrMap();\nexport const EVENT_KEY_CODE_MAP: { [keyCode: number]: KeyCode } = new Array(230);\nexport const NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE: { [nativeKeyCode: string]: KeyCode; } = {};\nconst scanCodeIntToStr: string[] = [];\nconst scanCodeStrToInt: { [code: string]: number; } = Object.create(null);\nconst scanCodeLowerCaseStrToInt: { [code: string]: number; } = Object.create(null);\n\nexport const ScanCodeUtils = {\n\tlowerCaseToEnum: (scanCode: string) => scanCodeLowerCaseStrToInt[scanCode] || ScanCode.None,\n\ttoEnum: (scanCode: string) => scanCodeStrToInt[scanCode] || ScanCode.None,\n\ttoString: (scanCode: ScanCode) => scanCodeIntToStr[scanCode] || 'None'\n};\n\n/**\n * -1 if a ScanCode => KeyCode mapping depends on kb layout.\n */\nexport const IMMUTABLE_CODE_TO_KEY_CODE: KeyCode[] = [];\n\n/**\n * -1 if a KeyCode => ScanCode mapping depends on kb layout.\n */\nexport const IMMUTABLE_KEY_CODE_TO_CODE: ScanCode[] = [];\n\nfor (let i = 0; i <= ScanCode.MAX_VALUE; i++) {\n\tIMMUTABLE_CODE_TO_KEY_CODE[i] = KeyCode.DependsOnKbLayout;\n}\n\nfor (let i = 0; i <= KeyCode.MAX_VALUE; i++) {\n\tIMMUTABLE_KEY_CODE_TO_CODE[i] = ScanCode.DependsOnKbLayout;\n}\n\n(function () {\n\n\t// See https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n\t// See https://github.com/microsoft/node-native-keymap/blob/master/deps/chromium/keyboard_codes_win.h\n\n\tconst empty = '';\n\ttype IMappingEntry = [number, 0 | 1, ScanCode, string, KeyCode, string, number, string, string, string];\n\tconst mappings: IMappingEntry[] = [\n\t\t// keyCodeOrd, immutable, scanCode, scanCodeStr, keyCode, keyCodeStr, eventKeyCode, vkey, usUserSettingsLabel, generalUserSettingsLabel\n\t\t[0, 1, ScanCode.None, 'None', KeyCode.Unknown, 'unknown', 0, 'VK_UNKNOWN', empty, empty],\n\t\t[0, 1, ScanCode.Hyper, 'Hyper', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Super, 'Super', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Fn, 'Fn', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.FnLock, 'FnLock', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Suspend, 'Suspend', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Resume, 'Resume', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Turbo, 'Turbo', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Sleep, 'Sleep', KeyCode.Unknown, empty, 0, 'VK_SLEEP', empty, empty],\n\t\t[0, 1, ScanCode.WakeUp, 'WakeUp', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[31, 0, ScanCode.KeyA, 'KeyA', KeyCode.KeyA, 'A', 65, 'VK_A', empty, empty],\n\t\t[32, 0, ScanCode.KeyB, 'KeyB', KeyCode.KeyB, 'B', 66, 'VK_B', empty, empty],\n\t\t[33, 0, ScanCode.KeyC, 'KeyC', KeyCode.KeyC, 'C', 67, 'VK_C', empty, empty],\n\t\t[34, 0, ScanCode.KeyD, 'KeyD', KeyCode.KeyD, 'D', 68, 'VK_D', empty, empty],\n\t\t[35, 0, ScanCode.KeyE, 'KeyE', KeyCode.KeyE, 'E', 69, 'VK_E', empty, empty],\n\t\t[36, 0, ScanCode.KeyF, 'KeyF', KeyCode.KeyF, 'F', 70, 'VK_F', empty, empty],\n\t\t[37, 0, ScanCode.KeyG, 'KeyG', KeyCode.KeyG, 'G', 71, 'VK_G', empty, empty],\n\t\t[38, 0, ScanCode.KeyH, 'KeyH', KeyCode.KeyH, 'H', 72, 'VK_H', empty, empty],\n\t\t[39, 0, ScanCode.KeyI, 'KeyI', KeyCode.KeyI, 'I', 73, 'VK_I', empty, empty],\n\t\t[40, 0, ScanCode.KeyJ, 'KeyJ', KeyCode.KeyJ, 'J', 74, 'VK_J', empty, empty],\n\t\t[41, 0, ScanCode.KeyK, 'KeyK', KeyCode.KeyK, 'K', 75, 'VK_K', empty, empty],\n\t\t[42, 0, ScanCode.KeyL, 'KeyL', KeyCode.KeyL, 'L', 76, 'VK_L', empty, empty],\n\t\t[43, 0, ScanCode.KeyM, 'KeyM', KeyCode.KeyM, 'M', 77, 'VK_M', empty, empty],\n\t\t[44, 0, ScanCode.KeyN, 'KeyN', KeyCode.KeyN, 'N', 78, 'VK_N', empty, empty],\n\t\t[45, 0, ScanCode.KeyO, 'KeyO', KeyCode.KeyO, 'O', 79, 'VK_O', empty, empty],\n\t\t[46, 0, ScanCode.KeyP, 'KeyP', KeyCode.KeyP, 'P', 80, 'VK_P', empty, empty],\n\t\t[47, 0, ScanCode.KeyQ, 'KeyQ', KeyCode.KeyQ, 'Q', 81, 'VK_Q', empty, empty],\n\t\t[48, 0, ScanCode.KeyR, 'KeyR', KeyCode.KeyR, 'R', 82, 'VK_R', empty, empty],\n\t\t[49, 0, ScanCode.KeyS, 'KeyS', KeyCode.KeyS, 'S', 83, 'VK_S', empty, empty],\n\t\t[50, 0, ScanCode.KeyT, 'KeyT', KeyCode.KeyT, 'T', 84, 'VK_T', empty, empty],\n\t\t[51, 0, ScanCode.KeyU, 'KeyU', KeyCode.KeyU, 'U', 85, 'VK_U', empty, empty],\n\t\t[52, 0, ScanCode.KeyV, 'KeyV', KeyCode.KeyV, 'V', 86, 'VK_V', empty, empty],\n\t\t[53, 0, ScanCode.KeyW, 'KeyW', KeyCode.KeyW, 'W', 87, 'VK_W', empty, empty],\n\t\t[54, 0, ScanCode.KeyX, 'KeyX', KeyCode.KeyX, 'X', 88, 'VK_X', empty, empty],\n\t\t[55, 0, ScanCode.KeyY, 'KeyY', KeyCode.KeyY, 'Y', 89, 'VK_Y', empty, empty],\n\t\t[56, 0, ScanCode.KeyZ, 'KeyZ', KeyCode.KeyZ, 'Z', 90, 'VK_Z', empty, empty],\n\t\t[22, 0, ScanCode.Digit1, 'Digit1', KeyCode.Digit1, '1', 49, 'VK_1', empty, empty],\n\t\t[23, 0, ScanCode.Digit2, 'Digit2', KeyCode.Digit2, '2', 50, 'VK_2', empty, empty],\n\t\t[24, 0, ScanCode.Digit3, 'Digit3', KeyCode.Digit3, '3', 51, 'VK_3', empty, empty],\n\t\t[25, 0, ScanCode.Digit4, 'Digit4', KeyCode.Digit4, '4', 52, 'VK_4', empty, empty],\n\t\t[26, 0, ScanCode.Digit5, 'Digit5', KeyCode.Digit5, '5', 53, 'VK_5', empty, empty],\n\t\t[27, 0, ScanCode.Digit6, 'Digit6', KeyCode.Digit6, '6', 54, 'VK_6', empty, empty],\n\t\t[28, 0, ScanCode.Digit7, 'Digit7', KeyCode.Digit7, '7', 55, 'VK_7', empty, empty],\n\t\t[29, 0, ScanCode.Digit8, 'Digit8', KeyCode.Digit8, '8', 56, 'VK_8', empty, empty],\n\t\t[30, 0, ScanCode.Digit9, 'Digit9', KeyCode.Digit9, '9', 57, 'VK_9', empty, empty],\n\t\t[21, 0, ScanCode.Digit0, 'Digit0', KeyCode.Digit0, '0', 48, 'VK_0', empty, empty],\n\t\t[3, 1, ScanCode.Enter, 'Enter', KeyCode.Enter, 'Enter', 13, 'VK_RETURN', empty, empty],\n\t\t[9, 1, ScanCode.Escape, 'Escape', KeyCode.Escape, 'Escape', 27, 'VK_ESCAPE', empty, empty],\n\t\t[1, 1, ScanCode.Backspace, 'Backspace', KeyCode.Backspace, 'Backspace', 8, 'VK_BACK', empty, empty],\n\t\t[2, 1, ScanCode.Tab, 'Tab', KeyCode.Tab, 'Tab', 9, 'VK_TAB', empty, empty],\n\t\t[10, 1, ScanCode.Space, 'Space', KeyCode.Space, 'Space', 32, 'VK_SPACE', empty, empty],\n\t\t[83, 0, ScanCode.Minus, 'Minus', KeyCode.Minus, '-', 189, 'VK_OEM_MINUS', '-', 'OEM_MINUS'],\n\t\t[81, 0, ScanCode.Equal, 'Equal', KeyCode.Equal, '=', 187, 'VK_OEM_PLUS', '=', 'OEM_PLUS'],\n\t\t[87, 0, ScanCode.BracketLeft, 'BracketLeft', KeyCode.BracketLeft, '[', 219, 'VK_OEM_4', '[', 'OEM_4'],\n\t\t[89, 0, ScanCode.BracketRight, 'BracketRight', KeyCode.BracketRight, ']', 221, 'VK_OEM_6', ']', 'OEM_6'],\n\t\t[88, 0, ScanCode.Backslash, 'Backslash', KeyCode.Backslash, '\\\\', 220, 'VK_OEM_5', '\\\\', 'OEM_5'],\n\t\t[0, 0, ScanCode.IntlHash, 'IntlHash', KeyCode.Unknown, empty, 0, empty, empty, empty], // has been dropped from the w3c spec\n\t\t[80, 0, ScanCode.Semicolon, 'Semicolon', KeyCode.Semicolon, ';', 186, 'VK_OEM_1', ';', 'OEM_1'],\n\t\t[90, 0, ScanCode.Quote, 'Quote', KeyCode.Quote, '\\'', 222, 'VK_OEM_7', '\\'', 'OEM_7'],\n\t\t[86, 0, ScanCode.Backquote, 'Backquote', KeyCode.Backquote, '`', 192, 'VK_OEM_3', '`', 'OEM_3'],\n\t\t[82, 0, ScanCode.Comma, 'Comma', KeyCode.Comma, ',', 188, 'VK_OEM_COMMA', ',', 'OEM_COMMA'],\n\t\t[84, 0, ScanCode.Period, 'Period', KeyCode.Period, '.', 190, 'VK_OEM_PERIOD', '.', 'OEM_PERIOD'],\n\t\t[85, 0, ScanCode.Slash, 'Slash', KeyCode.Slash, '/', 191, 'VK_OEM_2', '/', 'OEM_2'],\n\t\t[8, 1, ScanCode.CapsLock, 'CapsLock', KeyCode.CapsLock, 'CapsLock', 20, 'VK_CAPITAL', empty, empty],\n\t\t[59, 1, ScanCode.F1, 'F1', KeyCode.F1, 'F1', 112, 'VK_F1', empty, empty],\n\t\t[60, 1, ScanCode.F2, 'F2', KeyCode.F2, 'F2', 113, 'VK_F2', empty, empty],\n\t\t[61, 1, ScanCode.F3, 'F3', KeyCode.F3, 'F3', 114, 'VK_F3', empty, empty],\n\t\t[62, 1, ScanCode.F4, 'F4', KeyCode.F4, 'F4', 115, 'VK_F4', empty, empty],\n\t\t[63, 1, ScanCode.F5, 'F5', KeyCode.F5, 'F5', 116, 'VK_F5', empty, empty],\n\t\t[64, 1, ScanCode.F6, 'F6', KeyCode.F6, 'F6', 117, 'VK_F6', empty, empty],\n\t\t[65, 1, ScanCode.F7, 'F7', KeyCode.F7, 'F7', 118, 'VK_F7', empty, empty],\n\t\t[66, 1, ScanCode.F8, 'F8', KeyCode.F8, 'F8', 119, 'VK_F8', empty, empty],\n\t\t[67, 1, ScanCode.F9, 'F9', KeyCode.F9, 'F9', 120, 'VK_F9', empty, empty],\n\t\t[68, 1, ScanCode.F10, 'F10', KeyCode.F10, 'F10', 121, 'VK_F10', empty, empty],\n\t\t[69, 1, ScanCode.F11, 'F11', KeyCode.F11, 'F11', 122, 'VK_F11', empty, empty],\n\t\t[70, 1, ScanCode.F12, 'F12', KeyCode.F12, 'F12', 123, 'VK_F12', empty, empty],\n\t\t[0, 1, ScanCode.PrintScreen, 'PrintScreen', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[79, 1, ScanCode.ScrollLock, 'ScrollLock', KeyCode.ScrollLock, 'ScrollLock', 145, 'VK_SCROLL', empty, empty],\n\t\t[7, 1, ScanCode.Pause, 'Pause', KeyCode.PauseBreak, 'PauseBreak', 19, 'VK_PAUSE', empty, empty],\n\t\t[19, 1, ScanCode.Insert, 'Insert', KeyCode.Insert, 'Insert', 45, 'VK_INSERT', empty, empty],\n\t\t[14, 1, ScanCode.Home, 'Home', KeyCode.Home, 'Home', 36, 'VK_HOME', empty, empty],\n\t\t[11, 1, ScanCode.PageUp, 'PageUp', KeyCode.PageUp, 'PageUp', 33, 'VK_PRIOR', empty, empty],\n\t\t[20, 1, ScanCode.Delete, 'Delete', KeyCode.Delete, 'Delete', 46, 'VK_DELETE', empty, empty],\n\t\t[13, 1, ScanCode.End, 'End', KeyCode.End, 'End', 35, 'VK_END', empty, empty],\n\t\t[12, 1, ScanCode.PageDown, 'PageDown', KeyCode.PageDown, 'PageDown', 34, 'VK_NEXT', empty, empty],\n\t\t[17, 1, ScanCode.ArrowRight, 'ArrowRight', KeyCode.RightArrow, 'RightArrow', 39, 'VK_RIGHT', 'Right', empty],\n\t\t[15, 1, ScanCode.ArrowLeft, 'ArrowLeft', KeyCode.LeftArrow, 'LeftArrow', 37, 'VK_LEFT', 'Left', empty],\n\t\t[18, 1, ScanCode.ArrowDown, 'ArrowDown', KeyCode.DownArrow, 'DownArrow', 40, 'VK_DOWN', 'Down', empty],\n\t\t[16, 1, ScanCode.ArrowUp, 'ArrowUp', KeyCode.UpArrow, 'UpArrow', 38, 'VK_UP', 'Up', empty],\n\t\t[78, 1, ScanCode.NumLock, 'NumLock', KeyCode.NumLock, 'NumLock', 144, 'VK_NUMLOCK', empty, empty],\n\t\t[108, 1, ScanCode.NumpadDivide, 'NumpadDivide', KeyCode.NumpadDivide, 'NumPad_Divide', 111, 'VK_DIVIDE', empty, empty],\n\t\t[103, 1, ScanCode.NumpadMultiply, 'NumpadMultiply', KeyCode.NumpadMultiply, 'NumPad_Multiply', 106, 'VK_MULTIPLY', empty, empty],\n\t\t[106, 1, ScanCode.NumpadSubtract, 'NumpadSubtract', KeyCode.NumpadSubtract, 'NumPad_Subtract', 109, 'VK_SUBTRACT', empty, empty],\n\t\t[104, 1, ScanCode.NumpadAdd, 'NumpadAdd', KeyCode.NumpadAdd, 'NumPad_Add', 107, 'VK_ADD', empty, empty],\n\t\t[3, 1, ScanCode.NumpadEnter, 'NumpadEnter', KeyCode.Enter, empty, 0, empty, empty, empty],\n\t\t[94, 1, ScanCode.Numpad1, 'Numpad1', KeyCode.Numpad1, 'NumPad1', 97, 'VK_NUMPAD1', empty, empty],\n\t\t[95, 1, ScanCode.Numpad2, 'Numpad2', KeyCode.Numpad2, 'NumPad2', 98, 'VK_NUMPAD2', empty, empty],\n\t\t[96, 1, ScanCode.Numpad3, 'Numpad3', KeyCode.Numpad3, 'NumPad3', 99, 'VK_NUMPAD3', empty, empty],\n\t\t[97, 1, ScanCode.Numpad4, 'Numpad4', KeyCode.Numpad4, 'NumPad4', 100, 'VK_NUMPAD4', empty, empty],\n\t\t[98, 1, ScanCode.Numpad5, 'Numpad5', KeyCode.Numpad5, 'NumPad5', 101, 'VK_NUMPAD5', empty, empty],\n\t\t[99, 1, ScanCode.Numpad6, 'Numpad6', KeyCode.Numpad6, 'NumPad6', 102, 'VK_NUMPAD6', empty, empty],\n\t\t[100, 1, ScanCode.Numpad7, 'Numpad7', KeyCode.Numpad7, 'NumPad7', 103, 'VK_NUMPAD7', empty, empty],\n\t\t[101, 1, ScanCode.Numpad8, 'Numpad8', KeyCode.Numpad8, 'NumPad8', 104, 'VK_NUMPAD8', empty, empty],\n\t\t[102, 1, ScanCode.Numpad9, 'Numpad9', KeyCode.Numpad9, 'NumPad9', 105, 'VK_NUMPAD9', empty, empty],\n\t\t[93, 1, ScanCode.Numpad0, 'Numpad0', KeyCode.Numpad0, 'NumPad0', 96, 'VK_NUMPAD0', empty, empty],\n\t\t[107, 1, ScanCode.NumpadDecimal, 'NumpadDecimal', KeyCode.NumpadDecimal, 'NumPad_Decimal', 110, 'VK_DECIMAL', empty, empty],\n\t\t[92, 0, ScanCode.IntlBackslash, 'IntlBackslash', KeyCode.IntlBackslash, 'OEM_102', 226, 'VK_OEM_102', empty, empty],\n\t\t[58, 1, ScanCode.ContextMenu, 'ContextMenu', KeyCode.ContextMenu, 'ContextMenu', 93, empty, empty, empty],\n\t\t[0, 1, ScanCode.Power, 'Power', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.NumpadEqual, 'NumpadEqual', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[71, 1, ScanCode.F13, 'F13', KeyCode.F13, 'F13', 124, 'VK_F13', empty, empty],\n\t\t[72, 1, ScanCode.F14, 'F14', KeyCode.F14, 'F14', 125, 'VK_F14', empty, empty],\n\t\t[73, 1, ScanCode.F15, 'F15', KeyCode.F15, 'F15', 126, 'VK_F15', empty, empty],\n\t\t[74, 1, ScanCode.F16, 'F16', KeyCode.F16, 'F16', 127, 'VK_F16', empty, empty],\n\t\t[75, 1, ScanCode.F17, 'F17', KeyCode.F17, 'F17', 128, 'VK_F17', empty, empty],\n\t\t[76, 1, ScanCode.F18, 'F18', KeyCode.F18, 'F18', 129, 'VK_F18', empty, empty],\n\t\t[77, 1, ScanCode.F19, 'F19', KeyCode.F19, 'F19', 130, 'VK_F19', empty, empty],\n\t\t[0, 1, ScanCode.F20, 'F20', KeyCode.Unknown, empty, 0, 'VK_F20', empty, empty],\n\t\t[0, 1, ScanCode.F21, 'F21', KeyCode.Unknown, empty, 0, 'VK_F21', empty, empty],\n\t\t[0, 1, ScanCode.F22, 'F22', KeyCode.Unknown, empty, 0, 'VK_F22', empty, empty],\n\t\t[0, 1, ScanCode.F23, 'F23', KeyCode.Unknown, empty, 0, 'VK_F23', empty, empty],\n\t\t[0, 1, ScanCode.F24, 'F24', KeyCode.Unknown, empty, 0, 'VK_F24', empty, empty],\n\t\t[0, 1, ScanCode.Open, 'Open', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Help, 'Help', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Select, 'Select', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Again, 'Again', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Undo, 'Undo', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Cut, 'Cut', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Copy, 'Copy', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Paste, 'Paste', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Find, 'Find', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.AudioVolumeMute, 'AudioVolumeMute', KeyCode.AudioVolumeMute, 'AudioVolumeMute', 173, 'VK_VOLUME_MUTE', empty, empty],\n\t\t[0, 1, ScanCode.AudioVolumeUp, 'AudioVolumeUp', KeyCode.AudioVolumeUp, 'AudioVolumeUp', 175, 'VK_VOLUME_UP', empty, empty],\n\t\t[0, 1, ScanCode.AudioVolumeDown, 'AudioVolumeDown', KeyCode.AudioVolumeDown, 'AudioVolumeDown', 174, 'VK_VOLUME_DOWN', empty, empty],\n\t\t[105, 1, ScanCode.NumpadComma, 'NumpadComma', KeyCode.NUMPAD_SEPARATOR, 'NumPad_Separator', 108, 'VK_SEPARATOR', empty, empty],\n\t\t[110, 0, ScanCode.IntlRo, 'IntlRo', KeyCode.ABNT_C1, 'ABNT_C1', 193, 'VK_ABNT_C1', empty, empty],\n\t\t[0, 1, ScanCode.KanaMode, 'KanaMode', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 0, ScanCode.IntlYen, 'IntlYen', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Convert, 'Convert', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.NonConvert, 'NonConvert', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Lang1, 'Lang1', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Lang2, 'Lang2', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Lang3, 'Lang3', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Lang4, 'Lang4', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Lang5, 'Lang5', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Abort, 'Abort', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.Props, 'Props', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.NumpadParenLeft, 'NumpadParenLeft', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.NumpadParenRight, 'NumpadParenRight', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.NumpadBackspace, 'NumpadBackspace', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.NumpadMemoryStore, 'NumpadMemoryStore', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.NumpadMemoryRecall, 'NumpadMemoryRecall', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.NumpadMemoryClear, 'NumpadMemoryClear', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.NumpadMemoryAdd, 'NumpadMemoryAdd', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.NumpadMemorySubtract, 'NumpadMemorySubtract', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.NumpadClear, 'NumpadClear', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.NumpadClearEntry, 'NumpadClearEntry', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[5, 1, ScanCode.None, empty, KeyCode.Ctrl, 'Ctrl', 17, 'VK_CONTROL', empty, empty],\n\t\t[4, 1, ScanCode.None, empty, KeyCode.Shift, 'Shift', 16, 'VK_SHIFT', empty, empty],\n\t\t[6, 1, ScanCode.None, empty, KeyCode.Alt, 'Alt', 18, 'VK_MENU', empty, empty],\n\t\t[57, 1, ScanCode.None, empty, KeyCode.Meta, 'Meta', 0, 'VK_COMMAND', empty, empty],\n\t\t[5, 1, ScanCode.ControlLeft, 'ControlLeft', KeyCode.Ctrl, empty, 0, 'VK_LCONTROL', empty, empty],\n\t\t[4, 1, ScanCode.ShiftLeft, 'ShiftLeft', KeyCode.Shift, empty, 0, 'VK_LSHIFT', empty, empty],\n\t\t[6, 1, ScanCode.AltLeft, 'AltLeft', KeyCode.Alt, empty, 0, 'VK_LMENU', empty, empty],\n\t\t[57, 1, ScanCode.MetaLeft, 'MetaLeft', KeyCode.Meta, empty, 0, 'VK_LWIN', empty, empty],\n\t\t[5, 1, ScanCode.ControlRight, 'ControlRight', KeyCode.Ctrl, empty, 0, 'VK_RCONTROL', empty, empty],\n\t\t[4, 1, ScanCode.ShiftRight, 'ShiftRight', KeyCode.Shift, empty, 0, 'VK_RSHIFT', empty, empty],\n\t\t[6, 1, ScanCode.AltRight, 'AltRight', KeyCode.Alt, empty, 0, 'VK_RMENU', empty, empty],\n\t\t[57, 1, ScanCode.MetaRight, 'MetaRight', KeyCode.Meta, empty, 0, 'VK_RWIN', empty, empty],\n\t\t[0, 1, ScanCode.BrightnessUp, 'BrightnessUp', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.BrightnessDown, 'BrightnessDown', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.MediaPlay, 'MediaPlay', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.MediaRecord, 'MediaRecord', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.MediaFastForward, 'MediaFastForward', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.MediaRewind, 'MediaRewind', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[114, 1, ScanCode.MediaTrackNext, 'MediaTrackNext', KeyCode.MediaTrackNext, 'MediaTrackNext', 176, 'VK_MEDIA_NEXT_TRACK', empty, empty],\n\t\t[115, 1, ScanCode.MediaTrackPrevious, 'MediaTrackPrevious', KeyCode.MediaTrackPrevious, 'MediaTrackPrevious', 177, 'VK_MEDIA_PREV_TRACK', empty, empty],\n\t\t[116, 1, ScanCode.MediaStop, 'MediaStop', KeyCode.MediaStop, 'MediaStop', 178, 'VK_MEDIA_STOP', empty, empty],\n\t\t[0, 1, ScanCode.Eject, 'Eject', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[117, 1, ScanCode.MediaPlayPause, 'MediaPlayPause', KeyCode.MediaPlayPause, 'MediaPlayPause', 179, 'VK_MEDIA_PLAY_PAUSE', empty, empty],\n\t\t[0, 1, ScanCode.MediaSelect, 'MediaSelect', KeyCode.LaunchMediaPlayer, 'LaunchMediaPlayer', 181, 'VK_MEDIA_LAUNCH_MEDIA_SELECT', empty, empty],\n\t\t[0, 1, ScanCode.LaunchMail, 'LaunchMail', KeyCode.LaunchMail, 'LaunchMail', 180, 'VK_MEDIA_LAUNCH_MAIL', empty, empty],\n\t\t[0, 1, ScanCode.LaunchApp2, 'LaunchApp2', KeyCode.LaunchApp2, 'LaunchApp2', 183, 'VK_MEDIA_LAUNCH_APP2', empty, empty],\n\t\t[0, 1, ScanCode.LaunchApp1, 'LaunchApp1', KeyCode.Unknown, empty, 0, 'VK_MEDIA_LAUNCH_APP1', empty, empty],\n\t\t[0, 1, ScanCode.SelectTask, 'SelectTask', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.LaunchScreenSaver, 'LaunchScreenSaver', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.BrowserSearch, 'BrowserSearch', KeyCode.BrowserSearch, 'BrowserSearch', 170, 'VK_BROWSER_SEARCH', empty, empty],\n\t\t[0, 1, ScanCode.BrowserHome, 'BrowserHome', KeyCode.BrowserHome, 'BrowserHome', 172, 'VK_BROWSER_HOME', empty, empty],\n\t\t[112, 1, ScanCode.BrowserBack, 'BrowserBack', KeyCode.BrowserBack, 'BrowserBack', 166, 'VK_BROWSER_BACK', empty, empty],\n\t\t[113, 1, ScanCode.BrowserForward, 'BrowserForward', KeyCode.BrowserForward, 'BrowserForward', 167, 'VK_BROWSER_FORWARD', empty, empty],\n\t\t[0, 1, ScanCode.BrowserStop, 'BrowserStop', KeyCode.Unknown, empty, 0, 'VK_BROWSER_STOP', empty, empty],\n\t\t[0, 1, ScanCode.BrowserRefresh, 'BrowserRefresh', KeyCode.Unknown, empty, 0, 'VK_BROWSER_REFRESH', empty, empty],\n\t\t[0, 1, ScanCode.BrowserFavorites, 'BrowserFavorites', KeyCode.Unknown, empty, 0, 'VK_BROWSER_FAVORITES', empty, empty],\n\t\t[0, 1, ScanCode.ZoomToggle, 'ZoomToggle', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.MailReply, 'MailReply', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.MailForward, 'MailForward', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\t\t[0, 1, ScanCode.MailSend, 'MailSend', KeyCode.Unknown, empty, 0, empty, empty, empty],\n\n\t\t// See https://lists.w3.org/Archives/Public/www-dom/2010JulSep/att-0182/keyCode-spec.html\n\t\t// If an Input Method Editor is processing key input and the event is keydown, return 229.\n\t\t[109, 1, ScanCode.None, empty, KeyCode.KEY_IN_COMPOSITION, 'KeyInComposition', 229, empty, empty, empty],\n\t\t[111, 1, ScanCode.None, empty, KeyCode.ABNT_C2, 'ABNT_C2', 194, 'VK_ABNT_C2', empty, empty],\n\t\t[91, 1, ScanCode.None, empty, KeyCode.OEM_8, 'OEM_8', 223, 'VK_OEM_8', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_CLEAR', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_KANA', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_HANGUL', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_JUNJA', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_FINAL', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_HANJA', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_KANJI', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_CONVERT', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_NONCONVERT', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_ACCEPT', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_MODECHANGE', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_SELECT', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_PRINT', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_EXECUTE', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_SNAPSHOT', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_HELP', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_APPS', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_PROCESSKEY', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_PACKET', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_DBE_SBCSCHAR', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_DBE_DBCSCHAR', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_ATTN', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_CRSEL', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_EXSEL', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_EREOF', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_PLAY', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_ZOOM', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_NONAME', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_PA1', empty, empty],\n\t\t[0, 1, ScanCode.None, empty, KeyCode.Unknown, empty, 0, 'VK_OEM_CLEAR', empty, empty],\n\t];\n\n\tlet seenKeyCode: boolean[] = [];\n\tlet seenScanCode: boolean[] = [];\n\tfor (const mapping of mappings) {\n\t\tconst [_keyCodeOrd, immutable, scanCode, scanCodeStr, keyCode, keyCodeStr, eventKeyCode, vkey, usUserSettingsLabel, generalUserSettingsLabel] = mapping;\n\t\tif (!seenScanCode[scanCode]) {\n\t\t\tseenScanCode[scanCode] = true;\n\t\t\tscanCodeIntToStr[scanCode] = scanCodeStr;\n\t\t\tscanCodeStrToInt[scanCodeStr] = scanCode;\n\t\t\tscanCodeLowerCaseStrToInt[scanCodeStr.toLowerCase()] = scanCode;\n\t\t\tif (immutable) {\n\t\t\t\tIMMUTABLE_CODE_TO_KEY_CODE[scanCode] = keyCode;\n\t\t\t\tif (\n\t\t\t\t\t(keyCode !== KeyCode.Unknown)\n\t\t\t\t\t&& (keyCode !== KeyCode.Enter)\n\t\t\t\t\t&& (keyCode !== KeyCode.Ctrl)\n\t\t\t\t\t&& (keyCode !== KeyCode.Shift)\n\t\t\t\t\t&& (keyCode !== KeyCode.Alt)\n\t\t\t\t\t&& (keyCode !== KeyCode.Meta)\n\t\t\t\t) {\n\t\t\t\t\tIMMUTABLE_KEY_CODE_TO_CODE[keyCode] = scanCode;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (!seenKeyCode[keyCode]) {\n\t\t\tseenKeyCode[keyCode] = true;\n\t\t\tif (!keyCodeStr) {\n\t\t\t\tthrow new Error(`String representation missing for key code ${keyCode} around scan code ${scanCodeStr}`);\n\t\t\t}\n\t\t\tuiMap.define(keyCode, keyCodeStr);\n\t\t\tuserSettingsUSMap.define(keyCode, usUserSettingsLabel || keyCodeStr);\n\t\t\tuserSettingsGeneralMap.define(keyCode, generalUserSettingsLabel || usUserSettingsLabel || keyCodeStr);\n\t\t}\n\t\tif (eventKeyCode) {\n\t\t\tEVENT_KEY_CODE_MAP[eventKeyCode] = keyCode;\n\t\t}\n\t\tif (vkey) {\n\t\t\tNATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE[vkey] = keyCode;\n\t\t}\n\t}\n\t// Manually added due to the exclusion above (due to duplication with NumpadEnter)\n\tIMMUTABLE_KEY_CODE_TO_CODE[KeyCode.Enter] = ScanCode.Enter;\n\n})();\n\nexport namespace KeyCodeUtils {\n\texport function toString(keyCode: KeyCode): string {\n\t\treturn uiMap.keyCodeToStr(keyCode);\n\t}\n\texport function fromString(key: string): KeyCode {\n\t\treturn uiMap.strToKeyCode(key);\n\t}\n\n\texport function toUserSettingsUS(keyCode: KeyCode): string {\n\t\treturn userSettingsUSMap.keyCodeToStr(keyCode);\n\t}\n\texport function toUserSettingsGeneral(keyCode: KeyCode): string {\n\t\treturn userSettingsGeneralMap.keyCodeToStr(keyCode);\n\t}\n\texport function fromUserSettings(key: string): KeyCode {\n\t\treturn userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n\t}\n\n\texport function toElectronAccelerator(keyCode: KeyCode): string | null {\n\t\tif (keyCode >= KeyCode.Numpad0 && keyCode <= KeyCode.NumpadDivide) {\n\t\t\t// [Electron Accelerators] Electron is able to parse numpad keys, but unfortunately it\n\t\t\t// renders them just as regular keys in menus. For example, num0 is rendered as \"0\",\n\t\t\t// numdiv is rendered as \"/\", numsub is rendered as \"-\".\n\t\t\t//\n\t\t\t// This can lead to incredible confusion, as it makes numpad based keybindings indistinguishable\n\t\t\t// from keybindings based on regular keys.\n\t\t\t//\n\t\t\t// We therefore need to fall back to custom rendering for numpad keys.\n\t\t\treturn null;\n\t\t}\n\n\t\tswitch (keyCode) {\n\t\t\tcase KeyCode.UpArrow:\n\t\t\t\treturn 'Up';\n\t\t\tcase KeyCode.DownArrow:\n\t\t\t\treturn 'Down';\n\t\t\tcase KeyCode.LeftArrow:\n\t\t\t\treturn 'Left';\n\t\t\tcase KeyCode.RightArrow:\n\t\t\t\treturn 'Right';\n\t\t}\n\n\t\treturn uiMap.keyCodeToStr(keyCode);\n\t}\n}\n\nexport const enum KeyMod {\n\tCtrlCmd = (1 << 11) >>> 0,\n\tShift = (1 << 10) >>> 0,\n\tAlt = (1 << 9) >>> 0,\n\tWinCtrl = (1 << 8) >>> 0,\n}\n\nexport function KeyChord(firstPart: number, secondPart: number): number {\n\tconst chordPart = ((secondPart & 0x0000FFFF) << 16) >>> 0;\n\treturn (firstPart | chordPart) >>> 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { illegalArgument } from 'vs/base/common/errors';\nimport { KeyCode, ScanCode } from 'vs/base/common/keyCodes';\nimport { OperatingSystem } from 'vs/base/common/platform';\n\n/**\n * Binary encoding strategy:\n * ```\n *    1111 11\n *    5432 1098 7654 3210\n *    ---- CSAW KKKK KKKK\n *  C = bit 11 = ctrlCmd flag\n *  S = bit 10 = shift flag\n *  A = bit 9 = alt flag\n *  W = bit 8 = winCtrl flag\n *  K = bits 0-7 = key code\n * ```\n */\nconst enum BinaryKeybindingsMask {\n\tCtrlCmd = (1 << 11) >>> 0,\n\tShift = (1 << 10) >>> 0,\n\tAlt = (1 << 9) >>> 0,\n\tWinCtrl = (1 << 8) >>> 0,\n\tKeyCode = 0x000000FF\n}\n\nexport function createKeybinding(keybinding: number, OS: OperatingSystem): Keybinding | null {\n\tif (keybinding === 0) {\n\t\treturn null;\n\t}\n\tconst firstPart = (keybinding & 0x0000FFFF) >>> 0;\n\tconst chordPart = (keybinding & 0xFFFF0000) >>> 16;\n\tif (chordPart !== 0) {\n\t\treturn new ChordKeybinding([\n\t\t\tcreateSimpleKeybinding(firstPart, OS),\n\t\t\tcreateSimpleKeybinding(chordPart, OS)\n\t\t]);\n\t}\n\treturn new ChordKeybinding([createSimpleKeybinding(firstPart, OS)]);\n}\n\nexport function createSimpleKeybinding(keybinding: number, OS: OperatingSystem): SimpleKeybinding {\n\n\tconst ctrlCmd = (keybinding & BinaryKeybindingsMask.CtrlCmd ? true : false);\n\tconst winCtrl = (keybinding & BinaryKeybindingsMask.WinCtrl ? true : false);\n\n\tconst ctrlKey = (OS === OperatingSystem.Macintosh ? winCtrl : ctrlCmd);\n\tconst shiftKey = (keybinding & BinaryKeybindingsMask.Shift ? true : false);\n\tconst altKey = (keybinding & BinaryKeybindingsMask.Alt ? true : false);\n\tconst metaKey = (OS === OperatingSystem.Macintosh ? ctrlCmd : winCtrl);\n\tconst keyCode = (keybinding & BinaryKeybindingsMask.KeyCode);\n\n\treturn new SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode);\n}\n\nexport interface Modifiers {\n\treadonly ctrlKey: boolean;\n\treadonly shiftKey: boolean;\n\treadonly altKey: boolean;\n\treadonly metaKey: boolean;\n}\n\nexport interface IBaseKeybinding extends Modifiers {\n\tisDuplicateModifierCase(): boolean;\n}\n\nexport class SimpleKeybinding implements IBaseKeybinding {\n\tpublic readonly ctrlKey: boolean;\n\tpublic readonly shiftKey: boolean;\n\tpublic readonly altKey: boolean;\n\tpublic readonly metaKey: boolean;\n\tpublic readonly keyCode: KeyCode;\n\n\tconstructor(ctrlKey: boolean, shiftKey: boolean, altKey: boolean, metaKey: boolean, keyCode: KeyCode) {\n\t\tthis.ctrlKey = ctrlKey;\n\t\tthis.shiftKey = shiftKey;\n\t\tthis.altKey = altKey;\n\t\tthis.metaKey = metaKey;\n\t\tthis.keyCode = keyCode;\n\t}\n\n\tpublic equals(other: SimpleKeybinding): boolean {\n\t\treturn (\n\t\t\tthis.ctrlKey === other.ctrlKey\n\t\t\t&& this.shiftKey === other.shiftKey\n\t\t\t&& this.altKey === other.altKey\n\t\t\t&& this.metaKey === other.metaKey\n\t\t\t&& this.keyCode === other.keyCode\n\t\t);\n\t}\n\n\tpublic getHashCode(): string {\n\t\tconst ctrl = this.ctrlKey ? '1' : '0';\n\t\tconst shift = this.shiftKey ? '1' : '0';\n\t\tconst alt = this.altKey ? '1' : '0';\n\t\tconst meta = this.metaKey ? '1' : '0';\n\t\treturn `${ctrl}${shift}${alt}${meta}${this.keyCode}`;\n\t}\n\n\tpublic isModifierKey(): boolean {\n\t\treturn (\n\t\t\tthis.keyCode === KeyCode.Unknown\n\t\t\t|| this.keyCode === KeyCode.Ctrl\n\t\t\t|| this.keyCode === KeyCode.Meta\n\t\t\t|| this.keyCode === KeyCode.Alt\n\t\t\t|| this.keyCode === KeyCode.Shift\n\t\t);\n\t}\n\n\tpublic toChord(): ChordKeybinding {\n\t\treturn new ChordKeybinding([this]);\n\t}\n\n\t/**\n\t * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\n\t */\n\tpublic isDuplicateModifierCase(): boolean {\n\t\treturn (\n\t\t\t(this.ctrlKey && this.keyCode === KeyCode.Ctrl)\n\t\t\t|| (this.shiftKey && this.keyCode === KeyCode.Shift)\n\t\t\t|| (this.altKey && this.keyCode === KeyCode.Alt)\n\t\t\t|| (this.metaKey && this.keyCode === KeyCode.Meta)\n\t\t);\n\t}\n}\n\nexport class ChordKeybinding {\n\tpublic readonly parts: SimpleKeybinding[];\n\n\tconstructor(parts: SimpleKeybinding[]) {\n\t\tif (parts.length === 0) {\n\t\t\tthrow illegalArgument(`parts`);\n\t\t}\n\t\tthis.parts = parts;\n\t}\n\n\tpublic getHashCode(): string {\n\t\tlet result = '';\n\t\tfor (let i = 0, len = this.parts.length; i < len; i++) {\n\t\t\tif (i !== 0) {\n\t\t\t\tresult += ';';\n\t\t\t}\n\t\t\tresult += this.parts[i].getHashCode();\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic equals(other: ChordKeybinding | null): boolean {\n\t\tif (other === null) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.parts.length !== other.parts.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (let i = 0; i < this.parts.length; i++) {\n\t\t\tif (!this.parts[i].equals(other.parts[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n}\n\nexport type Keybinding = ChordKeybinding;\n\nexport class ScanCodeBinding implements IBaseKeybinding {\n\tpublic readonly ctrlKey: boolean;\n\tpublic readonly shiftKey: boolean;\n\tpublic readonly altKey: boolean;\n\tpublic readonly metaKey: boolean;\n\tpublic readonly scanCode: ScanCode;\n\n\tconstructor(ctrlKey: boolean, shiftKey: boolean, altKey: boolean, metaKey: boolean, scanCode: ScanCode) {\n\t\tthis.ctrlKey = ctrlKey;\n\t\tthis.shiftKey = shiftKey;\n\t\tthis.altKey = altKey;\n\t\tthis.metaKey = metaKey;\n\t\tthis.scanCode = scanCode;\n\t}\n\n\tpublic equals(other: ScanCodeBinding): boolean {\n\t\treturn (\n\t\t\tthis.ctrlKey === other.ctrlKey\n\t\t\t&& this.shiftKey === other.shiftKey\n\t\t\t&& this.altKey === other.altKey\n\t\t\t&& this.metaKey === other.metaKey\n\t\t\t&& this.scanCode === other.scanCode\n\t\t);\n\t}\n\n\t/**\n\t * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\n\t */\n\tpublic isDuplicateModifierCase(): boolean {\n\t\treturn (\n\t\t\t(this.ctrlKey && (this.scanCode === ScanCode.ControlLeft || this.scanCode === ScanCode.ControlRight))\n\t\t\t|| (this.shiftKey && (this.scanCode === ScanCode.ShiftLeft || this.scanCode === ScanCode.ShiftRight))\n\t\t\t|| (this.altKey && (this.scanCode === ScanCode.AltLeft || this.scanCode === ScanCode.AltRight))\n\t\t\t|| (this.metaKey && (this.scanCode === ScanCode.MetaLeft || this.scanCode === ScanCode.MetaRight))\n\t\t);\n\t}\n}\n\nexport class ResolvedKeybindingPart {\n\treadonly ctrlKey: boolean;\n\treadonly shiftKey: boolean;\n\treadonly altKey: boolean;\n\treadonly metaKey: boolean;\n\n\treadonly keyLabel: string | null;\n\treadonly keyAriaLabel: string | null;\n\n\tconstructor(ctrlKey: boolean, shiftKey: boolean, altKey: boolean, metaKey: boolean, kbLabel: string | null, kbAriaLabel: string | null) {\n\t\tthis.ctrlKey = ctrlKey;\n\t\tthis.shiftKey = shiftKey;\n\t\tthis.altKey = altKey;\n\t\tthis.metaKey = metaKey;\n\t\tthis.keyLabel = kbLabel;\n\t\tthis.keyAriaLabel = kbAriaLabel;\n\t}\n}\n\nexport type KeybindingModifier = 'ctrl' | 'shift' | 'alt' | 'meta';\n\n/**\n * A resolved keybinding. Can be a simple keybinding or a chord keybinding.\n */\nexport abstract class ResolvedKeybinding {\n\t/**\n\t * This prints the binding in a format suitable for displaying in the UI.\n\t */\n\tpublic abstract getLabel(): string | null;\n\t/**\n\t * This prints the binding in a format suitable for ARIA.\n\t */\n\tpublic abstract getAriaLabel(): string | null;\n\t/**\n\t * This prints the binding in a format suitable for electron's accelerators.\n\t * See https://github.com/electron/electron/blob/master/docs/api/accelerator.md\n\t */\n\tpublic abstract getElectronAccelerator(): string | null;\n\t/**\n\t * This prints the binding in a format suitable for user settings.\n\t */\n\tpublic abstract getUserSettingsLabel(): string | null;\n\t/**\n\t * Is the user settings label reflecting the label?\n\t */\n\tpublic abstract isWYSIWYG(): boolean;\n\n\t/**\n\t * Is the binding a chord?\n\t */\n\tpublic abstract isChord(): boolean;\n\n\t/**\n\t * Returns the parts that comprise of the keybinding.\n\t * Simple keybindings return one element.\n\t */\n\tpublic abstract getParts(): ResolvedKeybindingPart[];\n\n\t/**\n\t * Returns the parts that should be used for dispatching.\n\t * Returns null for parts consisting of only modifier keys\n\t * @example keybinding \"Shift\" -> null\n\t * @example keybinding (\"D\" with shift == true) -> \"shift+D\"\n\t */\n\tpublic abstract getDispatchParts(): (string | null)[];\n\n\t/**\n\t * Returns the parts that should be used for dispatching single modifier keys\n\t * Returns null for parts that contain more than one modifier or a regular key.\n\t * @example keybinding \"Shift\" -> \"shift\"\n\t * @example keybinding (\"D\" with shift == true\") -> null\n\t */\n\tpublic abstract getSingleModifierDispatchParts(): (KeybindingModifier | null)[];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCodeUtils, ScanCodeUtils } from 'vs/base/common/keyCodes';\nimport { ChordKeybinding, Keybinding, SimpleKeybinding, ScanCodeBinding } from 'vs/base/common/keybindings';\nimport { OperatingSystem } from 'vs/base/common/platform';\n\nexport class KeybindingParser {\n\n\tprivate static _readModifiers(input: string) {\n\t\tinput = input.toLowerCase().trim();\n\n\t\tlet ctrl = false;\n\t\tlet shift = false;\n\t\tlet alt = false;\n\t\tlet meta = false;\n\n\t\tlet matchedModifier: boolean;\n\n\t\tdo {\n\t\t\tmatchedModifier = false;\n\t\t\tif (/^ctrl(\\+|\\-)/.test(input)) {\n\t\t\t\tctrl = true;\n\t\t\t\tinput = input.substr('ctrl-'.length);\n\t\t\t\tmatchedModifier = true;\n\t\t\t}\n\t\t\tif (/^shift(\\+|\\-)/.test(input)) {\n\t\t\t\tshift = true;\n\t\t\t\tinput = input.substr('shift-'.length);\n\t\t\t\tmatchedModifier = true;\n\t\t\t}\n\t\t\tif (/^alt(\\+|\\-)/.test(input)) {\n\t\t\t\talt = true;\n\t\t\t\tinput = input.substr('alt-'.length);\n\t\t\t\tmatchedModifier = true;\n\t\t\t}\n\t\t\tif (/^meta(\\+|\\-)/.test(input)) {\n\t\t\t\tmeta = true;\n\t\t\t\tinput = input.substr('meta-'.length);\n\t\t\t\tmatchedModifier = true;\n\t\t\t}\n\t\t\tif (/^win(\\+|\\-)/.test(input)) {\n\t\t\t\tmeta = true;\n\t\t\t\tinput = input.substr('win-'.length);\n\t\t\t\tmatchedModifier = true;\n\t\t\t}\n\t\t\tif (/^cmd(\\+|\\-)/.test(input)) {\n\t\t\t\tmeta = true;\n\t\t\t\tinput = input.substr('cmd-'.length);\n\t\t\t\tmatchedModifier = true;\n\t\t\t}\n\t\t} while (matchedModifier);\n\n\t\tlet key: string;\n\n\t\tconst firstSpaceIdx = input.indexOf(' ');\n\t\tif (firstSpaceIdx > 0) {\n\t\t\tkey = input.substring(0, firstSpaceIdx);\n\t\t\tinput = input.substring(firstSpaceIdx);\n\t\t} else {\n\t\t\tkey = input;\n\t\t\tinput = '';\n\t\t}\n\n\t\treturn {\n\t\t\tremains: input,\n\t\t\tctrl,\n\t\t\tshift,\n\t\t\talt,\n\t\t\tmeta,\n\t\t\tkey\n\t\t};\n\t}\n\n\tprivate static parseSimpleKeybinding(input: string): [SimpleKeybinding, string] {\n\t\tconst mods = this._readModifiers(input);\n\t\tconst keyCode = KeyCodeUtils.fromUserSettings(mods.key);\n\t\treturn [new SimpleKeybinding(mods.ctrl, mods.shift, mods.alt, mods.meta, keyCode), mods.remains];\n\t}\n\n\tpublic static parseKeybinding(input: string, OS: OperatingSystem): Keybinding | null {\n\t\tif (!input) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst parts: SimpleKeybinding[] = [];\n\t\tlet part: SimpleKeybinding;\n\n\t\tdo {\n\t\t\t[part, input] = this.parseSimpleKeybinding(input);\n\t\t\tparts.push(part);\n\t\t} while (input.length > 0);\n\t\treturn new ChordKeybinding(parts);\n\t}\n\n\tprivate static parseSimpleUserBinding(input: string): [SimpleKeybinding | ScanCodeBinding, string] {\n\t\tconst mods = this._readModifiers(input);\n\t\tconst scanCodeMatch = mods.key.match(/^\\[([^\\]]+)\\]$/);\n\t\tif (scanCodeMatch) {\n\t\t\tconst strScanCode = scanCodeMatch[1];\n\t\t\tconst scanCode = ScanCodeUtils.lowerCaseToEnum(strScanCode);\n\t\t\treturn [new ScanCodeBinding(mods.ctrl, mods.shift, mods.alt, mods.meta, scanCode), mods.remains];\n\t\t}\n\t\tconst keyCode = KeyCodeUtils.fromUserSettings(mods.key);\n\t\treturn [new SimpleKeybinding(mods.ctrl, mods.shift, mods.alt, mods.meta, keyCode), mods.remains];\n\t}\n\n\tstatic parseUserBinding(input: string): (SimpleKeybinding | ScanCodeBinding)[] {\n\t\tif (!input) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst parts: (SimpleKeybinding | ScanCodeBinding)[] = [];\n\t\tlet part: SimpleKeybinding | ScanCodeBinding;\n\n\t\twhile (input.length > 0) {\n\t\t\t[part, input] = this.parseSimpleUserBinding(input);\n\t\t\tparts.push(part);\n\t\t}\n\t\treturn parts;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { once } from 'vs/base/common/functional';\nimport { Iterable } from 'vs/base/common/iterator';\n\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\nlet disposableTracker: IDisposableTracker | null = null;\n\nexport interface IDisposableTracker {\n\t/**\n\t * Is called on construction of a disposable.\n\t*/\n\ttrackDisposable(disposable: IDisposable): void;\n\n\t/**\n\t * Is called when a disposable is registered as child of another disposable (e.g. {@link DisposableStore}).\n\t * If parent is `null`, the disposable is removed from its former parent.\n\t*/\n\tsetParent(child: IDisposable, parent: IDisposable | null): void;\n\n\t/**\n\t * Is called after a disposable is disposed.\n\t*/\n\tmarkAsDisposed(disposable: IDisposable): void;\n\n\t/**\n\t * Indicates that the given object is a singleton which does not need to be disposed.\n\t*/\n\tmarkAsSingleton(disposable: IDisposable): void;\n}\n\nexport function setDisposableTracker(tracker: IDisposableTracker | null): void {\n\tdisposableTracker = tracker;\n}\n\nif (TRACK_DISPOSABLES) {\n\tconst __is_disposable_tracked__ = '__is_disposable_tracked__';\n\tsetDisposableTracker(new class implements IDisposableTracker {\n\t\ttrackDisposable(x: IDisposable): void {\n\t\t\tconst stack = new Error('Potentially leaked disposable').stack!;\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (!(x as any)[__is_disposable_tracked__]) {\n\t\t\t\t\tconsole.log(stack);\n\t\t\t\t}\n\t\t\t}, 3000);\n\t\t}\n\n\t\tsetParent(child: IDisposable, parent: IDisposable | null): void {\n\t\t\tif (child && child !== Disposable.None) {\n\t\t\t\ttry {\n\t\t\t\t\t(child as any)[__is_disposable_tracked__] = true;\n\t\t\t\t} catch {\n\t\t\t\t\t// noop\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tmarkAsDisposed(disposable: IDisposable): void {\n\t\t\tif (disposable && disposable !== Disposable.None) {\n\t\t\t\ttry {\n\t\t\t\t\t(disposable as any)[__is_disposable_tracked__] = true;\n\t\t\t\t} catch {\n\t\t\t\t\t// noop\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tmarkAsSingleton(disposable: IDisposable): void { }\n\t});\n}\n\nfunction trackDisposable<T extends IDisposable>(x: T): T {\n\tdisposableTracker?.trackDisposable(x);\n\treturn x;\n}\n\nfunction markAsDisposed(disposable: IDisposable): void {\n\tdisposableTracker?.markAsDisposed(disposable);\n}\n\nfunction setParentOfDisposable(child: IDisposable, parent: IDisposable | null): void {\n\tdisposableTracker?.setParent(child, parent);\n}\n\nfunction setParentOfDisposables(children: IDisposable[], parent: IDisposable | null): void {\n\tif (!disposableTracker) {\n\t\treturn;\n\t}\n\tfor (const child of children) {\n\t\tdisposableTracker.setParent(child, parent);\n\t}\n}\n\n/**\n * Indicates that the given object is a singleton which does not need to be disposed.\n*/\nexport function markAsSingleton<T extends IDisposable>(singleton: T): T {\n\tdisposableTracker?.markAsSingleton(singleton);\n\treturn singleton;\n}\n\nexport class MultiDisposeError extends Error {\n\tconstructor(\n\t\tpublic readonly errors: any[]\n\t) {\n\t\tsuper(`Encountered errors while disposing of store. Errors: [${errors.join(', ')}]`);\n\t}\n}\n\nexport interface IDisposable {\n\tdispose(): void;\n}\n\nexport function isDisposable<E extends object>(thing: E): thing is E & IDisposable {\n\treturn typeof (<IDisposable>thing).dispose === 'function' && (<IDisposable>thing).dispose.length === 0;\n}\n\nexport function dispose<T extends IDisposable>(disposable: T): T;\nexport function dispose<T extends IDisposable>(disposable: T | undefined): T | undefined;\nexport function dispose<T extends IDisposable, A extends IterableIterator<T> = IterableIterator<T>>(disposables: IterableIterator<T>): A;\nexport function dispose<T extends IDisposable>(disposables: Array<T>): Array<T>;\nexport function dispose<T extends IDisposable>(disposables: ReadonlyArray<T>): ReadonlyArray<T>;\nexport function dispose<T extends IDisposable>(arg: T | IterableIterator<T> | undefined): any {\n\tif (Iterable.is(arg)) {\n\t\tlet errors: any[] = [];\n\n\t\tfor (const d of arg) {\n\t\t\tif (d) {\n\t\t\t\ttry {\n\t\t\t\t\td.dispose();\n\t\t\t\t} catch (e) {\n\t\t\t\t\terrors.push(e);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (errors.length === 1) {\n\t\t\tthrow errors[0];\n\t\t} else if (errors.length > 1) {\n\t\t\tthrow new MultiDisposeError(errors);\n\t\t}\n\n\t\treturn Array.isArray(arg) ? [] : arg;\n\t} else if (arg) {\n\t\targ.dispose();\n\t\treturn arg;\n\t}\n}\n\n\nexport function combinedDisposable(...disposables: IDisposable[]): IDisposable {\n\tconst parent = toDisposable(() => dispose(disposables));\n\tsetParentOfDisposables(disposables, parent);\n\treturn parent;\n}\n\nexport function toDisposable(fn: () => void): IDisposable {\n\tconst self = trackDisposable({\n\t\tdispose: once(() => {\n\t\t\tmarkAsDisposed(self);\n\t\t\tfn();\n\t\t})\n\t});\n\treturn self;\n}\n\nexport class DisposableStore implements IDisposable {\n\n\tstatic DISABLE_DISPOSED_WARNING = false;\n\n\tprivate _toDispose = new Set<IDisposable>();\n\tprivate _isDisposed = false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\t/**\n\t * Dispose of all registered disposables and mark this object as disposed.\n\t *\n\t * Any future disposables added to this object will be disposed of on `add`.\n\t */\n\tpublic dispose(): void {\n\t\tif (this._isDisposed) {\n\t\t\treturn;\n\t\t}\n\n\t\tmarkAsDisposed(this);\n\t\tthis._isDisposed = true;\n\t\tthis.clear();\n\t}\n\n\t/**\n\t * Dispose of all registered disposables but do not mark this object as disposed.\n\t */\n\tpublic clear(): void {\n\t\ttry {\n\t\t\tdispose(this._toDispose.values());\n\t\t} finally {\n\t\t\tthis._toDispose.clear();\n\t\t}\n\t}\n\n\tpublic add<T extends IDisposable>(o: T): T {\n\t\tif (!o) {\n\t\t\treturn o;\n\t\t}\n\t\tif ((o as unknown as DisposableStore) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\n\t\tsetParentOfDisposable(o, this);\n\t\tif (this._isDisposed) {\n\t\t\tif (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n\t\t\t\tconsole.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._toDispose.add(o);\n\t\t}\n\n\t\treturn o;\n\t}\n}\n\nexport abstract class Disposable implements IDisposable {\n\n\tstatic readonly None = Object.freeze<IDisposable>({ dispose() { } });\n\n\tprivate readonly _store = new DisposableStore();\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t\tsetParentOfDisposable(this._store, this);\n\t}\n\n\tpublic dispose(): void {\n\t\tmarkAsDisposed(this);\n\n\t\tthis._store.dispose();\n\t}\n\n\tprotected _register<T extends IDisposable>(o: T): T {\n\t\tif ((o as unknown as Disposable) === this) {\n\t\t\tthrow new Error('Cannot register a disposable on itself!');\n\t\t}\n\t\treturn this._store.add(o);\n\t}\n}\n\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable<T extends IDisposable> implements IDisposable {\n\tprivate _value?: T;\n\tprivate _isDisposed = false;\n\n\tconstructor() {\n\t\ttrackDisposable(this);\n\t}\n\n\tget value(): T | undefined {\n\t\treturn this._isDisposed ? undefined : this._value;\n\t}\n\n\tset value(value: T | undefined) {\n\t\tif (this._isDisposed || value === this._value) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._value?.dispose();\n\t\tif (value) {\n\t\t\tsetParentOfDisposable(value, this);\n\t\t}\n\t\tthis._value = value;\n\t}\n\n\tclear() {\n\t\tthis.value = undefined;\n\t}\n\n\tdispose(): void {\n\t\tthis._isDisposed = true;\n\t\tmarkAsDisposed(this);\n\t\tthis._value?.dispose();\n\t\tthis._value = undefined;\n\t}\n\n\t/**\n\t * Clears the value, but does not dispose it.\n\t * The old value is returned.\n\t*/\n\tclearAndLeak(): T | undefined {\n\t\tconst oldValue = this._value;\n\t\tthis._value = undefined;\n\t\tif (oldValue) {\n\t\t\tsetParentOfDisposable(oldValue, null);\n\t\t}\n\t\treturn oldValue;\n\t}\n}\n\nexport class RefCountedDisposable {\n\n\tprivate _counter: number = 1;\n\n\tconstructor(\n\t\tprivate readonly _disposable: IDisposable,\n\t) { }\n\n\tacquire() {\n\t\tthis._counter++;\n\t\treturn this;\n\t}\n\n\trelease() {\n\t\tif (--this._counter === 0) {\n\t\t\tthis._disposable.dispose();\n\t\t}\n\t\treturn this;\n\t}\n}\n\nexport interface IReference<T> extends IDisposable {\n\treadonly object: T;\n}\n\nexport abstract class ReferenceCollection<T> {\n\n\tprivate readonly references: Map<string, { readonly object: T; counter: number; }> = new Map();\n\n\tacquire(key: string, ...args: any[]): IReference<T> {\n\t\tlet reference = this.references.get(key);\n\n\t\tif (!reference) {\n\t\t\treference = { counter: 0, object: this.createReferencedObject(key, ...args) };\n\t\t\tthis.references.set(key, reference);\n\t\t}\n\n\t\tconst { object } = reference;\n\t\tconst dispose = once(() => {\n\t\t\tif (--reference!.counter === 0) {\n\t\t\t\tthis.destroyReferencedObject(key, reference!.object);\n\t\t\t\tthis.references.delete(key);\n\t\t\t}\n\t\t});\n\n\t\treference.counter++;\n\n\t\treturn { object, dispose };\n\t}\n\n\tprotected abstract createReferencedObject(key: string, ...args: any[]): T;\n\tprotected abstract destroyReferencedObject(key: string, object: T): void;\n}\n\n/**\n * Unwraps a reference collection of promised values. Makes sure\n * references are disposed whenever promises get rejected.\n */\nexport class AsyncReferenceCollection<T> {\n\n\tconstructor(private referenceCollection: ReferenceCollection<Promise<T>>) { }\n\n\tasync acquire(key: string, ...args: any[]): Promise<IReference<T>> {\n\t\tconst ref = this.referenceCollection.acquire(key, ...args);\n\n\t\ttry {\n\t\t\tconst object = await ref.object;\n\n\t\t\treturn {\n\t\t\t\tobject,\n\t\t\t\tdispose: () => ref.dispose()\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tref.dispose();\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nexport class ImmortalReference<T> implements IReference<T> {\n\tconstructor(public object: T) { }\n\tdispose(): void { /* noop */ }\n}\n\nexport function disposeOnReturn(fn: (store: DisposableStore) => void): void {\n\tconst store = new DisposableStore();\n\ttry {\n\t\tfn(store);\n\t} finally {\n\t\tstore.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nclass Node<E> {\n\n\tstatic readonly Undefined = new Node<any>(undefined);\n\n\telement: E;\n\tnext: Node<E>;\n\tprev: Node<E>;\n\n\tconstructor(element: E) {\n\t\tthis.element = element;\n\t\tthis.next = Node.Undefined;\n\t\tthis.prev = Node.Undefined;\n\t}\n}\n\nexport class LinkedList<E> {\n\n\tprivate _first: Node<E> = Node.Undefined;\n\tprivate _last: Node<E> = Node.Undefined;\n\tprivate _size: number = 0;\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._first === Node.Undefined;\n\t}\n\n\tclear(): void {\n\t\tlet node = this._first;\n\t\twhile (node !== Node.Undefined) {\n\t\t\tconst next = node.next;\n\t\t\tnode.prev = Node.Undefined;\n\t\t\tnode.next = Node.Undefined;\n\t\t\tnode = next;\n\t\t}\n\n\t\tthis._first = Node.Undefined;\n\t\tthis._last = Node.Undefined;\n\t\tthis._size = 0;\n\t}\n\n\tunshift(element: E): () => void {\n\t\treturn this._insert(element, false);\n\t}\n\n\tpush(element: E): () => void {\n\t\treturn this._insert(element, true);\n\t}\n\n\tprivate _insert(element: E, atTheEnd: boolean): () => void {\n\t\tconst newNode = new Node(element);\n\t\tif (this._first === Node.Undefined) {\n\t\t\tthis._first = newNode;\n\t\t\tthis._last = newNode;\n\n\t\t} else if (atTheEnd) {\n\t\t\t// push\n\t\t\tconst oldLast = this._last!;\n\t\t\tthis._last = newNode;\n\t\t\tnewNode.prev = oldLast;\n\t\t\toldLast.next = newNode;\n\n\t\t} else {\n\t\t\t// unshift\n\t\t\tconst oldFirst = this._first;\n\t\t\tthis._first = newNode;\n\t\t\tnewNode.next = oldFirst;\n\t\t\toldFirst.prev = newNode;\n\t\t}\n\t\tthis._size += 1;\n\n\t\tlet didRemove = false;\n\t\treturn () => {\n\t\t\tif (!didRemove) {\n\t\t\t\tdidRemove = true;\n\t\t\t\tthis._remove(newNode);\n\t\t\t}\n\t\t};\n\t}\n\n\tshift(): E | undefined {\n\t\tif (this._first === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._first.element;\n\t\t\tthis._remove(this._first);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tpop(): E | undefined {\n\t\tif (this._last === Node.Undefined) {\n\t\t\treturn undefined;\n\t\t} else {\n\t\t\tconst res = this._last.element;\n\t\t\tthis._remove(this._last);\n\t\t\treturn res;\n\t\t}\n\t}\n\n\tprivate _remove(node: Node<E>): void {\n\t\tif (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n\t\t\t// middle\n\t\t\tconst anchor = node.prev;\n\t\t\tanchor.next = node.next;\n\t\t\tnode.next.prev = anchor;\n\n\t\t} else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n\t\t\t// only node\n\t\t\tthis._first = Node.Undefined;\n\t\t\tthis._last = Node.Undefined;\n\n\t\t} else if (node.next === Node.Undefined) {\n\t\t\t// last\n\t\t\tthis._last = this._last!.prev!;\n\t\t\tthis._last.next = Node.Undefined;\n\n\t\t} else if (node.prev === Node.Undefined) {\n\t\t\t// first\n\t\t\tthis._first = this._first!.next!;\n\t\t\tthis._first.prev = Node.Undefined;\n\t\t}\n\n\t\t// done\n\t\tthis._size -= 1;\n\t}\n\n\t*[Symbol.iterator](): Iterator<E> {\n\t\tlet node = this._first;\n\t\twhile (node !== Node.Undefined) {\n\t\t\tyield node.element;\n\t\t\tnode = node.next;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\n//@ts-check\n\n(function () {\n\n\t/**\n\t * @returns {{mark(name:string):void, getMarks():{name:string, startTime:number}[]}}\n\t */\n\tfunction _definePolyfillMarks(timeOrigin) {\n\n\t\tconst _data = [];\n\t\tif (typeof timeOrigin === 'number') {\n\t\t\t_data.push('code/timeOrigin', timeOrigin);\n\t\t}\n\n\t\tfunction mark(name) {\n\t\t\t_data.push(name, Date.now());\n\t\t}\n\t\tfunction getMarks() {\n\t\t\tconst result = [];\n\t\t\tfor (let i = 0; i < _data.length; i += 2) {\n\t\t\t\tresult.push({\n\t\t\t\t\tname: _data[i],\n\t\t\t\t\tstartTime: _data[i + 1],\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\treturn { mark, getMarks };\n\t}\n\n\t/**\n\t * @returns {{mark(name:string):void, getMarks():{name:string, startTime:number}[]}}\n\t */\n\tfunction _define() {\n\n\t\t// Identify browser environment when following property is not present\n\t\t// https://nodejs.org/dist/latest-v16.x/docs/api/perf_hooks.html#performancenodetiming\n\t\tif (typeof performance === 'object' && typeof performance.mark === 'function' && !performance.nodeTiming) {\n\t\t\t// in a browser context, reuse performance-util\n\n\t\t\tif (typeof performance.timeOrigin !== 'number' && !performance.timing) {\n\t\t\t\t// safari & webworker: because there is no timeOrigin and no workaround\n\t\t\t\t// we use the `Date.now`-based polyfill.\n\t\t\t\treturn _definePolyfillMarks();\n\n\t\t\t} else {\n\t\t\t\t// use \"native\" performance for mark and getMarks\n\t\t\t\treturn {\n\t\t\t\t\tmark(name) {\n\t\t\t\t\t\tperformance.mark(name);\n\t\t\t\t\t},\n\t\t\t\t\tgetMarks() {\n\t\t\t\t\t\tlet timeOrigin = performance.timeOrigin;\n\t\t\t\t\t\tif (typeof timeOrigin !== 'number') {\n\t\t\t\t\t\t\t// safari: there is no timerOrigin but in renderers there is the timing-property\n\t\t\t\t\t\t\t// see https://bugs.webkit.org/show_bug.cgi?id=174862\n\t\t\t\t\t\t\ttimeOrigin = performance.timing.navigationStart || performance.timing.redirectStart || performance.timing.fetchStart;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst result = [{ name: 'code/timeOrigin', startTime: Math.round(timeOrigin) }];\n\t\t\t\t\t\tfor (const entry of performance.getEntriesByType('mark')) {\n\t\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\t\tname: entry.name,\n\t\t\t\t\t\t\t\tstartTime: Math.round(timeOrigin + entry.startTime)\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t} else if (typeof process === 'object') {\n\t\t\t// node.js: use the normal polyfill but add the timeOrigin\n\t\t\t// from the node perf_hooks API as very first mark\n\t\t\tconst timeOrigin = Math.round((require.nodeRequire || require)('perf_hooks').performance.timeOrigin);\n\t\t\treturn _definePolyfillMarks(timeOrigin);\n\n\t\t} else {\n\t\t\t// unknown environment\n\t\t\tconsole.trace('perf-util loaded in UNKNOWN environment');\n\t\t\treturn _definePolyfillMarks();\n\t\t}\n\t}\n\n\tfunction _factory(sharedObj) {\n\t\tif (!sharedObj.MonacoPerformanceMarks) {\n\t\t\tsharedObj.MonacoPerformanceMarks = _define();\n\t\t}\n\t\treturn sharedObj.MonacoPerformanceMarks;\n\t}\n\n\t// This module can be loaded in an amd and commonjs-context.\n\t// Because we want both instances to use the same perf-data\n\t// we store them globally\n\n\t// eslint-disable-next-line no-var\n\tvar sharedObj;\n\tif (typeof global === 'object') {\n\t\t// nodejs\n\t\tsharedObj = global;\n\t} else if (typeof self === 'object') {\n\t\t// browser\n\t\tsharedObj = self;\n\t} else {\n\t\tsharedObj = {};\n\t}\n\n\tif (typeof define === 'function') {\n\t\t// amd\n\t\tdefine(\"vs/base/common/performance\", [], function () { return _factory(sharedObj); });\n\t} else if (typeof module === 'object' && typeof module.exports === 'object') {\n\t\t// commonjs\n\t\tmodule.exports = _factory(sharedObj);\n\t} else {\n\t\tconsole.trace('perf-util defined in UNKNOWN context (neither requirejs or commonjs)');\n\t\tsharedObj.perf = _factory(sharedObj);\n\t}\n\n})();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nconst LANGUAGE_DEFAULT = 'en';\n\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isLinuxSnap = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isElectron = false;\nlet _isIOS = false;\nlet _locale: string | undefined = undefined;\nlet _language: string = LANGUAGE_DEFAULT;\nlet _translationsConfigFile: string | undefined = undefined;\nlet _userAgent: string | undefined = undefined;\n\ninterface NLSConfig {\n\tlocale: string;\n\tavailableLanguages: { [key: string]: string; };\n\t_translationsConfigFile: string;\n}\n\nexport interface IProcessEnvironment {\n\t[key: string]: string | undefined;\n}\n\n/**\n * This interface is intentionally not identical to node.js\n * process because it also works in sandboxed environments\n * where the process object is implemented differently. We\n * define the properties here that we need for `platform`\n * to work and nothing else.\n */\nexport interface INodeProcess {\n\tplatform: string;\n\tarch: string;\n\tenv: IProcessEnvironment;\n\tnextTick?: (callback: (...args: any[]) => void) => void;\n\tversions?: {\n\t\telectron?: string;\n\t};\n\tsandboxed?: boolean;\n\ttype?: string;\n\tcwd: () => string;\n}\n\ndeclare const process: INodeProcess;\ndeclare const global: unknown;\ndeclare const self: unknown;\n\nexport const globals: any = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});\n\nlet nodeProcess: INodeProcess | undefined = undefined;\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n\t// Native environment (sandboxed)\n\tnodeProcess = globals.vscode.process;\n} else if (typeof process !== 'undefined') {\n\t// Native environment (non-sandboxed)\n\tnodeProcess = process;\n}\n\nconst isElectronProcess = typeof nodeProcess?.versions?.electron === 'string';\nconst isElectronRenderer = isElectronProcess && nodeProcess?.type === 'renderer';\nexport const isElectronSandboxed = isElectronRenderer && nodeProcess?.sandboxed;\n\ninterface INavigator {\n\tuserAgent: string;\n\tlanguage: string;\n\tmaxTouchPoints?: number;\n}\ndeclare const navigator: INavigator;\n\n// Web environment\nif (typeof navigator === 'object' && !isElectronRenderer) {\n\t_userAgent = navigator.userAgent;\n\t_isWindows = _userAgent.indexOf('Windows') >= 0;\n\t_isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n\t_isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n\t_isLinux = _userAgent.indexOf('Linux') >= 0;\n\t_isWeb = true;\n\t_locale = navigator.language;\n\t_language = _locale;\n}\n\n// Native environment\nelse if (typeof nodeProcess === 'object') {\n\t_isWindows = (nodeProcess.platform === 'win32');\n\t_isMacintosh = (nodeProcess.platform === 'darwin');\n\t_isLinux = (nodeProcess.platform === 'linux');\n\t_isLinuxSnap = _isLinux && !!nodeProcess.env['SNAP'] && !!nodeProcess.env['SNAP_REVISION'];\n\t_isElectron = isElectronProcess;\n\t_locale = LANGUAGE_DEFAULT;\n\t_language = LANGUAGE_DEFAULT;\n\tconst rawNlsConfig = nodeProcess.env['VSCODE_NLS_CONFIG'];\n\tif (rawNlsConfig) {\n\t\ttry {\n\t\t\tconst nlsConfig: NLSConfig = JSON.parse(rawNlsConfig);\n\t\t\tconst resolved = nlsConfig.availableLanguages['*'];\n\t\t\t_locale = nlsConfig.locale;\n\t\t\t// VSCode's default language is 'en'\n\t\t\t_language = resolved ? resolved : LANGUAGE_DEFAULT;\n\t\t\t_translationsConfigFile = nlsConfig._translationsConfigFile;\n\t\t} catch (e) {\n\t\t}\n\t}\n\t_isNative = true;\n}\n\n// Unknown environment\nelse {\n\tconsole.error('Unable to resolve platform.');\n}\n\nexport const enum Platform {\n\tWeb,\n\tMac,\n\tLinux,\n\tWindows\n}\nexport function PlatformToString(platform: Platform) {\n\tswitch (platform) {\n\t\tcase Platform.Web: return 'Web';\n\t\tcase Platform.Mac: return 'Mac';\n\t\tcase Platform.Linux: return 'Linux';\n\t\tcase Platform.Windows: return 'Windows';\n\t}\n}\n\nlet _platform: Platform = Platform.Web;\nif (_isMacintosh) {\n\t_platform = Platform.Mac;\n} else if (_isWindows) {\n\t_platform = Platform.Windows;\n} else if (_isLinux) {\n\t_platform = Platform.Linux;\n}\n\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isLinuxSnap = _isLinuxSnap;\nexport const isNative = _isNative;\nexport const isElectron = _isElectron;\nexport const isWeb = _isWeb;\nexport const isIOS = _isIOS;\nexport const platform = _platform;\nexport const userAgent = _userAgent;\n\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nexport const language = _language;\n\nexport namespace Language {\n\n\texport function value(): string {\n\t\treturn language;\n\t}\n\n\texport function isDefaultVariant(): boolean {\n\t\tif (language.length === 2) {\n\t\t\treturn language === 'en';\n\t\t} else if (language.length >= 3) {\n\t\t\treturn language[0] === 'e' && language[1] === 'n' && language[2] === '-';\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\texport function isDefault(): boolean {\n\t\treturn language === 'en';\n\t}\n}\n\n/**\n * The OS locale or the locale specified by --locale. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese). The UI is not necessarily shown in the provided locale.\n */\nexport const locale = _locale;\n\n/**\n * The translations that are available through language packs.\n */\nexport const translationsConfigFile = _translationsConfigFile;\n\ninterface ISetImmediate {\n\t(callback: (...args: unknown[]) => void): void;\n}\n\n/**\n * See https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#:~:text=than%204%2C%20then-,set%20timeout%20to%204,-.\n *\n * Works similarly to `setTimeout(0)` but doesn't suffer from the 4ms artificial delay\n * that browsers set when the nesting level is > 5.\n */\nexport const setTimeout0 = (() => {\n\tif (typeof globals.postMessage === 'function' && !globals.importScripts) {\n\t\tinterface IQueueElement {\n\t\t\tid: number;\n\t\t\tcallback: () => void;\n\t\t}\n\t\tlet pending: IQueueElement[] = [];\n\t\tglobals.addEventListener('message', (e: MessageEvent) => {\n\t\t\tif (e.data && e.data.vscodeScheduleAsyncWork) {\n\t\t\t\tfor (let i = 0, len = pending.length; i < len; i++) {\n\t\t\t\t\tconst candidate = pending[i];\n\t\t\t\t\tif (candidate.id === e.data.vscodeScheduleAsyncWork) {\n\t\t\t\t\t\tpending.splice(i, 1);\n\t\t\t\t\t\tcandidate.callback();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tlet lastId = 0;\n\t\treturn (callback: () => void) => {\n\t\t\tconst myId = ++lastId;\n\t\t\tpending.push({\n\t\t\t\tid: myId,\n\t\t\t\tcallback: callback\n\t\t\t});\n\t\t\tglobals.postMessage({ vscodeScheduleAsyncWork: myId }, '*');\n\t\t};\n\t}\n\treturn (callback: () => void) => setTimeout(callback);\n})();\n\nexport const setImmediate: ISetImmediate = (function defineSetImmediate() {\n\tif (globals.setImmediate) {\n\t\treturn globals.setImmediate.bind(globals);\n\t}\n\tif (typeof globals.postMessage === 'function' && !globals.importScripts) {\n\t\treturn setTimeout0;\n\t}\n\tif (typeof nodeProcess?.nextTick === 'function') {\n\t\treturn nodeProcess.nextTick.bind(nodeProcess);\n\t}\n\tconst _promise = Promise.resolve();\n\treturn (callback: (...args: unknown[]) => void) => _promise.then(callback);\n})();\n\nexport const enum OperatingSystem {\n\tWindows = 1,\n\tMacintosh = 2,\n\tLinux = 3\n}\nexport const OS = (_isMacintosh || _isIOS ? OperatingSystem.Macintosh : (_isWindows ? OperatingSystem.Windows : OperatingSystem.Linux));\n\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nexport function isLittleEndian(): boolean {\n\tif (!_isLittleEndianComputed) {\n\t\t_isLittleEndianComputed = true;\n\t\tconst test = new Uint8Array(2);\n\t\ttest[0] = 1;\n\t\ttest[1] = 2;\n\t\tconst view = new Uint16Array(test.buffer);\n\t\t_isLittleEndian = (view[0] === (2 << 8) + 1);\n\t}\n\treturn _isLittleEndian;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { globals, INodeProcess, isMacintosh, isWindows } from 'vs/base/common/platform';\n\nlet safeProcess: Omit<INodeProcess, 'arch'> & { arch: string | undefined; };\ndeclare const process: INodeProcess;\n\n// Native sandbox environment\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n\tconst sandboxProcess: INodeProcess = globals.vscode.process;\n\tsafeProcess = {\n\t\tget platform() { return sandboxProcess.platform; },\n\t\tget arch() { return sandboxProcess.arch; },\n\t\tget env() { return sandboxProcess.env; },\n\t\tcwd() { return sandboxProcess.cwd(); }\n\t};\n}\n\n// Native node.js environment\nelse if (typeof process !== 'undefined') {\n\tsafeProcess = {\n\t\tget platform() { return process.platform; },\n\t\tget arch() { return process.arch; },\n\t\tget env() { return process.env; },\n\t\tcwd() { return process.env['VSCODE_CWD'] || process.cwd(); }\n\t};\n}\n\n// Web environment\nelse {\n\tsafeProcess = {\n\n\t\t// Supported\n\t\tget platform() { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n\t\tget arch() { return undefined; /* arch is undefined in web */ },\n\n\t\t// Unsupported\n\t\tget env() { return {}; },\n\t\tcwd() { return '/'; }\n\t};\n}\n\n/**\n * Provides safe access to the `cwd` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `/`.\n */\nexport const cwd = safeProcess.cwd;\n\n/**\n * Provides safe access to the `env` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `{}`.\n */\nexport const env = safeProcess.env;\n\n/**\n * Provides safe access to the `platform` property in node.js, sandboxed or web\n * environments.\n */\nexport const platform = safeProcess.platform;\n\n/**\n * Provides safe access to the `arch` method in node.js, sandboxed or web\n * environments.\n * Note: `arch` is `undefined` in web\n */\nexport const arch = safeProcess.arch;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/blob/v14.16.0/lib/path.js\n\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport * as process from 'vs/base/common/process';\n\nconst CHAR_UPPERCASE_A = 65;/* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\n\nclass ErrorInvalidArgType extends Error {\n\tcode: 'ERR_INVALID_ARG_TYPE';\n\tconstructor(name: string, expected: string, actual: unknown) {\n\t\t// determiner: 'must be' or 'must not be'\n\t\tlet determiner;\n\t\tif (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n\t\t\tdeterminer = 'must not be';\n\t\t\texpected = expected.replace(/^not /, '');\n\t\t} else {\n\t\t\tdeterminer = 'must be';\n\t\t}\n\n\t\tconst type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n\t\tlet msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n\n\t\tmsg += `. Received type ${typeof actual}`;\n\t\tsuper(msg);\n\n\t\tthis.code = 'ERR_INVALID_ARG_TYPE';\n\t}\n}\n\nfunction validateString(value: string, name: string) {\n\tif (typeof value !== 'string') {\n\t\tthrow new ErrorInvalidArgType(name, 'string', value);\n\t}\n}\n\nfunction isPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\n\nfunction isPosixPathSeparator(code: number | undefined) {\n\treturn code === CHAR_FORWARD_SLASH;\n}\n\nfunction isWindowsDeviceRoot(code: number) {\n\treturn (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\n\t\t(code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\n}\n\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path: string, allowAboveRoot: boolean, separator: string, isPathSeparator: (code?: number) => boolean) {\n\tlet res = '';\n\tlet lastSegmentLength = 0;\n\tlet lastSlash = -1;\n\tlet dots = 0;\n\tlet code = 0;\n\tfor (let i = 0; i <= path.length; ++i) {\n\t\tif (i < path.length) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t}\n\t\telse if (isPathSeparator(code)) {\n\t\t\tbreak;\n\t\t}\n\t\telse {\n\t\t\tcode = CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\tif (isPathSeparator(code)) {\n\t\t\tif (lastSlash === i - 1 || dots === 1) {\n\t\t\t\t// NOOP\n\t\t\t} else if (dots === 2) {\n\t\t\t\tif (res.length < 2 || lastSegmentLength !== 2 ||\n\t\t\t\t\tres.charCodeAt(res.length - 1) !== CHAR_DOT ||\n\t\t\t\t\tres.charCodeAt(res.length - 2) !== CHAR_DOT) {\n\t\t\t\t\tif (res.length > 2) {\n\t\t\t\t\t\tconst lastSlashIndex = res.lastIndexOf(separator);\n\t\t\t\t\t\tif (lastSlashIndex === -1) {\n\t\t\t\t\t\t\tres = '';\n\t\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tres = res.slice(0, lastSlashIndex);\n\t\t\t\t\t\t\tlastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (res.length !== 0) {\n\t\t\t\t\t\tres = '';\n\t\t\t\t\t\tlastSegmentLength = 0;\n\t\t\t\t\t\tlastSlash = i;\n\t\t\t\t\t\tdots = 0;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (allowAboveRoot) {\n\t\t\t\t\tres += res.length > 0 ? `${separator}..` : '..';\n\t\t\t\t\tlastSegmentLength = 2;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (res.length > 0) {\n\t\t\t\t\tres += `${separator}${path.slice(lastSlash + 1, i)}`;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tres = path.slice(lastSlash + 1, i);\n\t\t\t\t}\n\t\t\t\tlastSegmentLength = i - lastSlash - 1;\n\t\t\t}\n\t\t\tlastSlash = i;\n\t\t\tdots = 0;\n\t\t} else if (code === CHAR_DOT && dots !== -1) {\n\t\t\t++dots;\n\t\t} else {\n\t\t\tdots = -1;\n\t\t}\n\t}\n\treturn res;\n}\n\nfunction _format(sep: string, pathObject: ParsedPath) {\n\tif (pathObject === null || typeof pathObject !== 'object') {\n\t\tthrow new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n\t}\n\tconst dir = pathObject.dir || pathObject.root;\n\tconst base = pathObject.base ||\n\t\t`${pathObject.name || ''}${pathObject.ext || ''}`;\n\tif (!dir) {\n\t\treturn base;\n\t}\n\treturn dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\n\nexport interface ParsedPath {\n\troot: string;\n\tdir: string;\n\tbase: string;\n\text: string;\n\tname: string;\n}\n\nexport interface IPath {\n\tnormalize(path: string): string;\n\tisAbsolute(path: string): boolean;\n\tjoin(...paths: string[]): string;\n\tresolve(...pathSegments: string[]): string;\n\trelative(from: string, to: string): string;\n\tdirname(path: string): string;\n\tbasename(path: string, ext?: string): string;\n\textname(path: string): string;\n\tformat(pathObject: ParsedPath): string;\n\tparse(path: string): ParsedPath;\n\ttoNamespacedPath(path: string): string;\n\tsep: '\\\\' | '/';\n\tdelimiter: string;\n\twin32: IPath | null;\n\tposix: IPath | null;\n}\n\nexport const win32: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedDevice = '';\n\t\tlet resolvedTail = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1; i--) {\n\t\t\tlet path;\n\t\t\tif (i >= 0) {\n\t\t\t\tpath = pathSegments[i];\n\t\t\t\tvalidateString(path, 'path');\n\n\t\t\t\t// Skip empty entries\n\t\t\t\tif (path.length === 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t} else if (resolvedDevice.length === 0) {\n\t\t\t\tpath = process.cwd();\n\t\t\t} else {\n\t\t\t\t// Windows has the concept of drive-specific current working\n\t\t\t\t// directories. If we've resolved a drive letter but not yet an\n\t\t\t\t// absolute path, get cwd for that drive, or the process cwd if\n\t\t\t\t// the drive cwd is not available. We're sure the device is not\n\t\t\t\t// a UNC path at this points, because UNC paths are always absolute.\n\t\t\t\tpath = process.env[`=${resolvedDevice}`] || process.cwd();\n\n\t\t\t\t// Verify that a cwd was found and that it actually points\n\t\t\t\t// to our drive. If not, default to the drive's root.\n\t\t\t\tif (path === undefined ||\n\t\t\t\t\t(path.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n\t\t\t\t\t\tpath.charCodeAt(2) === CHAR_BACKWARD_SLASH)) {\n\t\t\t\t\tpath = `${resolvedDevice}\\\\`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst len = path.length;\n\t\t\tlet rootEnd = 0;\n\t\t\tlet device = '';\n\t\t\tlet isAbsolute = false;\n\t\t\tconst code = path.charCodeAt(0);\n\n\t\t\t// Try to match a root\n\t\t\tif (len === 1) {\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// `path` contains just a path separator\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t}\n\t\t\t} else if (isPathSeparator(code)) {\n\t\t\t\t// Possible UNC root\n\n\t\t\t\t// If we started with a separator, we know we at least have an\n\t\t\t\t// absolute path of some kind (UNC or otherwise)\n\t\t\t\tisAbsolute = true;\n\n\t\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t\t// Matched double path separator at beginning\n\t\t\t\t\tlet j = 2;\n\t\t\t\t\tlet last = j;\n\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (j === len || j !== last) {\n\t\t\t\t\t\t\t\t// We matched a UNC root\n\t\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trootEnd = 1;\n\t\t\t\t}\n\t\t\t} else if (isWindowsDeviceRoot(code) &&\n\t\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\t\t// Possible device root\n\t\t\t\tdevice = path.slice(0, 2);\n\t\t\t\trootEnd = 2;\n\t\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t\t// indicator\n\t\t\t\t\tisAbsolute = true;\n\t\t\t\t\trootEnd = 3;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (device.length > 0) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tif (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n\t\t\t\t\t\t// This path points to another device so it is not applicable\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresolvedDevice = device;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (resolvedAbsolute) {\n\t\t\t\tif (resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n\t\t\t\tresolvedAbsolute = isAbsolute;\n\t\t\t\tif (isAbsolute && resolvedDevice.length > 0) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path,\n\t\t// but handle relative paths to be safe (might happen when process.cwd()\n\t\t// fails)\n\n\t\t// Normalize the tail path\n\t\tresolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\',\n\t\t\tisPathSeparator);\n\n\t\treturn resolvedAbsolute ?\n\t\t\t`${resolvedDevice}\\\\${resolvedTail}` :\n\t\t\t`${resolvedDevice}${resolvedTail}` || '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = 0;\n\t\tlet device;\n\t\tlet isAbsolute = false;\n\t\tconst code = path.charCodeAt(0);\n\n\t\t// Try to match a root\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a single char, exit early to avoid\n\t\t\t// unnecessary work\n\t\t\treturn isPosixPathSeparator(code) ? '\\\\' : path;\n\t\t}\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\t// If we started with a separator, we know we at least have an absolute\n\t\t\t// path of some kind (UNC or otherwise)\n\t\t\tisAbsolute = true;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\tconst firstPart = path.slice(last, j);\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\t// Return the normalized version of the UNC root since there\n\t\t\t\t\t\t\t// is nothing left to process\n\t\t\t\t\t\t\treturn `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\tdevice = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trootEnd = 1;\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tdevice = path.slice(0, 2);\n\t\t\trootEnd = 2;\n\t\t\tif (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// Treat separator following drive name as an absolute path\n\t\t\t\t// indicator\n\t\t\t\tisAbsolute = true;\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\n\t\tlet tail = rootEnd < len ?\n\t\t\tnormalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n\t\t\t'';\n\t\tif (tail.length === 0 && !isAbsolute) {\n\t\t\ttail = '.';\n\t\t}\n\t\tif (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n\t\t\ttail += '\\\\';\n\t\t}\n\t\tif (device === undefined) {\n\t\t\treturn isAbsolute ? `\\\\${tail}` : tail;\n\t\t}\n\t\treturn isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst code = path.charCodeAt(0);\n\t\treturn isPathSeparator(code) ||\n\t\t\t// Possible device root\n\t\t\t(len > 2 &&\n\t\t\t\tisWindowsDeviceRoot(code) &&\n\t\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\t\tisPathSeparator(path.charCodeAt(2)));\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tlet joined;\n\t\tlet firstPart: string | undefined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = firstPart = arg;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tjoined += `\\\\${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\n\t\t// Make sure that the joined path doesn't start with two slashes, because\n\t\t// normalize() will mistake it for a UNC path then.\n\t\t//\n\t\t// This step is skipped when it is very clear that the user actually\n\t\t// intended to point at a UNC path. This is assumed when the first\n\t\t// non-empty string arguments starts with exactly two slashes followed by\n\t\t// at least one more non-slash character.\n\t\t//\n\t\t// Note that for normalize() to treat a path as a UNC path it needs to\n\t\t// have at least 2 components, so we don't filter for that here.\n\t\t// This means that the user can use join to construct UNC paths from\n\t\t// a server name and a share name; for example:\n\t\t//   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n\t\tlet needsReplace = true;\n\t\tlet slashCount = 0;\n\t\tif (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n\t\t\t++slashCount;\n\t\t\tconst firstLen = firstPart.length;\n\t\t\tif (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n\t\t\t\t++slashCount;\n\t\t\t\tif (firstLen > 2) {\n\t\t\t\t\tif (isPathSeparator(firstPart.charCodeAt(2))) {\n\t\t\t\t\t\t++slashCount;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// We matched a UNC path in the first part\n\t\t\t\t\t\tneedsReplace = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (needsReplace) {\n\t\t\t// Find any more consecutive slashes we need to replace\n\t\t\twhile (slashCount < joined.length &&\n\t\t\t\tisPathSeparator(joined.charCodeAt(slashCount))) {\n\t\t\t\tslashCount++;\n\t\t\t}\n\n\t\t\t// Replace the slashes if needed\n\t\t\tif (slashCount >= 2) {\n\t\t\t\tjoined = `\\\\${joined.slice(slashCount)}`;\n\t\t\t}\n\t\t}\n\n\t\treturn win32.normalize(joined);\n\t},\n\n\n\t// It will solve the relative path from `from` to `to`, for instance:\n\t//  from = 'C:\\\\orandea\\\\test\\\\aaa'\n\t//  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n\t// The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromOrig = win32.resolve(from);\n\t\tconst toOrig = win32.resolve(to);\n\n\t\tif (fromOrig === toOrig) {\n\t\t\treturn '';\n\t\t}\n\n\t\tfrom = fromOrig.toLowerCase();\n\t\tto = toOrig.toLowerCase();\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim any leading backslashes\n\t\tlet fromStart = 0;\n\t\twhile (fromStart < from.length &&\n\t\t\tfrom.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet fromEnd = from.length;\n\t\twhile (fromEnd - 1 > fromStart &&\n\t\t\tfrom.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\tfromEnd--;\n\t\t}\n\t\tconst fromLen = fromEnd - fromStart;\n\n\t\t// Trim any leading backslashes\n\t\tlet toStart = 0;\n\t\twhile (toStart < to.length &&\n\t\t\tto.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoStart++;\n\t\t}\n\t\t// Trim trailing backslashes (applicable to UNC paths only)\n\t\tlet toEnd = to.length;\n\t\twhile (toEnd - 1 > toStart &&\n\t\t\tto.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n\t\t\ttoEnd--;\n\t\t}\n\t\tconst toLen = toEnd - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = fromLen < toLen ? fromLen : toLen;\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_BACKWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\n\t\t// We found a mismatch before the first common path separator was seen, so\n\t\t// return the original `to`.\n\t\tif (i !== length) {\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\treturn toOrig;\n\t\t\t}\n\t\t} else {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n\t\t\t\t\treturn toOrig.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 2) {\n\t\t\t\t\t// We get here if `from` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\'; to='C:\\\\foo'\n\t\t\t\t\treturn toOrig.slice(toStart + i);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 2) {\n\t\t\t\t\t// We get here if `to` is the device root.\n\t\t\t\t\t// For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n\t\t\t\t\tlastCommonSep = 3;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lastCommonSep === -1) {\n\t\t\t\tlastCommonSep = 0;\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to` and\n\t\t// `from`\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '\\\\..';\n\t\t\t}\n\t\t}\n\n\t\ttoStart += lastCommonSep;\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts\n\t\tif (out.length > 0) {\n\t\t\treturn `${out}${toOrig.slice(toStart, toEnd)}`;\n\t\t}\n\n\t\tif (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n\t\t\t++toStart;\n\t\t}\n\n\t\treturn toOrig.slice(toStart, toEnd);\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Note: this will *probably* throw somewhere.\n\t\tif (typeof path !== 'string') {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (path.length === 0) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst resolvedPath = win32.resolve(path);\n\n\t\tif (resolvedPath.length <= 2) {\n\t\t\treturn path;\n\t\t}\n\n\t\tif (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Possible UNC root\n\t\t\tif (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n\t\t\t\tconst code = resolvedPath.charCodeAt(2);\n\t\t\t\tif (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n\t\t\t\t\t// Matched non-long UNC root, convert the path to a long UNC path\n\t\t\t\t\treturn `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n\t\t\tresolvedPath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tresolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n\t\t\t// Matched device root, convert the path to a long UNC path\n\t\t\treturn `\\\\\\\\?\\\\${resolvedPath}`;\n\t\t}\n\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tconst len = path.length;\n\t\tif (len === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet rootEnd = -1;\n\t\tlet offset = 0;\n\t\tconst code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t// unnecessary work or a dot.\n\t\t\treturn isPathSeparator(code) ? path : '.';\n\t\t}\n\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = offset = 1;\n\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\treturn path;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\n\t\t\t\t\t\t\t// Offset by 1 to include the separator after the UNC root to\n\t\t\t\t\t\t\t// treat it as a \"normal root\" on top of a (UNC) root\n\t\t\t\t\t\t\trootEnd = offset = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Possible device root\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\trootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n\t\t\toffset = rootEnd;\n\t\t}\n\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = len - 1; i >= offset; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\tif (rootEnd === -1) {\n\t\t\t\treturn '.';\n\t\t\t}\n\n\t\t\tend = rootEnd;\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\t\tif (path.length >= 2 &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0)) &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON) {\n\t\t\tstart = 2;\n\t\t}\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= start; --i) {\n\t\t\tif (isPathSeparator(path.charCodeAt(i))) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet start = 0;\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Check for a drive letter prefix so as not to mistake the following\n\t\t// path separator as an extra separator at the end of the path that can be\n\t\t// disregarded\n\n\t\tif (path.length >= 2 &&\n\t\t\tpath.charCodeAt(1) === CHAR_COLON &&\n\t\t\tisWindowsDeviceRoot(path.charCodeAt(0))) {\n\t\t\tstart = startPart = 2;\n\t\t}\n\n\t\tfor (let i = path.length - 1; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '\\\\'),\n\n\tparse(path) {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\n\t\tconst len = path.length;\n\t\tlet rootEnd = 0;\n\t\tlet code = path.charCodeAt(0);\n\n\t\tif (len === 1) {\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// `path` contains just a path separator, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\tret.base = ret.name = path;\n\t\t\treturn ret;\n\t\t}\n\t\t// Try to match a root\n\t\tif (isPathSeparator(code)) {\n\t\t\t// Possible UNC root\n\n\t\t\trootEnd = 1;\n\t\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t\t// Matched double path separator at beginning\n\t\t\t\tlet j = 2;\n\t\t\t\tlet last = j;\n\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\tj++;\n\t\t\t\t}\n\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t// Matched!\n\t\t\t\t\tlast = j;\n\t\t\t\t\t// Match 1 or more path separators\n\t\t\t\t\twhile (j < len && isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\tj++;\n\t\t\t\t\t}\n\t\t\t\t\tif (j < len && j !== last) {\n\t\t\t\t\t\t// Matched!\n\t\t\t\t\t\tlast = j;\n\t\t\t\t\t\t// Match 1 or more non-path separators\n\t\t\t\t\t\twhile (j < len && !isPathSeparator(path.charCodeAt(j))) {\n\t\t\t\t\t\t\tj++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (j === len) {\n\t\t\t\t\t\t\t// We matched a UNC root only\n\t\t\t\t\t\t\trootEnd = j;\n\t\t\t\t\t\t} else if (j !== last) {\n\t\t\t\t\t\t\t// We matched a UNC root with leftovers\n\t\t\t\t\t\t\trootEnd = j + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n\t\t\t// Possible device root\n\t\t\tif (len <= 2) {\n\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t// unnecessary work\n\t\t\t\tret.root = ret.dir = path;\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\trootEnd = 2;\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tif (len === 3) {\n\t\t\t\t\t// `path` contains just a drive root, exit early to avoid\n\t\t\t\t\t// unnecessary work\n\t\t\t\t\tret.root = ret.dir = path;\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\t\t\t\trootEnd = 3;\n\t\t\t}\n\t\t}\n\t\tif (rootEnd > 0) {\n\t\t\tret.root = path.slice(0, rootEnd);\n\t\t}\n\n\t\tlet startDot = -1;\n\t\tlet startPart = rootEnd;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= rootEnd; --i) {\n\t\t\tcode = path.charCodeAt(i);\n\t\t\tif (isPathSeparator(code)) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(startPart, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(startPart, startDot);\n\t\t\t\tret.base = path.slice(startPart, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\t// If the directory is the root, use the entire root as the `dir` including\n\t\t// the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n\t\t// trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n\t\tif (startPart > 0 && startPart !== rootEnd) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else {\n\t\t\tret.dir = ret.root;\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '\\\\',\n\tdelimiter: ';',\n\twin32: null,\n\tposix: null\n};\n\nexport const posix: IPath = {\n\t// path.resolve([from ...], to)\n\tresolve(...pathSegments: string[]): string {\n\t\tlet resolvedPath = '';\n\t\tlet resolvedAbsolute = false;\n\n\t\tfor (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n\t\t\tconst path = i >= 0 ? pathSegments[i] : process.cwd();\n\n\t\t\tvalidateString(path, 'path');\n\n\t\t\t// Skip empty entries\n\t\t\tif (path.length === 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tresolvedPath = `${path}/${resolvedPath}`;\n\t\t\tresolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\t}\n\n\t\t// At this point the path should be resolved to a full absolute path, but\n\t\t// handle relative paths to be safe (might happen when process.cwd() fails)\n\n\t\t// Normalize the path\n\t\tresolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/',\n\t\t\tisPosixPathSeparator);\n\n\t\tif (resolvedAbsolute) {\n\t\t\treturn `/${resolvedPath}`;\n\t\t}\n\t\treturn resolvedPath.length > 0 ? resolvedPath : '.';\n\t},\n\n\tnormalize(path: string): string {\n\t\tvalidateString(path, 'path');\n\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tconst trailingSeparator =\n\t\t\tpath.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n\n\t\t// Normalize the path\n\t\tpath = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n\n\t\tif (path.length === 0) {\n\t\t\tif (isAbsolute) {\n\t\t\t\treturn '/';\n\t\t\t}\n\t\t\treturn trailingSeparator ? './' : '.';\n\t\t}\n\t\tif (trailingSeparator) {\n\t\t\tpath += '/';\n\t\t}\n\n\t\treturn isAbsolute ? `/${path}` : path;\n\t},\n\n\tisAbsolute(path: string): boolean {\n\t\tvalidateString(path, 'path');\n\t\treturn path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t},\n\n\tjoin(...paths: string[]): string {\n\t\tif (paths.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tlet joined;\n\t\tfor (let i = 0; i < paths.length; ++i) {\n\t\t\tconst arg = paths[i];\n\t\t\tvalidateString(arg, 'path');\n\t\t\tif (arg.length > 0) {\n\t\t\t\tif (joined === undefined) {\n\t\t\t\t\tjoined = arg;\n\t\t\t\t} else {\n\t\t\t\t\tjoined += `/${arg}`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tif (joined === undefined) {\n\t\t\treturn '.';\n\t\t}\n\t\treturn posix.normalize(joined);\n\t},\n\n\trelative(from: string, to: string): string {\n\t\tvalidateString(from, 'from');\n\t\tvalidateString(to, 'to');\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\t// Trim leading forward slashes.\n\t\tfrom = posix.resolve(from);\n\t\tto = posix.resolve(to);\n\n\t\tif (from === to) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst fromStart = 1;\n\t\tconst fromEnd = from.length;\n\t\tconst fromLen = fromEnd - fromStart;\n\t\tconst toStart = 1;\n\t\tconst toLen = to.length - toStart;\n\n\t\t// Compare paths to find the longest common path from root\n\t\tconst length = (fromLen < toLen ? fromLen : toLen);\n\t\tlet lastCommonSep = -1;\n\t\tlet i = 0;\n\t\tfor (; i < length; i++) {\n\t\t\tconst fromCode = from.charCodeAt(fromStart + i);\n\t\t\tif (fromCode !== to.charCodeAt(toStart + i)) {\n\t\t\t\tbreak;\n\t\t\t} else if (fromCode === CHAR_FORWARD_SLASH) {\n\t\t\t\tlastCommonSep = i;\n\t\t\t}\n\t\t}\n\t\tif (i === length) {\n\t\t\tif (toLen > length) {\n\t\t\t\tif (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `from` is the exact base path for `to`.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/foo/bar/baz'\n\t\t\t\t\treturn to.slice(toStart + i + 1);\n\t\t\t\t}\n\t\t\t\tif (i === 0) {\n\t\t\t\t\t// We get here if `from` is the root\n\t\t\t\t\t// For example: from='/'; to='/foo'\n\t\t\t\t\treturn to.slice(toStart + i);\n\t\t\t\t}\n\t\t\t} else if (fromLen > length) {\n\t\t\t\tif (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// We get here if `to` is the exact base path for `from`.\n\t\t\t\t\t// For example: from='/foo/bar/baz'; to='/foo/bar'\n\t\t\t\t\tlastCommonSep = i;\n\t\t\t\t} else if (i === 0) {\n\t\t\t\t\t// We get here if `to` is the root.\n\t\t\t\t\t// For example: from='/foo/bar'; to='/'\n\t\t\t\t\tlastCommonSep = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet out = '';\n\t\t// Generate the relative path based on the path difference between `to`\n\t\t// and `from`.\n\t\tfor (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n\t\t\tif (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tout += out.length === 0 ? '..' : '/..';\n\t\t\t}\n\t\t}\n\n\t\t// Lastly, append the rest of the destination (`to`) path that comes after\n\t\t// the common path parts.\n\t\treturn `${out}${to.slice(toStart + lastCommonSep)}`;\n\t},\n\n\ttoNamespacedPath(path: string): string {\n\t\t// Non-op on posix systems\n\t\treturn path;\n\t},\n\n\tdirname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tif (path.length === 0) {\n\t\t\treturn '.';\n\t\t}\n\t\tconst hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tfor (let i = path.length - 1; i >= 1; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tend = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We saw the first non-path separator\n\t\t\t\tmatchedSlash = false;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn hasRoot ? '/' : '.';\n\t\t}\n\t\tif (hasRoot && end === 1) {\n\t\t\treturn '//';\n\t\t}\n\t\treturn path.slice(0, end);\n\t},\n\n\tbasename(path: string, ext?: string): string {\n\t\tif (ext !== undefined) {\n\t\t\tvalidateString(ext, 'ext');\n\t\t}\n\t\tvalidateString(path, 'path');\n\n\t\tlet start = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i;\n\n\t\tif (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n\t\t\tif (ext === path) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\tlet extIdx = ext.length - 1;\n\t\t\tlet firstNonSlashEnd = -1;\n\t\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\t\tconst code = path.charCodeAt(i);\n\t\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\t\tstart = i + 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (firstNonSlashEnd === -1) {\n\t\t\t\t\t\t// We saw the first non-path separator, remember this index in case\n\t\t\t\t\t\t// we need it if the extension ends up not matching\n\t\t\t\t\t\tmatchedSlash = false;\n\t\t\t\t\t\tfirstNonSlashEnd = i + 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (extIdx >= 0) {\n\t\t\t\t\t\t// Try to match the explicit extension\n\t\t\t\t\t\tif (code === ext.charCodeAt(extIdx)) {\n\t\t\t\t\t\t\tif (--extIdx === -1) {\n\t\t\t\t\t\t\t\t// We matched the extension, so mark this as the end of our path\n\t\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\t\tend = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Extension does not match, so our result is the entire path\n\t\t\t\t\t\t\t// component\n\t\t\t\t\t\t\textIdx = -1;\n\t\t\t\t\t\t\tend = firstNonSlashEnd;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (start === end) {\n\t\t\t\tend = firstNonSlashEnd;\n\t\t\t} else if (end === -1) {\n\t\t\t\tend = path.length;\n\t\t\t}\n\t\t\treturn path.slice(start, end);\n\t\t}\n\t\tfor (i = path.length - 1; i >= 0; --i) {\n\t\t\tif (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// path component\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t}\n\n\t\tif (end === -1) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(start, end);\n\t},\n\n\textname(path: string): string {\n\t\tvalidateString(path, 'path');\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\t\tfor (let i = path.length - 1; i >= 0; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t}\n\t\t\t\telse if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (startDot === -1 ||\n\t\t\tend === -1 ||\n\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\tpreDotState === 0 ||\n\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t(preDotState === 1 &&\n\t\t\t\tstartDot === end - 1 &&\n\t\t\t\tstartDot === startPart + 1)) {\n\t\t\treturn '';\n\t\t}\n\t\treturn path.slice(startDot, end);\n\t},\n\n\tformat: _format.bind(null, '/'),\n\n\tparse(path: string): ParsedPath {\n\t\tvalidateString(path, 'path');\n\n\t\tconst ret = { root: '', dir: '', base: '', ext: '', name: '' };\n\t\tif (path.length === 0) {\n\t\t\treturn ret;\n\t\t}\n\t\tconst isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n\t\tlet start;\n\t\tif (isAbsolute) {\n\t\t\tret.root = '/';\n\t\t\tstart = 1;\n\t\t} else {\n\t\t\tstart = 0;\n\t\t}\n\t\tlet startDot = -1;\n\t\tlet startPart = 0;\n\t\tlet end = -1;\n\t\tlet matchedSlash = true;\n\t\tlet i = path.length - 1;\n\n\t\t// Track the state of characters (if any) we see before our first dot and\n\t\t// after any path separator we find\n\t\tlet preDotState = 0;\n\n\t\t// Get non-dir info\n\t\tfor (; i >= start; --i) {\n\t\t\tconst code = path.charCodeAt(i);\n\t\t\tif (code === CHAR_FORWARD_SLASH) {\n\t\t\t\t// If we reached a path separator that was not part of a set of path\n\t\t\t\t// separators at the end of the string, stop now\n\t\t\t\tif (!matchedSlash) {\n\t\t\t\t\tstartPart = i + 1;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (end === -1) {\n\t\t\t\t// We saw the first non-path separator, mark this as the end of our\n\t\t\t\t// extension\n\t\t\t\tmatchedSlash = false;\n\t\t\t\tend = i + 1;\n\t\t\t}\n\t\t\tif (code === CHAR_DOT) {\n\t\t\t\t// If this is our first dot, mark it as the start of our extension\n\t\t\t\tif (startDot === -1) {\n\t\t\t\t\tstartDot = i;\n\t\t\t\t} else if (preDotState !== 1) {\n\t\t\t\t\tpreDotState = 1;\n\t\t\t\t}\n\t\t\t} else if (startDot !== -1) {\n\t\t\t\t// We saw a non-dot and non-path separator before our dot, so we should\n\t\t\t\t// have a good chance at having a non-empty extension\n\t\t\t\tpreDotState = -1;\n\t\t\t}\n\t\t}\n\n\t\tif (end !== -1) {\n\t\t\tconst start = startPart === 0 && isAbsolute ? 1 : startPart;\n\t\t\tif (startDot === -1 ||\n\t\t\t\t// We saw a non-dot character immediately before the dot\n\t\t\t\tpreDotState === 0 ||\n\t\t\t\t// The (right-most) trimmed path component is exactly '..'\n\t\t\t\t(preDotState === 1 &&\n\t\t\t\t\tstartDot === end - 1 &&\n\t\t\t\t\tstartDot === startPart + 1)) {\n\t\t\t\tret.base = ret.name = path.slice(start, end);\n\t\t\t} else {\n\t\t\t\tret.name = path.slice(start, startDot);\n\t\t\t\tret.base = path.slice(start, end);\n\t\t\t\tret.ext = path.slice(startDot, end);\n\t\t\t}\n\t\t}\n\n\t\tif (startPart > 0) {\n\t\t\tret.dir = path.slice(0, startPart - 1);\n\t\t} else if (isAbsolute) {\n\t\t\tret.dir = '/';\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tsep: '/',\n\tdelimiter: ':',\n\twin32: null,\n\tposix: null\n};\n\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\n\nexport const normalize = (process.platform === 'win32' ? win32.normalize : posix.normalize);\nexport const isAbsolute = (process.platform === 'win32' ? win32.isAbsolute : posix.isAbsolute);\nexport const join = (process.platform === 'win32' ? win32.join : posix.join);\nexport const resolve = (process.platform === 'win32' ? win32.resolve : posix.resolve);\nexport const relative = (process.platform === 'win32' ? win32.relative : posix.relative);\nexport const dirname = (process.platform === 'win32' ? win32.dirname : posix.dirname);\nexport const basename = (process.platform === 'win32' ? win32.basename : posix.basename);\nexport const extname = (process.platform === 'win32' ? win32.extname : posix.extname);\nexport const format = (process.platform === 'win32' ? win32.format : posix.format);\nexport const parse = (process.platform === 'win32' ? win32.parse : posix.parse);\nexport const toNamespacedPath = (process.platform === 'win32' ? win32.toNamespacedPath : posix.toNamespacedPath);\nexport const sep = (process.platform === 'win32' ? win32.sep : posix.sep);\nexport const delimiter = (process.platform === 'win32' ? win32.delimiter : posix.delimiter);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IProcessEnvironment } from 'vs/base/common/platform';\n\n/**\n * Options to be passed to the external program or shell.\n */\nexport interface CommandOptions {\n\t/**\n\t * The current working directory of the executed program or shell.\n\t * If omitted VSCode's current workspace root is used.\n\t */\n\tcwd?: string;\n\n\t/**\n\t * The environment of the executed program or shell. If omitted\n\t * the parent process' environment is used.\n\t */\n\tenv?: { [key: string]: string; };\n}\n\nexport interface Executable {\n\t/**\n\t * The command to be executed. Can be an external program or a shell\n\t * command.\n\t */\n\tcommand: string;\n\n\t/**\n\t * Specifies whether the command is a shell command and therefore must\n\t * be executed in a shell interpreter (e.g. cmd.exe, bash, ...).\n\t */\n\tisShellCommand: boolean;\n\n\t/**\n\t * The arguments passed to the command.\n\t */\n\targs: string[];\n\n\t/**\n\t * The command options used when the command is executed. Can be omitted.\n\t */\n\toptions?: CommandOptions;\n}\n\nexport interface ForkOptions extends CommandOptions {\n\texecArgv?: string[];\n}\n\nexport const enum Source {\n\tstdout,\n\tstderr\n}\n\n/**\n * The data send via a success callback\n */\nexport interface SuccessData {\n\terror?: Error;\n\tcmdCode?: number;\n\tterminated?: boolean;\n}\n\n/**\n * The data send via a error callback\n */\nexport interface ErrorData {\n\terror?: Error;\n\tterminated?: boolean;\n\tstdout?: string;\n\tstderr?: string;\n}\n\nexport interface TerminateResponse {\n\tsuccess: boolean;\n\tcode?: TerminateResponseCode;\n\terror?: any;\n}\n\nexport const enum TerminateResponseCode {\n\tSuccess = 0,\n\tUnknown = 1,\n\tAccessDenied = 2,\n\tProcessNotFound = 3,\n}\n\nexport interface ProcessItem {\n\tname: string;\n\tcmd: string;\n\tpid: number;\n\tppid: number;\n\tload: number;\n\tmem: number;\n\n\tchildren?: ProcessItem[];\n}\n\n/**\n * Sanitizes a VS Code process environment by removing all Electron/VS Code-related values.\n */\nexport function sanitizeProcessEnvironment(env: IProcessEnvironment, ...preserve: string[]): void {\n\tconst set = preserve.reduce((set, key) => {\n\t\tset[key] = true;\n\t\treturn set;\n\t}, {} as Record<string, boolean>);\n\tconst keysToRemove = [\n\t\t/^ELECTRON_.+$/,\n\t\t/^VSCODE_.+$/,\n\t\t/^SNAP(|_.*)$/,\n\t\t/^GDK_PIXBUF_.+$/,\n\t];\n\tconst envKeys = Object.keys(env);\n\tenvKeys\n\t\t.filter(key => !set[key])\n\t\t.forEach(envKey => {\n\t\t\tfor (let i = 0; i < keysToRemove.length; i++) {\n\t\t\t\tif (envKey.search(keysToRemove[i]) !== -1) {\n\t\t\t\t\tdelete env[envKey];\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { globals } from 'vs/base/common/platform';\n\nconst hasPerformanceNow = (globals.performance && typeof globals.performance.now === 'function');\n\nexport class StopWatch {\n\n\tprivate _highResolution: boolean;\n\tprivate _startTime: number;\n\tprivate _stopTime: number;\n\n\tpublic static create(highResolution: boolean = true): StopWatch {\n\t\treturn new StopWatch(highResolution);\n\t}\n\n\tconstructor(highResolution: boolean) {\n\t\tthis._highResolution = hasPerformanceNow && highResolution;\n\t\tthis._startTime = this._now();\n\t\tthis._stopTime = -1;\n\t}\n\n\tpublic stop(): void {\n\t\tthis._stopTime = this._now();\n\t}\n\n\tpublic elapsed(): number {\n\t\tif (this._stopTime !== -1) {\n\t\t\treturn this._stopTime - this._startTime;\n\t\t}\n\t\treturn this._now() - this._startTime;\n\t}\n\n\tprivate _now(): number {\n\t\treturn this._highResolution ? globals.performance.now() : Date.now();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { once as onceFn } from 'vs/base/common/functional';\nimport { combinedDisposable, Disposable, DisposableStore, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { LinkedList } from 'vs/base/common/linkedList';\nimport { StopWatch } from 'vs/base/common/stopwatch';\n\n/**\n * To an event a function with one or zero parameters\n * can be subscribed. The event is the subscriber function itself.\n */\nexport interface Event<T> {\n\t(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n}\n\nexport namespace Event {\n\texport const None: Event<any> = () => Disposable.None;\n\n\t/**\n\t * Given an event, returns another event which only fires once.\n\t */\n\texport function once<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => {\n\t\t\t// we need this, in case the event fires during the listener call\n\t\t\tlet didFire = false;\n\t\t\tlet result: IDisposable;\n\t\t\tresult = event(e => {\n\t\t\t\tif (didFire) {\n\t\t\t\t\treturn;\n\t\t\t\t} else if (result) {\n\t\t\t\t\tresult.dispose();\n\t\t\t\t} else {\n\t\t\t\t\tdidFire = true;\n\t\t\t\t}\n\n\t\t\t\treturn listener.call(thisArgs, e);\n\t\t\t}, null, disposables);\n\n\t\t\tif (didFire) {\n\t\t\t\tresult.dispose();\n\t\t\t}\n\n\t\t\treturn result;\n\t\t};\n\t}\n\n\t/**\n\t * @deprecated DO NOT use, this leaks memory\n\t */\n\texport function map<I, O>(event: Event<I>, map: (i: I) => O): Event<O> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => listener.call(thisArgs, map(i)), null, disposables));\n\t}\n\n\t/**\n\t * @deprecated DO NOT use, this leaks memory\n\t */\n\texport function forEach<I>(event: Event<I>, each: (i: I) => void): Event<I> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(i => { each(i); listener.call(thisArgs, i); }, null, disposables));\n\t}\n\n\t/**\n\t * @deprecated DO NOT use, this leaks memory\n\t */\n\texport function filter<T, U>(event: Event<T | U>, filter: (e: T | U) => e is T): Event<T>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T>;\n\texport function filter<T, R>(event: Event<T | R>, filter: (e: T | R) => e is R): Event<R>;\n\texport function filter<T>(event: Event<T>, filter: (e: T) => boolean): Event<T> {\n\t\treturn snapshot((listener, thisArgs = null, disposables?) => event(e => filter(e) && listener.call(thisArgs, e), null, disposables));\n\t}\n\n\t/**\n\t * Given an event, returns the same event but typed as `Event<void>`.\n\t */\n\texport function signal<T>(event: Event<T>): Event<void> {\n\t\treturn event as Event<any> as Event<void>;\n\t}\n\n\t/**\n\t * Given a collection of events, returns a single event which emits\n\t * whenever any of the provided events emit.\n\t */\n\texport function any<T>(...events: Event<T>[]): Event<T>;\n\texport function any(...events: Event<any>[]): Event<void>;\n\texport function any<T>(...events: Event<T>[]): Event<T> {\n\t\treturn (listener, thisArgs = null, disposables?) => combinedDisposable(...events.map(event => event(e => listener.call(thisArgs, e), null, disposables)));\n\t}\n\n\t/**\n\t * @deprecated DO NOT use, this leaks memory\n\t */\n\texport function reduce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, initial?: O): Event<O> {\n\t\tlet output: O | undefined = initial;\n\n\t\treturn map<I, O>(event, e => {\n\t\t\toutput = merge(output, e);\n\t\t\treturn output;\n\t\t});\n\t}\n\n\t/**\n\t * @deprecated DO NOT use, this leaks memory\n\t */\n\tfunction snapshot<T>(event: Event<T>): Event<T> {\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tlistener.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * @deprecated DO NOT use, this leaks memory\n\t */\n\texport function debounce<T>(event: Event<T>, merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<T>;\n\t/**\n\t * @deprecated DO NOT use, this leaks memory\n\t */\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay?: number, leading?: boolean, leakWarningThreshold?: number): Event<O>;\n\t/**\n\t * @deprecated DO NOT use, this leaks memory\n\t */\n\texport function debounce<I, O>(event: Event<I>, merge: (last: O | undefined, event: I) => O, delay: number = 100, leading = false, leakWarningThreshold?: number): Event<O> {\n\n\t\tlet subscription: IDisposable;\n\t\tlet output: O | undefined = undefined;\n\t\tlet handle: any = undefined;\n\t\tlet numDebouncedCalls = 0;\n\n\t\tconst emitter = new Emitter<O>({\n\t\t\tleakWarningThreshold,\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tsubscription = event(cur => {\n\t\t\t\t\tnumDebouncedCalls++;\n\t\t\t\t\toutput = merge(output, cur);\n\n\t\t\t\t\tif (leading && !handle) {\n\t\t\t\t\t\temitter.fire(output);\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t}\n\n\t\t\t\t\tclearTimeout(handle);\n\t\t\t\t\thandle = setTimeout(() => {\n\t\t\t\t\t\tconst _output = output;\n\t\t\t\t\t\toutput = undefined;\n\t\t\t\t\t\thandle = undefined;\n\t\t\t\t\t\tif (!leading || numDebouncedCalls > 1) {\n\t\t\t\t\t\t\temitter.fire(_output!);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tnumDebouncedCalls = 0;\n\t\t\t\t\t}, delay);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove() {\n\t\t\t\tsubscription.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\t/**\n\t * @deprecated DO NOT use, this leaks memory\n\t */\n\texport function latch<T>(event: Event<T>, equals: (a: T, b: T) => boolean = (a, b) => a === b): Event<T> {\n\t\tlet firstCall = true;\n\t\tlet cache: T;\n\n\t\treturn filter(event, value => {\n\t\t\tconst shouldEmit = firstCall || !equals(value, cache);\n\t\t\tfirstCall = false;\n\t\t\tcache = value;\n\t\t\treturn shouldEmit;\n\t\t});\n\t}\n\n\t/**\n\t * @deprecated DO NOT use, this leaks memory\n\t */\n\texport function split<T, U>(event: Event<T | U>, isT: (e: T | U) => e is T): [Event<T>, Event<U>] {\n\t\treturn [\n\t\t\tEvent.filter(event, isT),\n\t\t\tEvent.filter(event, e => !isT(e)) as Event<U>,\n\t\t];\n\t}\n\n\t/**\n\t * @deprecated DO NOT use, this leaks memory\n\t */\n\texport function buffer<T>(event: Event<T>, flushAfterTimeout = false, _buffer: T[] = []): Event<T> {\n\t\tlet buffer: T[] | null = _buffer.slice();\n\n\t\tlet listener: IDisposable | null = event(e => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.push(e);\n\t\t\t} else {\n\t\t\t\temitter.fire(e);\n\t\t\t}\n\t\t});\n\n\t\tconst flush = () => {\n\t\t\tif (buffer) {\n\t\t\t\tbuffer.forEach(e => emitter.fire(e));\n\t\t\t}\n\t\t\tbuffer = null;\n\t\t};\n\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd() {\n\t\t\t\tif (!listener) {\n\t\t\t\t\tlistener = event(e => emitter.fire(e));\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonFirstListenerDidAdd() {\n\t\t\t\tif (buffer) {\n\t\t\t\t\tif (flushAfterTimeout) {\n\t\t\t\t\t\tsetTimeout(flush);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tflush();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tonLastListenerRemove() {\n\t\t\t\tif (listener) {\n\t\t\t\t\tlistener.dispose();\n\t\t\t\t}\n\t\t\t\tlistener = null;\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\texport interface IChainableEvent<T> {\n\t\tevent: Event<T>;\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O>;\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R>;\n\t\tlatch(): IChainableEvent<T>;\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\ton(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore): IDisposable;\n\t\tonce(listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[]): IDisposable;\n\t}\n\n\tclass ChainableEvent<T> implements IChainableEvent<T> {\n\n\t\tconstructor(readonly event: Event<T>) { }\n\n\t\tmap<O>(fn: (i: T) => O): IChainableEvent<O> {\n\t\t\treturn new ChainableEvent(map(this.event, fn));\n\t\t}\n\n\t\tforEach(fn: (i: T) => void): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(forEach(this.event, fn));\n\t\t}\n\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T>;\n\t\tfilter<R>(fn: (e: T | R) => e is R): IChainableEvent<R>;\n\t\tfilter(fn: (e: T) => boolean): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(filter(this.event, fn));\n\t\t}\n\n\t\treduce<R>(merge: (last: R | undefined, event: T) => R, initial?: R): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(reduce(this.event, merge, initial));\n\t\t}\n\n\t\tlatch(): IChainableEvent<T> {\n\t\t\treturn new ChainableEvent(latch(this.event));\n\t\t}\n\n\t\tdebounce(merge: (last: T | undefined, event: T) => T, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<T>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay?: number, leading?: boolean, leakWarningThreshold?: number): IChainableEvent<R>;\n\t\tdebounce<R>(merge: (last: R | undefined, event: T) => R, delay: number = 100, leading = false, leakWarningThreshold?: number): IChainableEvent<R> {\n\t\t\treturn new ChainableEvent(debounce(this.event, merge, delay, leading, leakWarningThreshold));\n\t\t}\n\n\t\ton(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[] | DisposableStore) {\n\t\t\treturn this.event(listener, thisArgs, disposables);\n\t\t}\n\n\t\tonce(listener: (e: T) => any, thisArgs: any, disposables: IDisposable[]) {\n\t\t\treturn once(this.event)(listener, thisArgs, disposables);\n\t\t}\n\t}\n\n\t/**\n\t * @deprecated DO NOT use, this leaks memory\n\t */\n\texport function chain<T>(event: Event<T>): IChainableEvent<T> {\n\t\treturn new ChainableEvent(event);\n\t}\n\n\texport interface NodeEventEmitter {\n\t\ton(event: string | symbol, listener: Function): unknown;\n\t\tremoveListener(event: string | symbol, listener: Function): unknown;\n\t}\n\n\texport function fromNodeEventEmitter<T>(emitter: NodeEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.on(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport interface DOMEventEmitter {\n\t\taddEventListener(event: string | symbol, listener: Function): void;\n\t\tremoveEventListener(event: string | symbol, listener: Function): void;\n\t}\n\n\texport function fromDOMEventEmitter<T>(emitter: DOMEventEmitter, eventName: string, map: (...args: any[]) => T = id => id): Event<T> {\n\t\tconst fn = (...args: any[]) => result.fire(map(...args));\n\t\tconst onFirstListenerAdd = () => emitter.addEventListener(eventName, fn);\n\t\tconst onLastListenerRemove = () => emitter.removeEventListener(eventName, fn);\n\t\tconst result = new Emitter<T>({ onFirstListenerAdd, onLastListenerRemove });\n\n\t\treturn result.event;\n\t}\n\n\texport function toPromise<T>(event: Event<T>): Promise<T> {\n\t\treturn new Promise(resolve => once(event)(resolve));\n\t}\n}\n\nexport type Listener<T> = [(e: T) => void, any] | ((e: T) => void);\n\nexport interface EmitterOptions {\n\tonFirstListenerAdd?: Function;\n\tonFirstListenerDidAdd?: Function;\n\tonListenerDidAdd?: Function;\n\tonLastListenerRemove?: Function;\n\tleakWarningThreshold?: number;\n\n\t/** ONLY enable this during development */\n\t_profName?: string\n}\n\n\nclass EventProfiling {\n\n\tprivate static _idPool = 0;\n\n\tprivate _name: string;\n\tprivate _stopWatch?: StopWatch;\n\tprivate _listenerCount: number = 0;\n\tprivate _invocationCount = 0;\n\tprivate _elapsedOverall = 0;\n\n\tconstructor(name: string) {\n\t\tthis._name = `${name}_${EventProfiling._idPool++}`;\n\t}\n\n\tstart(listenerCount: number): void {\n\t\tthis._stopWatch = new StopWatch(true);\n\t\tthis._listenerCount = listenerCount;\n\t}\n\n\tstop(): void {\n\t\tif (this._stopWatch) {\n\t\t\tconst elapsed = this._stopWatch.elapsed();\n\t\t\tthis._elapsedOverall += elapsed;\n\t\t\tthis._invocationCount += 1;\n\n\t\t\tconsole.info(`did FIRE ${this._name}: elapsed_ms: ${elapsed.toFixed(5)}, listener: ${this._listenerCount} (elapsed_overall: ${this._elapsedOverall.toFixed(2)}, invocations: ${this._invocationCount})`);\n\t\t\tthis._stopWatch = undefined;\n\t\t}\n\t}\n}\n\nlet _globalLeakWarningThreshold = -1;\nexport function setGlobalLeakWarningThreshold(n: number): IDisposable {\n\tconst oldValue = _globalLeakWarningThreshold;\n\t_globalLeakWarningThreshold = n;\n\treturn {\n\t\tdispose() {\n\t\t\t_globalLeakWarningThreshold = oldValue;\n\t\t}\n\t};\n}\n\nclass LeakageMonitor {\n\n\tprivate _stacks: Map<string, number> | undefined;\n\tprivate _warnCountdown: number = 0;\n\n\tconstructor(\n\t\treadonly customThreshold?: number,\n\t\treadonly name: string = Math.random().toString(18).slice(2, 5),\n\t) { }\n\n\tdispose(): void {\n\t\tif (this._stacks) {\n\t\t\tthis._stacks.clear();\n\t\t}\n\t}\n\n\tcheck(listenerCount: number): undefined | (() => void) {\n\n\t\tlet threshold = _globalLeakWarningThreshold;\n\t\tif (typeof this.customThreshold === 'number') {\n\t\t\tthreshold = this.customThreshold;\n\t\t}\n\n\t\tif (threshold <= 0 || listenerCount < threshold) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!this._stacks) {\n\t\t\tthis._stacks = new Map();\n\t\t}\n\t\tconst stack = new Error().stack!.split('\\n').slice(3).join('\\n');\n\t\tconst count = (this._stacks.get(stack) || 0);\n\t\tthis._stacks.set(stack, count + 1);\n\t\tthis._warnCountdown -= 1;\n\n\t\tif (this._warnCountdown <= 0) {\n\t\t\t// only warn on first exceed and then every time the limit\n\t\t\t// is exceeded by 50% again\n\t\t\tthis._warnCountdown = threshold * 0.5;\n\n\t\t\t// find most frequent listener and print warning\n\t\t\tlet topStack: string | undefined;\n\t\t\tlet topCount: number = 0;\n\t\t\tfor (const [stack, count] of this._stacks) {\n\t\t\t\tif (!topStack || topCount < count) {\n\t\t\t\t\ttopStack = stack;\n\t\t\t\t\ttopCount = count;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconsole.warn(`[${this.name}] potential listener LEAK detected, having ${listenerCount} listeners already. MOST frequent listener (${topCount}):`);\n\t\t\tconsole.warn(topStack!);\n\t\t}\n\n\t\treturn () => {\n\t\t\tconst count = (this._stacks!.get(stack) || 0);\n\t\t\tthis._stacks!.set(stack, count - 1);\n\t\t};\n\t}\n}\n\n/**\n * The Emitter can be used to expose an Event to the public\n * to fire it from the insides.\n * Sample:\n\tclass Document {\n\n\t\tprivate readonly _onDidChange = new Emitter<(value:string)=>any>();\n\n\t\tpublic onDidChange = this._onDidChange.event;\n\n\t\t// getter-style\n\t\t// get onDidChange(): Event<(value:string)=>any> {\n\t\t// \treturn this._onDidChange.event;\n\t\t// }\n\n\t\tprivate _doIt() {\n\t\t\t//...\n\t\t\tthis._onDidChange.fire(value);\n\t\t}\n\t}\n */\nexport class Emitter<T> {\n\tprivate readonly _options?: EmitterOptions;\n\tprivate readonly _leakageMon?: LeakageMonitor;\n\tprivate readonly _perfMon?: EventProfiling;\n\tprivate _disposed: boolean = false;\n\tprivate _event?: Event<T>;\n\tprivate _deliveryQueue?: LinkedList<[Listener<T>, T]>;\n\tprotected _listeners?: LinkedList<Listener<T>>;\n\n\tconstructor(options?: EmitterOptions) {\n\t\tthis._options = options;\n\t\tthis._leakageMon = _globalLeakWarningThreshold > 0 ? new LeakageMonitor(this._options && this._options.leakWarningThreshold) : undefined;\n\t\tthis._perfMon = this._options?._profName ? new EventProfiling(this._options._profName) : undefined;\n\t}\n\n\t/**\n\t * For the public to allow to subscribe\n\t * to events from this Emitter\n\t */\n\tget event(): Event<T> {\n\t\tif (!this._event) {\n\t\t\tthis._event = (listener: (e: T) => any, thisArgs?: any, disposables?: IDisposable[] | DisposableStore) => {\n\t\t\t\tif (!this._listeners) {\n\t\t\t\t\tthis._listeners = new LinkedList();\n\t\t\t\t}\n\n\t\t\t\tconst firstListener = this._listeners.isEmpty();\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerAdd) {\n\t\t\t\t\tthis._options.onFirstListenerAdd(this);\n\t\t\t\t}\n\n\t\t\t\tconst remove = this._listeners.push(!thisArgs ? listener : [listener, thisArgs]);\n\n\t\t\t\tif (firstListener && this._options && this._options.onFirstListenerDidAdd) {\n\t\t\t\t\tthis._options.onFirstListenerDidAdd(this);\n\t\t\t\t}\n\n\t\t\t\tif (this._options && this._options.onListenerDidAdd) {\n\t\t\t\t\tthis._options.onListenerDidAdd(this, listener, thisArgs);\n\t\t\t\t}\n\n\t\t\t\t// check and record this emitter for potential leakage\n\t\t\t\tconst removeMonitor = this._leakageMon?.check(this._listeners.size);\n\n\t\t\t\tconst result = toDisposable(() => {\n\t\t\t\t\tif (removeMonitor) {\n\t\t\t\t\t\tremoveMonitor();\n\t\t\t\t\t}\n\t\t\t\t\tif (!this._disposed) {\n\t\t\t\t\t\tremove();\n\t\t\t\t\t\tif (this._options && this._options.onLastListenerRemove) {\n\t\t\t\t\t\t\tconst hasListeners = (this._listeners && !this._listeners.isEmpty());\n\t\t\t\t\t\t\tif (!hasListeners) {\n\t\t\t\t\t\t\t\tthis._options.onLastListenerRemove(this);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (disposables instanceof DisposableStore) {\n\t\t\t\t\tdisposables.add(result);\n\t\t\t\t} else if (Array.isArray(disposables)) {\n\t\t\t\t\tdisposables.push(result);\n\t\t\t\t}\n\n\t\t\t\treturn result;\n\t\t\t};\n\t\t}\n\t\treturn this._event;\n\t}\n\n\t/**\n\t * To be kept private to fire an event to\n\t * subscribers\n\t */\n\tfire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\t// put all [listener,event]-pairs into delivery queue\n\t\t\t// then emit all event. an inner/nested event might be\n\t\t\t// the driver of this\n\n\t\t\tif (!this._deliveryQueue) {\n\t\t\t\tthis._deliveryQueue = new LinkedList();\n\t\t\t}\n\n\t\t\tfor (let listener of this._listeners) {\n\t\t\t\tthis._deliveryQueue.push([listener, event]);\n\t\t\t}\n\n\t\t\t// start/stop performance insight collection\n\t\t\tthis._perfMon?.start(this._deliveryQueue.size);\n\n\t\t\twhile (this._deliveryQueue.size > 0) {\n\t\t\t\tconst [listener, event] = this._deliveryQueue.shift()!;\n\t\t\t\ttry {\n\t\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tonUnexpectedError(e);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._perfMon?.stop();\n\t\t}\n\t}\n\n\tdispose() {\n\t\tif (!this._disposed) {\n\t\t\tthis._disposed = true;\n\t\t\tthis._listeners?.clear();\n\t\t\tthis._deliveryQueue?.clear();\n\t\t\tthis._options?.onLastListenerRemove?.();\n\t\t\tthis._leakageMon?.dispose();\n\t\t}\n\t}\n}\n\n\nexport interface IWaitUntil {\n\twaitUntil(thenable: Promise<unknown>): void;\n}\n\nexport class AsyncEmitter<T extends IWaitUntil> extends Emitter<T> {\n\n\tprivate _asyncDeliveryQueue?: LinkedList<[Listener<T>, Omit<T, 'waitUntil'>]>;\n\n\tasync fireAsync(data: Omit<T, 'waitUntil'>, token: CancellationToken, promiseJoin?: (p: Promise<unknown>, listener: Function) => Promise<unknown>): Promise<void> {\n\t\tif (!this._listeners) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this._asyncDeliveryQueue) {\n\t\t\tthis._asyncDeliveryQueue = new LinkedList();\n\t\t}\n\n\t\tfor (const listener of this._listeners) {\n\t\t\tthis._asyncDeliveryQueue.push([listener, data]);\n\t\t}\n\n\t\twhile (this._asyncDeliveryQueue.size > 0 && !token.isCancellationRequested) {\n\n\t\t\tconst [listener, data] = this._asyncDeliveryQueue.shift()!;\n\t\t\tconst thenables: Promise<unknown>[] = [];\n\n\t\t\tconst event = <T>{\n\t\t\t\t...data,\n\t\t\t\twaitUntil: (p: Promise<unknown>): void => {\n\t\t\t\t\tif (Object.isFrozen(thenables)) {\n\t\t\t\t\t\tthrow new Error('waitUntil can NOT be called asynchronous');\n\t\t\t\t\t}\n\t\t\t\t\tif (promiseJoin) {\n\t\t\t\t\t\tp = promiseJoin(p, typeof listener === 'function' ? listener : listener[0]);\n\t\t\t\t\t}\n\t\t\t\t\tthenables.push(p);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\tif (typeof listener === 'function') {\n\t\t\t\t\tlistener.call(undefined, event);\n\t\t\t\t} else {\n\t\t\t\t\tlistener[0].call(listener[1], event);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// freeze thenables-collection to enforce sync-calls to\n\t\t\t// wait until and then wait for all thenables to resolve\n\t\t\tObject.freeze(thenables);\n\n\t\t\tawait Promise.allSettled(thenables).then(values => {\n\t\t\t\tfor (const value of values) {\n\t\t\t\t\tif (value.status === 'rejected') {\n\t\t\t\t\t\tonUnexpectedError(value.reason);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\n\nexport class PauseableEmitter<T> extends Emitter<T> {\n\n\tprivate _isPaused = 0;\n\tprotected _eventQueue = new LinkedList<T>();\n\tprivate _mergeFn?: (input: T[]) => T;\n\n\tconstructor(options?: EmitterOptions & { merge?: (input: T[]) => T }) {\n\t\tsuper(options);\n\t\tthis._mergeFn = options?.merge;\n\t}\n\n\tpause(): void {\n\t\tthis._isPaused++;\n\t}\n\n\tresume(): void {\n\t\tif (this._isPaused !== 0 && --this._isPaused === 0) {\n\t\t\tif (this._mergeFn) {\n\t\t\t\t// use the merge function to create a single composite\n\t\t\t\t// event. make a copy in case firing pauses this emitter\n\t\t\t\tconst events = Array.from(this._eventQueue);\n\t\t\t\tthis._eventQueue.clear();\n\t\t\t\tsuper.fire(this._mergeFn(events));\n\n\t\t\t} else {\n\t\t\t\t// no merging, fire each event individually and test\n\t\t\t\t// that this emitter isn't paused halfway through\n\t\t\t\twhile (!this._isPaused && this._eventQueue.size !== 0) {\n\t\t\t\t\tsuper.fire(this._eventQueue.shift()!);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\toverride fire(event: T): void {\n\t\tif (this._listeners) {\n\t\t\tif (this._isPaused !== 0) {\n\t\t\t\tthis._eventQueue.push(event);\n\t\t\t} else {\n\t\t\t\tsuper.fire(event);\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class DebounceEmitter<T> extends PauseableEmitter<T> {\n\n\tprivate readonly _delay: number;\n\tprivate _handle: any | undefined;\n\n\tconstructor(options: EmitterOptions & { merge: (input: T[]) => T, delay?: number }) {\n\t\tsuper(options);\n\t\tthis._delay = options.delay ?? 100;\n\t}\n\n\toverride fire(event: T): void {\n\t\tif (!this._handle) {\n\t\t\tthis.pause();\n\t\t\tthis._handle = setTimeout(() => {\n\t\t\t\tthis._handle = undefined;\n\t\t\t\tthis.resume();\n\t\t\t}, this._delay);\n\t\t}\n\t\tsuper.fire(event);\n\t}\n}\n\n/**\n * An emitter which queue all events and then process them at the\n * end of the event loop.\n */\nexport class MicrotaskEmitter<T> extends Emitter<T> {\n\tprivate _queuedEvents: T[] = [];\n\tprivate _mergeFn?: (input: T[]) => T;\n\n\tconstructor(options?: EmitterOptions & { merge?: (input: T[]) => T }) {\n\t\tsuper(options);\n\t\tthis._mergeFn = options?.merge;\n\t}\n\toverride fire(event: T): void {\n\t\tthis._queuedEvents.push(event);\n\t\tif (this._queuedEvents.length === 1) {\n\t\t\tqueueMicrotask(() => {\n\t\t\t\tif (this._mergeFn) {\n\t\t\t\t\tsuper.fire(this._mergeFn(this._queuedEvents));\n\t\t\t\t} else {\n\t\t\t\t\tthis._queuedEvents.forEach(e => super.fire(e));\n\t\t\t\t}\n\t\t\t\tthis._queuedEvents = [];\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport class EventMultiplexer<T> implements IDisposable {\n\n\tprivate readonly emitter: Emitter<T>;\n\tprivate hasListeners = false;\n\tprivate events: { event: Event<T>; listener: IDisposable | null; }[] = [];\n\n\tconstructor() {\n\t\tthis.emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => this.onFirstListenerAdd(),\n\t\t\tonLastListenerRemove: () => this.onLastListenerRemove()\n\t\t});\n\t}\n\n\tget event(): Event<T> {\n\t\treturn this.emitter.event;\n\t}\n\n\tadd(event: Event<T>): IDisposable {\n\t\tconst e = { event: event, listener: null };\n\t\tthis.events.push(e);\n\n\t\tif (this.hasListeners) {\n\t\t\tthis.hook(e);\n\t\t}\n\n\t\tconst dispose = () => {\n\t\t\tif (this.hasListeners) {\n\t\t\t\tthis.unhook(e);\n\t\t\t}\n\n\t\t\tconst idx = this.events.indexOf(e);\n\t\t\tthis.events.splice(idx, 1);\n\t\t};\n\n\t\treturn toDisposable(onceFn(dispose));\n\t}\n\n\tprivate onFirstListenerAdd(): void {\n\t\tthis.hasListeners = true;\n\t\tthis.events.forEach(e => this.hook(e));\n\t}\n\n\tprivate onLastListenerRemove(): void {\n\t\tthis.hasListeners = false;\n\t\tthis.events.forEach(e => this.unhook(e));\n\t}\n\n\tprivate hook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\te.listener = e.event(r => this.emitter.fire(r));\n\t}\n\n\tprivate unhook(e: { event: Event<T>; listener: IDisposable | null; }): void {\n\t\tif (e.listener) {\n\t\t\te.listener.dispose();\n\t\t}\n\t\te.listener = null;\n\t}\n\n\tdispose(): void {\n\t\tthis.emitter.dispose();\n\t}\n}\n\n/**\n * The EventBufferer is useful in situations in which you want\n * to delay firing your events during some code.\n * You can wrap that code and be sure that the event will not\n * be fired during that wrap.\n *\n * ```\n * const emitter: Emitter;\n * const delayer = new EventDelayer();\n * const delayedEvent = delayer.wrapEvent(emitter.event);\n *\n * delayedEvent(console.log);\n *\n * delayer.bufferEvents(() => {\n *   emitter.fire(); // event will not be fired yet\n * });\n *\n * // event will only be fired at this point\n * ```\n */\nexport class EventBufferer {\n\n\tprivate buffers: Function[][] = [];\n\n\twrapEvent<T>(event: Event<T>): Event<T> {\n\t\treturn (listener, thisArgs?, disposables?) => {\n\t\t\treturn event(i => {\n\t\t\t\tconst buffer = this.buffers[this.buffers.length - 1];\n\n\t\t\t\tif (buffer) {\n\t\t\t\t\tbuffer.push(() => listener.call(thisArgs, i));\n\t\t\t\t} else {\n\t\t\t\t\tlistener.call(thisArgs, i);\n\t\t\t\t}\n\t\t\t}, undefined, disposables);\n\t\t};\n\t}\n\n\tbufferEvents<R = void>(fn: () => R): R {\n\t\tconst buffer: Array<() => R> = [];\n\t\tthis.buffers.push(buffer);\n\t\tconst r = fn();\n\t\tthis.buffers.pop();\n\t\tbuffer.forEach(flush => flush());\n\t\treturn r;\n\t}\n}\n\n/**\n * A Relay is an event forwarder which functions as a replugabble event pipe.\n * Once created, you can connect an input event to it and it will simply forward\n * events from that input event through its own `event` property. The `input`\n * can be changed at any point in time.\n */\nexport class Relay<T> implements IDisposable {\n\n\tprivate listening = false;\n\tprivate inputEvent: Event<T> = Event.None;\n\tprivate inputEventListener: IDisposable = Disposable.None;\n\n\tprivate readonly emitter = new Emitter<T>({\n\t\tonFirstListenerDidAdd: () => {\n\t\t\tthis.listening = true;\n\t\t\tthis.inputEventListener = this.inputEvent(this.emitter.fire, this.emitter);\n\t\t},\n\t\tonLastListenerRemove: () => {\n\t\t\tthis.listening = false;\n\t\t\tthis.inputEventListener.dispose();\n\t\t}\n\t});\n\n\treadonly event: Event<T> = this.emitter.event;\n\n\tset input(event: Event<T>) {\n\t\tthis.inputEvent = event;\n\n\t\tif (this.listening) {\n\t\t\tthis.inputEventListener.dispose();\n\t\t\tthis.inputEventListener = event(this.emitter.fire, this.emitter);\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis.inputEventListener.dispose();\n\t\tthis.emitter.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\n\nexport interface CancellationToken {\n\n\t/**\n\t * A flag signalling is cancellation has been requested.\n\t */\n\treadonly isCancellationRequested: boolean;\n\n\t/**\n\t * An event which fires when cancellation is requested. This event\n\t * only ever fires `once` as cancellation can only happen once. Listeners\n\t * that are registered after cancellation will be called (next event loop run),\n\t * but also only once.\n\t *\n\t * @event\n\t */\n\treadonly onCancellationRequested: (listener: (e: any) => any, thisArgs?: any, disposables?: IDisposable[]) => IDisposable;\n}\n\nconst shortcutEvent: Event<any> = Object.freeze(function (callback, context?): IDisposable {\n\tconst handle = setTimeout(callback.bind(context), 0);\n\treturn { dispose() { clearTimeout(handle); } };\n});\n\nexport namespace CancellationToken {\n\n\texport function isCancellationToken(thing: unknown): thing is CancellationToken {\n\t\tif (thing === CancellationToken.None || thing === CancellationToken.Cancelled) {\n\t\t\treturn true;\n\t\t}\n\t\tif (thing instanceof MutableToken) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing || typeof thing !== 'object') {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (thing as CancellationToken).isCancellationRequested === 'boolean'\n\t\t\t&& typeof (thing as CancellationToken).onCancellationRequested === 'function';\n\t}\n\n\n\texport const None: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: false,\n\t\tonCancellationRequested: Event.None\n\t});\n\n\texport const Cancelled: CancellationToken = Object.freeze({\n\t\tisCancellationRequested: true,\n\t\tonCancellationRequested: shortcutEvent\n\t});\n}\n\nclass MutableToken implements CancellationToken {\n\n\tprivate _isCancelled: boolean = false;\n\tprivate _emitter: Emitter<any> | null = null;\n\n\tpublic cancel() {\n\t\tif (!this._isCancelled) {\n\t\t\tthis._isCancelled = true;\n\t\t\tif (this._emitter) {\n\t\t\t\tthis._emitter.fire(undefined);\n\t\t\t\tthis.dispose();\n\t\t\t}\n\t\t}\n\t}\n\n\tget isCancellationRequested(): boolean {\n\t\treturn this._isCancelled;\n\t}\n\n\tget onCancellationRequested(): Event<any> {\n\t\tif (this._isCancelled) {\n\t\t\treturn shortcutEvent;\n\t\t}\n\t\tif (!this._emitter) {\n\t\t\tthis._emitter = new Emitter<any>();\n\t\t}\n\t\treturn this._emitter.event;\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this._emitter) {\n\t\t\tthis._emitter.dispose();\n\t\t\tthis._emitter = null;\n\t\t}\n\t}\n}\n\nexport class CancellationTokenSource {\n\n\tprivate _token?: CancellationToken = undefined;\n\tprivate _parentListener?: IDisposable = undefined;\n\n\tconstructor(parent?: CancellationToken) {\n\t\tthis._parentListener = parent && parent.onCancellationRequested(this.cancel, this);\n\t}\n\n\tget token(): CancellationToken {\n\t\tif (!this._token) {\n\t\t\t// be lazy and create the token only when\n\t\t\t// actually needed\n\t\t\tthis._token = new MutableToken();\n\t\t}\n\t\treturn this._token;\n\t}\n\n\tcancel(): void {\n\t\tif (!this._token) {\n\t\t\t// save an object by returning the default\n\t\t\t// cancelled token when cancellation happens\n\t\t\t// before someone asks for the token\n\t\t\tthis._token = CancellationToken.Cancelled;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually cancel\n\t\t\tthis._token.cancel();\n\t\t}\n\t}\n\n\tdispose(cancel: boolean = false): void {\n\t\tif (cancel) {\n\t\t\tthis.cancel();\n\t\t}\n\t\tif (this._parentListener) {\n\t\t\tthis._parentListener.dispose();\n\t\t}\n\t\tif (!this._token) {\n\t\t\t// ensure to initialize with an empty token if we had none\n\t\t\tthis._token = CancellationToken.None;\n\n\t\t} else if (this._token instanceof MutableToken) {\n\t\t\t// actually dispose\n\t\t\tthis._token.dispose();\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\n\nexport interface IIconRegistry {\n\treadonly all: IterableIterator<Codicon>;\n\treadonly onDidRegister: Event<Codicon>;\n\tget(id: string): Codicon | undefined;\n}\n\nclass Registry implements IIconRegistry {\n\n\tprivate readonly _icons = new Map<string, Codicon>();\n\tprivate readonly _onDidRegister = new Emitter<Codicon>();\n\n\tpublic add(icon: Codicon) {\n\t\tconst existing = this._icons.get(icon.id);\n\t\tif (!existing) {\n\t\t\tthis._icons.set(icon.id, icon);\n\t\t\tthis._onDidRegister.fire(icon);\n\t\t} else if (icon.description) {\n\t\t\texisting.description = icon.description;\n\t\t} else {\n\t\t\tconsole.error(`Duplicate registration of codicon ${icon.id}`);\n\t\t}\n\t}\n\n\tpublic get(id: string): Codicon | undefined {\n\t\treturn this._icons.get(id);\n\t}\n\n\tpublic get all(): IterableIterator<Codicon> {\n\t\treturn this._icons.values();\n\t}\n\n\tpublic get onDidRegister(): Event<Codicon> {\n\t\treturn this._onDidRegister.event;\n\t}\n}\n\nconst _registry = new Registry();\n\nexport const iconRegistry: IIconRegistry = _registry;\n\n// Selects all codicon names encapsulated in the `$()` syntax and wraps the\n// results with spaces so that screen readers can read the text better.\nexport function getCodiconAriaLabel(text: string | undefined) {\n\tif (!text) {\n\t\treturn '';\n\t}\n\n\treturn text.replace(/\\$\\((.*?)\\)/g, (_match, codiconName) => ` ${codiconName} `).trim();\n}\n\n/**\n * The Codicon library is a set of default icons that are built-in in VS Code.\n *\n * In the product (outside of base) Codicons should only be used as defaults. In order to have all icons in VS Code\n * themeable, component should ise define new, component specific icons using `iconRegistry.registerIcon`.\n * In that call a Codicon can be names as default.\n */\nexport class Codicon implements CSSIcon {\n\tprivate constructor(public readonly id: string, public readonly definition: IconDefinition, public description?: string) {\n\t\t_registry.add(this);\n\t}\n\tpublic get classNames() { return 'codicon codicon-' + this.id; }\n\t// classNamesArray is useful for migrating to ES6 classlist\n\tpublic get classNamesArray() { return ['codicon', 'codicon-' + this.id]; }\n\tpublic get cssSelector() { return '.codicon.codicon-' + this.id; }\n\n\n\t// built-in icons, with image name\n\tpublic static readonly add = new Codicon('add', { fontCharacter: '\\\\ea60' });\n\tpublic static readonly plus = new Codicon('plus', Codicon.add.definition);\n\tpublic static readonly gistNew = new Codicon('gist-new', Codicon.add.definition);\n\tpublic static readonly repoCreate = new Codicon('repo-create', Codicon.add.definition);\n\tpublic static readonly lightbulb = new Codicon('lightbulb', { fontCharacter: '\\\\ea61' });\n\tpublic static readonly lightBulb = new Codicon('light-bulb', { fontCharacter: '\\\\ea61' });\n\tpublic static readonly repo = new Codicon('repo', { fontCharacter: '\\\\ea62' });\n\tpublic static readonly repoDelete = new Codicon('repo-delete', { fontCharacter: '\\\\ea62' });\n\tpublic static readonly gistFork = new Codicon('gist-fork', { fontCharacter: '\\\\ea63' });\n\tpublic static readonly repoForked = new Codicon('repo-forked', { fontCharacter: '\\\\ea63' });\n\tpublic static readonly gitPullRequest = new Codicon('git-pull-request', { fontCharacter: '\\\\ea64' });\n\tpublic static readonly gitPullRequestAbandoned = new Codicon('git-pull-request-abandoned', { fontCharacter: '\\\\ea64' });\n\tpublic static readonly recordKeys = new Codicon('record-keys', { fontCharacter: '\\\\ea65' });\n\tpublic static readonly keyboard = new Codicon('keyboard', { fontCharacter: '\\\\ea65' });\n\tpublic static readonly tag = new Codicon('tag', { fontCharacter: '\\\\ea66' });\n\tpublic static readonly tagAdd = new Codicon('tag-add', { fontCharacter: '\\\\ea66' });\n\tpublic static readonly tagRemove = new Codicon('tag-remove', { fontCharacter: '\\\\ea66' });\n\tpublic static readonly person = new Codicon('person', { fontCharacter: '\\\\ea67' });\n\tpublic static readonly personFollow = new Codicon('person-follow', { fontCharacter: '\\\\ea67' });\n\tpublic static readonly personOutline = new Codicon('person-outline', { fontCharacter: '\\\\ea67' });\n\tpublic static readonly personFilled = new Codicon('person-filled', { fontCharacter: '\\\\ea67' });\n\tpublic static readonly gitBranch = new Codicon('git-branch', { fontCharacter: '\\\\ea68' });\n\tpublic static readonly gitBranchCreate = new Codicon('git-branch-create', { fontCharacter: '\\\\ea68' });\n\tpublic static readonly gitBranchDelete = new Codicon('git-branch-delete', { fontCharacter: '\\\\ea68' });\n\tpublic static readonly sourceControl = new Codicon('source-control', { fontCharacter: '\\\\ea68' });\n\tpublic static readonly mirror = new Codicon('mirror', { fontCharacter: '\\\\ea69' });\n\tpublic static readonly mirrorPublic = new Codicon('mirror-public', { fontCharacter: '\\\\ea69' });\n\tpublic static readonly star = new Codicon('star', { fontCharacter: '\\\\ea6a' });\n\tpublic static readonly starAdd = new Codicon('star-add', { fontCharacter: '\\\\ea6a' });\n\tpublic static readonly starDelete = new Codicon('star-delete', { fontCharacter: '\\\\ea6a' });\n\tpublic static readonly starEmpty = new Codicon('star-empty', { fontCharacter: '\\\\ea6a' });\n\tpublic static readonly comment = new Codicon('comment', { fontCharacter: '\\\\ea6b' });\n\tpublic static readonly commentAdd = new Codicon('comment-add', { fontCharacter: '\\\\ea6b' });\n\tpublic static readonly alert = new Codicon('alert', { fontCharacter: '\\\\ea6c' });\n\tpublic static readonly warning = new Codicon('warning', { fontCharacter: '\\\\ea6c' });\n\tpublic static readonly search = new Codicon('search', { fontCharacter: '\\\\ea6d' });\n\tpublic static readonly searchSave = new Codicon('search-save', { fontCharacter: '\\\\ea6d' });\n\tpublic static readonly logOut = new Codicon('log-out', { fontCharacter: '\\\\ea6e' });\n\tpublic static readonly signOut = new Codicon('sign-out', { fontCharacter: '\\\\ea6e' });\n\tpublic static readonly logIn = new Codicon('log-in', { fontCharacter: '\\\\ea6f' });\n\tpublic static readonly signIn = new Codicon('sign-in', { fontCharacter: '\\\\ea6f' });\n\tpublic static readonly eye = new Codicon('eye', { fontCharacter: '\\\\ea70' });\n\tpublic static readonly eyeUnwatch = new Codicon('eye-unwatch', { fontCharacter: '\\\\ea70' });\n\tpublic static readonly eyeWatch = new Codicon('eye-watch', { fontCharacter: '\\\\ea70' });\n\tpublic static readonly circleFilled = new Codicon('circle-filled', { fontCharacter: '\\\\ea71' });\n\tpublic static readonly primitiveDot = new Codicon('primitive-dot', { fontCharacter: '\\\\ea71' });\n\tpublic static readonly closeDirty = new Codicon('close-dirty', { fontCharacter: '\\\\ea71' });\n\tpublic static readonly debugBreakpoint = new Codicon('debug-breakpoint', { fontCharacter: '\\\\ea71' });\n\tpublic static readonly debugBreakpointDisabled = new Codicon('debug-breakpoint-disabled', { fontCharacter: '\\\\ea71' });\n\tpublic static readonly debugHint = new Codicon('debug-hint', { fontCharacter: '\\\\ea71' });\n\tpublic static readonly primitiveSquare = new Codicon('primitive-square', { fontCharacter: '\\\\ea72' });\n\tpublic static readonly edit = new Codicon('edit', { fontCharacter: '\\\\ea73' });\n\tpublic static readonly pencil = new Codicon('pencil', { fontCharacter: '\\\\ea73' });\n\tpublic static readonly info = new Codicon('info', { fontCharacter: '\\\\ea74' });\n\tpublic static readonly issueOpened = new Codicon('issue-opened', { fontCharacter: '\\\\ea74' });\n\tpublic static readonly gistPrivate = new Codicon('gist-private', { fontCharacter: '\\\\ea75' });\n\tpublic static readonly gitForkPrivate = new Codicon('git-fork-private', { fontCharacter: '\\\\ea75' });\n\tpublic static readonly lock = new Codicon('lock', { fontCharacter: '\\\\ea75' });\n\tpublic static readonly mirrorPrivate = new Codicon('mirror-private', { fontCharacter: '\\\\ea75' });\n\tpublic static readonly close = new Codicon('close', { fontCharacter: '\\\\ea76' });\n\tpublic static readonly removeClose = new Codicon('remove-close', { fontCharacter: '\\\\ea76' });\n\tpublic static readonly x = new Codicon('x', { fontCharacter: '\\\\ea76' });\n\tpublic static readonly repoSync = new Codicon('repo-sync', { fontCharacter: '\\\\ea77' });\n\tpublic static readonly sync = new Codicon('sync', { fontCharacter: '\\\\ea77' });\n\tpublic static readonly clone = new Codicon('clone', { fontCharacter: '\\\\ea78' });\n\tpublic static readonly desktopDownload = new Codicon('desktop-download', { fontCharacter: '\\\\ea78' });\n\tpublic static readonly beaker = new Codicon('beaker', { fontCharacter: '\\\\ea79' });\n\tpublic static readonly microscope = new Codicon('microscope', { fontCharacter: '\\\\ea79' });\n\tpublic static readonly vm = new Codicon('vm', { fontCharacter: '\\\\ea7a' });\n\tpublic static readonly deviceDesktop = new Codicon('device-desktop', { fontCharacter: '\\\\ea7a' });\n\tpublic static readonly file = new Codicon('file', { fontCharacter: '\\\\ea7b' });\n\tpublic static readonly fileText = new Codicon('file-text', { fontCharacter: '\\\\ea7b' });\n\tpublic static readonly more = new Codicon('more', { fontCharacter: '\\\\ea7c' });\n\tpublic static readonly ellipsis = new Codicon('ellipsis', { fontCharacter: '\\\\ea7c' });\n\tpublic static readonly kebabHorizontal = new Codicon('kebab-horizontal', { fontCharacter: '\\\\ea7c' });\n\tpublic static readonly mailReply = new Codicon('mail-reply', { fontCharacter: '\\\\ea7d' });\n\tpublic static readonly reply = new Codicon('reply', { fontCharacter: '\\\\ea7d' });\n\tpublic static readonly organization = new Codicon('organization', { fontCharacter: '\\\\ea7e' });\n\tpublic static readonly organizationFilled = new Codicon('organization-filled', { fontCharacter: '\\\\ea7e' });\n\tpublic static readonly organizationOutline = new Codicon('organization-outline', { fontCharacter: '\\\\ea7e' });\n\tpublic static readonly newFile = new Codicon('new-file', { fontCharacter: '\\\\ea7f' });\n\tpublic static readonly fileAdd = new Codicon('file-add', { fontCharacter: '\\\\ea7f' });\n\tpublic static readonly newFolder = new Codicon('new-folder', { fontCharacter: '\\\\ea80' });\n\tpublic static readonly fileDirectoryCreate = new Codicon('file-directory-create', { fontCharacter: '\\\\ea80' });\n\tpublic static readonly trash = new Codicon('trash', { fontCharacter: '\\\\ea81' });\n\tpublic static readonly trashcan = new Codicon('trashcan', { fontCharacter: '\\\\ea81' });\n\tpublic static readonly history = new Codicon('history', { fontCharacter: '\\\\ea82' });\n\tpublic static readonly clock = new Codicon('clock', { fontCharacter: '\\\\ea82' });\n\tpublic static readonly folder = new Codicon('folder', { fontCharacter: '\\\\ea83' });\n\tpublic static readonly fileDirectory = new Codicon('file-directory', { fontCharacter: '\\\\ea83' });\n\tpublic static readonly symbolFolder = new Codicon('symbol-folder', { fontCharacter: '\\\\ea83' });\n\tpublic static readonly logoGithub = new Codicon('logo-github', { fontCharacter: '\\\\ea84' });\n\tpublic static readonly markGithub = new Codicon('mark-github', { fontCharacter: '\\\\ea84' });\n\tpublic static readonly github = new Codicon('github', { fontCharacter: '\\\\ea84' });\n\tpublic static readonly terminal = new Codicon('terminal', { fontCharacter: '\\\\ea85' });\n\tpublic static readonly console = new Codicon('console', { fontCharacter: '\\\\ea85' });\n\tpublic static readonly repl = new Codicon('repl', { fontCharacter: '\\\\ea85' });\n\tpublic static readonly zap = new Codicon('zap', { fontCharacter: '\\\\ea86' });\n\tpublic static readonly symbolEvent = new Codicon('symbol-event', { fontCharacter: '\\\\ea86' });\n\tpublic static readonly error = new Codicon('error', { fontCharacter: '\\\\ea87' });\n\tpublic static readonly stop = new Codicon('stop', { fontCharacter: '\\\\ea87' });\n\tpublic static readonly variable = new Codicon('variable', { fontCharacter: '\\\\ea88' });\n\tpublic static readonly symbolVariable = new Codicon('symbol-variable', { fontCharacter: '\\\\ea88' });\n\tpublic static readonly array = new Codicon('array', { fontCharacter: '\\\\ea8a' });\n\tpublic static readonly symbolArray = new Codicon('symbol-array', { fontCharacter: '\\\\ea8a' });\n\tpublic static readonly symbolModule = new Codicon('symbol-module', { fontCharacter: '\\\\ea8b' });\n\tpublic static readonly symbolPackage = new Codicon('symbol-package', { fontCharacter: '\\\\ea8b' });\n\tpublic static readonly symbolNamespace = new Codicon('symbol-namespace', { fontCharacter: '\\\\ea8b' });\n\tpublic static readonly symbolObject = new Codicon('symbol-object', { fontCharacter: '\\\\ea8b' });\n\tpublic static readonly symbolMethod = new Codicon('symbol-method', { fontCharacter: '\\\\ea8c' });\n\tpublic static readonly symbolFunction = new Codicon('symbol-function', { fontCharacter: '\\\\ea8c' });\n\tpublic static readonly symbolConstructor = new Codicon('symbol-constructor', { fontCharacter: '\\\\ea8c' });\n\tpublic static readonly symbolBoolean = new Codicon('symbol-boolean', { fontCharacter: '\\\\ea8f' });\n\tpublic static readonly symbolNull = new Codicon('symbol-null', { fontCharacter: '\\\\ea8f' });\n\tpublic static readonly symbolNumeric = new Codicon('symbol-numeric', { fontCharacter: '\\\\ea90' });\n\tpublic static readonly symbolNumber = new Codicon('symbol-number', { fontCharacter: '\\\\ea90' });\n\tpublic static readonly symbolStructure = new Codicon('symbol-structure', { fontCharacter: '\\\\ea91' });\n\tpublic static readonly symbolStruct = new Codicon('symbol-struct', { fontCharacter: '\\\\ea91' });\n\tpublic static readonly symbolParameter = new Codicon('symbol-parameter', { fontCharacter: '\\\\ea92' });\n\tpublic static readonly symbolTypeParameter = new Codicon('symbol-type-parameter', { fontCharacter: '\\\\ea92' });\n\tpublic static readonly symbolKey = new Codicon('symbol-key', { fontCharacter: '\\\\ea93' });\n\tpublic static readonly symbolText = new Codicon('symbol-text', { fontCharacter: '\\\\ea93' });\n\tpublic static readonly symbolReference = new Codicon('symbol-reference', { fontCharacter: '\\\\ea94' });\n\tpublic static readonly goToFile = new Codicon('go-to-file', { fontCharacter: '\\\\ea94' });\n\tpublic static readonly symbolEnum = new Codicon('symbol-enum', { fontCharacter: '\\\\ea95' });\n\tpublic static readonly symbolValue = new Codicon('symbol-value', { fontCharacter: '\\\\ea95' });\n\tpublic static readonly symbolRuler = new Codicon('symbol-ruler', { fontCharacter: '\\\\ea96' });\n\tpublic static readonly symbolUnit = new Codicon('symbol-unit', { fontCharacter: '\\\\ea96' });\n\tpublic static readonly activateBreakpoints = new Codicon('activate-breakpoints', { fontCharacter: '\\\\ea97' });\n\tpublic static readonly archive = new Codicon('archive', { fontCharacter: '\\\\ea98' });\n\tpublic static readonly arrowBoth = new Codicon('arrow-both', { fontCharacter: '\\\\ea99' });\n\tpublic static readonly arrowDown = new Codicon('arrow-down', { fontCharacter: '\\\\ea9a' });\n\tpublic static readonly arrowLeft = new Codicon('arrow-left', { fontCharacter: '\\\\ea9b' });\n\tpublic static readonly arrowRight = new Codicon('arrow-right', { fontCharacter: '\\\\ea9c' });\n\tpublic static readonly arrowSmallDown = new Codicon('arrow-small-down', { fontCharacter: '\\\\ea9d' });\n\tpublic static readonly arrowSmallLeft = new Codicon('arrow-small-left', { fontCharacter: '\\\\ea9e' });\n\tpublic static readonly arrowSmallRight = new Codicon('arrow-small-right', { fontCharacter: '\\\\ea9f' });\n\tpublic static readonly arrowSmallUp = new Codicon('arrow-small-up', { fontCharacter: '\\\\eaa0' });\n\tpublic static readonly arrowUp = new Codicon('arrow-up', { fontCharacter: '\\\\eaa1' });\n\tpublic static readonly bell = new Codicon('bell', { fontCharacter: '\\\\eaa2' });\n\tpublic static readonly bold = new Codicon('bold', { fontCharacter: '\\\\eaa3' });\n\tpublic static readonly book = new Codicon('book', { fontCharacter: '\\\\eaa4' });\n\tpublic static readonly bookmark = new Codicon('bookmark', { fontCharacter: '\\\\eaa5' });\n\tpublic static readonly debugBreakpointConditionalUnverified = new Codicon('debug-breakpoint-conditional-unverified', { fontCharacter: '\\\\eaa6' });\n\tpublic static readonly debugBreakpointConditional = new Codicon('debug-breakpoint-conditional', { fontCharacter: '\\\\eaa7' });\n\tpublic static readonly debugBreakpointConditionalDisabled = new Codicon('debug-breakpoint-conditional-disabled', { fontCharacter: '\\\\eaa7' });\n\tpublic static readonly debugBreakpointDataUnverified = new Codicon('debug-breakpoint-data-unverified', { fontCharacter: '\\\\eaa8' });\n\tpublic static readonly debugBreakpointData = new Codicon('debug-breakpoint-data', { fontCharacter: '\\\\eaa9' });\n\tpublic static readonly debugBreakpointDataDisabled = new Codicon('debug-breakpoint-data-disabled', { fontCharacter: '\\\\eaa9' });\n\tpublic static readonly debugBreakpointLogUnverified = new Codicon('debug-breakpoint-log-unverified', { fontCharacter: '\\\\eaaa' });\n\tpublic static readonly debugBreakpointLog = new Codicon('debug-breakpoint-log', { fontCharacter: '\\\\eaab' });\n\tpublic static readonly debugBreakpointLogDisabled = new Codicon('debug-breakpoint-log-disabled', { fontCharacter: '\\\\eaab' });\n\tpublic static readonly briefcase = new Codicon('briefcase', { fontCharacter: '\\\\eaac' });\n\tpublic static readonly broadcast = new Codicon('broadcast', { fontCharacter: '\\\\eaad' });\n\tpublic static readonly browser = new Codicon('browser', { fontCharacter: '\\\\eaae' });\n\tpublic static readonly bug = new Codicon('bug', { fontCharacter: '\\\\eaaf' });\n\tpublic static readonly calendar = new Codicon('calendar', { fontCharacter: '\\\\eab0' });\n\tpublic static readonly caseSensitive = new Codicon('case-sensitive', { fontCharacter: '\\\\eab1' });\n\tpublic static readonly check = new Codicon('check', { fontCharacter: '\\\\eab2' });\n\tpublic static readonly checklist = new Codicon('checklist', { fontCharacter: '\\\\eab3' });\n\tpublic static readonly chevronDown = new Codicon('chevron-down', { fontCharacter: '\\\\eab4' });\n\tpublic static readonly dropDownButton = new Codicon('drop-down-button', Codicon.chevronDown.definition);\n\tpublic static readonly chevronLeft = new Codicon('chevron-left', { fontCharacter: '\\\\eab5' });\n\tpublic static readonly chevronRight = new Codicon('chevron-right', { fontCharacter: '\\\\eab6' });\n\tpublic static readonly chevronUp = new Codicon('chevron-up', { fontCharacter: '\\\\eab7' });\n\tpublic static readonly chromeClose = new Codicon('chrome-close', { fontCharacter: '\\\\eab8' });\n\tpublic static readonly chromeMaximize = new Codicon('chrome-maximize', { fontCharacter: '\\\\eab9' });\n\tpublic static readonly chromeMinimize = new Codicon('chrome-minimize', { fontCharacter: '\\\\eaba' });\n\tpublic static readonly chromeRestore = new Codicon('chrome-restore', { fontCharacter: '\\\\eabb' });\n\tpublic static readonly circleOutline = new Codicon('circle-outline', { fontCharacter: '\\\\eabc' });\n\tpublic static readonly debugBreakpointUnverified = new Codicon('debug-breakpoint-unverified', { fontCharacter: '\\\\eabc' });\n\tpublic static readonly circleSlash = new Codicon('circle-slash', { fontCharacter: '\\\\eabd' });\n\tpublic static readonly circuitBoard = new Codicon('circuit-board', { fontCharacter: '\\\\eabe' });\n\tpublic static readonly clearAll = new Codicon('clear-all', { fontCharacter: '\\\\eabf' });\n\tpublic static readonly clippy = new Codicon('clippy', { fontCharacter: '\\\\eac0' });\n\tpublic static readonly closeAll = new Codicon('close-all', { fontCharacter: '\\\\eac1' });\n\tpublic static readonly cloudDownload = new Codicon('cloud-download', { fontCharacter: '\\\\eac2' });\n\tpublic static readonly cloudUpload = new Codicon('cloud-upload', { fontCharacter: '\\\\eac3' });\n\tpublic static readonly code = new Codicon('code', { fontCharacter: '\\\\eac4' });\n\tpublic static readonly collapseAll = new Codicon('collapse-all', { fontCharacter: '\\\\eac5' });\n\tpublic static readonly colorMode = new Codicon('color-mode', { fontCharacter: '\\\\eac6' });\n\tpublic static readonly commentDiscussion = new Codicon('comment-discussion', { fontCharacter: '\\\\eac7' });\n\tpublic static readonly compareChanges = new Codicon('compare-changes', { fontCharacter: '\\\\eafd' });\n\tpublic static readonly creditCard = new Codicon('credit-card', { fontCharacter: '\\\\eac9' });\n\tpublic static readonly dash = new Codicon('dash', { fontCharacter: '\\\\eacc' });\n\tpublic static readonly dashboard = new Codicon('dashboard', { fontCharacter: '\\\\eacd' });\n\tpublic static readonly database = new Codicon('database', { fontCharacter: '\\\\eace' });\n\tpublic static readonly debugContinue = new Codicon('debug-continue', { fontCharacter: '\\\\eacf' });\n\tpublic static readonly debugDisconnect = new Codicon('debug-disconnect', { fontCharacter: '\\\\ead0' });\n\tpublic static readonly debugPause = new Codicon('debug-pause', { fontCharacter: '\\\\ead1' });\n\tpublic static readonly debugRestart = new Codicon('debug-restart', { fontCharacter: '\\\\ead2' });\n\tpublic static readonly debugStart = new Codicon('debug-start', { fontCharacter: '\\\\ead3' });\n\tpublic static readonly debugStepInto = new Codicon('debug-step-into', { fontCharacter: '\\\\ead4' });\n\tpublic static readonly debugStepOut = new Codicon('debug-step-out', { fontCharacter: '\\\\ead5' });\n\tpublic static readonly debugStepOver = new Codicon('debug-step-over', { fontCharacter: '\\\\ead6' });\n\tpublic static readonly debugStop = new Codicon('debug-stop', { fontCharacter: '\\\\ead7' });\n\tpublic static readonly debug = new Codicon('debug', { fontCharacter: '\\\\ead8' });\n\tpublic static readonly deviceCameraVideo = new Codicon('device-camera-video', { fontCharacter: '\\\\ead9' });\n\tpublic static readonly deviceCamera = new Codicon('device-camera', { fontCharacter: '\\\\eada' });\n\tpublic static readonly deviceMobile = new Codicon('device-mobile', { fontCharacter: '\\\\eadb' });\n\tpublic static readonly diffAdded = new Codicon('diff-added', { fontCharacter: '\\\\eadc' });\n\tpublic static readonly diffIgnored = new Codicon('diff-ignored', { fontCharacter: '\\\\eadd' });\n\tpublic static readonly diffModified = new Codicon('diff-modified', { fontCharacter: '\\\\eade' });\n\tpublic static readonly diffRemoved = new Codicon('diff-removed', { fontCharacter: '\\\\eadf' });\n\tpublic static readonly diffRenamed = new Codicon('diff-renamed', { fontCharacter: '\\\\eae0' });\n\tpublic static readonly diff = new Codicon('diff', { fontCharacter: '\\\\eae1' });\n\tpublic static readonly discard = new Codicon('discard', { fontCharacter: '\\\\eae2' });\n\tpublic static readonly editorLayout = new Codicon('editor-layout', { fontCharacter: '\\\\eae3' });\n\tpublic static readonly emptyWindow = new Codicon('empty-window', { fontCharacter: '\\\\eae4' });\n\tpublic static readonly exclude = new Codicon('exclude', { fontCharacter: '\\\\eae5' });\n\tpublic static readonly extensions = new Codicon('extensions', { fontCharacter: '\\\\eae6' });\n\tpublic static readonly eyeClosed = new Codicon('eye-closed', { fontCharacter: '\\\\eae7' });\n\tpublic static readonly fileBinary = new Codicon('file-binary', { fontCharacter: '\\\\eae8' });\n\tpublic static readonly fileCode = new Codicon('file-code', { fontCharacter: '\\\\eae9' });\n\tpublic static readonly fileMedia = new Codicon('file-media', { fontCharacter: '\\\\eaea' });\n\tpublic static readonly filePdf = new Codicon('file-pdf', { fontCharacter: '\\\\eaeb' });\n\tpublic static readonly fileSubmodule = new Codicon('file-submodule', { fontCharacter: '\\\\eaec' });\n\tpublic static readonly fileSymlinkDirectory = new Codicon('file-symlink-directory', { fontCharacter: '\\\\eaed' });\n\tpublic static readonly fileSymlinkFile = new Codicon('file-symlink-file', { fontCharacter: '\\\\eaee' });\n\tpublic static readonly fileZip = new Codicon('file-zip', { fontCharacter: '\\\\eaef' });\n\tpublic static readonly files = new Codicon('files', { fontCharacter: '\\\\eaf0' });\n\tpublic static readonly filter = new Codicon('filter', { fontCharacter: '\\\\eaf1' });\n\tpublic static readonly flame = new Codicon('flame', { fontCharacter: '\\\\eaf2' });\n\tpublic static readonly foldDown = new Codicon('fold-down', { fontCharacter: '\\\\eaf3' });\n\tpublic static readonly foldUp = new Codicon('fold-up', { fontCharacter: '\\\\eaf4' });\n\tpublic static readonly fold = new Codicon('fold', { fontCharacter: '\\\\eaf5' });\n\tpublic static readonly folderActive = new Codicon('folder-active', { fontCharacter: '\\\\eaf6' });\n\tpublic static readonly folderOpened = new Codicon('folder-opened', { fontCharacter: '\\\\eaf7' });\n\tpublic static readonly gear = new Codicon('gear', { fontCharacter: '\\\\eaf8' });\n\tpublic static readonly gift = new Codicon('gift', { fontCharacter: '\\\\eaf9' });\n\tpublic static readonly gistSecret = new Codicon('gist-secret', { fontCharacter: '\\\\eafa' });\n\tpublic static readonly gist = new Codicon('gist', { fontCharacter: '\\\\eafb' });\n\tpublic static readonly gitCommit = new Codicon('git-commit', { fontCharacter: '\\\\eafc' });\n\tpublic static readonly gitCompare = new Codicon('git-compare', { fontCharacter: '\\\\eafd' });\n\tpublic static readonly gitMerge = new Codicon('git-merge', { fontCharacter: '\\\\eafe' });\n\tpublic static readonly githubAction = new Codicon('github-action', { fontCharacter: '\\\\eaff' });\n\tpublic static readonly githubAlt = new Codicon('github-alt', { fontCharacter: '\\\\eb00' });\n\tpublic static readonly globe = new Codicon('globe', { fontCharacter: '\\\\eb01' });\n\tpublic static readonly grabber = new Codicon('grabber', { fontCharacter: '\\\\eb02' });\n\tpublic static readonly graph = new Codicon('graph', { fontCharacter: '\\\\eb03' });\n\tpublic static readonly gripper = new Codicon('gripper', { fontCharacter: '\\\\eb04' });\n\tpublic static readonly heart = new Codicon('heart', { fontCharacter: '\\\\eb05' });\n\tpublic static readonly home = new Codicon('home', { fontCharacter: '\\\\eb06' });\n\tpublic static readonly horizontalRule = new Codicon('horizontal-rule', { fontCharacter: '\\\\eb07' });\n\tpublic static readonly hubot = new Codicon('hubot', { fontCharacter: '\\\\eb08' });\n\tpublic static readonly inbox = new Codicon('inbox', { fontCharacter: '\\\\eb09' });\n\tpublic static readonly issueClosed = new Codicon('issue-closed', { fontCharacter: '\\\\eba4' });\n\tpublic static readonly issueReopened = new Codicon('issue-reopened', { fontCharacter: '\\\\eb0b' });\n\tpublic static readonly issues = new Codicon('issues', { fontCharacter: '\\\\eb0c' });\n\tpublic static readonly italic = new Codicon('italic', { fontCharacter: '\\\\eb0d' });\n\tpublic static readonly jersey = new Codicon('jersey', { fontCharacter: '\\\\eb0e' });\n\tpublic static readonly json = new Codicon('json', { fontCharacter: '\\\\eb0f' });\n\tpublic static readonly kebabVertical = new Codicon('kebab-vertical', { fontCharacter: '\\\\eb10' });\n\tpublic static readonly key = new Codicon('key', { fontCharacter: '\\\\eb11' });\n\tpublic static readonly law = new Codicon('law', { fontCharacter: '\\\\eb12' });\n\tpublic static readonly lightbulbAutofix = new Codicon('lightbulb-autofix', { fontCharacter: '\\\\eb13' });\n\tpublic static readonly linkExternal = new Codicon('link-external', { fontCharacter: '\\\\eb14' });\n\tpublic static readonly link = new Codicon('link', { fontCharacter: '\\\\eb15' });\n\tpublic static readonly listOrdered = new Codicon('list-ordered', { fontCharacter: '\\\\eb16' });\n\tpublic static readonly listUnordered = new Codicon('list-unordered', { fontCharacter: '\\\\eb17' });\n\tpublic static readonly liveShare = new Codicon('live-share', { fontCharacter: '\\\\eb18' });\n\tpublic static readonly loading = new Codicon('loading', { fontCharacter: '\\\\eb19' });\n\tpublic static readonly location = new Codicon('location', { fontCharacter: '\\\\eb1a' });\n\tpublic static readonly mailRead = new Codicon('mail-read', { fontCharacter: '\\\\eb1b' });\n\tpublic static readonly mail = new Codicon('mail', { fontCharacter: '\\\\eb1c' });\n\tpublic static readonly markdown = new Codicon('markdown', { fontCharacter: '\\\\eb1d' });\n\tpublic static readonly megaphone = new Codicon('megaphone', { fontCharacter: '\\\\eb1e' });\n\tpublic static readonly mention = new Codicon('mention', { fontCharacter: '\\\\eb1f' });\n\tpublic static readonly milestone = new Codicon('milestone', { fontCharacter: '\\\\eb20' });\n\tpublic static readonly mortarBoard = new Codicon('mortar-board', { fontCharacter: '\\\\eb21' });\n\tpublic static readonly move = new Codicon('move', { fontCharacter: '\\\\eb22' });\n\tpublic static readonly multipleWindows = new Codicon('multiple-windows', { fontCharacter: '\\\\eb23' });\n\tpublic static readonly mute = new Codicon('mute', { fontCharacter: '\\\\eb24' });\n\tpublic static readonly noNewline = new Codicon('no-newline', { fontCharacter: '\\\\eb25' });\n\tpublic static readonly note = new Codicon('note', { fontCharacter: '\\\\eb26' });\n\tpublic static readonly octoface = new Codicon('octoface', { fontCharacter: '\\\\eb27' });\n\tpublic static readonly openPreview = new Codicon('open-preview', { fontCharacter: '\\\\eb28' });\n\tpublic static readonly package_ = new Codicon('package', { fontCharacter: '\\\\eb29' });\n\tpublic static readonly paintcan = new Codicon('paintcan', { fontCharacter: '\\\\eb2a' });\n\tpublic static readonly pin = new Codicon('pin', { fontCharacter: '\\\\eb2b' });\n\tpublic static readonly play = new Codicon('play', { fontCharacter: '\\\\eb2c' });\n\tpublic static readonly run = new Codicon('run', { fontCharacter: '\\\\eb2c' });\n\tpublic static readonly plug = new Codicon('plug', { fontCharacter: '\\\\eb2d' });\n\tpublic static readonly preserveCase = new Codicon('preserve-case', { fontCharacter: '\\\\eb2e' });\n\tpublic static readonly preview = new Codicon('preview', { fontCharacter: '\\\\eb2f' });\n\tpublic static readonly project = new Codicon('project', { fontCharacter: '\\\\eb30' });\n\tpublic static readonly pulse = new Codicon('pulse', { fontCharacter: '\\\\eb31' });\n\tpublic static readonly question = new Codicon('question', { fontCharacter: '\\\\eb32' });\n\tpublic static readonly quote = new Codicon('quote', { fontCharacter: '\\\\eb33' });\n\tpublic static readonly radioTower = new Codicon('radio-tower', { fontCharacter: '\\\\eb34' });\n\tpublic static readonly reactions = new Codicon('reactions', { fontCharacter: '\\\\eb35' });\n\tpublic static readonly references = new Codicon('references', { fontCharacter: '\\\\eb36' });\n\tpublic static readonly refresh = new Codicon('refresh', { fontCharacter: '\\\\eb37' });\n\tpublic static readonly regex = new Codicon('regex', { fontCharacter: '\\\\eb38' });\n\tpublic static readonly remoteExplorer = new Codicon('remote-explorer', { fontCharacter: '\\\\eb39' });\n\tpublic static readonly remote = new Codicon('remote', { fontCharacter: '\\\\eb3a' });\n\tpublic static readonly remove = new Codicon('remove', { fontCharacter: '\\\\eb3b' });\n\tpublic static readonly replaceAll = new Codicon('replace-all', { fontCharacter: '\\\\eb3c' });\n\tpublic static readonly replace = new Codicon('replace', { fontCharacter: '\\\\eb3d' });\n\tpublic static readonly repoClone = new Codicon('repo-clone', { fontCharacter: '\\\\eb3e' });\n\tpublic static readonly repoForcePush = new Codicon('repo-force-push', { fontCharacter: '\\\\eb3f' });\n\tpublic static readonly repoPull = new Codicon('repo-pull', { fontCharacter: '\\\\eb40' });\n\tpublic static readonly repoPush = new Codicon('repo-push', { fontCharacter: '\\\\eb41' });\n\tpublic static readonly report = new Codicon('report', { fontCharacter: '\\\\eb42' });\n\tpublic static readonly requestChanges = new Codicon('request-changes', { fontCharacter: '\\\\eb43' });\n\tpublic static readonly rocket = new Codicon('rocket', { fontCharacter: '\\\\eb44' });\n\tpublic static readonly rootFolderOpened = new Codicon('root-folder-opened', { fontCharacter: '\\\\eb45' });\n\tpublic static readonly rootFolder = new Codicon('root-folder', { fontCharacter: '\\\\eb46' });\n\tpublic static readonly rss = new Codicon('rss', { fontCharacter: '\\\\eb47' });\n\tpublic static readonly ruby = new Codicon('ruby', { fontCharacter: '\\\\eb48' });\n\tpublic static readonly saveAll = new Codicon('save-all', { fontCharacter: '\\\\eb49' });\n\tpublic static readonly saveAs = new Codicon('save-as', { fontCharacter: '\\\\eb4a' });\n\tpublic static readonly save = new Codicon('save', { fontCharacter: '\\\\eb4b' });\n\tpublic static readonly screenFull = new Codicon('screen-full', { fontCharacter: '\\\\eb4c' });\n\tpublic static readonly screenNormal = new Codicon('screen-normal', { fontCharacter: '\\\\eb4d' });\n\tpublic static readonly searchStop = new Codicon('search-stop', { fontCharacter: '\\\\eb4e' });\n\tpublic static readonly server = new Codicon('server', { fontCharacter: '\\\\eb50' });\n\tpublic static readonly settingsGear = new Codicon('settings-gear', { fontCharacter: '\\\\eb51' });\n\tpublic static readonly settings = new Codicon('settings', { fontCharacter: '\\\\eb52' });\n\tpublic static readonly shield = new Codicon('shield', { fontCharacter: '\\\\eb53' });\n\tpublic static readonly smiley = new Codicon('smiley', { fontCharacter: '\\\\eb54' });\n\tpublic static readonly sortPrecedence = new Codicon('sort-precedence', { fontCharacter: '\\\\eb55' });\n\tpublic static readonly splitHorizontal = new Codicon('split-horizontal', { fontCharacter: '\\\\eb56' });\n\tpublic static readonly splitVertical = new Codicon('split-vertical', { fontCharacter: '\\\\eb57' });\n\tpublic static readonly squirrel = new Codicon('squirrel', { fontCharacter: '\\\\eb58' });\n\tpublic static readonly starFull = new Codicon('star-full', { fontCharacter: '\\\\eb59' });\n\tpublic static readonly starHalf = new Codicon('star-half', { fontCharacter: '\\\\eb5a' });\n\tpublic static readonly symbolClass = new Codicon('symbol-class', { fontCharacter: '\\\\eb5b' });\n\tpublic static readonly symbolColor = new Codicon('symbol-color', { fontCharacter: '\\\\eb5c' });\n\tpublic static readonly symbolConstant = new Codicon('symbol-constant', { fontCharacter: '\\\\eb5d' });\n\tpublic static readonly symbolEnumMember = new Codicon('symbol-enum-member', { fontCharacter: '\\\\eb5e' });\n\tpublic static readonly symbolField = new Codicon('symbol-field', { fontCharacter: '\\\\eb5f' });\n\tpublic static readonly symbolFile = new Codicon('symbol-file', { fontCharacter: '\\\\eb60' });\n\tpublic static readonly symbolInterface = new Codicon('symbol-interface', { fontCharacter: '\\\\eb61' });\n\tpublic static readonly symbolKeyword = new Codicon('symbol-keyword', { fontCharacter: '\\\\eb62' });\n\tpublic static readonly symbolMisc = new Codicon('symbol-misc', { fontCharacter: '\\\\eb63' });\n\tpublic static readonly symbolOperator = new Codicon('symbol-operator', { fontCharacter: '\\\\eb64' });\n\tpublic static readonly symbolProperty = new Codicon('symbol-property', { fontCharacter: '\\\\eb65' });\n\tpublic static readonly wrench = new Codicon('wrench', { fontCharacter: '\\\\eb65' });\n\tpublic static readonly wrenchSubaction = new Codicon('wrench-subaction', { fontCharacter: '\\\\eb65' });\n\tpublic static readonly symbolSnippet = new Codicon('symbol-snippet', { fontCharacter: '\\\\eb66' });\n\tpublic static readonly tasklist = new Codicon('tasklist', { fontCharacter: '\\\\eb67' });\n\tpublic static readonly telescope = new Codicon('telescope', { fontCharacter: '\\\\eb68' });\n\tpublic static readonly textSize = new Codicon('text-size', { fontCharacter: '\\\\eb69' });\n\tpublic static readonly threeBars = new Codicon('three-bars', { fontCharacter: '\\\\eb6a' });\n\tpublic static readonly thumbsdown = new Codicon('thumbsdown', { fontCharacter: '\\\\eb6b' });\n\tpublic static readonly thumbsup = new Codicon('thumbsup', { fontCharacter: '\\\\eb6c' });\n\tpublic static readonly tools = new Codicon('tools', { fontCharacter: '\\\\eb6d' });\n\tpublic static readonly triangleDown = new Codicon('triangle-down', { fontCharacter: '\\\\eb6e' });\n\tpublic static readonly triangleLeft = new Codicon('triangle-left', { fontCharacter: '\\\\eb6f' });\n\tpublic static readonly triangleRight = new Codicon('triangle-right', { fontCharacter: '\\\\eb70' });\n\tpublic static readonly triangleUp = new Codicon('triangle-up', { fontCharacter: '\\\\eb71' });\n\tpublic static readonly twitter = new Codicon('twitter', { fontCharacter: '\\\\eb72' });\n\tpublic static readonly unfold = new Codicon('unfold', { fontCharacter: '\\\\eb73' });\n\tpublic static readonly unlock = new Codicon('unlock', { fontCharacter: '\\\\eb74' });\n\tpublic static readonly unmute = new Codicon('unmute', { fontCharacter: '\\\\eb75' });\n\tpublic static readonly unverified = new Codicon('unverified', { fontCharacter: '\\\\eb76' });\n\tpublic static readonly verified = new Codicon('verified', { fontCharacter: '\\\\eb77' });\n\tpublic static readonly versions = new Codicon('versions', { fontCharacter: '\\\\eb78' });\n\tpublic static readonly vmActive = new Codicon('vm-active', { fontCharacter: '\\\\eb79' });\n\tpublic static readonly vmOutline = new Codicon('vm-outline', { fontCharacter: '\\\\eb7a' });\n\tpublic static readonly vmRunning = new Codicon('vm-running', { fontCharacter: '\\\\eb7b' });\n\tpublic static readonly watch = new Codicon('watch', { fontCharacter: '\\\\eb7c' });\n\tpublic static readonly whitespace = new Codicon('whitespace', { fontCharacter: '\\\\eb7d' });\n\tpublic static readonly wholeWord = new Codicon('whole-word', { fontCharacter: '\\\\eb7e' });\n\tpublic static readonly window = new Codicon('window', { fontCharacter: '\\\\eb7f' });\n\tpublic static readonly wordWrap = new Codicon('word-wrap', { fontCharacter: '\\\\eb80' });\n\tpublic static readonly zoomIn = new Codicon('zoom-in', { fontCharacter: '\\\\eb81' });\n\tpublic static readonly zoomOut = new Codicon('zoom-out', { fontCharacter: '\\\\eb82' });\n\tpublic static readonly listFilter = new Codicon('list-filter', { fontCharacter: '\\\\eb83' });\n\tpublic static readonly listFlat = new Codicon('list-flat', { fontCharacter: '\\\\eb84' });\n\tpublic static readonly listSelection = new Codicon('list-selection', { fontCharacter: '\\\\eb85' });\n\tpublic static readonly selection = new Codicon('selection', { fontCharacter: '\\\\eb85' });\n\tpublic static readonly listTree = new Codicon('list-tree', { fontCharacter: '\\\\eb86' });\n\tpublic static readonly debugBreakpointFunctionUnverified = new Codicon('debug-breakpoint-function-unverified', { fontCharacter: '\\\\eb87' });\n\tpublic static readonly debugBreakpointFunction = new Codicon('debug-breakpoint-function', { fontCharacter: '\\\\eb88' });\n\tpublic static readonly debugBreakpointFunctionDisabled = new Codicon('debug-breakpoint-function-disabled', { fontCharacter: '\\\\eb88' });\n\tpublic static readonly debugStackframeActive = new Codicon('debug-stackframe-active', { fontCharacter: '\\\\eb89' });\n\tpublic static readonly debugStackframeDot = new Codicon('debug-stackframe-dot', { fontCharacter: '\\\\eb8a' });\n\tpublic static readonly debugStackframe = new Codicon('debug-stackframe', { fontCharacter: '\\\\eb8b' });\n\tpublic static readonly debugStackframeFocused = new Codicon('debug-stackframe-focused', { fontCharacter: '\\\\eb8b' });\n\tpublic static readonly debugBreakpointUnsupported = new Codicon('debug-breakpoint-unsupported', { fontCharacter: '\\\\eb8c' });\n\tpublic static readonly symbolString = new Codicon('symbol-string', { fontCharacter: '\\\\eb8d' });\n\tpublic static readonly debugReverseContinue = new Codicon('debug-reverse-continue', { fontCharacter: '\\\\eb8e' });\n\tpublic static readonly debugStepBack = new Codicon('debug-step-back', { fontCharacter: '\\\\eb8f' });\n\tpublic static readonly debugRestartFrame = new Codicon('debug-restart-frame', { fontCharacter: '\\\\eb90' });\n\tpublic static readonly callIncoming = new Codicon('call-incoming', { fontCharacter: '\\\\eb92' });\n\tpublic static readonly callOutgoing = new Codicon('call-outgoing', { fontCharacter: '\\\\eb93' });\n\tpublic static readonly menu = new Codicon('menu', { fontCharacter: '\\\\eb94' });\n\tpublic static readonly expandAll = new Codicon('expand-all', { fontCharacter: '\\\\eb95' });\n\tpublic static readonly feedback = new Codicon('feedback', { fontCharacter: '\\\\eb96' });\n\tpublic static readonly groupByRefType = new Codicon('group-by-ref-type', { fontCharacter: '\\\\eb97' });\n\tpublic static readonly ungroupByRefType = new Codicon('ungroup-by-ref-type', { fontCharacter: '\\\\eb98' });\n\tpublic static readonly account = new Codicon('account', { fontCharacter: '\\\\eb99' });\n\tpublic static readonly bellDot = new Codicon('bell-dot', { fontCharacter: '\\\\eb9a' });\n\tpublic static readonly debugConsole = new Codicon('debug-console', { fontCharacter: '\\\\eb9b' });\n\tpublic static readonly library = new Codicon('library', { fontCharacter: '\\\\eb9c' });\n\tpublic static readonly output = new Codicon('output', { fontCharacter: '\\\\eb9d' });\n\tpublic static readonly runAll = new Codicon('run-all', { fontCharacter: '\\\\eb9e' });\n\tpublic static readonly syncIgnored = new Codicon('sync-ignored', { fontCharacter: '\\\\eb9f' });\n\tpublic static readonly pinned = new Codicon('pinned', { fontCharacter: '\\\\eba0' });\n\tpublic static readonly githubInverted = new Codicon('github-inverted', { fontCharacter: '\\\\eba1' });\n\tpublic static readonly debugAlt = new Codicon('debug-alt', { fontCharacter: '\\\\eb91' });\n\tpublic static readonly serverProcess = new Codicon('server-process', { fontCharacter: '\\\\eba2' });\n\tpublic static readonly serverEnvironment = new Codicon('server-environment', { fontCharacter: '\\\\eba3' });\n\tpublic static readonly pass = new Codicon('pass', { fontCharacter: '\\\\eba4' });\n\tpublic static readonly stopCircle = new Codicon('stop-circle', { fontCharacter: '\\\\eba5' });\n\tpublic static readonly playCircle = new Codicon('play-circle', { fontCharacter: '\\\\eba6' });\n\tpublic static readonly record = new Codicon('record', { fontCharacter: '\\\\eba7' });\n\tpublic static readonly debugAltSmall = new Codicon('debug-alt-small', { fontCharacter: '\\\\eba8' });\n\tpublic static readonly vmConnect = new Codicon('vm-connect', { fontCharacter: '\\\\eba9' });\n\tpublic static readonly cloud = new Codicon('cloud', { fontCharacter: '\\\\ebaa' });\n\tpublic static readonly merge = new Codicon('merge', { fontCharacter: '\\\\ebab' });\n\tpublic static readonly exportIcon = new Codicon('export', { fontCharacter: '\\\\ebac' });\n\tpublic static readonly graphLeft = new Codicon('graph-left', { fontCharacter: '\\\\ebad' });\n\tpublic static readonly magnet = new Codicon('magnet', { fontCharacter: '\\\\ebae' });\n\tpublic static readonly notebook = new Codicon('notebook', { fontCharacter: '\\\\ebaf' });\n\tpublic static readonly redo = new Codicon('redo', { fontCharacter: '\\\\ebb0' });\n\tpublic static readonly checkAll = new Codicon('check-all', { fontCharacter: '\\\\ebb1' });\n\tpublic static readonly pinnedDirty = new Codicon('pinned-dirty', { fontCharacter: '\\\\ebb2' });\n\tpublic static readonly passFilled = new Codicon('pass-filled', { fontCharacter: '\\\\ebb3' });\n\tpublic static readonly circleLargeFilled = new Codicon('circle-large-filled', { fontCharacter: '\\\\ebb4' });\n\tpublic static readonly circleLargeOutline = new Codicon('circle-large-outline', { fontCharacter: '\\\\ebb5' });\n\tpublic static readonly combine = new Codicon('combine', { fontCharacter: '\\\\ebb6' });\n\tpublic static readonly gather = new Codicon('gather', { fontCharacter: '\\\\ebb6' });\n\tpublic static readonly table = new Codicon('table', { fontCharacter: '\\\\ebb7' });\n\tpublic static readonly variableGroup = new Codicon('variable-group', { fontCharacter: '\\\\ebb8' });\n\tpublic static readonly typeHierarchy = new Codicon('type-hierarchy', { fontCharacter: '\\\\ebb9' });\n\tpublic static readonly typeHierarchySub = new Codicon('type-hierarchy-sub', { fontCharacter: '\\\\ebba' });\n\tpublic static readonly typeHierarchySuper = new Codicon('type-hierarchy-super', { fontCharacter: '\\\\ebbb' });\n\tpublic static readonly gitPullRequestCreate = new Codicon('git-pull-request-create', { fontCharacter: '\\\\ebbc' });\n\tpublic static readonly runAbove = new Codicon('run-above', { fontCharacter: '\\\\ebbd' });\n\tpublic static readonly runBelow = new Codicon('run-below', { fontCharacter: '\\\\ebbe' });\n\tpublic static readonly notebookTemplate = new Codicon('notebook-template', { fontCharacter: '\\\\ebbf' });\n\tpublic static readonly debugRerun = new Codicon('debug-rerun', { fontCharacter: '\\\\ebc0' });\n\tpublic static readonly workspaceTrusted = new Codicon('workspace-trusted', { fontCharacter: '\\\\ebc1' });\n\tpublic static readonly workspaceUntrusted = new Codicon('workspace-untrusted', { fontCharacter: '\\\\ebc2' });\n\tpublic static readonly workspaceUnspecified = new Codicon('workspace-unspecified', { fontCharacter: '\\\\ebc3' });\n\tpublic static readonly terminalCmd = new Codicon('terminal-cmd', { fontCharacter: '\\\\ebc4' });\n\tpublic static readonly terminalDebian = new Codicon('terminal-debian', { fontCharacter: '\\\\ebc5' });\n\tpublic static readonly terminalLinux = new Codicon('terminal-linux', { fontCharacter: '\\\\ebc6' });\n\tpublic static readonly terminalPowershell = new Codicon('terminal-powershell', { fontCharacter: '\\\\ebc7' });\n\tpublic static readonly terminalTmux = new Codicon('terminal-tmux', { fontCharacter: '\\\\ebc8' });\n\tpublic static readonly terminalUbuntu = new Codicon('terminal-ubuntu', { fontCharacter: '\\\\ebc9' });\n\tpublic static readonly terminalBash = new Codicon('terminal-bash', { fontCharacter: '\\\\ebca' });\n\tpublic static readonly arrowSwap = new Codicon('arrow-swap', { fontCharacter: '\\\\ebcb' });\n\tpublic static readonly copy = new Codicon('copy', { fontCharacter: '\\\\ebcc' });\n\tpublic static readonly personAdd = new Codicon('person-add', { fontCharacter: '\\\\ebcd' });\n\tpublic static readonly filterFilled = new Codicon('filter-filled', { fontCharacter: '\\\\ebce' });\n\tpublic static readonly wand = new Codicon('wand', { fontCharacter: '\\\\ebcf' });\n\tpublic static readonly debugLineByLine = new Codicon('debug-line-by-line', { fontCharacter: '\\\\ebd0' });\n\tpublic static readonly inspect = new Codicon('inspect', { fontCharacter: '\\\\ebd1' });\n\tpublic static readonly layers = new Codicon('layers', { fontCharacter: '\\\\ebd2' });\n\tpublic static readonly layersDot = new Codicon('layers-dot', { fontCharacter: '\\\\ebd3' });\n\tpublic static readonly layersActive = new Codicon('layers-active', { fontCharacter: '\\\\ebd4' });\n\tpublic static readonly compass = new Codicon('compass', { fontCharacter: '\\\\ebd5' });\n\tpublic static readonly compassDot = new Codicon('compass-dot', { fontCharacter: '\\\\ebd6' });\n\tpublic static readonly compassActive = new Codicon('compass-active', { fontCharacter: '\\\\ebd7' });\n\tpublic static readonly azure = new Codicon('azure', { fontCharacter: '\\\\ebd8' });\n\tpublic static readonly issueDraft = new Codicon('issue-draft', { fontCharacter: '\\\\ebd9' });\n\tpublic static readonly gitPullRequestClosed = new Codicon('git-pull-request-closed', { fontCharacter: '\\\\ebda' });\n\tpublic static readonly gitPullRequestDraft = new Codicon('git-pull-request-draft', { fontCharacter: '\\\\ebdb' });\n\tpublic static readonly debugAll = new Codicon('debug-all', { fontCharacter: '\\\\ebdc' });\n\tpublic static readonly debugCoverage = new Codicon('debug-coverage', { fontCharacter: '\\\\ebdd' });\n\tpublic static readonly runErrors = new Codicon('run-errors', { fontCharacter: '\\\\ebde' });\n\tpublic static readonly folderLibrary = new Codicon('folder-library', { fontCharacter: '\\\\ebdf' });\n\tpublic static readonly debugContinueSmall = new Codicon('debug-continue-small', { fontCharacter: '\\\\ebe0' });\n\tpublic static readonly beakerStop = new Codicon('beaker-stop', { fontCharacter: '\\\\ebe1' });\n\tpublic static readonly graphLine = new Codicon('graph-line', { fontCharacter: '\\\\ebe2' });\n\tpublic static readonly graphScatter = new Codicon('graph-scatter', { fontCharacter: '\\\\ebe3' });\n\tpublic static readonly pieChart = new Codicon('pie-chart', { fontCharacter: '\\\\ebe4' });\n\tpublic static readonly bracket = new Codicon('bracket', Codicon.json.definition);\n\tpublic static readonly bracketDot = new Codicon('bracket-dot', { fontCharacter: '\\\\ebe5' });\n\tpublic static readonly bracketError = new Codicon('bracket-error', { fontCharacter: '\\\\ebe6' });\n\tpublic static readonly lockSmall = new Codicon('lock-small', { fontCharacter: '\\\\ebe7' });\n\tpublic static readonly azureDevops = new Codicon('azure-devops', { fontCharacter: '\\\\ebe8' });\n\tpublic static readonly verifiedFilled = new Codicon('verified-filled', { fontCharacter: '\\\\ebe9' });\n\tpublic static readonly newLine = new Codicon('newline', { fontCharacter: '\\\\ebea' });\n\tpublic static readonly layout = new Codicon('layout', { fontCharacter: '\\\\ebeb' });\n\n\t// derived icons, that could become separate icons\n\n\tpublic static readonly dialogError = new Codicon('dialog-error', Codicon.error.definition);\n\tpublic static readonly dialogWarning = new Codicon('dialog-warning', Codicon.warning.definition);\n\tpublic static readonly dialogInfo = new Codicon('dialog-info', Codicon.info.definition);\n\tpublic static readonly dialogClose = new Codicon('dialog-close', Codicon.close.definition);\n\n\tpublic static readonly treeItemExpanded = new Codicon('tree-item-expanded', Codicon.chevronDown.definition); // collapsed is done with rotation\n\n\tpublic static readonly treeFilterOnTypeOn = new Codicon('tree-filter-on-type-on', Codicon.listFilter.definition);\n\tpublic static readonly treeFilterOnTypeOff = new Codicon('tree-filter-on-type-off', Codicon.listSelection.definition);\n\tpublic static readonly treeFilterClear = new Codicon('tree-filter-clear', Codicon.close.definition);\n\n\tpublic static readonly treeItemLoading = new Codicon('tree-item-loading', Codicon.loading.definition);\n\n\tpublic static readonly menuSelection = new Codicon('menu-selection', Codicon.check.definition);\n\tpublic static readonly menuSubmenu = new Codicon('menu-submenu', Codicon.chevronRight.definition);\n\n\tpublic static readonly menuBarMore = new Codicon('menubar-more', Codicon.more.definition);\n\n\tpublic static readonly scrollbarButtonLeft = new Codicon('scrollbar-button-left', Codicon.triangleLeft.definition);\n\tpublic static readonly scrollbarButtonRight = new Codicon('scrollbar-button-right', Codicon.triangleRight.definition);\n\n\tpublic static readonly scrollbarButtonUp = new Codicon('scrollbar-button-up', Codicon.triangleUp.definition);\n\tpublic static readonly scrollbarButtonDown = new Codicon('scrollbar-button-down', Codicon.triangleDown.definition);\n\n\tpublic static readonly toolBarMore = new Codicon('toolbar-more', Codicon.more.definition);\n\n\tpublic static readonly quickInputBack = new Codicon('quick-input-back', Codicon.arrowLeft.definition);\n}\n\nexport function getClassNamesArray(id: string, modifier?: string) {\n\tconst classNames = ['codicon', 'codicon-' + id];\n\tif (modifier) {\n\t\tclassNames.push('codicon-modifier-' + modifier);\n\t}\n\treturn classNames;\n}\n\nexport interface CSSIcon {\n\treadonly id: string;\n}\n\n\nexport namespace CSSIcon {\n\texport const iconNameSegment = '[A-Za-z0-9]+';\n\texport const iconNameExpression = '[A-Za-z0-9-]+';\n\texport const iconModifierExpression = '~[A-Za-z]+';\n\texport const iconNameCharacter = '[A-Za-z0-9~-]';\n\n\tconst cssIconIdRegex = new RegExp(`^(${iconNameExpression})(${iconModifierExpression})?$`);\n\n\texport function asClassNameArray(icon: CSSIcon): string[] {\n\t\tif (icon instanceof Codicon) {\n\t\t\treturn ['codicon', 'codicon-' + icon.id];\n\t\t}\n\t\tconst match = cssIconIdRegex.exec(icon.id);\n\t\tif (!match) {\n\t\t\treturn asClassNameArray(Codicon.error);\n\t\t}\n\t\tlet [, id, modifier] = match;\n\t\tconst classNames = ['codicon', 'codicon-' + id];\n\t\tif (modifier) {\n\t\t\tclassNames.push('codicon-modifier-' + modifier.substr(1));\n\t\t}\n\t\treturn classNames;\n\t}\n\n\texport function asClassName(icon: CSSIcon): string {\n\t\treturn asClassNameArray(icon).join(' ');\n\t}\n\n\texport function asCSSSelector(icon: CSSIcon): string {\n\t\treturn '.' + asClassNameArray(icon).join('.');\n\t}\n}\n\n\ninterface IconDefinition {\n\tfontCharacter: string;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { DisposableStore, toDisposable } from 'vs/base/common/lifecycle';\n\n/**\n * The payload that flows in readable stream events.\n */\nexport type ReadableStreamEventPayload<T> = T | Error | 'end';\n\nexport interface ReadableStreamEvents<T> {\n\n\t/**\n\t * The 'data' event is emitted whenever the stream is\n\t * relinquishing ownership of a chunk of data to a consumer.\n\t *\n\t * NOTE: PLEASE UNDERSTAND THAT ADDING A DATA LISTENER CAN\n\t * TURN THE STREAM INTO FLOWING MODE. IT IS THEREFOR THE\n\t * LAST LISTENER THAT SHOULD BE ADDED AND NOT THE FIRST\n\t *\n\t * Use `listenStream` as a helper method to listen to\n\t * stream events in the right order.\n\t */\n\ton(event: 'data', callback: (data: T) => void): void;\n\n\t/**\n\t * Emitted when any error occurs.\n\t */\n\ton(event: 'error', callback: (err: Error) => void): void;\n\n\t/**\n\t * The 'end' event is emitted when there is no more data\n\t * to be consumed from the stream. The 'end' event will\n\t * not be emitted unless the data is completely consumed.\n\t */\n\ton(event: 'end', callback: () => void): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * stream for use in native and web environments.\n */\nexport interface ReadableStream<T> extends ReadableStreamEvents<T> {\n\n\t/**\n\t * Stops emitting any events until resume() is called.\n\t */\n\tpause(): void;\n\n\t/**\n\t * Starts emitting events again after pause() was called.\n\t */\n\tresume(): void;\n\n\t/**\n\t * Destroys the stream and stops emitting any event.\n\t */\n\tdestroy(): void;\n\n\t/**\n\t * Allows to remove a listener that was previously added.\n\t */\n\tremoveListener(event: string, callback: Function): void;\n}\n\n/**\n * A interface that emulates the API shape of a node.js readable\n * for use in native and web environments.\n */\nexport interface Readable<T> {\n\n\t/**\n\t * Read data from the underlying source. Will return\n\t * null to indicate that no more data can be read.\n\t */\n\tread(): T | null;\n}\n\n/**\n * A interface that emulates the API shape of a node.js writeable\n * stream for use in native and web environments.\n */\nexport interface WriteableStream<T> extends ReadableStream<T> {\n\n\t/**\n\t * Writing data to the stream will trigger the on('data')\n\t * event listener if the stream is flowing and buffer the\n\t * data otherwise until the stream is flowing.\n\t *\n\t * If a `highWaterMark` is configured and writing to the\n\t * stream reaches this mark, a promise will be returned\n\t * that should be awaited on before writing more data.\n\t * Otherwise there is a risk of buffering a large number\n\t * of data chunks without consumer.\n\t */\n\twrite(data: T): void | Promise<void>;\n\n\t/**\n\t * Signals an error to the consumer of the stream via the\n\t * on('error') handler if the stream is flowing.\n\t *\n\t * NOTE: call `end` to signal that the stream has ended,\n\t * this DOES NOT happen automatically from `error`.\n\t */\n\terror(error: Error): void;\n\n\t/**\n\t * Signals the end of the stream to the consumer. If the\n\t * result is provided, will trigger the on('data') event\n\t * listener if the stream is flowing and buffer the data\n\t * otherwise until the stream is flowing.\n\t */\n\tend(result?: T): void;\n}\n\n/**\n * A stream that has a buffer already read. Returns the original stream\n * that was read as well as the chunks that got read.\n *\n * The `ended` flag indicates if the stream has been fully consumed.\n */\nexport interface ReadableBufferedStream<T> {\n\n\t/**\n\t * The original stream that is being read.\n\t */\n\tstream: ReadableStream<T>;\n\n\t/**\n\t * An array of chunks already read from this stream.\n\t */\n\tbuffer: T[];\n\n\t/**\n\t * Signals if the stream has ended or not. If not, consumers\n\t * should continue to read from the stream until consumed.\n\t */\n\tended: boolean;\n}\n\nexport function isReadableStream<T>(obj: unknown): obj is ReadableStream<T> {\n\tconst candidate = obj as ReadableStream<T> | undefined;\n\tif (!candidate) {\n\t\treturn false;\n\t}\n\n\treturn [candidate.on, candidate.pause, candidate.resume, candidate.destroy].every(fn => typeof fn === 'function');\n}\n\nexport function isReadableBufferedStream<T>(obj: unknown): obj is ReadableBufferedStream<T> {\n\tconst candidate = obj as ReadableBufferedStream<T> | undefined;\n\tif (!candidate) {\n\t\treturn false;\n\t}\n\n\treturn isReadableStream(candidate.stream) && Array.isArray(candidate.buffer) && typeof candidate.ended === 'boolean';\n}\n\nexport interface IReducer<T> {\n\t(data: T[]): T;\n}\n\nexport interface IDataTransformer<Original, Transformed> {\n\t(data: Original): Transformed;\n}\n\nexport interface IErrorTransformer {\n\t(error: Error): Error;\n}\n\nexport interface ITransformer<Original, Transformed> {\n\tdata: IDataTransformer<Original, Transformed>;\n\terror?: IErrorTransformer;\n}\n\nexport function newWriteableStream<T>(reducer: IReducer<T>, options?: WriteableStreamOptions): WriteableStream<T> {\n\treturn new WriteableStreamImpl<T>(reducer, options);\n}\n\nexport interface WriteableStreamOptions {\n\n\t/**\n\t * The number of objects to buffer before WriteableStream#write()\n\t * signals back that the buffer is full. Can be used to reduce\n\t * the memory pressure when the stream is not flowing.\n\t */\n\thighWaterMark?: number;\n}\n\nclass WriteableStreamImpl<T> implements WriteableStream<T> {\n\n\tprivate readonly state = {\n\t\tflowing: false,\n\t\tended: false,\n\t\tdestroyed: false\n\t};\n\n\tprivate readonly buffer = {\n\t\tdata: [] as T[],\n\t\terror: [] as Error[]\n\t};\n\n\tprivate readonly listeners = {\n\t\tdata: [] as { (data: T): void }[],\n\t\terror: [] as { (error: Error): void }[],\n\t\tend: [] as { (): void }[]\n\t};\n\n\tprivate readonly pendingWritePromises: Function[] = [];\n\n\tconstructor(private reducer: IReducer<T>, private options?: WriteableStreamOptions) { }\n\n\tpause(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.state.flowing = false;\n\t}\n\n\tresume(): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.state.flowing) {\n\t\t\tthis.state.flowing = true;\n\n\t\t\t// emit buffered events\n\t\t\tthis.flowData();\n\t\t\tthis.flowErrors();\n\t\t\tthis.flowEnd();\n\t\t}\n\t}\n\n\twrite(data: T): void | Promise<void> {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the data to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.emitData(data);\n\t\t}\n\n\t\t// not yet flowing: buffer data until flowing\n\t\telse {\n\t\t\tthis.buffer.data.push(data);\n\n\t\t\t// highWaterMark: if configured, signal back when buffer reached limits\n\t\t\tif (typeof this.options?.highWaterMark === 'number' && this.buffer.data.length > this.options.highWaterMark) {\n\t\t\t\treturn new Promise(resolve => this.pendingWritePromises.push(resolve));\n\t\t\t}\n\t\t}\n\t}\n\n\terror(error: Error): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// flowing: directly send the error to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.emitError(error);\n\t\t}\n\n\t\t// not yet flowing: buffer errors until flowing\n\t\telse {\n\t\t\tthis.buffer.error.push(error);\n\t\t}\n\t}\n\n\tend(result?: T): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// end with data if provided\n\t\tif (typeof result !== 'undefined') {\n\t\t\tthis.write(result);\n\t\t}\n\n\t\t// flowing: send end event to listeners\n\t\tif (this.state.flowing) {\n\t\t\tthis.emitEnd();\n\n\t\t\tthis.destroy();\n\t\t}\n\n\t\t// not yet flowing: remember state\n\t\telse {\n\t\t\tthis.state.ended = true;\n\t\t}\n\t}\n\n\tprivate emitData(data: T): void {\n\t\tthis.listeners.data.slice(0).forEach(listener => listener(data)); // slice to avoid listener mutation from delivering event\n\t}\n\n\tprivate emitError(error: Error): void {\n\t\tif (this.listeners.error.length === 0) {\n\t\t\tonUnexpectedError(error); // nobody listened to this error so we log it as unexpected\n\t\t} else {\n\t\t\tthis.listeners.error.slice(0).forEach(listener => listener(error)); // slice to avoid listener mutation from delivering event\n\t\t}\n\t}\n\n\tprivate emitEnd(): void {\n\t\tthis.listeners.end.slice(0).forEach(listener => listener()); // slice to avoid listener mutation from delivering event\n\t}\n\n\ton(event: 'data', callback: (data: T) => void): void;\n\ton(event: 'error', callback: (err: Error) => void): void;\n\ton(event: 'end', callback: () => void): void;\n\ton(event: 'data' | 'error' | 'end', callback: (arg0?: any) => void): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tthis.listeners.data.push(callback);\n\n\t\t\t\t// switch into flowing mode as soon as the first 'data'\n\t\t\t\t// listener is added and we are not yet in flowing mode\n\t\t\t\tthis.resume();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tthis.listeners.end.push(callback);\n\n\t\t\t\t// emit 'end' event directly if we are flowing\n\t\t\t\t// and the end has already been reached\n\t\t\t\t//\n\t\t\t\t// finish() when it went through\n\t\t\t\tif (this.state.flowing && this.flowEnd()) {\n\t\t\t\t\tthis.destroy();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tthis.listeners.error.push(callback);\n\n\t\t\t\t// emit buffered 'error' events unless done already\n\t\t\t\t// now that we know that we have at least one listener\n\t\t\t\tif (this.state.flowing) {\n\t\t\t\t\tthis.flowErrors();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tremoveListener(event: string, callback: Function): void {\n\t\tif (this.state.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet listeners: unknown[] | undefined = undefined;\n\n\t\tswitch (event) {\n\t\t\tcase 'data':\n\t\t\t\tlisteners = this.listeners.data;\n\t\t\t\tbreak;\n\n\t\t\tcase 'end':\n\t\t\t\tlisteners = this.listeners.end;\n\t\t\t\tbreak;\n\n\t\t\tcase 'error':\n\t\t\t\tlisteners = this.listeners.error;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tif (listeners) {\n\t\t\tconst index = listeners.indexOf(callback);\n\t\t\tif (index >= 0) {\n\t\t\t\tlisteners.splice(index, 1);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate flowData(): void {\n\t\tif (this.buffer.data.length > 0) {\n\t\t\tconst fullDataBuffer = this.reducer(this.buffer.data);\n\n\t\t\tthis.emitData(fullDataBuffer);\n\n\t\t\tthis.buffer.data.length = 0;\n\n\t\t\t// When the buffer is empty, resolve all pending writers\n\t\t\tconst pendingWritePromises = [...this.pendingWritePromises];\n\t\t\tthis.pendingWritePromises.length = 0;\n\t\t\tpendingWritePromises.forEach(pendingWritePromise => pendingWritePromise());\n\t\t}\n\t}\n\n\tprivate flowErrors(): void {\n\t\tif (this.listeners.error.length > 0) {\n\t\t\tfor (const error of this.buffer.error) {\n\t\t\t\tthis.emitError(error);\n\t\t\t}\n\n\t\t\tthis.buffer.error.length = 0;\n\t\t}\n\t}\n\n\tprivate flowEnd(): boolean {\n\t\tif (this.state.ended) {\n\t\t\tthis.emitEnd();\n\n\t\t\treturn this.listeners.end.length > 0;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tdestroy(): void {\n\t\tif (!this.state.destroyed) {\n\t\t\tthis.state.destroyed = true;\n\t\t\tthis.state.ended = true;\n\n\t\t\tthis.buffer.data.length = 0;\n\t\t\tthis.buffer.error.length = 0;\n\n\t\t\tthis.listeners.data.length = 0;\n\t\t\tthis.listeners.error.length = 0;\n\t\t\tthis.listeners.end.length = 0;\n\n\t\t\tthis.pendingWritePromises.length = 0;\n\t\t}\n\t}\n}\n\n/**\n * Helper to fully read a T readable into a T.\n */\nexport function consumeReadable<T>(readable: Readable<T>, reducer: IReducer<T>): T {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null;\n\twhile ((chunk = readable.read()) !== null) {\n\t\tchunks.push(chunk);\n\t}\n\n\treturn reducer(chunks);\n}\n\n/**\n * Helper to read a T readable up to a maximum of chunks. If the limit is\n * reached, will return a readable instead to ensure all data can still\n * be read.\n */\nexport function peekReadable<T>(readable: Readable<T>, reducer: IReducer<T>, maxChunks: number): T | Readable<T> {\n\tconst chunks: T[] = [];\n\n\tlet chunk: T | null | undefined = undefined;\n\twhile ((chunk = readable.read()) !== null && chunks.length < maxChunks) {\n\t\tchunks.push(chunk);\n\t}\n\n\t// If the last chunk is null, it means we reached the end of\n\t// the readable and return all the data at once\n\tif (chunk === null && chunks.length > 0) {\n\t\treturn reducer(chunks);\n\t}\n\n\t// Otherwise, we still have a chunk, it means we reached the maxChunks\n\t// value and as such we return a new Readable that first returns\n\t// the existing read chunks and then continues with reading from\n\t// the underlying readable.\n\treturn {\n\t\tread: () => {\n\n\t\t\t// First consume chunks from our array\n\t\t\tif (chunks.length > 0) {\n\t\t\t\treturn chunks.shift()!;\n\t\t\t}\n\n\t\t\t// Then ensure to return our last read chunk\n\t\t\tif (typeof chunk !== 'undefined') {\n\t\t\t\tconst lastReadChunk = chunk;\n\n\t\t\t\t// explicitly use undefined here to indicate that we consumed\n\t\t\t\t// the chunk, which could have either been null or valued.\n\t\t\t\tchunk = undefined;\n\n\t\t\t\treturn lastReadChunk;\n\t\t\t}\n\n\t\t\t// Finally delegate back to the Readable\n\t\t\treturn readable.read();\n\t\t}\n\t};\n}\n\n/**\n * Helper to fully read a T stream into a T or consuming\n * a stream fully, awaiting all the events without caring\n * about the data.\n */\nexport function consumeStream<T>(stream: ReadableStreamEvents<T>, reducer: IReducer<T>): Promise<T>;\nexport function consumeStream(stream: ReadableStreamEvents<unknown>): Promise<undefined>;\nexport function consumeStream<T>(stream: ReadableStreamEvents<T>, reducer?: IReducer<T>): Promise<T | undefined> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst chunks: T[] = [];\n\n\t\tlistenStream(stream, {\n\t\t\tonData: chunk => {\n\t\t\t\tif (reducer) {\n\t\t\t\t\tchunks.push(chunk);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonError: error => {\n\t\t\t\tif (reducer) {\n\t\t\t\t\treject(error);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(undefined);\n\t\t\t\t}\n\t\t\t},\n\t\t\tonEnd: () => {\n\t\t\t\tif (reducer) {\n\t\t\t\t\tresolve(reducer(chunks));\n\t\t\t\t} else {\n\t\t\t\t\tresolve(undefined);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\nexport interface IStreamListener<T> {\n\n\t/**\n\t * The 'data' event is emitted whenever the stream is\n\t * relinquishing ownership of a chunk of data to a consumer.\n\t */\n\tonData(data: T): void;\n\n\t/**\n\t * Emitted when any error occurs.\n\t */\n\tonError(err: Error): void;\n\n\t/**\n\t * The 'end' event is emitted when there is no more data\n\t * to be consumed from the stream. The 'end' event will\n\t * not be emitted unless the data is completely consumed.\n\t */\n\tonEnd(): void;\n}\n\n/**\n * Helper to listen to all events of a T stream in proper order.\n */\nexport function listenStream<T>(stream: ReadableStreamEvents<T>, listener: IStreamListener<T>): void {\n\tstream.on('error', error => listener.onError(error));\n\tstream.on('end', () => listener.onEnd());\n\n\t// Adding the `data` listener will turn the stream\n\t// into flowing mode. As such it is important to\n\t// add this listener last (DO NOT CHANGE!)\n\tstream.on('data', data => listener.onData(data));\n}\n\n/**\n * Helper to peek up to `maxChunks` into a stream. The return type signals if\n * the stream has ended or not. If not, caller needs to add a `data` listener\n * to continue reading.\n */\nexport function peekStream<T>(stream: ReadableStream<T>, maxChunks: number): Promise<ReadableBufferedStream<T>> {\n\treturn new Promise((resolve, reject) => {\n\t\tconst streamListeners = new DisposableStore();\n\t\tconst buffer: T[] = [];\n\n\t\t// Data Listener\n\t\tconst dataListener = (chunk: T) => {\n\n\t\t\t// Add to buffer\n\t\t\tbuffer.push(chunk);\n\n\t\t\t// We reached maxChunks and thus need to return\n\t\t\tif (buffer.length > maxChunks) {\n\n\t\t\t\t// Dispose any listeners and ensure to pause the\n\t\t\t\t// stream so that it can be consumed again by caller\n\t\t\t\tstreamListeners.dispose();\n\t\t\t\tstream.pause();\n\n\t\t\t\treturn resolve({ stream, buffer, ended: false });\n\t\t\t}\n\t\t};\n\n\t\t// Error Listener\n\t\tconst errorListener = (error: Error) => {\n\t\t\treturn reject(error);\n\t\t};\n\n\t\t// End Listener\n\t\tconst endListener = () => {\n\t\t\treturn resolve({ stream, buffer, ended: true });\n\t\t};\n\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('error', errorListener)));\n\t\tstream.on('error', errorListener);\n\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('end', endListener)));\n\t\tstream.on('end', endListener);\n\n\t\t// Important: leave the `data` listener last because\n\t\t// this can turn the stream into flowing mode and we\n\t\t// want `error` events to be received as well.\n\t\tstreamListeners.add(toDisposable(() => stream.removeListener('data', dataListener)));\n\t\tstream.on('data', dataListener);\n\t});\n}\n\n/**\n * Helper to create a readable stream from an existing T.\n */\nexport function toStream<T>(t: T, reducer: IReducer<T>): ReadableStream<T> {\n\tconst stream = newWriteableStream<T>(reducer);\n\n\tstream.end(t);\n\n\treturn stream;\n}\n\n/**\n * Helper to create an empty stream\n */\nexport function emptyStream(): ReadableStream<never> {\n\tconst stream = newWriteableStream<never>(() => { throw new Error('not supported'); });\n\tstream.end();\n\n\treturn stream;\n}\n\n/**\n * Helper to convert a T into a Readable<T>.\n */\nexport function toReadable<T>(t: T): Readable<T> {\n\tlet consumed = false;\n\n\treturn {\n\t\tread: () => {\n\t\t\tif (consumed) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconsumed = true;\n\n\t\t\treturn t;\n\t\t}\n\t};\n}\n\n/**\n * Helper to transform a readable stream into another stream.\n */\nexport function transform<Original, Transformed>(stream: ReadableStreamEvents<Original>, transformer: ITransformer<Original, Transformed>, reducer: IReducer<Transformed>): ReadableStream<Transformed> {\n\tconst target = newWriteableStream<Transformed>(reducer);\n\n\tlistenStream(stream, {\n\t\tonData: data => target.write(transformer.data(data)),\n\t\tonError: error => target.error(transformer.error ? transformer.error(error) : error),\n\t\tonEnd: () => target.end()\n\t});\n\n\treturn target;\n}\n\n/**\n * Helper to take an existing readable that will\n * have a prefix injected to the beginning.\n */\nexport function prefixedReadable<T>(prefix: T, readable: Readable<T>, reducer: IReducer<T>): Readable<T> {\n\tlet prefixHandled = false;\n\n\treturn {\n\t\tread: () => {\n\t\t\tconst chunk = readable.read();\n\n\t\t\t// Handle prefix only once\n\t\t\tif (!prefixHandled) {\n\t\t\t\tprefixHandled = true;\n\n\t\t\t\t// If we have also a read-result, make\n\t\t\t\t// sure to reduce it to a single result\n\t\t\t\tif (chunk !== null) {\n\t\t\t\t\treturn reducer([prefix, chunk]);\n\t\t\t\t}\n\n\t\t\t\t// Otherwise, just return prefix directly\n\t\t\t\treturn prefix;\n\t\t\t}\n\n\t\t\treturn chunk;\n\t\t}\n\t};\n}\n\n/**\n * Helper to take an existing stream that will\n * have a prefix injected to the beginning.\n */\nexport function prefixedStream<T>(prefix: T, stream: ReadableStream<T>, reducer: IReducer<T>): ReadableStream<T> {\n\tlet prefixHandled = false;\n\n\tconst target = newWriteableStream<T>(reducer);\n\n\tlistenStream(stream, {\n\t\tonData: data => {\n\n\t\t\t// Handle prefix only once\n\t\t\tif (!prefixHandled) {\n\t\t\t\tprefixHandled = true;\n\n\t\t\t\treturn target.write(reducer([prefix, data]));\n\t\t\t}\n\n\t\t\treturn target.write(data);\n\t\t},\n\t\tonError: error => target.error(error),\n\t\tonEnd: () => {\n\n\t\t\t// Handle prefix only once\n\t\t\tif (!prefixHandled) {\n\t\t\t\tprefixHandled = true;\n\n\t\t\t\ttarget.write(prefix);\n\t\t\t}\n\n\t\t\ttarget.end();\n\t\t}\n\t});\n\n\treturn target;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as streams from 'vs/base/common/stream';\n\ndeclare const Buffer: any;\n\nconst hasBuffer = (typeof Buffer !== 'undefined');\n\nlet textEncoder: TextEncoder | null;\nlet textDecoder: TextDecoder | null;\n\nexport class VSBuffer {\n\n\tstatic alloc(byteLength: number): VSBuffer {\n\t\tif (hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.allocUnsafe(byteLength));\n\t\t} else {\n\t\t\treturn new VSBuffer(new Uint8Array(byteLength));\n\t\t}\n\t}\n\n\tstatic wrap(actual: Uint8Array): VSBuffer {\n\t\tif (hasBuffer && !(Buffer.isBuffer(actual))) {\n\t\t\t// https://nodejs.org/dist/latest-v10.x/docs/api/buffer.html#buffer_class_method_buffer_from_arraybuffer_byteoffset_length\n\t\t\t// Create a zero-copy Buffer wrapper around the ArrayBuffer pointed to by the Uint8Array\n\t\t\tactual = Buffer.from(actual.buffer, actual.byteOffset, actual.byteLength);\n\t\t}\n\t\treturn new VSBuffer(actual);\n\t}\n\n\tstatic fromString(source: string, options?: { dontUseNodeBuffer?: boolean; }): VSBuffer {\n\t\tconst dontUseNodeBuffer = options?.dontUseNodeBuffer || false;\n\t\tif (!dontUseNodeBuffer && hasBuffer) {\n\t\t\treturn new VSBuffer(Buffer.from(source));\n\t\t} else {\n\t\t\tif (!textEncoder) {\n\t\t\t\ttextEncoder = new TextEncoder();\n\t\t\t}\n\t\t\treturn new VSBuffer(textEncoder.encode(source));\n\t\t}\n\t}\n\n\tstatic fromByteArray(source: number[]): VSBuffer {\n\t\tconst result = VSBuffer.alloc(source.length);\n\t\tfor (let i = 0, len = source.length; i < len; i++) {\n\t\t\tresult.buffer[i] = source[i];\n\t\t}\n\t\treturn result;\n\t}\n\n\tstatic concat(buffers: VSBuffer[], totalLength?: number): VSBuffer {\n\t\tif (typeof totalLength === 'undefined') {\n\t\t\ttotalLength = 0;\n\t\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\t\ttotalLength += buffers[i].byteLength;\n\t\t\t}\n\t\t}\n\n\t\tconst ret = VSBuffer.alloc(totalLength);\n\t\tlet offset = 0;\n\t\tfor (let i = 0, len = buffers.length; i < len; i++) {\n\t\t\tconst element = buffers[i];\n\t\t\tret.set(element, offset);\n\t\t\toffset += element.byteLength;\n\t\t}\n\n\t\treturn ret;\n\t}\n\n\treadonly buffer: Uint8Array;\n\treadonly byteLength: number;\n\n\tprivate constructor(buffer: Uint8Array) {\n\t\tthis.buffer = buffer;\n\t\tthis.byteLength = this.buffer.byteLength;\n\t}\n\n\tclone(): VSBuffer {\n\t\tconst result = VSBuffer.alloc(this.byteLength);\n\t\tresult.set(this);\n\t\treturn result;\n\t}\n\n\ttoString(): string {\n\t\tif (hasBuffer) {\n\t\t\treturn this.buffer.toString();\n\t\t} else {\n\t\t\tif (!textDecoder) {\n\t\t\t\ttextDecoder = new TextDecoder();\n\t\t\t}\n\t\t\treturn textDecoder.decode(this.buffer);\n\t\t}\n\t}\n\n\tslice(start?: number, end?: number): VSBuffer {\n\t\t// IMPORTANT: use subarray instead of slice because TypedArray#slice\n\t\t// creates shallow copy and NodeBuffer#slice doesn't. The use of subarray\n\t\t// ensures the same, performance, behaviour.\n\t\treturn new VSBuffer(this.buffer.subarray(start, end));\n\t}\n\n\tset(array: VSBuffer, offset?: number): void;\n\tset(array: Uint8Array, offset?: number): void;\n\tset(array: ArrayBuffer, offset?: number): void;\n\tset(array: ArrayBufferView, offset?: number): void;\n\tset(array: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView, offset?: number): void;\n\tset(array: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView, offset?: number): void {\n\t\tif (array instanceof VSBuffer) {\n\t\t\tthis.buffer.set(array.buffer, offset);\n\t\t} else if (array instanceof Uint8Array) {\n\t\t\tthis.buffer.set(array, offset);\n\t\t} else if (array instanceof ArrayBuffer) {\n\t\t\tthis.buffer.set(new Uint8Array(array), offset);\n\t\t} else if (ArrayBuffer.isView(array)) {\n\t\t\tthis.buffer.set(new Uint8Array(array.buffer, array.byteOffset, array.byteLength), offset);\n\t\t} else {\n\t\t\tthrow new Error(`Unkown argument 'array'`);\n\t\t}\n\t}\n\n\treadUInt32BE(offset: number): number {\n\t\treturn readUInt32BE(this.buffer, offset);\n\t}\n\n\twriteUInt32BE(value: number, offset: number): void {\n\t\twriteUInt32BE(this.buffer, value, offset);\n\t}\n\n\treadUInt32LE(offset: number): number {\n\t\treturn readUInt32LE(this.buffer, offset);\n\t}\n\n\twriteUInt32LE(value: number, offset: number): void {\n\t\twriteUInt32LE(this.buffer, value, offset);\n\t}\n\n\treadUInt8(offset: number): number {\n\t\treturn readUInt8(this.buffer, offset);\n\t}\n\n\twriteUInt8(value: number, offset: number): void {\n\t\twriteUInt8(this.buffer, value, offset);\n\t}\n}\n\nexport function readUInt16LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0)\n\t);\n}\n\nexport function writeUInt16LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n}\n\nexport function readUInt32BE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\tsource[offset] * 2 ** 24\n\t\t+ source[offset + 1] * 2 ** 16\n\t\t+ source[offset + 2] * 2 ** 8\n\t\t+ source[offset + 3]\n\t);\n}\n\nexport function writeUInt32BE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 3] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = value;\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = value;\n\tvalue = value >>> 8;\n\tdestination[offset] = value;\n}\n\nexport function readUInt32LE(source: Uint8Array, offset: number): number {\n\treturn (\n\t\t((source[offset + 0] << 0) >>> 0) |\n\t\t((source[offset + 1] << 8) >>> 0) |\n\t\t((source[offset + 2] << 16) >>> 0) |\n\t\t((source[offset + 3] << 24) >>> 0)\n\t);\n}\n\nexport function writeUInt32LE(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset + 0] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 1] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 2] = (value & 0b11111111);\n\tvalue = value >>> 8;\n\tdestination[offset + 3] = (value & 0b11111111);\n}\n\nexport function readUInt8(source: Uint8Array, offset: number): number {\n\treturn source[offset];\n}\n\nexport function writeUInt8(destination: Uint8Array, value: number, offset: number): void {\n\tdestination[offset] = value;\n}\n\nexport interface VSBufferReadable extends streams.Readable<VSBuffer> { }\n\nexport interface VSBufferReadableStream extends streams.ReadableStream<VSBuffer> { }\n\nexport interface VSBufferWriteableStream extends streams.WriteableStream<VSBuffer> { }\n\nexport interface VSBufferReadableBufferedStream extends streams.ReadableBufferedStream<VSBuffer> { }\n\nexport function readableToBuffer(readable: VSBufferReadable): VSBuffer {\n\treturn streams.consumeReadable<VSBuffer>(readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function bufferToReadable(buffer: VSBuffer): VSBufferReadable {\n\treturn streams.toReadable<VSBuffer>(buffer);\n}\n\nexport function streamToBuffer(stream: streams.ReadableStream<VSBuffer>): Promise<VSBuffer> {\n\treturn streams.consumeStream<VSBuffer>(stream, chunks => VSBuffer.concat(chunks));\n}\n\nexport async function bufferedStreamToBuffer(bufferedStream: streams.ReadableBufferedStream<VSBuffer>): Promise<VSBuffer> {\n\tif (bufferedStream.ended) {\n\t\treturn VSBuffer.concat(bufferedStream.buffer);\n\t}\n\n\treturn VSBuffer.concat([\n\n\t\t// Include already read chunks...\n\t\t...bufferedStream.buffer,\n\n\t\t// ...and all additional chunks\n\t\tawait streamToBuffer(bufferedStream.stream)\n\t]);\n}\n\nexport function bufferToStream(buffer: VSBuffer): streams.ReadableStream<VSBuffer> {\n\treturn streams.toStream<VSBuffer>(buffer, chunks => VSBuffer.concat(chunks));\n}\n\nexport function streamToBufferReadableStream(stream: streams.ReadableStreamEvents<Uint8Array | string>): streams.ReadableStream<VSBuffer> {\n\treturn streams.transform<Uint8Array | string, VSBuffer>(stream, { data: data => typeof data === 'string' ? VSBuffer.fromString(data) : VSBuffer.wrap(data) }, chunks => VSBuffer.concat(chunks));\n}\n\nexport function newWriteableBufferStream(options?: streams.WriteableStreamOptions): streams.WriteableStream<VSBuffer> {\n\treturn streams.newWriteableStream<VSBuffer>(chunks => VSBuffer.concat(chunks), options);\n}\n\nexport function prefixedBufferReadable(prefix: VSBuffer, readable: VSBufferReadable): VSBufferReadable {\n\treturn streams.prefixedReadable(prefix, readable, chunks => VSBuffer.concat(chunks));\n}\n\nexport function prefixedBufferStream(prefix: VSBuffer, stream: VSBufferReadableStream): VSBufferReadableStream {\n\treturn streams.prefixedStream(prefix, stream, chunks => VSBuffer.concat(chunks));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport * as platform from 'vs/base/common/platform';\nimport { Constants } from 'vs/base/common/uint';\n\nexport function isFalsyOrWhitespace(str: string | undefined): boolean {\n\tif (!str || typeof str !== 'string') {\n\t\treturn true;\n\t}\n\treturn str.trim().length === 0;\n}\n\nconst _formatRegexp = /{(\\d+)}/g;\n\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value: string, ...args: any[]): string {\n\tif (args.length === 0) {\n\t\treturn value;\n\t}\n\treturn value.replace(_formatRegexp, function (match, group) {\n\t\tconst idx = parseInt(group, 10);\n\t\treturn isNaN(idx) || idx < 0 || idx >= args.length ?\n\t\t\tmatch :\n\t\t\targs[idx];\n\t});\n}\n\nconst _format2Regexp = /{([^}]+)}/g;\n\n/**\n * Helper to create a string from a template and a string record.\n * Similar to `format` but with objects instead of positional arguments.\n */\nexport function format2(template: string, values: Record<string, unknown>): string {\n\treturn template.replace(_format2Regexp, (match, group) => (values[group] ?? match) as string);\n}\n\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html: string): string {\n\treturn html.replace(/[<>&]/g, function (match) {\n\t\tswitch (match) {\n\t\t\tcase '<': return '&lt;';\n\t\t\tcase '>': return '&gt;';\n\t\t\tcase '&': return '&amp;';\n\t\t\tdefault: return match;\n\t\t}\n\t});\n}\n\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value: string): string {\n\treturn value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n\n/**\n * Counts how often `character` occurs inside `value`.\n */\nexport function count(value: string, character: string): number {\n\tlet result = 0;\n\tconst ch = character.charCodeAt(0);\n\tfor (let i = value.length - 1; i >= 0; i--) {\n\t\tif (value.charCodeAt(i) === ch) {\n\t\t\tresult++;\n\t\t}\n\t}\n\treturn result;\n}\n\nexport function truncate(value: string, maxLength: number, suffix = '…'): string {\n\tif (value.length <= maxLength) {\n\t\treturn value;\n\t}\n\n\treturn `${value.substr(0, maxLength)}${suffix}`;\n}\n\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack: string, needle: string = ' '): string {\n\tconst trimmed = ltrim(haystack, needle);\n\treturn rtrim(trimmed, needle);\n}\n\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length;\n\tif (needleLen === 0 || haystack.length === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = 0;\n\n\twhile (haystack.indexOf(needle, offset) === offset) {\n\t\toffset = offset + needleLen;\n\t}\n\treturn haystack.substring(offset);\n}\n\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack: string, needle: string): string {\n\tif (!haystack || !needle) {\n\t\treturn haystack;\n\t}\n\n\tconst needleLen = needle.length,\n\t\thaystackLen = haystack.length;\n\n\tif (needleLen === 0 || haystackLen === 0) {\n\t\treturn haystack;\n\t}\n\n\tlet offset = haystackLen,\n\t\tidx = -1;\n\n\twhile (true) {\n\t\tidx = haystack.lastIndexOf(needle, offset - 1);\n\t\tif (idx === -1 || idx + needleLen !== offset) {\n\t\t\tbreak;\n\t\t}\n\t\tif (idx === 0) {\n\t\t\treturn '';\n\t\t}\n\t\toffset = idx;\n\t}\n\n\treturn haystack.substring(0, offset);\n}\n\nexport function convertSimple2RegExpPattern(pattern: string): string {\n\treturn pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\n\nexport function stripWildcards(pattern: string): string {\n\treturn pattern.replace(/\\*/g, '');\n}\n\nexport interface RegExpOptions {\n\tmatchCase?: boolean;\n\twholeWord?: boolean;\n\tmultiline?: boolean;\n\tglobal?: boolean;\n\tunicode?: boolean;\n}\n\nexport function createRegExp(searchString: string, isRegex: boolean, options: RegExpOptions = {}): RegExp {\n\tif (!searchString) {\n\t\tthrow new Error('Cannot create regex from empty string');\n\t}\n\tif (!isRegex) {\n\t\tsearchString = escapeRegExpCharacters(searchString);\n\t}\n\tif (options.wholeWord) {\n\t\tif (!/\\B/.test(searchString.charAt(0))) {\n\t\t\tsearchString = '\\\\b' + searchString;\n\t\t}\n\t\tif (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n\t\t\tsearchString = searchString + '\\\\b';\n\t\t}\n\t}\n\tlet modifiers = '';\n\tif (options.global) {\n\t\tmodifiers += 'g';\n\t}\n\tif (!options.matchCase) {\n\t\tmodifiers += 'i';\n\t}\n\tif (options.multiline) {\n\t\tmodifiers += 'm';\n\t}\n\tif (options.unicode) {\n\t\tmodifiers += 'u';\n\t}\n\n\treturn new RegExp(searchString, modifiers);\n}\n\nexport function regExpLeadsToEndlessLoop(regexp: RegExp): boolean {\n\t// Exit early if it's one of these special cases which are meant to match\n\t// against an empty string\n\tif (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n\t\treturn false;\n\t}\n\n\t// We check against an empty string. If the regular expression doesn't advance\n\t// (e.g. ends in an endless loop) it will match an empty string.\n\tconst match = regexp.exec('');\n\treturn !!(match && regexp.lastIndex === 0);\n}\n\nexport function regExpContainsBackreference(regexpValue: string): boolean {\n\treturn !!regexpValue.match(/([^\\\\]|^)(\\\\\\\\)*\\\\\\d+/);\n}\n\nexport function regExpFlags(regexp: RegExp): string {\n\treturn (regexp.global ? 'g' : '')\n\t\t+ (regexp.ignoreCase ? 'i' : '')\n\t\t+ (regexp.multiline ? 'm' : '')\n\t\t+ ((regexp as any /* standalone editor compilation */).unicode ? 'u' : '');\n}\n\nexport function splitLines(str: string): string[] {\n\treturn str.split(/\\r\\n|\\r|\\n/);\n}\n\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str: string): number {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str: string, start: number = 0, end: number = str.length): string {\n\tfor (let i = start; i < end; i++) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn str.substring(start, i);\n\t\t}\n\t}\n\treturn str.substring(start, end);\n}\n\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str: string, startIndex: number = str.length - 1): number {\n\tfor (let i = startIndex; i >= 0; i--) {\n\t\tconst chCode = str.charCodeAt(i);\n\t\tif (chCode !== CharCode.Space && chCode !== CharCode.Tab) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\nexport function compare(a: string, b: string): number {\n\tif (a < b) {\n\t\treturn -1;\n\t} else if (a > b) {\n\t\treturn 1;\n\t} else {\n\t\treturn 0;\n\t}\n}\n\nexport function compareSubstring(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\t\tlet codeA = a.charCodeAt(aStart);\n\t\tlet codeB = b.charCodeAt(bStart);\n\t\tif (codeA < codeB) {\n\t\t\treturn -1;\n\t\t} else if (codeA > codeB) {\n\t\t\treturn 1;\n\t\t}\n\t}\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\treturn 0;\n}\n\nexport function compareIgnoreCase(a: string, b: string): number {\n\treturn compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\n\nexport function compareSubstringIgnoreCase(a: string, b: string, aStart: number = 0, aEnd: number = a.length, bStart: number = 0, bEnd: number = b.length): number {\n\n\tfor (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n\n\t\tlet codeA = a.charCodeAt(aStart);\n\t\tlet codeB = b.charCodeAt(bStart);\n\n\t\tif (codeA === codeB) {\n\t\t\t// equal\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (codeA >= 128 || codeB >= 128) {\n\t\t\t// not ASCII letters -> fallback to lower-casing strings\n\t\t\treturn compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n\t\t}\n\n\t\t// mapper lower-case ascii letter onto upper-case varinats\n\t\t// [97-122] (lower ascii) --> [65-90] (upper ascii)\n\t\tif (isLowerAsciiLetter(codeA)) {\n\t\t\tcodeA -= 32;\n\t\t}\n\t\tif (isLowerAsciiLetter(codeB)) {\n\t\t\tcodeB -= 32;\n\t\t}\n\n\t\t// compare both code points\n\t\tconst diff = codeA - codeB;\n\t\tif (diff === 0) {\n\t\t\tcontinue;\n\t\t}\n\n\t\treturn diff;\n\t}\n\n\tconst aLen = aEnd - aStart;\n\tconst bLen = bEnd - bStart;\n\n\tif (aLen < bLen) {\n\t\treturn -1;\n\t} else if (aLen > bLen) {\n\t\treturn 1;\n\t}\n\n\treturn 0;\n}\n\nexport function isLowerAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.a && code <= CharCode.z;\n}\n\nexport function isUpperAsciiLetter(code: number): boolean {\n\treturn code >= CharCode.A && code <= CharCode.Z;\n}\n\nexport function equalsIgnoreCase(a: string, b: string): boolean {\n\treturn a.length === b.length && compareSubstringIgnoreCase(a, b) === 0;\n}\n\nexport function startsWithIgnoreCase(str: string, candidate: string): boolean {\n\tconst candidateLength = candidate.length;\n\tif (candidate.length > str.length) {\n\t\treturn false;\n\t}\n\n\treturn compareSubstringIgnoreCase(str, candidate, 0, candidateLength) === 0;\n}\n\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(i) !== b.charCodeAt(i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a: string, b: string): number {\n\n\tlet i: number,\n\t\tlen = Math.min(a.length, b.length);\n\n\tconst aLastIndex = a.length - 1;\n\tconst bLastIndex = b.length - 1;\n\n\tfor (i = 0; i < len; i++) {\n\t\tif (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn len;\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isHighSurrogate(charCode: number): boolean {\n\treturn (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isLowSurrogate(charCode: number): boolean {\n\treturn (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function computeCodePoint(highSurrogate: number, lowSurrogate: number): number {\n\treturn ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\n\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str: string, len: number, offset: number): number {\n\tconst charCode = str.charCodeAt(offset);\n\tif (isHighSurrogate(charCode) && offset + 1 < len) {\n\t\tconst nextCharCode = str.charCodeAt(offset + 1);\n\t\tif (isLowSurrogate(nextCharCode)) {\n\t\t\treturn computeCodePoint(charCode, nextCharCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str: string, offset: number): number {\n\tconst charCode = str.charCodeAt(offset - 1);\n\tif (isLowSurrogate(charCode) && offset > 1) {\n\t\tconst prevCharCode = str.charCodeAt(offset - 2);\n\t\tif (isHighSurrogate(prevCharCode)) {\n\t\t\treturn computeCodePoint(prevCharCode, charCode);\n\t\t}\n\t}\n\treturn charCode;\n}\n\nexport function nextCharLength(str: string, offset: number): number {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst initialOffset = offset;\n\tconst len = str.length;\n\n\tconst initialCodePoint = getNextCodePoint(str, len, offset);\n\toffset += (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\twhile (offset < len) {\n\t\tconst nextCodePoint = getNextCodePoint(str, len, offset);\n\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset += (nextCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t}\n\n\treturn (offset - initialOffset);\n}\n\nexport function prevCharLength(str: string, offset: number): number {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst initialOffset = offset;\n\n\tconst initialCodePoint = getPrevCodePoint(str, offset);\n\toffset -= (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\tlet graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\twhile (offset > 0) {\n\t\tconst prevCodePoint = getPrevCodePoint(str, offset);\n\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset -= (prevCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t}\n\n\treturn (initialOffset - offset);\n}\n\nfunction _getCharContainingOffset(str: string, offset: number): [number, number] {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\tconst len = str.length;\n\tconst initialOffset = offset;\n\tconst initialCodePoint = getNextCodePoint(str, len, offset);\n\tconst initialGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\n\toffset += (initialCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\n\t// extend to the right\n\tlet graphemeBreakType = initialGraphemeBreakType;\n\twhile (offset < len) {\n\t\tconst nextCodePoint = getNextCodePoint(str, len, offset);\n\t\tconst nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset += (nextCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = nextGraphemeBreakType;\n\t}\n\tconst endOffset = offset;\n\n\t// extend to the left\n\toffset = initialOffset;\n\tgraphemeBreakType = initialGraphemeBreakType;\n\twhile (offset > 0) {\n\t\tconst prevCodePoint = getPrevCodePoint(str, offset);\n\t\tconst prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\n\t\tif (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n\t\t\tbreak;\n\t\t}\n\t\toffset -= (prevCodePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1);\n\t\tgraphemeBreakType = prevGraphemeBreakType;\n\t}\n\n\treturn [offset, endOffset];\n}\n\nexport function getCharContainingOffset(str: string, offset: number): [number, number] {\n\tif (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n\t\treturn _getCharContainingOffset(str, offset - 1);\n\t}\n\treturn _getCharContainingOffset(str, offset);\n}\n\n/**\n * Generated using https://github.com/alexdima/unicode-utils/blob/main/rtl-test.js\n */\nconst CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u088E\\u08A0-\\u08C9\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE35\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDD23\\uDE80-\\uDEA9\\uDEAD-\\uDF45\\uDF51-\\uDF81\\uDF86-\\uDFF6]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD4B-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str: string): boolean {\n\treturn CONTAINS_RTL.test(str);\n}\n\n/**\n * Generated using https://github.com/alexdima/unicode-utils/blob/main/emoji-test.js\n */\nconst CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEFC\\uDFE0-\\uDFF0]|\\uD83E[\\uDD00-\\uDDFF\\uDE70-\\uDEF6])/;\n\nexport function containsEmoji(str: string): boolean {\n\treturn CONTAINS_EMOJI.test(str);\n}\n\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str: string): boolean {\n\treturn IS_BASIC_ASCII.test(str);\n}\n\nexport const UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/; // LINE SEPARATOR (LS) or PARAGRAPH SEPARATOR (PS)\n/**\n * Returns true if `str` contains unusual line terminators, like LS or PS\n */\nexport function containsUnusualLineTerminators(str: string): boolean {\n\treturn UNUSUAL_LINE_TERMINATORS.test(str);\n}\n\nexport function containsFullWidthCharacter(str: string): boolean {\n\tfor (let i = 0, len = str.length; i < len; i++) {\n\t\tif (isFullWidthCharacter(str.charCodeAt(i))) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport function isFullWidthCharacter(charCode: number): boolean {\n\t// Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n\t// http://jrgraphix.net/research/unicode_blocks.php\n\t//          2E80 - 2EFF   CJK Radicals Supplement\n\t//          2F00 - 2FDF   Kangxi Radicals\n\t//          2FF0 - 2FFF   Ideographic Description Characters\n\t//          3000 - 303F   CJK Symbols and Punctuation\n\t//          3040 - 309F   Hiragana\n\t//          30A0 - 30FF   Katakana\n\t//          3100 - 312F   Bopomofo\n\t//          3130 - 318F   Hangul Compatibility Jamo\n\t//          3190 - 319F   Kanbun\n\t//          31A0 - 31BF   Bopomofo Extended\n\t//          31F0 - 31FF   Katakana Phonetic Extensions\n\t//          3200 - 32FF   Enclosed CJK Letters and Months\n\t//          3300 - 33FF   CJK Compatibility\n\t//          3400 - 4DBF   CJK Unified Ideographs Extension A\n\t//          4DC0 - 4DFF   Yijing Hexagram Symbols\n\t//          4E00 - 9FFF   CJK Unified Ideographs\n\t//          A000 - A48F   Yi Syllables\n\t//          A490 - A4CF   Yi Radicals\n\t//          AC00 - D7AF   Hangul Syllables\n\t// [IGNORE] D800 - DB7F   High Surrogates\n\t// [IGNORE] DB80 - DBFF   High Private Use Surrogates\n\t// [IGNORE] DC00 - DFFF   Low Surrogates\n\t// [IGNORE] E000 - F8FF   Private Use Area\n\t//          F900 - FAFF   CJK Compatibility Ideographs\n\t// [IGNORE] FB00 - FB4F   Alphabetic Presentation Forms\n\t// [IGNORE] FB50 - FDFF   Arabic Presentation Forms-A\n\t// [IGNORE] FE00 - FE0F   Variation Selectors\n\t// [IGNORE] FE20 - FE2F   Combining Half Marks\n\t// [IGNORE] FE30 - FE4F   CJK Compatibility Forms\n\t// [IGNORE] FE50 - FE6F   Small Form Variants\n\t// [IGNORE] FE70 - FEFF   Arabic Presentation Forms-B\n\t//          FF00 - FFEF   Halfwidth and Fullwidth Forms\n\t//               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n\t//               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n\t// [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n\t// [IGNORE] FFF0 - FFFF   Specials\n\treturn (\n\t\t(charCode >= 0x2E80 && charCode <= 0xD7AF)\n\t\t|| (charCode >= 0xF900 && charCode <= 0xFAFF)\n\t\t|| (charCode >= 0xFF01 && charCode <= 0xFF5E)\n\t);\n}\n\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexdima/unicode-utils/blob/main/emoji-test.js\n */\nexport function isEmojiImprecise(x: number): boolean {\n\treturn (\n\t\t(x >= 0x1F1E6 && x <= 0x1F1FF) || (x === 8986) || (x === 8987) || (x === 9200)\n\t\t|| (x === 9203) || (x >= 9728 && x <= 10175) || (x === 11088) || (x === 11093)\n\t\t|| (x >= 127744 && x <= 128591) || (x >= 128640 && x <= 128764)\n\t\t|| (x >= 128992 && x <= 129008) || (x >= 129280 && x <= 129535)\n\t\t|| (x >= 129648 && x <= 129782)\n\t);\n}\n\n/**\n * Given a string and a max length returns a shorted version. Shorting\n * happens at favorable positions - such as whitespace or punctuation characters.\n */\nexport function lcut(text: string, n: number) {\n\tif (text.length < n) {\n\t\treturn text;\n\t}\n\n\tconst re = /\\b/g;\n\tlet i = 0;\n\twhile (re.test(text)) {\n\t\tif (text.length - re.lastIndex < n) {\n\t\t\tbreak;\n\t\t}\n\n\t\ti = re.lastIndex;\n\t\tre.lastIndex += 1;\n\t}\n\n\treturn text.substring(i).replace(/^\\s/, '');\n}\n\n// Escape codes\n// http://en.wikipedia.org/wiki/ANSI_escape_code\nconst EL = /\\x1B\\x5B[12]?K/g; // Erase in line\nconst COLOR_START = /\\x1b\\[\\d+m/g; // Color\nconst COLOR_END = /\\x1b\\[0?m/g; // Color\n\nexport function removeAnsiEscapeCodes(str: string): string {\n\tif (str) {\n\t\tstr = str.replace(EL, '');\n\t\tstr = str.replace(COLOR_START, '');\n\t\tstr = str.replace(COLOR_END, '');\n\t}\n\n\treturn str;\n}\n\n// -- UTF-8 BOM\n\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(CharCode.UTF8_BOM);\n\nexport function startsWithUTF8BOM(str: string): boolean {\n\treturn !!(str && str.length > 0 && str.charCodeAt(0) === CharCode.UTF8_BOM);\n}\n\nexport function stripUTF8BOM(str: string): string {\n\treturn startsWithUTF8BOM(str) ? str.substr(1) : str;\n}\n\n/**\n * Checks if the characters of the provided query string are included in the\n * target string. The characters do not have to be contiguous within the string.\n */\nexport function fuzzyContains(target: string, query: string): boolean {\n\tif (!target || !query) {\n\t\treturn false; // return early if target or query are undefined\n\t}\n\n\tif (target.length < query.length) {\n\t\treturn false; // impossible for query to be contained in target\n\t}\n\n\tconst queryLen = query.length;\n\tconst targetLower = target.toLowerCase();\n\n\tlet index = 0;\n\tlet lastIndexOf = -1;\n\twhile (index < queryLen) {\n\t\tconst indexOf = targetLower.indexOf(query[index], lastIndexOf + 1);\n\t\tif (indexOf < 0) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlastIndexOf = indexOf;\n\n\t\tindex++;\n\t}\n\n\treturn true;\n}\n\nexport function containsUppercaseCharacter(target: string, ignoreEscapedChars = false): boolean {\n\tif (!target) {\n\t\treturn false;\n\t}\n\n\tif (ignoreEscapedChars) {\n\t\ttarget = target.replace(/\\\\./g, '');\n\t}\n\n\treturn target.toLowerCase() !== target;\n}\n\nexport function uppercaseFirstLetter(str: string): string {\n\treturn str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function getNLines(str: string, n = 1): string {\n\tif (n === 0) {\n\t\treturn '';\n\t}\n\n\tlet idx = -1;\n\tdo {\n\t\tidx = str.indexOf('\\n', idx + 1);\n\t\tn--;\n\t} while (n > 0 && idx >= 0);\n\n\tif (idx === -1) {\n\t\treturn str;\n\t}\n\n\tif (str[idx - 1] === '\\r') {\n\t\tidx--;\n\t}\n\n\treturn str.substr(0, idx);\n}\n\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n: number): string {\n\tconst LETTERS_CNT = (CharCode.Z - CharCode.A + 1);\n\n\tn = n % (2 * LETTERS_CNT);\n\n\tif (n < LETTERS_CNT) {\n\t\treturn String.fromCharCode(CharCode.a + n);\n\t}\n\n\treturn String.fromCharCode(CharCode.A + n - LETTERS_CNT);\n}\n\n//#region Unicode Grapheme Break\n\nexport function getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\tconst graphemeBreakTree = GraphemeBreakTree.getInstance();\n\treturn graphemeBreakTree.getGraphemeBreakType(codePoint);\n}\n\nexport function breakBetweenGraphemeBreakType(breakTypeA: GraphemeBreakType, breakTypeB: GraphemeBreakType): boolean {\n\t// http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n\n\t// !!! Let's make the common case a bit faster\n\tif (breakTypeA === GraphemeBreakType.Other) {\n\t\t// see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n\t\treturn (breakTypeB !== GraphemeBreakType.Extend && breakTypeB !== GraphemeBreakType.SpacingMark);\n\t}\n\n\t// Do not break between a CR and LF. Otherwise, break before and after controls.\n\t// GB3                                        CR × LF\n\t// GB4                       (Control | CR | LF) ÷\n\t// GB5                                           ÷ (Control | CR | LF)\n\tif (breakTypeA === GraphemeBreakType.CR) {\n\t\tif (breakTypeB === GraphemeBreakType.LF) {\n\t\t\treturn false; // GB3\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.Control || breakTypeA === GraphemeBreakType.CR || breakTypeA === GraphemeBreakType.LF) {\n\t\treturn true; // GB4\n\t}\n\tif (breakTypeB === GraphemeBreakType.Control || breakTypeB === GraphemeBreakType.CR || breakTypeB === GraphemeBreakType.LF) {\n\t\treturn true; // GB5\n\t}\n\n\t// Do not break Hangul syllable sequences.\n\t// GB6                                         L × (L | V | LV | LVT)\n\t// GB7                                  (LV | V) × (V | T)\n\t// GB8                                 (LVT | T) × T\n\tif (breakTypeA === GraphemeBreakType.L) {\n\t\tif (breakTypeB === GraphemeBreakType.L || breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.LV || breakTypeB === GraphemeBreakType.LVT) {\n\t\t\treturn false; // GB6\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LV || breakTypeA === GraphemeBreakType.V) {\n\t\tif (breakTypeB === GraphemeBreakType.V || breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB7\n\t\t}\n\t}\n\tif (breakTypeA === GraphemeBreakType.LVT || breakTypeA === GraphemeBreakType.T) {\n\t\tif (breakTypeB === GraphemeBreakType.T) {\n\t\t\treturn false; // GB8\n\t\t}\n\t}\n\n\t// Do not break before extending characters or ZWJ.\n\t// GB9                                           × (Extend | ZWJ)\n\tif (breakTypeB === GraphemeBreakType.Extend || breakTypeB === GraphemeBreakType.ZWJ) {\n\t\treturn false; // GB9\n\t}\n\n\t// The GB9a and GB9b rules only apply to extended grapheme clusters:\n\t// Do not break before SpacingMarks, or after Prepend characters.\n\t// GB9a                                          × SpacingMark\n\t// GB9b                                  Prepend ×\n\tif (breakTypeB === GraphemeBreakType.SpacingMark) {\n\t\treturn false; // GB9a\n\t}\n\tif (breakTypeA === GraphemeBreakType.Prepend) {\n\t\treturn false; // GB9b\n\t}\n\n\t// Do not break within emoji modifier sequences or emoji zwj sequences.\n\t// GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n\tif (breakTypeA === GraphemeBreakType.ZWJ && breakTypeB === GraphemeBreakType.Extended_Pictographic) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB11\n\t}\n\n\t// GB12                          sot (RI RI)* RI × RI\n\t// GB13                        [^RI] (RI RI)* RI × RI\n\tif (breakTypeA === GraphemeBreakType.Regional_Indicator && breakTypeB === GraphemeBreakType.Regional_Indicator) {\n\t\t// Note: we are not implementing the rule entirely here to avoid introducing states\n\t\treturn false; // GB12 & GB13\n\t}\n\n\t// GB999                                     Any ÷ Any\n\treturn true;\n}\n\nexport const enum GraphemeBreakType {\n\tOther = 0,\n\tPrepend = 1,\n\tCR = 2,\n\tLF = 3,\n\tControl = 4,\n\tExtend = 5,\n\tRegional_Indicator = 6,\n\tSpacingMark = 7,\n\tL = 8,\n\tV = 9,\n\tT = 10,\n\tLV = 11,\n\tLVT = 12,\n\tZWJ = 13,\n\tExtended_Pictographic = 14\n}\n\nclass GraphemeBreakTree {\n\n\tprivate static _INSTANCE: GraphemeBreakTree | null = null;\n\tpublic static getInstance(): GraphemeBreakTree {\n\t\tif (!GraphemeBreakTree._INSTANCE) {\n\t\t\tGraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n\t\t}\n\t\treturn GraphemeBreakTree._INSTANCE;\n\t}\n\n\tprivate readonly _data: number[];\n\n\tconstructor() {\n\t\tthis._data = getGraphemeBreakRawData();\n\t}\n\n\tpublic getGraphemeBreakType(codePoint: number): GraphemeBreakType {\n\t\t// !!! Let's make 7bit ASCII a bit faster: 0..31\n\t\tif (codePoint < 32) {\n\t\t\tif (codePoint === CharCode.LineFeed) {\n\t\t\t\treturn GraphemeBreakType.LF;\n\t\t\t}\n\t\t\tif (codePoint === CharCode.CarriageReturn) {\n\t\t\t\treturn GraphemeBreakType.CR;\n\t\t\t}\n\t\t\treturn GraphemeBreakType.Control;\n\t\t}\n\t\t// !!! Let's make 7bit ASCII a bit faster: 32..126\n\t\tif (codePoint < 127) {\n\t\t\treturn GraphemeBreakType.Other;\n\t\t}\n\n\t\tconst data = this._data;\n\t\tconst nodeCount = data.length / 3;\n\t\tlet nodeIndex = 1;\n\t\twhile (nodeIndex <= nodeCount) {\n\t\t\tif (codePoint < data[3 * nodeIndex]) {\n\t\t\t\t// go left\n\t\t\t\tnodeIndex = 2 * nodeIndex;\n\t\t\t} else if (codePoint > data[3 * nodeIndex + 1]) {\n\t\t\t\t// go right\n\t\t\t\tnodeIndex = 2 * nodeIndex + 1;\n\t\t\t} else {\n\t\t\t\t// hit\n\t\t\t\treturn data[3 * nodeIndex + 2];\n\t\t\t}\n\t\t}\n\n\t\treturn GraphemeBreakType.Other;\n\t}\n}\n\nfunction getGraphemeBreakRawData(): number[] {\n\t// generated using https://github.com/alexdima/unicode-utils/blob/main/grapheme-break.js\n\treturn JSON.parse('[0,0,0,51229,51255,12,44061,44087,12,127462,127487,6,7083,7085,5,47645,47671,12,54813,54839,12,128678,128678,14,3270,3270,5,9919,9923,14,45853,45879,12,49437,49463,12,53021,53047,12,71216,71218,7,128398,128399,14,129360,129374,14,2519,2519,5,4448,4519,9,9742,9742,14,12336,12336,14,44957,44983,12,46749,46775,12,48541,48567,12,50333,50359,12,52125,52151,12,53917,53943,12,69888,69890,5,73018,73018,5,127990,127990,14,128558,128559,14,128759,128760,14,129653,129655,14,2027,2035,5,2891,2892,7,3761,3761,5,6683,6683,5,8293,8293,4,9825,9826,14,9999,9999,14,43452,43453,5,44509,44535,12,45405,45431,12,46301,46327,12,47197,47223,12,48093,48119,12,48989,49015,12,49885,49911,12,50781,50807,12,51677,51703,12,52573,52599,12,53469,53495,12,54365,54391,12,65279,65279,4,70471,70472,7,72145,72147,7,119173,119179,5,127799,127818,14,128240,128244,14,128512,128512,14,128652,128652,14,128721,128722,14,129292,129292,14,129445,129450,14,129734,129743,14,1476,1477,5,2366,2368,7,2750,2752,7,3076,3076,5,3415,3415,5,4141,4144,5,6109,6109,5,6964,6964,5,7394,7400,5,9197,9198,14,9770,9770,14,9877,9877,14,9968,9969,14,10084,10084,14,43052,43052,5,43713,43713,5,44285,44311,12,44733,44759,12,45181,45207,12,45629,45655,12,46077,46103,12,46525,46551,12,46973,46999,12,47421,47447,12,47869,47895,12,48317,48343,12,48765,48791,12,49213,49239,12,49661,49687,12,50109,50135,12,50557,50583,12,51005,51031,12,51453,51479,12,51901,51927,12,52349,52375,12,52797,52823,12,53245,53271,12,53693,53719,12,54141,54167,12,54589,54615,12,55037,55063,12,69506,69509,5,70191,70193,5,70841,70841,7,71463,71467,5,72330,72342,5,94031,94031,5,123628,123631,5,127763,127765,14,127941,127941,14,128043,128062,14,128302,128317,14,128465,128467,14,128539,128539,14,128640,128640,14,128662,128662,14,128703,128703,14,128745,128745,14,129004,129007,14,129329,129330,14,129402,129402,14,129483,129483,14,129686,129704,14,130048,131069,14,173,173,4,1757,1757,1,2200,2207,5,2434,2435,7,2631,2632,5,2817,2817,5,3008,3008,5,3201,3201,5,3387,3388,5,3542,3542,5,3902,3903,7,4190,4192,5,6002,6003,5,6439,6440,5,6765,6770,7,7019,7027,5,7154,7155,7,8205,8205,13,8505,8505,14,9654,9654,14,9757,9757,14,9792,9792,14,9852,9853,14,9890,9894,14,9937,9937,14,9981,9981,14,10035,10036,14,11035,11036,14,42654,42655,5,43346,43347,7,43587,43587,5,44006,44007,7,44173,44199,12,44397,44423,12,44621,44647,12,44845,44871,12,45069,45095,12,45293,45319,12,45517,45543,12,45741,45767,12,45965,45991,12,46189,46215,12,46413,46439,12,46637,46663,12,46861,46887,12,47085,47111,12,47309,47335,12,47533,47559,12,47757,47783,12,47981,48007,12,48205,48231,12,48429,48455,12,48653,48679,12,48877,48903,12,49101,49127,12,49325,49351,12,49549,49575,12,49773,49799,12,49997,50023,12,50221,50247,12,50445,50471,12,50669,50695,12,50893,50919,12,51117,51143,12,51341,51367,12,51565,51591,12,51789,51815,12,52013,52039,12,52237,52263,12,52461,52487,12,52685,52711,12,52909,52935,12,53133,53159,12,53357,53383,12,53581,53607,12,53805,53831,12,54029,54055,12,54253,54279,12,54477,54503,12,54701,54727,12,54925,54951,12,55149,55175,12,68101,68102,5,69762,69762,7,70067,70069,7,70371,70378,5,70720,70721,7,71087,71087,5,71341,71341,5,71995,71996,5,72249,72249,7,72850,72871,5,73109,73109,5,118576,118598,5,121505,121519,5,127245,127247,14,127568,127569,14,127777,127777,14,127872,127891,14,127956,127967,14,128015,128016,14,128110,128172,14,128259,128259,14,128367,128368,14,128424,128424,14,128488,128488,14,128530,128532,14,128550,128551,14,128566,128566,14,128647,128647,14,128656,128656,14,128667,128673,14,128691,128693,14,128715,128715,14,128728,128732,14,128752,128752,14,128765,128767,14,129096,129103,14,129311,129311,14,129344,129349,14,129394,129394,14,129413,129425,14,129466,129471,14,129511,129535,14,129664,129666,14,129719,129722,14,129760,129767,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2307,2307,7,2382,2383,7,2497,2500,5,2563,2563,7,2677,2677,5,2763,2764,7,2879,2879,5,2914,2915,5,3021,3021,5,3142,3144,5,3263,3263,5,3285,3286,5,3398,3400,7,3530,3530,5,3633,3633,5,3864,3865,5,3974,3975,5,4155,4156,7,4229,4230,5,5909,5909,7,6078,6085,7,6277,6278,5,6451,6456,7,6744,6750,5,6846,6846,5,6972,6972,5,7074,7077,5,7146,7148,7,7222,7223,5,7416,7417,5,8234,8238,4,8417,8417,5,9000,9000,14,9203,9203,14,9730,9731,14,9748,9749,14,9762,9763,14,9776,9783,14,9800,9811,14,9831,9831,14,9872,9873,14,9882,9882,14,9900,9903,14,9929,9933,14,9941,9960,14,9974,9974,14,9989,9989,14,10006,10006,14,10062,10062,14,10160,10160,14,11647,11647,5,12953,12953,14,43019,43019,5,43232,43249,5,43443,43443,5,43567,43568,7,43696,43696,5,43765,43765,7,44013,44013,5,44117,44143,12,44229,44255,12,44341,44367,12,44453,44479,12,44565,44591,12,44677,44703,12,44789,44815,12,44901,44927,12,45013,45039,12,45125,45151,12,45237,45263,12,45349,45375,12,45461,45487,12,45573,45599,12,45685,45711,12,45797,45823,12,45909,45935,12,46021,46047,12,46133,46159,12,46245,46271,12,46357,46383,12,46469,46495,12,46581,46607,12,46693,46719,12,46805,46831,12,46917,46943,12,47029,47055,12,47141,47167,12,47253,47279,12,47365,47391,12,47477,47503,12,47589,47615,12,47701,47727,12,47813,47839,12,47925,47951,12,48037,48063,12,48149,48175,12,48261,48287,12,48373,48399,12,48485,48511,12,48597,48623,12,48709,48735,12,48821,48847,12,48933,48959,12,49045,49071,12,49157,49183,12,49269,49295,12,49381,49407,12,49493,49519,12,49605,49631,12,49717,49743,12,49829,49855,12,49941,49967,12,50053,50079,12,50165,50191,12,50277,50303,12,50389,50415,12,50501,50527,12,50613,50639,12,50725,50751,12,50837,50863,12,50949,50975,12,51061,51087,12,51173,51199,12,51285,51311,12,51397,51423,12,51509,51535,12,51621,51647,12,51733,51759,12,51845,51871,12,51957,51983,12,52069,52095,12,52181,52207,12,52293,52319,12,52405,52431,12,52517,52543,12,52629,52655,12,52741,52767,12,52853,52879,12,52965,52991,12,53077,53103,12,53189,53215,12,53301,53327,12,53413,53439,12,53525,53551,12,53637,53663,12,53749,53775,12,53861,53887,12,53973,53999,12,54085,54111,12,54197,54223,12,54309,54335,12,54421,54447,12,54533,54559,12,54645,54671,12,54757,54783,12,54869,54895,12,54981,55007,12,55093,55119,12,55243,55291,10,66045,66045,5,68325,68326,5,69688,69702,5,69817,69818,5,69957,69958,7,70089,70092,5,70198,70199,5,70462,70462,5,70502,70508,5,70750,70750,5,70846,70846,7,71100,71101,5,71230,71230,7,71351,71351,5,71737,71738,5,72000,72000,7,72160,72160,5,72273,72278,5,72752,72758,5,72882,72883,5,73031,73031,5,73461,73462,7,94192,94193,7,119149,119149,7,121403,121452,5,122915,122916,5,126980,126980,14,127358,127359,14,127535,127535,14,127759,127759,14,127771,127771,14,127792,127793,14,127825,127867,14,127897,127899,14,127945,127945,14,127985,127986,14,128000,128007,14,128021,128021,14,128066,128100,14,128184,128235,14,128249,128252,14,128266,128276,14,128335,128335,14,128379,128390,14,128407,128419,14,128444,128444,14,128481,128481,14,128499,128499,14,128526,128526,14,128536,128536,14,128543,128543,14,128556,128556,14,128564,128564,14,128577,128580,14,128643,128645,14,128649,128649,14,128654,128654,14,128660,128660,14,128664,128664,14,128675,128675,14,128686,128689,14,128695,128696,14,128705,128709,14,128717,128719,14,128725,128725,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129009,129023,14,129160,129167,14,129296,129304,14,129320,129327,14,129340,129342,14,129356,129356,14,129388,129392,14,129399,129400,14,129404,129407,14,129432,129442,14,129454,129455,14,129473,129474,14,129485,129487,14,129648,129651,14,129659,129660,14,129671,129679,14,129709,129711,14,129728,129730,14,129751,129753,14,129776,129782,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2274,2274,1,2363,2363,7,2377,2380,7,2402,2403,5,2494,2494,5,2507,2508,7,2558,2558,5,2622,2624,7,2641,2641,5,2691,2691,7,2759,2760,5,2786,2787,5,2876,2876,5,2881,2884,5,2901,2902,5,3006,3006,5,3014,3016,7,3072,3072,5,3134,3136,5,3157,3158,5,3260,3260,5,3266,3266,5,3274,3275,7,3328,3329,5,3391,3392,7,3405,3405,5,3457,3457,5,3536,3537,7,3551,3551,5,3636,3642,5,3764,3772,5,3895,3895,5,3967,3967,7,3993,4028,5,4146,4151,5,4182,4183,7,4226,4226,5,4253,4253,5,4957,4959,5,5940,5940,7,6070,6070,7,6087,6088,7,6158,6158,4,6432,6434,5,6448,6449,7,6679,6680,5,6742,6742,5,6754,6754,5,6783,6783,5,6912,6915,5,6966,6970,5,6978,6978,5,7042,7042,7,7080,7081,5,7143,7143,7,7150,7150,7,7212,7219,5,7380,7392,5,7412,7412,5,8203,8203,4,8232,8232,4,8265,8265,14,8400,8412,5,8421,8432,5,8617,8618,14,9167,9167,14,9200,9200,14,9410,9410,14,9723,9726,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9774,14,9786,9786,14,9794,9794,14,9823,9823,14,9828,9828,14,9833,9850,14,9855,9855,14,9875,9875,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9935,9935,14,9939,9939,14,9962,9962,14,9972,9972,14,9978,9978,14,9986,9986,14,9997,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10133,10135,14,10548,10549,14,11093,11093,14,12330,12333,5,12441,12442,5,42608,42610,5,43010,43010,5,43045,43046,5,43188,43203,7,43302,43309,5,43392,43394,5,43446,43449,5,43493,43493,5,43571,43572,7,43597,43597,7,43703,43704,5,43756,43757,5,44003,44004,7,44009,44010,7,44033,44059,12,44089,44115,12,44145,44171,12,44201,44227,12,44257,44283,12,44313,44339,12,44369,44395,12,44425,44451,12,44481,44507,12,44537,44563,12,44593,44619,12,44649,44675,12,44705,44731,12,44761,44787,12,44817,44843,12,44873,44899,12,44929,44955,12,44985,45011,12,45041,45067,12,45097,45123,12,45153,45179,12,45209,45235,12,45265,45291,12,45321,45347,12,45377,45403,12,45433,45459,12,45489,45515,12,45545,45571,12,45601,45627,12,45657,45683,12,45713,45739,12,45769,45795,12,45825,45851,12,45881,45907,12,45937,45963,12,45993,46019,12,46049,46075,12,46105,46131,12,46161,46187,12,46217,46243,12,46273,46299,12,46329,46355,12,46385,46411,12,46441,46467,12,46497,46523,12,46553,46579,12,46609,46635,12,46665,46691,12,46721,46747,12,46777,46803,12,46833,46859,12,46889,46915,12,46945,46971,12,47001,47027,12,47057,47083,12,47113,47139,12,47169,47195,12,47225,47251,12,47281,47307,12,47337,47363,12,47393,47419,12,47449,47475,12,47505,47531,12,47561,47587,12,47617,47643,12,47673,47699,12,47729,47755,12,47785,47811,12,47841,47867,12,47897,47923,12,47953,47979,12,48009,48035,12,48065,48091,12,48121,48147,12,48177,48203,12,48233,48259,12,48289,48315,12,48345,48371,12,48401,48427,12,48457,48483,12,48513,48539,12,48569,48595,12,48625,48651,12,48681,48707,12,48737,48763,12,48793,48819,12,48849,48875,12,48905,48931,12,48961,48987,12,49017,49043,12,49073,49099,12,49129,49155,12,49185,49211,12,49241,49267,12,49297,49323,12,49353,49379,12,49409,49435,12,49465,49491,12,49521,49547,12,49577,49603,12,49633,49659,12,49689,49715,12,49745,49771,12,49801,49827,12,49857,49883,12,49913,49939,12,49969,49995,12,50025,50051,12,50081,50107,12,50137,50163,12,50193,50219,12,50249,50275,12,50305,50331,12,50361,50387,12,50417,50443,12,50473,50499,12,50529,50555,12,50585,50611,12,50641,50667,12,50697,50723,12,50753,50779,12,50809,50835,12,50865,50891,12,50921,50947,12,50977,51003,12,51033,51059,12,51089,51115,12,51145,51171,12,51201,51227,12,51257,51283,12,51313,51339,12,51369,51395,12,51425,51451,12,51481,51507,12,51537,51563,12,51593,51619,12,51649,51675,12,51705,51731,12,51761,51787,12,51817,51843,12,51873,51899,12,51929,51955,12,51985,52011,12,52041,52067,12,52097,52123,12,52153,52179,12,52209,52235,12,52265,52291,12,52321,52347,12,52377,52403,12,52433,52459,12,52489,52515,12,52545,52571,12,52601,52627,12,52657,52683,12,52713,52739,12,52769,52795,12,52825,52851,12,52881,52907,12,52937,52963,12,52993,53019,12,53049,53075,12,53105,53131,12,53161,53187,12,53217,53243,12,53273,53299,12,53329,53355,12,53385,53411,12,53441,53467,12,53497,53523,12,53553,53579,12,53609,53635,12,53665,53691,12,53721,53747,12,53777,53803,12,53833,53859,12,53889,53915,12,53945,53971,12,54001,54027,12,54057,54083,12,54113,54139,12,54169,54195,12,54225,54251,12,54281,54307,12,54337,54363,12,54393,54419,12,54449,54475,12,54505,54531,12,54561,54587,12,54617,54643,12,54673,54699,12,54729,54755,12,54785,54811,12,54841,54867,12,54897,54923,12,54953,54979,12,55009,55035,12,55065,55091,12,55121,55147,12,55177,55203,12,65024,65039,5,65520,65528,4,66422,66426,5,68152,68154,5,69291,69292,5,69633,69633,5,69747,69748,5,69811,69814,5,69826,69826,5,69932,69932,7,70016,70017,5,70079,70080,7,70095,70095,5,70196,70196,5,70367,70367,5,70402,70403,7,70464,70464,5,70487,70487,5,70709,70711,7,70725,70725,7,70833,70834,7,70843,70844,7,70849,70849,7,71090,71093,5,71103,71104,5,71227,71228,7,71339,71339,5,71344,71349,5,71458,71461,5,71727,71735,5,71985,71989,7,71998,71998,5,72002,72002,7,72154,72155,5,72193,72202,5,72251,72254,5,72281,72283,5,72344,72345,5,72766,72766,7,72874,72880,5,72885,72886,5,73023,73029,5,73104,73105,5,73111,73111,5,92912,92916,5,94095,94098,5,113824,113827,4,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,125252,125258,5,127183,127183,14,127340,127343,14,127377,127386,14,127491,127503,14,127548,127551,14,127744,127756,14,127761,127761,14,127769,127769,14,127773,127774,14,127780,127788,14,127796,127797,14,127820,127823,14,127869,127869,14,127894,127895,14,127902,127903,14,127943,127943,14,127947,127950,14,127972,127972,14,127988,127988,14,127992,127994,14,128009,128011,14,128019,128019,14,128023,128041,14,128064,128064,14,128102,128107,14,128174,128181,14,128238,128238,14,128246,128247,14,128254,128254,14,128264,128264,14,128278,128299,14,128329,128330,14,128348,128359,14,128371,128377,14,128392,128393,14,128401,128404,14,128421,128421,14,128433,128434,14,128450,128452,14,128476,128478,14,128483,128483,14,128495,128495,14,128506,128506,14,128519,128520,14,128528,128528,14,128534,128534,14,128538,128538,14,128540,128542,14,128544,128549,14,128552,128555,14,128557,128557,14,128560,128563,14,128565,128565,14,128567,128576,14,128581,128591,14,128641,128642,14,128646,128646,14,128648,128648,14,128650,128651,14,128653,128653,14,128655,128655,14,128657,128659,14,128661,128661,14,128663,128663,14,128665,128666,14,128674,128674,14,128676,128677,14,128679,128685,14,128690,128690,14,128694,128694,14,128697,128702,14,128704,128704,14,128710,128714,14,128716,128716,14,128720,128720,14,128723,128724,14,128726,128727,14,128733,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129008,129008,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129661,129663,14,129667,129670,14,129680,129685,14,129705,129708,14,129712,129718,14,129723,129727,14,129731,129733,14,129744,129750,14,129754,129759,14,129768,129775,14,129783,129791,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2192,2193,1,2250,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3132,3132,5,3137,3140,7,3146,3149,5,3170,3171,5,3202,3203,7,3262,3262,7,3264,3265,7,3267,3268,7,3271,3272,7,3276,3277,5,3298,3299,5,3330,3331,7,3390,3390,5,3393,3396,5,3402,3404,7,3406,3406,1,3426,3427,5,3458,3459,7,3535,3535,5,3538,3540,5,3544,3550,7,3570,3571,7,3635,3635,7,3655,3662,5,3763,3763,7,3784,3789,5,3893,3893,5,3897,3897,5,3953,3966,5,3968,3972,5,3981,3991,5,4038,4038,5,4145,4145,7,4153,4154,5,4157,4158,5,4184,4185,5,4209,4212,5,4228,4228,7,4237,4237,5,4352,4447,8,4520,4607,10,5906,5908,5,5938,5939,5,5970,5971,5,6068,6069,5,6071,6077,5,6086,6086,5,6089,6099,5,6155,6157,5,6159,6159,5,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6862,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7679,5,8204,8204,5,8206,8207,4,8233,8233,4,8252,8252,14,8288,8292,4,8294,8303,4,8413,8416,5,8418,8420,5,8482,8482,14,8596,8601,14,8986,8987,14,9096,9096,14,9193,9196,14,9199,9199,14,9201,9202,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9729,14,9732,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9775,9775,14,9784,9785,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9874,14,9876,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9934,14,9936,9936,14,9938,9938,14,9940,9940,14,9961,9961,14,9963,9967,14,9970,9971,14,9973,9973,14,9975,9977,14,9979,9980,14,9982,9985,14,9987,9988,14,9992,9996,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10083,14,10085,10087,14,10145,10145,14,10175,10175,14,11013,11015,14,11088,11088,14,11503,11505,5,11744,11775,5,12334,12335,5,12349,12349,14,12951,12951,14,42607,42607,5,42612,42621,5,42736,42737,5,43014,43014,5,43043,43044,7,43047,43047,7,43136,43137,7,43204,43205,5,43263,43263,5,43335,43345,5,43360,43388,8,43395,43395,7,43444,43445,7,43450,43451,7,43454,43456,7,43561,43566,5,43569,43570,5,43573,43574,5,43596,43596,5,43644,43644,5,43698,43700,5,43710,43711,5,43755,43755,7,43758,43759,7,43766,43766,5,44005,44005,5,44008,44008,5,44012,44012,7,44032,44032,11,44060,44060,11,44088,44088,11,44116,44116,11,44144,44144,11,44172,44172,11,44200,44200,11,44228,44228,11,44256,44256,11,44284,44284,11,44312,44312,11,44340,44340,11,44368,44368,11,44396,44396,11,44424,44424,11,44452,44452,11,44480,44480,11,44508,44508,11,44536,44536,11,44564,44564,11,44592,44592,11,44620,44620,11,44648,44648,11,44676,44676,11,44704,44704,11,44732,44732,11,44760,44760,11,44788,44788,11,44816,44816,11,44844,44844,11,44872,44872,11,44900,44900,11,44928,44928,11,44956,44956,11,44984,44984,11,45012,45012,11,45040,45040,11,45068,45068,11,45096,45096,11,45124,45124,11,45152,45152,11,45180,45180,11,45208,45208,11,45236,45236,11,45264,45264,11,45292,45292,11,45320,45320,11,45348,45348,11,45376,45376,11,45404,45404,11,45432,45432,11,45460,45460,11,45488,45488,11,45516,45516,11,45544,45544,11,45572,45572,11,45600,45600,11,45628,45628,11,45656,45656,11,45684,45684,11,45712,45712,11,45740,45740,11,45768,45768,11,45796,45796,11,45824,45824,11,45852,45852,11,45880,45880,11,45908,45908,11,45936,45936,11,45964,45964,11,45992,45992,11,46020,46020,11,46048,46048,11,46076,46076,11,46104,46104,11,46132,46132,11,46160,46160,11,46188,46188,11,46216,46216,11,46244,46244,11,46272,46272,11,46300,46300,11,46328,46328,11,46356,46356,11,46384,46384,11,46412,46412,11,46440,46440,11,46468,46468,11,46496,46496,11,46524,46524,11,46552,46552,11,46580,46580,11,46608,46608,11,46636,46636,11,46664,46664,11,46692,46692,11,46720,46720,11,46748,46748,11,46776,46776,11,46804,46804,11,46832,46832,11,46860,46860,11,46888,46888,11,46916,46916,11,46944,46944,11,46972,46972,11,47000,47000,11,47028,47028,11,47056,47056,11,47084,47084,11,47112,47112,11,47140,47140,11,47168,47168,11,47196,47196,11,47224,47224,11,47252,47252,11,47280,47280,11,47308,47308,11,47336,47336,11,47364,47364,11,47392,47392,11,47420,47420,11,47448,47448,11,47476,47476,11,47504,47504,11,47532,47532,11,47560,47560,11,47588,47588,11,47616,47616,11,47644,47644,11,47672,47672,11,47700,47700,11,47728,47728,11,47756,47756,11,47784,47784,11,47812,47812,11,47840,47840,11,47868,47868,11,47896,47896,11,47924,47924,11,47952,47952,11,47980,47980,11,48008,48008,11,48036,48036,11,48064,48064,11,48092,48092,11,48120,48120,11,48148,48148,11,48176,48176,11,48204,48204,11,48232,48232,11,48260,48260,11,48288,48288,11,48316,48316,11,48344,48344,11,48372,48372,11,48400,48400,11,48428,48428,11,48456,48456,11,48484,48484,11,48512,48512,11,48540,48540,11,48568,48568,11,48596,48596,11,48624,48624,11,48652,48652,11,48680,48680,11,48708,48708,11,48736,48736,11,48764,48764,11,48792,48792,11,48820,48820,11,48848,48848,11,48876,48876,11,48904,48904,11,48932,48932,11,48960,48960,11,48988,48988,11,49016,49016,11,49044,49044,11,49072,49072,11,49100,49100,11,49128,49128,11,49156,49156,11,49184,49184,11,49212,49212,11,49240,49240,11,49268,49268,11,49296,49296,11,49324,49324,11,49352,49352,11,49380,49380,11,49408,49408,11,49436,49436,11,49464,49464,11,49492,49492,11,49520,49520,11,49548,49548,11,49576,49576,11,49604,49604,11,49632,49632,11,49660,49660,11,49688,49688,11,49716,49716,11,49744,49744,11,49772,49772,11,49800,49800,11,49828,49828,11,49856,49856,11,49884,49884,11,49912,49912,11,49940,49940,11,49968,49968,11,49996,49996,11,50024,50024,11,50052,50052,11,50080,50080,11,50108,50108,11,50136,50136,11,50164,50164,11,50192,50192,11,50220,50220,11,50248,50248,11,50276,50276,11,50304,50304,11,50332,50332,11,50360,50360,11,50388,50388,11,50416,50416,11,50444,50444,11,50472,50472,11,50500,50500,11,50528,50528,11,50556,50556,11,50584,50584,11,50612,50612,11,50640,50640,11,50668,50668,11,50696,50696,11,50724,50724,11,50752,50752,11,50780,50780,11,50808,50808,11,50836,50836,11,50864,50864,11,50892,50892,11,50920,50920,11,50948,50948,11,50976,50976,11,51004,51004,11,51032,51032,11,51060,51060,11,51088,51088,11,51116,51116,11,51144,51144,11,51172,51172,11,51200,51200,11,51228,51228,11,51256,51256,11,51284,51284,11,51312,51312,11,51340,51340,11,51368,51368,11,51396,51396,11,51424,51424,11,51452,51452,11,51480,51480,11,51508,51508,11,51536,51536,11,51564,51564,11,51592,51592,11,51620,51620,11,51648,51648,11,51676,51676,11,51704,51704,11,51732,51732,11,51760,51760,11,51788,51788,11,51816,51816,11,51844,51844,11,51872,51872,11,51900,51900,11,51928,51928,11,51956,51956,11,51984,51984,11,52012,52012,11,52040,52040,11,52068,52068,11,52096,52096,11,52124,52124,11,52152,52152,11,52180,52180,11,52208,52208,11,52236,52236,11,52264,52264,11,52292,52292,11,52320,52320,11,52348,52348,11,52376,52376,11,52404,52404,11,52432,52432,11,52460,52460,11,52488,52488,11,52516,52516,11,52544,52544,11,52572,52572,11,52600,52600,11,52628,52628,11,52656,52656,11,52684,52684,11,52712,52712,11,52740,52740,11,52768,52768,11,52796,52796,11,52824,52824,11,52852,52852,11,52880,52880,11,52908,52908,11,52936,52936,11,52964,52964,11,52992,52992,11,53020,53020,11,53048,53048,11,53076,53076,11,53104,53104,11,53132,53132,11,53160,53160,11,53188,53188,11,53216,53216,11,53244,53244,11,53272,53272,11,53300,53300,11,53328,53328,11,53356,53356,11,53384,53384,11,53412,53412,11,53440,53440,11,53468,53468,11,53496,53496,11,53524,53524,11,53552,53552,11,53580,53580,11,53608,53608,11,53636,53636,11,53664,53664,11,53692,53692,11,53720,53720,11,53748,53748,11,53776,53776,11,53804,53804,11,53832,53832,11,53860,53860,11,53888,53888,11,53916,53916,11,53944,53944,11,53972,53972,11,54000,54000,11,54028,54028,11,54056,54056,11,54084,54084,11,54112,54112,11,54140,54140,11,54168,54168,11,54196,54196,11,54224,54224,11,54252,54252,11,54280,54280,11,54308,54308,11,54336,54336,11,54364,54364,11,54392,54392,11,54420,54420,11,54448,54448,11,54476,54476,11,54504,54504,11,54532,54532,11,54560,54560,11,54588,54588,11,54616,54616,11,54644,54644,11,54672,54672,11,54700,54700,11,54728,54728,11,54756,54756,11,54784,54784,11,54812,54812,11,54840,54840,11,54868,54868,11,54896,54896,11,54924,54924,11,54952,54952,11,54980,54980,11,55008,55008,11,55036,55036,11,55064,55064,11,55092,55092,11,55120,55120,11,55148,55148,11,55176,55176,11,55216,55238,9,64286,64286,5,65056,65071,5,65438,65439,5,65529,65531,4,66272,66272,5,68097,68099,5,68108,68111,5,68159,68159,5,68900,68903,5,69446,69456,5,69632,69632,7,69634,69634,7,69744,69744,5,69759,69761,5,69808,69810,7,69815,69816,7,69821,69821,1,69837,69837,1,69927,69931,5,69933,69940,5,70003,70003,5,70018,70018,7,70070,70078,5,70082,70083,1,70094,70094,7,70188,70190,7,70194,70195,7,70197,70197,7,70206,70206,5,70368,70370,7,70400,70401,5,70459,70460,5,70463,70463,7,70465,70468,7,70475,70477,7,70498,70499,7,70512,70516,5,70712,70719,5,70722,70724,5,70726,70726,5,70832,70832,5,70835,70840,5,70842,70842,5,70845,70845,5,70847,70848,5,70850,70851,5,71088,71089,7,71096,71099,7,71102,71102,7,71132,71133,5,71219,71226,5,71229,71229,5,71231,71232,5,71340,71340,7,71342,71343,7,71350,71350,7,71453,71455,5,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,118528,118573,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123566,123566,5,125136,125142,5,126976,126979,14,126981,127182,14,127184,127231,14,127279,127279,14,127344,127345,14,127374,127374,14,127405,127461,14,127489,127490,14,127514,127514,14,127538,127546,14,127561,127567,14,127570,127743,14,127757,127758,14,127760,127760,14,127762,127762,14,127766,127768,14,127770,127770,14,127772,127772,14,127775,127776,14,127778,127779,14,127789,127791,14,127794,127795,14,127798,127798,14,127819,127819,14,127824,127824,14,127868,127868,14,127870,127871,14,127892,127893,14,127896,127896,14,127900,127901,14,127904,127940,14,127942,127942,14,127944,127944,14,127946,127946,14,127951,127955,14,127968,127971,14,127973,127984,14,127987,127987,14,127989,127989,14,127991,127991,14,127995,127999,5,128008,128008,14,128012,128014,14,128017,128018,14,128020,128020,14,128022,128022,14,128042,128042,14,128063,128063,14,128065,128065,14,128101,128101,14,128108,128109,14,128173,128173,14,128182,128183,14,128236,128237,14,128239,128239,14,128245,128245,14,128248,128248,14,128253,128253,14,128255,128258,14,128260,128263,14,128265,128265,14,128277,128277,14,128300,128301,14,128326,128328,14,128331,128334,14,128336,128347,14,128360,128366,14,128369,128370,14,128378,128378,14,128391,128391,14,128394,128397,14,128400,128400,14,128405,128406,14,128420,128420,14,128422,128423,14,128425,128432,14,128435,128443,14,128445,128449,14,128453,128464,14,128468,128475,14,128479,128480,14,128482,128482,14,128484,128487,14,128489,128494,14,128496,128498,14,128500,128505,14,128507,128511,14,128513,128518,14,128521,128525,14,128527,128527,14,128529,128529,14,128533,128533,14,128535,128535,14,128537,128537,14]');\n}\n\n//#endregion\n\n/**\n * Computes the offset after performing a left delete on the given string,\n * while considering unicode grapheme/emoji rules.\n*/\nexport function getLeftDeleteOffset(offset: number, str: string): number {\n\tif (offset === 0) {\n\t\treturn 0;\n\t}\n\n\t// Try to delete emoji part.\n\tconst emojiOffset = getOffsetBeforeLastEmojiComponent(offset, str);\n\tif (emojiOffset !== undefined) {\n\t\treturn emojiOffset;\n\t}\n\n\t// Otherwise, just skip a single code point.\n\tconst codePoint = getPrevCodePoint(str, offset);\n\toffset -= getUTF16Length(codePoint);\n\treturn offset;\n}\n\nfunction getOffsetBeforeLastEmojiComponent(offset: number, str: string): number | undefined {\n\t// See https://www.unicode.org/reports/tr51/tr51-14.html#EBNF_and_Regex for the\n\t// structure of emojis.\n\tlet codePoint = getPrevCodePoint(str, offset);\n\toffset -= getUTF16Length(codePoint);\n\n\t// Skip modifiers\n\twhile ((isEmojiModifier(codePoint) || codePoint === CodePoint.emojiVariantSelector || codePoint === CodePoint.enclosingKeyCap)) {\n\t\tif (offset === 0) {\n\t\t\t// Cannot skip modifier, no preceding emoji base.\n\t\t\treturn undefined;\n\t\t}\n\t\tcodePoint = getPrevCodePoint(str, offset);\n\t\toffset -= getUTF16Length(codePoint);\n\t}\n\n\t// Expect base emoji\n\tif (!isEmojiImprecise(codePoint)) {\n\t\t// Unexpected code point, not a valid emoji.\n\t\treturn undefined;\n\t}\n\n\tif (offset >= 0) {\n\t\t// Skip optional ZWJ code points that combine multiple emojis.\n\t\t// In theory, we should check if that ZWJ actually combines multiple emojis\n\t\t// to prevent deleting ZWJs in situations we didn't account for.\n\t\tconst optionalZwjCodePoint = getPrevCodePoint(str, offset);\n\t\tif (optionalZwjCodePoint === CodePoint.zwj) {\n\t\t\toffset -= getUTF16Length(optionalZwjCodePoint);\n\t\t}\n\t}\n\n\treturn offset;\n}\n\nfunction getUTF16Length(codePoint: number) {\n\treturn codePoint >= Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN ? 2 : 1;\n}\n\nfunction isEmojiModifier(codePoint: number): boolean {\n\treturn 0x1F3FB <= codePoint && codePoint <= 0x1F3FF;\n}\n\nconst enum CodePoint {\n\tzwj = 0x200D,\n\n\t/**\n\t * Variation Selector-16 (VS16)\n\t*/\n\temojiVariantSelector = 0xFE0F,\n\n\t/**\n\t * Combining Enclosing Keycap\n\t */\n\tenclosingKeyCap = 0x20E3,\n}\n\nexport const noBreakWhitespace = '\\xa0';\n\nexport class AmbiguousCharacters {\n\tprivate static getData(): Record<string | '_common', number[]> {\n\t\t// Stored as key1, value1, key2, value2, ...\n\t\treturn JSON.parse('{\\\"_common\\\":[8232,32,8233,32,5760,32,8192,32,8193,32,8194,32,8195,32,8196,32,8197,32,8198,32,8200,32,8201,32,8202,32,8287,32,8199,32,8239,32,2042,95,65101,95,65102,95,65103,95,8208,45,8209,45,8210,45,65112,45,1748,45,8259,45,727,45,8722,45,10134,45,11450,45,1549,44,1643,44,8218,44,184,44,42233,44,894,59,2307,58,2691,58,1417,58,1795,58,1796,58,5868,58,65072,58,6147,58,6153,58,8282,58,1475,58,760,58,42889,58,8758,58,720,58,42237,58,451,33,11601,33,660,63,577,63,2429,63,5038,63,42731,63,119149,46,8228,46,1793,46,1794,46,42510,46,68176,46,1632,46,1776,46,42232,46,1373,96,65287,96,8219,96,8242,96,1370,96,1523,96,8175,96,65344,96,900,96,8189,96,8125,96,8127,96,8190,96,697,96,884,96,712,96,714,96,715,96,756,96,699,96,701,96,700,96,702,96,42892,96,1497,96,2036,96,2037,96,5194,96,5836,96,94033,96,94034,96,65339,40,10088,40,10098,40,12308,40,64830,40,65341,41,10089,41,10099,41,12309,41,64831,41,10100,123,119060,123,10101,125,8270,42,1645,42,8727,42,66335,42,5941,47,8257,47,8725,47,8260,47,9585,47,10187,47,10744,47,119354,47,12755,47,12339,47,11462,47,20031,47,12035,47,65340,92,65128,92,8726,92,10189,92,10741,92,10745,92,119311,92,119355,92,12756,92,20022,92,12034,92,42872,38,708,94,710,94,5869,43,10133,43,66203,43,8249,60,10094,60,706,60,119350,60,5176,60,5810,60,5120,61,11840,61,12448,61,42239,61,8250,62,10095,62,707,62,119351,62,5171,62,94015,62,8275,126,732,126,8128,126,8764,126,120784,50,120794,50,120804,50,120814,50,120824,50,130034,50,42842,50,423,50,1000,50,42564,50,5311,50,42735,50,119302,51,120785,51,120795,51,120805,51,120815,51,120825,51,130035,51,42923,51,540,51,439,51,42858,51,11468,51,1248,51,94011,51,71882,51,120786,52,120796,52,120806,52,120816,52,120826,52,130036,52,5070,52,71855,52,120787,53,120797,53,120807,53,120817,53,120827,53,130037,53,444,53,71867,53,120788,54,120798,54,120808,54,120818,54,120828,54,130038,54,11474,54,5102,54,71893,54,119314,55,120789,55,120799,55,120809,55,120819,55,120829,55,130039,55,66770,55,71878,55,2819,56,2538,56,2666,56,125131,56,120790,56,120800,56,120810,56,120820,56,120830,56,130040,56,547,56,546,56,66330,56,2663,57,2920,57,2541,57,3437,57,120791,57,120801,57,120811,57,120821,57,120831,57,130041,57,42862,57,11466,57,71884,57,71852,57,71894,57,9082,97,65345,97,119834,97,119886,97,119938,97,119990,97,120042,97,120094,97,120146,97,120198,97,120250,97,120302,97,120354,97,120406,97,120458,97,593,97,945,97,120514,97,120572,97,120630,97,120688,97,120746,97,65313,65,119808,65,119860,65,119912,65,119964,65,120016,65,120068,65,120120,65,120172,65,120224,65,120276,65,120328,65,120380,65,120432,65,913,65,120488,65,120546,65,120604,65,120662,65,120720,65,5034,65,5573,65,42222,65,94016,65,66208,65,119835,98,119887,98,119939,98,119991,98,120043,98,120095,98,120147,98,120199,98,120251,98,120303,98,120355,98,120407,98,120459,98,388,98,5071,98,5234,98,5551,98,65314,66,8492,66,119809,66,119861,66,119913,66,120017,66,120069,66,120121,66,120173,66,120225,66,120277,66,120329,66,120381,66,120433,66,42932,66,914,66,120489,66,120547,66,120605,66,120663,66,120721,66,5108,66,5623,66,42192,66,66178,66,66209,66,66305,66,65347,99,8573,99,119836,99,119888,99,119940,99,119992,99,120044,99,120096,99,120148,99,120200,99,120252,99,120304,99,120356,99,120408,99,120460,99,7428,99,1010,99,11429,99,43951,99,66621,99,128844,67,71922,67,71913,67,65315,67,8557,67,8450,67,8493,67,119810,67,119862,67,119914,67,119966,67,120018,67,120174,67,120226,67,120278,67,120330,67,120382,67,120434,67,1017,67,11428,67,5087,67,42202,67,66210,67,66306,67,66581,67,66844,67,8574,100,8518,100,119837,100,119889,100,119941,100,119993,100,120045,100,120097,100,120149,100,120201,100,120253,100,120305,100,120357,100,120409,100,120461,100,1281,100,5095,100,5231,100,42194,100,8558,68,8517,68,119811,68,119863,68,119915,68,119967,68,120019,68,120071,68,120123,68,120175,68,120227,68,120279,68,120331,68,120383,68,120435,68,5024,68,5598,68,5610,68,42195,68,8494,101,65349,101,8495,101,8519,101,119838,101,119890,101,119942,101,120046,101,120098,101,120150,101,120202,101,120254,101,120306,101,120358,101,120410,101,120462,101,43826,101,1213,101,8959,69,65317,69,8496,69,119812,69,119864,69,119916,69,120020,69,120072,69,120124,69,120176,69,120228,69,120280,69,120332,69,120384,69,120436,69,917,69,120492,69,120550,69,120608,69,120666,69,120724,69,11577,69,5036,69,42224,69,71846,69,71854,69,66182,69,119839,102,119891,102,119943,102,119995,102,120047,102,120099,102,120151,102,120203,102,120255,102,120307,102,120359,102,120411,102,120463,102,43829,102,42905,102,383,102,7837,102,1412,102,119315,70,8497,70,119813,70,119865,70,119917,70,120021,70,120073,70,120125,70,120177,70,120229,70,120281,70,120333,70,120385,70,120437,70,42904,70,988,70,120778,70,5556,70,42205,70,71874,70,71842,70,66183,70,66213,70,66853,70,65351,103,8458,103,119840,103,119892,103,119944,103,120048,103,120100,103,120152,103,120204,103,120256,103,120308,103,120360,103,120412,103,120464,103,609,103,7555,103,397,103,1409,103,119814,71,119866,71,119918,71,119970,71,120022,71,120074,71,120126,71,120178,71,120230,71,120282,71,120334,71,120386,71,120438,71,1292,71,5056,71,5107,71,42198,71,65352,104,8462,104,119841,104,119945,104,119997,104,120049,104,120101,104,120153,104,120205,104,120257,104,120309,104,120361,104,120413,104,120465,104,1211,104,1392,104,5058,104,65320,72,8459,72,8460,72,8461,72,119815,72,119867,72,119919,72,120023,72,120179,72,120231,72,120283,72,120335,72,120387,72,120439,72,919,72,120494,72,120552,72,120610,72,120668,72,120726,72,11406,72,5051,72,5500,72,42215,72,66255,72,731,105,9075,105,65353,105,8560,105,8505,105,8520,105,119842,105,119894,105,119946,105,119998,105,120050,105,120102,105,120154,105,120206,105,120258,105,120310,105,120362,105,120414,105,120466,105,120484,105,618,105,617,105,953,105,8126,105,890,105,120522,105,120580,105,120638,105,120696,105,120754,105,1110,105,42567,105,1231,105,43893,105,5029,105,71875,105,65354,106,8521,106,119843,106,119895,106,119947,106,119999,106,120051,106,120103,106,120155,106,120207,106,120259,106,120311,106,120363,106,120415,106,120467,106,1011,106,1112,106,65322,74,119817,74,119869,74,119921,74,119973,74,120025,74,120077,74,120129,74,120181,74,120233,74,120285,74,120337,74,120389,74,120441,74,42930,74,895,74,1032,74,5035,74,5261,74,42201,74,119844,107,119896,107,119948,107,120000,107,120052,107,120104,107,120156,107,120208,107,120260,107,120312,107,120364,107,120416,107,120468,107,8490,75,65323,75,119818,75,119870,75,119922,75,119974,75,120026,75,120078,75,120130,75,120182,75,120234,75,120286,75,120338,75,120390,75,120442,75,922,75,120497,75,120555,75,120613,75,120671,75,120729,75,11412,75,5094,75,5845,75,42199,75,66840,75,1472,124,8739,124,9213,124,65512,124,1633,124,1777,124,66336,124,125127,124,120783,124,120793,124,120803,124,120813,124,120823,124,130033,124,65321,124,8544,124,8464,124,8465,124,119816,124,119868,124,119920,124,120024,124,120128,124,120180,124,120232,124,120284,124,120336,124,120388,124,120440,124,406,124,65356,124,8572,124,8467,124,119845,124,119897,124,119949,124,120001,124,120053,124,120105,124,120157,124,120209,124,120261,124,120313,124,120365,124,120417,124,120469,124,448,124,120496,124,120554,124,120612,124,120670,124,120728,124,11410,124,1030,124,1216,124,1493,124,1503,124,1575,124,126464,124,126592,124,65166,124,65165,124,1994,124,11599,124,5825,124,42226,124,93992,124,66186,124,66313,124,119338,76,8556,76,8466,76,119819,76,119871,76,119923,76,120027,76,120079,76,120131,76,120183,76,120235,76,120287,76,120339,76,120391,76,120443,76,11472,76,5086,76,5290,76,42209,76,93974,76,71843,76,71858,76,66587,76,66854,76,65325,77,8559,77,8499,77,119820,77,119872,77,119924,77,120028,77,120080,77,120132,77,120184,77,120236,77,120288,77,120340,77,120392,77,120444,77,924,77,120499,77,120557,77,120615,77,120673,77,120731,77,1018,77,11416,77,5047,77,5616,77,5846,77,42207,77,66224,77,66321,77,119847,110,119899,110,119951,110,120003,110,120055,110,120107,110,120159,110,120211,110,120263,110,120315,110,120367,110,120419,110,120471,110,1400,110,1404,110,65326,78,8469,78,119821,78,119873,78,119925,78,119977,78,120029,78,120081,78,120185,78,120237,78,120289,78,120341,78,120393,78,120445,78,925,78,120500,78,120558,78,120616,78,120674,78,120732,78,11418,78,42208,78,66835,78,3074,111,3202,111,3330,111,3458,111,2406,111,2662,111,2790,111,3046,111,3174,111,3302,111,3430,111,3664,111,3792,111,4160,111,1637,111,1781,111,65359,111,8500,111,119848,111,119900,111,119952,111,120056,111,120108,111,120160,111,120212,111,120264,111,120316,111,120368,111,120420,111,120472,111,7439,111,7441,111,43837,111,959,111,120528,111,120586,111,120644,111,120702,111,120760,111,963,111,120532,111,120590,111,120648,111,120706,111,120764,111,11423,111,4351,111,1413,111,1505,111,1607,111,126500,111,126564,111,126596,111,65259,111,65260,111,65258,111,65257,111,1726,111,64428,111,64429,111,64427,111,64426,111,1729,111,64424,111,64425,111,64423,111,64422,111,1749,111,3360,111,4125,111,66794,111,71880,111,71895,111,66604,111,1984,79,2534,79,2918,79,12295,79,70864,79,71904,79,120782,79,120792,79,120802,79,120812,79,120822,79,130032,79,65327,79,119822,79,119874,79,119926,79,119978,79,120030,79,120082,79,120134,79,120186,79,120238,79,120290,79,120342,79,120394,79,120446,79,927,79,120502,79,120560,79,120618,79,120676,79,120734,79,11422,79,1365,79,11604,79,4816,79,2848,79,66754,79,42227,79,71861,79,66194,79,66219,79,66564,79,66838,79,9076,112,65360,112,119849,112,119901,112,119953,112,120005,112,120057,112,120109,112,120161,112,120213,112,120265,112,120317,112,120369,112,120421,112,120473,112,961,112,120530,112,120544,112,120588,112,120602,112,120646,112,120660,112,120704,112,120718,112,120762,112,120776,112,11427,112,65328,80,8473,80,119823,80,119875,80,119927,80,119979,80,120031,80,120083,80,120187,80,120239,80,120291,80,120343,80,120395,80,120447,80,929,80,120504,80,120562,80,120620,80,120678,80,120736,80,11426,80,5090,80,5229,80,42193,80,66197,80,119850,113,119902,113,119954,113,120006,113,120058,113,120110,113,120162,113,120214,113,120266,113,120318,113,120370,113,120422,113,120474,113,1307,113,1379,113,1382,113,8474,81,119824,81,119876,81,119928,81,119980,81,120032,81,120084,81,120188,81,120240,81,120292,81,120344,81,120396,81,120448,81,11605,81,119851,114,119903,114,119955,114,120007,114,120059,114,120111,114,120163,114,120215,114,120267,114,120319,114,120371,114,120423,114,120475,114,43847,114,43848,114,7462,114,11397,114,43905,114,119318,82,8475,82,8476,82,8477,82,119825,82,119877,82,119929,82,120033,82,120189,82,120241,82,120293,82,120345,82,120397,82,120449,82,422,82,5025,82,5074,82,66740,82,5511,82,42211,82,94005,82,65363,115,119852,115,119904,115,119956,115,120008,115,120060,115,120112,115,120164,115,120216,115,120268,115,120320,115,120372,115,120424,115,120476,115,42801,115,445,115,1109,115,43946,115,71873,115,66632,115,65331,83,119826,83,119878,83,119930,83,119982,83,120034,83,120086,83,120138,83,120190,83,120242,83,120294,83,120346,83,120398,83,120450,83,1029,83,1359,83,5077,83,5082,83,42210,83,94010,83,66198,83,66592,83,119853,116,119905,116,119957,116,120009,116,120061,116,120113,116,120165,116,120217,116,120269,116,120321,116,120373,116,120425,116,120477,116,8868,84,10201,84,128872,84,65332,84,119827,84,119879,84,119931,84,119983,84,120035,84,120087,84,120139,84,120191,84,120243,84,120295,84,120347,84,120399,84,120451,84,932,84,120507,84,120565,84,120623,84,120681,84,120739,84,11430,84,5026,84,42196,84,93962,84,71868,84,66199,84,66225,84,66325,84,119854,117,119906,117,119958,117,120010,117,120062,117,120114,117,120166,117,120218,117,120270,117,120322,117,120374,117,120426,117,120478,117,42911,117,7452,117,43854,117,43858,117,651,117,965,117,120534,117,120592,117,120650,117,120708,117,120766,117,1405,117,66806,117,71896,117,8746,85,8899,85,119828,85,119880,85,119932,85,119984,85,120036,85,120088,85,120140,85,120192,85,120244,85,120296,85,120348,85,120400,85,120452,85,1357,85,4608,85,66766,85,5196,85,42228,85,94018,85,71864,85,8744,118,8897,118,65366,118,8564,118,119855,118,119907,118,119959,118,120011,118,120063,118,120115,118,120167,118,120219,118,120271,118,120323,118,120375,118,120427,118,120479,118,7456,118,957,118,120526,118,120584,118,120642,118,120700,118,120758,118,1141,118,1496,118,71430,118,43945,118,71872,118,119309,86,1639,86,1783,86,8548,86,119829,86,119881,86,119933,86,119985,86,120037,86,120089,86,120141,86,120193,86,120245,86,120297,86,120349,86,120401,86,120453,86,1140,86,11576,86,5081,86,5167,86,42719,86,42214,86,93960,86,71840,86,66845,86,623,119,119856,119,119908,119,119960,119,120012,119,120064,119,120116,119,120168,119,120220,119,120272,119,120324,119,120376,119,120428,119,120480,119,7457,119,1121,119,1309,119,1377,119,71434,119,71438,119,71439,119,43907,119,71919,87,71910,87,119830,87,119882,87,119934,87,119986,87,120038,87,120090,87,120142,87,120194,87,120246,87,120298,87,120350,87,120402,87,120454,87,1308,87,5043,87,5076,87,42218,87,5742,120,10539,120,10540,120,10799,120,65368,120,8569,120,119857,120,119909,120,119961,120,120013,120,120065,120,120117,120,120169,120,120221,120,120273,120,120325,120,120377,120,120429,120,120481,120,5441,120,5501,120,5741,88,9587,88,66338,88,71916,88,65336,88,8553,88,119831,88,119883,88,119935,88,119987,88,120039,88,120091,88,120143,88,120195,88,120247,88,120299,88,120351,88,120403,88,120455,88,42931,88,935,88,120510,88,120568,88,120626,88,120684,88,120742,88,11436,88,11613,88,5815,88,42219,88,66192,88,66228,88,66327,88,66855,88,611,121,7564,121,65369,121,119858,121,119910,121,119962,121,120014,121,120066,121,120118,121,120170,121,120222,121,120274,121,120326,121,120378,121,120430,121,120482,121,655,121,7935,121,43866,121,947,121,8509,121,120516,121,120574,121,120632,121,120690,121,120748,121,1199,121,4327,121,71900,121,65337,89,119832,89,119884,89,119936,89,119988,89,120040,89,120092,89,120144,89,120196,89,120248,89,120300,89,120352,89,120404,89,120456,89,933,89,978,89,120508,89,120566,89,120624,89,120682,89,120740,89,11432,89,1198,89,5033,89,5053,89,42220,89,94019,89,71844,89,66226,89,119859,122,119911,122,119963,122,120015,122,120067,122,120119,122,120171,122,120223,122,120275,122,120327,122,120379,122,120431,122,120483,122,7458,122,43923,122,71876,122,66293,90,71909,90,65338,90,8484,90,8488,90,119833,90,119885,90,119937,90,119989,90,120041,90,120197,90,120249,90,120301,90,120353,90,120405,90,120457,90,918,90,120493,90,120551,90,120609,90,120667,90,120725,90,5059,90,42204,90,71849,90],\\\"_default\\\":[160,32,8211,45,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,124,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89],\\\"cs\\\":[65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,124,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89],\\\"de\\\":[65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,124,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89],\\\"es\\\":[8211,45,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89],\\\"fr\\\":[65306,58,65281,33,8216,96,8245,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,124,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89],\\\"it\\\":[160,32,8211,45,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,124,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89],\\\"ja\\\":[8211,45,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,124,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89],\\\"ko\\\":[8211,45,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,124,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89],\\\"pl\\\":[65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,124,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89],\\\"pt-BR\\\":[65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,124,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89],\\\"qps-ploc\\\":[160,32,8211,45,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,124,1052,77,1086,111,1054,79,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89],\\\"ru\\\":[65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,305,105,921,124,1009,112,215,120],\\\"tr\\\":[160,32,8211,45,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,1050,75,921,124,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89],\\\"zh-hans\\\":[65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,124,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89],\\\"zh-hant\\\":[8211,45,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,124,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89]}');\n\t}\n\n\tprivate static map: Map<number, number> | undefined;\n\n\tprivate static getConfusablesForCurrentLocale(): Map<number, number> {\n\t\tif (!AmbiguousCharacters.map) {\n\t\t\tconst data = AmbiguousCharacters.getData();\n\n\t\t\tlet locale = platform.locale;\n\t\t\tif (!locale || !(locale in data)) {\n\t\t\t\tlocale = platform.language;\n\t\t\t}\n\t\t\tif (!locale || !(locale in data)) {\n\t\t\t\tlocale = '_default';\n\t\t\t}\n\n\t\t\tfunction arrayToMap(arr: number[]): Map<number, number> {\n\t\t\t\tconst result = new Map<number, number>();\n\t\t\t\tfor (let i = 0; i < arr.length; i += 2) {\n\t\t\t\t\tresult.set(arr[i], arr[i + 1]);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tconst set = arrayToMap(data['_common']);\n\n\t\t\tconst additionalConfusables = arrayToMap(data[locale]);\n\t\t\tfor (const [codePoint, originalCodePoint] of additionalConfusables) {\n\t\t\t\tset.set(codePoint, originalCodePoint);\n\t\t\t}\n\n\n\t\t\tAmbiguousCharacters.map = set;\n\t\t}\n\t\treturn AmbiguousCharacters.map;\n\t}\n\n\tpublic static isAmbiguous(codePoint: number): boolean {\n\t\treturn AmbiguousCharacters.getConfusablesForCurrentLocale().has(codePoint);\n\t}\n\n\t/**\n\t * Returns the non basic ASCII code point that the given code point can be confused,\n\t * or undefined if such code point does note exist.\n\t*/\n\tpublic static getPrimaryConfusable(codePoint: number): number | undefined {\n\t\treturn AmbiguousCharacters.getConfusablesForCurrentLocale().get(codePoint);\n\t}\n\n\tpublic static getPrimaryConfusableCodePoints(): ReadonlySet<number> {\n\t\treturn new Set(AmbiguousCharacters.getConfusablesForCurrentLocale().keys());\n\t}\n}\n\nexport class InvisibleCharacters {\n\tprivate static getRawData(): number[] {\n\t\treturn JSON.parse('[9,10,11,12,13,32,127,160,173,847,1564,4447,4448,6068,6069,6155,6156,6157,6158,7355,7356,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,8234,8235,8236,8237,8238,8239,8287,8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,10240,12288,12644,65024,65025,65026,65027,65028,65029,65030,65031,65032,65033,65034,65035,65036,65037,65038,65039,65279,65440,65520,65521,65522,65523,65524,65525,65526,65527,65528,65532,78844,119155,119156,119157,119158,119159,119160,119161,119162,917504,917505,917506,917507,917508,917509,917510,917511,917512,917513,917514,917515,917516,917517,917518,917519,917520,917521,917522,917523,917524,917525,917526,917527,917528,917529,917530,917531,917532,917533,917534,917535,917536,917537,917538,917539,917540,917541,917542,917543,917544,917545,917546,917547,917548,917549,917550,917551,917552,917553,917554,917555,917556,917557,917558,917559,917560,917561,917562,917563,917564,917565,917566,917567,917568,917569,917570,917571,917572,917573,917574,917575,917576,917577,917578,917579,917580,917581,917582,917583,917584,917585,917586,917587,917588,917589,917590,917591,917592,917593,917594,917595,917596,917597,917598,917599,917600,917601,917602,917603,917604,917605,917606,917607,917608,917609,917610,917611,917612,917613,917614,917615,917616,917617,917618,917619,917620,917621,917622,917623,917624,917625,917626,917627,917628,917629,917630,917631,917760,917761,917762,917763,917764,917765,917766,917767,917768,917769,917770,917771,917772,917773,917774,917775,917776,917777,917778,917779,917780,917781,917782,917783,917784,917785,917786,917787,917788,917789,917790,917791,917792,917793,917794,917795,917796,917797,917798,917799,917800,917801,917802,917803,917804,917805,917806,917807,917808,917809,917810,917811,917812,917813,917814,917815,917816,917817,917818,917819,917820,917821,917822,917823,917824,917825,917826,917827,917828,917829,917830,917831,917832,917833,917834,917835,917836,917837,917838,917839,917840,917841,917842,917843,917844,917845,917846,917847,917848,917849,917850,917851,917852,917853,917854,917855,917856,917857,917858,917859,917860,917861,917862,917863,917864,917865,917866,917867,917868,917869,917870,917871,917872,917873,917874,917875,917876,917877,917878,917879,917880,917881,917882,917883,917884,917885,917886,917887,917888,917889,917890,917891,917892,917893,917894,917895,917896,917897,917898,917899,917900,917901,917902,917903,917904,917905,917906,917907,917908,917909,917910,917911,917912,917913,917914,917915,917916,917917,917918,917919,917920,917921,917922,917923,917924,917925,917926,917927,917928,917929,917930,917931,917932,917933,917934,917935,917936,917937,917938,917939,917940,917941,917942,917943,917944,917945,917946,917947,917948,917949,917950,917951,917952,917953,917954,917955,917956,917957,917958,917959,917960,917961,917962,917963,917964,917965,917966,917967,917968,917969,917970,917971,917972,917973,917974,917975,917976,917977,917978,917979,917980,917981,917982,917983,917984,917985,917986,917987,917988,917989,917990,917991,917992,917993,917994,917995,917996,917997,917998,917999]');\n\t}\n\n\tprivate static _data: Set<number> | undefined = undefined;\n\n\tprivate static getData() {\n\t\tif (!this._data) {\n\t\t\tthis._data = new Set(InvisibleCharacters.getRawData());\n\t\t}\n\t\treturn this._data;\n\t}\n\n\tpublic static isInvisibleCharacter(codePoint: number): boolean {\n\t\treturn InvisibleCharacters.getData().has(codePoint);\n\t}\n\n\tpublic static get codePoints(): ReadonlySet<number> {\n\t\treturn InvisibleCharacters.getData();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\n\n/**\n * Return a hash value for an object.\n */\nexport function hash(obj: any): number {\n\treturn doHash(obj, 0);\n}\n\nexport function doHash(obj: any, hashVal: number): number {\n\tswitch (typeof obj) {\n\t\tcase 'object':\n\t\t\tif (obj === null) {\n\t\t\t\treturn numberHash(349, hashVal);\n\t\t\t} else if (Array.isArray(obj)) {\n\t\t\t\treturn arrayHash(obj, hashVal);\n\t\t\t}\n\t\t\treturn objectHash(obj, hashVal);\n\t\tcase 'string':\n\t\t\treturn stringHash(obj, hashVal);\n\t\tcase 'boolean':\n\t\t\treturn booleanHash(obj, hashVal);\n\t\tcase 'number':\n\t\t\treturn numberHash(obj, hashVal);\n\t\tcase 'undefined':\n\t\t\treturn numberHash(937, hashVal);\n\t\tdefault:\n\t\t\treturn numberHash(617, hashVal);\n\t}\n}\n\nexport function numberHash(val: number, initialHashVal: number): number {\n\treturn (((initialHashVal << 5) - initialHashVal) + val) | 0;  // hashVal * 31 + ch, keep as int32\n}\n\nfunction booleanHash(b: boolean, initialHashVal: number): number {\n\treturn numberHash(b ? 433 : 863, initialHashVal);\n}\n\nexport function stringHash(s: string, hashVal: number) {\n\thashVal = numberHash(149417, hashVal);\n\tfor (let i = 0, length = s.length; i < length; i++) {\n\t\thashVal = numberHash(s.charCodeAt(i), hashVal);\n\t}\n\treturn hashVal;\n}\n\nfunction arrayHash(arr: any[], initialHashVal: number): number {\n\tinitialHashVal = numberHash(104579, initialHashVal);\n\treturn arr.reduce((hashVal, item) => doHash(item, hashVal), initialHashVal);\n}\n\nfunction objectHash(obj: any, initialHashVal: number): number {\n\tinitialHashVal = numberHash(181387, initialHashVal);\n\treturn Object.keys(obj).sort().reduce((hashVal, key) => {\n\t\thashVal = stringHash(key, hashVal);\n\t\treturn doHash(obj[key], hashVal);\n\t}, initialHashVal);\n}\n\nexport class Hasher {\n\n\tprivate _value = 0;\n\n\tget value(): number {\n\t\treturn this._value;\n\t}\n\n\thash(obj: any): number {\n\t\tthis._value = doHash(obj, this._value);\n\t\treturn this._value;\n\t}\n}\n\nconst enum SHA1Constant {\n\tBLOCK_SIZE = 64, // 512 / 8\n\tUNICODE_REPLACEMENT = 0xFFFD,\n}\n\nfunction leftRotate(value: number, bits: number, totalBits: number = 32): number {\n\t// delta + bits = totalBits\n\tconst delta = totalBits - bits;\n\n\t// All ones, expect `delta` zeros aligned to the right\n\tconst mask = ~((1 << delta) - 1);\n\n\t// Join (value left-shifted `bits` bits) with (masked value right-shifted `delta` bits)\n\treturn ((value << bits) | ((mask & value) >>> delta)) >>> 0;\n}\n\nfunction fill(dest: Uint8Array, index: number = 0, count: number = dest.byteLength, value: number = 0): void {\n\tfor (let i = 0; i < count; i++) {\n\t\tdest[index + i] = value;\n\t}\n}\n\nfunction leftPad(value: string, length: number, char: string = '0'): string {\n\twhile (value.length < length) {\n\t\tvalue = char + value;\n\t}\n\treturn value;\n}\n\nexport function toHexString(buffer: ArrayBuffer): string;\nexport function toHexString(value: number, bitsize?: number): string;\nexport function toHexString(bufferOrValue: ArrayBuffer | number, bitsize: number = 32): string {\n\tif (bufferOrValue instanceof ArrayBuffer) {\n\t\treturn Array.from(new Uint8Array(bufferOrValue)).map(b => b.toString(16).padStart(2, '0')).join('');\n\t}\n\n\treturn leftPad((bufferOrValue >>> 0).toString(16), bitsize / 4);\n}\n\n/**\n * A SHA1 implementation that works with strings and does not allocate.\n */\nexport class StringSHA1 {\n\tprivate static _bigBlock32 = new DataView(new ArrayBuffer(320)); // 80 * 4 = 320\n\n\tprivate _h0 = 0x67452301;\n\tprivate _h1 = 0xEFCDAB89;\n\tprivate _h2 = 0x98BADCFE;\n\tprivate _h3 = 0x10325476;\n\tprivate _h4 = 0xC3D2E1F0;\n\n\tprivate readonly _buff: Uint8Array;\n\tprivate readonly _buffDV: DataView;\n\tprivate _buffLen: number;\n\tprivate _totalLen: number;\n\tprivate _leftoverHighSurrogate: number;\n\tprivate _finished: boolean;\n\n\tconstructor() {\n\t\tthis._buff = new Uint8Array(SHA1Constant.BLOCK_SIZE + 3 /* to fit any utf-8 */);\n\t\tthis._buffDV = new DataView(this._buff.buffer);\n\t\tthis._buffLen = 0;\n\t\tthis._totalLen = 0;\n\t\tthis._leftoverHighSurrogate = 0;\n\t\tthis._finished = false;\n\t}\n\n\tpublic update(str: string): void {\n\t\tconst strLen = str.length;\n\t\tif (strLen === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst buff = this._buff;\n\t\tlet buffLen = this._buffLen;\n\t\tlet leftoverHighSurrogate = this._leftoverHighSurrogate;\n\t\tlet charCode: number;\n\t\tlet offset: number;\n\n\t\tif (leftoverHighSurrogate !== 0) {\n\t\t\tcharCode = leftoverHighSurrogate;\n\t\t\toffset = -1;\n\t\t\tleftoverHighSurrogate = 0;\n\t\t} else {\n\t\t\tcharCode = str.charCodeAt(0);\n\t\t\toffset = 0;\n\t\t}\n\n\t\twhile (true) {\n\t\t\tlet codePoint = charCode;\n\t\t\tif (strings.isHighSurrogate(charCode)) {\n\t\t\t\tif (offset + 1 < strLen) {\n\t\t\t\t\tconst nextCharCode = str.charCodeAt(offset + 1);\n\t\t\t\t\tif (strings.isLowSurrogate(nextCharCode)) {\n\t\t\t\t\t\toffset++;\n\t\t\t\t\t\tcodePoint = strings.computeCodePoint(charCode, nextCharCode);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// illegal => unicode replacement character\n\t\t\t\t\t\tcodePoint = SHA1Constant.UNICODE_REPLACEMENT;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// last character is a surrogate pair\n\t\t\t\t\tleftoverHighSurrogate = charCode;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (strings.isLowSurrogate(charCode)) {\n\t\t\t\t// illegal => unicode replacement character\n\t\t\t\tcodePoint = SHA1Constant.UNICODE_REPLACEMENT;\n\t\t\t}\n\n\t\t\tbuffLen = this._push(buff, buffLen, codePoint);\n\t\t\toffset++;\n\t\t\tif (offset < strLen) {\n\t\t\t\tcharCode = str.charCodeAt(offset);\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tthis._buffLen = buffLen;\n\t\tthis._leftoverHighSurrogate = leftoverHighSurrogate;\n\t}\n\n\tprivate _push(buff: Uint8Array, buffLen: number, codePoint: number): number {\n\t\tif (codePoint < 0x0080) {\n\t\t\tbuff[buffLen++] = codePoint;\n\t\t} else if (codePoint < 0x0800) {\n\t\t\tbuff[buffLen++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else if (codePoint < 0x10000) {\n\t\t\tbuff[buffLen++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t} else {\n\t\t\tbuff[buffLen++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n\t\t\tbuff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n\t\t}\n\n\t\tif (buffLen >= SHA1Constant.BLOCK_SIZE) {\n\t\t\tthis._step();\n\t\t\tbuffLen -= SHA1Constant.BLOCK_SIZE;\n\t\t\tthis._totalLen += SHA1Constant.BLOCK_SIZE;\n\t\t\t// take last 3 in case of UTF8 overflow\n\t\t\tbuff[0] = buff[SHA1Constant.BLOCK_SIZE + 0];\n\t\t\tbuff[1] = buff[SHA1Constant.BLOCK_SIZE + 1];\n\t\t\tbuff[2] = buff[SHA1Constant.BLOCK_SIZE + 2];\n\t\t}\n\n\t\treturn buffLen;\n\t}\n\n\tpublic digest(): string {\n\t\tif (!this._finished) {\n\t\t\tthis._finished = true;\n\t\t\tif (this._leftoverHighSurrogate) {\n\t\t\t\t// illegal => unicode replacement character\n\t\t\t\tthis._leftoverHighSurrogate = 0;\n\t\t\t\tthis._buffLen = this._push(this._buff, this._buffLen, SHA1Constant.UNICODE_REPLACEMENT);\n\t\t\t}\n\t\t\tthis._totalLen += this._buffLen;\n\t\t\tthis._wrapUp();\n\t\t}\n\n\t\treturn toHexString(this._h0) + toHexString(this._h1) + toHexString(this._h2) + toHexString(this._h3) + toHexString(this._h4);\n\t}\n\n\tprivate _wrapUp(): void {\n\t\tthis._buff[this._buffLen++] = 0x80;\n\t\tfill(this._buff, this._buffLen);\n\n\t\tif (this._buffLen > 56) {\n\t\t\tthis._step();\n\t\t\tfill(this._buff);\n\t\t}\n\n\t\t// this will fit because the mantissa can cover up to 52 bits\n\t\tconst ml = 8 * this._totalLen;\n\n\t\tthis._buffDV.setUint32(56, Math.floor(ml / 4294967296), false);\n\t\tthis._buffDV.setUint32(60, ml % 4294967296, false);\n\n\t\tthis._step();\n\t}\n\n\tprivate _step(): void {\n\t\tconst bigBlock32 = StringSHA1._bigBlock32;\n\t\tconst data = this._buffDV;\n\n\t\tfor (let j = 0; j < 64 /* 16*4 */; j += 4) {\n\t\t\tbigBlock32.setUint32(j, data.getUint32(j, false), false);\n\t\t}\n\n\t\tfor (let j = 64; j < 320 /* 80*4 */; j += 4) {\n\t\t\tbigBlock32.setUint32(j, leftRotate((bigBlock32.getUint32(j - 12, false) ^ bigBlock32.getUint32(j - 32, false) ^ bigBlock32.getUint32(j - 56, false) ^ bigBlock32.getUint32(j - 64, false)), 1), false);\n\t\t}\n\n\t\tlet a = this._h0;\n\t\tlet b = this._h1;\n\t\tlet c = this._h2;\n\t\tlet d = this._h3;\n\t\tlet e = this._h4;\n\n\t\tlet f: number, k: number;\n\t\tlet temp: number;\n\n\t\tfor (let j = 0; j < 80; j++) {\n\t\t\tif (j < 20) {\n\t\t\t\tf = (b & c) | ((~b) & d);\n\t\t\t\tk = 0x5A827999;\n\t\t\t} else if (j < 40) {\n\t\t\t\tf = b ^ c ^ d;\n\t\t\t\tk = 0x6ED9EBA1;\n\t\t\t} else if (j < 60) {\n\t\t\t\tf = (b & c) | (b & d) | (c & d);\n\t\t\t\tk = 0x8F1BBCDC;\n\t\t\t} else {\n\t\t\t\tf = b ^ c ^ d;\n\t\t\t\tk = 0xCA62C1D6;\n\t\t\t}\n\n\t\t\ttemp = (leftRotate(a, 5) + f + e + k + bigBlock32.getUint32(j * 4, false)) & 0xffffffff;\n\t\t\te = d;\n\t\t\td = c;\n\t\t\tc = leftRotate(b, 30);\n\t\t\tb = a;\n\t\t\ta = temp;\n\t\t}\n\n\t\tthis._h0 = (this._h0 + a) & 0xffffffff;\n\t\tthis._h1 = (this._h1 + b) & 0xffffffff;\n\t\tthis._h2 = (this._h2 + c) & 0xffffffff;\n\t\tthis._h3 = (this._h3 + d) & 0xffffffff;\n\t\tthis._h4 = (this._h4 + e) & 0xffffffff;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { shuffle } from 'vs/base/common/arrays';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { compare, compareIgnoreCase, compareSubstring, compareSubstringIgnoreCase } from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\n\nexport function getOrSet<K, V>(map: Map<K, V>, key: K, value: V): V {\n\tlet result = map.get(key);\n\tif (result === undefined) {\n\t\tresult = value;\n\t\tmap.set(key, result);\n\t}\n\n\treturn result;\n}\n\nexport function mapToString<K, V>(map: Map<K, V>): string {\n\tconst entries: string[] = [];\n\tmap.forEach((value, key) => {\n\t\tentries.push(`${key} => ${value}`);\n\t});\n\n\treturn `Map(${map.size}) {${entries.join(', ')}}`;\n}\n\nexport function setToString<K>(set: Set<K>): string {\n\tconst entries: K[] = [];\n\tset.forEach(value => {\n\t\tentries.push(value);\n\t});\n\n\treturn `Set(${set.size}) {${entries.join(', ')}}`;\n}\n\nexport interface IKeyIterator<K> {\n\treset(key: K): this;\n\tnext(): this;\n\n\thasNext(): boolean;\n\tcmp(a: string): number;\n\tvalue(): string;\n}\n\nexport class StringIterator implements IKeyIterator<string> {\n\n\tprivate _value: string = '';\n\tprivate _pos: number = 0;\n\n\treset(key: string): this {\n\t\tthis._value = key;\n\t\tthis._pos = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tthis._pos += 1;\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._pos < this._value.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tconst aCode = a.charCodeAt(0);\n\t\tconst thisCode = this._value.charCodeAt(this._pos);\n\t\treturn aCode - thisCode;\n\t}\n\n\tvalue(): string {\n\t\treturn this._value[this._pos];\n\t}\n}\n\nexport class ConfigKeysIterator implements IKeyIterator<string> {\n\n\tprivate _value!: string;\n\tprivate _from!: number;\n\tprivate _to!: number;\n\n\tconstructor(\n\t\tprivate readonly _caseSensitive: boolean = true\n\t) { }\n\n\treset(key: string): this {\n\t\tthis._value = key;\n\t\tthis._from = 0;\n\t\tthis._to = 0;\n\t\treturn this.next();\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._to < this._value.length;\n\t}\n\n\tnext(): this {\n\t\t// this._data = key.split(/[\\\\/]/).filter(s => !!s);\n\t\tthis._from = this._to;\n\t\tlet justSeps = true;\n\t\tfor (; this._to < this._value.length; this._to++) {\n\t\t\tconst ch = this._value.charCodeAt(this._to);\n\t\t\tif (ch === CharCode.Period) {\n\t\t\t\tif (justSeps) {\n\t\t\t\t\tthis._from++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tjustSeps = false;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tcmp(a: string): number {\n\t\treturn this._caseSensitive\n\t\t\t? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n\t\t\t: compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n\t}\n\n\tvalue(): string {\n\t\treturn this._value.substring(this._from, this._to);\n\t}\n}\n\nexport class PathIterator implements IKeyIterator<string> {\n\n\tprivate _value!: string;\n\tprivate _from!: number;\n\tprivate _to!: number;\n\n\tconstructor(\n\t\tprivate readonly _splitOnBackslash: boolean = true,\n\t\tprivate readonly _caseSensitive: boolean = true\n\t) { }\n\n\treset(key: string): this {\n\t\tthis._value = key.replace(/\\\\$|\\/$/, '');\n\t\tthis._from = 0;\n\t\tthis._to = 0;\n\t\treturn this.next();\n\t}\n\n\thasNext(): boolean {\n\t\treturn this._to < this._value.length;\n\t}\n\n\tnext(): this {\n\t\t// this._data = key.split(/[\\\\/]/).filter(s => !!s);\n\t\tthis._from = this._to;\n\t\tlet justSeps = true;\n\t\tfor (; this._to < this._value.length; this._to++) {\n\t\t\tconst ch = this._value.charCodeAt(this._to);\n\t\t\tif (ch === CharCode.Slash || this._splitOnBackslash && ch === CharCode.Backslash) {\n\t\t\t\tif (justSeps) {\n\t\t\t\t\tthis._from++;\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tjustSeps = false;\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tcmp(a: string): number {\n\t\treturn this._caseSensitive\n\t\t\t? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n\t\t\t: compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n\t}\n\n\tvalue(): string {\n\t\treturn this._value.substring(this._from, this._to);\n\t}\n}\n\nconst enum UriIteratorState {\n\tScheme = 1, Authority = 2, Path = 3, Query = 4, Fragment = 5\n}\n\nexport class UriIterator implements IKeyIterator<URI> {\n\n\tprivate _pathIterator!: PathIterator;\n\tprivate _value!: URI;\n\tprivate _states: UriIteratorState[] = [];\n\tprivate _stateIdx: number = 0;\n\n\tconstructor(private readonly _ignorePathCasing: (uri: URI) => boolean) { }\n\n\treset(key: URI): this {\n\t\tthis._value = key;\n\t\tthis._states = [];\n\t\tif (this._value.scheme) {\n\t\t\tthis._states.push(UriIteratorState.Scheme);\n\t\t}\n\t\tif (this._value.authority) {\n\t\t\tthis._states.push(UriIteratorState.Authority);\n\t\t}\n\t\tif (this._value.path) {\n\t\t\tthis._pathIterator = new PathIterator(false, !this._ignorePathCasing(key));\n\t\t\tthis._pathIterator.reset(key.path);\n\t\t\tif (this._pathIterator.value()) {\n\t\t\t\tthis._states.push(UriIteratorState.Path);\n\t\t\t}\n\t\t}\n\t\tif (this._value.query) {\n\t\t\tthis._states.push(UriIteratorState.Query);\n\t\t}\n\t\tif (this._value.fragment) {\n\t\t\tthis._states.push(UriIteratorState.Fragment);\n\t\t}\n\t\tthis._stateIdx = 0;\n\t\treturn this;\n\t}\n\n\tnext(): this {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Path && this._pathIterator.hasNext()) {\n\t\t\tthis._pathIterator.next();\n\t\t} else {\n\t\t\tthis._stateIdx += 1;\n\t\t}\n\t\treturn this;\n\t}\n\n\thasNext(): boolean {\n\t\treturn (this._states[this._stateIdx] === UriIteratorState.Path && this._pathIterator.hasNext())\n\t\t\t|| this._stateIdx < this._states.length - 1;\n\t}\n\n\tcmp(a: string): number {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Scheme) {\n\t\t\treturn compareIgnoreCase(a, this._value.scheme);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Authority) {\n\t\t\treturn compareIgnoreCase(a, this._value.authority);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Path) {\n\t\t\treturn this._pathIterator.cmp(a);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Query) {\n\t\t\treturn compare(a, this._value.query);\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Fragment) {\n\t\t\treturn compare(a, this._value.fragment);\n\t\t}\n\t\tthrow new Error();\n\t}\n\n\tvalue(): string {\n\t\tif (this._states[this._stateIdx] === UriIteratorState.Scheme) {\n\t\t\treturn this._value.scheme;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Authority) {\n\t\t\treturn this._value.authority;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Path) {\n\t\t\treturn this._pathIterator.value();\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Query) {\n\t\t\treturn this._value.query;\n\t\t} else if (this._states[this._stateIdx] === UriIteratorState.Fragment) {\n\t\t\treturn this._value.fragment;\n\t\t}\n\t\tthrow new Error();\n\t}\n}\n\nclass TernarySearchTreeNode<K, V> {\n\theight: number = 1;\n\tsegment!: string;\n\tvalue: V | undefined;\n\tkey: K | undefined;\n\tleft: TernarySearchTreeNode<K, V> | undefined;\n\tmid: TernarySearchTreeNode<K, V> | undefined;\n\tright: TernarySearchTreeNode<K, V> | undefined;\n\n\tisEmpty(): boolean {\n\t\treturn !this.left && !this.mid && !this.right && !this.value;\n\t}\n\n\trotateLeft() {\n\t\tconst tmp = this.right!;\n\t\tthis.right = tmp.left;\n\t\ttmp.left = this;\n\t\tthis.updateHeight();\n\t\ttmp.updateHeight();\n\t\treturn tmp;\n\t}\n\n\trotateRight() {\n\t\tconst tmp = this.left!;\n\t\tthis.left = tmp.right;\n\t\ttmp.right = this;\n\t\tthis.updateHeight();\n\t\ttmp.updateHeight();\n\t\treturn tmp;\n\t}\n\n\tupdateHeight() {\n\t\tthis.height = 1 + Math.max(this.heightLeft, this.heightRight);\n\t}\n\n\tbalanceFactor() {\n\t\treturn this.heightRight - this.heightLeft;\n\t}\n\n\tget heightLeft() {\n\t\treturn this.left?.height ?? 0;\n\t}\n\n\tget heightRight() {\n\t\treturn this.right?.height ?? 0;\n\t}\n}\n\nconst enum Dir {\n\tLeft = -1,\n\tMid = 0,\n\tRight = 1,\n}\n\nexport class TernarySearchTree<K, V> {\n\n\tstatic forUris<E>(ignorePathCasing: (key: URI) => boolean = () => false): TernarySearchTree<URI, E> {\n\t\treturn new TernarySearchTree<URI, E>(new UriIterator(ignorePathCasing));\n\t}\n\n\tstatic forPaths<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new PathIterator());\n\t}\n\n\tstatic forStrings<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new StringIterator());\n\t}\n\n\tstatic forConfigKeys<E>(): TernarySearchTree<string, E> {\n\t\treturn new TernarySearchTree<string, E>(new ConfigKeysIterator());\n\t}\n\n\tprivate _iter: IKeyIterator<K>;\n\tprivate _root: TernarySearchTreeNode<K, V> | undefined;\n\n\tconstructor(segments: IKeyIterator<K>) {\n\t\tthis._iter = segments;\n\t}\n\n\tclear(): void {\n\t\tthis._root = undefined;\n\t}\n\n\t/**\n\t * Fill the tree with the same value of the given keys\n\t */\n\tfill(element: V, keys: readonly K[]): void;\n\t/**\n\t * Fill the tree with given [key,value]-tuples\n\t */\n\tfill(values: readonly [K, V][]): void;\n\tfill(values: readonly [K, V][] | V, keys?: readonly K[]): void {\n\t\tif (keys) {\n\t\t\tconst arr = keys.slice(0);\n\t\t\tshuffle(arr);\n\t\t\tfor (let k of arr) {\n\t\t\t\tthis.set(k, (<V>values));\n\t\t\t}\n\t\t} else {\n\t\t\tconst arr = (<[K, V][]>values).slice(0);\n\t\t\tshuffle(arr);\n\t\t\tfor (let entry of arr) {\n\t\t\t\tthis.set(entry[0], entry[1]);\n\t\t\t}\n\t\t}\n\t}\n\n\tset(key: K, element: V): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node: TernarySearchTreeNode<K, V>;\n\n\t\tif (!this._root) {\n\t\t\tthis._root = new TernarySearchTreeNode<K, V>();\n\t\t\tthis._root.segment = iter.value();\n\t\t}\n\t\tconst stack: [Dir, TernarySearchTreeNode<K, V>][] = [];\n\n\t\t// find insert_node\n\t\tnode = this._root;\n\t\twhile (true) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tif (!node.left) {\n\t\t\t\t\tnode.left = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.left.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tstack.push([Dir.Left, node]);\n\t\t\t\tnode = node.left;\n\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tif (!node.right) {\n\t\t\t\t\tnode.right = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.right.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tstack.push([Dir.Right, node]);\n\t\t\t\tnode = node.right;\n\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\tnode.mid = new TernarySearchTreeNode<K, V>();\n\t\t\t\t\tnode.mid.segment = iter.value();\n\t\t\t\t}\n\t\t\t\tstack.push([Dir.Mid, node]);\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// set value\n\t\tconst oldElement = node.value;\n\t\tnode.value = element;\n\t\tnode.key = key;\n\n\t\t// balance\n\t\tfor (let i = stack.length - 1; i >= 0; i--) {\n\t\t\tconst node = stack[i][1];\n\n\t\t\tnode.updateHeight();\n\t\t\tconst bf = node.balanceFactor();\n\n\t\t\tif (bf < -1 || bf > 1) {\n\t\t\t\t// needs rotate\n\t\t\t\tconst d1 = stack[i][0];\n\t\t\t\tconst d2 = stack[i + 1][0];\n\n\t\t\t\tif (d1 === Dir.Right && d2 === Dir.Right) {\n\t\t\t\t\t//right, right -> rotate left\n\t\t\t\t\tstack[i][1] = node.rotateLeft();\n\n\t\t\t\t} else if (d1 === Dir.Left && d2 === Dir.Left) {\n\t\t\t\t\t// left, left -> rotate right\n\t\t\t\t\tstack[i][1] = node.rotateRight();\n\n\t\t\t\t} else if (d1 === Dir.Right && d2 === Dir.Left) {\n\t\t\t\t\t// right, left -> double rotate right, left\n\t\t\t\t\tnode.right = stack[i + 1][1] = stack[i + 1][1].rotateRight();\n\t\t\t\t\tstack[i][1] = node.rotateLeft();\n\n\t\t\t\t} else if (d1 === Dir.Left && d2 === Dir.Right) {\n\t\t\t\t\t// left, right -> double rotate left, right\n\t\t\t\t\tnode.left = stack[i + 1][1] = stack[i + 1][1].rotateLeft();\n\t\t\t\t\tstack[i][1] = node.rotateRight();\n\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t}\n\n\t\t\t\t// patch path to parent\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tswitch (stack[i - 1][0]) {\n\t\t\t\t\t\tcase Dir.Left:\n\t\t\t\t\t\t\tstack[i - 1][1].left = stack[i][1];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase Dir.Right:\n\t\t\t\t\t\t\tstack[i - 1][1].right = stack[i][1];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase Dir.Mid:\n\t\t\t\t\t\t\tstack[i - 1][1].mid = stack[i][1];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis._root = stack[0][1];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn oldElement;\n\t}\n\n\tget(key: K): V | undefined {\n\t\treturn this._getNode(key)?.value;\n\t}\n\n\tprivate _getNode(key: K) {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node;\n\t}\n\n\thas(key: K): boolean {\n\t\tconst node = this._getNode(key);\n\t\treturn !(node?.value === undefined && node?.mid === undefined);\n\t}\n\n\tdelete(key: K): void {\n\t\treturn this._delete(key, false);\n\t}\n\n\tdeleteSuperstr(key: K): void {\n\t\treturn this._delete(key, true);\n\t}\n\n\tprivate _delete(key: K, superStr: boolean): void {\n\t\tconst iter = this._iter.reset(key);\n\t\tconst stack: [Dir, TernarySearchTreeNode<K, V>][] = [];\n\t\tlet node = this._root;\n\n\t\t// find node\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tstack.push([Dir.Left, node]);\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tstack.push([Dir.Right, node]);\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tstack.push([Dir.Mid, node]);\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (!node) {\n\t\t\t// node not found\n\t\t\treturn;\n\t\t}\n\n\t\tif (superStr) {\n\t\t\t// removing children, reset height\n\t\t\tnode.left = undefined;\n\t\t\tnode.mid = undefined;\n\t\t\tnode.right = undefined;\n\t\t\tnode.height = 1;\n\t\t} else {\n\t\t\t// removing element\n\t\t\tnode.key = undefined;\n\t\t\tnode.value = undefined;\n\t\t}\n\n\t\t// BST node removal\n\t\tif (!node.mid && !node.value) {\n\t\t\tif (node.left && node.right) {\n\t\t\t\t// full node\n\t\t\t\tconst min = this._min(node.right);\n\t\t\t\tconst { key, value, segment } = min;\n\t\t\t\tthis._delete(min.key!, false);\n\t\t\t\tnode.key = key;\n\t\t\t\tnode.value = value;\n\t\t\t\tnode.segment = segment;\n\n\t\t\t} else {\n\t\t\t\t// empty or half empty\n\t\t\t\tconst newChild = node.left ?? node.right;\n\t\t\t\tif (stack.length > 0) {\n\t\t\t\t\tconst [dir, parent] = stack[stack.length - 1];\n\t\t\t\t\tswitch (dir) {\n\t\t\t\t\t\tcase Dir.Left: parent.left = newChild; break;\n\t\t\t\t\t\tcase Dir.Mid: parent.mid = newChild; break;\n\t\t\t\t\t\tcase Dir.Right: parent.right = newChild; break;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis._root = newChild;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// AVL balance\n\t\tfor (let i = stack.length - 1; i >= 0; i--) {\n\t\t\tconst node = stack[i][1];\n\n\t\t\tnode.updateHeight();\n\t\t\tconst bf = node.balanceFactor();\n\t\t\tif (bf > 1) {\n\t\t\t\t// right heavy\n\t\t\t\tif (node.right!.balanceFactor() >= 0) {\n\t\t\t\t\t// right, right -> rotate left\n\t\t\t\t\tstack[i][1] = node.rotateLeft();\n\t\t\t\t} else {\n\t\t\t\t\t// right, left -> double rotate\n\t\t\t\t\tnode.right = stack[i + 1][1] = stack[i + 1][1].rotateRight();\n\t\t\t\t\tstack[i][1] = node.rotateLeft();\n\t\t\t\t}\n\n\t\t\t} else if (bf < -1) {\n\t\t\t\t// left heavy\n\t\t\t\tif (node.left!.balanceFactor() <= 0) {\n\t\t\t\t\t// left, left -> rotate right\n\t\t\t\t\tstack[i][1] = node.rotateRight();\n\t\t\t\t} else {\n\t\t\t\t\t// left, right -> double rotate\n\t\t\t\t\tnode.left = stack[i + 1][1] = stack[i + 1][1].rotateLeft();\n\t\t\t\t\tstack[i][1] = node.rotateRight();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// patch path to parent\n\t\t\tif (i > 0) {\n\t\t\t\tswitch (stack[i - 1][0]) {\n\t\t\t\t\tcase Dir.Left:\n\t\t\t\t\t\tstack[i - 1][1].left = stack[i][1];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase Dir.Right:\n\t\t\t\t\t\tstack[i - 1][1].right = stack[i][1];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase Dir.Mid:\n\t\t\t\t\t\tstack[i - 1][1].mid = stack[i][1];\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._root = stack[0][1];\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _min(node: TernarySearchTreeNode<K, V>): TernarySearchTreeNode<K, V> {\n\t\twhile (node.left) {\n\t\t\tnode = node.left;\n\t\t}\n\t\treturn node;\n\t}\n\n\tfindSubstr(key: K): V | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\tlet candidate: V | undefined = undefined;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tcandidate = node.value || candidate;\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn node && node.value || candidate;\n\t}\n\n\tfindSuperstr(key: K): IterableIterator<[K, V]> | undefined {\n\t\tconst iter = this._iter.reset(key);\n\t\tlet node = this._root;\n\t\twhile (node) {\n\t\t\tconst val = iter.cmp(node.segment);\n\t\t\tif (val > 0) {\n\t\t\t\t// left\n\t\t\t\tnode = node.left;\n\t\t\t} else if (val < 0) {\n\t\t\t\t// right\n\t\t\t\tnode = node.right;\n\t\t\t} else if (iter.hasNext()) {\n\t\t\t\t// mid\n\t\t\t\titer.next();\n\t\t\t\tnode = node.mid;\n\t\t\t} else {\n\t\t\t\t// collect\n\t\t\t\tif (!node.mid) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t} else {\n\t\t\t\t\treturn this._entries(node.mid);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tforEach(callback: (value: V, index: K) => any): void {\n\t\tfor (const [key, value] of this) {\n\t\t\tcallback(value, key);\n\t\t}\n\t}\n\n\t*[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\tyield* this._entries(this._root);\n\t}\n\n\tprivate *_entries(node: TernarySearchTreeNode<K, V> | undefined): IterableIterator<[K, V]> {\n\t\t// DFS\n\t\tif (!node) {\n\t\t\treturn;\n\t\t}\n\t\tif (node.left) {\n\t\t\tyield* this._entries(node.left);\n\t\t}\n\t\tif (node.value) {\n\t\t\tyield [node.key!, node.value];\n\t\t}\n\t\tif (node.mid) {\n\t\t\tyield* this._entries(node.mid);\n\t\t}\n\t\tif (node.right) {\n\t\t\tyield* this._entries(node.right);\n\t\t}\n\t}\n\n\t// for debug/testing\n\t_isBalanced(): boolean {\n\t\tconst nodeIsBalanced = (node: TernarySearchTreeNode<any, any> | undefined): boolean => {\n\t\t\tif (!node) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tconst bf = node.balanceFactor();\n\t\t\tif (bf < -1 || bf > 1) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn nodeIsBalanced(node.left) && nodeIsBalanced(node.right);\n\t\t};\n\t\treturn nodeIsBalanced(this._root);\n\t}\n}\n\ninterface ResourceMapKeyFn {\n\t(resource: URI): string;\n}\n\nclass ResourceMapEntry<T> {\n\tconstructor(readonly uri: URI, readonly value: T) { }\n}\n\nexport class ResourceMap<T> implements Map<URI, T> {\n\n\tprivate static readonly defaultToKey = (resource: URI) => resource.toString();\n\n\treadonly [Symbol.toStringTag] = 'ResourceMap';\n\n\tprivate readonly map: Map<string, ResourceMapEntry<T>>;\n\tprivate readonly toKey: ResourceMapKeyFn;\n\n\t/**\n\t *\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(toKey?: ResourceMapKeyFn);\n\n\t/**\n\t *\n\t * @param other Another resource which this maps is created from\n\t * @param toKey Custom uri identity function, e.g use an existing `IExtUri#getComparison`-util\n\t */\n\tconstructor(other?: ResourceMap<T>, toKey?: ResourceMapKeyFn);\n\n\tconstructor(mapOrKeyFn?: ResourceMap<T> | ResourceMapKeyFn, toKey?: ResourceMapKeyFn) {\n\t\tif (mapOrKeyFn instanceof ResourceMap) {\n\t\t\tthis.map = new Map(mapOrKeyFn.map);\n\t\t\tthis.toKey = toKey ?? ResourceMap.defaultToKey;\n\t\t} else {\n\t\t\tthis.map = new Map();\n\t\t\tthis.toKey = mapOrKeyFn ?? ResourceMap.defaultToKey;\n\t\t}\n\t}\n\n\tset(resource: URI, value: T): this {\n\t\tthis.map.set(this.toKey(resource), new ResourceMapEntry(resource, value));\n\t\treturn this;\n\t}\n\n\tget(resource: URI): T | undefined {\n\t\treturn this.map.get(this.toKey(resource))?.value;\n\t}\n\n\thas(resource: URI): boolean {\n\t\treturn this.map.has(this.toKey(resource));\n\t}\n\n\tget size(): number {\n\t\treturn this.map.size;\n\t}\n\n\tclear(): void {\n\t\tthis.map.clear();\n\t}\n\n\tdelete(resource: URI): boolean {\n\t\treturn this.map.delete(this.toKey(resource));\n\t}\n\n\tforEach(clb: (value: T, key: URI, map: Map<URI, T>) => void, thisArg?: any): void {\n\t\tif (typeof thisArg !== 'undefined') {\n\t\t\tclb = clb.bind(thisArg);\n\t\t}\n\t\tfor (let [_, entry] of this.map) {\n\t\t\tclb(entry.value, entry.uri, <any>this);\n\t\t}\n\t}\n\n\t*values(): IterableIterator<T> {\n\t\tfor (let entry of this.map.values()) {\n\t\t\tyield entry.value;\n\t\t}\n\t}\n\n\t*keys(): IterableIterator<URI> {\n\t\tfor (let entry of this.map.values()) {\n\t\t\tyield entry.uri;\n\t\t}\n\t}\n\n\t*entries(): IterableIterator<[URI, T]> {\n\t\tfor (let entry of this.map.values()) {\n\t\t\tyield [entry.uri, entry.value];\n\t\t}\n\t}\n\n\t*[Symbol.iterator](): IterableIterator<[URI, T]> {\n\t\tfor (let [, entry] of this.map) {\n\t\t\tyield [entry.uri, entry.value];\n\t\t}\n\t}\n}\n\ninterface Item<K, V> {\n\tprevious: Item<K, V> | undefined;\n\tnext: Item<K, V> | undefined;\n\tkey: K;\n\tvalue: V;\n}\n\nexport const enum Touch {\n\tNone = 0,\n\tAsOld = 1,\n\tAsNew = 2\n}\n\nexport class LinkedMap<K, V> implements Map<K, V> {\n\n\treadonly [Symbol.toStringTag] = 'LinkedMap';\n\n\tprivate _map: Map<K, Item<K, V>>;\n\tprivate _head: Item<K, V> | undefined;\n\tprivate _tail: Item<K, V> | undefined;\n\tprivate _size: number;\n\n\tprivate _state: number;\n\n\tconstructor() {\n\t\tthis._map = new Map<K, Item<K, V>>();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t\tthis._state = 0;\n\t}\n\n\tclear(): void {\n\t\tthis._map.clear();\n\t\tthis._head = undefined;\n\t\tthis._tail = undefined;\n\t\tthis._size = 0;\n\t\tthis._state++;\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn !this._head && !this._tail;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tget first(): V | undefined {\n\t\treturn this._head?.value;\n\t}\n\n\tget last(): V | undefined {\n\t\treturn this._tail?.value;\n\t}\n\n\thas(key: K): boolean {\n\t\treturn this._map.has(key);\n\t}\n\n\tget(key: K, touch: Touch = Touch.None): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (touch !== Touch.None) {\n\t\t\tthis.touch(item, touch);\n\t\t}\n\t\treturn item.value;\n\t}\n\n\tset(key: K, value: V, touch: Touch = Touch.None): this {\n\t\tlet item = this._map.get(key);\n\t\tif (item) {\n\t\t\titem.value = value;\n\t\t\tif (touch !== Touch.None) {\n\t\t\t\tthis.touch(item, touch);\n\t\t\t}\n\t\t} else {\n\t\t\titem = { key, value, next: undefined, previous: undefined };\n\t\t\tswitch (touch) {\n\t\t\t\tcase Touch.None:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsOld:\n\t\t\t\t\tthis.addItemFirst(item);\n\t\t\t\t\tbreak;\n\t\t\t\tcase Touch.AsNew:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthis.addItemLast(item);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tthis._map.set(key, item);\n\t\t\tthis._size++;\n\t\t}\n\t\treturn this;\n\t}\n\n\tdelete(key: K): boolean {\n\t\treturn !!this.remove(key);\n\t}\n\n\tremove(key: K): V | undefined {\n\t\tconst item = this._map.get(key);\n\t\tif (!item) {\n\t\t\treturn undefined;\n\t\t}\n\t\tthis._map.delete(key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tshift(): V | undefined {\n\t\tif (!this._head && !this._tail) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tconst item = this._head;\n\t\tthis._map.delete(item.key);\n\t\tthis.removeItem(item);\n\t\tthis._size--;\n\t\treturn item.value;\n\t}\n\n\tforEach(callbackfn: (value: V, key: K, map: LinkedMap<K, V>) => void, thisArg?: any): void {\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\twhile (current) {\n\t\t\tif (thisArg) {\n\t\t\t\tcallbackfn.bind(thisArg)(current.value, current.key, this);\n\t\t\t} else {\n\t\t\t\tcallbackfn(current.value, current.key, this);\n\t\t\t}\n\t\t\tif (this._state !== state) {\n\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t}\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n\n\tkeys(): IterableIterator<K> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<K> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<K> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.key, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<V> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<V> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result = { value: current.value, done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\tentries(): IterableIterator<[K, V]> {\n\t\tconst map = this;\n\t\tconst state = this._state;\n\t\tlet current = this._head;\n\t\tconst iterator: IterableIterator<[K, V]> = {\n\t\t\t[Symbol.iterator]() {\n\t\t\t\treturn iterator;\n\t\t\t},\n\t\t\tnext(): IteratorResult<[K, V]> {\n\t\t\t\tif (map._state !== state) {\n\t\t\t\t\tthrow new Error(`LinkedMap got modified during iteration.`);\n\t\t\t\t}\n\t\t\t\tif (current) {\n\t\t\t\t\tconst result: IteratorResult<[K, V]> = { value: [current.key, current.value], done: false };\n\t\t\t\t\tcurrent = current.next;\n\t\t\t\t\treturn result;\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true };\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn iterator;\n\t}\n\n\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\treturn this.entries();\n\t}\n\n\tprotected trimOld(newSize: number) {\n\t\tif (newSize >= this.size) {\n\t\t\treturn;\n\t\t}\n\t\tif (newSize === 0) {\n\t\t\tthis.clear();\n\t\t\treturn;\n\t\t}\n\t\tlet current = this._head;\n\t\tlet currentSize = this.size;\n\t\twhile (current && currentSize > newSize) {\n\t\t\tthis._map.delete(current.key);\n\t\t\tcurrent = current.next;\n\t\t\tcurrentSize--;\n\t\t}\n\t\tthis._head = current;\n\t\tthis._size = currentSize;\n\t\tif (current) {\n\t\t\tcurrent.previous = undefined;\n\t\t}\n\t\tthis._state++;\n\t}\n\n\tprivate addItemFirst(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._tail = item;\n\t\t} else if (!this._head) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t}\n\t\tthis._head = item;\n\t\tthis._state++;\n\t}\n\n\tprivate addItemLast(item: Item<K, V>): void {\n\t\t// First time Insert\n\t\tif (!this._head && !this._tail) {\n\t\t\tthis._head = item;\n\t\t} else if (!this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t} else {\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t}\n\t\tthis._tail = item;\n\t\tthis._state++;\n\t}\n\n\tprivate removeItem(item: Item<K, V>): void {\n\t\tif (item === this._head && item === this._tail) {\n\t\t\tthis._head = undefined;\n\t\t\tthis._tail = undefined;\n\t\t}\n\t\telse if (item === this._head) {\n\t\t\t// This can only happen if size === 1 which is handled\n\t\t\t// by the case above.\n\t\t\tif (!item.next) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.next.previous = undefined;\n\t\t\tthis._head = item.next;\n\t\t}\n\t\telse if (item === this._tail) {\n\t\t\t// This can only happen if size === 1 which is handled\n\t\t\t// by the case above.\n\t\t\tif (!item.previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\titem.previous.next = undefined;\n\t\t\tthis._tail = item.previous;\n\t\t}\n\t\telse {\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\t\t\tif (!next || !previous) {\n\t\t\t\tthrow new Error('Invalid list');\n\t\t\t}\n\t\t\tnext.previous = previous;\n\t\t\tprevious.next = next;\n\t\t}\n\t\titem.next = undefined;\n\t\titem.previous = undefined;\n\t\tthis._state++;\n\t}\n\n\tprivate touch(item: Item<K, V>, touch: Touch): void {\n\t\tif (!this._head || !this._tail) {\n\t\t\tthrow new Error('Invalid list');\n\t\t}\n\t\tif ((touch !== Touch.AsOld && touch !== Touch.AsNew)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (touch === Touch.AsOld) {\n\t\t\tif (item === this._head) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item\n\t\t\tif (item === this._tail) {\n\t\t\t\t// previous must be defined since item was not head but is tail\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tprevious!.next = undefined;\n\t\t\t\tthis._tail = previous;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\n\t\t\t// Insert the node at head\n\t\t\titem.previous = undefined;\n\t\t\titem.next = this._head;\n\t\t\tthis._head.previous = item;\n\t\t\tthis._head = item;\n\t\t\tthis._state++;\n\t\t} else if (touch === Touch.AsNew) {\n\t\t\tif (item === this._tail) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst next = item.next;\n\t\t\tconst previous = item.previous;\n\n\t\t\t// Unlink the item.\n\t\t\tif (item === this._head) {\n\t\t\t\t// next must be defined since item was not tail but is head\n\t\t\t\t// So there are more than on item in the map\n\t\t\t\tnext!.previous = undefined;\n\t\t\t\tthis._head = next;\n\t\t\t} else {\n\t\t\t\t// Both next and previous are not undefined since item was neither head nor tail.\n\t\t\t\tnext!.previous = previous;\n\t\t\t\tprevious!.next = next;\n\t\t\t}\n\t\t\titem.next = undefined;\n\t\t\titem.previous = this._tail;\n\t\t\tthis._tail.next = item;\n\t\t\tthis._tail = item;\n\t\t\tthis._state++;\n\t\t}\n\t}\n\n\ttoJSON(): [K, V][] {\n\t\tconst data: [K, V][] = [];\n\n\t\tthis.forEach((value, key) => {\n\t\t\tdata.push([key, value]);\n\t\t});\n\n\t\treturn data;\n\t}\n\n\tfromJSON(data: [K, V][]): void {\n\t\tthis.clear();\n\n\t\tfor (const [key, value] of data) {\n\t\t\tthis.set(key, value);\n\t\t}\n\t}\n}\n\nexport class LRUCache<K, V> extends LinkedMap<K, V> {\n\n\tprivate _limit: number;\n\tprivate _ratio: number;\n\n\tconstructor(limit: number, ratio: number = 1) {\n\t\tsuper();\n\t\tthis._limit = limit;\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t}\n\n\tget limit(): number {\n\t\treturn this._limit;\n\t}\n\n\tset limit(limit: number) {\n\t\tthis._limit = limit;\n\t\tthis.checkTrim();\n\t}\n\n\tget ratio(): number {\n\t\treturn this._ratio;\n\t}\n\n\tset ratio(ratio: number) {\n\t\tthis._ratio = Math.min(Math.max(0, ratio), 1);\n\t\tthis.checkTrim();\n\t}\n\n\toverride get(key: K, touch: Touch = Touch.AsNew): V | undefined {\n\t\treturn super.get(key, touch);\n\t}\n\n\tpeek(key: K): V | undefined {\n\t\treturn super.get(key, Touch.None);\n\t}\n\n\toverride set(key: K, value: V): this {\n\t\tsuper.set(key, value, Touch.AsNew);\n\t\tthis.checkTrim();\n\t\treturn this;\n\t}\n\n\tprivate checkTrim() {\n\t\tif (this.size > this._limit) {\n\t\t\tthis.trimOld(Math.round(this._limit * this._ratio));\n\t\t}\n\t}\n}\n\n/**\n * Wraps the map in type that only implements readonly properties. Useful\n * in the extension host to prevent the consumer from making any mutations.\n */\nexport class ReadonlyMapView<K, V> implements ReadonlyMap<K, V>{\n\treadonly #source: ReadonlyMap<K, V>;\n\n\tpublic get size() {\n\t\treturn this.#source.size;\n\t}\n\n\tconstructor(source: ReadonlyMap<K, V>) {\n\t\tthis.#source = source;\n\t}\n\n\tforEach(callbackfn: (value: V, key: K, map: ReadonlyMap<K, V>) => void, thisArg?: any): void {\n\t\tthis.#source.forEach(callbackfn, thisArg);\n\t}\n\n\tget(key: K): V | undefined {\n\t\treturn this.#source.get(key);\n\t}\n\n\thas(key: K): boolean {\n\t\treturn this.#source.has(key);\n\t}\n\n\tentries(): IterableIterator<[K, V]> {\n\t\treturn this.#source.entries();\n\t}\n\n\tkeys(): IterableIterator<K> {\n\t\treturn this.#source.keys();\n\t}\n\n\tvalues(): IterableIterator<V> {\n\t\treturn this.#source.values();\n\t}\n\n\t[Symbol.iterator](): IterableIterator<[K, V]> {\n\t\treturn this.#source.entries();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LRUCache } from 'vs/base/common/map';\n\nconst nfcCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFC(str: string): string {\n\treturn normalize(str, 'NFC', nfcCache);\n}\n\nconst nfdCache = new LRUCache<string, string>(10000); // bounded to 10000 elements\nexport function normalizeNFD(str: string): string {\n\treturn normalize(str, 'NFD', nfdCache);\n}\n\nconst nonAsciiCharactersPattern = /[^\\u0000-\\u0080]/;\nfunction normalize(str: string, form: string, normalizedCache: LRUCache<string, string>): string {\n\tif (!str) {\n\t\treturn str;\n\t}\n\n\tconst cached = normalizedCache.get(str);\n\tif (cached) {\n\t\treturn cached;\n\t}\n\n\tlet res: string;\n\tif (nonAsciiCharactersPattern.test(str)) {\n\t\tres = str.normalize(form);\n\t} else {\n\t\tres = str;\n\t}\n\n\t// Use the cache for fast lookup\n\tnormalizedCache.set(str, res);\n\n\treturn res;\n}\n\nexport const removeAccents: (str: string) => string = (function () {\n\t// transform into NFD form and remove accents\n\t// see: https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript/37511463#37511463\n\tconst regex = /[\\u0300-\\u036f]/g;\n\treturn function (str: string) {\n\t\treturn normalizeNFD(str).replace(regex, '');\n\t};\n})();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI, UriComponents } from 'vs/base/common/uri';\n\n/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray(array: any): array is any[] {\n\treturn Array.isArray(array);\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str: unknown): str is string {\n\treturn (typeof str === 'string');\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Array and each element in the array is a string.\n */\nexport function isStringArray(value: unknown): value is string[] {\n\treturn Array.isArray(value) && (<unknown[]>value).every(elem => isString(elem));\n}\n\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj: unknown): obj is Object {\n\t// The method can't do a type cast since there are type (like strings) which\n\t// are subclasses of any put not positvely matched by the function. Hence type\n\t// narrowing results in wrong results.\n\treturn typeof obj === 'object'\n\t\t&& obj !== null\n\t\t&& !Array.isArray(obj)\n\t\t&& !(obj instanceof RegExp)\n\t\t&& !(obj instanceof Date);\n}\n\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj: unknown): obj is number {\n\treturn (typeof obj === 'number' && !isNaN(obj));\n}\n\n/**\n * @returns whether the provided parameter is an Iterable, casting to the given generic\n */\nexport function isIterable<T>(obj: unknown): obj is Iterable<T> {\n\treturn !!obj && typeof (obj as any)[Symbol.iterator] === 'function';\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj: unknown): obj is boolean {\n\treturn (obj === true || obj === false);\n}\n\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj: unknown): obj is undefined {\n\treturn (typeof obj === 'undefined');\n}\n\n/**\n * @returns whether the provided parameter is defined.\n */\nexport function isDefined<T>(arg: T | null | undefined): arg is T {\n\treturn !isUndefinedOrNull(arg);\n}\n\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj: unknown): obj is undefined | null {\n\treturn (isUndefined(obj) || obj === null);\n}\n\n\nexport function assertType(condition: unknown, type?: string): asserts condition {\n\tif (!condition) {\n\t\tthrow new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n\t}\n}\n\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined<T>(arg: T | null | undefined): T {\n\tif (isUndefinedOrNull(arg)) {\n\t\tthrow new Error('Assertion Failed: argument is undefined or null');\n\t}\n\n\treturn arg;\n}\n\n/**\n * Asserts that each argument passed in is neither undefined nor null.\n */\nexport function assertAllDefined<T1, T2>(t1: T1 | null | undefined, t2: T2 | null | undefined): [T1, T2];\nexport function assertAllDefined<T1, T2, T3>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined): [T1, T2, T3];\nexport function assertAllDefined<T1, T2, T3, T4>(t1: T1 | null | undefined, t2: T2 | null | undefined, t3: T3 | null | undefined, t4: T4 | null | undefined): [T1, T2, T3, T4];\nexport function assertAllDefined(...args: (unknown | null | undefined)[]): unknown[] {\n\tconst result = [];\n\n\tfor (let i = 0; i < args.length; i++) {\n\t\tconst arg = args[i];\n\n\t\tif (isUndefinedOrNull(arg)) {\n\t\t\tthrow new Error(`Assertion Failed: argument at index ${i} is undefined or null`);\n\t\t}\n\n\t\tresult.push(arg);\n\t}\n\n\treturn result;\n}\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * @returns whether the provided parameter is an empty JavaScript Object or not.\n */\nexport function isEmptyObject(obj: unknown): obj is object {\n\tif (!isObject(obj)) {\n\t\treturn false;\n\t}\n\n\tfor (let key in obj) {\n\t\tif (hasOwnProperty.call(obj, key)) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj: unknown): obj is Function {\n\treturn (typeof obj === 'function');\n}\n\n/**\n * @returns whether the provided parameters is are JavaScript Function or not.\n */\nexport function areFunctions(...objects: unknown[]): boolean {\n\treturn objects.length > 0 && objects.every(isFunction);\n}\n\nexport type TypeConstraint = string | Function;\n\nexport function validateConstraints(args: unknown[], constraints: Array<TypeConstraint | undefined>): void {\n\tconst len = Math.min(args.length, constraints.length);\n\tfor (let i = 0; i < len; i++) {\n\t\tvalidateConstraint(args[i], constraints[i]);\n\t}\n}\n\nexport function validateConstraint(arg: unknown, constraint: TypeConstraint | undefined): void {\n\n\tif (isString(constraint)) {\n\t\tif (typeof arg !== constraint) {\n\t\t\tthrow new Error(`argument does not match constraint: typeof ${constraint}`);\n\t\t}\n\t} else if (isFunction(constraint)) {\n\t\ttry {\n\t\t\tif (arg instanceof constraint) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} catch {\n\t\t\t// ignore\n\t\t}\n\t\tif (!isUndefinedOrNull(arg) && (arg as any).constructor === constraint) {\n\t\t\treturn;\n\t\t}\n\t\tif (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n\t\t\treturn;\n\t\t}\n\t\tthrow new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n\t}\n}\n\nexport function getAllPropertyNames(obj: object): string[] {\n\tlet res: string[] = [];\n\tlet proto = Object.getPrototypeOf(obj);\n\twhile (Object.prototype !== proto) {\n\t\tres = res.concat(Object.getOwnPropertyNames(proto));\n\t\tproto = Object.getPrototypeOf(proto);\n\t}\n\treturn res;\n}\n\nexport function getAllMethodNames(obj: object): string[] {\n\tconst methods: string[] = [];\n\tfor (const prop of getAllPropertyNames(obj)) {\n\t\tif (typeof (obj as any)[prop] === 'function') {\n\t\t\tmethods.push(prop);\n\t\t}\n\t}\n\treturn methods;\n}\n\nexport function createProxyObject<T extends object>(methodNames: string[], invoke: (method: string, args: unknown[]) => unknown): T {\n\tconst createProxyMethod = (method: string): () => unknown => {\n\t\treturn function () {\n\t\t\tconst args = Array.prototype.slice.call(arguments, 0);\n\t\t\treturn invoke(method, args);\n\t\t};\n\t};\n\n\tlet result = {} as T;\n\tfor (const methodName of methodNames) {\n\t\t(<any>result)[methodName] = createProxyMethod(methodName);\n\t}\n\treturn result;\n}\n\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined<T>(x: T | null): T | undefined {\n\treturn x === null ? undefined : x;\n}\n\n/**\n * Converts undefined to null, passes all other values through.\n */\nexport function withUndefinedAsNull<T>(x: T | undefined): T | null {\n\treturn typeof x === 'undefined' ? null : x;\n}\n\ntype AddFirstParameterToFunction<T, TargetFunctionsReturnType, FirstParameter> = T extends (...args: any[]) => TargetFunctionsReturnType ?\n\t// Function: add param to function\n\t(firstArg: FirstParameter, ...args: Parameters<T>) => ReturnType<T> :\n\n\t// Else: just leave as is\n\tT;\n\n/**\n * Allows to add a first parameter to functions of a type.\n */\nexport type AddFirstParameterToFunctions<Target, TargetFunctionsReturnType, FirstParameter> = {\n\t// For every property\n\t[K in keyof Target]: AddFirstParameterToFunction<Target[K], TargetFunctionsReturnType, FirstParameter>;\n};\n\n/**\n * Mapped-type that replaces all occurrences of URI with UriComponents\n */\nexport type UriDto<T> = { [K in keyof T]: T[K] extends URI\n\t? UriComponents\n\t: UriDto<T[K]> };\n\n/**\n * Mapped-type that replaces all occurrences of URI with UriComponents and\n * drops all functions.\n */\nexport type Dto<T> = T extends { toJSON(): infer U }\n\t? U\n\t: T extends object\n\t? { [k in keyof T]: Dto<T[k]>; }\n\t: T;\n\nexport function NotImplementedProxy<T>(name: string): { new(): T } {\n\treturn <any>class {\n\t\tconstructor() {\n\t\t\treturn new Proxy({}, {\n\t\t\t\tget(target: any, prop: PropertyKey) {\n\t\t\t\t\tif (target[prop]) {\n\t\t\t\t\t\treturn target[prop];\n\t\t\t\t\t}\n\t\t\t\t\tthrow new Error(`Not Implemented: ${name}->${String(prop)}`);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t};\n}\n\nexport function assertNever(value: never, message = 'Unreachable'): never {\n\tthrow new Error(message);\n}\n\nexport function isPromise<T>(obj: unknown): obj is Promise<T> {\n\treturn !!obj && typeof (obj as Promise<T>).then === 'function' && typeof (obj as Promise<T>).catch === 'function';\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { isAbsolute, join, normalize, posix, sep } from 'vs/base/common/path';\nimport { isWindows } from 'vs/base/common/platform';\nimport { equalsIgnoreCase, rtrim, startsWithIgnoreCase } from 'vs/base/common/strings';\nimport { isNumber } from 'vs/base/common/types';\n\nexport function isPathSeparator(code: number) {\n\treturn code === CharCode.Slash || code === CharCode.Backslash;\n}\n\n/**\n * Takes a Windows OS path and changes backward slashes to forward slashes.\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toSlashes(osPath: string) {\n\treturn osPath.replace(/[\\\\/]/g, posix.sep);\n}\n\n/**\n * Takes a Windows OS path (using backward or forward slashes) and turns it into a posix path:\n * - turns backward slashes into forward slashes\n * - makes it absolute if it starts with a drive letter\n * This should only be done for OS paths from Windows (or user provided paths potentially from Windows).\n * Using it on a Linux or MaxOS path might change it.\n */\nexport function toPosixPath(osPath: string) {\n\tif (osPath.indexOf('/') === -1) {\n\t\tosPath = toSlashes(osPath);\n\t}\n\tif (/^[a-zA-Z]:(\\/|$)/.test(osPath)) { // starts with a drive letter\n\t\tosPath = '/' + osPath;\n\t}\n\treturn osPath;\n}\n\n/**\n * Computes the _root_ this path, like `getRoot('c:\\files') === c:\\`,\n * `getRoot('files:///files/path') === files:///`,\n * or `getRoot('\\\\server\\shares\\path') === \\\\server\\shares\\`\n */\nexport function getRoot(path: string, sep: string = posix.sep): string {\n\tif (!path) {\n\t\treturn '';\n\t}\n\n\tconst len = path.length;\n\tconst firstLetter = path.charCodeAt(0);\n\tif (isPathSeparator(firstLetter)) {\n\t\tif (isPathSeparator(path.charCodeAt(1))) {\n\t\t\t// UNC candidate \\\\localhost\\shares\\ddd\n\t\t\t//               ^^^^^^^^^^^^^^^^^^^\n\t\t\tif (!isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\tlet pos = 3;\n\t\t\t\tconst start = pos;\n\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (start !== pos && !isPathSeparator(path.charCodeAt(pos + 1))) {\n\t\t\t\t\tpos += 1;\n\t\t\t\t\tfor (; pos < len; pos++) {\n\t\t\t\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\t\t\t\treturn path.slice(0, pos + 1) // consume this separator\n\t\t\t\t\t\t\t\t.replace(/[\\\\/]/g, sep);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// /user/far\n\t\t// ^\n\t\treturn sep;\n\n\t} else if (isWindowsDriveLetter(firstLetter)) {\n\t\t// check for windows drive letter c:\\ or c:\n\n\t\tif (path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tif (isPathSeparator(path.charCodeAt(2))) {\n\t\t\t\t// C:\\fff\n\t\t\t\t// ^^^\n\t\t\t\treturn path.slice(0, 2) + sep;\n\t\t\t} else {\n\t\t\t\t// C:\n\t\t\t\t// ^^\n\t\t\t\treturn path.slice(0, 2);\n\t\t\t}\n\t\t}\n\t}\n\n\t// check for URI\n\t// scheme://authority/path\n\t// ^^^^^^^^^^^^^^^^^^^\n\tlet pos = path.indexOf('://');\n\tif (pos !== -1) {\n\t\tpos += 3; // 3 -> \"://\".length\n\t\tfor (; pos < len; pos++) {\n\t\t\tif (isPathSeparator(path.charCodeAt(pos))) {\n\t\t\t\treturn path.slice(0, pos + 1); // consume this separator\n\t\t\t}\n\t\t}\n\t}\n\n\treturn '';\n}\n\n/**\n * Check if the path follows this pattern: `\\\\hostname\\sharename`.\n *\n * @see https://msdn.microsoft.com/en-us/library/gg465305.aspx\n * @return A boolean indication if the path is a UNC path, on none-windows\n * always false.\n */\nexport function isUNC(path: string): boolean {\n\tif (!isWindows) {\n\t\t// UNC is a windows concept\n\t\treturn false;\n\t}\n\n\tif (!path || path.length < 5) {\n\t\t// at least \\\\a\\b\n\t\treturn false;\n\t}\n\n\tlet code = path.charCodeAt(0);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(1);\n\tif (code !== CharCode.Backslash) {\n\t\treturn false;\n\t}\n\tlet pos = 2;\n\tconst start = pos;\n\tfor (; pos < path.length; pos++) {\n\t\tcode = path.charCodeAt(pos);\n\t\tif (code === CharCode.Backslash) {\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (start === pos) {\n\t\treturn false;\n\t}\n\tcode = path.charCodeAt(pos + 1);\n\tif (isNaN(code) || code === CharCode.Backslash) {\n\t\treturn false;\n\t}\n\treturn true;\n}\n\n// Reference: https://en.wikipedia.org/wiki/Filename\nconst WINDOWS_INVALID_FILE_CHARS = /[\\\\/:\\*\\?\"<>\\|]/g;\nconst UNIX_INVALID_FILE_CHARS = /[\\\\/]/g;\nconst WINDOWS_FORBIDDEN_NAMES = /^(con|prn|aux|clock\\$|nul|lpt[0-9]|com[0-9])(\\.(.*?))?$/i;\nexport function isValidBasename(name: string | null | undefined, isWindowsOS: boolean = isWindows): boolean {\n\tconst invalidFileChars = isWindowsOS ? WINDOWS_INVALID_FILE_CHARS : UNIX_INVALID_FILE_CHARS;\n\n\tif (!name || name.length === 0 || /^\\s+$/.test(name)) {\n\t\treturn false; // require a name that is not just whitespace\n\t}\n\n\tinvalidFileChars.lastIndex = 0; // the holy grail of software development\n\tif (invalidFileChars.test(name)) {\n\t\treturn false; // check for certain invalid file characters\n\t}\n\n\tif (isWindowsOS && WINDOWS_FORBIDDEN_NAMES.test(name)) {\n\t\treturn false; // check for certain invalid file names\n\t}\n\n\tif (name === '.' || name === '..') {\n\t\treturn false; // check for reserved values\n\t}\n\n\tif (isWindowsOS && name[name.length - 1] === '.') {\n\t\treturn false; // Windows: file cannot end with a \".\"\n\t}\n\n\tif (isWindowsOS && name.length !== name.trim().length) {\n\t\treturn false; // Windows: file cannot end with a whitespace\n\t}\n\n\tif (name.length > 255) {\n\t\treturn false; // most file systems do not allow files > 255 length\n\t}\n\n\treturn true;\n}\n\nexport function isEqual(pathA: string, pathB: string, ignoreCase?: boolean): boolean {\n\tconst identityEquals = (pathA === pathB);\n\tif (!ignoreCase || identityEquals) {\n\t\treturn identityEquals;\n\t}\n\n\tif (!pathA || !pathB) {\n\t\treturn false;\n\t}\n\n\treturn equalsIgnoreCase(pathA, pathB);\n}\n\nexport function isEqualOrParent(base: string, parentCandidate: string, ignoreCase?: boolean, separator = sep): boolean {\n\tif (base === parentCandidate) {\n\t\treturn true;\n\t}\n\n\tif (!base || !parentCandidate) {\n\t\treturn false;\n\t}\n\n\tif (parentCandidate.length > base.length) {\n\t\treturn false;\n\t}\n\n\tif (ignoreCase) {\n\t\tconst beginsWith = startsWithIgnoreCase(base, parentCandidate);\n\t\tif (!beginsWith) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (parentCandidate.length === base.length) {\n\t\t\treturn true; // same path, different casing\n\t\t}\n\n\t\tlet sepOffset = parentCandidate.length;\n\t\tif (parentCandidate.charAt(parentCandidate.length - 1) === separator) {\n\t\t\tsepOffset--; // adjust the expected sep offset in case our candidate already ends in separator character\n\t\t}\n\n\t\treturn base.charAt(sepOffset) === separator;\n\t}\n\n\tif (parentCandidate.charAt(parentCandidate.length - 1) !== separator) {\n\t\tparentCandidate += separator;\n\t}\n\n\treturn base.indexOf(parentCandidate) === 0;\n}\n\nexport function isWindowsDriveLetter(char0: number): boolean {\n\treturn char0 >= CharCode.A && char0 <= CharCode.Z || char0 >= CharCode.a && char0 <= CharCode.z;\n}\n\nexport function sanitizeFilePath(candidate: string, cwd: string): string {\n\n\t// Special case: allow to open a drive letter without trailing backslash\n\tif (isWindows && candidate.endsWith(':')) {\n\t\tcandidate += sep;\n\t}\n\n\t// Ensure absolute\n\tif (!isAbsolute(candidate)) {\n\t\tcandidate = join(cwd, candidate);\n\t}\n\n\t// Ensure normalized\n\tcandidate = normalize(candidate);\n\n\t// Ensure no trailing slash/backslash\n\tif (isWindows) {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open drive root ('C:\\')\n\t\tif (candidate.endsWith(':')) {\n\t\t\tcandidate += sep;\n\t\t}\n\n\t} else {\n\t\tcandidate = rtrim(candidate, sep);\n\n\t\t// Special case: allow to open root ('/')\n\t\tif (!candidate) {\n\t\t\tcandidate = sep;\n\t\t}\n\t}\n\n\treturn candidate;\n}\n\nexport function isRootOrDriveLetter(path: string): boolean {\n\tconst pathNormalized = normalize(path);\n\n\tif (isWindows) {\n\t\tif (path.length > 3) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn hasDriveLetter(pathNormalized) &&\n\t\t\t(path.length === 2 || pathNormalized.charCodeAt(2) === CharCode.Backslash);\n\t}\n\n\treturn pathNormalized === posix.sep;\n}\n\nexport function hasDriveLetter(path: string, continueAsWindows?: boolean): boolean {\n\tconst isWindowsPath: boolean = ((continueAsWindows !== undefined) ? continueAsWindows : isWindows);\n\tif (isWindowsPath) {\n\t\treturn isWindowsDriveLetter(path.charCodeAt(0)) && path.charCodeAt(1) === CharCode.Colon;\n\t}\n\n\treturn false;\n}\n\nexport function getDriveLetter(path: string): string | undefined {\n\treturn hasDriveLetter(path) ? path[0] : undefined;\n}\n\nexport function indexOfPath(path: string, candidate: string, ignoreCase?: boolean): number {\n\tif (candidate.length > path.length) {\n\t\treturn -1;\n\t}\n\n\tif (path === candidate) {\n\t\treturn 0;\n\t}\n\n\tif (ignoreCase) {\n\t\tpath = path.toLowerCase();\n\t\tcandidate = candidate.toLowerCase();\n\t}\n\n\treturn path.indexOf(candidate);\n}\n\nexport interface IPathWithLineAndColumn {\n\tpath: string;\n\tline?: number;\n\tcolumn?: number;\n}\n\nexport function parseLineAndColumnAware(rawPath: string): IPathWithLineAndColumn {\n\tconst segments = rawPath.split(':'); // C:\\file.txt:<line>:<column>\n\n\tlet path: string | undefined = undefined;\n\tlet line: number | undefined = undefined;\n\tlet column: number | undefined = undefined;\n\n\tsegments.forEach(segment => {\n\t\tconst segmentAsNumber = Number(segment);\n\t\tif (!isNumber(segmentAsNumber)) {\n\t\t\tpath = !!path ? [path, segment].join(':') : segment; // a colon can well be part of a path (e.g. C:\\...)\n\t\t} else if (line === undefined) {\n\t\t\tline = segmentAsNumber;\n\t\t} else if (column === undefined) {\n\t\t\tcolumn = segmentAsNumber;\n\t\t}\n\t});\n\n\tif (!path) {\n\t\tthrow new Error('Format for `--goto` should be: `FILE:LINE(:COLUMN)`');\n\t}\n\n\treturn {\n\t\tpath,\n\t\tline: line !== undefined ? line : undefined,\n\t\tcolumn: column !== undefined ? column : line !== undefined ? 1 : undefined // if we have a line, make sure column is also set\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isArray, isObject, isUndefinedOrNull } from 'vs/base/common/types';\n\nexport function deepClone<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tif (obj instanceof RegExp) {\n\t\t// See https://github.com/microsoft/TypeScript/issues/10990\n\t\treturn obj as any;\n\t}\n\tconst result: any = Array.isArray(obj) ? [] : {};\n\tObject.keys(<any>obj).forEach((key: string) => {\n\t\tif ((<any>obj)[key] && typeof (<any>obj)[key] === 'object') {\n\t\t\tresult[key] = deepClone((<any>obj)[key]);\n\t\t} else {\n\t\t\tresult[key] = (<any>obj)[key];\n\t\t}\n\t});\n\treturn result;\n}\n\nexport function deepFreeze<T>(obj: T): T {\n\tif (!obj || typeof obj !== 'object') {\n\t\treturn obj;\n\t}\n\tconst stack: any[] = [obj];\n\twhile (stack.length > 0) {\n\t\tconst obj = stack.shift();\n\t\tObject.freeze(obj);\n\t\tfor (const key in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst prop = obj[key];\n\t\t\t\tif (typeof prop === 'object' && !Object.isFrozen(prop)) {\n\t\t\t\t\tstack.push(prop);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn obj;\n}\n\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport function cloneAndChange(obj: any, changer: (orig: any) => any): any {\n\treturn _cloneAndChange(obj, changer, new Set());\n}\n\nfunction _cloneAndChange(obj: any, changer: (orig: any) => any, seen: Set<any>): any {\n\tif (isUndefinedOrNull(obj)) {\n\t\treturn obj;\n\t}\n\n\tconst changed = changer(obj);\n\tif (typeof changed !== 'undefined') {\n\t\treturn changed;\n\t}\n\n\tif (isArray(obj)) {\n\t\tconst r1: any[] = [];\n\t\tfor (const e of obj) {\n\t\t\tr1.push(_cloneAndChange(e, changer, seen));\n\t\t}\n\t\treturn r1;\n\t}\n\n\tif (isObject(obj)) {\n\t\tif (seen.has(obj)) {\n\t\t\tthrow new Error('Cannot clone recursive data-structure');\n\t\t}\n\t\tseen.add(obj);\n\t\tconst r2 = {};\n\t\tfor (let i2 in obj) {\n\t\t\tif (_hasOwnProperty.call(obj, i2)) {\n\t\t\t\t(r2 as any)[i2] = _cloneAndChange(obj[i2], changer, seen);\n\t\t\t}\n\t\t}\n\t\tseen.delete(obj);\n\t\treturn r2;\n\t}\n\n\treturn obj;\n}\n\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination: any, source: any, overwrite: boolean = true): any {\n\tif (!isObject(destination)) {\n\t\treturn source;\n\t}\n\n\tif (isObject(source)) {\n\t\tObject.keys(source).forEach(key => {\n\t\t\tif (key in destination) {\n\t\t\t\tif (overwrite) {\n\t\t\t\t\tif (isObject(destination[key]) && isObject(source[key])) {\n\t\t\t\t\t\tmixin(destination[key], source[key], overwrite);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdestination[key] = source[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdestination[key] = source[key];\n\t\t\t}\n\t\t});\n\t}\n\treturn destination;\n}\n\nexport function equals(one: any, other: any): boolean {\n\tif (one === other) {\n\t\treturn true;\n\t}\n\tif (one === null || one === undefined || other === null || other === undefined) {\n\t\treturn false;\n\t}\n\tif (typeof one !== typeof other) {\n\t\treturn false;\n\t}\n\tif (typeof one !== 'object') {\n\t\treturn false;\n\t}\n\tif ((Array.isArray(one)) !== (Array.isArray(other))) {\n\t\treturn false;\n\t}\n\n\tlet i: number;\n\tlet key: string;\n\n\tif (Array.isArray(one)) {\n\t\tif (one.length !== other.length) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < one.length; i++) {\n\t\t\tif (!equals(one[i], other[i])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t} else {\n\t\tconst oneKeys: string[] = [];\n\n\t\tfor (key in one) {\n\t\t\toneKeys.push(key);\n\t\t}\n\t\toneKeys.sort();\n\t\tconst otherKeys: string[] = [];\n\t\tfor (key in other) {\n\t\t\totherKeys.push(key);\n\t\t}\n\t\totherKeys.sort();\n\t\tif (!equals(oneKeys, otherKeys)) {\n\t\t\treturn false;\n\t\t}\n\t\tfor (i = 0; i < oneKeys.length; i++) {\n\t\t\tif (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n * Calls `JSON.Stringify` with a replacer to break apart any circular references.\n * This prevents `JSON`.stringify` from throwing the exception\n *  \"Uncaught TypeError: Converting circular structure to JSON\"\n */\nexport function safeStringify(obj: any): string {\n\tconst seen = new Set<any>();\n\treturn JSON.stringify(obj, (key, value) => {\n\t\tif (isObject(value) || Array.isArray(value)) {\n\t\t\tif (seen.has(value)) {\n\t\t\t\treturn '[Circular]';\n\t\t\t} else {\n\t\t\t\tseen.add(value);\n\t\t\t}\n\t\t}\n\t\treturn value;\n\t});\n}\n\nexport function getOrDefault<T, R>(obj: T, fn: (obj: T) => R | undefined, defaultValue: R): R {\n\tconst result = fn(obj);\n\treturn typeof result === 'undefined' ? defaultValue : result;\n}\n\ntype obj = { [key: string]: any; };\n/**\n * Returns an object that has keys for each value that is different in the base object. Keys\n * that do not exist in the target but in the base object are not considered.\n *\n * Note: This is not a deep-diffing method, so the values are strictly taken into the resulting\n * object if they differ.\n *\n * @param base the object to diff against\n * @param obj the object to use for diffing\n */\nexport function distinct(base: obj, target: obj): obj {\n\tconst result = Object.create(null);\n\n\tif (!base || !target) {\n\t\treturn result;\n\t}\n\n\tconst targetKeys = Object.keys(target);\n\ttargetKeys.forEach(k => {\n\t\tconst baseValue = base[k];\n\t\tconst targetValue = target[k];\n\n\t\tif (!equals(baseValue, targetValue)) {\n\t\t\tresult[k] = targetValue;\n\t\t}\n\t});\n\n\treturn result;\n}\n\nexport function getCaseInsensitive(target: obj, key: string): any {\n\tconst lowercaseKey = key.toLowerCase();\n\tconst equivalentKey = Object.keys(target).find(k => k.toLowerCase() === lowercaseKey);\n\treturn equivalentKey ? target[equivalentKey] : target[key];\n}\n\nexport function filter(obj: obj, predicate: (key: string, value: any) => boolean): obj {\n\tconst result = Object.create(null);\n\tfor (const [key, value] of Object.entries(obj)) {\n\t\tif (predicate(key, value)) {\n\t\t\tresult[key] = value;\n\t\t}\n\t}\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { MarshalledId } from 'vs/base/common/marshalling';\nimport * as paths from 'vs/base/common/path';\nimport { isWindows } from 'vs/base/common/platform';\n\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\n\nfunction _validateUri(ret: URI, _strict?: boolean): void {\n\n\t// scheme, must be set\n\tif (!ret.scheme && _strict) {\n\t\tthrow new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n\t}\n\n\t// scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n\t// ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n\tif (ret.scheme && !_schemePattern.test(ret.scheme)) {\n\t\tthrow new Error('[UriError]: Scheme contains illegal characters.');\n\t}\n\n\t// path, http://tools.ietf.org/html/rfc3986#section-3.3\n\t// If a URI contains an authority component, then the path component\n\t// must either be empty or begin with a slash (\"/\") character.  If a URI\n\t// does not contain an authority component, then the path cannot begin\n\t// with two slash characters (\"//\").\n\tif (ret.path) {\n\t\tif (ret.authority) {\n\t\t\tif (!_singleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n\t\t\t}\n\t\t} else {\n\t\t\tif (_doubleSlashStart.test(ret.path)) {\n\t\t\t\tthrow new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n\t\t\t}\n\t\t}\n\t}\n}\n\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme: string, _strict: boolean): string {\n\tif (!scheme && !_strict) {\n\t\treturn 'file';\n\t}\n\treturn scheme;\n}\n\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme: string, path: string): string {\n\n\t// the slash-character is our 'default base' as we don't\n\t// support constructing URIs relative to other URIs. This\n\t// also means that we alter and potentially break paths.\n\t// see https://tools.ietf.org/html/rfc3986#section-5.1.4\n\tswitch (scheme) {\n\t\tcase 'https':\n\t\tcase 'http':\n\t\tcase 'file':\n\t\t\tif (!path) {\n\t\t\t\tpath = _slash;\n\t\t\t} else if (path[0] !== _slash) {\n\t\t\t\tpath = _slash + path;\n\t\t\t}\n\t\t\tbreak;\n\t}\n\treturn path;\n}\n\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI implements UriComponents {\n\n\tstatic isUri(thing: any): thing is URI {\n\t\tif (thing instanceof URI) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!thing) {\n\t\t\treturn false;\n\t\t}\n\t\treturn typeof (<URI>thing).authority === 'string'\n\t\t\t&& typeof (<URI>thing).fragment === 'string'\n\t\t\t&& typeof (<URI>thing).path === 'string'\n\t\t\t&& typeof (<URI>thing).query === 'string'\n\t\t\t&& typeof (<URI>thing).scheme === 'string'\n\t\t\t&& typeof (<URI>thing).fsPath === 'string'\n\t\t\t&& typeof (<URI>thing).with === 'function'\n\t\t\t&& typeof (<URI>thing).toString === 'function';\n\t}\n\n\t/**\n\t * scheme is the 'http' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part before the first colon.\n\t */\n\treadonly scheme: string;\n\n\t/**\n\t * authority is the 'www.msft.com' part of 'http://www.msft.com/some/path?query#fragment'.\n\t * The part between the first double slashes and the next slash.\n\t */\n\treadonly authority: string;\n\n\t/**\n\t * path is the '/some/path' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly path: string;\n\n\t/**\n\t * query is the 'query' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly query: string;\n\n\t/**\n\t * fragment is the 'fragment' part of 'http://www.msft.com/some/path?query#fragment'.\n\t */\n\treadonly fragment: string;\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(scheme: string, authority?: string, path?: string, query?: string, fragment?: string, _strict?: boolean);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(components: UriComponents);\n\n\t/**\n\t * @internal\n\t */\n\tprotected constructor(schemeOrData: string | UriComponents, authority?: string, path?: string, query?: string, fragment?: string, _strict: boolean = false) {\n\n\t\tif (typeof schemeOrData === 'object') {\n\t\t\tthis.scheme = schemeOrData.scheme || _empty;\n\t\t\tthis.authority = schemeOrData.authority || _empty;\n\t\t\tthis.path = schemeOrData.path || _empty;\n\t\t\tthis.query = schemeOrData.query || _empty;\n\t\t\tthis.fragment = schemeOrData.fragment || _empty;\n\t\t\t// no validation because it's this URI\n\t\t\t// that creates uri components.\n\t\t\t// _validateUri(this);\n\t\t} else {\n\t\t\tthis.scheme = _schemeFix(schemeOrData, _strict);\n\t\t\tthis.authority = authority || _empty;\n\t\t\tthis.path = _referenceResolution(this.scheme, path || _empty);\n\t\t\tthis.query = query || _empty;\n\t\t\tthis.fragment = fragment || _empty;\n\n\t\t\t_validateUri(this, _strict);\n\t\t}\n\t}\n\n\t// ---- filesystem path -----------------------\n\n\t/**\n\t * Returns a string representing the corresponding file system path of this URI.\n\t * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n\t * platform specific path separator.\n\t *\n\t * * Will *not* validate the path for invalid characters and semantics.\n\t * * Will *not* look at the scheme of this URI.\n\t * * The result shall *not* be used for display purposes but for accessing a file on disk.\n\t *\n\t *\n\t * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n\t * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n\t *\n\t * ```ts\n\t\tconst u = URI.parse('file://server/c$/folder/file.txt')\n\t\tu.authority === 'server'\n\t\tu.path === '/shares/c$/file.txt'\n\t\tu.fsPath === '\\\\server\\c$\\folder\\file.txt'\n\t```\n\t *\n\t * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n\t * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n\t * with URIs that represent files on disk (`file` scheme).\n\t */\n\tget fsPath(): string {\n\t\t// if (this.scheme !== 'file') {\n\t\t// \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n\t\t// }\n\t\treturn uriToFsPath(this, false);\n\t}\n\n\t// ---- modify to new -------------------------\n\n\twith(change: { scheme?: string; authority?: string | null; path?: string | null; query?: string | null; fragment?: string | null }): URI {\n\n\t\tif (!change) {\n\t\t\treturn this;\n\t\t}\n\n\t\tlet { scheme, authority, path, query, fragment } = change;\n\t\tif (scheme === undefined) {\n\t\t\tscheme = this.scheme;\n\t\t} else if (scheme === null) {\n\t\t\tscheme = _empty;\n\t\t}\n\t\tif (authority === undefined) {\n\t\t\tauthority = this.authority;\n\t\t} else if (authority === null) {\n\t\t\tauthority = _empty;\n\t\t}\n\t\tif (path === undefined) {\n\t\t\tpath = this.path;\n\t\t} else if (path === null) {\n\t\t\tpath = _empty;\n\t\t}\n\t\tif (query === undefined) {\n\t\t\tquery = this.query;\n\t\t} else if (query === null) {\n\t\t\tquery = _empty;\n\t\t}\n\t\tif (fragment === undefined) {\n\t\t\tfragment = this.fragment;\n\t\t} else if (fragment === null) {\n\t\t\tfragment = _empty;\n\t\t}\n\n\t\tif (scheme === this.scheme\n\t\t\t&& authority === this.authority\n\t\t\t&& path === this.path\n\t\t\t&& query === this.query\n\t\t\t&& fragment === this.fragment) {\n\n\t\t\treturn this;\n\t\t}\n\n\t\treturn new Uri(scheme, authority, path, query, fragment);\n\t}\n\n\t// ---- parse & validate ------------------------\n\n\t/**\n\t * Creates a new URI from a string, e.g. `http://www.msft.com/some/path`,\n\t * `file:///usr/home`, or `scheme:with/path`.\n\t *\n\t * @param value A string which represents an URI (see `URI#toString`).\n\t */\n\tstatic parse(value: string, _strict: boolean = false): URI {\n\t\tconst match = _regexp.exec(value);\n\t\tif (!match) {\n\t\t\treturn new Uri(_empty, _empty, _empty, _empty, _empty);\n\t\t}\n\t\treturn new Uri(\n\t\t\tmatch[2] || _empty,\n\t\t\tpercentDecode(match[4] || _empty),\n\t\t\tpercentDecode(match[5] || _empty),\n\t\t\tpercentDecode(match[7] || _empty),\n\t\t\tpercentDecode(match[9] || _empty),\n\t\t\t_strict\n\t\t);\n\t}\n\n\t/**\n\t * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n\t * `/usr/home`, or `\\\\server\\share\\some\\path`.\n\t *\n\t * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n\t * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n\t * `URI.parse('file://' + path)` because the path might contain characters that are\n\t * interpreted (# and ?). See the following sample:\n\t * ```ts\n\tconst good = URI.file('/coding/c#/project1');\n\tgood.scheme === 'file';\n\tgood.path === '/coding/c#/project1';\n\tgood.fragment === '';\n\tconst bad = URI.parse('file://' + '/coding/c#/project1');\n\tbad.scheme === 'file';\n\tbad.path === '/coding/c'; // path is now broken\n\tbad.fragment === '/project1';\n\t```\n\t *\n\t * @param path A file system path (see `URI#fsPath`)\n\t */\n\tstatic file(path: string): URI {\n\n\t\tlet authority = _empty;\n\n\t\t// normalize to fwd-slashes on windows,\n\t\t// on other systems bwd-slashes are valid\n\t\t// filename character, eg /f\\oo/ba\\r.txt\n\t\tif (isWindows) {\n\t\t\tpath = path.replace(/\\\\/g, _slash);\n\t\t}\n\n\t\t// check for authority as used in UNC shares\n\t\t// or use the path as given\n\t\tif (path[0] === _slash && path[1] === _slash) {\n\t\t\tconst idx = path.indexOf(_slash, 2);\n\t\t\tif (idx === -1) {\n\t\t\t\tauthority = path.substring(2);\n\t\t\t\tpath = _slash;\n\t\t\t} else {\n\t\t\t\tauthority = path.substring(2, idx);\n\t\t\t\tpath = path.substring(idx) || _slash;\n\t\t\t}\n\t\t}\n\n\t\treturn new Uri('file', authority, path, _empty, _empty);\n\t}\n\n\tstatic from(components: { scheme: string; authority?: string; path?: string; query?: string; fragment?: string }): URI {\n\t\tconst result = new Uri(\n\t\t\tcomponents.scheme,\n\t\t\tcomponents.authority,\n\t\t\tcomponents.path,\n\t\t\tcomponents.query,\n\t\t\tcomponents.fragment,\n\t\t);\n\t\t_validateUri(result, true);\n\t\treturn result;\n\t}\n\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param uri The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tstatic joinPath(uri: URI, ...pathFragment: string[]): URI {\n\t\tif (!uri.path) {\n\t\t\tthrow new Error(`[UriError]: cannot call joinPath on URI without path`);\n\t\t}\n\t\tlet newPath: string;\n\t\tif (isWindows && uri.scheme === 'file') {\n\t\t\tnewPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n\t\t} else {\n\t\t\tnewPath = paths.posix.join(uri.path, ...pathFragment);\n\t\t}\n\t\treturn uri.with({ path: newPath });\n\t}\n\n\t// ---- printing/externalize ---------------------------\n\n\t/**\n\t * Creates a string representation for this URI. It's guaranteed that calling\n\t * `URI.parse` with the result of this function creates an URI which is equal\n\t * to this URI.\n\t *\n\t * * The result shall *not* be used for display purposes but for externalization or transport.\n\t * * The result will be encoded using the percentage encoding and encoding happens mostly\n\t * ignore the scheme-specific encoding rules.\n\t *\n\t * @param skipEncoding Do not encode the result, default is `false`\n\t */\n\ttoString(skipEncoding: boolean = false): string {\n\t\treturn _asFormatted(this, skipEncoding);\n\t}\n\n\ttoJSON(): UriComponents {\n\t\treturn this;\n\t}\n\n\tstatic revive(data: UriComponents | URI): URI;\n\tstatic revive(data: UriComponents | URI | undefined): URI | undefined;\n\tstatic revive(data: UriComponents | URI | null): URI | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null;\n\tstatic revive(data: UriComponents | URI | undefined | null): URI | undefined | null {\n\t\tif (!data) {\n\t\t\treturn data;\n\t\t} else if (data instanceof URI) {\n\t\t\treturn data;\n\t\t} else {\n\t\t\tconst result = new Uri(data);\n\t\t\tresult._formatted = (<UriState>data).external;\n\t\t\tresult._fsPath = (<UriState>data)._sep === _pathSepMarker ? (<UriState>data).fsPath : null;\n\t\t\treturn result;\n\t\t}\n\t}\n}\n\nexport interface UriComponents {\n\tscheme: string;\n\tauthority: string;\n\tpath: string;\n\tquery: string;\n\tfragment: string;\n}\n\ninterface UriState extends UriComponents {\n\t$mid: MarshalledId.Uri;\n\texternal: string;\n\tfsPath: string;\n\t_sep: 1 | undefined;\n}\n\nconst _pathSepMarker = isWindows ? 1 : undefined;\n\n// This class exists so that URI is compatible with vscode.Uri (API).\nclass Uri extends URI {\n\n\t_formatted: string | null = null;\n\t_fsPath: string | null = null;\n\n\toverride get fsPath(): string {\n\t\tif (!this._fsPath) {\n\t\t\tthis._fsPath = uriToFsPath(this, false);\n\t\t}\n\t\treturn this._fsPath;\n\t}\n\n\toverride toString(skipEncoding: boolean = false): string {\n\t\tif (!skipEncoding) {\n\t\t\tif (!this._formatted) {\n\t\t\t\tthis._formatted = _asFormatted(this, false);\n\t\t\t}\n\t\t\treturn this._formatted;\n\t\t} else {\n\t\t\t// we don't cache that\n\t\t\treturn _asFormatted(this, true);\n\t\t}\n\t}\n\n\toverride toJSON(): UriComponents {\n\t\tconst res = <UriState>{\n\t\t\t$mid: MarshalledId.Uri\n\t\t};\n\t\t// cached state\n\t\tif (this._fsPath) {\n\t\t\tres.fsPath = this._fsPath;\n\t\t\tres._sep = _pathSepMarker;\n\t\t}\n\t\tif (this._formatted) {\n\t\t\tres.external = this._formatted;\n\t\t}\n\t\t// uri components\n\t\tif (this.path) {\n\t\t\tres.path = this.path;\n\t\t}\n\t\tif (this.scheme) {\n\t\t\tres.scheme = this.scheme;\n\t\t}\n\t\tif (this.authority) {\n\t\t\tres.authority = this.authority;\n\t\t}\n\t\tif (this.query) {\n\t\t\tres.query = this.query;\n\t\t}\n\t\tif (this.fragment) {\n\t\t\tres.fragment = this.fragment;\n\t\t}\n\t\treturn res;\n\t}\n}\n\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable: { [ch: number]: string } = {\n\t[CharCode.Colon]: '%3A', // gen-delims\n\t[CharCode.Slash]: '%2F',\n\t[CharCode.QuestionMark]: '%3F',\n\t[CharCode.Hash]: '%23',\n\t[CharCode.OpenSquareBracket]: '%5B',\n\t[CharCode.CloseSquareBracket]: '%5D',\n\t[CharCode.AtSign]: '%40',\n\n\t[CharCode.ExclamationMark]: '%21', // sub-delims\n\t[CharCode.DollarSign]: '%24',\n\t[CharCode.Ampersand]: '%26',\n\t[CharCode.SingleQuote]: '%27',\n\t[CharCode.OpenParen]: '%28',\n\t[CharCode.CloseParen]: '%29',\n\t[CharCode.Asterisk]: '%2A',\n\t[CharCode.Plus]: '%2B',\n\t[CharCode.Comma]: '%2C',\n\t[CharCode.Semicolon]: '%3B',\n\t[CharCode.Equals]: '%3D',\n\n\t[CharCode.Space]: '%20',\n};\n\nfunction encodeURIComponentFast(uriComponent: string, allowSlash: boolean): string {\n\tlet res: string | undefined = undefined;\n\tlet nativeEncodePos = -1;\n\n\tfor (let pos = 0; pos < uriComponent.length; pos++) {\n\t\tconst code = uriComponent.charCodeAt(pos);\n\n\t\t// unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n\t\tif (\n\t\t\t(code >= CharCode.a && code <= CharCode.z)\n\t\t\t|| (code >= CharCode.A && code <= CharCode.Z)\n\t\t\t|| (code >= CharCode.Digit0 && code <= CharCode.Digit9)\n\t\t\t|| code === CharCode.Dash\n\t\t\t|| code === CharCode.Period\n\t\t\t|| code === CharCode.Underline\n\t\t\t|| code === CharCode.Tilde\n\t\t\t|| (allowSlash && code === CharCode.Slash)\n\t\t) {\n\t\t\t// check if we are delaying native encode\n\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\tnativeEncodePos = -1;\n\t\t\t}\n\t\t\t// check if we write into a new string (by default we try to return the param)\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += uriComponent.charAt(pos);\n\t\t\t}\n\n\t\t} else {\n\t\t\t// encoding needed, we need to allocate a new string\n\t\t\tif (res === undefined) {\n\t\t\t\tres = uriComponent.substr(0, pos);\n\t\t\t}\n\n\t\t\t// check with default table first\n\t\t\tconst escaped = encodeTable[code];\n\t\t\tif (escaped !== undefined) {\n\n\t\t\t\t// check if we are delaying native encode\n\t\t\t\tif (nativeEncodePos !== -1) {\n\t\t\t\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n\t\t\t\t\tnativeEncodePos = -1;\n\t\t\t\t}\n\n\t\t\t\t// append escaped variant to result\n\t\t\t\tres += escaped;\n\n\t\t\t} else if (nativeEncodePos === -1) {\n\t\t\t\t// use native encode only when needed\n\t\t\t\tnativeEncodePos = pos;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (nativeEncodePos !== -1) {\n\t\tres += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n\t}\n\n\treturn res !== undefined ? res : uriComponent;\n}\n\nfunction encodeURIComponentMinimal(path: string): string {\n\tlet res: string | undefined = undefined;\n\tfor (let pos = 0; pos < path.length; pos++) {\n\t\tconst code = path.charCodeAt(pos);\n\t\tif (code === CharCode.Hash || code === CharCode.QuestionMark) {\n\t\t\tif (res === undefined) {\n\t\t\t\tres = path.substr(0, pos);\n\t\t\t}\n\t\t\tres += encodeTable[code];\n\t\t} else {\n\t\t\tif (res !== undefined) {\n\t\t\t\tres += path[pos];\n\t\t\t}\n\t\t}\n\t}\n\treturn res !== undefined ? res : path;\n}\n\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri: URI, keepDriveLetterCasing: boolean): string {\n\n\tlet value: string;\n\tif (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n\t\t// unc path: file://shares/c$/far/boo\n\t\tvalue = `//${uri.authority}${uri.path}`;\n\t} else if (\n\t\turi.path.charCodeAt(0) === CharCode.Slash\n\t\t&& (uri.path.charCodeAt(1) >= CharCode.A && uri.path.charCodeAt(1) <= CharCode.Z || uri.path.charCodeAt(1) >= CharCode.a && uri.path.charCodeAt(1) <= CharCode.z)\n\t\t&& uri.path.charCodeAt(2) === CharCode.Colon\n\t) {\n\t\tif (!keepDriveLetterCasing) {\n\t\t\t// windows drive letter: file:///c:/far/boo\n\t\t\tvalue = uri.path[1].toLowerCase() + uri.path.substr(2);\n\t\t} else {\n\t\t\tvalue = uri.path.substr(1);\n\t\t}\n\t} else {\n\t\t// other path\n\t\tvalue = uri.path;\n\t}\n\tif (isWindows) {\n\t\tvalue = value.replace(/\\//g, '\\\\');\n\t}\n\treturn value;\n}\n\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri: URI, skipEncoding: boolean): string {\n\n\tconst encoder = !skipEncoding\n\t\t? encodeURIComponentFast\n\t\t: encodeURIComponentMinimal;\n\n\tlet res = '';\n\tlet { scheme, authority, path, query, fragment } = uri;\n\tif (scheme) {\n\t\tres += scheme;\n\t\tres += ':';\n\t}\n\tif (authority || scheme === 'file') {\n\t\tres += _slash;\n\t\tres += _slash;\n\t}\n\tif (authority) {\n\t\tlet idx = authority.indexOf('@');\n\t\tif (idx !== -1) {\n\t\t\t// <user>@<auth>\n\t\t\tconst userinfo = authority.substr(0, idx);\n\t\t\tauthority = authority.substr(idx + 1);\n\t\t\tidx = userinfo.indexOf(':');\n\t\t\tif (idx === -1) {\n\t\t\t\tres += encoder(userinfo, false);\n\t\t\t} else {\n\t\t\t\t// <user>:<pass>@<auth>\n\t\t\t\tres += encoder(userinfo.substr(0, idx), false);\n\t\t\t\tres += ':';\n\t\t\t\tres += encoder(userinfo.substr(idx + 1), false);\n\t\t\t}\n\t\t\tres += '@';\n\t\t}\n\t\tauthority = authority.toLowerCase();\n\t\tidx = authority.indexOf(':');\n\t\tif (idx === -1) {\n\t\t\tres += encoder(authority, false);\n\t\t} else {\n\t\t\t// <auth>:<port>\n\t\t\tres += encoder(authority.substr(0, idx), false);\n\t\t\tres += authority.substr(idx);\n\t\t}\n\t}\n\tif (path) {\n\t\t// lower-case windows drive letters in /C:/fff or C:/fff\n\t\tif (path.length >= 3 && path.charCodeAt(0) === CharCode.Slash && path.charCodeAt(2) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(1);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t} else if (path.length >= 2 && path.charCodeAt(1) === CharCode.Colon) {\n\t\t\tconst code = path.charCodeAt(0);\n\t\t\tif (code >= CharCode.A && code <= CharCode.Z) {\n\t\t\t\tpath = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n\t\t\t}\n\t\t}\n\t\t// encode the rest of the path\n\t\tres += encoder(path, true);\n\t}\n\tif (query) {\n\t\tres += '?';\n\t\tres += encoder(query, false);\n\t}\n\tif (fragment) {\n\t\tres += '#';\n\t\tres += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n\t}\n\treturn res;\n}\n\n// --- decode\n\nfunction decodeURIComponentGraceful(str: string): string {\n\ttry {\n\t\treturn decodeURIComponent(str);\n\t} catch {\n\t\tif (str.length > 3) {\n\t\t\treturn str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n\t\t} else {\n\t\t\treturn str;\n\t\t}\n\t}\n}\n\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\n\nfunction percentDecode(str: string): string {\n\tif (!str.match(_rEncodedAsHex)) {\n\t\treturn str;\n\t}\n\treturn str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\n\nexport interface IRemoteConsoleLog {\n\ttype: string;\n\tseverity: string;\n\targuments: string;\n}\n\ninterface IStackArgument {\n\t__$stack: string;\n}\n\nexport interface IStackFrame {\n\turi: URI;\n\tline: number;\n\tcolumn: number;\n}\n\nexport function isRemoteConsoleLog(obj: any): obj is IRemoteConsoleLog {\n\tconst entry = obj as IRemoteConsoleLog;\n\n\treturn entry && typeof entry.type === 'string' && typeof entry.severity === 'string';\n}\n\nexport function parse(entry: IRemoteConsoleLog): { args: any[], stack?: string } {\n\tconst args: any[] = [];\n\tlet stack: string | undefined;\n\n\t// Parse Entry\n\ttry {\n\t\tconst parsedArguments: any[] = JSON.parse(entry.arguments);\n\n\t\t// Check for special stack entry as last entry\n\t\tconst stackArgument = parsedArguments[parsedArguments.length - 1] as IStackArgument;\n\t\tif (stackArgument && stackArgument.__$stack) {\n\t\t\tparsedArguments.pop(); // stack is handled specially\n\t\t\tstack = stackArgument.__$stack;\n\t\t}\n\n\t\targs.push(...parsedArguments);\n\t} catch (error) {\n\t\targs.push('Unable to log remote console arguments', entry.arguments);\n\t}\n\n\treturn { args, stack };\n}\n\nexport function getFirstFrame(entry: IRemoteConsoleLog): IStackFrame | undefined;\nexport function getFirstFrame(stack: string | undefined): IStackFrame | undefined;\nexport function getFirstFrame(arg0: IRemoteConsoleLog | string | undefined): IStackFrame | undefined {\n\tif (typeof arg0 !== 'string') {\n\t\treturn getFirstFrame(parse(arg0!).stack);\n\t}\n\n\t// Parse a source information out of the stack if we have one. Format can be:\n\t// at vscode.commands.registerCommand (/Users/someone/Desktop/test-ts/out/src/extension.js:18:17)\n\t// or\n\t// at /Users/someone/Desktop/test-ts/out/src/extension.js:18:17\n\t// or\n\t// at c:\\Users\\someone\\Desktop\\end-js\\extension.js:19:17\n\t// or\n\t// at e.$executeContributedCommand(c:\\Users\\someone\\Desktop\\end-js\\extension.js:19:17)\n\tconst stack = arg0;\n\tif (stack) {\n\t\tconst topFrame = findFirstFrame(stack);\n\n\t\t// at [^\\/]* => line starts with \"at\" followed by any character except '/' (to not capture unix paths too late)\n\t\t// (?:(?:[a-zA-Z]+:)|(?:[\\/])|(?:\\\\\\\\) => windows drive letter OR unix root OR unc root\n\t\t// (?:.+) => simple pattern for the path, only works because of the line/col pattern after\n\t\t// :(?:\\d+):(?:\\d+) => :line:column data\n\t\tconst matches = /at [^\\/]*((?:(?:[a-zA-Z]+:)|(?:[\\/])|(?:\\\\\\\\))(?:.+)):(\\d+):(\\d+)/.exec(topFrame || '');\n\t\tif (matches && matches.length === 4) {\n\t\t\treturn {\n\t\t\t\turi: URI.file(matches[1]),\n\t\t\t\tline: Number(matches[2]),\n\t\t\t\tcolumn: Number(matches[3])\n\t\t\t};\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\nfunction findFirstFrame(stack: string | undefined): string | undefined {\n\tif (!stack) {\n\t\treturn stack;\n\t}\n\n\tconst newlineIndex = stack.indexOf('\\n');\n\tif (newlineIndex === -1) {\n\t\treturn stack;\n\t}\n\n\treturn stack.substring(0, newlineIndex);\n}\n\nexport function log(entry: IRemoteConsoleLog, label: string): void {\n\tconst { args, stack } = parse(entry);\n\n\tconst isOneStringArg = typeof args[0] === 'string' && args.length === 1;\n\n\tlet topFrame = findFirstFrame(stack);\n\tif (topFrame) {\n\t\ttopFrame = `(${topFrame.trim()})`;\n\t}\n\n\tlet consoleArgs: string[] = [];\n\n\t// First arg is a string\n\tif (typeof args[0] === 'string') {\n\t\tif (topFrame && isOneStringArg) {\n\t\t\tconsoleArgs = [`%c[${label}] %c${args[0]} %c${topFrame}`, color('blue'), color(''), color('grey')];\n\t\t} else {\n\t\t\tconsoleArgs = [`%c[${label}] %c${args[0]}`, color('blue'), color(''), ...args.slice(1)];\n\t\t}\n\t}\n\n\t// First arg is something else, just apply all\n\telse {\n\t\tconsoleArgs = [`%c[${label}]%`, color('blue'), ...args];\n\t}\n\n\t// Stack: add to args unless already aded\n\tif (topFrame && !isOneStringArg) {\n\t\tconsoleArgs.push(topFrame);\n\t}\n\n\t// Log it\n\tif (typeof (console as any)[entry.severity] !== 'function') {\n\t\tthrow new Error('Unknown console method');\n\t}\n\t(console as any)[entry.severity].apply(console, consoleArgs);\n}\n\nfunction color(color: string): string {\n\treturn `color: ${color}`;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { regExpFlags } from 'vs/base/common/strings';\nimport { URI, UriComponents } from 'vs/base/common/uri';\n\nexport function stringify(obj: any): string {\n\treturn JSON.stringify(obj, replacer);\n}\n\nexport function parse(text: string): any {\n\tlet data = JSON.parse(text);\n\tdata = revive(data);\n\treturn data;\n}\n\nexport const enum MarshalledId {\n\tUri = 1,\n\tRegexp,\n\tScmResource,\n\tScmResourceGroup,\n\tScmProvider,\n\tCommentController,\n\tCommentThread,\n\tCommentThreadReply,\n\tCommentNode,\n\tCommentThreadNode,\n\tTimelineActionContext,\n\tNotebookCellActionContext,\n\tTestItemContext,\n}\n\nexport interface MarshalledObject {\n\t$mid: MarshalledId;\n}\n\nfunction replacer(key: string, value: any): any {\n\t// URI is done via toJSON-member\n\tif (value instanceof RegExp) {\n\t\treturn {\n\t\t\t$mid: MarshalledId.Regexp,\n\t\t\tsource: value.source,\n\t\t\tflags: regExpFlags(value),\n\t\t};\n\t}\n\treturn value;\n}\n\n\ntype Deserialize<T> = T extends UriComponents ? URI\n\t: T extends VSBuffer ? VSBuffer\n\t: T extends object\n\t? Revived<T>\n\t: T;\n\nexport type Revived<T> = { [K in keyof T]: Deserialize<T[K]> };\n\nexport function revive<T = any>(obj: any, depth = 0): Revived<T> {\n\tif (!obj || depth > 200) {\n\t\treturn obj;\n\t}\n\n\tif (typeof obj === 'object') {\n\n\t\tswitch ((<MarshalledObject>obj).$mid) {\n\t\t\tcase MarshalledId.Uri: return <any>URI.revive(obj);\n\t\t\tcase MarshalledId.Regexp: return <any>new RegExp(obj.source, obj.flags);\n\t\t}\n\n\t\tif (\n\t\t\tobj instanceof VSBuffer\n\t\t\t|| obj instanceof Uint8Array\n\t\t) {\n\t\t\treturn <any>obj;\n\t\t}\n\n\t\tif (Array.isArray(obj)) {\n\t\t\tfor (let i = 0; i < obj.length; ++i) {\n\t\t\t\tobj[i] = revive(obj[i], depth + 1);\n\t\t\t}\n\t\t} else {\n\t\t\t// walk object\n\t\t\tfor (const key in obj) {\n\t\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\t\tobj[key] = revive(obj[key], depth + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn obj;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as platform from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\n\nexport namespace Schemas {\n\n\t/**\n\t * A schema that is used for models that exist in memory\n\t * only and that have no correspondence on a server or such.\n\t */\n\texport const inMemory = 'inmemory';\n\n\t/**\n\t * A schema that is used for setting files\n\t */\n\texport const vscode = 'vscode';\n\n\t/**\n\t * A schema that is used for internal private files\n\t */\n\texport const internal = 'private';\n\n\t/**\n\t * A walk-through document.\n\t */\n\texport const walkThrough = 'walkThrough';\n\n\t/**\n\t * An embedded code snippet.\n\t */\n\texport const walkThroughSnippet = 'walkThroughSnippet';\n\n\texport const http = 'http';\n\n\texport const https = 'https';\n\n\texport const file = 'file';\n\n\texport const mailto = 'mailto';\n\n\texport const untitled = 'untitled';\n\n\texport const data = 'data';\n\n\texport const command = 'command';\n\n\texport const vscodeRemote = 'vscode-remote';\n\n\texport const vscodeRemoteResource = 'vscode-remote-resource';\n\n\texport const userData = 'vscode-userdata';\n\n\texport const vscodeCustomEditor = 'vscode-custom-editor';\n\n\texport const vscodeNotebook = 'vscode-notebook';\n\n\texport const vscodeNotebookCell = 'vscode-notebook-cell';\n\n\texport const vscodeNotebookCellMetadata = 'vscode-notebook-cell-metadata';\n\texport const vscodeNotebookCellOutput = 'vscode-notebook-cell-output';\n\texport const vscodeInteractive = 'vscode-interactive';\n\texport const vscodeInteractiveInput = 'vscode-interactive-input';\n\n\texport const vscodeSettings = 'vscode-settings';\n\n\texport const vscodeWorkspaceTrust = 'vscode-workspace-trust';\n\n\texport const vscodeTerminal = 'vscode-terminal';\n\n\t/**\n\t * Scheme used internally for webviews that aren't linked to a resource (i.e. not custom editors)\n\t */\n\texport const webviewPanel = 'webview-panel';\n\n\t/**\n\t * Scheme used for loading the wrapper html and script in webviews.\n\t */\n\texport const vscodeWebview = 'vscode-webview';\n\n\t/**\n\t * Scheme used for extension pages\n\t */\n\texport const extension = 'extension';\n\n\t/**\n\t * Scheme used as a replacement of `file` scheme to load\n\t * files with our custom protocol handler (desktop only).\n\t */\n\texport const vscodeFileResource = 'vscode-file';\n\n\t/**\n\t * Scheme used for temporary resources\n\t */\n\texport const tmp = 'tmp';\n\n\t/**\n\t * Scheme used vs live share\n\t */\n\texport const vsls = 'vsls';\n}\n\nclass RemoteAuthoritiesImpl {\n\tprivate readonly _hosts: { [authority: string]: string | undefined; } = Object.create(null);\n\tprivate readonly _ports: { [authority: string]: number | undefined; } = Object.create(null);\n\tprivate readonly _connectionTokens: { [authority: string]: string | undefined; } = Object.create(null);\n\tprivate _preferredWebSchema: 'http' | 'https' = 'http';\n\tprivate _delegate: ((uri: URI) => URI) | null = null;\n\n\tsetPreferredWebSchema(schema: 'http' | 'https') {\n\t\tthis._preferredWebSchema = schema;\n\t}\n\n\tsetDelegate(delegate: (uri: URI) => URI): void {\n\t\tthis._delegate = delegate;\n\t}\n\n\tset(authority: string, host: string, port: number): void {\n\t\tthis._hosts[authority] = host;\n\t\tthis._ports[authority] = port;\n\t}\n\n\tsetConnectionToken(authority: string, connectionToken: string): void {\n\t\tthis._connectionTokens[authority] = connectionToken;\n\t}\n\n\trewrite(uri: URI): URI {\n\t\tif (this._delegate) {\n\t\t\treturn this._delegate(uri);\n\t\t}\n\t\tconst authority = uri.authority;\n\t\tlet host = this._hosts[authority];\n\t\tif (host && host.indexOf(':') !== -1) {\n\t\t\thost = `[${host}]`;\n\t\t}\n\t\tconst port = this._ports[authority];\n\t\tconst connectionToken = this._connectionTokens[authority];\n\t\tlet query = `path=${encodeURIComponent(uri.path)}`;\n\t\tif (typeof connectionToken === 'string') {\n\t\t\tquery += `&tkn=${encodeURIComponent(connectionToken)}`;\n\t\t}\n\t\treturn URI.from({\n\t\t\tscheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n\t\t\tauthority: `${host}:${port}`,\n\t\t\tpath: `/vscode-remote-resource`,\n\t\t\tquery\n\t\t});\n\t}\n}\n\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\n\nclass FileAccessImpl {\n\n\tprivate static readonly FALLBACK_AUTHORITY = 'vscode-app';\n\n\t/**\n\t * Returns a URI to use in contexts where the browser is responsible\n\t * for loading (e.g. fetch()) or when used within the DOM.\n\t *\n\t * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n\t */\n\tasBrowserUri(uri: URI): URI;\n\tasBrowserUri(moduleId: string, moduleIdToUrl: { toUrl(moduleId: string): string }): URI;\n\tasBrowserUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }): URI {\n\t\tconst uri = this.toUri(uriOrModule, moduleIdToUrl);\n\n\t\t// Handle remote URIs via `RemoteAuthorities`\n\t\tif (uri.scheme === Schemas.vscodeRemote) {\n\t\t\treturn RemoteAuthorities.rewrite(uri);\n\t\t}\n\n\t\t// Convert to `vscode-file` resource..\n\t\tif (\n\t\t\t// ...only ever for `file` resources\n\t\t\turi.scheme === Schemas.file &&\n\t\t\t(\n\t\t\t\t// ...and we run in native environments\n\t\t\t\tplatform.isNative ||\n\t\t\t\t// ...or web worker extensions on desktop\n\t\t\t\t(typeof platform.globals.importScripts === 'function' && platform.globals.origin === `${Schemas.vscodeFileResource}://${FileAccessImpl.FALLBACK_AUTHORITY}`)\n\t\t\t)\n\t\t) {\n\t\t\treturn uri.with({\n\t\t\t\tscheme: Schemas.vscodeFileResource,\n\t\t\t\t// We need to provide an authority here so that it can serve\n\t\t\t\t// as origin for network and loading matters in chromium.\n\t\t\t\t// If the URI is not coming with an authority already, we\n\t\t\t\t// add our own\n\t\t\t\tauthority: uri.authority || FileAccessImpl.FALLBACK_AUTHORITY,\n\t\t\t\tquery: null,\n\t\t\t\tfragment: null\n\t\t\t});\n\t\t}\n\n\t\treturn uri;\n\t}\n\n\t/**\n\t * Returns the `file` URI to use in contexts where node.js\n\t * is responsible for loading.\n\t */\n\tasFileUri(uri: URI): URI;\n\tasFileUri(moduleId: string, moduleIdToUrl: { toUrl(moduleId: string): string }): URI;\n\tasFileUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }): URI {\n\t\tconst uri = this.toUri(uriOrModule, moduleIdToUrl);\n\n\t\t// Only convert the URI if it is `vscode-file:` scheme\n\t\tif (uri.scheme === Schemas.vscodeFileResource) {\n\t\t\treturn uri.with({\n\t\t\t\tscheme: Schemas.file,\n\t\t\t\t// Only preserve the `authority` if it is different from\n\t\t\t\t// our fallback authority. This ensures we properly preserve\n\t\t\t\t// Windows UNC paths that come with their own authority.\n\t\t\t\tauthority: uri.authority !== FileAccessImpl.FALLBACK_AUTHORITY ? uri.authority : null,\n\t\t\t\tquery: null,\n\t\t\t\tfragment: null\n\t\t\t});\n\t\t}\n\n\t\treturn uri;\n\t}\n\n\tprivate toUri(uriOrModule: URI | string, moduleIdToUrl?: { toUrl(moduleId: string): string }): URI {\n\t\tif (URI.isUri(uriOrModule)) {\n\t\t\treturn uriOrModule;\n\t\t}\n\n\t\treturn URI.parse(moduleIdToUrl!.toUrl(uriOrModule));\n\t}\n}\n\nexport const FileAccess = new FileAccessImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport * as extpath from 'vs/base/common/extpath';\nimport { Schemas } from 'vs/base/common/network';\nimport * as paths from 'vs/base/common/path';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { compare as strCompare, equalsIgnoreCase } from 'vs/base/common/strings';\nimport { URI, uriToFsPath } from 'vs/base/common/uri';\n\nexport function originalFSPath(uri: URI): string {\n\treturn uriToFsPath(uri, true);\n}\n\n//#region IExtUri\n\nexport interface IExtUri {\n\n\t// --- identity\n\n\t/**\n\t * Compares two uris.\n\t *\n\t * @param uri1 Uri\n\t * @param uri2 Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tcompare(uri1: URI, uri2: URI, ignoreFragment?: boolean): number;\n\n\t/**\n\t * Tests whether two uris are equal\n\t *\n\t * @param uri1 Uri\n\t * @param uri2 Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tisEqual(uri1: URI | undefined, uri2: URI | undefined, ignoreFragment?: boolean): boolean;\n\n\t/**\n\t * Tests whether a `candidate` URI is a parent or equal of a given `base` URI.\n\t *\n\t * @param base A uri which is \"longer\" or at least same length as `parentCandidate`\n\t * @param parentCandidate A uri which is \"shorter\" or up to same length as `base`\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tisEqualOrParent(base: URI, parentCandidate: URI, ignoreFragment?: boolean): boolean;\n\n\t/**\n\t * Creates a key from a resource URI to be used to resource comparison and for resource maps.\n\t * @see {@link ResourceMap}\n\t * @param uri Uri\n\t * @param ignoreFragment Ignore the fragment (defaults to `false`)\n\t */\n\tgetComparisonKey(uri: URI, ignoreFragment?: boolean): string;\n\n\t/**\n\t * Whether the casing of the path-component of the uri should be ignored.\n\t */\n\tignorePathCasing(uri: URI): boolean;\n\n\t// --- path math\n\n\tbasenameOrAuthority(resource: URI): string;\n\n\t/**\n\t * Returns the basename of the path component of an uri.\n\t * @param resource\n\t */\n\tbasename(resource: URI): string;\n\n\t/**\n\t * Returns the extension of the path component of an uri.\n\t * @param resource\n\t */\n\textname(resource: URI): string;\n\t/**\n\t * Return a URI representing the directory of a URI path.\n\t *\n\t * @param resource The input URI.\n\t * @returns The URI representing the directory of the input URI.\n\t */\n\tdirname(resource: URI): URI;\n\t/**\n\t * Join a URI path with path fragments and normalizes the resulting path.\n\t *\n\t * @param resource The input URI.\n\t * @param pathFragment The path fragment to add to the URI path.\n\t * @returns The resulting URI.\n\t */\n\tjoinPath(resource: URI, ...pathFragment: string[]): URI\n\t/**\n\t * Normalizes the path part of a URI: Resolves `.` and `..` elements with directory names.\n\t *\n\t * @param resource The URI to normalize the path.\n\t * @returns The URI with the normalized path.\n\t */\n\tnormalizePath(resource: URI): URI;\n\t/**\n\t *\n\t * @param from\n\t * @param to\n\t */\n\trelativePath(from: URI, to: URI): string | undefined;\n\t/**\n\t * Resolves an absolute or relative path against a base URI.\n\t * The path can be relative or absolute posix or a Windows path\n\t */\n\tresolvePath(base: URI, path: string): URI;\n\n\t// --- misc\n\n\t/**\n\t * Returns true if the URI path is absolute.\n\t */\n\tisAbsolutePath(resource: URI): boolean;\n\t/**\n\t * Tests whether the two authorities are the same\n\t */\n\tisEqualAuthority(a1: string, a2: string): boolean;\n\t/**\n\t * Returns true if the URI path has a trailing path separator\n\t */\n\thasTrailingPathSeparator(resource: URI, sep?: string): boolean;\n\t/**\n\t * Removes a trailing path separator, if there's one.\n\t * Important: Doesn't remove the first slash, it would make the URI invalid\n\t */\n\tremoveTrailingPathSeparator(resource: URI, sep?: string): URI;\n\t/**\n\t * Adds a trailing path separator to the URI if there isn't one already.\n\t * For example, c:\\ would be unchanged, but c:\\users would become c:\\users\\\n\t */\n\taddTrailingPathSeparator(resource: URI, sep?: string): URI;\n}\n\nexport class ExtUri implements IExtUri {\n\n\tconstructor(private _ignorePathCasing: (uri: URI) => boolean) { }\n\n\tcompare(uri1: URI, uri2: URI, ignoreFragment: boolean = false): number {\n\t\tif (uri1 === uri2) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn strCompare(this.getComparisonKey(uri1, ignoreFragment), this.getComparisonKey(uri2, ignoreFragment));\n\t}\n\n\tisEqual(uri1: URI | undefined, uri2: URI | undefined, ignoreFragment: boolean = false): boolean {\n\t\tif (uri1 === uri2) {\n\t\t\treturn true;\n\t\t}\n\t\tif (!uri1 || !uri2) {\n\t\t\treturn false;\n\t\t}\n\t\treturn this.getComparisonKey(uri1, ignoreFragment) === this.getComparisonKey(uri2, ignoreFragment);\n\t}\n\n\tgetComparisonKey(uri: URI, ignoreFragment: boolean = false): string {\n\t\treturn uri.with({\n\t\t\tpath: this._ignorePathCasing(uri) ? uri.path.toLowerCase() : undefined,\n\t\t\tfragment: ignoreFragment ? null : undefined\n\t\t}).toString();\n\t}\n\n\tignorePathCasing(uri: URI): boolean {\n\t\treturn this._ignorePathCasing(uri);\n\t}\n\n\tisEqualOrParent(base: URI, parentCandidate: URI, ignoreFragment: boolean = false): boolean {\n\t\tif (base.scheme === parentCandidate.scheme) {\n\t\t\tif (base.scheme === Schemas.file) {\n\t\t\t\treturn extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), this._ignorePathCasing(base)) && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n\t\t\t}\n\t\t\tif (isEqualAuthority(base.authority, parentCandidate.authority)) {\n\t\t\t\treturn extpath.isEqualOrParent(base.path, parentCandidate.path, this._ignorePathCasing(base), '/') && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\t// --- path math\n\n\tjoinPath(resource: URI, ...pathFragment: string[]): URI {\n\t\treturn URI.joinPath(resource, ...pathFragment);\n\t}\n\n\tbasenameOrAuthority(resource: URI): string {\n\t\treturn basename(resource) || resource.authority;\n\t}\n\n\tbasename(resource: URI): string {\n\t\treturn paths.posix.basename(resource.path);\n\t}\n\n\textname(resource: URI): string {\n\t\treturn paths.posix.extname(resource.path);\n\t}\n\n\tdirname(resource: URI): URI {\n\t\tif (resource.path.length === 0) {\n\t\t\treturn resource;\n\t\t}\n\t\tlet dirname;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tdirname = URI.file(paths.dirname(originalFSPath(resource))).path;\n\t\t} else {\n\t\t\tdirname = paths.posix.dirname(resource.path);\n\t\t\tif (resource.authority && dirname.length && dirname.charCodeAt(0) !== CharCode.Slash) {\n\t\t\t\tconsole.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n\t\t\t\tdirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n\t\t\t}\n\t\t}\n\t\treturn resource.with({\n\t\t\tpath: dirname\n\t\t});\n\t}\n\n\tnormalizePath(resource: URI): URI {\n\t\tif (!resource.path.length) {\n\t\t\treturn resource;\n\t\t}\n\t\tlet normalizedPath: string;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tnormalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n\t\t} else {\n\t\t\tnormalizedPath = paths.posix.normalize(resource.path);\n\t\t}\n\t\treturn resource.with({\n\t\t\tpath: normalizedPath\n\t\t});\n\t}\n\n\trelativePath(from: URI, to: URI): string | undefined {\n\t\tif (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n\t\t\treturn undefined;\n\t\t}\n\t\tif (from.scheme === Schemas.file) {\n\t\t\tconst relativePath = paths.relative(originalFSPath(from), originalFSPath(to));\n\t\t\treturn isWindows ? extpath.toSlashes(relativePath) : relativePath;\n\t\t}\n\t\tlet fromPath = from.path || '/', toPath = to.path || '/';\n\t\tif (this._ignorePathCasing(from)) {\n\t\t\t// make casing of fromPath match toPath\n\t\t\tlet i = 0;\n\t\t\tfor (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n\t\t\t\tif (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n\t\t\t\t\tif (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tfromPath = toPath.substr(0, i) + fromPath.substr(i);\n\t\t}\n\t\treturn paths.posix.relative(fromPath, toPath);\n\t}\n\n\tresolvePath(base: URI, path: string): URI {\n\t\tif (base.scheme === Schemas.file) {\n\t\t\tconst newURI = URI.file(paths.resolve(originalFSPath(base), path));\n\t\t\treturn base.with({\n\t\t\t\tauthority: newURI.authority,\n\t\t\t\tpath: newURI.path\n\t\t\t});\n\t\t}\n\t\tpath = extpath.toPosixPath(path); // we allow path to be a windows path\n\t\treturn base.with({\n\t\t\tpath: paths.posix.resolve(base.path, path)\n\t\t});\n\t}\n\n\t// --- misc\n\n\tisAbsolutePath(resource: URI): boolean {\n\t\treturn !!resource.path && resource.path[0] === '/';\n\t}\n\n\tisEqualAuthority(a1: string | undefined, a2: string | undefined) {\n\t\treturn a1 === a2 || (a1 !== undefined && a2 !== undefined && equalsIgnoreCase(a1, a2));\n\t}\n\n\thasTrailingPathSeparator(resource: URI, sep: string = paths.sep): boolean {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tconst fsp = originalFSPath(resource);\n\t\t\treturn fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === sep;\n\t\t} else {\n\t\t\tconst p = resource.path;\n\t\t\treturn (p.length > 1 && p.charCodeAt(p.length - 1) === CharCode.Slash) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath)); // ignore the slash at offset 0\n\t\t}\n\t}\n\n\tremoveTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t\t// Make sure that the path isn't a drive letter. A trailing separator there is not removable.\n\t\tif (hasTrailingPathSeparator(resource, sep)) {\n\t\t\treturn resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n\t\t}\n\t\treturn resource;\n\t}\n\n\taddTrailingPathSeparator(resource: URI, sep: string = paths.sep): URI {\n\t\tlet isRootSep: boolean = false;\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\tconst fsp = originalFSPath(resource);\n\t\t\tisRootSep = ((fsp !== undefined) && (fsp.length === extpath.getRoot(fsp).length) && (fsp[fsp.length - 1] === sep));\n\t\t} else {\n\t\t\tsep = '/';\n\t\t\tconst p = resource.path;\n\t\t\tisRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === CharCode.Slash;\n\t\t}\n\t\tif (!isRootSep && !hasTrailingPathSeparator(resource, sep)) {\n\t\t\treturn resource.with({ path: resource.path + '/' });\n\t\t}\n\t\treturn resource;\n\t}\n}\n\n\n/**\n * Unbiased utility that takes uris \"as they are\". This means it can be interchanged with\n * uri#toString() usages. The following is true\n * ```\n * assertEqual(aUri.toString() === bUri.toString(), exturi.isEqual(aUri, bUri))\n * ```\n */\nexport const extUri = new ExtUri(() => false);\n\n/**\n * BIASED utility that _mostly_ ignored the case of urs paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriBiasedIgnorePathCase = new ExtUri(uri => {\n\t// A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n\t// Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n\treturn uri.scheme === Schemas.file ? !isLinux : true;\n});\n\n\n/**\n * BIASED utility that always ignores the casing of uris paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriIgnorePathCase = new ExtUri(_ => true);\n\nexport const isEqual = extUri.isEqual.bind(extUri);\nexport const isEqualOrParent = extUri.isEqualOrParent.bind(extUri);\nexport const getComparisonKey = extUri.getComparisonKey.bind(extUri);\nexport const basenameOrAuthority = extUri.basenameOrAuthority.bind(extUri);\nexport const basename = extUri.basename.bind(extUri);\nexport const extname = extUri.extname.bind(extUri);\nexport const dirname = extUri.dirname.bind(extUri);\nexport const joinPath = extUri.joinPath.bind(extUri);\nexport const normalizePath = extUri.normalizePath.bind(extUri);\nexport const relativePath = extUri.relativePath.bind(extUri);\nexport const resolvePath = extUri.resolvePath.bind(extUri);\nexport const isAbsolutePath = extUri.isAbsolutePath.bind(extUri);\nexport const isEqualAuthority = extUri.isEqualAuthority.bind(extUri);\nexport const hasTrailingPathSeparator = extUri.hasTrailingPathSeparator.bind(extUri);\nexport const removeTrailingPathSeparator = extUri.removeTrailingPathSeparator.bind(extUri);\nexport const addTrailingPathSeparator = extUri.addTrailingPathSeparator.bind(extUri);\n\n//#endregion\n\nexport function distinctParents<T>(items: T[], resourceAccessor: (item: T) => URI): T[] {\n\tconst distinctParents: T[] = [];\n\tfor (let i = 0; i < items.length; i++) {\n\t\tconst candidateResource = resourceAccessor(items[i]);\n\t\tif (items.some((otherItem, index) => {\n\t\t\tif (index === i) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn isEqualOrParent(candidateResource, resourceAccessor(otherItem));\n\t\t})) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tdistinctParents.push(items[i]);\n\t}\n\n\treturn distinctParents;\n}\n\n/**\n * Data URI related helpers.\n */\nexport namespace DataUri {\n\n\texport const META_DATA_LABEL = 'label';\n\texport const META_DATA_DESCRIPTION = 'description';\n\texport const META_DATA_SIZE = 'size';\n\texport const META_DATA_MIME = 'mime';\n\n\texport function parseMetaData(dataUri: URI): Map<string, string> {\n\t\tconst metadata = new Map<string, string>();\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n\t\tconst meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n\t\tmeta.split(';').forEach(property => {\n\t\t\tconst [key, value] = property.split(':');\n\t\t\tif (key && value) {\n\t\t\t\tmetadata.set(key, value);\n\t\t\t}\n\t\t});\n\n\t\t// Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n\t\t// the mime is: image/png\n\t\tconst mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n\t\tif (mime) {\n\t\t\tmetadata.set(META_DATA_MIME, mime);\n\t\t}\n\n\t\treturn metadata;\n\t}\n}\n\nexport function toLocalResource(resource: URI, authority: string | undefined, localScheme: string): URI {\n\tif (authority) {\n\t\tlet path = resource.path;\n\t\tif (path && path[0] !== paths.posix.sep) {\n\t\t\tpath = paths.posix.sep + path;\n\t\t}\n\n\t\treturn resource.with({ scheme: localScheme, authority, path });\n\t}\n\n\treturn resource.with({ scheme: localScheme });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable, MutableDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { extUri as defaultExtUri, IExtUri } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { setTimeout0 } from 'vs/base/common/platform';\n\nexport function isThenable<T>(obj: unknown): obj is Promise<T> {\n\treturn !!obj && typeof (obj as unknown as Promise<T>).then === 'function';\n}\n\nexport interface CancelablePromise<T> extends Promise<T> {\n\tcancel(): void;\n}\n\nexport function createCancelablePromise<T>(callback: (token: CancellationToken) => Promise<T>): CancelablePromise<T> {\n\tconst source = new CancellationTokenSource();\n\n\tconst thenable = callback(source.token);\n\tconst promise = new Promise<T>((resolve, reject) => {\n\t\tconst subscription = source.token.onCancellationRequested(() => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\treject(canceled());\n\t\t});\n\t\tPromise.resolve(thenable).then(value => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\tresolve(value);\n\t\t}, err => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\treject(err);\n\t\t});\n\t});\n\n\treturn <CancelablePromise<T>>new class {\n\t\tcancel() {\n\t\t\tsource.cancel();\n\t\t}\n\t\tthen<TResult1 = T, TResult2 = never>(resolve?: ((value: T) => TResult1 | Promise<TResult1>) | undefined | null, reject?: ((reason: any) => TResult2 | Promise<TResult2>) | undefined | null): Promise<TResult1 | TResult2> {\n\t\t\treturn promise.then(resolve, reject);\n\t\t}\n\t\tcatch<TResult = never>(reject?: ((reason: any) => TResult | Promise<TResult>) | undefined | null): Promise<T | TResult> {\n\t\t\treturn this.then(undefined, reject);\n\t\t}\n\t\tfinally(onfinally?: (() => void) | undefined | null): Promise<T> {\n\t\t\treturn promise.finally(onfinally);\n\t\t}\n\t};\n}\n\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken): Promise<T | undefined>;\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue: T): Promise<T>;\nexport function raceCancellation<T>(promise: Promise<T>, token: CancellationToken, defaultValue?: T): Promise<T | undefined> {\n\treturn Promise.race([promise, new Promise<T | undefined>(resolve => token.onCancellationRequested(() => resolve(defaultValue)))]);\n}\n\n/**\n * Returns as soon as one of the promises is resolved and cancels remaining promises\n */\nexport async function raceCancellablePromises<T>(cancellablePromises: CancelablePromise<T>[]): Promise<T> {\n\tlet resolvedPromiseIndex = -1;\n\tconst promises = cancellablePromises.map((promise, index) => promise.then(result => { resolvedPromiseIndex = index; return result; }));\n\tconst result = await Promise.race(promises);\n\tcancellablePromises.forEach((cancellablePromise, index) => {\n\t\tif (index !== resolvedPromiseIndex) {\n\t\t\tcancellablePromise.cancel();\n\t\t}\n\t});\n\treturn result;\n}\n\nexport function raceTimeout<T>(promise: Promise<T>, timeout: number, onTimeout?: () => void): Promise<T | undefined> {\n\tlet promiseResolve: ((value: T | undefined) => void) | undefined = undefined;\n\n\tconst timer = setTimeout(() => {\n\t\tpromiseResolve?.(undefined);\n\t\tonTimeout?.();\n\t}, timeout);\n\n\treturn Promise.race([\n\t\tpromise.finally(() => clearTimeout(timer)),\n\t\tnew Promise<T | undefined>(resolve => promiseResolve = resolve)\n\t]);\n}\n\nexport function asPromise<T>(callback: () => T | Thenable<T>): Promise<T> {\n\treturn new Promise<T>((resolve, reject) => {\n\t\tconst item = callback();\n\t\tif (isThenable<T>(item)) {\n\t\t\titem.then(resolve, reject);\n\t\t} else {\n\t\t\tresolve(item);\n\t\t}\n\t});\n}\n\nexport interface ITask<T> {\n\t(): T;\n}\n\n/**\n * A helper to prevent accumulation of sequential async tasks.\n *\n * Imagine a mail man with the sole task of delivering letters. As soon as\n * a letter submitted for delivery, he drives to the destination, delivers it\n * and returns to his base. Imagine that during the trip, N more letters were submitted.\n * When the mail man returns, he picks those N letters and delivers them all in a\n * single trip. Even though N+1 submissions occurred, only 2 deliveries were made.\n *\n * The throttler implements this via the queue() method, by providing it a task\n * factory. Following the example:\n *\n * \t\tconst throttler = new Throttler();\n * \t\tconst letters = [];\n *\n * \t\tfunction deliver() {\n * \t\t\tconst lettersToDeliver = letters;\n * \t\t\tletters = [];\n * \t\t\treturn makeTheTrip(lettersToDeliver);\n * \t\t}\n *\n * \t\tfunction onLetterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tthrottler.queue(deliver);\n * \t\t}\n */\nexport class Throttler {\n\n\tprivate activePromise: Promise<any> | null;\n\tprivate queuedPromise: Promise<any> | null;\n\tprivate queuedPromiseFactory: ITask<Promise<any>> | null;\n\n\tconstructor() {\n\t\tthis.activePromise = null;\n\t\tthis.queuedPromise = null;\n\t\tthis.queuedPromiseFactory = null;\n\t}\n\n\tqueue<T>(promiseFactory: ITask<Promise<T>>): Promise<T> {\n\t\tif (this.activePromise) {\n\t\t\tthis.queuedPromiseFactory = promiseFactory;\n\n\t\t\tif (!this.queuedPromise) {\n\t\t\t\tconst onComplete = () => {\n\t\t\t\t\tthis.queuedPromise = null;\n\n\t\t\t\t\tconst result = this.queue(this.queuedPromiseFactory!);\n\t\t\t\t\tthis.queuedPromiseFactory = null;\n\n\t\t\t\t\treturn result;\n\t\t\t\t};\n\n\t\t\t\tthis.queuedPromise = new Promise(resolve => {\n\t\t\t\t\tthis.activePromise!.then(onComplete, onComplete).then(resolve);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\tthis.queuedPromise!.then(resolve, reject);\n\t\t\t});\n\t\t}\n\n\t\tthis.activePromise = promiseFactory();\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.activePromise!.then((result: T) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\tresolve(result);\n\t\t\t}, (err: unknown) => {\n\t\t\t\tthis.activePromise = null;\n\t\t\t\treject(err);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class Sequencer {\n\n\tprivate current: Promise<unknown> = Promise.resolve(null);\n\n\tqueue<T>(promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\treturn this.current = this.current.then(() => promiseTask(), () => promiseTask());\n\t}\n}\n\nexport class SequencerByKey<TKey> {\n\n\tprivate promiseMap = new Map<TKey, Promise<unknown>>();\n\n\tqueue<T>(key: TKey, promiseTask: ITask<Promise<T>>): Promise<T> {\n\t\tconst runningPromise = this.promiseMap.get(key) ?? Promise.resolve();\n\t\tconst newPromise = runningPromise\n\t\t\t.catch(() => { })\n\t\t\t.then(promiseTask)\n\t\t\t.finally(() => {\n\t\t\t\tif (this.promiseMap.get(key) === newPromise) {\n\t\t\t\t\tthis.promiseMap.delete(key);\n\t\t\t\t}\n\t\t\t});\n\t\tthis.promiseMap.set(key, newPromise);\n\t\treturn newPromise;\n\t}\n}\n\n/**\n * A helper to delay (debounce) execution of a task that is being requested often.\n *\n * Following the throttler, now imagine the mail man wants to optimize the number of\n * trips proactively. The trip itself can be long, so he decides not to make the trip\n * as soon as a letter is submitted. Instead he waits a while, in case more\n * letters are submitted. After said waiting period, if no letters were submitted, he\n * decides to make the trip. Imagine that N more letters were submitted after the first\n * one, all within a short period of time between each other. Even though N+1\n * submissions occurred, only 1 delivery was made.\n *\n * The delayer offers this behavior via the trigger() method, into which both the task\n * to be executed and the waiting period (delay) must be passed in as arguments. Following\n * the example:\n *\n * \t\tconst delayer = new Delayer(WAITING_PERIOD);\n * \t\tconst letters = [];\n *\n * \t\tfunction letterReceived(l) {\n * \t\t\tletters.push(l);\n * \t\t\tdelayer.trigger(() => { return makeTheTrip(); });\n * \t\t}\n */\nexport class Delayer<T> implements IDisposable {\n\n\tprivate timeout: any;\n\tprivate completionPromise: Promise<any> | null;\n\tprivate doResolve: ((value?: any | Promise<any>) => void) | null;\n\tprivate doReject: ((err: any) => void) | null;\n\tprivate task: ITask<T | Promise<T>> | null;\n\n\tconstructor(public defaultDelay: number) {\n\t\tthis.timeout = null;\n\t\tthis.completionPromise = null;\n\t\tthis.doResolve = null;\n\t\tthis.doReject = null;\n\t\tthis.task = null;\n\t}\n\n\ttrigger(task: ITask<T | Promise<T>>, delay: number = this.defaultDelay): Promise<T> {\n\t\tthis.task = task;\n\t\tthis.cancelTimeout();\n\n\t\tif (!this.completionPromise) {\n\t\t\tthis.completionPromise = new Promise((resolve, reject) => {\n\t\t\t\tthis.doResolve = resolve;\n\t\t\t\tthis.doReject = reject;\n\t\t\t}).then(() => {\n\t\t\t\tthis.completionPromise = null;\n\t\t\t\tthis.doResolve = null;\n\t\t\t\tif (this.task) {\n\t\t\t\t\tconst task = this.task;\n\t\t\t\t\tthis.task = null;\n\t\t\t\t\treturn task();\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\t\t}\n\n\t\tthis.timeout = setTimeout(() => {\n\t\t\tthis.timeout = null;\n\t\t\tif (this.doResolve) {\n\t\t\t\tthis.doResolve(null);\n\t\t\t}\n\t\t}, delay);\n\n\t\treturn this.completionPromise;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.timeout !== null;\n\t}\n\n\tcancel(): void {\n\t\tthis.cancelTimeout();\n\n\t\tif (this.completionPromise) {\n\t\t\tif (this.doReject) {\n\t\t\t\tthis.doReject(canceled());\n\t\t\t}\n\t\t\tthis.completionPromise = null;\n\t\t}\n\t}\n\n\tprivate cancelTimeout(): void {\n\t\tif (this.timeout !== null) {\n\t\t\tclearTimeout(this.timeout);\n\t\t\tthis.timeout = null;\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n}\n\n/**\n * A helper to delay execution of a task that is being requested often, while\n * preventing accumulation of consecutive executions, while the task runs.\n *\n * The mail man is clever and waits for a certain amount of time, before going\n * out to deliver letters. While the mail man is going out, more letters arrive\n * and can only be delivered once he is back. Once he is back the mail man will\n * do one more trip to deliver the letters that have accumulated while he was out.\n */\nexport class ThrottledDelayer<T> {\n\n\tprivate delayer: Delayer<Promise<T>>;\n\tprivate throttler: Throttler;\n\n\tconstructor(defaultDelay: number) {\n\t\tthis.delayer = new Delayer(defaultDelay);\n\t\tthis.throttler = new Throttler();\n\t}\n\n\ttrigger(promiseFactory: ITask<Promise<T>>, delay?: number): Promise<T> {\n\t\treturn this.delayer.trigger(() => this.throttler.queue(promiseFactory), delay) as unknown as Promise<T>;\n\t}\n\n\tisTriggered(): boolean {\n\t\treturn this.delayer.isTriggered();\n\t}\n\n\tcancel(): void {\n\t\tthis.delayer.cancel();\n\t}\n\n\tdispose(): void {\n\t\tthis.delayer.dispose();\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently.\n */\nexport class Barrier {\n\n\tprivate _isOpen: boolean;\n\tprivate _promise: Promise<boolean>;\n\tprivate _completePromise!: (v: boolean) => void;\n\n\tconstructor() {\n\t\tthis._isOpen = false;\n\t\tthis._promise = new Promise<boolean>((c, e) => {\n\t\t\tthis._completePromise = c;\n\t\t});\n\t}\n\n\tisOpen(): boolean {\n\t\treturn this._isOpen;\n\t}\n\n\topen(): void {\n\t\tthis._isOpen = true;\n\t\tthis._completePromise(true);\n\t}\n\n\twait(): Promise<boolean> {\n\t\treturn this._promise;\n\t}\n}\n\n/**\n * A barrier that is initially closed and then becomes opened permanently after a certain period of\n * time or when open is called explicitly\n */\nexport class AutoOpenBarrier extends Barrier {\n\n\tprivate readonly _timeout: any;\n\n\tconstructor(autoOpenTimeMs: number) {\n\t\tsuper();\n\t\tthis._timeout = setTimeout(() => this.open(), autoOpenTimeMs);\n\t}\n\n\toverride open(): void {\n\t\tclearTimeout(this._timeout);\n\t\tsuper.open();\n\t}\n}\n\nexport function timeout(millis: number): CancelablePromise<void>;\nexport function timeout(millis: number, token: CancellationToken): Promise<void>;\nexport function timeout(millis: number, token?: CancellationToken): CancelablePromise<void> | Promise<void> {\n\tif (!token) {\n\t\treturn createCancelablePromise(token => timeout(millis, token));\n\t}\n\n\treturn new Promise((resolve, reject) => {\n\t\tconst handle = setTimeout(() => {\n\t\t\tdisposable.dispose();\n\t\t\tresolve();\n\t\t}, millis);\n\t\tconst disposable = token.onCancellationRequested(() => {\n\t\t\tclearTimeout(handle);\n\t\t\tdisposable.dispose();\n\t\t\treject(canceled());\n\t\t});\n\t});\n}\n\nexport function disposableTimeout(handler: () => void, timeout = 0): IDisposable {\n\tconst timer = setTimeout(handler, timeout);\n\treturn toDisposable(() => clearTimeout(timer));\n}\n\n/**\n * Runs the provided list of promise factories in sequential order. The returned\n * promise will complete to an array of results from each promise.\n */\n\nexport function sequence<T>(promiseFactories: ITask<Promise<T>>[]): Promise<T[]> {\n\tconst results: T[] = [];\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tfunction next(): Promise<T> | null {\n\t\treturn index < len ? promiseFactories[index++]() : null;\n\t}\n\n\tfunction thenHandler(result: any): Promise<any> {\n\t\tif (result !== undefined && result !== null) {\n\t\t\tresults.push(result);\n\t\t}\n\n\t\tconst n = next();\n\t\tif (n) {\n\t\t\treturn n.then(thenHandler);\n\t\t}\n\n\t\treturn Promise.resolve(results);\n\t}\n\n\treturn Promise.resolve(null).then(thenHandler);\n}\n\nexport function first<T>(promiseFactories: ITask<Promise<T>>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null): Promise<T | null> {\n\tlet index = 0;\n\tconst len = promiseFactories.length;\n\n\tconst loop: () => Promise<T | null> = () => {\n\t\tif (index >= len) {\n\t\t\treturn Promise.resolve(defaultValue);\n\t\t}\n\n\t\tconst factory = promiseFactories[index++];\n\t\tconst promise = Promise.resolve(factory());\n\n\t\treturn promise.then(result => {\n\t\t\tif (shouldStop(result)) {\n\t\t\t\treturn Promise.resolve(result);\n\t\t\t}\n\n\t\t\treturn loop();\n\t\t});\n\t};\n\n\treturn loop();\n}\n\n/**\n * Returns the result of the first promise that matches the \"shouldStop\",\n * running all promises in parallel. Supports cancelable promises.\n */\nexport function firstParallel<T>(promiseList: Promise<T>[], shouldStop?: (t: T) => boolean, defaultValue?: T | null): Promise<T | null>;\nexport function firstParallel<T, R extends T>(promiseList: Promise<T>[], shouldStop: (t: T) => t is R, defaultValue?: R | null): Promise<R | null>;\nexport function firstParallel<T>(promiseList: Promise<T>[], shouldStop: (t: T) => boolean = t => !!t, defaultValue: T | null = null) {\n\tif (promiseList.length === 0) {\n\t\treturn Promise.resolve(defaultValue);\n\t}\n\n\tlet todo = promiseList.length;\n\tconst finish = () => {\n\t\ttodo = -1;\n\t\tfor (const promise of promiseList) {\n\t\t\t(promise as Partial<CancelablePromise<T>>).cancel?.();\n\t\t}\n\t};\n\n\treturn new Promise<T | null>((resolve, reject) => {\n\t\tfor (const promise of promiseList) {\n\t\t\tpromise.then(result => {\n\t\t\t\tif (--todo >= 0 && shouldStop(result)) {\n\t\t\t\t\tfinish();\n\t\t\t\t\tresolve(result);\n\t\t\t\t} else if (todo === 0) {\n\t\t\t\t\tresolve(defaultValue);\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.catch(err => {\n\t\t\t\t\tif (--todo >= 0) {\n\t\t\t\t\t\tfinish();\n\t\t\t\t\t\treject(err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t});\n}\n\ninterface ILimitedTaskFactory<T> {\n\tfactory: ITask<Promise<T>>;\n\tc: (value: T | Promise<T>) => void;\n\te: (error?: unknown) => void;\n}\n\n/**\n * A helper to queue N promises and run them all with a max degree of parallelism. The helper\n * ensures that at any time no more than M promises are running at the same time.\n */\nexport class Limiter<T> {\n\n\tprivate _size = 0;\n\tprivate runningPromises: number;\n\tprivate maxDegreeOfParalellism: number;\n\tprivate outstandingPromises: ILimitedTaskFactory<T>[];\n\tprivate readonly _onFinished: Emitter<void>;\n\n\tconstructor(maxDegreeOfParalellism: number) {\n\t\tthis.maxDegreeOfParalellism = maxDegreeOfParalellism;\n\t\tthis.outstandingPromises = [];\n\t\tthis.runningPromises = 0;\n\t\tthis._onFinished = new Emitter<void>();\n\t}\n\n\tget onFinished(): Event<void> {\n\t\treturn this._onFinished.event;\n\t}\n\n\tget size(): number {\n\t\treturn this._size;\n\t}\n\n\tqueue(factory: ITask<Promise<T>>): Promise<T> {\n\t\tthis._size++;\n\n\t\treturn new Promise<T>((c, e) => {\n\t\t\tthis.outstandingPromises.push({ factory, c, e });\n\t\t\tthis.consume();\n\t\t});\n\t}\n\n\tprivate consume(): void {\n\t\twhile (this.outstandingPromises.length && this.runningPromises < this.maxDegreeOfParalellism) {\n\t\t\tconst iLimitedTask = this.outstandingPromises.shift()!;\n\t\t\tthis.runningPromises++;\n\n\t\t\tconst promise = iLimitedTask.factory();\n\t\t\tpromise.then(iLimitedTask.c, iLimitedTask.e);\n\t\t\tpromise.then(() => this.consumed(), () => this.consumed());\n\t\t}\n\t}\n\n\tprivate consumed(): void {\n\t\tthis._size--;\n\t\tthis.runningPromises--;\n\n\t\tif (this.outstandingPromises.length > 0) {\n\t\t\tthis.consume();\n\t\t} else {\n\t\t\tthis._onFinished.fire();\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis._onFinished.dispose();\n\t}\n}\n\n/**\n * A queue is handles one promise at a time and guarantees that at any time only one promise is executing.\n */\nexport class Queue<T> extends Limiter<T> {\n\n\tconstructor() {\n\t\tsuper(1);\n\t}\n}\n\n/**\n * A helper to organize queues per resource. The ResourceQueue makes sure to manage queues per resource\n * by disposing them once the queue is empty.\n */\nexport class ResourceQueue implements IDisposable {\n\n\tprivate readonly queues = new Map<string, Queue<void>>();\n\n\tqueueFor(resource: URI, extUri: IExtUri = defaultExtUri): Queue<void> {\n\t\tconst key = extUri.getComparisonKey(resource);\n\n\t\tlet queue = this.queues.get(key);\n\t\tif (!queue) {\n\t\t\tqueue = new Queue<void>();\n\t\t\tEvent.once(queue.onFinished)(() => {\n\t\t\t\tqueue?.dispose();\n\t\t\t\tthis.queues.delete(key);\n\t\t\t});\n\n\t\t\tthis.queues.set(key, queue);\n\t\t}\n\n\t\treturn queue;\n\t}\n\n\tdispose(): void {\n\t\tthis.queues.forEach(queue => queue.dispose());\n\t\tthis.queues.clear();\n\t}\n}\n\nexport class TimeoutTimer implements IDisposable {\n\tprivate _token: any;\n\n\tconstructor();\n\tconstructor(runner: () => void, timeout: number);\n\tconstructor(runner?: () => void, timeout?: number) {\n\t\tthis._token = -1;\n\n\t\tif (typeof runner === 'function' && typeof timeout === 'number') {\n\t\t\tthis.setIfNotSet(runner, timeout);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearTimeout(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, timeout: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n\n\tsetIfNotSet(runner: () => void, timeout: number): void {\n\t\tif (this._token !== -1) {\n\t\t\t// timer is already set\n\t\t\treturn;\n\t\t}\n\t\tthis._token = setTimeout(() => {\n\t\t\tthis._token = -1;\n\t\t\trunner();\n\t\t}, timeout);\n\t}\n}\n\nexport class IntervalTimer implements IDisposable {\n\n\tprivate _token: any;\n\n\tconstructor() {\n\t\tthis._token = -1;\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t}\n\n\tcancel(): void {\n\t\tif (this._token !== -1) {\n\t\t\tclearInterval(this._token);\n\t\t\tthis._token = -1;\n\t\t}\n\t}\n\n\tcancelAndSet(runner: () => void, interval: number): void {\n\t\tthis.cancel();\n\t\tthis._token = setInterval(() => {\n\t\t\trunner();\n\t\t}, interval);\n\t}\n}\n\nexport class RunOnceScheduler {\n\n\tprotected runner: ((...args: unknown[]) => void) | null;\n\n\tprivate timeoutToken: any;\n\tprivate timeout: number;\n\tprivate timeoutHandler: () => void;\n\n\tconstructor(runner: (...args: any[]) => void, delay: number) {\n\t\tthis.timeoutToken = -1;\n\t\tthis.runner = runner;\n\t\tthis.timeout = delay;\n\t\tthis.timeoutHandler = this.onTimeout.bind(this);\n\t}\n\n\t/**\n\t * Dispose RunOnceScheduler\n\t */\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\t/**\n\t * Cancel current scheduled runner (if any).\n\t */\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearTimeout(this.timeoutToken);\n\t\t\tthis.timeoutToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tthis.cancel();\n\t\tthis.timeoutToken = setTimeout(this.timeoutHandler, delay);\n\t}\n\n\tget delay(): number {\n\t\treturn this.timeout;\n\t}\n\n\tset delay(value: number) {\n\t\tthis.timeout = value;\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.timeoutToken !== -1;\n\t}\n\n\tprivate onTimeout() {\n\t\tthis.timeoutToken = -1;\n\t\tif (this.runner) {\n\t\t\tthis.doRun();\n\t\t}\n\t}\n\n\tprotected doRun(): void {\n\t\tif (this.runner) {\n\t\t\tthis.runner();\n\t\t}\n\t}\n}\n\n/**\n * Same as `RunOnceScheduler`, but doesn't count the time spent in sleep mode.\n * > **NOTE**: Only offers 1s resolution.\n *\n * When calling `setTimeout` with 3hrs, and putting the computer immediately to sleep\n * for 8hrs, `setTimeout` will fire **as soon as the computer wakes from sleep**. But\n * this scheduler will execute 3hrs **after waking the computer from sleep**.\n */\nexport class ProcessTimeRunOnceScheduler {\n\n\tprivate runner: (() => void) | null;\n\tprivate timeout: number;\n\n\tprivate counter: number;\n\tprivate intervalToken: any;\n\tprivate intervalHandler: () => void;\n\n\tconstructor(runner: () => void, delay: number) {\n\t\tif (delay % 1000 !== 0) {\n\t\t\tconsole.warn(`ProcessTimeRunOnceScheduler resolution is 1s, ${delay}ms is not a multiple of 1000ms.`);\n\t\t}\n\t\tthis.runner = runner;\n\t\tthis.timeout = delay;\n\t\tthis.counter = 0;\n\t\tthis.intervalToken = -1;\n\t\tthis.intervalHandler = this.onInterval.bind(this);\n\t}\n\n\tdispose(): void {\n\t\tthis.cancel();\n\t\tthis.runner = null;\n\t}\n\n\tcancel(): void {\n\t\tif (this.isScheduled()) {\n\t\t\tclearInterval(this.intervalToken);\n\t\t\tthis.intervalToken = -1;\n\t\t}\n\t}\n\n\t/**\n\t * Cancel previous runner (if any) & schedule a new runner.\n\t */\n\tschedule(delay = this.timeout): void {\n\t\tif (delay % 1000 !== 0) {\n\t\t\tconsole.warn(`ProcessTimeRunOnceScheduler resolution is 1s, ${delay}ms is not a multiple of 1000ms.`);\n\t\t}\n\t\tthis.cancel();\n\t\tthis.counter = Math.ceil(delay / 1000);\n\t\tthis.intervalToken = setInterval(this.intervalHandler, 1000);\n\t}\n\n\t/**\n\t * Returns true if scheduled.\n\t */\n\tisScheduled(): boolean {\n\t\treturn this.intervalToken !== -1;\n\t}\n\n\tprivate onInterval() {\n\t\tthis.counter--;\n\t\tif (this.counter > 0) {\n\t\t\t// still need to wait\n\t\t\treturn;\n\t\t}\n\n\t\t// time elapsed\n\t\tclearInterval(this.intervalToken);\n\t\tthis.intervalToken = -1;\n\t\tif (this.runner) {\n\t\t\tthis.runner();\n\t\t}\n\t}\n}\n\nexport class RunOnceWorker<T> extends RunOnceScheduler {\n\tprivate units: T[] = [];\n\n\tconstructor(runner: (units: T[]) => void, timeout: number) {\n\t\tsuper(runner, timeout);\n\t}\n\n\twork(unit: T): void {\n\t\tthis.units.push(unit);\n\n\t\tif (!this.isScheduled()) {\n\t\t\tthis.schedule();\n\t\t}\n\t}\n\n\tprotected override doRun(): void {\n\t\tconst units = this.units;\n\t\tthis.units = [];\n\n\t\tif (this.runner) {\n\t\t\tthis.runner(units);\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tthis.units = [];\n\n\t\tsuper.dispose();\n\t}\n}\n\n/**\n * The `ThrottledWorker` will accept units of work `T`\n * to handle. The contract is:\n * * there is a maximum of units the worker can handle at once (via `chunkSize`)\n * * after having handled units, the worker needs to rest (via `throttleDelay`)\n */\nexport class ThrottledWorker<T> extends Disposable {\n\n\tprivate readonly pendingWork: T[] = [];\n\n\tprivate readonly throttler = this._register(new MutableDisposable<RunOnceScheduler>());\n\tprivate disposed = false;\n\n\tconstructor(\n\t\tprivate readonly maxWorkChunkSize: number,\n\t\tprivate readonly maxPendingWork: number | undefined,\n\t\tprivate readonly throttleDelay: number,\n\t\tprivate readonly handler: (units: readonly T[]) => void\n\t) {\n\t\tsuper();\n\t}\n\n\t/**\n\t * The number of work units that are pending to be processed.\n\t */\n\tget pending(): number { return this.pendingWork.length; }\n\n\t/**\n\t * Add units to be worked on. Use `pending` to figure out\n\t * how many units are not yet processed after this method\n\t * was called.\n\t *\n\t * @returns whether the work was accepted or not. If the\n\t * worker is disposed, it will not accept any more work.\n\t * If the number of pending units would become larger\n\t * than `maxPendingWork`, more work will also not be accepted.\n\t */\n\twork(units: readonly T[]): boolean {\n\t\tif (this.disposed) {\n\t\t\treturn false; // work not accepted: disposed\n\t\t}\n\n\t\t// Check for reaching maximum of pending work\n\t\tif (typeof this.maxPendingWork === 'number') {\n\n\t\t\t// Throttled: simple check if pending + units exceeds max pending\n\t\t\tif (this.throttler.value) {\n\t\t\t\tif (this.pending + units.length > this.maxPendingWork) {\n\t\t\t\t\treturn false; // work not accepted: too much pending work\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Unthrottled: same as throttled, but account for max chunk getting\n\t\t\t// worked on directly without being pending\n\t\t\telse {\n\t\t\t\tif (this.pending + units.length - this.maxWorkChunkSize > this.maxPendingWork) {\n\t\t\t\t\treturn false; // work not accepted: too much pending work\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add to pending units first\n\t\tthis.pendingWork.push(...units);\n\n\t\t// If not throttled, start working directly\n\t\t// Otherwise, when the throttle delay has\n\t\t// past, pending work will be worked again.\n\t\tif (!this.throttler.value) {\n\t\t\tthis.doWork();\n\t\t}\n\n\t\treturn true; // work accepted\n\t}\n\n\tprivate doWork(): void {\n\n\t\t// Extract chunk to handle and handle it\n\t\tthis.handler(this.pendingWork.splice(0, this.maxWorkChunkSize));\n\n\t\t// If we have remaining work, schedule it after a delay\n\t\tif (this.pendingWork.length > 0) {\n\t\t\tthis.throttler.value = new RunOnceScheduler(() => {\n\t\t\t\tthis.throttler.clear();\n\n\t\t\t\tthis.doWork();\n\t\t\t}, this.throttleDelay);\n\t\t\tthis.throttler.value.schedule();\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.disposed = true;\n\t}\n}\n\n//#region -- run on idle tricks ------------\n\nexport interface IdleDeadline {\n\treadonly didTimeout: boolean;\n\ttimeRemaining(): number;\n}\n\n/**\n * Execute the callback the next time the browser is idle\n */\nexport let runWhenIdle: (callback: (idle: IdleDeadline) => void, timeout?: number) => IDisposable;\n\ndeclare function requestIdleCallback(callback: (args: IdleDeadline) => void, options?: { timeout: number }): number;\ndeclare function cancelIdleCallback(handle: number): void;\n\n(function () {\n\tif (typeof requestIdleCallback !== 'function' || typeof cancelIdleCallback !== 'function') {\n\t\trunWhenIdle = (runner) => {\n\t\t\tsetTimeout0(() => {\n\t\t\t\tif (disposed) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst end = Date.now() + 3; // yield often\n\t\t\t\trunner(Object.freeze({\n\t\t\t\t\tdidTimeout: true,\n\t\t\t\t\ttimeRemaining() {\n\t\t\t\t\t\treturn Math.max(0, end - Date.now());\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t});\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t} else {\n\t\trunWhenIdle = (runner, timeout?) => {\n\t\t\tconst handle: number = requestIdleCallback(runner, typeof timeout === 'number' ? { timeout } : undefined);\n\t\t\tlet disposed = false;\n\t\t\treturn {\n\t\t\t\tdispose() {\n\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tdisposed = true;\n\t\t\t\t\tcancelIdleCallback(handle);\n\t\t\t\t}\n\t\t\t};\n\t\t};\n\t}\n})();\n\n/**\n * An implementation of the \"idle-until-urgent\"-strategy as introduced\n * here: https://philipwalton.com/articles/idle-until-urgent/\n */\nexport class IdleValue<T> {\n\n\tprivate readonly _executor: () => void;\n\tprivate readonly _handle: IDisposable;\n\n\tprivate _didRun: boolean = false;\n\tprivate _value?: T;\n\tprivate _error: unknown;\n\n\tconstructor(executor: () => T) {\n\t\tthis._executor = () => {\n\t\t\ttry {\n\t\t\t\tthis._value = executor();\n\t\t\t} catch (err) {\n\t\t\t\tthis._error = err;\n\t\t\t} finally {\n\t\t\t\tthis._didRun = true;\n\t\t\t}\n\t\t};\n\t\tthis._handle = runWhenIdle(() => this._executor());\n\t}\n\n\tdispose(): void {\n\t\tthis._handle.dispose();\n\t}\n\n\tget value(): T {\n\t\tif (!this._didRun) {\n\t\t\tthis._handle.dispose();\n\t\t\tthis._executor();\n\t\t}\n\t\tif (this._error) {\n\t\t\tthrow this._error;\n\t\t}\n\t\treturn this._value!;\n\t}\n\n\tget isInitialized(): boolean {\n\t\treturn this._didRun;\n\t}\n}\n\n//#endregion\n\nexport async function retry<T>(task: ITask<Promise<T>>, delay: number, retries: number): Promise<T> {\n\tlet lastError: Error | undefined;\n\n\tfor (let i = 0; i < retries; i++) {\n\t\ttry {\n\t\t\treturn await task();\n\t\t} catch (error) {\n\t\t\tlastError = error;\n\n\t\t\tawait timeout(delay);\n\t\t}\n\t}\n\n\tthrow lastError;\n}\n\n//#region Task Sequentializer\n\ninterface IPendingTask {\n\ttaskId: number;\n\tcancel: () => void;\n\tpromise: Promise<void>;\n}\n\ninterface ISequentialTask {\n\tpromise: Promise<void>;\n\tpromiseResolve: () => void;\n\tpromiseReject: (error: Error) => void;\n\trun: () => Promise<void>;\n}\n\nexport interface ITaskSequentializerWithPendingTask {\n\treadonly pending: Promise<void>;\n}\n\nexport class TaskSequentializer {\n\tprivate _pending?: IPendingTask;\n\tprivate _next?: ISequentialTask;\n\n\thasPending(taskId?: number): this is ITaskSequentializerWithPendingTask {\n\t\tif (!this._pending) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (typeof taskId === 'number') {\n\t\t\treturn this._pending.taskId === taskId;\n\t\t}\n\n\t\treturn !!this._pending;\n\t}\n\n\tget pending(): Promise<void> | undefined {\n\t\treturn this._pending ? this._pending.promise : undefined;\n\t}\n\n\tcancelPending(): void {\n\t\tthis._pending?.cancel();\n\t}\n\n\tsetPending(taskId: number, promise: Promise<void>, onCancel?: () => void,): Promise<void> {\n\t\tthis._pending = { taskId, cancel: () => onCancel?.(), promise };\n\n\t\tpromise.then(() => this.donePending(taskId), () => this.donePending(taskId));\n\n\t\treturn promise;\n\t}\n\n\tprivate donePending(taskId: number): void {\n\t\tif (this._pending && taskId === this._pending.taskId) {\n\n\t\t\t// only set pending to done if the promise finished that is associated with that taskId\n\t\t\tthis._pending = undefined;\n\n\t\t\t// schedule the next task now that we are free if we have any\n\t\t\tthis.triggerNext();\n\t\t}\n\t}\n\n\tprivate triggerNext(): void {\n\t\tif (this._next) {\n\t\t\tconst next = this._next;\n\t\t\tthis._next = undefined;\n\n\t\t\t// Run next task and complete on the associated promise\n\t\t\tnext.run().then(next.promiseResolve, next.promiseReject);\n\t\t}\n\t}\n\n\tsetNext(run: () => Promise<void>): Promise<void> {\n\n\t\t// this is our first next task, so we create associated promise with it\n\t\t// so that we can return a promise that completes when the task has\n\t\t// completed.\n\t\tif (!this._next) {\n\t\t\tlet promiseResolve: () => void;\n\t\t\tlet promiseReject: (error: Error) => void;\n\t\t\tconst promise = new Promise<void>((resolve, reject) => {\n\t\t\t\tpromiseResolve = resolve;\n\t\t\t\tpromiseReject = reject;\n\t\t\t});\n\n\t\t\tthis._next = {\n\t\t\t\trun,\n\t\t\t\tpromise,\n\t\t\t\tpromiseResolve: promiseResolve!,\n\t\t\t\tpromiseReject: promiseReject!\n\t\t\t};\n\t\t}\n\n\t\t// we have a previous next task, just overwrite it\n\t\telse {\n\t\t\tthis._next.run = run;\n\t\t}\n\n\t\treturn this._next.promise;\n\t}\n}\n\n//#endregion\n\n//#region\n\n/**\n * The `IntervalCounter` allows to count the number\n * of calls to `increment()` over a duration of\n * `interval`. This utility can be used to conditionally\n * throttle a frequent task when a certain threshold\n * is reached.\n */\nexport class IntervalCounter {\n\n\tprivate lastIncrementTime = 0;\n\n\tprivate value = 0;\n\n\tconstructor(private readonly interval: number, private readonly nowFn = () => Date.now()) { }\n\n\tincrement(): number {\n\t\tconst now = this.nowFn();\n\n\t\t// We are outside of the range of `interval` and as such\n\t\t// start counting from 0 and remember the time\n\t\tif (now - this.lastIncrementTime > this.interval) {\n\t\t\tthis.lastIncrementTime = now;\n\t\t\tthis.value = 0;\n\t\t}\n\n\t\tthis.value++;\n\n\t\treturn this.value;\n\t}\n}\n\n//#endregion\n\n//#region\n\nexport type ValueCallback<T = unknown> = (value: T | Promise<T>) => void;\n\n/**\n * Creates a promise whose resolution or rejection can be controlled imperatively.\n */\nexport class DeferredPromise<T> {\n\n\tprivate completeCallback!: ValueCallback<T>;\n\tprivate errorCallback!: (err: unknown) => void;\n\tprivate rejected = false;\n\tprivate resolved = false;\n\n\tpublic get isRejected() {\n\t\treturn this.rejected;\n\t}\n\n\tpublic get isResolved() {\n\t\treturn this.resolved;\n\t}\n\n\tpublic get isSettled() {\n\t\treturn this.rejected || this.resolved;\n\t}\n\n\tpublic p: Promise<T>;\n\n\tconstructor() {\n\t\tthis.p = new Promise<T>((c, e) => {\n\t\t\tthis.completeCallback = c;\n\t\t\tthis.errorCallback = e;\n\t\t});\n\t}\n\n\tpublic complete(value: T) {\n\t\treturn new Promise<void>(resolve => {\n\t\t\tthis.completeCallback(value);\n\t\t\tthis.resolved = true;\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tpublic error(err: unknown) {\n\t\treturn new Promise<void>(resolve => {\n\t\t\tthis.errorCallback(err);\n\t\t\tthis.rejected = true;\n\t\t\tresolve();\n\t\t});\n\t}\n\n\tpublic cancel() {\n\t\tnew Promise<void>(resolve => {\n\t\t\tthis.errorCallback(canceled());\n\t\t\tthis.rejected = true;\n\t\t\tresolve();\n\t\t});\n\t}\n}\n\n//#endregion\n\n//#region Promises\n\nexport namespace Promises {\n\n\t/**\n\t * A drop-in replacement for `Promise.all` with the only difference\n\t * that the method awaits every promise to either fulfill or reject.\n\t *\n\t * Similar to `Promise.all`, only the first error will be returned\n\t * if any.\n\t */\n\texport async function settled<T>(promises: Promise<T>[]): Promise<T[]> {\n\t\tlet firstError: Error | undefined = undefined;\n\n\t\tconst result = await Promise.all(promises.map(promise => promise.then(value => value, error => {\n\t\t\tif (!firstError) {\n\t\t\t\tfirstError = error;\n\t\t\t}\n\n\t\t\treturn undefined; // do not rethrow so that other promises can settle\n\t\t})));\n\n\t\tif (typeof firstError !== 'undefined') {\n\t\t\tthrow firstError;\n\t\t}\n\n\t\treturn result as unknown as T[]; // cast is needed and protected by the `throw` above\n\t}\n\n\t/**\n\t * A helper to create a new `Promise<T>` with a body that is a promise\n\t * itself. By default, an error that raises from the async body will\n\t * end up as a unhandled rejection, so this utility properly awaits the\n\t * body and rejects the promise as a normal promise does without async\n\t * body.\n\t *\n\t * This method should only be used in rare cases where otherwise `async`\n\t * cannot be used (e.g. when callbacks are involved that require this).\n\t */\n\texport function withAsyncBody<T, E = Error>(bodyFn: (resolve: (value: T) => unknown, reject: (error: E) => unknown) => Promise<unknown>): Promise<T> {\n\t\t// eslint-disable-next-line no-async-promise-executor\n\t\treturn new Promise<T>(async (resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tawait bodyFn(resolve, reject);\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t});\n\t}\n}\n\n//#endregion\n\n//#region\n\nconst enum AsyncIterableSourceState {\n\tInitial,\n\tDoneOK,\n\tDoneError,\n}\n\n/**\n * An object that allows to emit async values asynchronously or bring the iterable to an error state using `reject()`.\n * This emitter is valid only for the duration of the executor (until the promise returned by the executor settles).\n */\nexport interface AsyncIterableEmitter<T> {\n\t/**\n\t * The value will be appended at the end.\n\t *\n\t * **NOTE** If `reject()` has already been called, this method has no effect.\n\t */\n\temitOne(value: T): void;\n\t/**\n\t * The values will be appended at the end.\n\t *\n\t * **NOTE** If `reject()` has already been called, this method has no effect.\n\t */\n\temitMany(values: T[]): void;\n\t/**\n\t * Writing an error will permanently invalidate this iterable.\n\t * The current users will receive an error thrown, as will all future users.\n\t *\n\t * **NOTE** If `reject()` have already been called, this method has no effect.\n\t */\n\treject(error: Error): void;\n}\n\n/**\n * An executor for the `AsyncIterableObject` that has access to an emitter.\n */\nexport interface AyncIterableExecutor<T> {\n\t/**\n\t * @param emitter An object that allows to emit async values valid only for the duration of the executor.\n\t */\n\t(emitter: AsyncIterableEmitter<T>): void | Promise<void>\n}\n\n/**\n * A rich implementation for an `AsyncIterable<T>`.\n */\nexport class AsyncIterableObject<T> implements AsyncIterable<T> {\n\n\tpublic static fromArray<T>(items: T[]): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>((writer) => {\n\t\t\twriter.emitMany(items);\n\t\t});\n\t}\n\n\tpublic static fromPromise<T>(promise: Promise<T[]>): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>(async (emitter) => {\n\t\t\temitter.emitMany(await promise);\n\t\t});\n\t}\n\n\tpublic static fromPromises<T>(promises: Promise<T>[]): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>(async (emitter) => {\n\t\t\tawait Promise.all(promises.map(async (p) => emitter.emitOne(await p)));\n\t\t});\n\t}\n\n\tpublic static merge<T>(iterables: AsyncIterable<T>[]): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject(async (emitter) => {\n\t\t\tawait Promise.all(iterables.map(async (iterable) => {\n\t\t\t\tfor await(const item of iterable) {\n\t\t\t\t\temitter.emitOne(item);\n\t\t\t\t}\n\t\t\t}));\n\t\t});\n\t}\n\n\tpublic static EMPTY = AsyncIterableObject.fromArray<any>([]);\n\n\tprivate _state: AsyncIterableSourceState;\n\tprivate _results: T[];\n\tprivate _error: Error | null;\n\tprivate readonly _onStateChanged: Emitter<void>;\n\n\tconstructor(executor: AyncIterableExecutor<T>) {\n\t\tthis._state = AsyncIterableSourceState.Initial;\n\t\tthis._results = [];\n\t\tthis._error = null;\n\t\tthis._onStateChanged = new Emitter<void>();\n\n\t\tqueueMicrotask(async () => {\n\t\t\tconst writer: AsyncIterableEmitter<T> = {\n\t\t\t\temitOne: (item) => this.emitOne(item),\n\t\t\t\temitMany: (items) => this.emitMany(items),\n\t\t\t\treject: (error) => this.reject(error)\n\t\t\t};\n\t\t\ttry {\n\t\t\t\tawait Promise.resolve(executor(writer));\n\t\t\t\tthis.resolve();\n\t\t\t} catch (err) {\n\t\t\t\tthis.reject(err);\n\t\t\t} finally {\n\t\t\t\twriter.emitOne = undefined!;\n\t\t\t\twriter.emitMany = undefined!;\n\t\t\t\twriter.reject = undefined!;\n\t\t\t}\n\t\t});\n\t}\n\n\t[Symbol.asyncIterator](): AsyncIterator<T, undefined, undefined> {\n\t\tlet i = 0;\n\t\treturn {\n\t\t\tnext: async () => {\n\t\t\t\tdo {\n\t\t\t\t\tif (this._state === AsyncIterableSourceState.DoneError) {\n\t\t\t\t\t\tthrow this._error;\n\t\t\t\t\t}\n\t\t\t\t\tif (i < this._results.length) {\n\t\t\t\t\t\treturn { done: false, value: this._results[i++] };\n\t\t\t\t\t}\n\t\t\t\t\tif (this._state === AsyncIterableSourceState.DoneOK) {\n\t\t\t\t\t\treturn { done: true, value: undefined };\n\t\t\t\t\t}\n\t\t\t\t\tawait Event.toPromise(this._onStateChanged.event);\n\t\t\t\t} while (true);\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic static map<T, R>(iterable: AsyncIterable<T>, mapFn: (item: T) => R): AsyncIterableObject<R> {\n\t\treturn new AsyncIterableObject<R>(async (emitter) => {\n\t\t\tfor await(const item of iterable) {\n\t\t\t\temitter.emitOne(mapFn(item));\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic map<R>(mapFn: (item: T) => R): AsyncIterableObject<R> {\n\t\treturn AsyncIterableObject.map(this, mapFn);\n\t}\n\n\tpublic static filter<T>(iterable: AsyncIterable<T>, filterFn: (item: T) => boolean): AsyncIterableObject<T> {\n\t\treturn new AsyncIterableObject<T>(async (emitter) => {\n\t\t\tfor await(const item of iterable) {\n\t\t\t\tif (filterFn(item)) {\n\t\t\t\t\temitter.emitOne(item);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic filter(filterFn: (item: T) => boolean): AsyncIterableObject<T> {\n\t\treturn AsyncIterableObject.filter(this, filterFn);\n\t}\n\n\tpublic static coalesce<T>(iterable: AsyncIterable<T | undefined | null>): AsyncIterableObject<T> {\n\t\treturn <AsyncIterableObject<T>>AsyncIterableObject.filter(iterable, item => !!item);\n\t}\n\n\tpublic coalesce(): AsyncIterableObject<NonNullable<T>> {\n\t\treturn AsyncIterableObject.coalesce(this) as AsyncIterableObject<NonNullable<T>>;\n\t}\n\n\tpublic static async toPromise<T>(iterable: AsyncIterable<T>): Promise<T[]> {\n\t\tconst result: T[] = [];\n\t\tfor await (const item of iterable) {\n\t\t\tresult.push(item);\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic toPromise(): Promise<T[]> {\n\t\treturn AsyncIterableObject.toPromise(this);\n\t}\n\n\t/**\n\t * The value will be appended at the end.\n\t *\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate emitOne(value: T): void {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\t// it is important to add new values at the end,\n\t\t// as we may have iterators already running on the array\n\t\tthis._results.push(value);\n\t\tthis._onStateChanged.fire();\n\t}\n\n\t/**\n\t * The values will be appended at the end.\n\t *\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate emitMany(values: T[]): void {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\t// it is important to add new values at the end,\n\t\t// as we may have iterators already running on the array\n\t\tthis._results = this._results.concat(values);\n\t\tthis._onStateChanged.fire();\n\t}\n\n\t/**\n\t * Calling `resolve()` will mark the result array as complete.\n\t *\n\t * **NOTE** `resolve()` must be called, otherwise all consumers of this iterable will hang indefinitely, similar to a non-resolved promise.\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate resolve(): void {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\tthis._state = AsyncIterableSourceState.DoneOK;\n\t\tthis._onStateChanged.fire();\n\t}\n\n\t/**\n\t * Writing an error will permanently invalidate this iterable.\n\t * The current users will receive an error thrown, as will all future users.\n\t *\n\t * **NOTE** If `resolve()` or `reject()` have already been called, this method has no effect.\n\t */\n\tprivate reject(error: Error) {\n\t\tif (this._state !== AsyncIterableSourceState.Initial) {\n\t\t\treturn;\n\t\t}\n\t\tthis._state = AsyncIterableSourceState.DoneError;\n\t\tthis._error = error;\n\t\tthis._onStateChanged.fire();\n\t}\n}\n\nexport class CancelableAsyncIterableObject<T> extends AsyncIterableObject<T> {\n\tconstructor(\n\t\tprivate readonly _source: CancellationTokenSource,\n\t\texecutor: AyncIterableExecutor<T>\n\t) {\n\t\tsuper(executor);\n\t}\n\n\tcancel(): void {\n\t\tthis._source.cancel();\n\t}\n}\n\nexport function createCancelableAsyncIterable<T>(callback: (token: CancellationToken) => AsyncIterable<T>): CancelableAsyncIterableObject<T> {\n\tconst source = new CancellationTokenSource();\n\tconst innerIterable = callback(source.token);\n\n\treturn new CancelableAsyncIterableObject<T>(source, async (emitter) => {\n\t\tconst subscription = source.token.onCancellationRequested(() => {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\temitter.reject(canceled());\n\t\t});\n\t\ttry {\n\t\t\tfor await (const item of innerIterable) {\n\t\t\t\tif (source.token.isCancellationRequested) {\n\t\t\t\t\t// canceled in the meantime\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\temitter.emitOne(item);\n\t\t\t}\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t} catch (err) {\n\t\t\tsubscription.dispose();\n\t\t\tsource.dispose();\n\t\t\temitter.reject(err);\n\t\t}\n\t});\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { hasDriveLetter, isRootOrDriveLetter } from 'vs/base/common/extpath';\nimport { Schemas } from 'vs/base/common/network';\nimport { normalize, posix, sep, win32 } from 'vs/base/common/path';\nimport { isLinux, isMacintosh, isWindows } from 'vs/base/common/platform';\nimport { basename, isEqual, relativePath } from 'vs/base/common/resources';\nimport { rtrim, startsWithIgnoreCase } from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\n\nexport interface IWorkspaceFolderProvider {\n\tgetWorkspaceFolder(resource: URI): { uri: URI, name?: string; } | null;\n\tgetWorkspace(): {\n\t\tfolders: { uri: URI, name?: string; }[];\n\t};\n}\n\nexport interface IUserHomeProvider {\n\tuserHome?: URI;\n}\n\n/**\n * @deprecated use LabelService instead\n */\nexport function getPathLabel(resource: URI | string, userHomeProvider?: IUserHomeProvider, rootProvider?: IWorkspaceFolderProvider): string {\n\tif (typeof resource === 'string') {\n\t\tresource = URI.file(resource);\n\t}\n\n\t// return early if we can resolve a relative path label from the root\n\tif (rootProvider) {\n\t\tconst baseResource = rootProvider.getWorkspaceFolder(resource);\n\t\tif (baseResource) {\n\t\t\tconst hasMultipleRoots = rootProvider.getWorkspace().folders.length > 1;\n\n\t\t\tlet pathLabel: string;\n\t\t\tif (isEqual(baseResource.uri, resource)) {\n\t\t\t\tpathLabel = ''; // no label if paths are identical\n\t\t\t} else {\n\t\t\t\tpathLabel = relativePath(baseResource.uri, resource)!;\n\t\t\t}\n\n\t\t\tif (hasMultipleRoots) {\n\t\t\t\tconst rootName = baseResource.name ? baseResource.name : basename(baseResource.uri);\n\t\t\t\tpathLabel = pathLabel ? (rootName + ' • ' + pathLabel) : rootName; // always show root basename if there are multiple\n\t\t\t}\n\n\t\t\treturn pathLabel;\n\t\t}\n\t}\n\n\t// return if the resource is neither file:// nor untitled:// and no baseResource was provided\n\tif (resource.scheme !== Schemas.file && resource.scheme !== Schemas.untitled) {\n\t\treturn resource.with({ query: null, fragment: null }).toString(true);\n\t}\n\n\t// convert c:\\something => C:\\something\n\tif (hasDriveLetter(resource.fsPath)) {\n\t\treturn normalize(normalizeDriveLetter(resource.fsPath));\n\t}\n\n\t// normalize and tildify (macOS, Linux only)\n\tlet res = normalize(resource.fsPath);\n\tif (!isWindows && userHomeProvider?.userHome) {\n\t\tres = tildify(res, userHomeProvider.userHome.fsPath);\n\t}\n\n\treturn res;\n}\n\nexport function getBaseLabel(resource: URI | string): string;\nexport function getBaseLabel(resource: URI | string | undefined): string | undefined;\nexport function getBaseLabel(resource: URI | string | undefined): string | undefined {\n\tif (!resource) {\n\t\treturn undefined;\n\t}\n\n\tif (typeof resource === 'string') {\n\t\tresource = URI.file(resource);\n\t}\n\n\tconst base = basename(resource) || (resource.scheme === Schemas.file ? resource.fsPath : resource.path) /* can be empty string if '/' is passed in */;\n\n\t// convert c: => C:\n\tif (isWindows && isRootOrDriveLetter(base)) {\n\t\treturn normalizeDriveLetter(base);\n\t}\n\n\treturn base;\n}\n\nexport function normalizeDriveLetter(path: string, continueAsWindows?: boolean): string {\n\tif (hasDriveLetter(path, continueAsWindows)) {\n\t\treturn path.charAt(0).toUpperCase() + path.slice(1);\n\t}\n\n\treturn path;\n}\n\nlet normalizedUserHomeCached: { original: string; normalized: string; } = Object.create(null);\nexport function tildify(path: string, userHome: string): string {\n\tif (isWindows || !path || !userHome) {\n\t\treturn path; // unsupported\n\t}\n\n\t// Keep a normalized user home path as cache to prevent accumulated string creation\n\tlet normalizedUserHome = normalizedUserHomeCached.original === userHome ? normalizedUserHomeCached.normalized : undefined;\n\tif (!normalizedUserHome) {\n\t\tnormalizedUserHome = `${rtrim(userHome, posix.sep)}${posix.sep}`;\n\t\tnormalizedUserHomeCached = { original: userHome, normalized: normalizedUserHome };\n\t}\n\n\t// Linux: case sensitive, macOS: case insensitive\n\tif (isLinux ? path.startsWith(normalizedUserHome) : startsWithIgnoreCase(path, normalizedUserHome)) {\n\t\tpath = `~/${path.substr(normalizedUserHome.length)}`;\n\t}\n\n\treturn path;\n}\n\nexport function untildify(path: string, userHome: string): string {\n\treturn path.replace(/^~($|\\/|\\\\)/, `${userHome}$1`);\n}\n\n/**\n * Shortens the paths but keeps them easy to distinguish.\n * Replaces not important parts with ellipsis.\n * Every shorten path matches only one original path and vice versa.\n *\n * Algorithm for shortening paths is as follows:\n * 1. For every path in list, find unique substring of that path.\n * 2. Unique substring along with ellipsis is shortened path of that path.\n * 3. To find unique substring of path, consider every segment of length from 1 to path.length of path from end of string\n *    and if present segment is not substring to any other paths then present segment is unique path,\n *    else check if it is not present as suffix of any other path and present segment is suffix of path itself,\n *    if it is true take present segment as unique path.\n * 4. Apply ellipsis to unique segment according to whether segment is present at start/in-between/end of path.\n *\n * Example 1\n * 1. consider 2 paths i.e. ['a\\\\b\\\\c\\\\d', 'a\\\\f\\\\b\\\\c\\\\d']\n * 2. find unique path of first path,\n * \ta. 'd' is present in path2 and is suffix of path2, hence not unique of present path.\n * \tb. 'c' is present in path2 and 'c' is not suffix of present path, similarly for 'b' and 'a' also.\n * \tc. 'd\\\\c' is suffix of path2.\n *  d. 'b\\\\c' is not suffix of present path.\n *  e. 'a\\\\b' is not present in path2, hence unique path is 'a\\\\b...'.\n * 3. for path2, 'f' is not present in path1 hence unique is '...\\\\f\\\\...'.\n *\n * Example 2\n * 1. consider 2 paths i.e. ['a\\\\b', 'a\\\\b\\\\c'].\n * \ta. Even if 'b' is present in path2, as 'b' is suffix of path1 and is not suffix of path2, unique path will be '...\\\\b'.\n * 2. for path2, 'c' is not present in path1 hence unique path is '..\\\\c'.\n */\nconst ellipsis = '\\u2026';\nconst unc = '\\\\\\\\';\nconst home = '~';\nexport function shorten(paths: string[], pathSeparator: string = sep): string[] {\n\tconst shortenedPaths: string[] = new Array(paths.length);\n\n\t// for every path\n\tlet match = false;\n\tfor (let pathIndex = 0; pathIndex < paths.length; pathIndex++) {\n\t\tlet path = paths[pathIndex];\n\n\t\tif (path === '') {\n\t\t\tshortenedPaths[pathIndex] = `.${pathSeparator}`;\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!path) {\n\t\t\tshortenedPaths[pathIndex] = path;\n\t\t\tcontinue;\n\t\t}\n\n\t\tmatch = true;\n\n\t\t// trim for now and concatenate unc path (e.g. \\\\network) or root path (/etc, ~/etc) later\n\t\tlet prefix = '';\n\t\tif (path.indexOf(unc) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(unc) + unc.length);\n\t\t\tpath = path.substr(path.indexOf(unc) + unc.length);\n\t\t} else if (path.indexOf(pathSeparator) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(pathSeparator) + pathSeparator.length);\n\t\t\tpath = path.substr(path.indexOf(pathSeparator) + pathSeparator.length);\n\t\t} else if (path.indexOf(home) === 0) {\n\t\t\tprefix = path.substr(0, path.indexOf(home) + home.length);\n\t\t\tpath = path.substr(path.indexOf(home) + home.length);\n\t\t}\n\n\t\t// pick the first shortest subpath found\n\t\tconst segments: string[] = path.split(pathSeparator);\n\t\tfor (let subpathLength = 1; match && subpathLength <= segments.length; subpathLength++) {\n\t\t\tfor (let start = segments.length - subpathLength; match && start >= 0; start--) {\n\t\t\t\tmatch = false;\n\t\t\t\tlet subpath = segments.slice(start, start + subpathLength).join(pathSeparator);\n\n\t\t\t\t// that is unique to any other path\n\t\t\t\tfor (let otherPathIndex = 0; !match && otherPathIndex < paths.length; otherPathIndex++) {\n\n\t\t\t\t\t// suffix subpath treated specially as we consider no match 'x' and 'x/...'\n\t\t\t\t\tif (otherPathIndex !== pathIndex && paths[otherPathIndex] && paths[otherPathIndex].indexOf(subpath) > -1) {\n\t\t\t\t\t\tconst isSubpathEnding: boolean = (start + subpathLength === segments.length);\n\n\t\t\t\t\t\t// Adding separator as prefix for subpath, such that 'endsWith(src, trgt)' considers subpath as directory name instead of plain string.\n\t\t\t\t\t\t// prefix is not added when either subpath is root directory or path[otherPathIndex] does not have multiple directories.\n\t\t\t\t\t\tconst subpathWithSep: string = (start > 0 && paths[otherPathIndex].indexOf(pathSeparator) > -1) ? pathSeparator + subpath : subpath;\n\t\t\t\t\t\tconst isOtherPathEnding: boolean = paths[otherPathIndex].endsWith(subpathWithSep);\n\n\t\t\t\t\t\tmatch = !isSubpathEnding || isOtherPathEnding;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// found unique subpath\n\t\t\t\tif (!match) {\n\t\t\t\t\tlet result = '';\n\n\t\t\t\t\t// preserve disk drive or root prefix\n\t\t\t\t\tif (segments[0].endsWith(':') || prefix !== '') {\n\t\t\t\t\t\tif (start === 1) {\n\t\t\t\t\t\t\t// extend subpath to include disk drive prefix\n\t\t\t\t\t\t\tstart = 0;\n\t\t\t\t\t\t\tsubpathLength++;\n\t\t\t\t\t\t\tsubpath = segments[0] + pathSeparator + subpath;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (start > 0) {\n\t\t\t\t\t\t\tresult = segments[0] + pathSeparator;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresult = prefix + result;\n\t\t\t\t\t}\n\n\t\t\t\t\t// add ellipsis at the beginning if needed\n\t\t\t\t\tif (start > 0) {\n\t\t\t\t\t\tresult = result + ellipsis + pathSeparator;\n\t\t\t\t\t}\n\n\t\t\t\t\tresult = result + subpath;\n\n\t\t\t\t\t// add ellipsis at the end if needed\n\t\t\t\t\tif (start + subpathLength < segments.length) {\n\t\t\t\t\t\tresult = result + pathSeparator + ellipsis;\n\t\t\t\t\t}\n\n\t\t\t\t\tshortenedPaths[pathIndex] = result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (match) {\n\t\t\tshortenedPaths[pathIndex] = path; // use full path if no unique subpaths found\n\t\t}\n\t}\n\n\treturn shortenedPaths;\n}\n\nexport interface ISeparator {\n\tlabel: string;\n}\n\nenum Type {\n\tTEXT,\n\tVARIABLE,\n\tSEPARATOR\n}\n\ninterface ISegment {\n\tvalue: string;\n\ttype: Type;\n}\n\n/**\n * Helper to insert values for specific template variables into the string. E.g. \"this $(is) a $(template)\" can be\n * passed to this function together with an object that maps \"is\" and \"template\" to strings to have them replaced.\n * @param value string to which template is applied\n * @param values the values of the templates to use\n */\nexport function template(template: string, values: { [key: string]: string | ISeparator | undefined | null; } = Object.create(null)): string {\n\tconst segments: ISegment[] = [];\n\n\tlet inVariable = false;\n\tlet curVal = '';\n\tfor (const char of template) {\n\t\t// Beginning of variable\n\t\tif (char === '$' || (inVariable && char === '{')) {\n\t\t\tif (curVal) {\n\t\t\t\tsegments.push({ value: curVal, type: Type.TEXT });\n\t\t\t}\n\n\t\t\tcurVal = '';\n\t\t\tinVariable = true;\n\t\t}\n\n\t\t// End of variable\n\t\telse if (char === '}' && inVariable) {\n\t\t\tconst resolved = values[curVal];\n\n\t\t\t// Variable\n\t\t\tif (typeof resolved === 'string') {\n\t\t\t\tif (resolved.length) {\n\t\t\t\t\tsegments.push({ value: resolved, type: Type.VARIABLE });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Separator\n\t\t\telse if (resolved) {\n\t\t\t\tconst prevSegment = segments[segments.length - 1];\n\t\t\t\tif (!prevSegment || prevSegment.type !== Type.SEPARATOR) {\n\t\t\t\t\tsegments.push({ value: resolved.label, type: Type.SEPARATOR }); // prevent duplicate separators\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcurVal = '';\n\t\t\tinVariable = false;\n\t\t}\n\n\t\t// Text or Variable Name\n\t\telse {\n\t\t\tcurVal += char;\n\t\t}\n\t}\n\n\t// Tail\n\tif (curVal && !inVariable) {\n\t\tsegments.push({ value: curVal, type: Type.TEXT });\n\t}\n\n\treturn segments.filter((segment, index) => {\n\n\t\t// Only keep separator if we have values to the left and right\n\t\tif (segment.type === Type.SEPARATOR) {\n\t\t\tconst left = segments[index - 1];\n\t\t\tconst right = segments[index + 1];\n\n\t\t\treturn [left, right].every(segment => segment && (segment.type === Type.VARIABLE || segment.type === Type.TEXT) && segment.value.length > 0);\n\t\t}\n\n\t\t// accept any TEXT and VARIABLE\n\t\treturn true;\n\t}).map(segment => segment.value).join('');\n}\n\n/**\n * Handles mnemonics for menu items. Depending on OS:\n * - Windows: Supported via & character (replace && with &)\n * -   Linux: Supported via & character (replace && with &)\n * -   macOS: Unsupported (replace && with empty string)\n */\nexport function mnemonicMenuLabel(label: string, forceDisableMnemonics?: boolean): string {\n\tif (isMacintosh || forceDisableMnemonics) {\n\t\treturn label.replace(/\\(&&\\w\\)|&&/g, '').replace(/&/g, isMacintosh ? '&' : '&&');\n\t}\n\n\treturn label.replace(/&&|&/g, m => m === '&' ? '&&' : '&');\n}\n\n/**\n * Handles mnemonics for buttons. Depending on OS:\n * - Windows: Supported via & character (replace && with & and & with && for escaping)\n * -   Linux: Supported via _ character (replace && with _)\n * -   macOS: Unsupported (replace && with empty string)\n */\nexport function mnemonicButtonLabel(label: string, forceDisableMnemonics?: boolean): string {\n\tif (isMacintosh || forceDisableMnemonics) {\n\t\treturn label.replace(/\\(&&\\w\\)|&&/g, '');\n\t}\n\n\tif (isWindows) {\n\t\treturn label.replace(/&&|&/g, m => m === '&' ? '&&' : '&');\n\t}\n\n\treturn label.replace(/&&/g, '_');\n}\n\nexport function unmnemonicLabel(label: string): string {\n\treturn label.replace(/&/g, '&&');\n}\n\n/**\n * Splits a path in name and parent path, supporting both '/' and '\\'\n */\nexport function splitName(fullPath: string): { name: string, parentPath: string; } {\n\tconst p = fullPath.indexOf('/') !== -1 ? posix : win32;\n\tconst name = p.basename(fullPath);\n\tconst parentPath = p.dirname(fullPath);\n\tif (name.length) {\n\t\treturn { name, parentPath };\n\t}\n\t// only the root segment\n\treturn { name: parentPath, parentPath: '' };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { MarshalledId, MarshalledObject } from 'vs/base/common/marshalling';\nimport { URI, UriComponents } from 'vs/base/common/uri';\n\nexport interface IURITransformer {\n\ttransformIncoming(uri: UriComponents): UriComponents;\n\ttransformOutgoing(uri: UriComponents): UriComponents;\n\ttransformOutgoingURI(uri: URI): URI;\n\ttransformOutgoingScheme(scheme: string): string;\n}\n\nexport interface UriParts {\n\tscheme: string;\n\tauthority?: string;\n\tpath?: string;\n\tquery?: string;\n\tfragment?: string;\n}\n\nexport interface IRawURITransformer {\n\ttransformIncoming(uri: UriParts): UriParts;\n\ttransformOutgoing(uri: UriParts): UriParts;\n\ttransformOutgoingScheme(scheme: string): string;\n}\n\nfunction toJSON(uri: URI): UriComponents {\n\treturn <UriComponents><any>uri.toJSON();\n}\n\nexport class URITransformer implements IURITransformer {\n\n\tprivate readonly _uriTransformer: IRawURITransformer;\n\n\tconstructor(uriTransformer: IRawURITransformer) {\n\t\tthis._uriTransformer = uriTransformer;\n\t}\n\n\tpublic transformIncoming(uri: UriComponents): UriComponents {\n\t\tconst result = this._uriTransformer.transformIncoming(uri);\n\t\treturn (result === uri ? uri : toJSON(URI.from(result)));\n\t}\n\n\tpublic transformOutgoing(uri: UriComponents): UriComponents {\n\t\tconst result = this._uriTransformer.transformOutgoing(uri);\n\t\treturn (result === uri ? uri : toJSON(URI.from(result)));\n\t}\n\n\tpublic transformOutgoingURI(uri: URI): URI {\n\t\tconst result = this._uriTransformer.transformOutgoing(uri);\n\t\treturn (result === uri ? uri : URI.from(result));\n\t}\n\n\tpublic transformOutgoingScheme(scheme: string): string {\n\t\treturn this._uriTransformer.transformOutgoingScheme(scheme);\n\t}\n}\n\nexport const DefaultURITransformer: IURITransformer = new class {\n\ttransformIncoming(uri: UriComponents) {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoing(uri: UriComponents): UriComponents {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoingURI(uri: URI): URI {\n\t\treturn uri;\n\t}\n\n\ttransformOutgoingScheme(scheme: string): string {\n\t\treturn scheme;\n\t}\n};\n\nfunction _transformOutgoingURIs(obj: any, transformer: IURITransformer, depth: number): any {\n\n\tif (!obj || depth > 200) {\n\t\treturn null;\n\t}\n\n\tif (typeof obj === 'object') {\n\t\tif (obj instanceof URI) {\n\t\t\treturn transformer.transformOutgoing(obj);\n\t\t}\n\n\t\t// walk object (or array)\n\t\tfor (let key in obj) {\n\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst r = _transformOutgoingURIs(obj[key], transformer, depth + 1);\n\t\t\t\tif (r !== null) {\n\t\t\t\t\tobj[key] = r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport function transformOutgoingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformOutgoingURIs(obj, transformer, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}\n\n\nfunction _transformIncomingURIs(obj: any, transformer: IURITransformer, revive: boolean, depth: number): any {\n\n\tif (!obj || depth > 200) {\n\t\treturn null;\n\t}\n\n\tif (typeof obj === 'object') {\n\n\t\tif ((<MarshalledObject>obj).$mid === MarshalledId.Uri) {\n\t\t\treturn revive ? URI.revive(transformer.transformIncoming(obj)) : transformer.transformIncoming(obj);\n\t\t}\n\n\t\t// walk object (or array)\n\t\tfor (let key in obj) {\n\t\t\tif (Object.hasOwnProperty.call(obj, key)) {\n\t\t\t\tconst r = _transformIncomingURIs(obj[key], transformer, revive, depth + 1);\n\t\t\t\tif (r !== null) {\n\t\t\t\t\tobj[key] = r;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n\nexport function transformIncomingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformIncomingURIs(obj, transformer, false, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}\n\nexport function transformAndReviveIncomingURIs<T>(obj: T, transformer: IURITransformer): T {\n\tconst result = _transformIncomingURIs(obj, transformer, true, 0);\n\tif (result === null) {\n\t\t// no change\n\t\treturn obj;\n\t}\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n\nexport function isUUID(value: string): boolean {\n\treturn _UUIDPattern.test(value);\n}\n\n// prep-work\nconst _data = new Uint8Array(16);\nconst _hex: string[] = [];\nfor (let i = 0; i < 256; i++) {\n\t_hex.push(i.toString(16).padStart(2, '0'));\n}\n\n// todo@jrieken - with node@15 crypto#getRandomBytes is available everywhere, https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues#browser_compatibility\nlet _fillRandomValues: (bucket: Uint8Array) => Uint8Array;\n\ndeclare const crypto: undefined | { getRandomValues(data: Uint8Array): Uint8Array };\n\nif (typeof crypto === 'object' && typeof crypto.getRandomValues === 'function') {\n\t// browser\n\t_fillRandomValues = crypto.getRandomValues.bind(crypto);\n\n} else {\n\t_fillRandomValues = function (bucket: Uint8Array): Uint8Array {\n\t\tfor (let i = 0; i < bucket.length; i++) {\n\t\t\tbucket[i] = Math.floor(Math.random() * 256);\n\t\t}\n\t\treturn bucket;\n\t};\n}\n\nexport function generateUuid(): string {\n\t// get data\n\t_fillRandomValues(_data);\n\n\t// set version bits\n\t_data[6] = (_data[6] & 0x0f) | 0x40;\n\t_data[8] = (_data[8] & 0x3f) | 0x80;\n\n\t// print as string\n\tlet i = 0;\n\tlet result = '';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += '-';\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\tresult += _hex[_data[i++]];\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { transformErrorForSerialization } from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { globals, isWeb } from 'vs/base/common/platform';\nimport * as types from 'vs/base/common/types';\nimport * as strings from 'vs/base/common/strings';\n\nconst INITIALIZE = '$initialize';\n\nexport interface IWorker extends IDisposable {\n\tgetId(): number;\n\tpostMessage(message: Message, transfer: ArrayBuffer[]): void;\n}\n\nexport interface IWorkerCallback {\n\t(message: Message): void;\n}\n\nexport interface IWorkerFactory {\n\tcreate(moduleId: string, callback: IWorkerCallback, onErrorCallback: (err: any) => void): IWorker;\n}\n\nlet webWorkerWarningLogged = false;\nexport function logOnceWebWorkerWarning(err: any): void {\n\tif (!isWeb) {\n\t\t// running tests\n\t\treturn;\n\t}\n\tif (!webWorkerWarningLogged) {\n\t\twebWorkerWarningLogged = true;\n\t\tconsole.warn('Could not create web worker(s). Falling back to loading web worker code in main thread, which might cause UI freezes. Please see https://github.com/microsoft/monaco-editor#faq');\n\t}\n\tconsole.warn(err.message);\n}\n\nconst enum MessageType {\n\tRequest,\n\tReply,\n\tSubscribeEvent,\n\tEvent,\n\tUnsubscribeEvent\n}\nclass RequestMessage {\n\tpublic readonly type = MessageType.Request;\n\tconstructor(\n\t\tpublic readonly vsWorker: number,\n\t\tpublic readonly req: string,\n\t\tpublic readonly method: string,\n\t\tpublic readonly args: any[]\n\t) { }\n}\nclass ReplyMessage {\n\tpublic readonly type = MessageType.Reply;\n\tconstructor(\n\t\tpublic readonly vsWorker: number,\n\t\tpublic readonly seq: string,\n\t\tpublic readonly res: any,\n\t\tpublic readonly err: any\n\t) { }\n}\nclass SubscribeEventMessage {\n\tpublic readonly type = MessageType.SubscribeEvent;\n\tconstructor(\n\t\tpublic readonly vsWorker: number,\n\t\tpublic readonly req: string,\n\t\tpublic readonly eventName: string,\n\t\tpublic readonly arg: any\n\t) { }\n}\nclass EventMessage {\n\tpublic readonly type = MessageType.Event;\n\tconstructor(\n\t\tpublic readonly vsWorker: number,\n\t\tpublic readonly req: string,\n\t\tpublic readonly event: any\n\t) { }\n}\nclass UnsubscribeEventMessage {\n\tpublic readonly type = MessageType.UnsubscribeEvent;\n\tconstructor(\n\t\tpublic readonly vsWorker: number,\n\t\tpublic readonly req: string\n\t) { }\n}\ntype Message = RequestMessage | ReplyMessage | SubscribeEventMessage | EventMessage | UnsubscribeEventMessage;\n\ninterface IMessageReply {\n\tresolve: (value?: any) => void;\n\treject: (error?: any) => void;\n}\n\ninterface IMessageHandler {\n\tsendMessage(msg: any, transfer?: ArrayBuffer[]): void;\n\thandleMessage(method: string, args: any[]): Promise<any>;\n\thandleEvent(eventName: string, arg: any): Event<any>;\n}\n\nclass SimpleWorkerProtocol {\n\n\tprivate _workerId: number;\n\tprivate _lastSentReq: number;\n\tprivate _pendingReplies: { [req: string]: IMessageReply; };\n\tprivate _pendingEmitters: Map<string, Emitter<any>>;\n\tprivate _pendingEvents: Map<string, IDisposable>;\n\tprivate _handler: IMessageHandler;\n\n\tconstructor(handler: IMessageHandler) {\n\t\tthis._workerId = -1;\n\t\tthis._handler = handler;\n\t\tthis._lastSentReq = 0;\n\t\tthis._pendingReplies = Object.create(null);\n\t\tthis._pendingEmitters = new Map<string, Emitter<any>>();\n\t\tthis._pendingEvents = new Map<string, IDisposable>();\n\t}\n\n\tpublic setWorkerId(workerId: number): void {\n\t\tthis._workerId = workerId;\n\t}\n\n\tpublic sendMessage(method: string, args: any[]): Promise<any> {\n\t\tconst req = String(++this._lastSentReq);\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\tthis._pendingReplies[req] = {\n\t\t\t\tresolve: resolve,\n\t\t\t\treject: reject\n\t\t\t};\n\t\t\tthis._send(new RequestMessage(this._workerId, req, method, args));\n\t\t});\n\t}\n\n\tpublic listen(eventName: string, arg: any): Event<any> {\n\t\tlet req: string | null = null;\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\treq = String(++this._lastSentReq);\n\t\t\t\tthis._pendingEmitters.set(req, emitter);\n\t\t\t\tthis._send(new SubscribeEventMessage(this._workerId, req, eventName, arg));\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis._pendingEmitters.delete(req!);\n\t\t\t\tthis._send(new UnsubscribeEventMessage(this._workerId, req!));\n\t\t\t\treq = null;\n\t\t\t}\n\t\t});\n\t\treturn emitter.event;\n\t}\n\n\tpublic handleMessage(message: Message): void {\n\t\tif (!message || !message.vsWorker) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._workerId !== -1 && message.vsWorker !== this._workerId) {\n\t\t\treturn;\n\t\t}\n\t\tthis._handleMessage(message);\n\t}\n\n\tprivate _handleMessage(msg: Message): void {\n\t\tswitch (msg.type) {\n\t\t\tcase MessageType.Reply:\n\t\t\t\treturn this._handleReplyMessage(msg);\n\t\t\tcase MessageType.Request:\n\t\t\t\treturn this._handleRequestMessage(msg);\n\t\t\tcase MessageType.SubscribeEvent:\n\t\t\t\treturn this._handleSubscribeEventMessage(msg);\n\t\t\tcase MessageType.Event:\n\t\t\t\treturn this._handleEventMessage(msg);\n\t\t\tcase MessageType.UnsubscribeEvent:\n\t\t\t\treturn this._handleUnsubscribeEventMessage(msg);\n\t\t}\n\t}\n\n\tprivate _handleReplyMessage(replyMessage: ReplyMessage): void {\n\t\tif (!this._pendingReplies[replyMessage.seq]) {\n\t\t\tconsole.warn('Got reply to unknown seq');\n\t\t\treturn;\n\t\t}\n\n\t\tlet reply = this._pendingReplies[replyMessage.seq];\n\t\tdelete this._pendingReplies[replyMessage.seq];\n\n\t\tif (replyMessage.err) {\n\t\t\tlet err = replyMessage.err;\n\t\t\tif (replyMessage.err.$isError) {\n\t\t\t\terr = new Error();\n\t\t\t\terr.name = replyMessage.err.name;\n\t\t\t\terr.message = replyMessage.err.message;\n\t\t\t\terr.stack = replyMessage.err.stack;\n\t\t\t}\n\t\t\treply.reject(err);\n\t\t\treturn;\n\t\t}\n\n\t\treply.resolve(replyMessage.res);\n\t}\n\n\tprivate _handleRequestMessage(requestMessage: RequestMessage): void {\n\t\tlet req = requestMessage.req;\n\t\tlet result = this._handler.handleMessage(requestMessage.method, requestMessage.args);\n\t\tresult.then((r) => {\n\t\t\tthis._send(new ReplyMessage(this._workerId, req, r, undefined));\n\t\t}, (e) => {\n\t\t\tif (e.detail instanceof Error) {\n\t\t\t\t// Loading errors have a detail property that points to the actual error\n\t\t\t\te.detail = transformErrorForSerialization(e.detail);\n\t\t\t}\n\t\t\tthis._send(new ReplyMessage(this._workerId, req, undefined, transformErrorForSerialization(e)));\n\t\t});\n\t}\n\n\tprivate _handleSubscribeEventMessage(msg: SubscribeEventMessage): void {\n\t\tconst req = msg.req;\n\t\tconst disposable = this._handler.handleEvent(msg.eventName, msg.arg)((event) => {\n\t\t\tthis._send(new EventMessage(this._workerId, req, event));\n\t\t});\n\t\tthis._pendingEvents.set(req, disposable);\n\t}\n\n\tprivate _handleEventMessage(msg: EventMessage): void {\n\t\tif (!this._pendingEmitters.has(msg.req)) {\n\t\t\tconsole.warn('Got event for unknown req');\n\t\t\treturn;\n\t\t}\n\t\tthis._pendingEmitters.get(msg.req)!.fire(msg.event);\n\t}\n\n\tprivate _handleUnsubscribeEventMessage(msg: UnsubscribeEventMessage): void {\n\t\tif (!this._pendingEvents.has(msg.req)) {\n\t\t\tconsole.warn('Got unsubscribe for unknown req');\n\t\t\treturn;\n\t\t}\n\t\tthis._pendingEvents.get(msg.req)!.dispose();\n\t\tthis._pendingEvents.delete(msg.req);\n\t}\n\n\tprivate _send(msg: Message): void {\n\t\tlet transfer: ArrayBuffer[] = [];\n\t\tif (msg.type === MessageType.Request) {\n\t\t\tfor (let i = 0; i < msg.args.length; i++) {\n\t\t\t\tif (msg.args[i] instanceof ArrayBuffer) {\n\t\t\t\t\ttransfer.push(msg.args[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (msg.type === MessageType.Reply) {\n\t\t\tif (msg.res instanceof ArrayBuffer) {\n\t\t\t\ttransfer.push(msg.res);\n\t\t\t}\n\t\t}\n\t\tthis._handler.sendMessage(msg, transfer);\n\t}\n}\n\nexport interface IWorkerClient<W> {\n\tgetProxyObject(): Promise<W>;\n\tdispose(): void;\n}\n\n/**\n * Main thread side\n */\nexport class SimpleWorkerClient<W extends object, H extends object> extends Disposable implements IWorkerClient<W> {\n\n\tprivate readonly _worker: IWorker;\n\tprivate readonly _onModuleLoaded: Promise<string[]>;\n\tprivate readonly _protocol: SimpleWorkerProtocol;\n\tprivate readonly _lazyProxy: Promise<W>;\n\n\tconstructor(workerFactory: IWorkerFactory, moduleId: string, host: H) {\n\t\tsuper();\n\n\t\tlet lazyProxyReject: ((err: any) => void) | null = null;\n\n\t\tthis._worker = this._register(workerFactory.create(\n\t\t\t'vs/base/common/worker/simpleWorker',\n\t\t\t(msg: Message) => {\n\t\t\t\tthis._protocol.handleMessage(msg);\n\t\t\t},\n\t\t\t(err: any) => {\n\t\t\t\t// in Firefox, web workers fail lazily :(\n\t\t\t\t// we will reject the proxy\n\t\t\t\tif (lazyProxyReject) {\n\t\t\t\t\tlazyProxyReject(err);\n\t\t\t\t}\n\t\t\t}\n\t\t));\n\n\t\tthis._protocol = new SimpleWorkerProtocol({\n\t\t\tsendMessage: (msg: any, transfer: ArrayBuffer[]): void => {\n\t\t\t\tthis._worker.postMessage(msg, transfer);\n\t\t\t},\n\t\t\thandleMessage: (method: string, args: any[]): Promise<any> => {\n\t\t\t\tif (typeof (host as any)[method] !== 'function') {\n\t\t\t\t\treturn Promise.reject(new Error('Missing method ' + method + ' on main thread host.'));\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\treturn Promise.resolve((host as any)[method].apply(host, args));\n\t\t\t\t} catch (e) {\n\t\t\t\t\treturn Promise.reject(e);\n\t\t\t\t}\n\t\t\t},\n\t\t\thandleEvent: (eventName: string, arg: any): Event<any> => {\n\t\t\t\tif (propertyIsDynamicEvent(eventName)) {\n\t\t\t\t\tconst event = (host as any)[eventName].call(host, arg);\n\t\t\t\t\tif (typeof event !== 'function') {\n\t\t\t\t\t\tthrow new Error(`Missing dynamic event ${eventName} on main thread host.`);\n\t\t\t\t\t}\n\t\t\t\t\treturn event;\n\t\t\t\t}\n\t\t\t\tif (propertyIsEvent(eventName)) {\n\t\t\t\t\tconst event = (host as any)[eventName];\n\t\t\t\t\tif (typeof event !== 'function') {\n\t\t\t\t\t\tthrow new Error(`Missing event ${eventName} on main thread host.`);\n\t\t\t\t\t}\n\t\t\t\t\treturn event;\n\t\t\t\t}\n\t\t\t\tthrow new Error(`Malformed event name ${eventName}`);\n\t\t\t}\n\t\t});\n\t\tthis._protocol.setWorkerId(this._worker.getId());\n\n\t\t// Gather loader configuration\n\t\tlet loaderConfiguration: any = null;\n\t\tif (typeof globals.require !== 'undefined' && typeof globals.require.getConfig === 'function') {\n\t\t\t// Get the configuration from the Monaco AMD Loader\n\t\t\tloaderConfiguration = globals.require.getConfig();\n\t\t} else if (typeof globals.requirejs !== 'undefined') {\n\t\t\t// Get the configuration from requirejs\n\t\t\tloaderConfiguration = globals.requirejs.s.contexts._.config;\n\t\t}\n\n\t\tconst hostMethods = types.getAllMethodNames(host);\n\n\t\t// Send initialize message\n\t\tthis._onModuleLoaded = this._protocol.sendMessage(INITIALIZE, [\n\t\t\tthis._worker.getId(),\n\t\t\tJSON.parse(JSON.stringify(loaderConfiguration)),\n\t\t\tmoduleId,\n\t\t\thostMethods,\n\t\t]);\n\n\t\t// Create proxy to loaded code\n\t\tconst proxyMethodRequest = (method: string, args: any[]): Promise<any> => {\n\t\t\treturn this._request(method, args);\n\t\t};\n\t\tconst proxyListen = (eventName: string, arg: any): Event<any> => {\n\t\t\treturn this._protocol.listen(eventName, arg);\n\t\t};\n\n\t\tthis._lazyProxy = new Promise<W>((resolve, reject) => {\n\t\t\tlazyProxyReject = reject;\n\t\t\tthis._onModuleLoaded.then((availableMethods: string[]) => {\n\t\t\t\tresolve(createProxyObject<W>(availableMethods, proxyMethodRequest, proxyListen));\n\t\t\t}, (e) => {\n\t\t\t\treject(e);\n\t\t\t\tthis._onError('Worker failed to load ' + moduleId, e);\n\t\t\t});\n\t\t});\n\t}\n\n\tpublic getProxyObject(): Promise<W> {\n\t\treturn this._lazyProxy;\n\t}\n\n\tprivate _request(method: string, args: any[]): Promise<any> {\n\t\treturn new Promise<any>((resolve, reject) => {\n\t\t\tthis._onModuleLoaded.then(() => {\n\t\t\t\tthis._protocol.sendMessage(method, args).then(resolve, reject);\n\t\t\t}, reject);\n\t\t});\n\t}\n\n\tprivate _onError(message: string, error?: any): void {\n\t\tconsole.error(message);\n\t\tconsole.info(error);\n\t}\n}\n\nfunction propertyIsEvent(name: string): boolean {\n\t// Assume a property is an event if it has a form of \"onSomething\"\n\treturn name[0] === 'o' && name[1] === 'n' && strings.isUpperAsciiLetter(name.charCodeAt(2));\n}\n\nfunction propertyIsDynamicEvent(name: string): boolean {\n\t// Assume a property is a dynamic event (a method that returns an event) if it has a form of \"onDynamicSomething\"\n\treturn /^onDynamic/.test(name) && strings.isUpperAsciiLetter(name.charCodeAt(9));\n}\n\nfunction createProxyObject<T extends object>(\n\tmethodNames: string[],\n\tinvoke: (method: string, args: unknown[]) => unknown,\n\tproxyListen: (eventName: string, arg: any) => Event<any>\n): T {\n\tconst createProxyMethod = (method: string): () => unknown => {\n\t\treturn function () {\n\t\t\tconst args = Array.prototype.slice.call(arguments, 0);\n\t\t\treturn invoke(method, args);\n\t\t};\n\t};\n\tconst createProxyDynamicEvent = (eventName: string): (arg: any) => Event<any> => {\n\t\treturn function (arg) {\n\t\t\treturn proxyListen(eventName, arg);\n\t\t};\n\t};\n\n\tlet result = {} as T;\n\tfor (const methodName of methodNames) {\n\t\tif (propertyIsDynamicEvent(methodName)) {\n\t\t\t(<any>result)[methodName] = createProxyDynamicEvent(methodName);\n\t\t\tcontinue;\n\t\t}\n\t\tif (propertyIsEvent(methodName)) {\n\t\t\t(<any>result)[methodName] = proxyListen(methodName, undefined);\n\t\t\tcontinue;\n\t\t}\n\t\t(<any>result)[methodName] = createProxyMethod(methodName);\n\t}\n\treturn result;\n}\n\nexport interface IRequestHandler {\n\t_requestHandlerBrand: any;\n\t[prop: string]: any;\n}\n\nexport interface IRequestHandlerFactory<H> {\n\t(host: H): IRequestHandler;\n}\n\n/**\n * Worker side\n */\nexport class SimpleWorkerServer<H extends object> {\n\n\tprivate _requestHandlerFactory: IRequestHandlerFactory<H> | null;\n\tprivate _requestHandler: IRequestHandler | null;\n\tprivate _protocol: SimpleWorkerProtocol;\n\n\tconstructor(postMessage: (msg: Message, transfer?: ArrayBuffer[]) => void, requestHandlerFactory: IRequestHandlerFactory<H> | null) {\n\t\tthis._requestHandlerFactory = requestHandlerFactory;\n\t\tthis._requestHandler = null;\n\t\tthis._protocol = new SimpleWorkerProtocol({\n\t\t\tsendMessage: (msg: any, transfer: ArrayBuffer[]): void => {\n\t\t\t\tpostMessage(msg, transfer);\n\t\t\t},\n\t\t\thandleMessage: (method: string, args: any[]): Promise<any> => this._handleMessage(method, args),\n\t\t\thandleEvent: (eventName: string, arg: any): Event<any> => this._handleEvent(eventName, arg)\n\t\t});\n\t}\n\n\tpublic onmessage(msg: any): void {\n\t\tthis._protocol.handleMessage(msg);\n\t}\n\n\tprivate _handleMessage(method: string, args: any[]): Promise<any> {\n\t\tif (method === INITIALIZE) {\n\t\t\treturn this.initialize(<number>args[0], <any>args[1], <string>args[2], <string[]>args[3]);\n\t\t}\n\n\t\tif (!this._requestHandler || typeof this._requestHandler[method] !== 'function') {\n\t\t\treturn Promise.reject(new Error('Missing requestHandler or method: ' + method));\n\t\t}\n\n\t\ttry {\n\t\t\treturn Promise.resolve(this._requestHandler[method].apply(this._requestHandler, args));\n\t\t} catch (e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n\n\tprivate _handleEvent(eventName: string, arg: any): Event<any> {\n\t\tif (!this._requestHandler) {\n\t\t\tthrow new Error(`Missing requestHandler`);\n\t\t}\n\t\tif (propertyIsDynamicEvent(eventName)) {\n\t\t\tconst event = (this._requestHandler as any)[eventName].call(this._requestHandler, arg);\n\t\t\tif (typeof event !== 'function') {\n\t\t\t\tthrow new Error(`Missing dynamic event ${eventName} on request handler.`);\n\t\t\t}\n\t\t\treturn event;\n\t\t}\n\t\tif (propertyIsEvent(eventName)) {\n\t\t\tconst event = (this._requestHandler as any)[eventName];\n\t\t\tif (typeof event !== 'function') {\n\t\t\t\tthrow new Error(`Missing event ${eventName} on request handler.`);\n\t\t\t}\n\t\t\treturn event;\n\t\t}\n\t\tthrow new Error(`Malformed event name ${eventName}`);\n\t}\n\n\tprivate initialize(workerId: number, loaderConfig: any, moduleId: string, hostMethods: string[]): Promise<string[]> {\n\t\tthis._protocol.setWorkerId(workerId);\n\n\t\tconst proxyMethodRequest = (method: string, args: any[]): Promise<any> => {\n\t\t\treturn this._protocol.sendMessage(method, args);\n\t\t};\n\t\tconst proxyListen = (eventName: string, arg: any): Event<any> => {\n\t\t\treturn this._protocol.listen(eventName, arg);\n\t\t};\n\n\t\tconst hostProxy = createProxyObject<H>(hostMethods, proxyMethodRequest, proxyListen);\n\n\t\tif (this._requestHandlerFactory) {\n\t\t\t// static request handler\n\t\t\tthis._requestHandler = this._requestHandlerFactory(hostProxy);\n\t\t\treturn Promise.resolve(types.getAllMethodNames(this._requestHandler));\n\t\t}\n\n\t\tif (loaderConfig) {\n\t\t\t// Remove 'baseUrl', handling it is beyond scope for now\n\t\t\tif (typeof loaderConfig.baseUrl !== 'undefined') {\n\t\t\t\tdelete loaderConfig['baseUrl'];\n\t\t\t}\n\t\t\tif (typeof loaderConfig.paths !== 'undefined') {\n\t\t\t\tif (typeof loaderConfig.paths.vs !== 'undefined') {\n\t\t\t\t\tdelete loaderConfig.paths['vs'];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof loaderConfig.trustedTypesPolicy !== undefined) {\n\t\t\t\t// don't use, it has been destroyed during serialize\n\t\t\t\tdelete loaderConfig['trustedTypesPolicy'];\n\t\t\t}\n\n\t\t\t// Since this is in a web worker, enable catching errors\n\t\t\tloaderConfig.catchError = true;\n\t\t\tglobals.require.config(loaderConfig);\n\t\t}\n\n\t\treturn new Promise<string[]>((resolve, reject) => {\n\t\t\t// Use the global require to be sure to get the global config\n\n\t\t\t// ESM-comment-begin\n\t\t\tconst req = (globals.require || require);\n\t\t\t// ESM-comment-end\n\t\t\t// ESM-uncomment-begin\n\t\t\t// const req = globals.require;\n\t\t\t// ESM-uncomment-end\n\n\t\t\treq([moduleId], (module: { create: IRequestHandlerFactory<H> }) => {\n\t\t\t\tthis._requestHandler = module.create(hostProxy);\n\n\t\t\t\tif (!this._requestHandler) {\n\t\t\t\t\treject(new Error(`No RequestHandler!`));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresolve(types.getAllMethodNames(this._requestHandler));\n\t\t\t}, reject);\n\t\t});\n\t}\n}\n\n/**\n * Called on the worker side\n */\nexport function create(postMessage: (msg: Message, transfer?: ArrayBuffer[]) => void): SimpleWorkerServer<any> {\n\treturn new SimpleWorkerServer(postMessage, null);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as crypto from 'crypto';\nimport * as fs from 'fs';\nimport { once } from 'vs/base/common/functional';\n\nexport async function checksum(path: string, sha1hash: string | undefined): Promise<void> {\n\tconst checksumPromise = new Promise<string | undefined>((resolve, reject) => {\n\t\tconst input = fs.createReadStream(path);\n\t\tconst hash = crypto.createHash('sha1');\n\t\tinput.pipe(hash);\n\n\t\tconst done = once((err?: Error, result?: string) => {\n\t\t\tinput.removeAllListeners();\n\t\t\thash.removeAllListeners();\n\n\t\t\tif (err) {\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\tresolve(result);\n\t\t\t}\n\t\t});\n\n\t\tinput.once('error', done);\n\t\tinput.once('end', done);\n\t\thash.once('error', done);\n\t\thash.once('data', (data: Buffer) => done(undefined, data.toString('hex')));\n\t});\n\n\tconst hash = await checksumPromise;\n\n\tif (hash !== sha1hash) {\n\t\tthrow new Error('Hash mismatch');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as sd from 'string_decoder';\nimport { CharCode } from 'vs/base/common/charCode';\n\n/**\n * Convenient way to iterate over output line by line. This helper accommodates for the fact that\n * a buffer might not end with new lines all the way.\n *\n * To use:\n * - call the write method\n * - forEach() over the result to get the lines\n */\nexport class LineDecoder {\n\tprivate stringDecoder: sd.StringDecoder;\n\tprivate remaining: string | null;\n\n\tconstructor(encoding: BufferEncoding = 'utf8') {\n\t\tthis.stringDecoder = new sd.StringDecoder(encoding);\n\t\tthis.remaining = null;\n\t}\n\n\twrite(buffer: Buffer): string[] {\n\t\tconst result: string[] = [];\n\t\tconst value = this.remaining\n\t\t\t? this.remaining + this.stringDecoder.write(buffer)\n\t\t\t: this.stringDecoder.write(buffer);\n\n\t\tif (value.length < 1) {\n\t\t\treturn result;\n\t\t}\n\t\tlet start = 0;\n\t\tlet ch: number;\n\t\tlet idx = start;\n\t\twhile (idx < value.length) {\n\t\t\tch = value.charCodeAt(idx);\n\t\t\tif (ch === CharCode.CarriageReturn || ch === CharCode.LineFeed) {\n\t\t\t\tresult.push(value.substring(start, idx));\n\t\t\t\tidx++;\n\t\t\t\tif (idx < value.length) {\n\t\t\t\t\tconst lastChar = ch;\n\t\t\t\t\tch = value.charCodeAt(idx);\n\t\t\t\t\tif ((lastChar === CharCode.CarriageReturn && ch === CharCode.LineFeed) || (lastChar === CharCode.LineFeed && ch === CharCode.CarriageReturn)) {\n\t\t\t\t\t\tidx++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tstart = idx;\n\t\t\t} else {\n\t\t\t\tidx++;\n\t\t\t}\n\t\t}\n\t\tthis.remaining = start < value.length ? value.substr(start) : null;\n\t\treturn result;\n\t}\n\n\tend(): string | null {\n\t\treturn this.remaining;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { networkInterfaces } from 'os';\n\nconst invalidMacAddresses = new Set([\n\t'00:00:00:00:00:00',\n\t'ff:ff:ff:ff:ff:ff',\n\t'ac:de:48:00:11:22'\n]);\n\nfunction validateMacAddress(candidate: string): boolean {\n\tconst tempCandidate = candidate.replace(/\\-/g, ':').toLowerCase();\n\treturn !invalidMacAddresses.has(tempCandidate);\n}\n\nexport function getMac(): string {\n\tconst ifaces = networkInterfaces();\n\tfor (let name in ifaces) {\n\t\tconst networkInterface = ifaces[name];\n\t\tif (networkInterface) {\n\t\t\tfor (const { mac } of networkInterface) {\n\t\t\t\tif (validateMacAddress(mac)) {\n\t\t\t\t\treturn mac;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow new Error('Unable to retrieve mac address (unexpected format)');\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { networkInterfaces } from 'os';\nimport * as errors from 'vs/base/common/errors';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport * as uuid from 'vs/base/common/uuid';\nimport { getMac } from 'vs/base/node/macAddress';\n\n// http://www.techrepublic.com/blog/data-center/mac-address-scorecard-for-common-virtual-machine-platforms/\n// VMware ESX 3, Server, Workstation, Player\t00-50-56, 00-0C-29, 00-05-69\n// Microsoft Hyper-V, Virtual Server, Virtual PC\t00-03-FF\n// Parallels Desktop, Workstation, Server, Virtuozzo\t00-1C-42\n// Virtual Iron 4\t00-0F-4B\n// Red Hat Xen\t00-16-3E\n// Oracle VM\t00-16-3E\n// XenSource\t00-16-3E\n// Novell Xen\t00-16-3E\n// Sun xVM VirtualBox\t08-00-27\nexport const virtualMachineHint: { value(): number } = new class {\n\n\tprivate _virtualMachineOUIs?: TernarySearchTree<string, boolean>;\n\tprivate _value?: number;\n\n\tprivate _isVirtualMachineMacAddress(mac: string): boolean {\n\t\tif (!this._virtualMachineOUIs) {\n\t\t\tthis._virtualMachineOUIs = TernarySearchTree.forStrings<boolean>();\n\n\t\t\t// dash-separated\n\t\t\tthis._virtualMachineOUIs.set('00-50-56', true);\n\t\t\tthis._virtualMachineOUIs.set('00-0C-29', true);\n\t\t\tthis._virtualMachineOUIs.set('00-05-69', true);\n\t\t\tthis._virtualMachineOUIs.set('00-03-FF', true);\n\t\t\tthis._virtualMachineOUIs.set('00-1C-42', true);\n\t\t\tthis._virtualMachineOUIs.set('00-16-3E', true);\n\t\t\tthis._virtualMachineOUIs.set('08-00-27', true);\n\n\t\t\t// colon-separated\n\t\t\tthis._virtualMachineOUIs.set('00:50:56', true);\n\t\t\tthis._virtualMachineOUIs.set('00:0C:29', true);\n\t\t\tthis._virtualMachineOUIs.set('00:05:69', true);\n\t\t\tthis._virtualMachineOUIs.set('00:03:FF', true);\n\t\t\tthis._virtualMachineOUIs.set('00:1C:42', true);\n\t\t\tthis._virtualMachineOUIs.set('00:16:3E', true);\n\t\t\tthis._virtualMachineOUIs.set('08:00:27', true);\n\t\t}\n\t\treturn !!this._virtualMachineOUIs.findSubstr(mac);\n\t}\n\n\tvalue(): number {\n\t\tif (this._value === undefined) {\n\t\t\tlet vmOui = 0;\n\t\t\tlet interfaceCount = 0;\n\n\t\t\tconst interfaces = networkInterfaces();\n\t\t\tfor (let name in interfaces) {\n\t\t\t\tconst networkInterface = interfaces[name];\n\t\t\t\tif (networkInterface) {\n\t\t\t\t\tfor (const { mac, internal } of networkInterface) {\n\t\t\t\t\t\tif (!internal) {\n\t\t\t\t\t\t\tinterfaceCount += 1;\n\t\t\t\t\t\t\tif (this._isVirtualMachineMacAddress(mac.toUpperCase())) {\n\t\t\t\t\t\t\t\tvmOui += 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._value = interfaceCount > 0\n\t\t\t\t? vmOui / interfaceCount\n\t\t\t\t: 0;\n\t\t}\n\n\t\treturn this._value;\n\t}\n};\n\nlet machineId: Promise<string>;\nexport async function getMachineId(): Promise<string> {\n\tif (!machineId) {\n\t\tmachineId = (async () => {\n\t\t\tconst id = await getMacMachineId();\n\n\t\t\treturn id || uuid.generateUuid(); // fallback, generate a UUID\n\t\t})();\n\t}\n\n\treturn machineId;\n}\n\nasync function getMacMachineId(): Promise<string | undefined> {\n\ttry {\n\t\tconst crypto = await import('crypto');\n\t\tconst macAddress = getMac();\n\t\treturn crypto.createHash('sha256').update(macAddress, 'utf8').digest('hex');\n\t} catch (err) {\n\t\terrors.onUnexpectedError(err);\n\t\treturn undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { tmpdir } from 'os';\nimport { promisify } from 'util';\nimport { ResourceQueue } from 'vs/base/common/async';\nimport { isEqualOrParent, isRootOrDriveLetter } from 'vs/base/common/extpath';\nimport { normalizeNFC } from 'vs/base/common/normalization';\nimport { join } from 'vs/base/common/path';\nimport { isLinux, isMacintosh, isWindows } from 'vs/base/common/platform';\nimport { extUriBiasedIgnorePathCase } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\n\n//#region rimraf\n\nexport enum RimRafMode {\n\n\t/**\n\t * Slow version that unlinks each file and folder.\n\t */\n\tUNLINK,\n\n\t/**\n\t * Fast version that first moves the file/folder\n\t * into a temp directory and then deletes that\n\t * without waiting for it.\n\t */\n\tMOVE\n}\n\n/**\n * Allows to delete the provided path (either file or folder) recursively\n * with the options:\n * - `UNLINK`: direct removal from disk\n * - `MOVE`: faster variant that first moves the target to temp dir and then\n *           deletes it in the background without waiting for that to finish.\n */\nasync function rimraf(path: string, mode = RimRafMode.UNLINK): Promise<void> {\n\tif (isRootOrDriveLetter(path)) {\n\t\tthrow new Error('rimraf - will refuse to recursively delete root');\n\t}\n\n\t// delete: via rmDir\n\tif (mode === RimRafMode.UNLINK) {\n\t\treturn rimrafUnlink(path);\n\t}\n\n\t// delete: via move\n\treturn rimrafMove(path);\n}\n\nasync function rimrafMove(path: string): Promise<void> {\n\ttry {\n\t\tconst pathInTemp = join(tmpdir(), generateUuid());\n\t\ttry {\n\t\t\tawait Promises.rename(path, pathInTemp);\n\t\t} catch (error) {\n\t\t\treturn rimrafUnlink(path); // if rename fails, delete without tmp dir\n\t\t}\n\n\t\t// Delete but do not return as promise\n\t\trimrafUnlink(pathInTemp).catch(error => {/* ignore */ });\n\t} catch (error) {\n\t\tif (error.code !== 'ENOENT') {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\nasync function rimrafUnlink(path: string): Promise<void> {\n\treturn Promises.rmdir(path, { recursive: true, maxRetries: 3 });\n}\n\nexport function rimrafSync(path: string): void {\n\tif (isRootOrDriveLetter(path)) {\n\t\tthrow new Error('rimraf - will refuse to recursively delete root');\n\t}\n\n\tfs.rmdirSync(path, { recursive: true });\n}\n\n//#endregion\n\n//#region readdir with NFC support (macos)\n\nexport interface IDirent {\n\tname: string;\n\n\tisFile(): boolean;\n\tisDirectory(): boolean;\n\tisSymbolicLink(): boolean;\n}\n\n/**\n * Drop-in replacement of `fs.readdir` with support\n * for converting from macOS NFD unicon form to NFC\n * (https://github.com/nodejs/node/issues/2165)\n */\nasync function readdir(path: string): Promise<string[]>;\nasync function readdir(path: string, options: { withFileTypes: true }): Promise<IDirent[]>;\nasync function readdir(path: string, options?: { withFileTypes: true }): Promise<(string | IDirent)[]> {\n\treturn handleDirectoryChildren(await (options ? safeReaddirWithFileTypes(path) : promisify(fs.readdir)(path)));\n}\n\nasync function safeReaddirWithFileTypes(path: string): Promise<IDirent[]> {\n\ttry {\n\t\treturn await promisify(fs.readdir)(path, { withFileTypes: true });\n\t} catch (error) {\n\t\tconsole.warn('[node.js fs] readdir with filetypes failed with error: ', error);\n\t}\n\n\t// Fallback to manually reading and resolving each\n\t// children of the folder in case we hit an error\n\t// previously.\n\t// This can only really happen on exotic file systems\n\t// such as explained in #115645 where we get entries\n\t// from `readdir` that we can later not `lstat`.\n\tconst result: IDirent[] = [];\n\tconst children = await readdir(path);\n\tfor (const child of children) {\n\t\tlet isFile = false;\n\t\tlet isDirectory = false;\n\t\tlet isSymbolicLink = false;\n\n\t\ttry {\n\t\t\tconst lstat = await Promises.lstat(join(path, child));\n\n\t\t\tisFile = lstat.isFile();\n\t\t\tisDirectory = lstat.isDirectory();\n\t\t\tisSymbolicLink = lstat.isSymbolicLink();\n\t\t} catch (error) {\n\t\t\tconsole.warn('[node.js fs] unexpected error from lstat after readdir: ', error);\n\t\t}\n\n\t\tresult.push({\n\t\t\tname: child,\n\t\t\tisFile: () => isFile,\n\t\t\tisDirectory: () => isDirectory,\n\t\t\tisSymbolicLink: () => isSymbolicLink\n\t\t});\n\t}\n\n\treturn result;\n}\n\n/**\n * Drop-in replacement of `fs.readdirSync` with support\n * for converting from macOS NFD unicon form to NFC\n * (https://github.com/nodejs/node/issues/2165)\n */\nexport function readdirSync(path: string): string[] {\n\treturn handleDirectoryChildren(fs.readdirSync(path));\n}\n\nfunction handleDirectoryChildren(children: string[]): string[];\nfunction handleDirectoryChildren(children: IDirent[]): IDirent[];\nfunction handleDirectoryChildren(children: (string | IDirent)[]): (string | IDirent)[];\nfunction handleDirectoryChildren(children: (string | IDirent)[]): (string | IDirent)[] {\n\treturn children.map(child => {\n\n\t\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t\t// See also https://github.com/nodejs/node/issues/2165\n\n\t\tif (typeof child === 'string') {\n\t\t\treturn isMacintosh ? normalizeNFC(child) : child;\n\t\t}\n\n\t\tchild.name = isMacintosh ? normalizeNFC(child.name) : child.name;\n\n\t\treturn child;\n\t});\n}\n\n/**\n * A convenience method to read all children of a path that\n * are directories.\n */\nasync function readDirsInDir(dirPath: string): Promise<string[]> {\n\tconst children = await readdir(dirPath);\n\tconst directories: string[] = [];\n\n\tfor (const child of children) {\n\t\tif (await SymlinkSupport.existsDirectory(join(dirPath, child))) {\n\t\t\tdirectories.push(child);\n\t\t}\n\t}\n\n\treturn directories;\n}\n\n//#endregion\n\n//#region whenDeleted()\n\n/**\n * A `Promise` that resolves when the provided `path`\n * is deleted from disk.\n */\nexport function whenDeleted(path: string, intervalMs = 1000): Promise<void> {\n\treturn new Promise<void>(resolve => {\n\t\tlet running = false;\n\t\tconst interval = setInterval(() => {\n\t\t\tif (!running) {\n\t\t\t\trunning = true;\n\t\t\t\tfs.access(path, err => {\n\t\t\t\t\trunning = false;\n\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tclearInterval(interval);\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}, intervalMs);\n\t});\n}\n\n//#endregion\n\n//#region Methods with symbolic links support\n\nexport namespace SymlinkSupport {\n\n\texport interface IStats {\n\n\t\t// The stats of the file. If the file is a symbolic\n\t\t// link, the stats will be of that target file and\n\t\t// not the link itself.\n\t\t// If the file is a symbolic link pointing to a non\n\t\t// existing file, the stat will be of the link and\n\t\t// the `dangling` flag will indicate this.\n\t\tstat: fs.Stats;\n\n\t\t// Will be provided if the resource is a symbolic link\n\t\t// on disk. Use the `dangling` flag to find out if it\n\t\t// points to a resource that does not exist on disk.\n\t\tsymbolicLink?: { dangling: boolean };\n\t}\n\n\t/**\n\t * Resolves the `fs.Stats` of the provided path. If the path is a\n\t * symbolic link, the `fs.Stats` will be from the target it points\n\t * to. If the target does not exist, `dangling: true` will be returned\n\t * as `symbolicLink` value.\n\t */\n\texport async function stat(path: string): Promise<IStats> {\n\n\t\t// First stat the link\n\t\tlet lstats: fs.Stats | undefined;\n\t\ttry {\n\t\t\tlstats = await Promises.lstat(path);\n\n\t\t\t// Return early if the stat is not a symbolic link at all\n\t\t\tif (!lstats.isSymbolicLink()) {\n\t\t\t\treturn { stat: lstats };\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t/* ignore - use stat() instead */\n\t\t}\n\n\t\t// If the stat is a symbolic link or failed to stat, use fs.stat()\n\t\t// which for symbolic links will stat the target they point to\n\t\ttry {\n\t\t\tconst stats = await Promises.stat(path);\n\n\t\t\treturn { stat: stats, symbolicLink: lstats?.isSymbolicLink() ? { dangling: false } : undefined };\n\t\t} catch (error) {\n\n\t\t\t// If the link points to a nonexistent file we still want\n\t\t\t// to return it as result while setting dangling: true flag\n\t\t\tif (error.code === 'ENOENT' && lstats) {\n\t\t\t\treturn { stat: lstats, symbolicLink: { dangling: true } };\n\t\t\t}\n\n\t\t\t// Windows: workaround a node.js bug where reparse points\n\t\t\t// are not supported (https://github.com/nodejs/node/issues/36790)\n\t\t\tif (isWindows && error.code === 'EACCES') {\n\t\t\t\ttry {\n\t\t\t\t\tconst stats = await Promises.stat(await Promises.readlink(path));\n\n\t\t\t\t\treturn { stat: stats, symbolicLink: { dangling: false } };\n\t\t\t\t} catch (error) {\n\n\t\t\t\t\t// If the link points to a nonexistent file we still want\n\t\t\t\t\t// to return it as result while setting dangling: true flag\n\t\t\t\t\tif (error.code === 'ENOENT' && lstats) {\n\t\t\t\t\t\treturn { stat: lstats, symbolicLink: { dangling: true } };\n\t\t\t\t\t}\n\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\t}\n\n\t/**\n\t * Figures out if the `path` exists and is a file with support\n\t * for symlinks.\n\t *\n\t * Note: this will return `false` for a symlink that exists on\n\t * disk but is dangling (pointing to a nonexistent path).\n\t *\n\t * Use `exists` if you only care about the path existing on disk\n\t * or not without support for symbolic links.\n\t */\n\texport async function existsFile(path: string): Promise<boolean> {\n\t\ttry {\n\t\t\tconst { stat, symbolicLink } = await SymlinkSupport.stat(path);\n\n\t\t\treturn stat.isFile() && symbolicLink?.dangling !== true;\n\t\t} catch (error) {\n\t\t\t// Ignore, path might not exist\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Figures out if the `path` exists and is a directory with support for\n\t * symlinks.\n\t *\n\t * Note: this will return `false` for a symlink that exists on\n\t * disk but is dangling (pointing to a nonexistent path).\n\t *\n\t * Use `exists` if you only care about the path existing on disk\n\t * or not without support for symbolic links.\n\t */\n\texport async function existsDirectory(path: string): Promise<boolean> {\n\t\ttry {\n\t\t\tconst { stat, symbolicLink } = await SymlinkSupport.stat(path);\n\n\t\t\treturn stat.isDirectory() && symbolicLink?.dangling !== true;\n\t\t} catch (error) {\n\t\t\t// Ignore, path might not exist\n\t\t}\n\n\t\treturn false;\n\t}\n}\n\n//#endregion\n\n//#region Write File\n\n// According to node.js docs (https://nodejs.org/docs/v6.5.0/api/fs.html#fs_fs_writefile_file_data_options_callback)\n// it is not safe to call writeFile() on the same path multiple times without waiting for the callback to return.\n// Therefor we use a Queue on the path that is given to us to sequentialize calls to the same path properly.\nconst writeQueues = new ResourceQueue();\n\n/**\n * Same as `fs.writeFile` but with an additional call to\n * `fs.fdatasync` after writing to ensure changes are\n * flushed to disk.\n *\n * In addition, multiple writes to the same path are queued.\n */\nfunction writeFile(path: string, data: string, options?: IWriteFileOptions): Promise<void>;\nfunction writeFile(path: string, data: Buffer, options?: IWriteFileOptions): Promise<void>;\nfunction writeFile(path: string, data: Uint8Array, options?: IWriteFileOptions): Promise<void>;\nfunction writeFile(path: string, data: string | Buffer | Uint8Array, options?: IWriteFileOptions): Promise<void>;\nfunction writeFile(path: string, data: string | Buffer | Uint8Array, options?: IWriteFileOptions): Promise<void> {\n\treturn writeQueues.queueFor(URI.file(path), extUriBiasedIgnorePathCase).queue(() => {\n\t\tconst ensuredOptions = ensureWriteOptions(options);\n\n\t\treturn new Promise((resolve, reject) => doWriteFileAndFlush(path, data, ensuredOptions, error => error ? reject(error) : resolve()));\n\t});\n}\n\ninterface IWriteFileOptions {\n\tmode?: number;\n\tflag?: string;\n}\n\ninterface IEnsuredWriteFileOptions extends IWriteFileOptions {\n\tmode: number;\n\tflag: string;\n}\n\nlet canFlush = true;\n\n// Calls fs.writeFile() followed by a fs.sync() call to flush the changes to disk\n// We do this in cases where we want to make sure the data is really on disk and\n// not in some cache.\n//\n// See https://github.com/nodejs/node/blob/v5.10.0/lib/fs.js#L1194\nfunction doWriteFileAndFlush(path: string, data: string | Buffer | Uint8Array, options: IEnsuredWriteFileOptions, callback: (error: Error | null) => void): void {\n\tif (!canFlush) {\n\t\treturn fs.writeFile(path, data, { mode: options.mode, flag: options.flag }, callback);\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tfs.open(path, options.flag, options.mode, (openError, fd) => {\n\t\tif (openError) {\n\t\t\treturn callback(openError);\n\t\t}\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFile(fd, data, writeError => {\n\t\t\tif (writeError) {\n\t\t\t\treturn fs.close(fd, () => callback(writeError)); // still need to close the handle on error!\n\t\t\t}\n\n\t\t\t// Flush contents (not metadata) of the file to disk\n\t\t\t// https://github.com/microsoft/vscode/issues/9589\n\t\t\tfs.fdatasync(fd, (syncError: Error | null) => {\n\n\t\t\t\t// In some exotic setups it is well possible that node fails to sync\n\t\t\t\t// In that case we disable flushing and warn to the console\n\t\t\t\tif (syncError) {\n\t\t\t\t\tconsole.warn('[node.js fs] fdatasync is now disabled for this session because it failed: ', syncError);\n\t\t\t\t\tcanFlush = false;\n\t\t\t\t}\n\n\t\t\t\treturn fs.close(fd, closeError => callback(closeError));\n\t\t\t});\n\t\t});\n\t});\n}\n\n/**\n * Same as `fs.writeFileSync` but with an additional call to\n * `fs.fdatasyncSync` after writing to ensure changes are\n * flushed to disk.\n */\nexport function writeFileSync(path: string, data: string | Buffer, options?: IWriteFileOptions): void {\n\tconst ensuredOptions = ensureWriteOptions(options);\n\n\tif (!canFlush) {\n\t\treturn fs.writeFileSync(path, data, { mode: ensuredOptions.mode, flag: ensuredOptions.flag });\n\t}\n\n\t// Open the file with same flags and mode as fs.writeFile()\n\tconst fd = fs.openSync(path, ensuredOptions.flag, ensuredOptions.mode);\n\n\ttry {\n\n\t\t// It is valid to pass a fd handle to fs.writeFile() and this will keep the handle open!\n\t\tfs.writeFileSync(fd, data);\n\n\t\t// Flush contents (not metadata) of the file to disk\n\t\ttry {\n\t\t\tfs.fdatasyncSync(fd); // https://github.com/microsoft/vscode/issues/9589\n\t\t} catch (syncError) {\n\t\t\tconsole.warn('[node.js fs] fdatasyncSync is now disabled for this session because it failed: ', syncError);\n\t\t\tcanFlush = false;\n\t\t}\n\t} finally {\n\t\tfs.closeSync(fd);\n\t}\n}\n\nfunction ensureWriteOptions(options?: IWriteFileOptions): IEnsuredWriteFileOptions {\n\tif (!options) {\n\t\treturn { mode: 0o666 /* default node.js mode for files */, flag: 'w' };\n\t}\n\n\treturn {\n\t\tmode: typeof options.mode === 'number' ? options.mode : 0o666 /* default node.js mode for files */,\n\t\tflag: typeof options.flag === 'string' ? options.flag : 'w'\n\t};\n}\n\n//#endregion\n\n//#region Move / Copy\n\n/**\n * A drop-in replacement for `fs.rename` that:\n * - updates the `mtime` of the `source` after the operation\n * - allows to move across multiple disks\n */\nasync function move(source: string, target: string): Promise<void> {\n\tif (source === target) {\n\t\treturn;  // simulate node.js behaviour here and do a no-op if paths match\n\t}\n\n\t// We have been updating `mtime` for move operations for files since the\n\t// beginning for reasons that are no longer quite clear, but changing\n\t// this could be risky as well. As such, trying to reason about it:\n\t// It is very common as developer to have file watchers enabled that watch\n\t// the current workspace for changes. Updating the `mtime` might make it\n\t// easier for these watchers to recognize an actual change. Since changing\n\t// a source code file also updates the `mtime`, moving a file should do so\n\t// as well because conceptually it is a change of a similar category.\n\tasync function updateMtime(path: string): Promise<void> {\n\t\ttry {\n\t\t\tconst stat = await Promises.lstat(path);\n\t\t\tif (stat.isDirectory() || stat.isSymbolicLink()) {\n\t\t\t\treturn; // only for files\n\t\t\t}\n\n\t\t\tawait Promises.utimes(path, stat.atime, new Date());\n\t\t} catch (error) {\n\t\t\t// Ignore any error\n\t\t}\n\t}\n\n\ttry {\n\t\tawait Promises.rename(source, target);\n\t\tawait updateMtime(target);\n\t} catch (error) {\n\n\t\t// In two cases we fallback to classic copy and delete:\n\t\t//\n\t\t// 1.) The EXDEV error indicates that source and target are on different devices\n\t\t// In this case, fallback to using a copy() operation as there is no way to\n\t\t// rename() between different devices.\n\t\t//\n\t\t// 2.) The user tries to rename a file/folder that ends with a dot. This is not\n\t\t// really possible to move then, at least on UNC devices.\n\t\tif (source.toLowerCase() !== target.toLowerCase() && error.code === 'EXDEV' || source.endsWith('.')) {\n\t\t\tawait copy(source, target, { preserveSymlinks: false /* copying to another device */ });\n\t\t\tawait rimraf(source, RimRafMode.MOVE);\n\t\t\tawait updateMtime(target);\n\t\t} else {\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n\ninterface ICopyPayload {\n\treadonly root: { source: string, target: string };\n\treadonly options: { preserveSymlinks: boolean };\n\treadonly handledSourcePaths: Set<string>;\n}\n\n/**\n * Recursively copies all of `source` to `target`.\n *\n * The options `preserveSymlinks` configures how symbolic\n * links should be handled when encountered. Set to\n * `false` to not preserve them and `true` otherwise.\n */\nasync function copy(source: string, target: string, options: { preserveSymlinks: boolean }): Promise<void> {\n\treturn doCopy(source, target, { root: { source, target }, options, handledSourcePaths: new Set<string>() });\n}\n\n// When copying a file or folder, we want to preserve the mode\n// it had and as such provide it when creating. However, modes\n// can go beyond what we expect (see link below), so we mask it.\n// (https://github.com/nodejs/node-v0.x-archive/issues/3045#issuecomment-4862588)\nconst COPY_MODE_MASK = 0o777;\n\nasync function doCopy(source: string, target: string, payload: ICopyPayload): Promise<void> {\n\n\t// Keep track of paths already copied to prevent\n\t// cycles from symbolic links to cause issues\n\tif (payload.handledSourcePaths.has(source)) {\n\t\treturn;\n\t} else {\n\t\tpayload.handledSourcePaths.add(source);\n\t}\n\n\tconst { stat, symbolicLink } = await SymlinkSupport.stat(source);\n\n\t// Symlink\n\tif (symbolicLink) {\n\n\t\t// Try to re-create the symlink unless `preserveSymlinks: false`\n\t\tif (payload.options.preserveSymlinks) {\n\t\t\ttry {\n\t\t\t\treturn await doCopySymlink(source, target, payload);\n\t\t\t} catch (error) {\n\t\t\t\t// in any case of an error fallback to normal copy via dereferencing\n\t\t\t\tconsole.warn('[node.js fs] copy of symlink failed: ', error);\n\t\t\t}\n\t\t}\n\n\t\tif (symbolicLink.dangling) {\n\t\t\treturn; // skip dangling symbolic links from here on (https://github.com/microsoft/vscode/issues/111621)\n\t\t}\n\t}\n\n\t// Folder\n\tif (stat.isDirectory()) {\n\t\treturn doCopyDirectory(source, target, stat.mode & COPY_MODE_MASK, payload);\n\t}\n\n\t// File or file-like\n\telse {\n\t\treturn doCopyFile(source, target, stat.mode & COPY_MODE_MASK);\n\t}\n}\n\nasync function doCopyDirectory(source: string, target: string, mode: number, payload: ICopyPayload): Promise<void> {\n\n\t// Create folder\n\tawait Promises.mkdir(target, { recursive: true, mode });\n\n\t// Copy each file recursively\n\tconst files = await readdir(source);\n\tfor (const file of files) {\n\t\tawait doCopy(join(source, file), join(target, file), payload);\n\t}\n}\n\nasync function doCopyFile(source: string, target: string, mode: number): Promise<void> {\n\n\t// Copy file\n\tawait Promises.copyFile(source, target);\n\n\t// restore mode (https://github.com/nodejs/node/issues/1104)\n\tawait Promises.chmod(target, mode);\n}\n\nasync function doCopySymlink(source: string, target: string, payload: ICopyPayload): Promise<void> {\n\n\t// Figure out link target\n\tlet linkTarget = await Promises.readlink(source);\n\n\t// Special case: the symlink points to a target that is\n\t// actually within the path that is being copied. In that\n\t// case we want the symlink to point to the target and\n\t// not the source\n\tif (isEqualOrParent(linkTarget, payload.root.source, !isLinux)) {\n\t\tlinkTarget = join(payload.root.target, linkTarget.substr(payload.root.source.length + 1));\n\t}\n\n\t// Create symlink\n\tawait Promises.symlink(linkTarget, target);\n}\n\n//#endregion\n\n//#region Promise based fs methods\n\n/**\n * Prefer this helper class over the `fs.promises` API to\n * enable `graceful-fs` to function properly. Given issue\n * https://github.com/isaacs/node-graceful-fs/issues/160 it\n * is evident that the module only takes care of the non-promise\n * based fs methods.\n *\n * Another reason is `realpath` being entirely different in\n * the promise based implementation compared to the other\n * one (https://github.com/microsoft/vscode/issues/118562)\n *\n * Note: using getters for a reason, since `graceful-fs`\n * patching might kick in later after modules have been\n * loaded we need to defer access to fs methods.\n * (https://github.com/microsoft/vscode/issues/124176)\n */\nexport const Promises = new class {\n\n\t//#region Implemented by node.js\n\n\tget access() { return promisify(fs.access); }\n\n\tget stat() { return promisify(fs.stat); }\n\tget lstat() { return promisify(fs.lstat); }\n\tget utimes() { return promisify(fs.utimes); }\n\n\tget read() { return promisify(fs.read); }\n\tget readFile() { return promisify(fs.readFile); }\n\n\tget write() { return promisify(fs.write); }\n\n\tget appendFile() { return promisify(fs.appendFile); }\n\n\tget fdatasync() { return promisify(fs.fdatasync); }\n\tget truncate() { return promisify(fs.truncate); }\n\n\tget rename() { return promisify(fs.rename); }\n\tget copyFile() { return promisify(fs.copyFile); }\n\n\tget open() { return promisify(fs.open); }\n\tget close() { return promisify(fs.close); }\n\n\tget symlink() { return promisify(fs.symlink); }\n\tget readlink() { return promisify(fs.readlink); }\n\n\tget chmod() { return promisify(fs.chmod); }\n\n\tget mkdir() { return promisify(fs.mkdir); }\n\n\tget unlink() { return promisify(fs.unlink); }\n\tget rmdir() { return promisify(fs.rmdir); }\n\n\tget realpath() { return promisify(fs.realpath); }\n\n\t//#endregion\n\n\t//#region Implemented by us\n\n\tasync exists(path: string): Promise<boolean> {\n\t\ttry {\n\t\t\tawait Promises.access(path);\n\n\t\t\treturn true;\n\t\t} catch {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tget readdir() { return readdir; }\n\tget readDirsInDir() { return readDirsInDir; }\n\n\tget writeFile() { return writeFile; }\n\n\tget rm() { return rimraf; }\n\n\tget move() { return move; }\n\tget copy() { return copy; }\n\n\t//#endregion\n};\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { basename, dirname, join, normalize, sep } from 'vs/base/common/path';\nimport { rtrim } from 'vs/base/common/strings';\nimport { Promises, readdirSync } from 'vs/base/node/pfs';\n\n/**\n * Copied from: https://github.com/microsoft/vscode-node-debug/blob/master/src/node/pathUtilities.ts#L83\n *\n * Given an absolute, normalized, and existing file path 'realcase' returns the exact path that the file has on disk.\n * On a case insensitive file system, the returned path might differ from the original path by character casing.\n * On a case sensitive file system, the returned path will always be identical to the original path.\n * In case of errors, null is returned. But you cannot use this function to verify that a path exists.\n * realcaseSync does not handle '..' or '.' path segments and it does not take the locale into account.\n */\nexport function realcaseSync(path: string): string | null {\n\tconst dir = dirname(path);\n\tif (path === dir) {\t// end recursion\n\t\treturn path;\n\t}\n\n\tconst name = (basename(path) /* can be '' for windows drive letters */ || path).toLowerCase();\n\ttry {\n\t\tconst entries = readdirSync(dir);\n\t\tconst found = entries.filter(e => e.toLowerCase() === name);\t// use a case insensitive search\n\t\tif (found.length === 1) {\n\t\t\t// on a case sensitive filesystem we cannot determine here, whether the file exists or not, hence we need the 'file exists' precondition\n\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\tif (prefix) {\n\t\t\t\treturn join(prefix, found[0]);\n\t\t\t}\n\t\t} else if (found.length > 1) {\n\t\t\t// must be a case sensitive $filesystem\n\t\t\tconst ix = found.indexOf(name);\n\t\t\tif (ix >= 0) {\t// case sensitive\n\t\t\t\tconst prefix = realcaseSync(dir);   // recurse\n\t\t\t\tif (prefix) {\n\t\t\t\t\treturn join(prefix, found[ix]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} catch (error) {\n\t\t// silently ignore error\n\t}\n\n\treturn null;\n}\n\nexport async function realpath(path: string): Promise<string> {\n\ttry {\n\t\t// DO NOT USE `fs.promises.realpath` here as it internally\n\t\t// calls `fs.native.realpath` which will result in subst\n\t\t// drives to be resolved to their target on Windows\n\t\t// https://github.com/microsoft/vscode/issues/118562\n\t\treturn await Promises.realpath(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpath(). Since fs.realpath() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\n\t\tawait Promises.access(normalizedPath, fs.constants.R_OK);\n\n\t\treturn normalizedPath;\n\t}\n}\n\nexport function realpathSync(path: string): string {\n\ttry {\n\t\treturn fs.realpathSync(path);\n\t} catch (error) {\n\n\t\t// We hit an error calling fs.realpathSync(). Since fs.realpathSync() is doing some path normalization\n\t\t// we now do a similar normalization and then try again if we can access the path with read\n\t\t// permissions at least. If that succeeds, we return that path.\n\t\t// fs.realpath() is resolving symlinks and that can fail in certain cases. The workaround is\n\t\t// to not resolve links but to simply see if the path is read accessible or not.\n\t\tconst normalizedPath = normalizePath(path);\n\t\tfs.accessSync(normalizedPath, fs.constants.R_OK); // throws in case of an error\n\n\t\treturn normalizedPath;\n\t}\n}\n\nfunction normalizePath(path: string): string {\n\treturn rtrim(normalize(path), sep);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as net from 'net';\n\n/**\n * Given a start point and a max number of retries, will find a port that\n * is openable. Will return 0 in case no free port can be found.\n */\nexport function findFreePort(startPort: number, giveUpAfter: number, timeout: number, stride = 1): Promise<number> {\n\tlet done = false;\n\n\treturn new Promise(resolve => {\n\t\tconst timeoutHandle = setTimeout(() => {\n\t\t\tif (!done) {\n\t\t\t\tdone = true;\n\t\t\t\treturn resolve(0);\n\t\t\t}\n\t\t}, timeout);\n\n\t\tdoFindFreePort(startPort, giveUpAfter, stride, (port) => {\n\t\t\tif (!done) {\n\t\t\t\tdone = true;\n\t\t\t\tclearTimeout(timeoutHandle);\n\t\t\t\treturn resolve(port);\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction doFindFreePort(startPort: number, giveUpAfter: number, stride: number, clb: (port: number) => void): void {\n\tif (giveUpAfter === 0) {\n\t\treturn clb(0);\n\t}\n\n\tconst client = new net.Socket();\n\n\t// If we can connect to the port it means the port is already taken so we continue searching\n\tclient.once('connect', () => {\n\t\tdispose(client);\n\n\t\treturn doFindFreePort(startPort + stride, giveUpAfter - 1, stride, clb);\n\t});\n\n\tclient.once('data', () => {\n\t\t// this listener is required since node.js 8.x\n\t});\n\n\tclient.once('error', (err: Error & { code?: string }) => {\n\t\tdispose(client);\n\n\t\t// If we receive any non ECONNREFUSED error, it means the port is used but we cannot connect\n\t\tif (err.code !== 'ECONNREFUSED') {\n\t\t\treturn doFindFreePort(startPort + stride, giveUpAfter - 1, stride, clb);\n\t\t}\n\n\t\t// Otherwise it means the port is free to use!\n\t\treturn clb(startPort);\n\t});\n\n\tclient.connect(startPort, '127.0.0.1');\n}\n\n// Reference: https://chromium.googlesource.com/chromium/src.git/+/refs/heads/main/net/base/port_util.cc#56\nexport const BROWSER_RESTRICTED_PORTS: any = {\n    1: true,      // tcpmux\n    7: true,      // echo\n    9: true,      // discard\n    11: true,     // systat\n    13: true,     // daytime\n    15: true,     // netstat\n    17: true,     // qotd\n    19: true,     // chargen\n    20: true,     // ftp data\n    21: true,     // ftp access\n    22: true,     // ssh\n    23: true,     // telnet\n    25: true,     // smtp\n    37: true,     // time\n    42: true,     // name\n    43: true,     // nicname\n    53: true,     // domain\n    69: true,     // tftp\n    77: true,     // priv-rjs\n    79: true,     // finger\n    87: true,     // ttylink\n    95: true,     // supdup\n    101: true,    // hostriame\n    102: true,    // iso-tsap\n    103: true,    // gppitnp\n    104: true,    // acr-nema\n    109: true,    // pop2\n    110: true,    // pop3\n    111: true,    // sunrpc\n    113: true,    // auth\n    115: true,    // sftp\n    117: true,    // uucp-path\n    119: true,    // nntp\n    123: true,    // NTP\n    135: true,    // loc-srv /epmap\n    137: true,    // netbios\n    139: true,    // netbios\n    143: true,    // imap2\n    161: true,    // snmp\n    179: true,    // BGP\n    389: true,    // ldap\n    427: true,    // SLP (Also used by Apple Filing Protocol)\n    465: true,    // smtp+ssl\n    512: true,    // print / exec\n    513: true,    // login\n    514: true,    // shell\n    515: true,    // printer\n    526: true,    // tempo\n    530: true,    // courier\n    531: true,    // chat\n    532: true,    // netnews\n    540: true,    // uucp\n    548: true,    // AFP (Apple Filing Protocol)\n    554: true,    // rtsp\n    556: true,    // remotefs\n    563: true,    // nntp+ssl\n    587: true,    // smtp (rfc6409)\n    601: true,    // syslog-conn (rfc3195)\n    636: true,    // ldap+ssl\n    989: true,    // ftps-data\n    990: true,    // ftps\n    993: true,    // ldap+ssl\n    995: true,    // pop3+ssl\n    1719: true,   // h323gatestat\n    1720: true,   // h323hostcall\n    1723: true,   // pptp\n    2049: true,   // nfs\n    3659: true,   // apple-sasl / PasswordServer\n    4045: true,   // lockd\n    5060: true,   // sip\n    5061: true,   // sips\n    6000: true,   // X11\n    6566: true,   // sane-port\n    6665: true,   // Alternate IRC [Apple addition]\n    6666: true,   // Alternate IRC [Apple addition]\n    6667: true,   // Standard IRC [Apple addition]\n    6668: true,   // Alternate IRC [Apple addition]\n    6669: true,   // Alternate IRC [Apple addition]\n    6697: true,   // IRC + TLS\n    10080: true   // Amanda\n};\n\n/**\n * Uses listen instead of connect. Is faster, but if there is another listener on 0.0.0.0 then this will take 127.0.0.1 from that listener.\n */\nexport function findFreePortFaster(startPort: number, giveUpAfter: number, timeout: number): Promise<number> {\n\tlet resolved: boolean = false;\n\tlet timeoutHandle: NodeJS.Timeout | undefined = undefined;\n\tlet countTried: number = 1;\n\tconst server = net.createServer({ pauseOnConnect: true });\n\tfunction doResolve(port: number, resolve: (port: number) => void) {\n\t\tif (!resolved) {\n\t\t\tresolved = true;\n\t\t\tserver.removeAllListeners();\n\t\t\tserver.close();\n\t\t\tif (timeoutHandle) {\n\t\t\t\tclearTimeout(timeoutHandle);\n\t\t\t}\n\t\t\tresolve(port);\n\t\t}\n\t}\n\treturn new Promise<number>(resolve => {\n\t\ttimeoutHandle = setTimeout(() => {\n\t\t\tdoResolve(0, resolve);\n\t\t}, timeout);\n\n\t\tserver.on('listening', () => {\n\t\t\tdoResolve(startPort, resolve);\n\t\t});\n\t\tserver.on('error', err => {\n\t\t\tif (err && ((<any>err).code === 'EADDRINUSE' || (<any>err).code === 'EACCES') && (countTried < giveUpAfter)) {\n\t\t\t\tstartPort++;\n\t\t\t\tcountTried++;\n\t\t\t\tserver.listen(startPort, '127.0.0.1');\n\t\t\t} else {\n\t\t\t\tdoResolve(0, resolve);\n\t\t\t}\n\t\t});\n\t\tserver.on('close', () => {\n\t\t\tdoResolve(0, resolve);\n\t\t});\n\t\tserver.listen(startPort, '127.0.0.1');\n\t});\n}\n\nfunction dispose(socket: net.Socket): void {\n\ttry {\n\t\tsocket.removeAllListeners('connect');\n\t\tsocket.removeAllListeners('error');\n\t\tsocket.end();\n\t\tsocket.destroy();\n\t\tsocket.unref();\n\t} catch (error) {\n\t\tconsole.error(error); // otherwise this error would get lost in the callback chain\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as os from 'os';\nimport * as path from 'vs/base/common/path';\nimport * as pfs from 'vs/base/node/pfs';\n\n// This is required, since parseInt(\"7-preview\") will return 7.\nconst IntRegex: RegExp = /^\\d+$/;\n\nconst PwshMsixRegex: RegExp = /^Microsoft.PowerShell_.*/;\nconst PwshPreviewMsixRegex: RegExp = /^Microsoft.PowerShellPreview_.*/;\n\nconst enum Arch {\n\tx64,\n\tx86,\n\tARM\n}\n\nlet processArch: Arch;\nswitch (process.arch) {\n\tcase 'ia32':\n\tcase 'x32':\n\t\tprocessArch = Arch.x86;\n\t\tbreak;\n\tcase 'arm':\n\tcase 'arm64':\n\t\tprocessArch = Arch.ARM;\n\t\tbreak;\n\tdefault:\n\t\tprocessArch = Arch.x64;\n\t\tbreak;\n}\n\n/*\nCurrently, here are the values for these environment variables on their respective archs:\n\nOn x86 process on x86:\nPROCESSOR_ARCHITECTURE is X86\nPROCESSOR_ARCHITEW6432 is undefined\n\nOn x86 process on x64:\nPROCESSOR_ARCHITECTURE is X86\nPROCESSOR_ARCHITEW6432 is AMD64\n\nOn x64 process on x64:\nPROCESSOR_ARCHITECTURE is AMD64\nPROCESSOR_ARCHITEW6432 is undefined\n\nOn ARM process on ARM:\nPROCESSOR_ARCHITECTURE is ARM64\nPROCESSOR_ARCHITEW6432 is undefined\n\nOn x86 process on ARM:\nPROCESSOR_ARCHITECTURE is X86\nPROCESSOR_ARCHITEW6432 is ARM64\n\nOn x64 process on ARM:\nPROCESSOR_ARCHITECTURE is ARM64\nPROCESSOR_ARCHITEW6432 is undefined\n*/\nlet osArch: Arch;\nif (process.env['PROCESSOR_ARCHITEW6432']) {\n\tosArch = process.env['PROCESSOR_ARCHITEW6432'] === 'ARM64'\n\t\t? Arch.ARM\n\t\t: Arch.x64;\n} else if (process.env['PROCESSOR_ARCHITECTURE'] === 'ARM64') {\n\tosArch = Arch.ARM;\n} else if (process.env['PROCESSOR_ARCHITECTURE'] === 'X86') {\n\tosArch = Arch.x86;\n} else {\n\tosArch = Arch.x64;\n}\n\nexport interface IPowerShellExeDetails {\n\treadonly displayName: string;\n\treadonly exePath: string;\n}\n\nexport interface IPossiblePowerShellExe extends IPowerShellExeDetails {\n\texists(): Promise<boolean>;\n}\n\nclass PossiblePowerShellExe implements IPossiblePowerShellExe {\n\tconstructor(\n\t\tpublic readonly exePath: string,\n\t\tpublic readonly displayName: string,\n\t\tprivate knownToExist?: boolean) { }\n\n\tpublic async exists(): Promise<boolean> {\n\t\tif (this.knownToExist === undefined) {\n\t\t\tthis.knownToExist = await pfs.SymlinkSupport.existsFile(this.exePath);\n\t\t}\n\t\treturn this.knownToExist;\n\t}\n}\n\nfunction getProgramFilesPath(\n\t{ useAlternateBitness = false }: { useAlternateBitness?: boolean } = {}): string | null {\n\n\tif (!useAlternateBitness) {\n\t\t// Just use the native system bitness\n\t\treturn process.env.ProgramFiles || null;\n\t}\n\n\t// We might be a 64-bit process looking for 32-bit program files\n\tif (processArch === Arch.x64) {\n\t\treturn process.env['ProgramFiles(x86)'] || null;\n\t}\n\n\t// We might be a 32-bit process looking for 64-bit program files\n\tif (osArch === Arch.x64) {\n\t\treturn process.env.ProgramW6432 || null;\n\t}\n\n\t// We're a 32-bit process on 32-bit Windows, there is no other Program Files dir\n\treturn null;\n}\n\nasync function findPSCoreWindowsInstallation(\n\t{ useAlternateBitness = false, findPreview = false }:\n\t\t{ useAlternateBitness?: boolean; findPreview?: boolean } = {}): Promise<IPossiblePowerShellExe | null> {\n\n\tconst programFilesPath = getProgramFilesPath({ useAlternateBitness });\n\tif (!programFilesPath) {\n\t\treturn null;\n\t}\n\n\tconst powerShellInstallBaseDir = path.join(programFilesPath, 'PowerShell');\n\n\t// Ensure the base directory exists\n\tif (!await pfs.SymlinkSupport.existsDirectory(powerShellInstallBaseDir)) {\n\t\treturn null;\n\t}\n\n\tlet highestSeenVersion: number = -1;\n\tlet pwshExePath: string | null = null;\n\tfor (const item of await pfs.Promises.readdir(powerShellInstallBaseDir)) {\n\n\t\tlet currentVersion: number = -1;\n\t\tif (findPreview) {\n\t\t\t// We are looking for something like \"7-preview\"\n\n\t\t\t// Preview dirs all have dashes in them\n\t\t\tconst dashIndex = item.indexOf('-');\n\t\t\tif (dashIndex < 0) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Verify that the part before the dash is an integer\n\t\t\t// and that the part after the dash is \"preview\"\n\t\t\tconst intPart: string = item.substring(0, dashIndex);\n\t\t\tif (!IntRegex.test(intPart) || item.substring(dashIndex + 1) !== 'preview') {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tcurrentVersion = parseInt(intPart, 10);\n\t\t} else {\n\t\t\t// Search for a directory like \"6\" or \"7\"\n\t\t\tif (!IntRegex.test(item)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tcurrentVersion = parseInt(item, 10);\n\t\t}\n\n\t\t// Ensure we haven't already seen a higher version\n\t\tif (currentVersion <= highestSeenVersion) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Now look for the file\n\t\tconst exePath = path.join(powerShellInstallBaseDir, item, 'pwsh.exe');\n\t\tif (!await pfs.SymlinkSupport.existsFile(exePath)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tpwshExePath = exePath;\n\t\thighestSeenVersion = currentVersion;\n\t}\n\n\tif (!pwshExePath) {\n\t\treturn null;\n\t}\n\n\tconst bitness: string = programFilesPath.includes('x86') ? ' (x86)' : '';\n\tconst preview: string = findPreview ? ' Preview' : '';\n\n\treturn new PossiblePowerShellExe(pwshExePath, `PowerShell${preview}${bitness}`, true);\n}\n\nasync function findPSCoreMsix({ findPreview }: { findPreview?: boolean } = {}): Promise<IPossiblePowerShellExe | null> {\n\t// We can't proceed if there's no LOCALAPPDATA path\n\tif (!process.env.LOCALAPPDATA) {\n\t\treturn null;\n\t}\n\n\t// Find the base directory for MSIX application exe shortcuts\n\tconst msixAppDir = path.join(process.env.LOCALAPPDATA, 'Microsoft', 'WindowsApps');\n\n\tif (!await pfs.SymlinkSupport.existsDirectory(msixAppDir)) {\n\t\treturn null;\n\t}\n\n\t// Define whether we're looking for the preview or the stable\n\tconst { pwshMsixDirRegex, pwshMsixName } = findPreview\n\t\t? { pwshMsixDirRegex: PwshPreviewMsixRegex, pwshMsixName: 'PowerShell Preview (Store)' }\n\t\t: { pwshMsixDirRegex: PwshMsixRegex, pwshMsixName: 'PowerShell (Store)' };\n\n\t// We should find only one such application, so return on the first one\n\tfor (const subdir of await pfs.Promises.readdir(msixAppDir)) {\n\t\tif (pwshMsixDirRegex.test(subdir)) {\n\t\t\tconst pwshMsixPath = path.join(msixAppDir, subdir, 'pwsh.exe');\n\t\t\treturn new PossiblePowerShellExe(pwshMsixPath, pwshMsixName);\n\t\t}\n\t}\n\n\t// If we find nothing, return null\n\treturn null;\n}\n\nfunction findPSCoreDotnetGlobalTool(): IPossiblePowerShellExe {\n\tconst dotnetGlobalToolExePath: string = path.join(os.homedir(), '.dotnet', 'tools', 'pwsh.exe');\n\n\treturn new PossiblePowerShellExe(dotnetGlobalToolExePath, '.NET Core PowerShell Global Tool');\n}\n\nfunction findWinPS(): IPossiblePowerShellExe | null {\n\tconst winPSPath = path.join(\n\t\tprocess.env.windir!,\n\t\tprocessArch === Arch.x86 && osArch !== Arch.x86 ? 'SysNative' : 'System32',\n\t\t'WindowsPowerShell', 'v1.0', 'powershell.exe');\n\n\treturn new PossiblePowerShellExe(winPSPath, 'Windows PowerShell', true);\n}\n\n/**\n * Iterates through all the possible well-known PowerShell installations on a machine.\n * Returned values may not exist, but come with an .exists property\n * which will check whether the executable exists.\n */\nasync function* enumerateDefaultPowerShellInstallations(): AsyncIterable<IPossiblePowerShellExe> {\n\t// Find PSCore stable first\n\tlet pwshExe = await findPSCoreWindowsInstallation();\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n\n\t// Windows may have a 32-bit pwsh.exe\n\tpwshExe = await findPSCoreWindowsInstallation({ useAlternateBitness: true });\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n\n\t// Also look for the MSIX/UWP installation\n\tpwshExe = await findPSCoreMsix();\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n\n\t// Look for the .NET global tool\n\t// Some older versions of PowerShell have a bug in this where startup will fail,\n\t// but this is fixed in newer versions\n\tpwshExe = findPSCoreDotnetGlobalTool();\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n\n\t// Look for PSCore preview\n\tpwshExe = await findPSCoreWindowsInstallation({ findPreview: true });\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n\n\t// Find a preview MSIX\n\tpwshExe = await findPSCoreMsix({ findPreview: true });\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n\n\t// Look for pwsh-preview with the opposite bitness\n\tpwshExe = await findPSCoreWindowsInstallation({ useAlternateBitness: true, findPreview: true });\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n\n\t// Finally, get Windows PowerShell\n\tpwshExe = findWinPS();\n\tif (pwshExe) {\n\t\tyield pwshExe;\n\t}\n}\n\n/**\n * Iterates through PowerShell installations on the machine according\n * to configuration passed in through the constructor.\n * PowerShell items returned by this object are verified\n * to exist on the filesystem.\n */\nexport async function* enumeratePowerShellInstallations(): AsyncIterable<IPowerShellExeDetails> {\n\t// Get the default PowerShell installations first\n\tfor await (const defaultPwsh of enumerateDefaultPowerShellInstallations()) {\n\t\tif (await defaultPwsh.exists()) {\n\t\t\tyield defaultPwsh;\n\t\t}\n\t}\n}\n\n/**\n* Returns the first available PowerShell executable found in the search order.\n*/\nexport async function getFirstAvailablePowerShellInstallation(): Promise<IPowerShellExeDetails | null> {\n\tfor await (const pwsh of enumeratePowerShellInstallations()) {\n\t\treturn pwsh;\n\t}\n\treturn null;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { exec } from 'child_process';\nimport { FileAccess } from 'vs/base/common/network';\nimport { ProcessItem } from 'vs/base/common/processes';\n\nexport function listProcesses(rootPid: number): Promise<ProcessItem> {\n\n\treturn new Promise((resolve, reject) => {\n\n\t\tlet rootItem: ProcessItem | undefined;\n\t\tconst map = new Map<number, ProcessItem>();\n\n\n\t\tfunction addToTree(pid: number, ppid: number, cmd: string, load: number, mem: number) {\n\n\t\t\tconst parent = map.get(ppid);\n\t\t\tif (pid === rootPid || parent) {\n\n\t\t\t\tconst item: ProcessItem = {\n\t\t\t\t\tname: findName(cmd),\n\t\t\t\t\tcmd,\n\t\t\t\t\tpid,\n\t\t\t\t\tppid,\n\t\t\t\t\tload,\n\t\t\t\t\tmem\n\t\t\t\t};\n\t\t\t\tmap.set(pid, item);\n\n\t\t\t\tif (pid === rootPid) {\n\t\t\t\t\trootItem = item;\n\t\t\t\t}\n\n\t\t\t\tif (parent) {\n\t\t\t\t\tif (!parent.children) {\n\t\t\t\t\t\tparent.children = [];\n\t\t\t\t\t}\n\t\t\t\t\tparent.children.push(item);\n\t\t\t\t\tif (parent.children.length > 1) {\n\t\t\t\t\t\tparent.children = parent.children.sort((a, b) => a.pid - b.pid);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction findName(cmd: string): string {\n\n\t\t\tconst SHARED_PROCESS_HINT = /--vscode-window-kind=shared-process/;\n\t\t\tconst ISSUE_REPORTER_HINT = /--vscode-window-kind=issue-reporter/;\n\t\t\tconst PROCESS_EXPLORER_HINT = /--vscode-window-kind=process-explorer/;\n\t\t\tconst UTILITY_NETWORK_HINT = /--utility-sub-type=network/;\n\t\t\tconst WINDOWS_CRASH_REPORTER = /--crashes-directory/;\n\t\t\tconst WINDOWS_PTY = /\\\\pipe\\\\winpty-control/;\n\t\t\tconst WINDOWS_CONSOLE_HOST = /conhost\\.exe/;\n\t\t\tconst TYPE = /--type=([a-zA-Z-]+)/;\n\n\t\t\t// find windows crash reporter\n\t\t\tif (WINDOWS_CRASH_REPORTER.exec(cmd)) {\n\t\t\t\treturn 'electron-crash-reporter';\n\t\t\t}\n\n\t\t\t// find windows pty process\n\t\t\tif (WINDOWS_PTY.exec(cmd)) {\n\t\t\t\treturn 'winpty-process';\n\t\t\t}\n\n\t\t\t//find windows console host process\n\t\t\tif (WINDOWS_CONSOLE_HOST.exec(cmd)) {\n\t\t\t\treturn 'console-window-host (Windows internal process)';\n\t\t\t}\n\n\t\t\t// find \"--type=xxxx\"\n\t\t\tlet matches = TYPE.exec(cmd);\n\t\t\tif (matches && matches.length === 2) {\n\t\t\t\tif (matches[1] === 'renderer') {\n\t\t\t\t\tif (SHARED_PROCESS_HINT.exec(cmd)) {\n\t\t\t\t\t\treturn 'shared-process';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (ISSUE_REPORTER_HINT.exec(cmd)) {\n\t\t\t\t\t\treturn 'issue-reporter';\n\t\t\t\t\t}\n\n\t\t\t\t\tif (PROCESS_EXPLORER_HINT.exec(cmd)) {\n\t\t\t\t\t\treturn 'process-explorer';\n\t\t\t\t\t}\n\n\t\t\t\t\treturn `window`;\n\t\t\t\t} else if (matches[1] === 'utility') {\n\t\t\t\t\tif (UTILITY_NETWORK_HINT.exec(cmd)) {\n\t\t\t\t\t\treturn 'utility-network-service';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn matches[1];\n\t\t\t}\n\n\t\t\t// find all xxxx.js\n\t\t\tconst JS = /[a-zA-Z-]+\\.js/g;\n\t\t\tlet result = '';\n\t\t\tdo {\n\t\t\t\tmatches = JS.exec(cmd);\n\t\t\t\tif (matches) {\n\t\t\t\t\tresult += matches + ' ';\n\t\t\t\t}\n\t\t\t} while (matches);\n\n\t\t\tif (result) {\n\t\t\t\tif (cmd.indexOf('node ') < 0 && cmd.indexOf('node.exe') < 0) {\n\t\t\t\t\treturn `electron_node ${result}`;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn cmd;\n\t\t}\n\n\t\tif (process.platform === 'win32') {\n\n\t\t\tconst cleanUNCPrefix = (value: string): string => {\n\t\t\t\tif (value.indexOf('\\\\\\\\?\\\\') === 0) {\n\t\t\t\t\treturn value.substr(4);\n\t\t\t\t} else if (value.indexOf('\\\\??\\\\') === 0) {\n\t\t\t\t\treturn value.substr(4);\n\t\t\t\t} else if (value.indexOf('\"\\\\\\\\?\\\\') === 0) {\n\t\t\t\t\treturn '\"' + value.substr(5);\n\t\t\t\t} else if (value.indexOf('\"\\\\??\\\\') === 0) {\n\t\t\t\t\treturn '\"' + value.substr(5);\n\t\t\t\t} else {\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t(import('windows-process-tree')).then(windowsProcessTree => {\n\t\t\t\twindowsProcessTree.getProcessList(rootPid, (processList) => {\n\t\t\t\t\twindowsProcessTree.getProcessCpuUsage(processList, (completeProcessList) => {\n\t\t\t\t\t\tconst processItems: Map<number, ProcessItem> = new Map();\n\t\t\t\t\t\tcompleteProcessList.forEach(process => {\n\t\t\t\t\t\t\tconst commandLine = cleanUNCPrefix(process.commandLine || '');\n\t\t\t\t\t\t\tprocessItems.set(process.pid, {\n\t\t\t\t\t\t\t\tname: findName(commandLine),\n\t\t\t\t\t\t\t\tcmd: commandLine,\n\t\t\t\t\t\t\t\tpid: process.pid,\n\t\t\t\t\t\t\t\tppid: process.ppid,\n\t\t\t\t\t\t\t\tload: process.cpu || 0,\n\t\t\t\t\t\t\t\tmem: process.memory || 0\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\trootItem = processItems.get(rootPid);\n\t\t\t\t\t\tif (rootItem) {\n\t\t\t\t\t\t\tprocessItems.forEach(item => {\n\t\t\t\t\t\t\t\tconst parent = processItems.get(item.ppid);\n\t\t\t\t\t\t\t\tif (parent) {\n\t\t\t\t\t\t\t\t\tif (!parent.children) {\n\t\t\t\t\t\t\t\t\t\tparent.children = [];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tparent.children.push(item);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tprocessItems.forEach(item => {\n\t\t\t\t\t\t\t\tif (item.children) {\n\t\t\t\t\t\t\t\t\titem.children = item.children.sort((a, b) => a.pid - b.pid);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tresolve(rootItem);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treject(new Error(`Root process ${rootPid} not found`));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}, windowsProcessTree.ProcessDataFlag.CommandLine | windowsProcessTree.ProcessDataFlag.Memory);\n\t\t\t});\n\t\t} else {\t// OS X & Linux\n\t\t\tfunction calculateLinuxCpuUsage() {\n\t\t\t\t// Flatten rootItem to get a list of all VSCode processes\n\t\t\t\tlet processes = [rootItem];\n\t\t\t\tconst pids: number[] = [];\n\t\t\t\twhile (processes.length) {\n\t\t\t\t\tconst process = processes.shift();\n\t\t\t\t\tif (process) {\n\t\t\t\t\t\tpids.push(process.pid);\n\t\t\t\t\t\tif (process.children) {\n\t\t\t\t\t\t\tprocesses = processes.concat(process.children);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// The cpu usage value reported on Linux is the average over the process lifetime,\n\t\t\t\t// recalculate the usage over a one second interval\n\t\t\t\t// JSON.stringify is needed to escape spaces, https://github.com/nodejs/node/issues/6803\n\t\t\t\tlet cmd = JSON.stringify(FileAccess.asFileUri('vs/base/node/cpuUsage.sh', require).fsPath);\n\t\t\t\tcmd += ' ' + pids.join(' ');\n\n\t\t\t\texec(cmd, {}, (err, stdout, stderr) => {\n\t\t\t\t\tif (err || stderr) {\n\t\t\t\t\t\treject(err || new Error(stderr.toString()));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst cpuUsage = stdout.toString().split('\\n');\n\t\t\t\t\t\tfor (let i = 0; i < pids.length; i++) {\n\t\t\t\t\t\t\tconst processInfo = map.get(pids[i])!;\n\t\t\t\t\t\t\tprocessInfo.load = parseFloat(cpuUsage[i]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!rootItem) {\n\t\t\t\t\t\t\treject(new Error(`Root process ${rootPid} not found`));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresolve(rootItem);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\texec('which ps', {}, (err, stdout, stderr) => {\n\t\t\t\tif (err || stderr) {\n\t\t\t\t\tif (process.platform !== 'linux') {\n\t\t\t\t\t\treject(err || new Error(stderr.toString()));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst cmd = JSON.stringify(FileAccess.asFileUri('vs/base/node/ps.sh', require).fsPath);\n\t\t\t\t\t\texec(cmd, {}, (err, stdout, stderr) => {\n\t\t\t\t\t\t\tif (err || stderr) {\n\t\t\t\t\t\t\t\treject(err || new Error(stderr.toString()));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tparsePsOutput(stdout, addToTree);\n\t\t\t\t\t\t\t\tcalculateLinuxCpuUsage();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst ps = stdout.toString().trim();\n\t\t\t\t\tconst args = '-ax -o pid=,ppid=,pcpu=,pmem=,command=';\n\n\t\t\t\t\t// Set numeric locale to ensure '.' is used as the decimal separator\n\t\t\t\t\texec(`${ps} ${args}`, { maxBuffer: 1000 * 1024, env: { LC_NUMERIC: 'en_US.UTF-8' } }, (err, stdout, stderr) => {\n\t\t\t\t\t\t// Silently ignoring the screen size is bogus error. See https://github.com/microsoft/vscode/issues/98590\n\t\t\t\t\t\tif (err || (stderr && !stderr.includes('screen size is bogus'))) {\n\t\t\t\t\t\t\treject(err || new Error(stderr.toString()));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tparsePsOutput(stdout, addToTree);\n\n\t\t\t\t\t\t\tif (process.platform === 'linux') {\n\t\t\t\t\t\t\t\tcalculateLinuxCpuUsage();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (!rootItem) {\n\t\t\t\t\t\t\t\t\treject(new Error(`Root process ${rootPid} not found`));\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tresolve(rootItem);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n}\n\nfunction parsePsOutput(stdout: string, addToTree: (pid: number, ppid: number, cmd: string, load: number, mem: number) => void): void {\n\tconst PID_CMD = /^\\s*([0-9]+)\\s+([0-9]+)\\s+([0-9]+\\.[0-9]+)\\s+([0-9]+\\.[0-9]+)\\s+(.+)$/;\n\tconst lines = stdout.toString().split('\\n');\n\tfor (const line of lines) {\n\t\tconst matches = PID_CMD.exec(line.trim());\n\t\tif (matches && matches.length === 6) {\n\t\t\taddToTree(parseInt(matches[1]), parseInt(matches[2]), matches[5], parseFloat(matches[3]), parseFloat(matches[4]));\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { watch } from 'fs';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { isEqualOrParent } from 'vs/base/common/extpath';\nimport { Disposable, dispose, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { normalizeNFC } from 'vs/base/common/normalization';\nimport { basename, join } from 'vs/base/common/path';\nimport { isMacintosh } from 'vs/base/common/platform';\nimport { Promises } from 'vs/base/node/pfs';\n\nexport function watchFile(path: string, onChange: (type: 'added' | 'changed' | 'deleted', path: string) => void, onError: (error: string) => void): IDisposable {\n\treturn doWatchNonRecursive({ path, isDirectory: false }, onChange, onError);\n}\n\nexport function watchFolder(path: string, onChange: (type: 'added' | 'changed' | 'deleted', path: string) => void, onError: (error: string) => void): IDisposable {\n\treturn doWatchNonRecursive({ path, isDirectory: true }, onChange, onError);\n}\n\nexport const CHANGE_BUFFER_DELAY = 100;\n\nfunction doWatchNonRecursive(file: { path: string, isDirectory: boolean }, onChange: (type: 'added' | 'changed' | 'deleted', path: string) => void, onError: (error: string) => void): IDisposable {\n\n\t// macOS: watching samba shares can crash VSCode so we do\n\t// a simple check for the file path pointing to /Volumes\n\t// (https://github.com/microsoft/vscode/issues/106879)\n\t// TODO@electron this needs a revisit when the crash is\n\t// fixed or mitigated upstream.\n\tif (isMacintosh && isEqualOrParent(file.path, '/Volumes/')) {\n\t\tonError(`Refusing to watch ${file.path} for changes using fs.watch() for possibly being a network share where watching is unreliable and unstable.`);\n\t\treturn Disposable.None;\n\t}\n\n\tconst originalFileName = basename(file.path);\n\tconst mapPathToStatDisposable = new Map<string, IDisposable>();\n\n\tlet disposed = false;\n\tlet watcherDisposables: IDisposable[] = [toDisposable(() => {\n\t\tmapPathToStatDisposable.forEach(disposable => dispose(disposable));\n\t\tmapPathToStatDisposable.clear();\n\t})];\n\n\ttry {\n\n\t\t// Creating watcher can fail with an exception\n\t\tconst watcher = watch(file.path);\n\t\twatcherDisposables.push(toDisposable(() => {\n\t\t\twatcher.removeAllListeners();\n\t\t\twatcher.close();\n\t\t}));\n\n\t\t// Folder: resolve children to emit proper events\n\t\tconst folderChildren: Set<string> = new Set<string>();\n\t\tif (file.isDirectory) {\n\t\t\tPromises.readdir(file.path).then(children => children.forEach(child => folderChildren.add(child)));\n\t\t}\n\n\t\twatcher.on('error', (code: number, signal: string) => {\n\t\t\tif (!disposed) {\n\t\t\t\tonError(`Failed to watch ${file.path} for changes using fs.watch() (${code}, ${signal})`);\n\t\t\t}\n\t\t});\n\n\t\twatcher.on('change', (type, raw) => {\n\t\t\tif (disposed) {\n\t\t\t\treturn; // ignore if already disposed\n\t\t\t}\n\n\t\t\t// Normalize file name\n\t\t\tlet changedFileName: string = '';\n\t\t\tif (raw) { // https://github.com/microsoft/vscode/issues/38191\n\t\t\t\tchangedFileName = raw.toString();\n\t\t\t\tif (isMacintosh) {\n\t\t\t\t\t// Mac: uses NFD unicode form on disk, but we want NFC\n\t\t\t\t\t// See also https://github.com/nodejs/node/issues/2165\n\t\t\t\t\tchangedFileName = normalizeNFC(changedFileName);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (!changedFileName || (type !== 'change' && type !== 'rename')) {\n\t\t\t\treturn; // ignore unexpected events\n\t\t\t}\n\n\t\t\t// File path: use path directly for files and join with changed file name otherwise\n\t\t\tconst changedFilePath = file.isDirectory ? join(file.path, changedFileName) : file.path;\n\n\t\t\t// File\n\t\t\tif (!file.isDirectory) {\n\t\t\t\tif (type === 'rename' || changedFileName !== originalFileName) {\n\t\t\t\t\t// The file was either deleted or renamed. Many tools apply changes to files in an\n\t\t\t\t\t// atomic way (\"Atomic Save\") by first renaming the file to a temporary name and then\n\t\t\t\t\t// renaming it back to the original name. Our watcher will detect this as a rename\n\t\t\t\t\t// and then stops to work on Mac and Linux because the watcher is applied to the\n\t\t\t\t\t// inode and not the name. The fix is to detect this case and trying to watch the file\n\t\t\t\t\t// again after a certain delay.\n\t\t\t\t\t// In addition, we send out a delete event if after a timeout we detect that the file\n\t\t\t\t\t// does indeed not exist anymore.\n\n\t\t\t\t\tconst timeoutHandle = setTimeout(async () => {\n\t\t\t\t\t\tconst fileExists = await Promises.exists(changedFilePath);\n\n\t\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\t\treturn; // ignore if disposed by now\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// File still exists, so emit as change event and reapply the watcher\n\t\t\t\t\t\tif (fileExists) {\n\t\t\t\t\t\t\tonChange('changed', changedFilePath);\n\n\t\t\t\t\t\t\twatcherDisposables = [doWatchNonRecursive(file, onChange, onError)];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// File seems to be really gone, so emit a deleted event\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tonChange('deleted', changedFilePath);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, CHANGE_BUFFER_DELAY);\n\n\t\t\t\t\t// Very important to dispose the watcher which now points to a stale inode\n\t\t\t\t\t// and wire in a new disposable that tracks our timeout that is installed\n\t\t\t\t\tdispose(watcherDisposables);\n\t\t\t\t\twatcherDisposables = [toDisposable(() => clearTimeout(timeoutHandle))];\n\t\t\t\t} else {\n\t\t\t\t\tonChange('changed', changedFilePath);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Folder\n\t\t\telse {\n\n\t\t\t\t// Children add/delete\n\t\t\t\tif (type === 'rename') {\n\n\t\t\t\t\t// Cancel any previous stats for this file path if existing\n\t\t\t\t\tconst statDisposable = mapPathToStatDisposable.get(changedFilePath);\n\t\t\t\t\tif (statDisposable) {\n\t\t\t\t\t\tdispose(statDisposable);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Wait a bit and try see if the file still exists on disk to decide on the resulting event\n\t\t\t\t\tconst timeoutHandle = setTimeout(async () => {\n\t\t\t\t\t\tmapPathToStatDisposable.delete(changedFilePath);\n\n\t\t\t\t\t\tconst fileExists = await Promises.exists(changedFilePath);\n\n\t\t\t\t\t\tif (disposed) {\n\t\t\t\t\t\t\treturn; // ignore if disposed by now\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Figure out the correct event type:\n\t\t\t\t\t\t// File Exists: either 'added' or 'changed' if known before\n\t\t\t\t\t\t// File Does not Exist: always 'deleted'\n\t\t\t\t\t\tlet type: 'added' | 'deleted' | 'changed';\n\t\t\t\t\t\tif (fileExists) {\n\t\t\t\t\t\t\tif (folderChildren.has(changedFileName)) {\n\t\t\t\t\t\t\t\ttype = 'changed';\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttype = 'added';\n\t\t\t\t\t\t\t\tfolderChildren.add(changedFileName);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfolderChildren.delete(changedFileName);\n\t\t\t\t\t\t\ttype = 'deleted';\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tonChange(type, changedFilePath);\n\t\t\t\t\t}, CHANGE_BUFFER_DELAY);\n\n\t\t\t\t\tmapPathToStatDisposable.set(changedFilePath, toDisposable(() => clearTimeout(timeoutHandle)));\n\t\t\t\t}\n\n\t\t\t\t// Other events\n\t\t\t\telse {\n\n\t\t\t\t\t// Figure out the correct event type: if this is the\n\t\t\t\t\t// first time we see this child, it can only be added\n\t\t\t\t\tlet type: 'added' | 'changed';\n\t\t\t\t\tif (folderChildren.has(changedFileName)) {\n\t\t\t\t\t\ttype = 'changed';\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = 'added';\n\t\t\t\t\t\tfolderChildren.add(changedFileName);\n\t\t\t\t\t}\n\n\t\t\t\t\tonChange(type, changedFilePath);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t} catch (error) {\n\t\tPromises.exists(file.path).then(exists => {\n\t\t\tif (exists && !disposed) {\n\t\t\t\tonError(`Failed to watch ${file.path} for changes using fs.watch() (${error.toString()})`);\n\t\t\t}\n\t\t});\n\t}\n\n\treturn toDisposable(() => {\n\t\tdisposed = true;\n\n\t\twatcherDisposables = dispose(watcherDisposables);\n\t});\n}\n\n/**\n * Watch the provided `path` for changes and return\n * the data in chunks of `Uint8Array` for further use.\n */\nexport async function watchFileContents(path: string, onData: (chunk: Uint8Array) => void, token: CancellationToken, bufferSize = 512): Promise<void> {\n\tconst handle = await Promises.open(path, 'r');\n\tconst buffer = Buffer.allocUnsafe(bufferSize);\n\n\tconst cts = new CancellationTokenSource(token);\n\n\tlet error: Error | undefined = undefined;\n\tlet isReading = false;\n\n\tconst watcher = watchFile(path, async type => {\n\t\tif (type === 'changed') {\n\n\t\t\tif (isReading) {\n\t\t\t\treturn; // return early if we are already reading the output\n\t\t\t}\n\n\t\t\tisReading = true;\n\n\t\t\ttry {\n\t\t\t\t// Consume the new contents of the file until finished\n\t\t\t\t// everytime there is a change event signalling a change\n\t\t\t\twhile (!cts.token.isCancellationRequested) {\n\t\t\t\t\tconst { bytesRead } = await Promises.read(handle, buffer, 0, bufferSize, null);\n\t\t\t\t\tif (!bytesRead || cts.token.isCancellationRequested) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tonData(buffer.slice(0, bytesRead));\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\terror = new Error(err);\n\t\t\t\tcts.dispose(true);\n\t\t\t} finally {\n\t\t\t\tisReading = false;\n\t\t\t}\n\t\t}\n\t}, err => {\n\t\terror = new Error(err);\n\t\tcts.dispose(true);\n\t});\n\n\treturn new Promise<void>((resolve, reject) => {\n\t\tcts.token.onCancellationRequested(async () => {\n\t\t\twatcher.dispose();\n\t\t\tawait Promises.close(handle);\n\n\t\t\tif (error) {\n\t\t\t\treject(error);\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport interface ICommonContextMenuItem {\n\tlabel?: string;\n\n\ttype?: 'normal' | 'separator' | 'submenu' | 'checkbox' | 'radio';\n\n\taccelerator?: string;\n\n\tenabled?: boolean;\n\tvisible?: boolean;\n\tchecked?: boolean;\n}\n\nexport interface ISerializableContextMenuItem extends ICommonContextMenuItem {\n\tid: number;\n\tsubmenu?: ISerializableContextMenuItem[];\n}\n\nexport interface IContextMenuItem extends ICommonContextMenuItem {\n\tclick?: (event: IContextMenuEvent) => void;\n\tsubmenu?: IContextMenuItem[];\n}\n\nexport interface IContextMenuEvent {\n\tshiftKey?: boolean;\n\tctrlKey?: boolean;\n\taltKey?: boolean;\n\tmetaKey?: boolean;\n}\n\nexport interface IPopupOptions {\n\tx?: number;\n\ty?: number;\n\tpositioningItem?: number;\n}\n\nexport const CONTEXT_MENU_CHANNEL = 'vscode:contextmenu';\nexport const CONTEXT_MENU_CLOSE_CHANNEL = 'vscode:onCloseContextMenu';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { BrowserWindow, ipcMain, IpcMainEvent, Menu, MenuItem } from 'electron';\nimport { withNullAsUndefined } from 'vs/base/common/types';\nimport { CONTEXT_MENU_CHANNEL, CONTEXT_MENU_CLOSE_CHANNEL, IPopupOptions, ISerializableContextMenuItem } from 'vs/base/parts/contextmenu/common/contextmenu';\n\nexport function registerContextMenuListener(): void {\n\tipcMain.on(CONTEXT_MENU_CHANNEL, (event: IpcMainEvent, contextMenuId: number, items: ISerializableContextMenuItem[], onClickChannel: string, options?: IPopupOptions) => {\n\t\tconst menu = createMenu(event, onClickChannel, items);\n\n\t\tmenu.popup({\n\t\t\twindow: withNullAsUndefined(BrowserWindow.fromWebContents(event.sender)),\n\t\t\tx: options ? options.x : undefined,\n\t\t\ty: options ? options.y : undefined,\n\t\t\tpositioningItem: options ? options.positioningItem : undefined,\n\t\t\tcallback: () => {\n\t\t\t\t// Workaround for https://github.com/microsoft/vscode/issues/72447\n\t\t\t\t// It turns out that the menu gets GC'ed if not referenced anymore\n\t\t\t\t// As such we drag it into this scope so that it is not being GC'ed\n\t\t\t\tif (menu) {\n\t\t\t\t\tevent.sender.send(CONTEXT_MENU_CLOSE_CHANNEL, contextMenuId);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\nfunction createMenu(event: IpcMainEvent, onClickChannel: string, items: ISerializableContextMenuItem[]): Menu {\n\tconst menu = new Menu();\n\n\titems.forEach(item => {\n\t\tlet menuitem: MenuItem;\n\n\t\t// Separator\n\t\tif (item.type === 'separator') {\n\t\t\tmenuitem = new MenuItem({\n\t\t\t\ttype: item.type,\n\t\t\t});\n\t\t}\n\n\t\t// Sub Menu\n\t\telse if (Array.isArray(item.submenu)) {\n\t\t\tmenuitem = new MenuItem({\n\t\t\t\tsubmenu: createMenu(event, onClickChannel, item.submenu),\n\t\t\t\tlabel: item.label\n\t\t\t});\n\t\t}\n\n\t\t// Normal Menu Item\n\t\telse {\n\t\t\tmenuitem = new MenuItem({\n\t\t\t\tlabel: item.label,\n\t\t\t\ttype: item.type,\n\t\t\t\taccelerator: item.accelerator,\n\t\t\t\tchecked: item.checked,\n\t\t\t\tenabled: item.enabled,\n\t\t\t\tvisible: item.visible,\n\t\t\t\tclick: (menuItem, win, contextmenuEvent) => event.sender.send(onClickChannel, item.id, contextmenuEvent)\n\t\t\t});\n\t\t}\n\n\t\tmenu.append(menuitem);\n\t});\n\n\treturn menu;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getRandomElement } from 'vs/base/common/arrays';\nimport { CancelablePromise, createCancelablePromise, timeout } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { memoize } from 'vs/base/common/decorators';\nimport * as errors from 'vs/base/common/errors';\nimport { Emitter, Event, EventMultiplexer, Relay } from 'vs/base/common/event';\nimport { combinedDisposable, DisposableStore, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { revive } from 'vs/base/common/marshalling';\nimport * as strings from 'vs/base/common/strings';\nimport { isFunction, isUndefinedOrNull } from 'vs/base/common/types';\n\n/**\n * An `IChannel` is an abstraction over a collection of commands.\n * You can `call` several commands on a channel, each taking at\n * most one single argument. A `call` always returns a promise\n * with at most one single return value.\n */\nexport interface IChannel {\n\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(event: string, arg?: any): Event<T>;\n}\n\n/**\n * An `IServerChannel` is the counter part to `IChannel`,\n * on the server-side. You should implement this interface\n * if you'd like to handle remote promises or events.\n */\nexport interface IServerChannel<TContext = string> {\n\tcall<T>(ctx: TContext, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T>;\n\tlisten<T>(ctx: TContext, event: string, arg?: any): Event<T>;\n}\n\nexport const enum RequestType {\n\tPromise = 100,\n\tPromiseCancel = 101,\n\tEventListen = 102,\n\tEventDispose = 103\n}\n\nfunction requestTypeToStr(type: RequestType): string {\n\tswitch (type) {\n\t\tcase RequestType.Promise:\n\t\t\treturn 'req';\n\t\tcase RequestType.PromiseCancel:\n\t\t\treturn 'cancel';\n\t\tcase RequestType.EventListen:\n\t\t\treturn 'subscribe';\n\t\tcase RequestType.EventDispose:\n\t\t\treturn 'unsubscribe';\n\t}\n}\n\ntype IRawPromiseRequest = { type: RequestType.Promise; id: number; channelName: string; name: string; arg: any; };\ntype IRawPromiseCancelRequest = { type: RequestType.PromiseCancel, id: number };\ntype IRawEventListenRequest = { type: RequestType.EventListen; id: number; channelName: string; name: string; arg: any; };\ntype IRawEventDisposeRequest = { type: RequestType.EventDispose, id: number };\ntype IRawRequest = IRawPromiseRequest | IRawPromiseCancelRequest | IRawEventListenRequest | IRawEventDisposeRequest;\n\nexport const enum ResponseType {\n\tInitialize = 200,\n\tPromiseSuccess = 201,\n\tPromiseError = 202,\n\tPromiseErrorObj = 203,\n\tEventFire = 204\n}\n\nfunction responseTypeToStr(type: ResponseType): string {\n\tswitch (type) {\n\t\tcase ResponseType.Initialize:\n\t\t\treturn `init`;\n\t\tcase ResponseType.PromiseSuccess:\n\t\t\treturn `reply:`;\n\t\tcase ResponseType.PromiseError:\n\t\tcase ResponseType.PromiseErrorObj:\n\t\t\treturn `replyErr:`;\n\t\tcase ResponseType.EventFire:\n\t\t\treturn `event:`;\n\t}\n}\n\ntype IRawInitializeResponse = { type: ResponseType.Initialize };\ntype IRawPromiseSuccessResponse = { type: ResponseType.PromiseSuccess; id: number; data: any };\ntype IRawPromiseErrorResponse = { type: ResponseType.PromiseError; id: number; data: { message: string, name: string, stack: string[] | undefined } };\ntype IRawPromiseErrorObjResponse = { type: ResponseType.PromiseErrorObj; id: number; data: any };\ntype IRawEventFireResponse = { type: ResponseType.EventFire; id: number; data: any };\ntype IRawResponse = IRawInitializeResponse | IRawPromiseSuccessResponse | IRawPromiseErrorResponse | IRawPromiseErrorObjResponse | IRawEventFireResponse;\n\ninterface IHandler {\n\t(response: IRawResponse): void;\n}\n\nexport interface IMessagePassingProtocol {\n\tsend(buffer: VSBuffer): void;\n\tonMessage: Event<VSBuffer>;\n\t/**\n\t * Wait for the write buffer (if applicable) to become empty.\n\t */\n\tdrain?(): Promise<void>;\n}\n\nenum State {\n\tUninitialized,\n\tIdle\n}\n\n/**\n * An `IChannelServer` hosts a collection of channels. You are\n * able to register channels onto it, provided a channel name.\n */\nexport interface IChannelServer<TContext = string> {\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void;\n}\n\n/**\n * An `IChannelClient` has access to a collection of channels. You\n * are able to get those channels, given their channel name.\n */\nexport interface IChannelClient {\n\tgetChannel<T extends IChannel>(channelName: string): T;\n}\n\nexport interface Client<TContext> {\n\treadonly ctx: TContext;\n}\n\nexport interface IConnectionHub<TContext> {\n\treadonly connections: Connection<TContext>[];\n\treadonly onDidAddConnection: Event<Connection<TContext>>;\n\treadonly onDidRemoveConnection: Event<Connection<TContext>>;\n}\n\n/**\n * An `IClientRouter` is responsible for routing calls to specific\n * channels, in scenarios in which there are multiple possible\n * channels (each from a separate client) to pick from.\n */\nexport interface IClientRouter<TContext = string> {\n\trouteCall(hub: IConnectionHub<TContext>, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<Client<TContext>>;\n\trouteEvent(hub: IConnectionHub<TContext>, event: string, arg?: any): Promise<Client<TContext>>;\n}\n\n/**\n * Similar to the `IChannelClient`, you can get channels from this\n * collection of channels. The difference being that in the\n * `IRoutingChannelClient`, there are multiple clients providing\n * the same channel. You'll need to pass in an `IClientRouter` in\n * order to pick the right one.\n */\nexport interface IRoutingChannelClient<TContext = string> {\n\tgetChannel<T extends IChannel>(channelName: string, router?: IClientRouter<TContext>): T;\n}\n\ninterface IReader {\n\tread(bytes: number): VSBuffer;\n}\n\ninterface IWriter {\n\twrite(buffer: VSBuffer): void;\n}\n\nclass BufferReader implements IReader {\n\n\tprivate pos = 0;\n\n\tconstructor(private buffer: VSBuffer) { }\n\n\tread(bytes: number): VSBuffer {\n\t\tconst result = this.buffer.slice(this.pos, this.pos + bytes);\n\t\tthis.pos += result.byteLength;\n\t\treturn result;\n\t}\n}\n\nclass BufferWriter implements IWriter {\n\n\tprivate buffers: VSBuffer[] = [];\n\n\tget buffer(): VSBuffer {\n\t\treturn VSBuffer.concat(this.buffers);\n\t}\n\n\twrite(buffer: VSBuffer): void {\n\t\tthis.buffers.push(buffer);\n\t}\n}\n\nenum DataType {\n\tUndefined = 0,\n\tString = 1,\n\tBuffer = 2,\n\tVSBuffer = 3,\n\tArray = 4,\n\tObject = 5\n}\n\nfunction createSizeBuffer(size: number): VSBuffer {\n\tconst result = VSBuffer.alloc(4);\n\tresult.writeUInt32BE(size, 0);\n\treturn result;\n}\n\nfunction readSizeBuffer(reader: IReader): number {\n\treturn reader.read(4).readUInt32BE(0);\n}\n\nfunction createOneByteBuffer(value: number): VSBuffer {\n\tconst result = VSBuffer.alloc(1);\n\tresult.writeUInt8(value, 0);\n\treturn result;\n}\n\nconst BufferPresets = {\n\tUndefined: createOneByteBuffer(DataType.Undefined),\n\tString: createOneByteBuffer(DataType.String),\n\tBuffer: createOneByteBuffer(DataType.Buffer),\n\tVSBuffer: createOneByteBuffer(DataType.VSBuffer),\n\tArray: createOneByteBuffer(DataType.Array),\n\tObject: createOneByteBuffer(DataType.Object),\n};\n\ndeclare const Buffer: any;\nconst hasBuffer = (typeof Buffer !== 'undefined');\n\nfunction serialize(writer: IWriter, data: any): void {\n\tif (typeof data === 'undefined') {\n\t\twriter.write(BufferPresets.Undefined);\n\t} else if (typeof data === 'string') {\n\t\tconst buffer = VSBuffer.fromString(data);\n\t\twriter.write(BufferPresets.String);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t} else if (hasBuffer && Buffer.isBuffer(data)) {\n\t\tconst buffer = VSBuffer.wrap(data);\n\t\twriter.write(BufferPresets.Buffer);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t} else if (data instanceof VSBuffer) {\n\t\twriter.write(BufferPresets.VSBuffer);\n\t\twriter.write(createSizeBuffer(data.byteLength));\n\t\twriter.write(data);\n\t} else if (Array.isArray(data)) {\n\t\twriter.write(BufferPresets.Array);\n\t\twriter.write(createSizeBuffer(data.length));\n\n\t\tfor (const el of data) {\n\t\t\tserialize(writer, el);\n\t\t}\n\t} else {\n\t\tconst buffer = VSBuffer.fromString(JSON.stringify(data));\n\t\twriter.write(BufferPresets.Object);\n\t\twriter.write(createSizeBuffer(buffer.byteLength));\n\t\twriter.write(buffer);\n\t}\n}\n\nfunction deserialize(reader: IReader): any {\n\tconst type = reader.read(1).readUInt8(0);\n\n\tswitch (type) {\n\t\tcase DataType.Undefined: return undefined;\n\t\tcase DataType.String: return reader.read(readSizeBuffer(reader)).toString();\n\t\tcase DataType.Buffer: return reader.read(readSizeBuffer(reader)).buffer;\n\t\tcase DataType.VSBuffer: return reader.read(readSizeBuffer(reader));\n\t\tcase DataType.Array: {\n\t\t\tconst length = readSizeBuffer(reader);\n\t\t\tconst result: any[] = [];\n\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tresult.push(deserialize(reader));\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t\tcase DataType.Object: return JSON.parse(reader.read(readSizeBuffer(reader)).toString());\n\t}\n}\n\ninterface PendingRequest {\n\trequest: IRawPromiseRequest | IRawEventListenRequest;\n\ttimeoutTimer: any;\n}\n\nexport class ChannelServer<TContext = string> implements IChannelServer<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate activeRequests = new Map<number, IDisposable>();\n\tprivate protocolListener: IDisposable | null;\n\n\t// Requests might come in for channels which are not yet registered.\n\t// They will timeout after `timeoutDelay`.\n\tprivate pendingRequests = new Map<string, PendingRequest[]>();\n\n\tconstructor(private protocol: IMessagePassingProtocol, private ctx: TContext, private logger: IIPCLogger | null = null, private timeoutDelay: number = 1000) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onRawMessage(msg));\n\t\tthis.sendResponse({ type: ResponseType.Initialize });\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\n\t\t// https://github.com/microsoft/vscode/issues/72531\n\t\tsetTimeout(() => this.flushPendingRequests(channelName), 0);\n\t}\n\n\tprivate sendResponse(response: IRawResponse): void {\n\t\tswitch (response.type) {\n\t\t\tcase ResponseType.Initialize: {\n\t\t\t\tconst msgLength = this.send([response.type]);\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logOutgoing(msgLength, 0, RequestInitiator.OtherSide, responseTypeToStr(response.type));\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj: {\n\t\t\t\tconst msgLength = this.send([response.type, response.id], response.data);\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logOutgoing(msgLength, response.id, RequestInitiator.OtherSide, responseTypeToStr(response.type), response.data);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): number {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\treturn this.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: VSBuffer): number {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t\treturn message.byteLength;\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tprivate onRawMessage(message: VSBuffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type = header[0] as RequestType;\n\n\t\tswitch (type) {\n\t\t\tcase RequestType.Promise:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}: ${header[2]}.${header[3]}`, body);\n\t\t\t\t}\n\t\t\t\treturn this.onPromise({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.EventListen:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}: ${header[2]}.${header[3]}`, body);\n\t\t\t\t}\n\t\t\t\treturn this.onEventListen({ type, id: header[1], channelName: header[2], name: header[3], arg: body });\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}`);\n\t\t\t\t}\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t\tcase RequestType.EventDispose:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.OtherSide, `${requestTypeToStr(type)}`);\n\t\t\t\t}\n\t\t\t\treturn this.disposeActiveRequest({ type, id: header[1] });\n\t\t}\n\t}\n\n\tprivate onPromise(request: IRawPromiseRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\n\t\tif (!channel) {\n\t\t\tthis.collectPendingRequest(request);\n\t\t\treturn;\n\t\t}\n\n\t\tconst cancellationTokenSource = new CancellationTokenSource();\n\t\tlet promise: Promise<any>;\n\n\t\ttry {\n\t\t\tpromise = channel.call(this.ctx, request.name, request.arg, cancellationTokenSource.token);\n\t\t} catch (err) {\n\t\t\tpromise = Promise.reject(err);\n\t\t}\n\n\t\tconst id = request.id;\n\n\t\tpromise.then(data => {\n\t\t\tthis.sendResponse(<IRawResponse>{ id, data, type: ResponseType.PromiseSuccess });\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}, err => {\n\t\t\tif (err instanceof Error) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid, data: {\n\t\t\t\t\t\tmessage: err.message,\n\t\t\t\t\t\tname: err.name,\n\t\t\t\t\t\tstack: err.stack ? (err.stack.split ? err.stack.split('\\n') : err.stack) : undefined\n\t\t\t\t\t}, type: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.sendResponse(<IRawResponse>{ id, data: err, type: ResponseType.PromiseErrorObj });\n\t\t\t}\n\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t});\n\n\t\tconst disposable = toDisposable(() => cancellationTokenSource.cancel());\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate onEventListen(request: IRawEventListenRequest): void {\n\t\tconst channel = this.channels.get(request.channelName);\n\n\t\tif (!channel) {\n\t\t\tthis.collectPendingRequest(request);\n\t\t\treturn;\n\t\t}\n\n\t\tconst id = request.id;\n\t\tconst event = channel.listen(this.ctx, request.name, request.arg);\n\t\tconst disposable = event(data => this.sendResponse(<IRawResponse>{ id, data, type: ResponseType.EventFire }));\n\n\t\tthis.activeRequests.set(request.id, disposable);\n\t}\n\n\tprivate disposeActiveRequest(request: IRawRequest): void {\n\t\tconst disposable = this.activeRequests.get(request.id);\n\n\t\tif (disposable) {\n\t\t\tdisposable.dispose();\n\t\t\tthis.activeRequests.delete(request.id);\n\t\t}\n\t}\n\n\tprivate collectPendingRequest(request: IRawPromiseRequest | IRawEventListenRequest): void {\n\t\tlet pendingRequests = this.pendingRequests.get(request.channelName);\n\n\t\tif (!pendingRequests) {\n\t\t\tpendingRequests = [];\n\t\t\tthis.pendingRequests.set(request.channelName, pendingRequests);\n\t\t}\n\n\t\tconst timer = setTimeout(() => {\n\t\t\tconsole.error(`Unknown channel: ${request.channelName}`);\n\n\t\t\tif (request.type === RequestType.Promise) {\n\t\t\t\tthis.sendResponse(<IRawResponse>{\n\t\t\t\t\tid: request.id,\n\t\t\t\t\tdata: { name: 'Unknown channel', message: `Channel name '${request.channelName}' timed out after ${this.timeoutDelay}ms`, stack: undefined },\n\t\t\t\t\ttype: ResponseType.PromiseError\n\t\t\t\t});\n\t\t\t}\n\t\t}, this.timeoutDelay);\n\n\t\tpendingRequests.push({ request, timeoutTimer: timer });\n\t}\n\n\tprivate flushPendingRequests(channelName: string): void {\n\t\tconst requests = this.pendingRequests.get(channelName);\n\n\t\tif (requests) {\n\t\t\tfor (const request of requests) {\n\t\t\t\tclearTimeout(request.timeoutTimer);\n\n\t\t\t\tswitch (request.request.type) {\n\t\t\t\t\tcase RequestType.Promise: this.onPromise(request.request); break;\n\t\t\t\t\tcase RequestType.EventListen: this.onEventListen(request.request); break;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.pendingRequests.delete(channelName);\n\t\t}\n\t}\n\n\tpublic dispose(): void {\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tthis.activeRequests.forEach(d => d.dispose());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport const enum RequestInitiator {\n\tLocalSide = 0,\n\tOtherSide = 1\n}\n\nexport interface IIPCLogger {\n\tlogIncoming(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void;\n\tlogOutgoing(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void;\n}\n\nexport class ChannelClient implements IChannelClient, IDisposable {\n\n\tprivate isDisposed: boolean = false;\n\tprivate state: State = State.Uninitialized;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate handlers = new Map<number, IHandler>();\n\tprivate lastRequestId: number = 0;\n\tprivate protocolListener: IDisposable | null;\n\tprivate logger: IIPCLogger | null;\n\n\tprivate readonly _onDidInitialize = new Emitter<void>();\n\treadonly onDidInitialize = this._onDidInitialize.event;\n\n\tconstructor(private protocol: IMessagePassingProtocol, logger: IIPCLogger | null = null) {\n\t\tthis.protocolListener = this.protocol.onMessage(msg => this.onBuffer(msg));\n\t\tthis.logger = logger;\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken) {\n\t\t\t\tif (that.isDisposed) {\n\t\t\t\t\treturn Promise.reject(errors.canceled());\n\t\t\t\t}\n\t\t\t\treturn that.requestPromise(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any) {\n\t\t\t\tif (that.isDisposed) {\n\t\t\t\t\treturn Promise.reject(errors.canceled());\n\t\t\t\t}\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate requestPromise(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.Promise;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(errors.canceled());\n\t\t}\n\n\t\tlet disposable: IDisposable;\n\n\t\tconst result = new Promise((c, e) => {\n\t\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\t\treturn e(errors.canceled());\n\t\t\t}\n\n\t\t\tconst doRequest = () => {\n\t\t\t\tconst handler: IHandler = response => {\n\t\t\t\t\tswitch (response.type) {\n\t\t\t\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tc(response.data);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseError:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\tconst error = new Error(response.data.message);\n\t\t\t\t\t\t\t(<any>error).stack = response.data.stack;\n\t\t\t\t\t\t\terror.name = response.data.name;\n\t\t\t\t\t\t\te(error);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\t\t\t\tthis.handlers.delete(id);\n\t\t\t\t\t\t\te(response.data);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.handlers.set(id, handler);\n\t\t\t\tthis.sendRequest(request);\n\t\t\t};\n\n\t\t\tlet uninitializedPromise: CancelablePromise<void> | null = null;\n\t\t\tif (this.state === State.Idle) {\n\t\t\t\tdoRequest();\n\t\t\t} else {\n\t\t\t\tuninitializedPromise = createCancelablePromise(_ => this.whenInitialized());\n\t\t\t\tuninitializedPromise.then(() => {\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t\tdoRequest();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst cancel = () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.PromiseCancel });\n\t\t\t\t}\n\n\t\t\t\te(errors.canceled());\n\t\t\t};\n\n\t\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(cancel);\n\t\t\tdisposable = combinedDisposable(toDisposable(cancel), cancellationTokenListener);\n\t\t\tthis.activeRequests.add(disposable);\n\t\t});\n\n\t\treturn result.finally(() => { this.activeRequests.delete(disposable); });\n\t}\n\n\tprivate requestEvent(channelName: string, name: string, arg?: any): Event<any> {\n\t\tconst id = this.lastRequestId++;\n\t\tconst type = RequestType.EventListen;\n\t\tconst request: IRawRequest = { id, type, channelName, name, arg };\n\n\t\tlet uninitializedPromise: CancelablePromise<void> | null = null;\n\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tuninitializedPromise = createCancelablePromise(_ => this.whenInitialized());\n\t\t\t\tuninitializedPromise.then(() => {\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t\tthis.activeRequests.add(emitter);\n\t\t\t\t\tthis.sendRequest(request);\n\t\t\t\t});\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tif (uninitializedPromise) {\n\t\t\t\t\tuninitializedPromise.cancel();\n\t\t\t\t\tuninitializedPromise = null;\n\t\t\t\t} else {\n\t\t\t\t\tthis.activeRequests.delete(emitter);\n\t\t\t\t\tthis.sendRequest({ id, type: RequestType.EventDispose });\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tconst handler: IHandler = (res: IRawResponse) => emitter.fire((res as IRawEventFireResponse).data);\n\t\tthis.handlers.set(id, handler);\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate sendRequest(request: IRawRequest): void {\n\t\tswitch (request.type) {\n\t\t\tcase RequestType.Promise:\n\t\t\tcase RequestType.EventListen: {\n\t\t\t\tconst msgLength = this.send([request.type, request.id, request.channelName, request.name], request.arg);\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logOutgoing(msgLength, request.id, RequestInitiator.LocalSide, `${requestTypeToStr(request.type)}: ${request.channelName}.${request.name}`, request.arg);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcase RequestType.PromiseCancel:\n\t\t\tcase RequestType.EventDispose: {\n\t\t\t\tconst msgLength = this.send([request.type, request.id]);\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logOutgoing(msgLength, request.id, RequestInitiator.LocalSide, requestTypeToStr(request.type));\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate send(header: any, body: any = undefined): number {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, header);\n\t\tserialize(writer, body);\n\t\treturn this.sendBuffer(writer.buffer);\n\t}\n\n\tprivate sendBuffer(message: VSBuffer): number {\n\t\ttry {\n\t\t\tthis.protocol.send(message);\n\t\t\treturn message.byteLength;\n\t\t} catch (err) {\n\t\t\t// noop\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\tprivate onBuffer(message: VSBuffer): void {\n\t\tconst reader = new BufferReader(message);\n\t\tconst header = deserialize(reader);\n\t\tconst body = deserialize(reader);\n\t\tconst type: ResponseType = header[0];\n\n\t\tswitch (type) {\n\t\t\tcase ResponseType.Initialize:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, 0, RequestInitiator.LocalSide, responseTypeToStr(type));\n\t\t\t\t}\n\t\t\t\treturn this.onResponse({ type: header[0] });\n\n\t\t\tcase ResponseType.PromiseSuccess:\n\t\t\tcase ResponseType.PromiseError:\n\t\t\tcase ResponseType.EventFire:\n\t\t\tcase ResponseType.PromiseErrorObj:\n\t\t\t\tif (this.logger) {\n\t\t\t\t\tthis.logger.logIncoming(message.byteLength, header[1], RequestInitiator.LocalSide, responseTypeToStr(type), body);\n\t\t\t\t}\n\t\t\t\treturn this.onResponse({ type: header[0], id: header[1], data: body });\n\t\t}\n\t}\n\n\tprivate onResponse(response: IRawResponse): void {\n\t\tif (response.type === ResponseType.Initialize) {\n\t\t\tthis.state = State.Idle;\n\t\t\tthis._onDidInitialize.fire();\n\t\t\treturn;\n\t\t}\n\n\t\tconst handler = this.handlers.get(response.id);\n\n\t\tif (handler) {\n\t\t\thandler(response);\n\t\t}\n\t}\n\n\t@memoize\n\tget onDidInitializePromise(): Promise<void> {\n\t\treturn Event.toPromise(this.onDidInitialize);\n\t}\n\n\tprivate whenInitialized(): Promise<void> {\n\t\tif (this.state === State.Idle) {\n\t\t\treturn Promise.resolve();\n\t\t} else {\n\t\t\treturn this.onDidInitializePromise;\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tthis.isDisposed = true;\n\t\tif (this.protocolListener) {\n\t\t\tthis.protocolListener.dispose();\n\t\t\tthis.protocolListener = null;\n\t\t}\n\t\tthis.activeRequests.forEach(p => p.dispose());\n\t\tthis.activeRequests.clear();\n\t}\n}\n\nexport interface ClientConnectionEvent {\n\tprotocol: IMessagePassingProtocol;\n\tonDidClientDisconnect: Event<void>;\n}\n\ninterface Connection<TContext> extends Client<TContext> {\n\treadonly channelServer: ChannelServer<TContext>;\n\treadonly channelClient: ChannelClient;\n}\n\n/**\n * An `IPCServer` is both a channel server and a routing channel\n * client.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCServer<TContext = string> implements IChannelServer<TContext>, IRoutingChannelClient<TContext>, IConnectionHub<TContext>, IDisposable {\n\n\tprivate channels = new Map<string, IServerChannel<TContext>>();\n\tprivate _connections = new Set<Connection<TContext>>();\n\n\tprivate readonly _onDidAddConnection = new Emitter<Connection<TContext>>();\n\treadonly onDidAddConnection: Event<Connection<TContext>> = this._onDidAddConnection.event;\n\n\tprivate readonly _onDidRemoveConnection = new Emitter<Connection<TContext>>();\n\treadonly onDidRemoveConnection: Event<Connection<TContext>> = this._onDidRemoveConnection.event;\n\n\tget connections(): Connection<TContext>[] {\n\t\tconst result: Connection<TContext>[] = [];\n\t\tthis._connections.forEach(ctx => result.push(ctx));\n\t\treturn result;\n\t}\n\n\tconstructor(onDidClientConnect: Event<ClientConnectionEvent>) {\n\t\tonDidClientConnect(({ protocol, onDidClientDisconnect }) => {\n\t\t\tconst onFirstMessage = Event.once(protocol.onMessage);\n\n\t\t\tonFirstMessage(msg => {\n\t\t\t\tconst reader = new BufferReader(msg);\n\t\t\t\tconst ctx = deserialize(reader) as TContext;\n\n\t\t\t\tconst channelServer = new ChannelServer(protocol, ctx);\n\t\t\t\tconst channelClient = new ChannelClient(protocol);\n\n\t\t\t\tthis.channels.forEach((channel, name) => channelServer.registerChannel(name, channel));\n\n\t\t\t\tconst connection: Connection<TContext> = { channelServer, channelClient, ctx };\n\t\t\t\tthis._connections.add(connection);\n\t\t\t\tthis._onDidAddConnection.fire(connection);\n\n\t\t\t\tonDidClientDisconnect(() => {\n\t\t\t\t\tchannelServer.dispose();\n\t\t\t\t\tchannelClient.dispose();\n\t\t\t\t\tthis._connections.delete(connection);\n\t\t\t\t\tthis._onDidRemoveConnection.fire(connection);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Get a channel from a remote client. When passed a router,\n\t * one can specify which client it wants to call and listen to/from.\n\t * Otherwise, when calling without a router, a random client will\n\t * be selected and when listening without a router, every client\n\t * will be listened to.\n\t */\n\tgetChannel<T extends IChannel>(channelName: string, router: IClientRouter<TContext>): T;\n\tgetChannel<T extends IChannel>(channelName: string, clientFilter: (client: Client<TContext>) => boolean): T;\n\tgetChannel<T extends IChannel>(channelName: string, routerOrClientFilter: IClientRouter<TContext> | ((client: Client<TContext>) => boolean)): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\tlet connectionPromise: Promise<Client<TContext>>;\n\n\t\t\t\tif (isFunction(routerOrClientFilter)) {\n\t\t\t\t\t// when no router is provided, we go random client picking\n\t\t\t\t\tlet connection = getRandomElement(that.connections.filter(routerOrClientFilter));\n\n\t\t\t\t\tconnectionPromise = connection\n\t\t\t\t\t\t// if we found a client, let's call on it\n\t\t\t\t\t\t? Promise.resolve(connection)\n\t\t\t\t\t\t// else, let's wait for a client to come along\n\t\t\t\t\t\t: Event.toPromise(Event.filter(that.onDidAddConnection, routerOrClientFilter));\n\t\t\t\t} else {\n\t\t\t\t\tconnectionPromise = routerOrClientFilter.routeCall(that, command, arg);\n\t\t\t\t}\n\n\t\t\t\tconst channelPromise = connectionPromise\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.call(command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg: any): Event<T> {\n\t\t\t\tif (isFunction(routerOrClientFilter)) {\n\t\t\t\t\treturn that.getMulticastEvent(channelName, routerOrClientFilter, event, arg);\n\t\t\t\t}\n\n\t\t\t\tconst channelPromise = routerOrClientFilter.routeEvent(that, event, arg)\n\t\t\t\t\t.then(connection => (connection as Connection<TContext>).channelClient.getChannel(channelName));\n\n\t\t\t\treturn getDelayedChannel(channelPromise)\n\t\t\t\t\t.listen(event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprivate getMulticastEvent<T extends IChannel>(channelName: string, clientFilter: (client: Client<TContext>) => boolean, eventName: string, arg: any): Event<T> {\n\t\tconst that = this;\n\t\tlet disposables = new DisposableStore();\n\n\t\t// Create an emitter which hooks up to all clients\n\t\t// as soon as first listener is added. It also\n\t\t// disconnects from all clients as soon as the last listener\n\t\t// is removed.\n\t\tconst emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tdisposables = new DisposableStore();\n\n\t\t\t\t// The event multiplexer is useful since the active\n\t\t\t\t// client list is dynamic. We need to hook up and disconnection\n\t\t\t\t// to/from clients as they come and go.\n\t\t\t\tconst eventMultiplexer = new EventMultiplexer<T>();\n\t\t\t\tconst map = new Map<Connection<TContext>, IDisposable>();\n\n\t\t\t\tconst onDidAddConnection = (connection: Connection<TContext>) => {\n\t\t\t\t\tconst channel = connection.channelClient.getChannel(channelName);\n\t\t\t\t\tconst event = channel.listen<T>(eventName, arg);\n\t\t\t\t\tconst disposable = eventMultiplexer.add(event);\n\n\t\t\t\t\tmap.set(connection, disposable);\n\t\t\t\t};\n\n\t\t\t\tconst onDidRemoveConnection = (connection: Connection<TContext>) => {\n\t\t\t\t\tconst disposable = map.get(connection);\n\n\t\t\t\t\tif (!disposable) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tdisposable.dispose();\n\t\t\t\t\tmap.delete(connection);\n\t\t\t\t};\n\n\t\t\t\tthat.connections.filter(clientFilter).forEach(onDidAddConnection);\n\t\t\t\tEvent.filter(that.onDidAddConnection, clientFilter)(onDidAddConnection, undefined, disposables);\n\t\t\t\tthat.onDidRemoveConnection(onDidRemoveConnection, undefined, disposables);\n\t\t\t\teventMultiplexer.event(emitter.fire, emitter, disposables);\n\n\t\t\t\tdisposables.add(eventMultiplexer);\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tdisposables.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channels.set(channelName, channel);\n\n\t\tthis._connections.forEach(connection => {\n\t\t\tconnection.channelServer.registerChannel(channelName, channel);\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\tthis.channels.clear();\n\t\tthis._connections.clear();\n\t\tthis._onDidAddConnection.dispose();\n\t\tthis._onDidRemoveConnection.dispose();\n\t}\n}\n\n/**\n * An `IPCClient` is both a channel client and a channel server.\n *\n * As the owner of a protocol, you should extend both this\n * and the `IPCClient` classes to get IPC implementations\n * for your protocol.\n */\nexport class IPCClient<TContext = string> implements IChannelClient, IChannelServer<TContext>, IDisposable {\n\n\tprivate channelClient: ChannelClient;\n\tprivate channelServer: ChannelServer<TContext>;\n\n\tconstructor(protocol: IMessagePassingProtocol, ctx: TContext, ipcLogger: IIPCLogger | null = null) {\n\t\tconst writer = new BufferWriter();\n\t\tserialize(writer, ctx);\n\t\tprotocol.send(writer.buffer);\n\n\t\tthis.channelClient = new ChannelClient(protocol, ipcLogger);\n\t\tthis.channelServer = new ChannelServer(protocol, ctx, ipcLogger);\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\treturn this.channelClient.getChannel(channelName) as T;\n\t}\n\n\tregisterChannel(channelName: string, channel: IServerChannel<TContext>): void {\n\t\tthis.channelServer.registerChannel(channelName, channel);\n\t}\n\n\tdispose(): void {\n\t\tthis.channelClient.dispose();\n\t\tthis.channelServer.dispose();\n\t}\n}\n\nexport function getDelayedChannel<T extends IChannel>(promise: Promise<T>): T {\n\treturn {\n\t\tcall(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\treturn promise.then(c => c.call<T>(command, arg, cancellationToken));\n\t\t},\n\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tconst relay = new Relay<any>();\n\t\t\tpromise.then(c => relay.input = c.listen(event, arg));\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport function getNextTickChannel<T extends IChannel>(channel: T): T {\n\tlet didTick = false;\n\n\treturn {\n\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.call(command, arg, cancellationToken);\n\t\t\t}\n\n\t\t\treturn timeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => channel.call<T>(command, arg, cancellationToken));\n\t\t},\n\t\tlisten<T>(event: string, arg?: any): Event<T> {\n\t\t\tif (didTick) {\n\t\t\t\treturn channel.listen<T>(event, arg);\n\t\t\t}\n\n\t\t\tconst relay = new Relay<T>();\n\n\t\t\ttimeout(0)\n\t\t\t\t.then(() => didTick = true)\n\t\t\t\t.then(() => relay.input = channel.listen<T>(event, arg));\n\n\t\t\treturn relay.event;\n\t\t}\n\t} as T;\n}\n\nexport class StaticRouter<TContext = string> implements IClientRouter<TContext> {\n\n\tconstructor(private fn: (ctx: TContext) => boolean | Promise<boolean>) { }\n\n\trouteCall(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\trouteEvent(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\treturn this.route(hub);\n\t}\n\n\tprivate async route(hub: IConnectionHub<TContext>): Promise<Client<TContext>> {\n\t\tfor (const connection of hub.connections) {\n\t\t\tif (await Promise.resolve(this.fn(connection.ctx))) {\n\t\t\t\treturn Promise.resolve(connection);\n\t\t\t}\n\t\t}\n\n\t\tawait Event.toPromise(hub.onDidAddConnection);\n\t\treturn await this.route(hub);\n\t}\n}\n\n/**\n * Use ProxyChannels to automatically wrapping and unwrapping\n * services to/from IPC channels, instead of manually wrapping\n * each service method and event.\n *\n * Restrictions:\n * - If marshalling is enabled, only `URI` and `RegExp` is converted\n *   automatically for you\n * - Events must follow the naming convention `onUpperCase`\n * - `CancellationToken` is currently not supported\n * - If a context is provided, you can use `AddFirstParameterToFunctions`\n *   utility to signal this in the receiving side type\n */\nexport namespace ProxyChannel {\n\n\texport interface IProxyOptions {\n\n\t\t/**\n\t\t * Disables automatic marshalling of `URI`.\n\t\t * If marshalling is disabled, `UriComponents`\n\t\t * must be used instead.\n\t\t */\n\t\tdisableMarshalling?: boolean;\n\t}\n\n\texport interface ICreateServiceChannelOptions extends IProxyOptions { }\n\n\texport function fromService(service: unknown, options?: ICreateServiceChannelOptions): IServerChannel {\n\t\tconst handler = service as { [key: string]: unknown };\n\t\tconst disableMarshalling = options && options.disableMarshalling;\n\n\t\t// Buffer any event that should be supported by\n\t\t// iterating over all property keys and finding them\n\t\tconst mapEventNameToEvent = new Map<string, Event<unknown>>();\n\t\tfor (const key in handler) {\n\t\t\tif (propertyIsEvent(key)) {\n\t\t\t\tmapEventNameToEvent.set(key, Event.buffer(handler[key] as Event<unknown>, true));\n\t\t\t}\n\t\t}\n\n\t\treturn new class implements IServerChannel {\n\n\t\t\tlisten<T>(_: unknown, event: string, arg: any): Event<T> {\n\t\t\t\tconst eventImpl = mapEventNameToEvent.get(event);\n\t\t\t\tif (eventImpl) {\n\t\t\t\t\treturn eventImpl as Event<T>;\n\t\t\t\t}\n\n\t\t\t\tif (propertyIsDynamicEvent(event)) {\n\t\t\t\t\tconst target = handler[event];\n\t\t\t\t\tif (typeof target === 'function') {\n\t\t\t\t\t\treturn target.call(handler, arg);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthrow new Error(`Event not found: ${event}`);\n\t\t\t}\n\n\t\t\tcall(_: unknown, command: string, args?: any[]): Promise<any> {\n\t\t\t\tconst target = handler[command];\n\t\t\t\tif (typeof target === 'function') {\n\n\t\t\t\t\t// Revive unless marshalling disabled\n\t\t\t\t\tif (!disableMarshalling && Array.isArray(args)) {\n\t\t\t\t\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\t\t\t\t\targs[i] = revive(args[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn target.apply(handler, args);\n\t\t\t\t}\n\n\t\t\t\tthrow new Error(`Method not found: ${command}`);\n\t\t\t}\n\t\t};\n\t}\n\n\texport interface ICreateProxyServiceOptions extends IProxyOptions {\n\n\t\t/**\n\t\t * If provided, will add the value of `context`\n\t\t * to each method call to the target.\n\t\t */\n\t\tcontext?: unknown;\n\n\t\t/**\n\t\t * If provided, will not proxy any of the properties\n\t\t * that are part of the Map but rather return that value.\n\t\t */\n\t\tproperties?: Map<string, unknown>;\n\t}\n\n\texport function toService<T>(channel: IChannel, options?: ICreateProxyServiceOptions): T {\n\t\tconst disableMarshalling = options && options.disableMarshalling;\n\n\t\treturn new Proxy({}, {\n\t\t\tget(_target: T, propKey: PropertyKey) {\n\t\t\t\tif (typeof propKey === 'string') {\n\n\t\t\t\t\t// Check for predefined values\n\t\t\t\t\tif (options?.properties?.has(propKey)) {\n\t\t\t\t\t\treturn options.properties.get(propKey);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Dynamic Event\n\t\t\t\t\tif (propertyIsDynamicEvent(propKey)) {\n\t\t\t\t\t\treturn function (arg: any) {\n\t\t\t\t\t\t\treturn channel.listen(propKey, arg);\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Event\n\t\t\t\t\tif (propertyIsEvent(propKey)) {\n\t\t\t\t\t\treturn channel.listen(propKey);\n\t\t\t\t\t}\n\n\t\t\t\t\t// Function\n\t\t\t\t\treturn async function (...args: any[]) {\n\n\t\t\t\t\t\t// Add context if any\n\t\t\t\t\t\tlet methodArgs: any[];\n\t\t\t\t\t\tif (options && !isUndefinedOrNull(options.context)) {\n\t\t\t\t\t\t\tmethodArgs = [options.context, ...args];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmethodArgs = args;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst result = await channel.call(propKey, methodArgs);\n\n\t\t\t\t\t\t// Revive unless marshalling disabled\n\t\t\t\t\t\tif (!disableMarshalling) {\n\t\t\t\t\t\t\treturn revive(result);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn result;\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\tthrow new Error(`Property not found: ${String(propKey)}`);\n\t\t\t}\n\t\t}) as T;\n\t}\n\n\tfunction propertyIsEvent(name: string): boolean {\n\t\t// Assume a property is an event if it has a form of \"onSomething\"\n\t\treturn name[0] === 'o' && name[1] === 'n' && strings.isUpperAsciiLetter(name.charCodeAt(2));\n\t}\n\n\tfunction propertyIsDynamicEvent(name: string): boolean {\n\t\t// Assume a property is a dynamic event (a method that returns an event) if it has a form of \"onDynamicSomething\"\n\t\treturn /^onDynamic/.test(name) && strings.isUpperAsciiLetter(name.charCodeAt(9));\n\t}\n}\n\nconst colorTables = [\n\t['#2977B1', '#FC802D', '#34A13A', '#D3282F', '#9366BA'],\n\t['#8B564C', '#E177C0', '#7F7F7F', '#BBBE3D', '#2EBECD']\n];\n\nfunction prettyWithoutArrays(data: any): any {\n\tif (Array.isArray(data)) {\n\t\treturn data;\n\t}\n\tif (data && typeof data === 'object' && typeof data.toString === 'function') {\n\t\tlet result = data.toString();\n\t\tif (result !== '[object Object]') {\n\t\t\treturn result;\n\t\t}\n\t}\n\treturn data;\n}\n\nfunction pretty(data: any): any {\n\tif (Array.isArray(data)) {\n\t\treturn data.map(prettyWithoutArrays);\n\t}\n\treturn prettyWithoutArrays(data);\n}\n\nexport function logWithColors(direction: string, totalLength: number, msgLength: number, req: number, initiator: RequestInitiator, str: string, data: any): void {\n\tdata = pretty(data);\n\n\tconst colorTable = colorTables[initiator];\n\tconst color = colorTable[req % colorTable.length];\n\tlet args = [`%c[${direction}]%c[${String(totalLength).padStart(7, ' ')}]%c[len: ${String(msgLength).padStart(5, ' ')}]%c${String(req).padStart(5, ' ')} - ${str}`, 'color: darkgreen', 'color: grey', 'color: grey', `color: ${color}`];\n\tif (/\\($/.test(str)) {\n\t\targs = args.concat(data);\n\t\targs.push(')');\n\t} else {\n\t\targs.push(data);\n\t}\n\tconsole.log.apply(console, args as [string, ...string[]]);\n}\n\nexport class IPCLogger implements IIPCLogger {\n\tprivate _totalIncoming = 0;\n\tprivate _totalOutgoing = 0;\n\n\tconstructor(\n\t\tprivate readonly _outgoingPrefix: string,\n\t\tprivate readonly _incomingPrefix: string,\n\t) { }\n\n\tpublic logOutgoing(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void {\n\t\tthis._totalOutgoing += msgLength;\n\t\tlogWithColors(this._outgoingPrefix, this._totalOutgoing, msgLength, requestId, initiator, str, data);\n\t}\n\n\tpublic logIncoming(msgLength: number, requestId: number, initiator: RequestInitiator, str: string, data?: any): void {\n\t\tthis._totalIncoming += msgLength;\n\t\tlogWithColors(this._incomingPrefix, this._totalIncoming, msgLength, requestId, initiator, str, data);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { Event } from 'vs/base/common/event';\nimport { IMessagePassingProtocol } from 'vs/base/parts/ipc/common/ipc';\n\nexport interface Sender {\n\tsend(channel: string, msg: unknown): void;\n}\n\n/**\n * The Electron `Protocol` leverages Electron style IPC communication (`ipcRenderer`, `ipcMain`)\n * for the implementation of the `IMessagePassingProtocol`. That style of API requires a channel\n * name for sending data.\n */\nexport class Protocol implements IMessagePassingProtocol {\n\n\tconstructor(private sender: Sender, readonly onMessage: Event<VSBuffer>) { }\n\n\tsend(message: VSBuffer): void {\n\t\ttry {\n\t\t\tthis.sender.send('vscode:message', message.buffer);\n\t\t} catch (e) {\n\t\t\t// systems are going down\n\t\t}\n\t}\n\n\tdisconnect(): void {\n\t\tthis.sender.send('vscode:disconnect', null);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { IMessagePassingProtocol, IPCClient } from 'vs/base/parts/ipc/common/ipc';\n\n/**\n * Declare minimal `MessageEvent` and `MessagePort` interfaces here\n * so that this utility can be used both from `browser` and\n * `electron-main` namespace where message ports are available.\n */\n\nexport interface MessageEvent {\n\n\t/**\n\t * For our use we only consider `Uint8Array` a valid data transfer\n\t * via message ports because our protocol implementation is buffer based.\n\t */\n\tdata: Uint8Array;\n}\n\nexport interface MessagePort {\n\n\taddEventListener(type: 'message', listener: (this: MessagePort, e: MessageEvent) => unknown): void;\n\tremoveEventListener(type: 'message', listener: (this: MessagePort, e: MessageEvent) => unknown): void;\n\n\tpostMessage(message: Uint8Array): void;\n\n\tstart(): void;\n\tclose(): void;\n}\n\n/**\n * The MessagePort `Protocol` leverages MessagePort style IPC communication\n * for the implementation of the `IMessagePassingProtocol`. That style of API\n * is a simple `onmessage` / `postMessage` pattern.\n */\nexport class Protocol implements IMessagePassingProtocol {\n\n\treadonly onMessage = Event.fromDOMEventEmitter<VSBuffer>(this.port, 'message', (e: MessageEvent) => VSBuffer.wrap(e.data));\n\n\tconstructor(private port: MessagePort) {\n\n\t\t// we must call start() to ensure messages are flowing\n\t\tport.start();\n\t}\n\n\tsend(message: VSBuffer): void {\n\t\tthis.port.postMessage(message.buffer);\n\t}\n\n\tdisconnect(): void {\n\t\tthis.port.close();\n\t}\n}\n\n/**\n * An implementation of a `IPCClient` on top of MessagePort style IPC communication.\n */\nexport class Client extends IPCClient implements IDisposable {\n\n\tprivate protocol: Protocol;\n\n\tconstructor(port: MessagePort, clientId: string) {\n\t\tconst protocol = new Protocol(port);\n\t\tsuper(protocol, clientId);\n\n\t\tthis.protocol = protocol;\n\t}\n\n\toverride dispose(): void {\n\t\tthis.protocol.disconnect();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, dispose, IDisposable } from 'vs/base/common/lifecycle';\nimport { IIPCLogger, IMessagePassingProtocol, IPCClient } from 'vs/base/parts/ipc/common/ipc';\n\nexport const enum SocketDiagnosticsEventType {\n\tCreated = 'created',\n\tRead = 'read',\n\tWrite = 'write',\n\tOpen = 'open',\n\tError = 'error',\n\tClose = 'close',\n\n\tBrowserWebSocketBlobReceived = 'browserWebSocketBlobReceived',\n\n\tNodeEndReceived = 'nodeEndReceived',\n\tNodeEndSent = 'nodeEndSent',\n\tNodeDrainBegin = 'nodeDrainBegin',\n\tNodeDrainEnd = 'nodeDrainEnd',\n\n\tzlibInflateError = 'zlibInflateError',\n\tzlibInflateData = 'zlibInflateData',\n\tzlibInflateInitialWrite = 'zlibInflateInitialWrite',\n\tzlibInflateInitialFlushFired = 'zlibInflateInitialFlushFired',\n\tzlibInflateWrite = 'zlibInflateWrite',\n\tzlibInflateFlushFired = 'zlibInflateFlushFired',\n\tzlibDeflateError = 'zlibDeflateError',\n\tzlibDeflateData = 'zlibDeflateData',\n\tzlibDeflateWrite = 'zlibDeflateWrite',\n\tzlibDeflateFlushFired = 'zlibDeflateFlushFired',\n\n\tWebSocketNodeSocketWrite = 'webSocketNodeSocketWrite',\n\tWebSocketNodeSocketPeekedHeader = 'webSocketNodeSocketPeekedHeader',\n\tWebSocketNodeSocketReadHeader = 'webSocketNodeSocketReadHeader',\n\tWebSocketNodeSocketReadData = 'webSocketNodeSocketReadData',\n\tWebSocketNodeSocketUnmaskedData = 'webSocketNodeSocketUnmaskedData',\n\tWebSocketNodeSocketDrainBegin = 'webSocketNodeSocketDrainBegin',\n\tWebSocketNodeSocketDrainEnd = 'webSocketNodeSocketDrainEnd',\n\n\tProtocolHeaderRead = 'protocolHeaderRead',\n\tProtocolMessageRead = 'protocolMessageRead',\n\tProtocolHeaderWrite = 'protocolHeaderWrite',\n\tProtocolMessageWrite = 'protocolMessageWrite',\n\tProtocolWrite = 'protocolWrite',\n}\n\nexport namespace SocketDiagnostics {\n\n\texport const enableDiagnostics = false;\n\n\texport interface IRecord {\n\t\ttimestamp: number;\n\t\tid: string;\n\t\tlabel: string;\n\t\ttype: SocketDiagnosticsEventType;\n\t\tbuff?: VSBuffer;\n\t\tdata?: any;\n\t}\n\n\texport const records: IRecord[] = [];\n\tconst socketIds = new WeakMap<any, string>();\n\tlet lastUsedSocketId = 0;\n\n\tfunction getSocketId(nativeObject: any, label: string): string {\n\t\tif (!socketIds.has(nativeObject)) {\n\t\t\tconst id = String(++lastUsedSocketId);\n\t\t\tsocketIds.set(nativeObject, id);\n\t\t}\n\t\treturn socketIds.get(nativeObject)!;\n\t}\n\n\texport function traceSocketEvent(nativeObject: any, socketDebugLabel: string, type: SocketDiagnosticsEventType, data?: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView | any): void {\n\t\tif (!enableDiagnostics) {\n\t\t\treturn;\n\t\t}\n\t\tconst id = getSocketId(nativeObject, socketDebugLabel);\n\n\t\tif (data instanceof VSBuffer || data instanceof Uint8Array || data instanceof ArrayBuffer || ArrayBuffer.isView(data)) {\n\t\t\tconst copiedData = VSBuffer.alloc(data.byteLength);\n\t\t\tcopiedData.set(data);\n\t\t\trecords.push({ timestamp: Date.now(), id, label: socketDebugLabel, type, buff: copiedData });\n\t\t} else {\n\t\t\t// data is a custom object\n\t\t\trecords.push({ timestamp: Date.now(), id, label: socketDebugLabel, type, data: data });\n\t\t}\n\t}\n}\n\nexport const enum SocketCloseEventType {\n\tNodeSocketCloseEvent = 0,\n\tWebSocketCloseEvent = 1\n}\n\nexport interface NodeSocketCloseEvent {\n\t/**\n\t * The type of the event\n\t */\n\treadonly type: SocketCloseEventType.NodeSocketCloseEvent;\n\t/**\n\t * `true` if the socket had a transmission error.\n\t */\n\treadonly hadError: boolean;\n\t/**\n\t * Underlying error.\n\t */\n\treadonly error: Error | undefined\n}\n\nexport interface WebSocketCloseEvent {\n\t/**\n\t * The type of the event\n\t */\n\treadonly type: SocketCloseEventType.WebSocketCloseEvent;\n\t/**\n\t * Returns the WebSocket connection close code provided by the server.\n\t */\n\treadonly code: number;\n\t/**\n\t * Returns the WebSocket connection close reason provided by the server.\n\t */\n\treadonly reason: string;\n\t/**\n\t * Returns true if the connection closed cleanly; false otherwise.\n\t */\n\treadonly wasClean: boolean;\n\t/**\n\t * Underlying event.\n\t */\n\treadonly event: any | undefined;\n}\n\nexport type SocketCloseEvent = NodeSocketCloseEvent | WebSocketCloseEvent | undefined;\n\nexport interface ISocket extends IDisposable {\n\tonData(listener: (e: VSBuffer) => void): IDisposable;\n\tonClose(listener: (e: SocketCloseEvent) => void): IDisposable;\n\tonEnd(listener: () => void): IDisposable;\n\twrite(buffer: VSBuffer): void;\n\tend(): void;\n\tdrain(): Promise<void>;\n\n\ttraceSocketEvent(type: SocketDiagnosticsEventType, data?: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView | any): void;\n}\n\nlet emptyBuffer: VSBuffer | null = null;\nfunction getEmptyBuffer(): VSBuffer {\n\tif (!emptyBuffer) {\n\t\temptyBuffer = VSBuffer.alloc(0);\n\t}\n\treturn emptyBuffer;\n}\n\nexport class ChunkStream {\n\n\tprivate _chunks: VSBuffer[];\n\tprivate _totalLength: number;\n\n\tpublic get byteLength() {\n\t\treturn this._totalLength;\n\t}\n\n\tconstructor() {\n\t\tthis._chunks = [];\n\t\tthis._totalLength = 0;\n\t}\n\n\tpublic acceptChunk(buff: VSBuffer) {\n\t\tthis._chunks.push(buff);\n\t\tthis._totalLength += buff.byteLength;\n\t}\n\n\tpublic read(byteCount: number): VSBuffer {\n\t\treturn this._read(byteCount, true);\n\t}\n\n\tpublic peek(byteCount: number): VSBuffer {\n\t\treturn this._read(byteCount, false);\n\t}\n\n\tprivate _read(byteCount: number, advance: boolean): VSBuffer {\n\n\t\tif (byteCount === 0) {\n\t\t\treturn getEmptyBuffer();\n\t\t}\n\n\t\tif (byteCount > this._totalLength) {\n\t\t\tthrow new Error(`Cannot read so many bytes!`);\n\t\t}\n\n\t\tif (this._chunks[0].byteLength === byteCount) {\n\t\t\t// super fast path, precisely first chunk must be returned\n\t\t\tconst result = this._chunks[0];\n\t\t\tif (advance) {\n\t\t\t\tthis._chunks.shift();\n\t\t\t\tthis._totalLength -= byteCount;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tif (this._chunks[0].byteLength > byteCount) {\n\t\t\t// fast path, the reading is entirely within the first chunk\n\t\t\tconst result = this._chunks[0].slice(0, byteCount);\n\t\t\tif (advance) {\n\t\t\t\tthis._chunks[0] = this._chunks[0].slice(byteCount);\n\t\t\t\tthis._totalLength -= byteCount;\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\n\t\tlet result = VSBuffer.alloc(byteCount);\n\t\tlet resultOffset = 0;\n\t\tlet chunkIndex = 0;\n\t\twhile (byteCount > 0) {\n\t\t\tconst chunk = this._chunks[chunkIndex];\n\t\t\tif (chunk.byteLength > byteCount) {\n\t\t\t\t// this chunk will survive\n\t\t\t\tconst chunkPart = chunk.slice(0, byteCount);\n\t\t\t\tresult.set(chunkPart, resultOffset);\n\t\t\t\tresultOffset += byteCount;\n\n\t\t\t\tif (advance) {\n\t\t\t\t\tthis._chunks[chunkIndex] = chunk.slice(byteCount);\n\t\t\t\t\tthis._totalLength -= byteCount;\n\t\t\t\t}\n\n\t\t\t\tbyteCount -= byteCount;\n\t\t\t} else {\n\t\t\t\t// this chunk will be entirely read\n\t\t\t\tresult.set(chunk, resultOffset);\n\t\t\t\tresultOffset += chunk.byteLength;\n\n\t\t\t\tif (advance) {\n\t\t\t\t\tthis._chunks.shift();\n\t\t\t\t\tthis._totalLength -= chunk.byteLength;\n\t\t\t\t} else {\n\t\t\t\t\tchunkIndex++;\n\t\t\t\t}\n\n\t\t\t\tbyteCount -= chunk.byteLength;\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n\nconst enum ProtocolMessageType {\n\tNone = 0,\n\tRegular = 1,\n\tControl = 2,\n\tAck = 3,\n\tDisconnect = 5,\n\tReplayRequest = 6,\n\tPause = 7,\n\tResume = 8\n}\n\nfunction protocolMessageTypeToString(messageType: ProtocolMessageType) {\n\tswitch (messageType) {\n\t\tcase ProtocolMessageType.None: return 'None';\n\t\tcase ProtocolMessageType.Regular: return 'Regular';\n\t\tcase ProtocolMessageType.Control: return 'Control';\n\t\tcase ProtocolMessageType.Ack: return 'Ack';\n\t\tcase ProtocolMessageType.Disconnect: return 'Disconnect';\n\t\tcase ProtocolMessageType.ReplayRequest: return 'ReplayRequest';\n\t\tcase ProtocolMessageType.Pause: return 'PauseWriting';\n\t\tcase ProtocolMessageType.Resume: return 'ResumeWriting';\n\t}\n}\n\nexport const enum ProtocolConstants {\n\tHeaderLength = 13,\n\t/**\n\t * Send an Acknowledge message at most 2 seconds later...\n\t */\n\tAcknowledgeTime = 2000, // 2 seconds\n\t/**\n\t * If there is a sent message that has been unacknowledged for 20 seconds,\n\t * and we didn't see any incoming server data in the past 20 seconds,\n\t * then consider the connection has timed out.\n\t */\n\tTimeoutTime = 20000, // 20 seconds\n\t/**\n\t * If there is no reconnection within this time-frame, consider the connection permanently closed...\n\t */\n\tReconnectionGraceTime = 3 * 60 * 60 * 1000, // 3hrs\n\t/**\n\t * Maximal grace time between the first and the last reconnection...\n\t */\n\tReconnectionShortGraceTime = 5 * 60 * 1000, // 5min\n}\n\nclass ProtocolMessage {\n\n\tpublic writtenTime: number;\n\n\tconstructor(\n\t\tpublic readonly type: ProtocolMessageType,\n\t\tpublic readonly id: number,\n\t\tpublic readonly ack: number,\n\t\tpublic readonly data: VSBuffer\n\t) {\n\t\tthis.writtenTime = 0;\n\t}\n\n\tpublic get size(): number {\n\t\treturn this.data.byteLength;\n\t}\n}\n\nclass ProtocolReader extends Disposable {\n\n\tprivate readonly _socket: ISocket;\n\tprivate _isDisposed: boolean;\n\tprivate readonly _incomingData: ChunkStream;\n\tpublic lastReadTime: number;\n\n\tprivate readonly _onMessage = this._register(new Emitter<ProtocolMessage>());\n\tpublic readonly onMessage: Event<ProtocolMessage> = this._onMessage.event;\n\n\tprivate readonly _state = {\n\t\treadHead: true,\n\t\treadLen: ProtocolConstants.HeaderLength,\n\t\tmessageType: ProtocolMessageType.None,\n\t\tid: 0,\n\t\tack: 0\n\t};\n\n\tconstructor(socket: ISocket) {\n\t\tsuper();\n\t\tthis._socket = socket;\n\t\tthis._isDisposed = false;\n\t\tthis._incomingData = new ChunkStream();\n\t\tthis._register(this._socket.onData(data => this.acceptChunk(data)));\n\t\tthis.lastReadTime = Date.now();\n\t}\n\n\tpublic acceptChunk(data: VSBuffer | null): void {\n\t\tif (!data || data.byteLength === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.lastReadTime = Date.now();\n\n\t\tthis._incomingData.acceptChunk(data);\n\n\t\twhile (this._incomingData.byteLength >= this._state.readLen) {\n\n\t\t\tconst buff = this._incomingData.read(this._state.readLen);\n\n\t\t\tif (this._state.readHead) {\n\t\t\t\t// buff is the header\n\n\t\t\t\t// save new state => next time will read the body\n\t\t\t\tthis._state.readHead = false;\n\t\t\t\tthis._state.readLen = buff.readUInt32BE(9);\n\t\t\t\tthis._state.messageType = buff.readUInt8(0);\n\t\t\t\tthis._state.id = buff.readUInt32BE(1);\n\t\t\t\tthis._state.ack = buff.readUInt32BE(5);\n\n\t\t\t\tthis._socket.traceSocketEvent(SocketDiagnosticsEventType.ProtocolHeaderRead, { messageType: protocolMessageTypeToString(this._state.messageType), id: this._state.id, ack: this._state.ack, messageSize: this._state.readLen });\n\n\t\t\t} else {\n\t\t\t\t// buff is the body\n\t\t\t\tconst messageType = this._state.messageType;\n\t\t\t\tconst id = this._state.id;\n\t\t\t\tconst ack = this._state.ack;\n\n\t\t\t\t// save new state => next time will read the header\n\t\t\t\tthis._state.readHead = true;\n\t\t\t\tthis._state.readLen = ProtocolConstants.HeaderLength;\n\t\t\t\tthis._state.messageType = ProtocolMessageType.None;\n\t\t\t\tthis._state.id = 0;\n\t\t\t\tthis._state.ack = 0;\n\n\t\t\t\tthis._socket.traceSocketEvent(SocketDiagnosticsEventType.ProtocolMessageRead, buff);\n\n\t\t\t\tthis._onMessage.fire(new ProtocolMessage(messageType, id, ack, buff));\n\n\t\t\t\tif (this._isDisposed) {\n\t\t\t\t\t// check if an event listener lead to our disposal\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic readEntireBuffer(): VSBuffer {\n\t\treturn this._incomingData.read(this._incomingData.byteLength);\n\t}\n\n\tpublic override dispose(): void {\n\t\tthis._isDisposed = true;\n\t\tsuper.dispose();\n\t}\n}\n\nclass ProtocolWriter {\n\n\tprivate _isDisposed: boolean;\n\tprivate _isPaused: boolean;\n\tprivate readonly _socket: ISocket;\n\tprivate _data: VSBuffer[];\n\tprivate _totalLength: number;\n\tpublic lastWriteTime: number;\n\n\tconstructor(socket: ISocket) {\n\t\tthis._isDisposed = false;\n\t\tthis._isPaused = false;\n\t\tthis._socket = socket;\n\t\tthis._data = [];\n\t\tthis._totalLength = 0;\n\t\tthis.lastWriteTime = 0;\n\t}\n\n\tpublic dispose(): void {\n\t\ttry {\n\t\t\tthis.flush();\n\t\t} catch (err) {\n\t\t\t// ignore error, since the socket could be already closed\n\t\t}\n\t\tthis._isDisposed = true;\n\t}\n\n\tpublic drain(): Promise<void> {\n\t\tthis.flush();\n\t\treturn this._socket.drain();\n\t}\n\n\tpublic flush(): void {\n\t\t// flush\n\t\tthis._writeNow();\n\t}\n\n\tpublic pause(): void {\n\t\tthis._isPaused = true;\n\t}\n\n\tpublic resume(): void {\n\t\tthis._isPaused = false;\n\t\tthis._scheduleWriting();\n\t}\n\n\tpublic write(msg: ProtocolMessage) {\n\t\tif (this._isDisposed) {\n\t\t\t// ignore: there could be left-over promises which complete and then\n\t\t\t// decide to write a response, etc...\n\t\t\treturn;\n\t\t}\n\t\tmsg.writtenTime = Date.now();\n\t\tthis.lastWriteTime = Date.now();\n\t\tconst header = VSBuffer.alloc(ProtocolConstants.HeaderLength);\n\t\theader.writeUInt8(msg.type, 0);\n\t\theader.writeUInt32BE(msg.id, 1);\n\t\theader.writeUInt32BE(msg.ack, 5);\n\t\theader.writeUInt32BE(msg.data.byteLength, 9);\n\n\t\tthis._socket.traceSocketEvent(SocketDiagnosticsEventType.ProtocolHeaderWrite, { messageType: protocolMessageTypeToString(msg.type), id: msg.id, ack: msg.ack, messageSize: msg.data.byteLength });\n\t\tthis._socket.traceSocketEvent(SocketDiagnosticsEventType.ProtocolMessageWrite, msg.data);\n\n\t\tthis._writeSoon(header, msg.data);\n\t}\n\n\tprivate _bufferAdd(head: VSBuffer, body: VSBuffer): boolean {\n\t\tconst wasEmpty = this._totalLength === 0;\n\t\tthis._data.push(head, body);\n\t\tthis._totalLength += head.byteLength + body.byteLength;\n\t\treturn wasEmpty;\n\t}\n\n\tprivate _bufferTake(): VSBuffer {\n\t\tconst ret = VSBuffer.concat(this._data, this._totalLength);\n\t\tthis._data.length = 0;\n\t\tthis._totalLength = 0;\n\t\treturn ret;\n\t}\n\n\tprivate _writeSoon(header: VSBuffer, data: VSBuffer): void {\n\t\tif (this._bufferAdd(header, data)) {\n\t\t\tthis._scheduleWriting();\n\t\t}\n\t}\n\n\tprivate _writeNowTimeout: any = null;\n\tprivate _scheduleWriting(): void {\n\t\tif (this._writeNowTimeout) {\n\t\t\treturn;\n\t\t}\n\t\tthis._writeNowTimeout = setTimeout(() => {\n\t\t\tthis._writeNowTimeout = null;\n\t\t\tthis._writeNow();\n\t\t});\n\t}\n\n\tprivate _writeNow(): void {\n\t\tif (this._totalLength === 0) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._isPaused) {\n\t\t\treturn;\n\t\t}\n\t\tconst data = this._bufferTake();\n\t\tthis._socket.traceSocketEvent(SocketDiagnosticsEventType.ProtocolWrite, { byteLength: data.byteLength });\n\t\tthis._socket.write(data);\n\t}\n}\n\n/**\n * A message has the following format:\n * ```\n *     /-------------------------------|------\\\n *     |             HEADER            |      |\n *     |-------------------------------| DATA |\n *     | TYPE | ID | ACK | DATA_LENGTH |      |\n *     \\-------------------------------|------/\n * ```\n * The header is 9 bytes and consists of:\n *  - TYPE is 1 byte (ProtocolMessageType) - the message type\n *  - ID is 4 bytes (u32be) - the message id (can be 0 to indicate to be ignored)\n *  - ACK is 4 bytes (u32be) - the acknowledged message id (can be 0 to indicate to be ignored)\n *  - DATA_LENGTH is 4 bytes (u32be) - the length in bytes of DATA\n *\n * Only Regular messages are counted, other messages are not counted, nor acknowledged.\n */\nexport class Protocol extends Disposable implements IMessagePassingProtocol {\n\n\tprivate _socket: ISocket;\n\tprivate _socketWriter: ProtocolWriter;\n\tprivate _socketReader: ProtocolReader;\n\n\tprivate readonly _onMessage = new Emitter<VSBuffer>();\n\treadonly onMessage: Event<VSBuffer> = this._onMessage.event;\n\n\tprivate readonly _onDidDispose = new Emitter<void>();\n\treadonly onDidDispose: Event<void> = this._onDidDispose.event;\n\n\tconstructor(socket: ISocket) {\n\t\tsuper();\n\t\tthis._socket = socket;\n\t\tthis._socketWriter = this._register(new ProtocolWriter(this._socket));\n\t\tthis._socketReader = this._register(new ProtocolReader(this._socket));\n\n\t\tthis._register(this._socketReader.onMessage((msg) => {\n\t\t\tif (msg.type === ProtocolMessageType.Regular) {\n\t\t\t\tthis._onMessage.fire(msg.data);\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this._socket.onClose(() => this._onDidDispose.fire()));\n\t}\n\n\tdrain(): Promise<void> {\n\t\treturn this._socketWriter.drain();\n\t}\n\n\tgetSocket(): ISocket {\n\t\treturn this._socket;\n\t}\n\n\tsendDisconnect(): void {\n\t\t// Nothing to do...\n\t}\n\n\tsend(buffer: VSBuffer): void {\n\t\tthis._socketWriter.write(new ProtocolMessage(ProtocolMessageType.Regular, 0, 0, buffer));\n\t}\n}\n\nexport class Client<TContext = string> extends IPCClient<TContext> {\n\n\tstatic fromSocket<TContext = string>(socket: ISocket, id: TContext): Client<TContext> {\n\t\treturn new Client(new Protocol(socket), id);\n\t}\n\n\tget onDidDispose(): Event<void> { return this.protocol.onDidDispose; }\n\n\tconstructor(private protocol: Protocol | PersistentProtocol, id: TContext, ipcLogger: IIPCLogger | null = null) {\n\t\tsuper(protocol, id, ipcLogger);\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tconst socket = this.protocol.getSocket();\n\t\tthis.protocol.sendDisconnect();\n\t\tthis.protocol.dispose();\n\t\tsocket.end();\n\t}\n}\n\n/**\n * Will ensure no messages are lost if there are no event listeners.\n */\nexport class BufferedEmitter<T> {\n\tprivate _emitter: Emitter<T>;\n\tpublic readonly event: Event<T>;\n\n\tprivate _hasListeners = false;\n\tprivate _isDeliveringMessages = false;\n\tprivate _bufferedMessages: T[] = [];\n\n\tconstructor() {\n\t\tthis._emitter = new Emitter<T>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tthis._hasListeners = true;\n\t\t\t\t// it is important to deliver these messages after this call, but before\n\t\t\t\t// other messages have a chance to be received (to guarantee in order delivery)\n\t\t\t\t// that's why we're using here queueMicrotask and not other types of timeouts\n\t\t\t\tqueueMicrotask(() => this._deliverMessages());\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis._hasListeners = false;\n\t\t\t}\n\t\t});\n\n\t\tthis.event = this._emitter.event;\n\t}\n\n\tprivate _deliverMessages(): void {\n\t\tif (this._isDeliveringMessages) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isDeliveringMessages = true;\n\t\twhile (this._hasListeners && this._bufferedMessages.length > 0) {\n\t\t\tthis._emitter.fire(this._bufferedMessages.shift()!);\n\t\t}\n\t\tthis._isDeliveringMessages = false;\n\t}\n\n\tpublic fire(event: T): void {\n\t\tif (this._hasListeners) {\n\t\t\tif (this._bufferedMessages.length > 0) {\n\t\t\t\tthis._bufferedMessages.push(event);\n\t\t\t} else {\n\t\t\t\tthis._emitter.fire(event);\n\t\t\t}\n\t\t} else {\n\t\t\tthis._bufferedMessages.push(event);\n\t\t}\n\t}\n\n\tpublic flushBuffer(): void {\n\t\tthis._bufferedMessages = [];\n\t}\n}\n\nclass QueueElement<T> {\n\tpublic readonly data: T;\n\tpublic next: QueueElement<T> | null;\n\n\tconstructor(data: T) {\n\t\tthis.data = data;\n\t\tthis.next = null;\n\t}\n}\n\nclass Queue<T> {\n\n\tprivate _first: QueueElement<T> | null;\n\tprivate _last: QueueElement<T> | null;\n\n\tconstructor() {\n\t\tthis._first = null;\n\t\tthis._last = null;\n\t}\n\n\tpublic peek(): T | null {\n\t\tif (!this._first) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this._first.data;\n\t}\n\n\tpublic toArray(): T[] {\n\t\tlet result: T[] = [], resultLen = 0;\n\t\tlet it = this._first;\n\t\twhile (it) {\n\t\t\tresult[resultLen++] = it.data;\n\t\t\tit = it.next;\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic pop(): void {\n\t\tif (!this._first) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._first === this._last) {\n\t\t\tthis._first = null;\n\t\t\tthis._last = null;\n\t\t\treturn;\n\t\t}\n\t\tthis._first = this._first.next;\n\t}\n\n\tpublic push(item: T): void {\n\t\tconst element = new QueueElement(item);\n\t\tif (!this._first) {\n\t\t\tthis._first = element;\n\t\t\tthis._last = element;\n\t\t\treturn;\n\t\t}\n\t\tthis._last!.next = element;\n\t\tthis._last = element;\n\t}\n}\n\nclass LoadEstimator {\n\n\tprivate static _HISTORY_LENGTH = 10;\n\tprivate static _INSTANCE: LoadEstimator | null = null;\n\tpublic static getInstance(): LoadEstimator {\n\t\tif (!LoadEstimator._INSTANCE) {\n\t\t\tLoadEstimator._INSTANCE = new LoadEstimator();\n\t\t}\n\t\treturn LoadEstimator._INSTANCE;\n\t}\n\n\tprivate lastRuns: number[];\n\n\tconstructor() {\n\t\tthis.lastRuns = [];\n\t\tconst now = Date.now();\n\t\tfor (let i = 0; i < LoadEstimator._HISTORY_LENGTH; i++) {\n\t\t\tthis.lastRuns[i] = now - 1000 * i;\n\t\t}\n\t\tsetInterval(() => {\n\t\t\tfor (let i = LoadEstimator._HISTORY_LENGTH; i >= 1; i--) {\n\t\t\t\tthis.lastRuns[i] = this.lastRuns[i - 1];\n\t\t\t}\n\t\t\tthis.lastRuns[0] = Date.now();\n\t\t}, 1000);\n\t}\n\n\t/**\n\t * returns an estimative number, from 0 (low load) to 1 (high load)\n\t */\n\tprivate load(): number {\n\t\tconst now = Date.now();\n\t\tconst historyLimit = (1 + LoadEstimator._HISTORY_LENGTH) * 1000;\n\t\tlet score = 0;\n\t\tfor (let i = 0; i < LoadEstimator._HISTORY_LENGTH; i++) {\n\t\t\tif (now - this.lastRuns[i] <= historyLimit) {\n\t\t\t\tscore++;\n\t\t\t}\n\t\t}\n\t\treturn 1 - score / LoadEstimator._HISTORY_LENGTH;\n\t}\n\n\tpublic hasHighLoad(): boolean {\n\t\treturn this.load() >= 0.5;\n\t}\n}\n\nexport interface ILoadEstimator {\n\thasHighLoad(): boolean;\n}\n\n/**\n * Same as Protocol, but will actually track messages and acks.\n * Moreover, it will ensure no messages are lost if there are no event listeners.\n */\nexport class PersistentProtocol implements IMessagePassingProtocol {\n\n\tprivate _isReconnecting: boolean;\n\n\tprivate _outgoingUnackMsg: Queue<ProtocolMessage>;\n\tprivate _outgoingMsgId: number;\n\tprivate _outgoingAckId: number;\n\tprivate _outgoingAckTimeout: any | null;\n\n\tprivate _incomingMsgId: number;\n\tprivate _incomingAckId: number;\n\tprivate _incomingMsgLastTime: number;\n\tprivate _incomingAckTimeout: any | null;\n\n\tprivate _lastReplayRequestTime: number;\n\tprivate _lastSocketTimeoutTime: number;\n\n\tprivate _socket: ISocket;\n\tprivate _socketWriter: ProtocolWriter;\n\tprivate _socketReader: ProtocolReader;\n\tprivate _socketDisposables: IDisposable[];\n\n\tprivate readonly _loadEstimator: ILoadEstimator;\n\n\tprivate readonly _onControlMessage = new BufferedEmitter<VSBuffer>();\n\treadonly onControlMessage: Event<VSBuffer> = this._onControlMessage.event;\n\n\tprivate readonly _onMessage = new BufferedEmitter<VSBuffer>();\n\treadonly onMessage: Event<VSBuffer> = this._onMessage.event;\n\n\tprivate readonly _onDidDispose = new BufferedEmitter<void>();\n\treadonly onDidDispose: Event<void> = this._onDidDispose.event;\n\n\tprivate readonly _onSocketClose = new BufferedEmitter<SocketCloseEvent>();\n\treadonly onSocketClose: Event<SocketCloseEvent> = this._onSocketClose.event;\n\n\tprivate readonly _onSocketTimeout = new BufferedEmitter<void>();\n\treadonly onSocketTimeout: Event<void> = this._onSocketTimeout.event;\n\n\tpublic get unacknowledgedCount(): number {\n\t\treturn this._outgoingMsgId - this._outgoingAckId;\n\t}\n\n\tconstructor(socket: ISocket, initialChunk: VSBuffer | null = null, loadEstimator: ILoadEstimator = LoadEstimator.getInstance()) {\n\t\tthis._loadEstimator = loadEstimator;\n\t\tthis._isReconnecting = false;\n\t\tthis._outgoingUnackMsg = new Queue<ProtocolMessage>();\n\t\tthis._outgoingMsgId = 0;\n\t\tthis._outgoingAckId = 0;\n\t\tthis._outgoingAckTimeout = null;\n\n\t\tthis._incomingMsgId = 0;\n\t\tthis._incomingAckId = 0;\n\t\tthis._incomingMsgLastTime = 0;\n\t\tthis._incomingAckTimeout = null;\n\n\t\tthis._lastReplayRequestTime = 0;\n\t\tthis._lastSocketTimeoutTime = Date.now();\n\n\t\tthis._socketDisposables = [];\n\t\tthis._socket = socket;\n\t\tthis._socketWriter = new ProtocolWriter(this._socket);\n\t\tthis._socketDisposables.push(this._socketWriter);\n\t\tthis._socketReader = new ProtocolReader(this._socket);\n\t\tthis._socketDisposables.push(this._socketReader);\n\t\tthis._socketDisposables.push(this._socketReader.onMessage(msg => this._receiveMessage(msg)));\n\t\tthis._socketDisposables.push(this._socket.onClose((e) => this._onSocketClose.fire(e)));\n\t\tif (initialChunk) {\n\t\t\tthis._socketReader.acceptChunk(initialChunk);\n\t\t}\n\t}\n\n\tdispose(): void {\n\t\tif (this._outgoingAckTimeout) {\n\t\t\tclearTimeout(this._outgoingAckTimeout);\n\t\t\tthis._outgoingAckTimeout = null;\n\t\t}\n\t\tif (this._incomingAckTimeout) {\n\t\t\tclearTimeout(this._incomingAckTimeout);\n\t\t\tthis._incomingAckTimeout = null;\n\t\t}\n\t\tthis._socketDisposables = dispose(this._socketDisposables);\n\t}\n\n\tdrain(): Promise<void> {\n\t\treturn this._socketWriter.drain();\n\t}\n\n\tsendDisconnect(): void {\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Disconnect, 0, 0, getEmptyBuffer());\n\t\tthis._socketWriter.write(msg);\n\t\tthis._socketWriter.flush();\n\t}\n\n\tsendPause(): void {\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Pause, 0, 0, getEmptyBuffer());\n\t\tthis._socketWriter.write(msg);\n\t}\n\n\tsendResume(): void {\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Resume, 0, 0, getEmptyBuffer());\n\t\tthis._socketWriter.write(msg);\n\t}\n\n\tpauseSocketWriting() {\n\t\tthis._socketWriter.pause();\n\t}\n\n\tpublic getSocket(): ISocket {\n\t\treturn this._socket;\n\t}\n\n\tpublic getMillisSinceLastIncomingData(): number {\n\t\treturn Date.now() - this._socketReader.lastReadTime;\n\t}\n\n\tpublic beginAcceptReconnection(socket: ISocket, initialDataChunk: VSBuffer | null): void {\n\t\tthis._isReconnecting = true;\n\n\t\tthis._socketDisposables = dispose(this._socketDisposables);\n\t\tthis._onControlMessage.flushBuffer();\n\t\tthis._onSocketClose.flushBuffer();\n\t\tthis._onSocketTimeout.flushBuffer();\n\t\tthis._socket.dispose();\n\n\t\tthis._lastReplayRequestTime = 0;\n\t\tthis._lastSocketTimeoutTime = Date.now();\n\n\t\tthis._socket = socket;\n\t\tthis._socketWriter = new ProtocolWriter(this._socket);\n\t\tthis._socketDisposables.push(this._socketWriter);\n\t\tthis._socketReader = new ProtocolReader(this._socket);\n\t\tthis._socketDisposables.push(this._socketReader);\n\t\tthis._socketDisposables.push(this._socketReader.onMessage(msg => this._receiveMessage(msg)));\n\t\tthis._socketDisposables.push(this._socket.onClose((e) => this._onSocketClose.fire(e)));\n\t\tthis._socketReader.acceptChunk(initialDataChunk);\n\t}\n\n\tpublic endAcceptReconnection(): void {\n\t\tthis._isReconnecting = false;\n\n\t\t// After a reconnection, let the other party know (again) which messages have been received.\n\t\t// (perhaps the other party didn't receive a previous ACK)\n\t\tthis._incomingAckId = this._incomingMsgId;\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Ack, 0, this._incomingAckId, getEmptyBuffer());\n\t\tthis._socketWriter.write(msg);\n\n\t\t// Send again all unacknowledged messages\n\t\tconst toSend = this._outgoingUnackMsg.toArray();\n\t\tfor (let i = 0, len = toSend.length; i < len; i++) {\n\t\t\tthis._socketWriter.write(toSend[i]);\n\t\t}\n\t\tthis._recvAckCheck();\n\t}\n\n\tpublic acceptDisconnect(): void {\n\t\tthis._onDidDispose.fire();\n\t}\n\n\tprivate _receiveMessage(msg: ProtocolMessage): void {\n\t\tif (msg.ack > this._outgoingAckId) {\n\t\t\tthis._outgoingAckId = msg.ack;\n\t\t\tdo {\n\t\t\t\tconst first = this._outgoingUnackMsg.peek();\n\t\t\t\tif (first && first.id <= msg.ack) {\n\t\t\t\t\t// this message has been confirmed, remove it\n\t\t\t\t\tthis._outgoingUnackMsg.pop();\n\t\t\t\t} else {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} while (true);\n\t\t}\n\n\t\tswitch (msg.type) {\n\t\t\tcase ProtocolMessageType.None: {\n\t\t\t\t// N/A\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ProtocolMessageType.Regular: {\n\t\t\t\tif (msg.id > this._incomingMsgId) {\n\t\t\t\t\tif (msg.id !== this._incomingMsgId + 1) {\n\t\t\t\t\t\t// in case we missed some messages we ask the other party to resend them\n\t\t\t\t\t\tconst now = Date.now();\n\t\t\t\t\t\tif (now - this._lastReplayRequestTime > 10000) {\n\t\t\t\t\t\t\t// send a replay request at most once every 10s\n\t\t\t\t\t\t\tthis._lastReplayRequestTime = now;\n\t\t\t\t\t\t\tthis._socketWriter.write(new ProtocolMessage(ProtocolMessageType.ReplayRequest, 0, 0, getEmptyBuffer()));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._incomingMsgId = msg.id;\n\t\t\t\t\t\tthis._incomingMsgLastTime = Date.now();\n\t\t\t\t\t\tthis._sendAckCheck();\n\t\t\t\t\t\tthis._onMessage.fire(msg.data);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ProtocolMessageType.Control: {\n\t\t\t\tthis._onControlMessage.fire(msg.data);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ProtocolMessageType.Ack: {\n\t\t\t\t// nothing to do\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ProtocolMessageType.Disconnect: {\n\t\t\t\tthis._onDidDispose.fire();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ProtocolMessageType.ReplayRequest: {\n\t\t\t\t// Send again all unacknowledged messages\n\t\t\t\tconst toSend = this._outgoingUnackMsg.toArray();\n\t\t\t\tfor (let i = 0, len = toSend.length; i < len; i++) {\n\t\t\t\t\tthis._socketWriter.write(toSend[i]);\n\t\t\t\t}\n\t\t\t\tthis._recvAckCheck();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ProtocolMessageType.Pause: {\n\t\t\t\tthis._socketWriter.pause();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase ProtocolMessageType.Resume: {\n\t\t\t\tthis._socketWriter.resume();\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\treadEntireBuffer(): VSBuffer {\n\t\treturn this._socketReader.readEntireBuffer();\n\t}\n\n\tflush(): void {\n\t\tthis._socketWriter.flush();\n\t}\n\n\tsend(buffer: VSBuffer): void {\n\t\tconst myId = ++this._outgoingMsgId;\n\t\tthis._incomingAckId = this._incomingMsgId;\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Regular, myId, this._incomingAckId, buffer);\n\t\tthis._outgoingUnackMsg.push(msg);\n\t\tif (!this._isReconnecting) {\n\t\t\tthis._socketWriter.write(msg);\n\t\t\tthis._recvAckCheck();\n\t\t}\n\t}\n\n\t/**\n\t * Send a message which will not be part of the regular acknowledge flow.\n\t * Use this for early control messages which are repeated in case of reconnection.\n\t */\n\tsendControl(buffer: VSBuffer): void {\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Control, 0, 0, buffer);\n\t\tthis._socketWriter.write(msg);\n\t}\n\n\tprivate _sendAckCheck(): void {\n\t\tif (this._incomingMsgId <= this._incomingAckId) {\n\t\t\t// nothink to acknowledge\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._incomingAckTimeout) {\n\t\t\t// there will be a check in the near future\n\t\t\treturn;\n\t\t}\n\n\t\tconst timeSinceLastIncomingMsg = Date.now() - this._incomingMsgLastTime;\n\t\tif (timeSinceLastIncomingMsg >= ProtocolConstants.AcknowledgeTime) {\n\t\t\t// sufficient time has passed since this message has been received,\n\t\t\t// and no message from our side needed to be sent in the meantime,\n\t\t\t// so we will send a message containing only an ack.\n\t\t\tthis._sendAck();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._incomingAckTimeout = setTimeout(() => {\n\t\t\tthis._incomingAckTimeout = null;\n\t\t\tthis._sendAckCheck();\n\t\t}, ProtocolConstants.AcknowledgeTime - timeSinceLastIncomingMsg + 5);\n\t}\n\n\tprivate _recvAckCheck(): void {\n\t\tif (this._outgoingMsgId <= this._outgoingAckId) {\n\t\t\t// everything has been acknowledged\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._outgoingAckTimeout) {\n\t\t\t// there will be a check in the near future\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._isReconnecting) {\n\t\t\t// do not cause a timeout during reconnection,\n\t\t\t// because messages will not be actually written until `endAcceptReconnection`\n\t\t\treturn;\n\t\t}\n\n\t\tconst oldestUnacknowledgedMsg = this._outgoingUnackMsg.peek()!;\n\t\tconst timeSinceOldestUnacknowledgedMsg = Date.now() - oldestUnacknowledgedMsg.writtenTime;\n\t\tconst timeSinceLastReceivedSomeData = Date.now() - this._socketReader.lastReadTime;\n\t\tconst timeSinceLastTimeout = Date.now() - this._lastSocketTimeoutTime;\n\n\t\tif (\n\t\t\ttimeSinceOldestUnacknowledgedMsg >= ProtocolConstants.TimeoutTime\n\t\t\t&& timeSinceLastReceivedSomeData >= ProtocolConstants.TimeoutTime\n\t\t\t&& timeSinceLastTimeout >= ProtocolConstants.TimeoutTime\n\t\t) {\n\t\t\t// It's been a long time since our sent message was acknowledged\n\t\t\t// and a long time since we received some data\n\n\t\t\t// But this might be caused by the event loop being busy and failing to read messages\n\t\t\tif (!this._loadEstimator.hasHighLoad()) {\n\t\t\t\t// Trash the socket\n\t\t\t\tthis._lastSocketTimeoutTime = Date.now();\n\t\t\t\tthis._onSocketTimeout.fire(undefined);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tconst minimumTimeUntilTimeout = Math.max(\n\t\t\tProtocolConstants.TimeoutTime - timeSinceOldestUnacknowledgedMsg,\n\t\t\tProtocolConstants.TimeoutTime - timeSinceLastReceivedSomeData,\n\t\t\tProtocolConstants.TimeoutTime - timeSinceLastTimeout,\n\t\t\t500\n\t\t);\n\n\t\tthis._outgoingAckTimeout = setTimeout(() => {\n\t\t\tthis._outgoingAckTimeout = null;\n\t\t\tthis._recvAckCheck();\n\t\t}, minimumTimeUntilTimeout);\n\t}\n\n\tprivate _sendAck(): void {\n\t\tif (this._incomingMsgId <= this._incomingAckId) {\n\t\t\t// nothink to acknowledge\n\t\t\treturn;\n\t\t}\n\n\t\tthis._incomingAckId = this._incomingMsgId;\n\t\tconst msg = new ProtocolMessage(ProtocolMessageType.Ack, 0, this._incomingAckId, getEmptyBuffer());\n\t\tthis._socketWriter.write(msg);\n\t}\n}\n\n// (() => {\n// \tif (!SocketDiagnostics.enableDiagnostics) {\n// \t\treturn;\n// \t}\n// \tif (typeof require.__$__nodeRequire !== 'function') {\n// \t\tconsole.log(`Can only log socket diagnostics on native platforms.`);\n// \t\treturn;\n// \t}\n// \tconst type = (\n// \t\tprocess.argv.includes('--type=renderer')\n// \t\t\t? 'renderer'\n// \t\t\t: (process.argv.includes('--type=extensionHost')\n// \t\t\t\t? 'extensionHost'\n// \t\t\t\t: (process.argv.some(item => item.includes('server/main'))\n// \t\t\t\t\t? 'server'\n// \t\t\t\t\t: 'unknown'\n// \t\t\t\t)\n// \t\t\t)\n// \t);\n// \tsetTimeout(() => {\n// \t\tSocketDiagnostics.records.forEach(r => {\n// \t\t\tif (r.buff) {\n// \t\t\t\tr.data = Buffer.from(r.buff.buffer).toString('base64');\n// \t\t\t\tr.buff = undefined;\n// \t\t\t}\n// \t\t});\n\n// \t\tconst fs = <typeof import('fs')>require.__$__nodeRequire('fs');\n// \t\tconst path = <typeof import('path')>require.__$__nodeRequire('path');\n// \t\tconst logPath = path.join(process.cwd(),`${type}-${process.pid}`);\n\n// \t\tconsole.log(`dumping socket diagnostics at ${logPath}`);\n// \t\tfs.writeFileSync(logPath, JSON.stringify(SocketDiagnostics.records));\n// \t}, 20000);\n// })();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ipcMain, WebContents } from 'electron';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { ClientConnectionEvent, IPCServer } from 'vs/base/parts/ipc/common/ipc';\nimport { Protocol as ElectronProtocol } from 'vs/base/parts/ipc/common/ipc.electron';\n\ninterface IIPCEvent {\n\tevent: { sender: WebContents; };\n\tmessage: Buffer | null;\n}\n\nfunction createScopedOnMessageEvent(senderId: number, eventName: string): Event<VSBuffer | null> {\n\tconst onMessage = Event.fromNodeEventEmitter<IIPCEvent>(ipcMain, eventName, (event, message) => ({ event, message }));\n\tconst onMessageFromSender = Event.filter(onMessage, ({ event }) => event.sender.id === senderId);\n\n\treturn Event.map(onMessageFromSender, ({ message }) => message ? VSBuffer.wrap(message) : message);\n}\n\n/**\n * An implementation of `IPCServer` on top of Electron `ipcMain` API.\n */\nexport class Server extends IPCServer {\n\n\tprivate static readonly Clients = new Map<number, IDisposable>();\n\n\tprivate static getOnDidClientConnect(): Event<ClientConnectionEvent> {\n\t\tconst onHello = Event.fromNodeEventEmitter<WebContents>(ipcMain, 'vscode:hello', ({ sender }) => sender);\n\n\t\treturn Event.map(onHello, webContents => {\n\t\t\tconst id = webContents.id;\n\t\t\tconst client = Server.Clients.get(id);\n\n\t\t\tif (client) {\n\t\t\t\tclient.dispose();\n\t\t\t}\n\n\t\t\tconst onDidClientReconnect = new Emitter<void>();\n\t\t\tServer.Clients.set(id, toDisposable(() => onDidClientReconnect.fire()));\n\n\t\t\tconst onMessage = createScopedOnMessageEvent(id, 'vscode:message') as Event<VSBuffer>;\n\t\t\tconst onDidClientDisconnect = Event.any(Event.signal(createScopedOnMessageEvent(id, 'vscode:disconnect')), onDidClientReconnect.event);\n\t\t\tconst protocol = new ElectronProtocol(webContents, onMessage);\n\n\t\t\treturn { protocol, onDidClientDisconnect };\n\t\t});\n\t}\n\n\tconstructor() {\n\t\tsuper(Server.getOnDidClientConnect());\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { BrowserWindow, ipcMain, IpcMainEvent, MessagePortMain } from 'electron';\nimport { Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { Client as MessagePortClient } from 'vs/base/parts/ipc/common/ipc.mp';\n\n/**\n * An implementation of a `IPCClient` on top of Electron `MessagePortMain`.\n */\nexport class Client extends MessagePortClient implements IDisposable {\n\n\t/**\n\t * @param clientId a way to uniquely identify this client among\n\t * other clients. this is important for routing because every\n\t * client can also be a server\n\t */\n\tconstructor(port: MessagePortMain, clientId: string) {\n\t\tsuper({\n\t\t\taddEventListener: (type, listener) => port.addListener(type, listener),\n\t\t\tremoveEventListener: (type, listener) => port.removeListener(type, listener),\n\t\t\tpostMessage: message => port.postMessage(message),\n\t\t\tstart: () => port.start(),\n\t\t\tclose: () => port.close()\n\t\t}, clientId);\n\t}\n}\n\n/**\n * This method opens a message channel connection\n * in the target window. The target window needs\n * to use the `Server` from `electron-sandbox/ipc.mp`.\n */\nexport async function connect(window: BrowserWindow): Promise<MessagePortMain> {\n\n\t// Assert healthy window to talk to\n\tif (window.isDestroyed() || window.webContents.isDestroyed()) {\n\t\tthrow new Error('ipc.mp#connect: Cannot talk to window because it is closed or destroyed');\n\t}\n\n\t// Ask to create message channel inside the window\n\t// and send over a UUID to correlate the response\n\tconst nonce = generateUuid();\n\twindow.webContents.send('vscode:createMessageChannel', nonce);\n\n\t// Wait until the window has returned the `MessagePort`\n\t// We need to filter by the `nonce` to ensure we listen\n\t// to the right response.\n\tconst onMessageChannelResult = Event.fromNodeEventEmitter<{ nonce: string, port: MessagePortMain }>(ipcMain, 'vscode:createMessageChannelResult', (e: IpcMainEvent, nonce: string) => ({ nonce, port: e.ports[0] }));\n\tconst { port } = await Event.toPromise(Event.once(Event.filter(onMessageChannelResult, e => e.nonce === nonce)));\n\n\treturn port;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ThrottledDelayer } from 'vs/base/common/async';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { isUndefinedOrNull } from 'vs/base/common/types';\n\nexport enum StorageHint {\n\n\t// A hint to the storage that the storage\n\t// does not exist on disk yet. This allows\n\t// the storage library to improve startup\n\t// time by not checking the storage for data.\n\tSTORAGE_DOES_NOT_EXIST\n}\n\nexport interface IStorageOptions {\n\treadonly hint?: StorageHint;\n}\n\nexport interface IUpdateRequest {\n\treadonly insert?: Map<string, string>;\n\treadonly delete?: Set<string>;\n}\n\nexport interface IStorageItemsChangeEvent {\n\treadonly changed?: Map<string, string>;\n\treadonly deleted?: Set<string>;\n}\n\nexport function isStorageItemsChangeEvent(thing: unknown): thing is IStorageItemsChangeEvent {\n\tconst candidate = thing as IStorageItemsChangeEvent | undefined;\n\n\treturn candidate?.changed instanceof Map || candidate?.deleted instanceof Set;\n}\n\nexport interface IStorageDatabase {\n\n\treadonly onDidChangeItemsExternal: Event<IStorageItemsChangeEvent>;\n\n\tgetItems(): Promise<Map<string, string>>;\n\tupdateItems(request: IUpdateRequest): Promise<void>;\n\n\tclose(recovery?: () => Map<string, string>): Promise<void>;\n}\n\nexport interface IStorage extends IDisposable {\n\n\treadonly onDidChangeStorage: Event<string>;\n\n\treadonly items: Map<string, string>;\n\treadonly size: number;\n\n\tinit(): Promise<void>;\n\n\tget(key: string, fallbackValue: string): string;\n\tget(key: string, fallbackValue?: string): string | undefined;\n\n\tgetBoolean(key: string, fallbackValue: boolean): boolean;\n\tgetBoolean(key: string, fallbackValue?: boolean): boolean | undefined;\n\n\tgetNumber(key: string, fallbackValue: number): number;\n\tgetNumber(key: string, fallbackValue?: number): number | undefined;\n\n\tset(key: string, value: string | boolean | number | undefined | null): Promise<void>;\n\tdelete(key: string): Promise<void>;\n\n\tflush(delay?: number): Promise<void>;\n\twhenFlushed(): Promise<void>;\n\n\tclose(): Promise<void>;\n}\n\nenum StorageState {\n\tNone,\n\tInitialized,\n\tClosed\n}\n\nexport class Storage extends Disposable implements IStorage {\n\n\tprivate static readonly DEFAULT_FLUSH_DELAY = 100;\n\n\tprivate readonly _onDidChangeStorage = this._register(new Emitter<string>());\n\treadonly onDidChangeStorage = this._onDidChangeStorage.event;\n\n\tprivate state = StorageState.None;\n\n\tprivate cache = new Map<string, string>();\n\n\tprivate readonly flushDelayer = new ThrottledDelayer<void>(Storage.DEFAULT_FLUSH_DELAY);\n\n\tprivate pendingDeletes = new Set<string>();\n\tprivate pendingInserts = new Map<string, string>();\n\n\tprivate pendingClose: Promise<void> | undefined = undefined;\n\n\tprivate readonly whenFlushedCallbacks: Function[] = [];\n\n\tconstructor(\n\t\tprotected readonly database: IStorageDatabase,\n\t\tprivate readonly options: IStorageOptions = Object.create(null)\n\t) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tthis._register(this.database.onDidChangeItemsExternal(e => this.onDidChangeItemsExternal(e)));\n\t}\n\n\tprivate onDidChangeItemsExternal(e: IStorageItemsChangeEvent): void {\n\t\t// items that change external require us to update our\n\t\t// caches with the values. we just accept the value and\n\t\t// emit an event if there is a change.\n\t\te.changed?.forEach((value, key) => this.accept(key, value));\n\t\te.deleted?.forEach(key => this.accept(key, undefined));\n\t}\n\n\tprivate accept(key: string, value: string | undefined): void {\n\t\tif (this.state === StorageState.Closed) {\n\t\t\treturn; // Return early if we are already closed\n\t\t}\n\n\t\tlet changed = false;\n\n\t\t// Item got removed, check for deletion\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\tchanged = this.cache.delete(key);\n\t\t}\n\n\t\t// Item got updated, check for change\n\t\telse {\n\t\t\tconst currentValue = this.cache.get(key);\n\t\t\tif (currentValue !== value) {\n\t\t\t\tthis.cache.set(key, value);\n\t\t\t\tchanged = true;\n\t\t\t}\n\t\t}\n\n\t\t// Signal to outside listeners\n\t\tif (changed) {\n\t\t\tthis._onDidChangeStorage.fire(key);\n\t\t}\n\t}\n\n\tget items(): Map<string, string> {\n\t\treturn this.cache;\n\t}\n\n\tget size(): number {\n\t\treturn this.cache.size;\n\t}\n\n\tasync init(): Promise<void> {\n\t\tif (this.state !== StorageState.None) {\n\t\t\treturn; // either closed or already initialized\n\t\t}\n\n\t\tthis.state = StorageState.Initialized;\n\n\t\tif (this.options.hint === StorageHint.STORAGE_DOES_NOT_EXIST) {\n\t\t\t// return early if we know the storage file does not exist. this is a performance\n\t\t\t// optimization to not load all items of the underlying storage if we know that\n\t\t\t// there can be no items because the storage does not exist.\n\t\t\treturn;\n\t\t}\n\n\t\tthis.cache = await this.database.getItems();\n\t}\n\n\tget(key: string, fallbackValue: string): string;\n\tget(key: string, fallbackValue?: string): string | undefined;\n\tget(key: string, fallbackValue?: string): string | undefined {\n\t\tconst value = this.cache.get(key);\n\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn fallbackValue;\n\t\t}\n\n\t\treturn value;\n\t}\n\n\tgetBoolean(key: string, fallbackValue: boolean): boolean;\n\tgetBoolean(key: string, fallbackValue?: boolean): boolean | undefined;\n\tgetBoolean(key: string, fallbackValue?: boolean): boolean | undefined {\n\t\tconst value = this.get(key);\n\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn fallbackValue;\n\t\t}\n\n\t\treturn value === 'true';\n\t}\n\n\tgetNumber(key: string, fallbackValue: number): number;\n\tgetNumber(key: string, fallbackValue?: number): number | undefined;\n\tgetNumber(key: string, fallbackValue?: number): number | undefined {\n\t\tconst value = this.get(key);\n\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn fallbackValue;\n\t\t}\n\n\t\treturn parseInt(value, 10);\n\t}\n\n\tasync set(key: string, value: string | boolean | number | null | undefined): Promise<void> {\n\t\tif (this.state === StorageState.Closed) {\n\t\t\treturn; // Return early if we are already closed\n\t\t}\n\n\t\t// We remove the key for undefined/null values\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\treturn this.delete(key);\n\t\t}\n\n\t\t// Otherwise, convert to String and store\n\t\tconst valueStr = String(value);\n\n\t\t// Return early if value already set\n\t\tconst currentValue = this.cache.get(key);\n\t\tif (currentValue === valueStr) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Update in cache and pending\n\t\tthis.cache.set(key, valueStr);\n\t\tthis.pendingInserts.set(key, valueStr);\n\t\tthis.pendingDeletes.delete(key);\n\n\t\t// Event\n\t\tthis._onDidChangeStorage.fire(key);\n\n\t\t// Accumulate work by scheduling after timeout\n\t\treturn this.doFlush();\n\t}\n\n\tasync delete(key: string): Promise<void> {\n\t\tif (this.state === StorageState.Closed) {\n\t\t\treturn; // Return early if we are already closed\n\t\t}\n\n\t\t// Remove from cache and add to pending\n\t\tconst wasDeleted = this.cache.delete(key);\n\t\tif (!wasDeleted) {\n\t\t\treturn; // Return early if value already deleted\n\t\t}\n\n\t\tif (!this.pendingDeletes.has(key)) {\n\t\t\tthis.pendingDeletes.add(key);\n\t\t}\n\n\t\tthis.pendingInserts.delete(key);\n\n\t\t// Event\n\t\tthis._onDidChangeStorage.fire(key);\n\n\t\t// Accumulate work by scheduling after timeout\n\t\treturn this.doFlush();\n\t}\n\n\tasync close(): Promise<void> {\n\t\tif (!this.pendingClose) {\n\t\t\tthis.pendingClose = this.doClose();\n\t\t}\n\n\t\treturn this.pendingClose;\n\t}\n\n\tprivate async doClose(): Promise<void> {\n\n\t\t// Update state\n\t\tthis.state = StorageState.Closed;\n\n\t\t// Trigger new flush to ensure data is persisted and then close\n\t\t// even if there is an error flushing. We must always ensure\n\t\t// the DB is closed to avoid corruption.\n\t\t//\n\t\t// Recovery: we pass our cache over as recovery option in case\n\t\t// the DB is not healthy.\n\t\ttry {\n\t\t\tawait this.doFlush(0 /* as soon as possible */);\n\t\t} catch (error) {\n\t\t\t// Ignore\n\t\t}\n\n\t\tawait this.database.close(() => this.cache);\n\t}\n\n\tprivate get hasPending() {\n\t\treturn this.pendingInserts.size > 0 || this.pendingDeletes.size > 0;\n\t}\n\n\tprivate async flushPending(): Promise<void> {\n\t\tif (!this.hasPending) {\n\t\t\treturn; // return early if nothing to do\n\t\t}\n\n\t\t// Get pending data\n\t\tconst updateRequest: IUpdateRequest = { insert: this.pendingInserts, delete: this.pendingDeletes };\n\n\t\t// Reset pending data for next run\n\t\tthis.pendingDeletes = new Set<string>();\n\t\tthis.pendingInserts = new Map<string, string>();\n\n\t\t// Update in storage and release any\n\t\t// waiters we have once done\n\t\treturn this.database.updateItems(updateRequest).finally(() => {\n\t\t\tif (!this.hasPending) {\n\t\t\t\twhile (this.whenFlushedCallbacks.length) {\n\t\t\t\t\tthis.whenFlushedCallbacks.pop()?.();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tasync flush(delay?: number): Promise<void> {\n\t\tif (!this.hasPending) {\n\t\t\treturn; // return early if nothing to do\n\t\t}\n\n\t\treturn this.doFlush(delay);\n\t}\n\n\tprivate async doFlush(delay?: number): Promise<void> {\n\t\treturn this.flushDelayer.trigger(() => this.flushPending(), delay);\n\t}\n\n\tasync whenFlushed(): Promise<void> {\n\t\tif (!this.hasPending) {\n\t\t\treturn; // return early if nothing to do\n\t\t}\n\n\t\treturn new Promise(resolve => this.whenFlushedCallbacks.push(resolve));\n\t}\n\n\toverride dispose(): void {\n\t\tthis.flushDelayer.dispose();\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport class InMemoryStorageDatabase implements IStorageDatabase {\n\n\treadonly onDidChangeItemsExternal = Event.None;\n\n\tprivate readonly items = new Map<string, string>();\n\n\tasync getItems(): Promise<Map<string, string>> {\n\t\treturn this.items;\n\t}\n\n\tasync updateItems(request: IUpdateRequest): Promise<void> {\n\t\tif (request.insert) {\n\t\t\trequest.insert.forEach((value, key) => this.items.set(key, value));\n\t\t}\n\n\t\tif (request.delete) {\n\t\t\trequest.delete.forEach(key => this.items.delete(key));\n\t\t}\n\t}\n\n\tasync close(): Promise<void> { }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { timeout } from 'vs/base/common/async';\nimport { Event } from 'vs/base/common/event';\nimport { mapToString, setToString } from 'vs/base/common/map';\nimport { basename } from 'vs/base/common/path';\nimport { Promises } from 'vs/base/node/pfs';\nimport { IStorageDatabase, IStorageItemsChangeEvent, IUpdateRequest } from 'vs/base/parts/storage/common/storage';\nimport type { Database, Statement } from '@vscode/sqlite3';\n\ninterface IDatabaseConnection {\n\treadonly db: Database;\n\treadonly isInMemory: boolean;\n\n\tisErroneous?: boolean;\n\tlastError?: string;\n}\n\nexport interface ISQLiteStorageDatabaseOptions {\n\treadonly logging?: ISQLiteStorageDatabaseLoggingOptions;\n}\n\nexport interface ISQLiteStorageDatabaseLoggingOptions {\n\tlogError?: (error: string | Error) => void;\n\tlogTrace?: (msg: string) => void;\n}\n\nexport class SQLiteStorageDatabase implements IStorageDatabase {\n\n\tstatic readonly IN_MEMORY_PATH = ':memory:';\n\n\tget onDidChangeItemsExternal(): Event<IStorageItemsChangeEvent> { return Event.None; } // since we are the only client, there can be no external changes\n\n\tprivate static readonly BUSY_OPEN_TIMEOUT = 2000; // timeout in ms to retry when opening DB fails with SQLITE_BUSY\n\tprivate static readonly MAX_HOST_PARAMETERS = 256; // maximum number of parameters within a statement\n\n\tprivate readonly name = basename(this.path);\n\n\tprivate readonly logger = new SQLiteStorageDatabaseLogger(this.options.logging);\n\n\tprivate readonly whenConnected = this.connect(this.path);\n\n\tconstructor(private readonly path: string, private readonly options: ISQLiteStorageDatabaseOptions = Object.create(null)) { }\n\n\tasync getItems(): Promise<Map<string, string>> {\n\t\tconst connection = await this.whenConnected;\n\n\t\tconst items = new Map<string, string>();\n\n\t\tconst rows = await this.all(connection, 'SELECT * FROM ItemTable');\n\t\trows.forEach(row => items.set(row.key, row.value));\n\n\t\tif (this.logger.isTracing) {\n\t\t\tthis.logger.trace(`[storage ${this.name}] getItems(): ${items.size} rows`);\n\t\t}\n\n\t\treturn items;\n\t}\n\n\tasync updateItems(request: IUpdateRequest): Promise<void> {\n\t\tconst connection = await this.whenConnected;\n\n\t\treturn this.doUpdateItems(connection, request);\n\t}\n\n\tprivate doUpdateItems(connection: IDatabaseConnection, request: IUpdateRequest): Promise<void> {\n\t\tif (this.logger.isTracing) {\n\t\t\tthis.logger.trace(`[storage ${this.name}] updateItems(): insert(${request.insert ? mapToString(request.insert) : '0'}), delete(${request.delete ? setToString(request.delete) : '0'})`);\n\t\t}\n\n\t\treturn this.transaction(connection, () => {\n\t\t\tconst toInsert = request.insert;\n\t\t\tconst toDelete = request.delete;\n\n\t\t\t// INSERT\n\t\t\tif (toInsert && toInsert.size > 0) {\n\t\t\t\tconst keysValuesChunks: (string[])[] = [];\n\t\t\t\tkeysValuesChunks.push([]); // seed with initial empty chunk\n\n\t\t\t\t// Split key/values into chunks of SQLiteStorageDatabase.MAX_HOST_PARAMETERS\n\t\t\t\t// so that we can efficiently run the INSERT with as many HOST parameters as possible\n\t\t\t\tlet currentChunkIndex = 0;\n\t\t\t\ttoInsert.forEach((value, key) => {\n\t\t\t\t\tlet keyValueChunk = keysValuesChunks[currentChunkIndex];\n\n\t\t\t\t\tif (keyValueChunk.length > SQLiteStorageDatabase.MAX_HOST_PARAMETERS) {\n\t\t\t\t\t\tcurrentChunkIndex++;\n\t\t\t\t\t\tkeyValueChunk = [];\n\t\t\t\t\t\tkeysValuesChunks.push(keyValueChunk);\n\t\t\t\t\t}\n\n\t\t\t\t\tkeyValueChunk.push(key, value);\n\t\t\t\t});\n\n\t\t\t\tkeysValuesChunks.forEach(keysValuesChunk => {\n\t\t\t\t\tthis.prepare(connection, `INSERT INTO ItemTable VALUES ${new Array(keysValuesChunk.length / 2).fill('(?,?)').join(',')}`, stmt => stmt.run(keysValuesChunk), () => {\n\t\t\t\t\t\tconst keys: string[] = [];\n\t\t\t\t\t\tlet length = 0;\n\t\t\t\t\t\ttoInsert.forEach((value, key) => {\n\t\t\t\t\t\t\tkeys.push(key);\n\t\t\t\t\t\t\tlength += value.length;\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn `Keys: ${keys.join(', ')} Length: ${length}`;\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// DELETE\n\t\t\tif (toDelete && toDelete.size) {\n\t\t\t\tconst keysChunks: (string[])[] = [];\n\t\t\t\tkeysChunks.push([]); // seed with initial empty chunk\n\n\t\t\t\t// Split keys into chunks of SQLiteStorageDatabase.MAX_HOST_PARAMETERS\n\t\t\t\t// so that we can efficiently run the DELETE with as many HOST parameters\n\t\t\t\t// as possible\n\t\t\t\tlet currentChunkIndex = 0;\n\t\t\t\ttoDelete.forEach(key => {\n\t\t\t\t\tlet keyChunk = keysChunks[currentChunkIndex];\n\n\t\t\t\t\tif (keyChunk.length > SQLiteStorageDatabase.MAX_HOST_PARAMETERS) {\n\t\t\t\t\t\tcurrentChunkIndex++;\n\t\t\t\t\t\tkeyChunk = [];\n\t\t\t\t\t\tkeysChunks.push(keyChunk);\n\t\t\t\t\t}\n\n\t\t\t\t\tkeyChunk.push(key);\n\t\t\t\t});\n\n\t\t\t\tkeysChunks.forEach(keysChunk => {\n\t\t\t\t\tthis.prepare(connection, `DELETE FROM ItemTable WHERE key IN (${new Array(keysChunk.length).fill('?').join(',')})`, stmt => stmt.run(keysChunk), () => {\n\t\t\t\t\t\tconst keys: string[] = [];\n\t\t\t\t\t\ttoDelete.forEach(key => {\n\t\t\t\t\t\t\tkeys.push(key);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn `Keys: ${keys.join(', ')}`;\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tasync close(recovery?: () => Map<string, string>): Promise<void> {\n\t\tthis.logger.trace(`[storage ${this.name}] close()`);\n\n\t\tconst connection = await this.whenConnected;\n\n\t\treturn this.doClose(connection, recovery);\n\t}\n\n\tprivate doClose(connection: IDatabaseConnection, recovery?: () => Map<string, string>): Promise<void> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconnection.db.close(closeError => {\n\t\t\t\tif (closeError) {\n\t\t\t\t\tthis.handleSQLiteError(connection, `[storage ${this.name}] close(): ${closeError}`);\n\t\t\t\t}\n\n\t\t\t\t// Return early if this storage was created only in-memory\n\t\t\t\t// e.g. when running tests we do not need to backup.\n\t\t\t\tif (this.path === SQLiteStorageDatabase.IN_MEMORY_PATH) {\n\t\t\t\t\treturn resolve();\n\t\t\t\t}\n\n\t\t\t\t// If the DB closed successfully and we are not running in-memory\n\t\t\t\t// and the DB did not get errors during runtime, make a backup\n\t\t\t\t// of the DB so that we can use it as fallback in case the actual\n\t\t\t\t// DB becomes corrupt in the future.\n\t\t\t\tif (!connection.isErroneous && !connection.isInMemory) {\n\t\t\t\t\treturn this.backup().then(resolve, error => {\n\t\t\t\t\t\tthis.logger.error(`[storage ${this.name}] backup(): ${error}`);\n\n\t\t\t\t\t\treturn resolve(); // ignore failing backup\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// Recovery: if we detected errors while using the DB or we are using\n\t\t\t\t// an inmemory DB (as a fallback to not being able to open the DB initially)\n\t\t\t\t// and we have a recovery function provided, we recreate the DB with this\n\t\t\t\t// data to recover all known data without loss if possible.\n\t\t\t\tif (typeof recovery === 'function') {\n\n\t\t\t\t\t// Delete the existing DB. If the path does not exist or fails to\n\t\t\t\t\t// be deleted, we do not try to recover anymore because we assume\n\t\t\t\t\t// that the path is no longer writeable for us.\n\t\t\t\t\treturn Promises.unlink(this.path).then(() => {\n\n\t\t\t\t\t\t// Re-open the DB fresh\n\t\t\t\t\t\treturn this.doConnect(this.path).then(recoveryConnection => {\n\t\t\t\t\t\t\tconst closeRecoveryConnection = () => {\n\t\t\t\t\t\t\t\treturn this.doClose(recoveryConnection, undefined /* do not attempt to recover again */);\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t// Store items\n\t\t\t\t\t\t\treturn this.doUpdateItems(recoveryConnection, { insert: recovery() }).then(() => closeRecoveryConnection(), error => {\n\n\t\t\t\t\t\t\t\t// In case of an error updating items, still ensure to close the connection\n\t\t\t\t\t\t\t\t// to prevent SQLITE_BUSY errors when the connection is reestablished\n\t\t\t\t\t\t\t\tcloseRecoveryConnection();\n\n\t\t\t\t\t\t\t\treturn Promise.reject(error);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t}).then(resolve, reject);\n\t\t\t\t}\n\n\t\t\t\t// Finally without recovery we just reject\n\t\t\t\treturn reject(closeError || new Error('Database has errors or is in-memory without recovery option'));\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate backup(): Promise<void> {\n\t\tconst backupPath = this.toBackupPath(this.path);\n\n\t\treturn Promises.copy(this.path, backupPath, { preserveSymlinks: false });\n\t}\n\n\tprivate toBackupPath(path: string): string {\n\t\treturn `${path}.backup`;\n\t}\n\n\tasync checkIntegrity(full: boolean): Promise<string> {\n\t\tthis.logger.trace(`[storage ${this.name}] checkIntegrity(full: ${full})`);\n\n\t\tconst connection = await this.whenConnected;\n\t\tconst row = await this.get(connection, full ? 'PRAGMA integrity_check' : 'PRAGMA quick_check');\n\n\t\tconst integrity = full ? (row as any)['integrity_check'] : (row as any)['quick_check'];\n\n\t\tif (connection.isErroneous) {\n\t\t\treturn `${integrity} (last error: ${connection.lastError})`;\n\t\t}\n\n\t\tif (connection.isInMemory) {\n\t\t\treturn `${integrity} (in-memory!)`;\n\t\t}\n\n\t\treturn integrity;\n\t}\n\n\tprivate async connect(path: string, retryOnBusy: boolean = true): Promise<IDatabaseConnection> {\n\t\tthis.logger.trace(`[storage ${this.name}] open(${path}, retryOnBusy: ${retryOnBusy})`);\n\n\t\ttry {\n\t\t\treturn await this.doConnect(path);\n\t\t} catch (error) {\n\t\t\tthis.logger.error(`[storage ${this.name}] open(): Unable to open DB due to ${error}`);\n\n\t\t\t// SQLITE_BUSY should only arise if another process is locking the same DB we want\n\t\t\t// to open at that time. This typically never happens because a DB connection is\n\t\t\t// limited per window. However, in the event of a window reload, it may be possible\n\t\t\t// that the previous connection was not properly closed while the new connection is\n\t\t\t// already established.\n\t\t\t//\n\t\t\t// In this case we simply wait for some time and retry once to establish the connection.\n\t\t\t//\n\t\t\tif (error.code === 'SQLITE_BUSY' && retryOnBusy) {\n\t\t\t\tawait timeout(SQLiteStorageDatabase.BUSY_OPEN_TIMEOUT);\n\n\t\t\t\treturn this.connect(path, false /* not another retry */);\n\t\t\t}\n\n\t\t\t// Otherwise, best we can do is to recover from a backup if that exists, as such we\n\t\t\t// move the DB to a different filename and try to load from backup. If that fails,\n\t\t\t// a new empty DB is being created automatically.\n\t\t\t//\n\t\t\t// The final fallback is to use an in-memory DB which should only happen if the target\n\t\t\t// folder is really not writeable for us.\n\t\t\t//\n\t\t\ttry {\n\t\t\t\tawait Promises.unlink(path);\n\t\t\t\ttry {\n\t\t\t\t\tawait Promises.rename(this.toBackupPath(path), path);\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// ignore\n\t\t\t\t}\n\n\t\t\t\treturn await this.doConnect(path);\n\t\t\t} catch (error) {\n\t\t\t\tthis.logger.error(`[storage ${this.name}] open(): Unable to use backup due to ${error}`);\n\n\t\t\t\t// In case of any error to open the DB, use an in-memory\n\t\t\t\t// DB so that we always have a valid DB to talk to.\n\t\t\t\treturn this.doConnect(SQLiteStorageDatabase.IN_MEMORY_PATH);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate handleSQLiteError(connection: IDatabaseConnection, msg: string): void {\n\t\tconnection.isErroneous = true;\n\t\tconnection.lastError = msg;\n\n\t\tthis.logger.error(msg);\n\t}\n\n\tprivate doConnect(path: string): Promise<IDatabaseConnection> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\timport('@vscode/sqlite3').then(sqlite3 => {\n\t\t\t\tconst connection: IDatabaseConnection = {\n\t\t\t\t\tdb: new (this.logger.isTracing ? sqlite3.verbose().Database : sqlite3.Database)(path, error => {\n\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\treturn connection.db ? connection.db.close(() => reject(error)) : reject(error);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// The following exec() statement serves two purposes:\n\t\t\t\t\t\t// - create the DB if it does not exist yet\n\t\t\t\t\t\t// - validate that the DB is not corrupt (the open() call does not throw otherwise)\n\t\t\t\t\t\treturn this.exec(connection, [\n\t\t\t\t\t\t\t'PRAGMA user_version = 1;',\n\t\t\t\t\t\t\t'CREATE TABLE IF NOT EXISTS ItemTable (key TEXT UNIQUE ON CONFLICT REPLACE, value BLOB)'\n\t\t\t\t\t\t].join('')).then(() => {\n\t\t\t\t\t\t\treturn resolve(connection);\n\t\t\t\t\t\t}, error => {\n\t\t\t\t\t\t\treturn connection.db.close(() => reject(error));\n\t\t\t\t\t\t});\n\t\t\t\t\t}),\n\t\t\t\t\tisInMemory: path === SQLiteStorageDatabase.IN_MEMORY_PATH\n\t\t\t\t};\n\n\t\t\t\t// Errors\n\t\t\t\tconnection.db.on('error', error => this.handleSQLiteError(connection, `[storage ${this.name}] Error (event): ${error}`));\n\n\t\t\t\t// Tracing\n\t\t\t\tif (this.logger.isTracing) {\n\t\t\t\t\tconnection.db.on('trace', sql => this.logger.trace(`[storage ${this.name}] Trace (event): ${sql}`));\n\t\t\t\t}\n\t\t\t}, reject);\n\t\t});\n\t}\n\n\tprivate exec(connection: IDatabaseConnection, sql: string): Promise<void> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconnection.db.exec(sql, error => {\n\t\t\t\tif (error) {\n\t\t\t\t\tthis.handleSQLiteError(connection, `[storage ${this.name}] exec(): ${error}`);\n\n\t\t\t\t\treturn reject(error);\n\t\t\t\t}\n\n\t\t\t\treturn resolve();\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate get(connection: IDatabaseConnection, sql: string): Promise<object> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconnection.db.get(sql, (error, row) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tthis.handleSQLiteError(connection, `[storage ${this.name}] get(): ${error}`);\n\n\t\t\t\t\treturn reject(error);\n\t\t\t\t}\n\n\t\t\t\treturn resolve(row);\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate all(connection: IDatabaseConnection, sql: string): Promise<{ key: string, value: string }[]> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconnection.db.all(sql, (error, rows) => {\n\t\t\t\tif (error) {\n\t\t\t\t\tthis.handleSQLiteError(connection, `[storage ${this.name}] all(): ${error}`);\n\n\t\t\t\t\treturn reject(error);\n\t\t\t\t}\n\n\t\t\t\treturn resolve(rows);\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate transaction(connection: IDatabaseConnection, transactions: () => void): Promise<void> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconnection.db.serialize(() => {\n\t\t\t\tconnection.db.run('BEGIN TRANSACTION');\n\n\t\t\t\ttransactions();\n\n\t\t\t\tconnection.db.run('END TRANSACTION', error => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tthis.handleSQLiteError(connection, `[storage ${this.name}] transaction(): ${error}`);\n\n\t\t\t\t\t\treturn reject(error);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn resolve();\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate prepare(connection: IDatabaseConnection, sql: string, runCallback: (stmt: Statement) => void, errorDetails: () => string): void {\n\t\tconst stmt = connection.db.prepare(sql);\n\n\t\tconst statementErrorListener = (error: Error) => {\n\t\t\tthis.handleSQLiteError(connection, `[storage ${this.name}] prepare(): ${error} (${sql}). Details: ${errorDetails()}`);\n\t\t};\n\n\t\tstmt.on('error', statementErrorListener);\n\n\t\trunCallback(stmt);\n\n\t\tstmt.finalize(error => {\n\t\t\tif (error) {\n\t\t\t\tstatementErrorListener(error);\n\t\t\t}\n\n\t\t\tstmt.removeListener('error', statementErrorListener);\n\t\t});\n\t}\n}\n\nclass SQLiteStorageDatabaseLogger {\n\n\t// to reduce lots of output, require an environment variable to enable tracing\n\t// this helps when running with --verbose normally where the storage tracing\n\t// might hide useful output to look at\n\tstatic readonly VSCODE_TRACE_STORAGE = 'VSCODE_TRACE_STORAGE';\n\n\tprivate readonly logTrace: ((msg: string) => void) | undefined;\n\tprivate readonly logError: ((error: string | Error) => void) | undefined;\n\n\tconstructor(options?: ISQLiteStorageDatabaseLoggingOptions) {\n\t\tif (options && typeof options.logTrace === 'function' && process.env[SQLiteStorageDatabaseLogger.VSCODE_TRACE_STORAGE]) {\n\t\t\tthis.logTrace = options.logTrace;\n\t\t}\n\n\t\tif (options && typeof options.logError === 'function') {\n\t\t\tthis.logError = options.logError;\n\t\t}\n\t}\n\n\tget isTracing(): boolean {\n\t\treturn !!this.logTrace;\n\t}\n\n\ttrace(msg: string): void {\n\t\tif (this.logTrace) {\n\t\t\tthis.logTrace(msg);\n\t\t}\n\t}\n\n\terror(error: string | Error): void {\n\t\tif (this.logError) {\n\t\t\tthis.logError(error);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\n\nconst minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst month = day * 30;\nconst year = day * 365;\n\nexport function fromNow(date: number | Date, appendAgoLabel?: boolean): string {\n\tif (typeof date !== 'number') {\n\t\tdate = date.getTime();\n\t}\n\n\tconst seconds = Math.round((new Date().getTime() - date) / 1000);\n\tif (seconds < -30) {\n\t\treturn localize('date.fromNow.in', 'in {0}', fromNow(new Date().getTime() + seconds * 1000, false));\n\t}\n\n\tif (seconds < 30) {\n\t\treturn localize('date.fromNow.now', 'now');\n\t}\n\n\tlet value: number;\n\tif (seconds < minute) {\n\t\tvalue = seconds;\n\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.seconds.singular.ago', '{0} sec ago', value)\n\t\t\t\t: localize('date.fromNow.seconds.plural.ago', '{0} secs ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.seconds.singular', '{0} sec', value)\n\t\t\t\t: localize('date.fromNow.seconds.plural', '{0} secs', value);\n\t\t}\n\t}\n\n\tif (seconds < hour) {\n\t\tvalue = Math.floor(seconds / minute);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.minutes.singular.ago', '{0} min ago', value)\n\t\t\t\t: localize('date.fromNow.minutes.plural.ago', '{0} mins ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.minutes.singular', '{0} min', value)\n\t\t\t\t: localize('date.fromNow.minutes.plural', '{0} mins', value);\n\t\t}\n\t}\n\n\tif (seconds < day) {\n\t\tvalue = Math.floor(seconds / hour);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.hours.singular.ago', '{0} hr ago', value)\n\t\t\t\t: localize('date.fromNow.hours.plural.ago', '{0} hrs ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.hours.singular', '{0} hr', value)\n\t\t\t\t: localize('date.fromNow.hours.plural', '{0} hrs', value);\n\t\t}\n\t}\n\n\tif (seconds < week) {\n\t\tvalue = Math.floor(seconds / day);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.days.singular.ago', '{0} day ago', value)\n\t\t\t\t: localize('date.fromNow.days.plural.ago', '{0} days ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.days.singular', '{0} day', value)\n\t\t\t\t: localize('date.fromNow.days.plural', '{0} days', value);\n\t\t}\n\t}\n\n\tif (seconds < month) {\n\t\tvalue = Math.floor(seconds / week);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.weeks.singular.ago', '{0} wk ago', value)\n\t\t\t\t: localize('date.fromNow.weeks.plural.ago', '{0} wks ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.weeks.singular', '{0} wk', value)\n\t\t\t\t: localize('date.fromNow.weeks.plural', '{0} wks', value);\n\t\t}\n\t}\n\n\tif (seconds < year) {\n\t\tvalue = Math.floor(seconds / month);\n\t\tif (appendAgoLabel) {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.months.singular.ago', '{0} mo ago', value)\n\t\t\t\t: localize('date.fromNow.months.plural.ago', '{0} mos ago', value);\n\t\t} else {\n\t\t\treturn value === 1\n\t\t\t\t? localize('date.fromNow.months.singular', '{0} mo', value)\n\t\t\t\t: localize('date.fromNow.months.plural', '{0} mos', value);\n\t\t}\n\t}\n\n\tvalue = Math.floor(seconds / year);\n\tif (appendAgoLabel) {\n\t\treturn value === 1\n\t\t\t? localize('date.fromNow.years.singular.ago', '{0} yr ago', value)\n\t\t\t: localize('date.fromNow.years.plural.ago', '{0} yrs ago', value);\n\t} else {\n\t\treturn value === 1\n\t\t\t? localize('date.fromNow.years.singular', '{0} yr', value)\n\t\t\t: localize('date.fromNow.years.plural', '{0} yrs', value);\n\t}\n}\n\nexport function toLocalISOString(date: Date): string {\n\treturn date.getFullYear() +\n\t\t'-' + String(date.getMonth() + 1).padStart(2, '0') +\n\t\t'-' + String(date.getDate()).padStart(2, '0') +\n\t\t'T' + String(date.getHours()).padStart(2, '0') +\n\t\t':' + String(date.getMinutes()).padStart(2, '0') +\n\t\t':' + String(date.getSeconds()).padStart(2, '0') +\n\t\t'.' + (date.getMilliseconds() / 1000).toFixed(3).slice(2, 5) +\n\t\t'Z';\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as arrays from 'vs/base/common/arrays';\nimport * as types from 'vs/base/common/types';\nimport * as nls from 'vs/nls';\n\nfunction exceptionToErrorMessage(exception: any, verbose: boolean): string {\n\tif (verbose && (exception.stack || exception.stacktrace)) {\n\t\treturn nls.localize('stackTrace.format', \"{0}: {1}\", detectSystemErrorMessage(exception), stackToString(exception.stack) || stackToString(exception.stacktrace));\n\t}\n\n\treturn detectSystemErrorMessage(exception);\n}\n\nfunction stackToString(stack: string[] | string | undefined): string | undefined {\n\tif (Array.isArray(stack)) {\n\t\treturn stack.join('\\n');\n\t}\n\n\treturn stack;\n}\n\nfunction detectSystemErrorMessage(exception: any): string {\n\n\t// See https://nodejs.org/api/errors.html#errors_class_system_error\n\tif (typeof exception.code === 'string' && typeof exception.errno === 'number' && typeof exception.syscall === 'string') {\n\t\treturn nls.localize('nodeExceptionMessage', \"A system error occurred ({0})\", exception.message);\n\t}\n\n\treturn exception.message || nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n\n/**\n * Tries to generate a human readable error message out of the error. If the verbose parameter\n * is set to true, the error message will include stacktrace details if provided.\n *\n * @returns A string containing the error message.\n */\nexport function toErrorMessage(error: any = null, verbose: boolean = false): string {\n\tif (!error) {\n\t\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n\t}\n\n\tif (Array.isArray(error)) {\n\t\tconst errors: any[] = arrays.coalesce(error);\n\t\tconst msg = toErrorMessage(errors[0], verbose);\n\n\t\tif (errors.length > 1) {\n\t\t\treturn nls.localize('error.moreErrors', \"{0} ({1} errors in total)\", msg, errors.length);\n\t\t}\n\n\t\treturn msg;\n\t}\n\n\tif (types.isString(error)) {\n\t\treturn error;\n\t}\n\n\tif (error.detail) {\n\t\tconst detail = error.detail;\n\n\t\tif (detail.error) {\n\t\t\treturn exceptionToErrorMessage(detail.error, verbose);\n\t\t}\n\n\t\tif (detail.exception) {\n\t\t\treturn exceptionToErrorMessage(detail.exception, verbose);\n\t\t}\n\t}\n\n\tif (error.stack) {\n\t\treturn exceptionToErrorMessage(error, verbose);\n\t}\n\n\tif (error.message) {\n\t\treturn error.message;\n\t}\n\n\treturn nls.localize('error.defaultMessage', \"An unknown error occurred. Please consult the log for more details.\");\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Modifiers } from 'vs/base/common/keybindings';\nimport { OperatingSystem } from 'vs/base/common/platform';\nimport * as nls from 'vs/nls';\n\nexport interface ModifierLabels {\n\treadonly ctrlKey: string;\n\treadonly shiftKey: string;\n\treadonly altKey: string;\n\treadonly metaKey: string;\n\treadonly separator: string;\n}\n\nexport interface KeyLabelProvider<T extends Modifiers> {\n\t(keybinding: T): string | null;\n}\n\nexport class ModifierLabelProvider {\n\n\tpublic readonly modifierLabels: ModifierLabels[];\n\n\tconstructor(mac: ModifierLabels, windows: ModifierLabels, linux: ModifierLabels = windows) {\n\t\tthis.modifierLabels = [null!]; // index 0 will never me accessed.\n\t\tthis.modifierLabels[OperatingSystem.Macintosh] = mac;\n\t\tthis.modifierLabels[OperatingSystem.Windows] = windows;\n\t\tthis.modifierLabels[OperatingSystem.Linux] = linux;\n\t}\n\n\tpublic toLabel<T extends Modifiers>(OS: OperatingSystem, parts: T[], keyLabelProvider: KeyLabelProvider<T>): string | null {\n\t\tif (parts.length === 0) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst result: string[] = [];\n\t\tfor (let i = 0, len = parts.length; i < len; i++) {\n\t\t\tconst part = parts[i];\n\t\t\tconst keyLabel = keyLabelProvider(part);\n\t\t\tif (keyLabel === null) {\n\t\t\t\t// this keybinding cannot be expressed...\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tresult[i] = _simpleAsString(part, keyLabel, this.modifierLabels[OS]);\n\t\t}\n\t\treturn result.join(' ');\n\t}\n}\n\n/**\n * A label provider that prints modifiers in a suitable format for displaying in the UI.\n */\nexport const UILabelProvider = new ModifierLabelProvider(\n\t{\n\t\tctrlKey: '\\u2303',\n\t\tshiftKey: '⇧',\n\t\taltKey: '⌥',\n\t\tmetaKey: '⌘',\n\t\tseparator: '',\n\t},\n\t{\n\t\tctrlKey: nls.localize({ key: 'ctrlKey', comment: ['This is the short form for the Control key on the keyboard'] }, \"Ctrl\"),\n\t\tshiftKey: nls.localize({ key: 'shiftKey', comment: ['This is the short form for the Shift key on the keyboard'] }, \"Shift\"),\n\t\taltKey: nls.localize({ key: 'altKey', comment: ['This is the short form for the Alt key on the keyboard'] }, \"Alt\"),\n\t\tmetaKey: nls.localize({ key: 'windowsKey', comment: ['This is the short form for the Windows key on the keyboard'] }, \"Windows\"),\n\t\tseparator: '+',\n\t},\n\t{\n\t\tctrlKey: nls.localize({ key: 'ctrlKey', comment: ['This is the short form for the Control key on the keyboard'] }, \"Ctrl\"),\n\t\tshiftKey: nls.localize({ key: 'shiftKey', comment: ['This is the short form for the Shift key on the keyboard'] }, \"Shift\"),\n\t\taltKey: nls.localize({ key: 'altKey', comment: ['This is the short form for the Alt key on the keyboard'] }, \"Alt\"),\n\t\tmetaKey: nls.localize({ key: 'superKey', comment: ['This is the short form for the Super key on the keyboard'] }, \"Super\"),\n\t\tseparator: '+',\n\t}\n);\n\n/**\n * A label provider that prints modifiers in a suitable format for ARIA.\n */\nexport const AriaLabelProvider = new ModifierLabelProvider(\n\t{\n\t\tctrlKey: nls.localize({ key: 'ctrlKey.long', comment: ['This is the long form for the Control key on the keyboard'] }, \"Control\"),\n\t\tshiftKey: nls.localize({ key: 'shiftKey.long', comment: ['This is the long form for the Shift key on the keyboard'] }, \"Shift\"),\n\t\taltKey: nls.localize({ key: 'optKey.long', comment: ['This is the long form for the Alt/Option key on the keyboard'] }, \"Option\"),\n\t\tmetaKey: nls.localize({ key: 'cmdKey.long', comment: ['This is the long form for the Command key on the keyboard'] }, \"Command\"),\n\t\tseparator: '+',\n\t},\n\t{\n\t\tctrlKey: nls.localize({ key: 'ctrlKey.long', comment: ['This is the long form for the Control key on the keyboard'] }, \"Control\"),\n\t\tshiftKey: nls.localize({ key: 'shiftKey.long', comment: ['This is the long form for the Shift key on the keyboard'] }, \"Shift\"),\n\t\taltKey: nls.localize({ key: 'altKey.long', comment: ['This is the long form for the Alt key on the keyboard'] }, \"Alt\"),\n\t\tmetaKey: nls.localize({ key: 'windowsKey.long', comment: ['This is the long form for the Windows key on the keyboard'] }, \"Windows\"),\n\t\tseparator: '+',\n\t},\n\t{\n\t\tctrlKey: nls.localize({ key: 'ctrlKey.long', comment: ['This is the long form for the Control key on the keyboard'] }, \"Control\"),\n\t\tshiftKey: nls.localize({ key: 'shiftKey.long', comment: ['This is the long form for the Shift key on the keyboard'] }, \"Shift\"),\n\t\taltKey: nls.localize({ key: 'altKey.long', comment: ['This is the long form for the Alt key on the keyboard'] }, \"Alt\"),\n\t\tmetaKey: nls.localize({ key: 'superKey.long', comment: ['This is the long form for the Super key on the keyboard'] }, \"Super\"),\n\t\tseparator: '+',\n\t}\n);\n\n/**\n * A label provider that prints modifiers in a suitable format for Electron Accelerators.\n * See https://github.com/electron/electron/blob/master/docs/api/accelerator.md\n */\nexport const ElectronAcceleratorLabelProvider = new ModifierLabelProvider(\n\t{\n\t\tctrlKey: 'Ctrl',\n\t\tshiftKey: 'Shift',\n\t\taltKey: 'Alt',\n\t\tmetaKey: 'Cmd',\n\t\tseparator: '+',\n\t},\n\t{\n\t\tctrlKey: 'Ctrl',\n\t\tshiftKey: 'Shift',\n\t\taltKey: 'Alt',\n\t\tmetaKey: 'Super',\n\t\tseparator: '+',\n\t}\n);\n\n/**\n * A label provider that prints modifiers in a suitable format for user settings.\n */\nexport const UserSettingsLabelProvider = new ModifierLabelProvider(\n\t{\n\t\tctrlKey: 'ctrl',\n\t\tshiftKey: 'shift',\n\t\taltKey: 'alt',\n\t\tmetaKey: 'cmd',\n\t\tseparator: '+',\n\t},\n\t{\n\t\tctrlKey: 'ctrl',\n\t\tshiftKey: 'shift',\n\t\taltKey: 'alt',\n\t\tmetaKey: 'win',\n\t\tseparator: '+',\n\t},\n\t{\n\t\tctrlKey: 'ctrl',\n\t\tshiftKey: 'shift',\n\t\taltKey: 'alt',\n\t\tmetaKey: 'meta',\n\t\tseparator: '+',\n\t}\n);\n\nfunction _simpleAsString(modifiers: Modifiers, key: string, labels: ModifierLabels): string {\n\tif (key === null) {\n\t\treturn '';\n\t}\n\n\tconst result: string[] = [];\n\n\t// translate modifier keys: Ctrl-Shift-Alt-Meta\n\tif (modifiers.ctrlKey) {\n\t\tresult.push(labels.ctrlKey);\n\t}\n\n\tif (modifiers.shiftKey) {\n\t\tresult.push(labels.shiftKey);\n\t}\n\n\tif (modifiers.altKey) {\n\t\tresult.push(labels.altKey);\n\t}\n\n\tif (modifiers.metaKey) {\n\t\tresult.push(labels.metaKey);\n\t}\n\n\t// the actual key\n\tif (key !== '') {\n\t\tresult.push(key);\n\t}\n\n\treturn result.join(labels.separator);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as cp from 'child_process';\nimport { Stats } from 'fs';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport * as extpath from 'vs/base/common/extpath';\nimport { FileAccess } from 'vs/base/common/network';\nimport * as Objects from 'vs/base/common/objects';\nimport * as path from 'vs/base/common/path';\nimport * as Platform from 'vs/base/common/platform';\nimport * as process from 'vs/base/common/process';\nimport { CommandOptions, Executable, ForkOptions, Source, SuccessData, TerminateResponse, TerminateResponseCode } from 'vs/base/common/processes';\nimport * as Types from 'vs/base/common/types';\nimport { LineDecoder } from 'vs/base/node/decoder';\nimport * as pfs from 'vs/base/node/pfs';\nimport * as nls from 'vs/nls';\nexport { CommandOptions, ForkOptions, SuccessData, Source, TerminateResponse, TerminateResponseCode };\n\nexport type ValueCallback<T> = (value: T | Promise<T>) => void;\nexport type ErrorCallback = (error?: any) => void;\nexport type ProgressCallback<T> = (progress: T) => void;\n\nexport interface LineData {\n\tline: string;\n\tsource: Source;\n}\n\nfunction getWindowsCode(status: number): TerminateResponseCode {\n\tswitch (status) {\n\t\tcase 0:\n\t\t\treturn TerminateResponseCode.Success;\n\t\tcase 1:\n\t\t\treturn TerminateResponseCode.AccessDenied;\n\t\tcase 128:\n\t\t\treturn TerminateResponseCode.ProcessNotFound;\n\t\tdefault:\n\t\t\treturn TerminateResponseCode.Unknown;\n\t}\n}\n\nfunction terminateProcess(process: cp.ChildProcess, cwd?: string): Promise<TerminateResponse> {\n\tif (Platform.isWindows) {\n\t\ttry {\n\t\t\tconst options: any = {\n\t\t\t\tstdio: ['pipe', 'pipe', 'ignore']\n\t\t\t};\n\t\t\tif (cwd) {\n\t\t\t\toptions.cwd = cwd;\n\t\t\t}\n\t\t\tconst killProcess = cp.execFile('taskkill', ['/T', '/F', '/PID', process.pid.toString()], options);\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tkillProcess.once('error', (err) => {\n\t\t\t\t\tresolve({ success: false, error: err });\n\t\t\t\t});\n\t\t\t\tkillProcess.once('exit', (code, signal) => {\n\t\t\t\t\tif (code === 0) {\n\t\t\t\t\t\tresolve({ success: true });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve({ success: false, code: code !== null ? code : TerminateResponseCode.Unknown });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn Promise.resolve({ success: false, error: err, code: err.status ? getWindowsCode(err.status) : TerminateResponseCode.Unknown });\n\t\t}\n\t} else if (Platform.isLinux || Platform.isMacintosh) {\n\t\ttry {\n\t\t\tconst cmd = FileAccess.asFileUri('vs/base/node/terminateProcess.sh', require).fsPath;\n\t\t\treturn new Promise(resolve => {\n\t\t\t\tcp.execFile(cmd, [process.pid.toString()], { encoding: 'utf8', shell: true } as cp.ExecFileOptions, (err, stdout, stderr) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tresolve({ success: false, error: err });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve({ success: true });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t} catch (err) {\n\t\t\treturn Promise.resolve({ success: false, error: err });\n\t\t}\n\t} else {\n\t\tprocess.kill('SIGKILL');\n\t}\n\treturn Promise.resolve({ success: true });\n}\n\n/**\n * Remove dangerous environment variables that have caused crashes\n * in forked processes (i.e. in ELECTRON_RUN_AS_NODE processes)\n *\n * @param env The env object to change\n */\nexport function removeDangerousEnvVariables(env: NodeJS.ProcessEnv | undefined): void {\n\tif (!env) {\n\t\treturn;\n\t}\n\n\t// Unset `DEBUG`, as an invalid value might lead to process crashes\n\t// See https://github.com/microsoft/vscode/issues/130072\n\tdelete env['DEBUG'];\n\n\tif (Platform.isMacintosh) {\n\t\t// Unset `DYLD_LIBRARY_PATH`, as it leads to process crashes\n\t\t// See https://github.com/microsoft/vscode/issues/104525\n\t\t// See https://github.com/microsoft/vscode/issues/105848\n\t\tdelete env['DYLD_LIBRARY_PATH'];\n\t}\n\n\tif (Platform.isLinux) {\n\t\t// Unset `LD_PRELOAD`, as it might lead to process crashes\n\t\t// See https://github.com/microsoft/vscode/issues/134177\n\t\tdelete env['LD_PRELOAD'];\n\t}\n}\n\nexport function getWindowsShell(env = process.env as Platform.IProcessEnvironment): string {\n\treturn env['comspec'] || 'cmd.exe';\n}\n\nexport abstract class AbstractProcess<TProgressData> {\n\tprivate cmd: string;\n\tprivate args: string[];\n\tprivate options: CommandOptions | ForkOptions;\n\tprotected shell: boolean;\n\n\tprivate childProcess: cp.ChildProcess | null;\n\tprotected childProcessPromise: Promise<cp.ChildProcess> | null;\n\tprivate pidResolve: ValueCallback<number> | undefined;\n\tprotected terminateRequested: boolean;\n\n\tprivate static WellKnowCommands: IStringDictionary<boolean> = {\n\t\t'ant': true,\n\t\t'cmake': true,\n\t\t'eslint': true,\n\t\t'gradle': true,\n\t\t'grunt': true,\n\t\t'gulp': true,\n\t\t'jake': true,\n\t\t'jenkins': true,\n\t\t'jshint': true,\n\t\t'make': true,\n\t\t'maven': true,\n\t\t'msbuild': true,\n\t\t'msc': true,\n\t\t'nmake': true,\n\t\t'npm': true,\n\t\t'rake': true,\n\t\t'tsc': true,\n\t\t'xbuild': true\n\t};\n\n\tpublic constructor(executable: Executable);\n\tpublic constructor(cmd: string, args: string[] | undefined, shell: boolean, options: CommandOptions | undefined);\n\tpublic constructor(arg1: string | Executable, arg2?: string[], arg3?: boolean, arg4?: CommandOptions) {\n\t\tif (arg2 !== undefined && arg3 !== undefined && arg4 !== undefined) {\n\t\t\tthis.cmd = <string>arg1;\n\t\t\tthis.args = arg2;\n\t\t\tthis.shell = arg3;\n\t\t\tthis.options = arg4;\n\t\t} else {\n\t\t\tconst executable = <Executable>arg1;\n\t\t\tthis.cmd = executable.command;\n\t\t\tthis.shell = executable.isShellCommand;\n\t\t\tthis.args = executable.args.slice(0);\n\t\t\tthis.options = executable.options || {};\n\t\t}\n\n\t\tthis.childProcess = null;\n\t\tthis.childProcessPromise = null;\n\t\tthis.terminateRequested = false;\n\n\t\tif (this.options.env) {\n\t\t\tconst newEnv: IStringDictionary<string> = Object.create(null);\n\t\t\tObject.keys(process.env).forEach((key) => {\n\t\t\t\tnewEnv[key] = process.env[key]!;\n\t\t\t});\n\t\t\tObject.keys(this.options.env).forEach((key) => {\n\t\t\t\tnewEnv[key] = this.options.env![key]!;\n\t\t\t});\n\t\t\tthis.options.env = newEnv;\n\t\t}\n\t}\n\n\tpublic getSanitizedCommand(): string {\n\t\tlet result = this.cmd.toLowerCase();\n\t\tconst index = result.lastIndexOf(path.sep);\n\t\tif (index !== -1) {\n\t\t\tresult = result.substring(index + 1);\n\t\t}\n\t\tif (AbstractProcess.WellKnowCommands[result]) {\n\t\t\treturn result;\n\t\t}\n\t\treturn 'other';\n\t}\n\n\tpublic start(pp: ProgressCallback<TProgressData>): Promise<SuccessData> {\n\t\tif (Platform.isWindows && ((this.options && this.options.cwd && extpath.isUNC(this.options.cwd)) || !this.options && extpath.isUNC(process.cwd()))) {\n\t\t\treturn Promise.reject(new Error(nls.localize('TaskRunner.UNC', 'Can\\'t execute a shell command on a UNC drive.')));\n\t\t}\n\t\treturn this.useExec().then((useExec) => {\n\t\t\tlet cc: ValueCallback<SuccessData>;\n\t\t\tlet ee: ErrorCallback;\n\t\t\tconst result = new Promise<any>((c, e) => {\n\t\t\t\tcc = c;\n\t\t\t\tee = e;\n\t\t\t});\n\n\t\t\tif (useExec) {\n\t\t\t\tlet cmd: string = this.cmd;\n\t\t\t\tif (this.args) {\n\t\t\t\t\tcmd = cmd + ' ' + this.args.join(' ');\n\t\t\t\t}\n\t\t\t\tthis.childProcess = cp.exec(cmd, this.options, (error, stdout, stderr) => {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\tconst err: any = error;\n\t\t\t\t\t// This is tricky since executing a command shell reports error back in case the executed command return an\n\t\t\t\t\t// error or the command didn't exist at all. So we can't blindly treat an error as a failed command. So we\n\t\t\t\t\t// always parse the output and report success unless the job got killed.\n\t\t\t\t\tif (err && err.killed) {\n\t\t\t\t\t\tee({ killed: this.terminateRequested, stdout: stdout.toString(), stderr: stderr.toString() });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.handleExec(cc, pp, error, stdout as any, stderr as any);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlet childProcess: cp.ChildProcess | null = null;\n\t\t\t\tconst closeHandler = (data: any) => {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\tthis.childProcessPromise = null;\n\t\t\t\t\tthis.handleClose(data, cc, pp, ee);\n\t\t\t\t\tconst result: SuccessData = {\n\t\t\t\t\t\tterminated: this.terminateRequested\n\t\t\t\t\t};\n\t\t\t\t\tif (Types.isNumber(data)) {\n\t\t\t\t\t\tresult.cmdCode = <number>data;\n\t\t\t\t\t}\n\t\t\t\t\tcc(result);\n\t\t\t\t};\n\t\t\t\tif (this.shell && Platform.isWindows) {\n\t\t\t\t\tconst options: any = Objects.deepClone(this.options);\n\t\t\t\t\toptions.windowsVerbatimArguments = true;\n\t\t\t\t\toptions.detached = false;\n\t\t\t\t\tlet quotedCommand: boolean = false;\n\t\t\t\t\tlet quotedArg: boolean = false;\n\t\t\t\t\tconst commandLine: string[] = [];\n\t\t\t\t\tlet quoted = this.ensureQuotes(this.cmd);\n\t\t\t\t\tcommandLine.push(quoted.value);\n\t\t\t\t\tquotedCommand = quoted.quoted;\n\t\t\t\t\tif (this.args) {\n\t\t\t\t\t\tthis.args.forEach((elem) => {\n\t\t\t\t\t\t\tquoted = this.ensureQuotes(elem);\n\t\t\t\t\t\t\tcommandLine.push(quoted.value);\n\t\t\t\t\t\t\tquotedArg = quotedArg && quoted.quoted;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tconst args: string[] = [\n\t\t\t\t\t\t'/s',\n\t\t\t\t\t\t'/c',\n\t\t\t\t\t];\n\t\t\t\t\tif (quotedCommand) {\n\t\t\t\t\t\tif (quotedArg) {\n\t\t\t\t\t\t\targs.push('\"' + commandLine.join(' ') + '\"');\n\t\t\t\t\t\t} else if (commandLine.length > 1) {\n\t\t\t\t\t\t\targs.push('\"' + commandLine[0] + '\"' + ' ' + commandLine.slice(1).join(' '));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\targs.push('\"' + commandLine[0] + '\"');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\targs.push(commandLine.join(' '));\n\t\t\t\t\t}\n\t\t\t\t\tchildProcess = cp.spawn(getWindowsShell(), args, options);\n\t\t\t\t} else {\n\t\t\t\t\tif (this.cmd) {\n\t\t\t\t\t\tchildProcess = cp.spawn(this.cmd, this.args, this.options);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (childProcess) {\n\t\t\t\t\tthis.childProcess = childProcess;\n\t\t\t\t\tthis.childProcessPromise = Promise.resolve(childProcess);\n\t\t\t\t\tif (this.pidResolve) {\n\t\t\t\t\t\tthis.pidResolve(Types.isNumber(childProcess.pid) ? childProcess.pid : -1);\n\t\t\t\t\t\tthis.pidResolve = undefined;\n\t\t\t\t\t}\n\t\t\t\t\tchildProcess.on('error', (error: Error) => {\n\t\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t\t\tee({ terminated: this.terminateRequested, error: error });\n\t\t\t\t\t});\n\t\t\t\t\tif (childProcess.pid) {\n\t\t\t\t\t\tthis.childProcess.on('close', closeHandler);\n\t\t\t\t\t\tthis.handleSpawn(childProcess, cc!, pp, ee!, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tprotected abstract handleExec(cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, error: Error | null, stdout: Buffer, stderr: Buffer): void;\n\tprotected abstract handleSpawn(childProcess: cp.ChildProcess, cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, ee: ErrorCallback, sync: boolean): void;\n\n\tprotected handleClose(data: any, cc: ValueCallback<SuccessData>, pp: ProgressCallback<TProgressData>, ee: ErrorCallback): void {\n\t\t// Default is to do nothing.\n\t}\n\n\tprivate static readonly regexp = /^[^\"].* .*[^\"]/;\n\tprivate ensureQuotes(value: string) {\n\t\tif (AbstractProcess.regexp.test(value)) {\n\t\t\treturn {\n\t\t\t\tvalue: '\"' + value + '\"', //`\"${value}\"`,\n\t\t\t\tquoted: true\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t\tvalue: value,\n\t\t\t\tquoted: value.length > 0 && value[0] === '\"' && value[value.length - 1] === '\"'\n\t\t\t};\n\t\t}\n\t}\n\n\tpublic get pid(): Promise<number> {\n\t\tif (this.childProcessPromise) {\n\t\t\treturn this.childProcessPromise.then(childProcess => childProcess.pid, err => -1);\n\t\t} else {\n\t\t\treturn new Promise<number>((resolve) => {\n\t\t\t\tthis.pidResolve = resolve;\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic terminate(): Promise<TerminateResponse> {\n\t\tif (!this.childProcessPromise) {\n\t\t\treturn Promise.resolve<TerminateResponse>({ success: true });\n\t\t}\n\t\treturn this.childProcessPromise.then((childProcess) => {\n\t\t\tthis.terminateRequested = true;\n\t\t\treturn terminateProcess(childProcess, this.options.cwd).then(response => {\n\t\t\t\tif (response.success) {\n\t\t\t\t\tthis.childProcess = null;\n\t\t\t\t}\n\t\t\t\treturn response;\n\t\t\t});\n\t\t}, (err) => {\n\t\t\treturn { success: true };\n\t\t});\n\t}\n\n\tprivate useExec(): Promise<boolean> {\n\t\treturn new Promise<boolean>(resolve => {\n\t\t\tif (!this.shell || !Platform.isWindows) {\n\t\t\t\treturn resolve(false);\n\t\t\t}\n\t\t\tconst cmdShell = cp.spawn(getWindowsShell(), ['/s', '/c']);\n\t\t\tcmdShell.on('error', (error: Error) => {\n\t\t\t\treturn resolve(true);\n\t\t\t});\n\t\t\tcmdShell.on('exit', (data: any) => {\n\t\t\t\treturn resolve(false);\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport class LineProcess extends AbstractProcess<LineData> {\n\n\tprivate stdoutLineDecoder: LineDecoder | null;\n\tprivate stderrLineDecoder: LineDecoder | null;\n\n\tpublic constructor(executable: Executable);\n\tpublic constructor(cmd: string, args: string[], shell: boolean, options: CommandOptions);\n\tpublic constructor(arg1: string | Executable, arg2?: string[], arg3?: boolean | ForkOptions, arg4?: CommandOptions) {\n\t\tsuper(<any>arg1, arg2, <any>arg3, arg4);\n\n\t\tthis.stdoutLineDecoder = null;\n\t\tthis.stderrLineDecoder = null;\n\t}\n\n\tprotected handleExec(cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, error: Error, stdout: Buffer, stderr: Buffer) {\n\t\t[stdout, stderr].forEach((buffer: Buffer, index: number) => {\n\t\t\tconst lineDecoder = new LineDecoder();\n\t\t\tconst lines = lineDecoder.write(buffer);\n\t\t\tlines.forEach((line) => {\n\t\t\t\tpp({ line: line, source: index === 0 ? Source.stdout : Source.stderr });\n\t\t\t});\n\t\t\tconst line = lineDecoder.end();\n\t\t\tif (line) {\n\t\t\t\tpp({ line: line, source: index === 0 ? Source.stdout : Source.stderr });\n\t\t\t}\n\t\t});\n\t\tcc({ terminated: this.terminateRequested, error: error });\n\t}\n\n\tprotected handleSpawn(childProcess: cp.ChildProcess, cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, ee: ErrorCallback, sync: boolean): void {\n\t\tconst stdoutLineDecoder = new LineDecoder();\n\t\tconst stderrLineDecoder = new LineDecoder();\n\t\tchildProcess.stdout!.on('data', (data: Buffer) => {\n\t\t\tconst lines = stdoutLineDecoder.write(data);\n\t\t\tlines.forEach(line => pp({ line: line, source: Source.stdout }));\n\t\t});\n\t\tchildProcess.stderr!.on('data', (data: Buffer) => {\n\t\t\tconst lines = stderrLineDecoder.write(data);\n\t\t\tlines.forEach(line => pp({ line: line, source: Source.stderr }));\n\t\t});\n\n\t\tthis.stdoutLineDecoder = stdoutLineDecoder;\n\t\tthis.stderrLineDecoder = stderrLineDecoder;\n\t}\n\n\tprotected override handleClose(data: any, cc: ValueCallback<SuccessData>, pp: ProgressCallback<LineData>, ee: ErrorCallback): void {\n\t\tconst stdoutLine = this.stdoutLineDecoder ? this.stdoutLineDecoder.end() : null;\n\t\tif (stdoutLine) {\n\t\t\tpp({ line: stdoutLine, source: Source.stdout });\n\t\t}\n\t\tconst stderrLine = this.stderrLineDecoder ? this.stderrLineDecoder.end() : null;\n\t\tif (stderrLine) {\n\t\t\tpp({ line: stderrLine, source: Source.stderr });\n\t\t}\n\t}\n}\n\nexport interface IQueuedSender {\n\tsend: (msg: any) => void;\n}\n\n// Wrapper around process.send() that will queue any messages if the internal node.js\n// queue is filled with messages and only continue sending messages when the internal\n// queue is free again to consume messages.\n// On Windows we always wait for the send() method to return before sending the next message\n// to workaround https://github.com/nodejs/node/issues/7657 (IPC can freeze process)\nexport function createQueuedSender(childProcess: cp.ChildProcess): IQueuedSender {\n\tlet msgQueue: string[] = [];\n\tlet useQueue = false;\n\n\tconst send = function (msg: any): void {\n\t\tif (useQueue) {\n\t\t\tmsgQueue.push(msg); // add to the queue if the process cannot handle more messages\n\t\t\treturn;\n\t\t}\n\n\t\tconst result = childProcess.send(msg, (error: Error | null) => {\n\t\t\tif (error) {\n\t\t\t\tconsole.error(error); // unlikely to happen, best we can do is log this error\n\t\t\t}\n\n\t\t\tuseQueue = false; // we are good again to send directly without queue\n\n\t\t\t// now send all the messages that we have in our queue and did not send yet\n\t\t\tif (msgQueue.length > 0) {\n\t\t\t\tconst msgQueueCopy = msgQueue.slice(0);\n\t\t\t\tmsgQueue = [];\n\t\t\t\tmsgQueueCopy.forEach(entry => send(entry));\n\t\t\t}\n\t\t});\n\n\t\tif (!result || Platform.isWindows /* workaround https://github.com/nodejs/node/issues/7657 */) {\n\t\t\tuseQueue = true;\n\t\t}\n\t};\n\n\treturn { send };\n}\n\nexport namespace win32 {\n\texport async function findExecutable(command: string, cwd?: string, paths?: string[]): Promise<string> {\n\t\t// If we have an absolute path then we take it.\n\t\tif (path.isAbsolute(command)) {\n\t\t\treturn command;\n\t\t}\n\t\tif (cwd === undefined) {\n\t\t\tcwd = process.cwd();\n\t\t}\n\t\tconst dir = path.dirname(command);\n\t\tif (dir !== '.') {\n\t\t\t// We have a directory and the directory is relative (see above). Make the path absolute\n\t\t\t// to the current working directory.\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\t\tif (paths === undefined && Types.isString(process.env['PATH'])) {\n\t\t\tpaths = process.env['PATH'].split(path.delimiter);\n\t\t}\n\t\t// No PATH environment. Make path absolute to the cwd.\n\t\tif (paths === undefined || paths.length === 0) {\n\t\t\treturn path.join(cwd, command);\n\t\t}\n\n\t\tasync function fileExists(path: string): Promise<boolean> {\n\t\t\tif (await pfs.Promises.exists(path)) {\n\t\t\t\tlet statValue: Stats | undefined;\n\t\t\t\ttry {\n\t\t\t\t\tstatValue = await pfs.Promises.stat(path);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (e.message.startsWith('EACCES')) {\n\t\t\t\t\t\t// it might be symlink\n\t\t\t\t\t\tstatValue = await pfs.Promises.lstat(path);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn statValue ? !statValue.isDirectory() : false;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t// We have a simple file name. We get the path variable from the env\n\t\t// and try to find the executable on the path.\n\t\tfor (let pathEntry of paths) {\n\t\t\t// The path entry is absolute.\n\t\t\tlet fullPath: string;\n\t\t\tif (path.isAbsolute(pathEntry)) {\n\t\t\t\tfullPath = path.join(pathEntry, command);\n\t\t\t} else {\n\t\t\t\tfullPath = path.join(cwd, pathEntry, command);\n\t\t\t}\n\t\t\tif (await fileExists(fullPath)) {\n\t\t\t\treturn fullPath;\n\t\t\t}\n\t\t\tlet withExtension = fullPath + '.com';\n\t\t\tif (await fileExists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t\twithExtension = fullPath + '.exe';\n\t\t\tif (await fileExists(withExtension)) {\n\t\t\t\treturn withExtension;\n\t\t\t}\n\t\t}\n\t\treturn path.join(cwd, command);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { release, userInfo } from 'os';\nimport * as platform from 'vs/base/common/platform';\nimport { getFirstAvailablePowerShellInstallation } from 'vs/base/node/powershell';\nimport * as processes from 'vs/base/node/processes';\n\n/**\n * Gets the detected default shell for the _system_, not to be confused with VS Code's _default_\n * shell that the terminal uses by default.\n * @param os The platform to detect the shell of.\n */\nexport async function getSystemShell(os: platform.OperatingSystem, env: platform.IProcessEnvironment): Promise<string> {\n\tif (os === platform.OperatingSystem.Windows) {\n\t\tif (platform.isWindows) {\n\t\t\treturn getSystemShellWindows();\n\t\t}\n\t\t// Don't detect Windows shell when not on Windows\n\t\treturn processes.getWindowsShell(env);\n\t}\n\n\treturn getSystemShellUnixLike(os, env);\n}\n\nexport function getSystemShellSync(os: platform.OperatingSystem, env: platform.IProcessEnvironment): string {\n\tif (os === platform.OperatingSystem.Windows) {\n\t\tif (platform.isWindows) {\n\t\t\treturn getSystemShellWindowsSync(env);\n\t\t}\n\t\t// Don't detect Windows shell when not on Windows\n\t\treturn processes.getWindowsShell(env);\n\t}\n\n\treturn getSystemShellUnixLike(os, env);\n}\n\nlet _TERMINAL_DEFAULT_SHELL_UNIX_LIKE: string | null = null;\nfunction getSystemShellUnixLike(os: platform.OperatingSystem, env: platform.IProcessEnvironment): string {\n\t// Only use $SHELL for the current OS\n\tif (platform.isLinux && os === platform.OperatingSystem.Macintosh || platform.isMacintosh && os === platform.OperatingSystem.Linux) {\n\t\treturn '/bin/bash';\n\t}\n\n\tif (!_TERMINAL_DEFAULT_SHELL_UNIX_LIKE) {\n\t\tlet unixLikeTerminal: string | undefined;\n\t\tif (platform.isWindows) {\n\t\t\tunixLikeTerminal = '/bin/bash'; // for WSL\n\t\t} else {\n\t\t\tunixLikeTerminal = env['SHELL'];\n\n\t\t\tif (!unixLikeTerminal) {\n\t\t\t\ttry {\n\t\t\t\t\t// It's possible for $SHELL to be unset, this API reads /etc/passwd. See https://github.com/github/codespaces/issues/1639\n\t\t\t\t\t// Node docs: \"Throws a SystemError if a user has no username or homedir.\"\n\t\t\t\t\tunixLikeTerminal = userInfo().shell;\n\t\t\t\t} catch (err) { }\n\t\t\t}\n\n\t\t\tif (!unixLikeTerminal) {\n\t\t\t\tunixLikeTerminal = 'sh';\n\t\t\t}\n\n\t\t\t// Some systems have $SHELL set to /bin/false which breaks the terminal\n\t\t\tif (unixLikeTerminal === '/bin/false') {\n\t\t\t\tunixLikeTerminal = '/bin/bash';\n\t\t\t}\n\t\t}\n\t\t_TERMINAL_DEFAULT_SHELL_UNIX_LIKE = unixLikeTerminal;\n\t}\n\treturn _TERMINAL_DEFAULT_SHELL_UNIX_LIKE;\n}\n\nlet _TERMINAL_DEFAULT_SHELL_WINDOWS: string | null = null;\nasync function getSystemShellWindows(): Promise<string> {\n\tif (!_TERMINAL_DEFAULT_SHELL_WINDOWS) {\n\t\t_TERMINAL_DEFAULT_SHELL_WINDOWS = (await getFirstAvailablePowerShellInstallation())!.exePath;\n\t}\n\treturn _TERMINAL_DEFAULT_SHELL_WINDOWS;\n}\n\nfunction getSystemShellWindowsSync(env: platform.IProcessEnvironment): string {\n\tif (_TERMINAL_DEFAULT_SHELL_WINDOWS) {\n\t\treturn _TERMINAL_DEFAULT_SHELL_WINDOWS;\n\t}\n\n\tconst isAtLeastWindows10 = platform.isWindows && parseFloat(release()) >= 10;\n\tconst is32ProcessOn64Windows = env.hasOwnProperty('PROCESSOR_ARCHITEW6432');\n\tconst powerShellPath = `${env['windir']}\\\\${is32ProcessOn64Windows ? 'Sysnative' : 'System32'}\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe`;\n\treturn isAtLeastWindows10 ? powerShellPath : processes.getWindowsShell(env);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ChildProcess, fork, ForkOptions } from 'child_process';\nimport { createCancelablePromise, Delayer } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { isRemoteConsoleLog, log } from 'vs/base/common/console';\nimport * as errors from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { dispose, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { deepClone } from 'vs/base/common/objects';\nimport { createQueuedSender, removeDangerousEnvVariables } from 'vs/base/node/processes';\nimport { ChannelClient as IPCClient, ChannelServer as IPCServer, IChannel, IChannelClient } from 'vs/base/parts/ipc/common/ipc';\n\n/**\n * This implementation doesn't perform well since it uses base64 encoding for buffers.\n * We should move all implementations to use named ipc.net, so we stop depending on cp.fork.\n */\n\nexport class Server<TContext extends string> extends IPCServer<TContext> {\n\tconstructor(ctx: TContext) {\n\t\tsuper({\n\t\t\tsend: r => {\n\t\t\t\ttry {\n\t\t\t\t\tif (process.send) {\n\t\t\t\t\t\tprocess.send((<Buffer>r.buffer).toString('base64'));\n\t\t\t\t\t}\n\t\t\t\t} catch (e) { /* not much to do */ }\n\t\t\t},\n\t\t\tonMessage: Event.fromNodeEventEmitter(process, 'message', msg => VSBuffer.wrap(Buffer.from(msg, 'base64')))\n\t\t}, ctx);\n\n\t\tprocess.once('disconnect', () => this.dispose());\n\t}\n}\n\nexport interface IIPCOptions {\n\n\t/**\n\t * A descriptive name for the server this connection is to. Used in logging.\n\t */\n\tserverName: string;\n\n\t/**\n\t * Time in millies before killing the ipc process. The next request after killing will start it again.\n\t */\n\ttimeout?: number;\n\n\t/**\n\t * Arguments to the module to execute.\n\t */\n\targs?: string[];\n\n\t/**\n\t * Environment key-value pairs to be passed to the process that gets spawned for the ipc.\n\t */\n\tenv?: any;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application executed.\n\t */\n\tdebug?: number;\n\n\t/**\n\t * Allows to assign a debug port for debugging the application and breaking it on the first line.\n\t */\n\tdebugBrk?: number;\n\n\t/**\n\t * If set, starts the fork with empty execArgv. If not set, execArgv from the parent process are inherited,\n\t * except --inspect= and --inspect-brk= which are filtered as they would result in a port conflict.\n\t */\n\tfreshExecArgv?: boolean;\n\n\t/**\n\t * Enables our createQueuedSender helper for this Client. Uses a queue when the internal Node.js queue is\n\t * full of messages - see notes on that method.\n\t */\n\tuseQueue?: boolean;\n}\n\nexport class Client implements IChannelClient, IDisposable {\n\n\tprivate disposeDelayer: Delayer<void> | undefined;\n\tprivate activeRequests = new Set<IDisposable>();\n\tprivate child: ChildProcess | null;\n\tprivate _client: IPCClient | null;\n\tprivate channels = new Map<string, IChannel>();\n\n\tprivate readonly _onDidProcessExit = new Emitter<{ code: number, signal: string }>();\n\treadonly onDidProcessExit = this._onDidProcessExit.event;\n\n\tconstructor(private modulePath: string, private options: IIPCOptions) {\n\t\tconst timeout = options && options.timeout ? options.timeout : 60000;\n\t\tthis.disposeDelayer = new Delayer<void>(timeout);\n\t\tthis.child = null;\n\t\tthis._client = null;\n\t}\n\n\tgetChannel<T extends IChannel>(channelName: string): T {\n\t\tconst that = this;\n\n\t\treturn {\n\t\t\tcall<T>(command: string, arg?: any, cancellationToken?: CancellationToken): Promise<T> {\n\t\t\t\treturn that.requestPromise<T>(channelName, command, arg, cancellationToken);\n\t\t\t},\n\t\t\tlisten(event: string, arg?: any) {\n\t\t\t\treturn that.requestEvent(channelName, event, arg);\n\t\t\t}\n\t\t} as T;\n\t}\n\n\tprotected requestPromise<T>(channelName: string, name: string, arg?: any, cancellationToken = CancellationToken.None): Promise<T> {\n\t\tif (!this.disposeDelayer) {\n\t\t\treturn Promise.reject(new Error('disposed'));\n\t\t}\n\n\t\tif (cancellationToken.isCancellationRequested) {\n\t\t\treturn Promise.reject(errors.canceled());\n\t\t}\n\n\t\tthis.disposeDelayer.cancel();\n\n\t\tconst channel = this.getCachedChannel(channelName);\n\t\tconst result = createCancelablePromise(token => channel.call<T>(name, arg, token));\n\t\tconst cancellationTokenListener = cancellationToken.onCancellationRequested(() => result.cancel());\n\n\t\tconst disposable = toDisposable(() => result.cancel());\n\t\tthis.activeRequests.add(disposable);\n\n\t\tresult.finally(() => {\n\t\t\tcancellationTokenListener.dispose();\n\t\t\tthis.activeRequests.delete(disposable);\n\n\t\t\tif (this.activeRequests.size === 0 && this.disposeDelayer) {\n\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t}\n\t\t});\n\n\t\treturn result;\n\t}\n\n\tprotected requestEvent<T>(channelName: string, name: string, arg?: any): Event<T> {\n\t\tif (!this.disposeDelayer) {\n\t\t\treturn Event.None;\n\t\t}\n\n\t\tthis.disposeDelayer.cancel();\n\n\t\tlet listener: IDisposable;\n\t\tconst emitter = new Emitter<any>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tconst channel = this.getCachedChannel(channelName);\n\t\t\t\tconst event: Event<T> = channel.listen(name, arg);\n\n\t\t\t\tlistener = event(emitter.fire, emitter);\n\t\t\t\tthis.activeRequests.add(listener);\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tthis.activeRequests.delete(listener);\n\t\t\t\tlistener.dispose();\n\n\t\t\t\tif (this.activeRequests.size === 0 && this.disposeDelayer) {\n\t\t\t\t\tthis.disposeDelayer.trigger(() => this.disposeClient());\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate get client(): IPCClient {\n\t\tif (!this._client) {\n\t\t\tconst args = this.options && this.options.args ? this.options.args : [];\n\t\t\tconst forkOpts: ForkOptions = Object.create(null);\n\n\t\t\tforkOpts.env = { ...deepClone(process.env), 'VSCODE_PARENT_PID': String(process.pid) };\n\n\t\t\tif (this.options && this.options.env) {\n\t\t\t\tforkOpts.env = { ...forkOpts.env, ...this.options.env };\n\t\t\t}\n\n\t\t\tif (this.options && this.options.freshExecArgv) {\n\t\t\t\tforkOpts.execArgv = [];\n\t\t\t}\n\n\t\t\tif (this.options && typeof this.options.debug === 'number') {\n\t\t\t\tforkOpts.execArgv = ['--nolazy', '--inspect=' + this.options.debug];\n\t\t\t}\n\n\t\t\tif (this.options && typeof this.options.debugBrk === 'number') {\n\t\t\t\tforkOpts.execArgv = ['--nolazy', '--inspect-brk=' + this.options.debugBrk];\n\t\t\t}\n\n\t\t\tif (forkOpts.execArgv === undefined) {\n\t\t\t\t// if not set, the forked process inherits the execArgv of the parent process\n\t\t\t\t// --inspect and --inspect-brk can not be inherited as the port would conflict\n\t\t\t\tforkOpts.execArgv = process.execArgv.filter(a => !/^--inspect(-brk)?=/.test(a)); // remove\n\t\t\t}\n\n\t\t\tremoveDangerousEnvVariables(forkOpts.env);\n\n\t\t\tthis.child = fork(this.modulePath, args, forkOpts);\n\n\t\t\tconst onMessageEmitter = new Emitter<VSBuffer>();\n\t\t\tconst onRawMessage = Event.fromNodeEventEmitter(this.child, 'message', msg => msg);\n\n\t\t\tonRawMessage(msg => {\n\n\t\t\t\t// Handle remote console logs specially\n\t\t\t\tif (isRemoteConsoleLog(msg)) {\n\t\t\t\t\tlog(msg, `IPC Library: ${this.options.serverName}`);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Anything else goes to the outside\n\t\t\t\tonMessageEmitter.fire(VSBuffer.wrap(Buffer.from(msg, 'base64')));\n\t\t\t});\n\n\t\t\tconst sender = this.options.useQueue ? createQueuedSender(this.child) : this.child;\n\t\t\tconst send = (r: VSBuffer) => this.child && this.child.connected && sender.send((<Buffer>r.buffer).toString('base64'));\n\t\t\tconst onMessage = onMessageEmitter.event;\n\t\t\tconst protocol = { send, onMessage };\n\n\t\t\tthis._client = new IPCClient(protocol);\n\n\t\t\tconst onExit = () => this.disposeClient();\n\t\t\tprocess.once('exit', onExit);\n\n\t\t\tthis.child.on('error', err => console.warn('IPC \"' + this.options.serverName + '\" errored with ' + err));\n\n\t\t\tthis.child.on('exit', (code: any, signal: any) => {\n\t\t\t\tprocess.removeListener('exit' as 'loaded', onExit); // https://github.com/electron/electron/issues/21475\n\n\t\t\t\tthis.activeRequests.forEach(r => dispose(r));\n\t\t\t\tthis.activeRequests.clear();\n\n\t\t\t\tif (code !== 0 && signal !== 'SIGTERM') {\n\t\t\t\t\tconsole.warn('IPC \"' + this.options.serverName + '\" crashed with exit code ' + code + ' and signal ' + signal);\n\t\t\t\t}\n\n\t\t\t\tif (this.disposeDelayer) {\n\t\t\t\t\tthis.disposeDelayer.cancel();\n\t\t\t\t}\n\t\t\t\tthis.disposeClient();\n\t\t\t\tthis._onDidProcessExit.fire({ code, signal });\n\t\t\t});\n\t\t}\n\n\t\treturn this._client;\n\t}\n\n\tprivate getCachedChannel(name: string): IChannel {\n\t\tlet channel = this.channels.get(name);\n\n\t\tif (!channel) {\n\t\t\tchannel = this.client.getChannel(name);\n\t\t\tthis.channels.set(name, channel);\n\t\t}\n\n\t\treturn channel;\n\t}\n\n\tprivate disposeClient() {\n\t\tif (this._client) {\n\t\t\tif (this.child) {\n\t\t\t\tthis.child.kill();\n\t\t\t\tthis.child = null;\n\t\t\t}\n\t\t\tthis._client = null;\n\t\t\tthis.channels.clear();\n\t\t}\n\t}\n\n\tdispose() {\n\t\tthis._onDidProcessExit.dispose();\n\t\tif (this.disposeDelayer) {\n\t\t\tthis.disposeDelayer.cancel();\n\t\t\tthis.disposeDelayer = undefined;\n\t\t}\n\t\tthis.disposeClient();\n\t\tthis.activeRequests.clear();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IAttachSessionEvent, ICloseSessionEvent, IExtensionHostDebugService, IOpenExtensionWindowResult, IReloadSessionEvent, ITerminateSessionEvent } from 'vs/platform/debug/common/extensionHostDebug';\n\nexport class ExtensionHostDebugBroadcastChannel<TContext> implements IServerChannel<TContext> {\n\n\tstatic readonly ChannelName = 'extensionhostdebugservice';\n\n\tprivate readonly _onCloseEmitter = new Emitter<ICloseSessionEvent>();\n\tprivate readonly _onReloadEmitter = new Emitter<IReloadSessionEvent>();\n\tprivate readonly _onTerminateEmitter = new Emitter<ITerminateSessionEvent>();\n\tprivate readonly _onAttachEmitter = new Emitter<IAttachSessionEvent>();\n\n\tcall(ctx: TContext, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'close':\n\t\t\t\treturn Promise.resolve(this._onCloseEmitter.fire({ sessionId: arg[0] }));\n\t\t\tcase 'reload':\n\t\t\t\treturn Promise.resolve(this._onReloadEmitter.fire({ sessionId: arg[0] }));\n\t\t\tcase 'terminate':\n\t\t\t\treturn Promise.resolve(this._onTerminateEmitter.fire({ sessionId: arg[0] }));\n\t\t\tcase 'attach':\n\t\t\t\treturn Promise.resolve(this._onAttachEmitter.fire({ sessionId: arg[0], port: arg[1], subId: arg[2] }));\n\t\t}\n\t\tthrow new Error('Method not implemented.');\n\t}\n\n\tlisten(ctx: TContext, event: string, arg?: any): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'close':\n\t\t\t\treturn this._onCloseEmitter.event;\n\t\t\tcase 'reload':\n\t\t\t\treturn this._onReloadEmitter.event;\n\t\t\tcase 'terminate':\n\t\t\t\treturn this._onTerminateEmitter.event;\n\t\t\tcase 'attach':\n\t\t\t\treturn this._onAttachEmitter.event;\n\t\t}\n\t\tthrow new Error('Method not implemented.');\n\t}\n}\n\nexport class ExtensionHostDebugChannelClient extends Disposable implements IExtensionHostDebugService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private channel: IChannel) {\n\t\tsuper();\n\t}\n\n\treload(sessionId: string): void {\n\t\tthis.channel.call('reload', [sessionId]);\n\t}\n\n\tget onReload(): Event<IReloadSessionEvent> {\n\t\treturn this.channel.listen('reload');\n\t}\n\n\tclose(sessionId: string): void {\n\t\tthis.channel.call('close', [sessionId]);\n\t}\n\n\tget onClose(): Event<ICloseSessionEvent> {\n\t\treturn this.channel.listen('close');\n\t}\n\n\tattachSession(sessionId: string, port: number, subId?: string): void {\n\t\tthis.channel.call('attach', [sessionId, port, subId]);\n\t}\n\n\tget onAttachSession(): Event<IAttachSessionEvent> {\n\t\treturn this.channel.listen('attach');\n\t}\n\n\tterminateSession(sessionId: string, subId?: string): void {\n\t\tthis.channel.call('terminate', [sessionId, subId]);\n\t}\n\n\tget onTerminateSession(): Event<ITerminateSessionEvent> {\n\t\treturn this.channel.listen('terminate');\n\t}\n\n\topenExtensionDevelopmentHostWindow(args: string[], debugRenderer: boolean): Promise<IOpenExtensionWindowResult> {\n\t\treturn this.channel.call('openExtensionDevelopmentHostWindow', [args, debugRenderer]);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IDriverOptions, IElement, ILocaleInfo, ILocalizedStrings as ILocalizedStrings, IWindowDriver, IWindowDriverRegistry } from 'vs/platform/driver/common/driver';\n\nexport class WindowDriverChannel implements IServerChannel {\n\n\tconstructor(private driver: IWindowDriver) { }\n\n\tlisten<T>(_: unknown, event: string): Event<T> {\n\t\tthrow new Error(`No event found: ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'click': return this.driver.click(arg[0], arg[1], arg[2]);\n\t\t\tcase 'doubleClick': return this.driver.doubleClick(arg);\n\t\t\tcase 'setValue': return this.driver.setValue(arg[0], arg[1]);\n\t\t\tcase 'getTitle': return this.driver.getTitle();\n\t\t\tcase 'isActiveElement': return this.driver.isActiveElement(arg);\n\t\t\tcase 'getElements': return this.driver.getElements(arg[0], arg[1]);\n\t\t\tcase 'getElementXY': return this.driver.getElementXY(arg[0], arg[1], arg[2]);\n\t\t\tcase 'typeInEditor': return this.driver.typeInEditor(arg[0], arg[1]);\n\t\t\tcase 'getTerminalBuffer': return this.driver.getTerminalBuffer(arg);\n\t\t\tcase 'writeInTerminal': return this.driver.writeInTerminal(arg[0], arg[1]);\n\t\t\tcase 'getLocaleInfo': return this.driver.getLocaleInfo();\n\t\t\tcase 'getLocalizedStrings': return this.driver.getLocalizedStrings();\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n}\n\nexport class WindowDriverChannelClient implements IWindowDriver {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private channel: IChannel) { }\n\n\tclick(selector: string, xoffset?: number, yoffset?: number): Promise<void> {\n\t\treturn this.channel.call('click', [selector, xoffset, yoffset]);\n\t}\n\n\tdoubleClick(selector: string): Promise<void> {\n\t\treturn this.channel.call('doubleClick', selector);\n\t}\n\n\tsetValue(selector: string, text: string): Promise<void> {\n\t\treturn this.channel.call('setValue', [selector, text]);\n\t}\n\n\tgetTitle(): Promise<string> {\n\t\treturn this.channel.call('getTitle');\n\t}\n\n\tisActiveElement(selector: string): Promise<boolean> {\n\t\treturn this.channel.call('isActiveElement', selector);\n\t}\n\n\tgetElements(selector: string, recursive: boolean): Promise<IElement[]> {\n\t\treturn this.channel.call('getElements', [selector, recursive]);\n\t}\n\n\tgetElementXY(selector: string, xoffset?: number, yoffset?: number): Promise<{ x: number, y: number }> {\n\t\treturn this.channel.call('getElementXY', [selector, xoffset, yoffset]);\n\t}\n\n\ttypeInEditor(selector: string, text: string): Promise<void> {\n\t\treturn this.channel.call('typeInEditor', [selector, text]);\n\t}\n\n\tgetTerminalBuffer(selector: string): Promise<string[]> {\n\t\treturn this.channel.call('getTerminalBuffer', selector);\n\t}\n\n\twriteInTerminal(selector: string, text: string): Promise<void> {\n\t\treturn this.channel.call('writeInTerminal', [selector, text]);\n\t}\n\n\tgetLocaleInfo(): Promise<ILocaleInfo> {\n\t\treturn this.channel.call('getLocaleInfo');\n\t}\n\n\tgetLocalizedStrings(): Promise<ILocalizedStrings> {\n\t\treturn this.channel.call('getLocalizedStrings');\n\t}\n}\n\nexport class WindowDriverRegistryChannelClient implements IWindowDriverRegistry {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private channel: IChannel) { }\n\n\tregisterWindowDriver(windowId: number): Promise<IDriverOptions> {\n\t\treturn this.channel.call('registerWindowDriver', windowId);\n\t}\n\n\treloadWindowDriver(windowId: number): Promise<void> {\n\t\treturn this.channel.call('reloadWindowDriver', windowId);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toLocalISOString } from 'vs/base/common/date';\nimport { memoize } from 'vs/base/common/decorators';\nimport { FileAccess } from 'vs/base/common/network';\nimport { dirname, join, normalize, resolve } from 'vs/base/common/path';\nimport { env } from 'vs/base/common/process';\nimport { joinPath } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { IDebugParams, IExtensionHostDebugParams, INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ExtensionKind } from 'vs/platform/extensions/common/extensions';\nimport { IProductService } from 'vs/platform/product/common/productService';\n\nexport interface INativeEnvironmentPaths {\n\n\t/**\n\t * The user data directory to use for anything that should be\n\t * persisted except for the content that is meant for the `homeDir`.\n\t *\n\t * Only one instance of VSCode can use the same `userDataDir`.\n\t */\n\tuserDataDir: string\n\n\t/**\n\t * The user home directory mainly used for persisting extensions\n\t * and global configuration that should be shared across all\n\t * versions.\n\t */\n\thomeDir: string;\n\n\t/**\n\t * OS tmp dir.\n\t */\n\ttmpDir: string,\n}\n\nexport abstract class AbstractNativeEnvironmentService implements INativeEnvironmentService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\t@memoize\n\tget appRoot(): string { return dirname(FileAccess.asFileUri('', require).fsPath); }\n\n\t@memoize\n\tget userHome(): URI { return URI.file(this.paths.homeDir); }\n\n\t@memoize\n\tget userDataPath(): string { return this.paths.userDataDir; }\n\n\t@memoize\n\tget appSettingsHome(): URI { return URI.file(join(this.userDataPath, 'User')); }\n\n\t@memoize\n\tget tmpDir(): URI { return URI.file(this.paths.tmpDir); }\n\n\t@memoize\n\tget cacheHome(): URI { return URI.file(this.userDataPath); }\n\n\t@memoize\n\tget userRoamingDataHome(): URI { return this.appSettingsHome; }\n\n\t@memoize\n\tget settingsResource(): URI { return joinPath(this.userRoamingDataHome, 'settings.json'); }\n\n\t@memoize\n\tget userDataSyncHome(): URI { return joinPath(this.userRoamingDataHome, 'sync'); }\n\n\tget logsPath(): string {\n\t\tif (!this.args.logsPath) {\n\t\t\tconst key = toLocalISOString(new Date()).replace(/-|:|\\.\\d+Z$/g, '');\n\t\t\tthis.args.logsPath = join(this.userDataPath, 'logs', key);\n\t\t}\n\n\t\treturn this.args.logsPath;\n\t}\n\n\t@memoize\n\tget userDataSyncLogResource(): URI { return URI.file(join(this.logsPath, 'userDataSync.log')); }\n\n\t@memoize\n\tget sync(): 'on' | 'off' | undefined { return this.args.sync; }\n\n\t@memoize\n\tget machineSettingsResource(): URI { return joinPath(URI.file(join(this.userDataPath, 'Machine')), 'settings.json'); }\n\n\t@memoize\n\tget globalStorageHome(): URI { return URI.joinPath(this.appSettingsHome, 'globalStorage'); }\n\n\t@memoize\n\tget workspaceStorageHome(): URI { return URI.joinPath(this.appSettingsHome, 'workspaceStorage'); }\n\n\t@memoize\n\tget keybindingsResource(): URI { return joinPath(this.userRoamingDataHome, 'keybindings.json'); }\n\n\t@memoize\n\tget keyboardLayoutResource(): URI { return joinPath(this.userRoamingDataHome, 'keyboardLayout.json'); }\n\n\t@memoize\n\tget argvResource(): URI {\n\t\tconst vscodePortable = env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn URI.file(join(vscodePortable, 'argv.json'));\n\t\t}\n\n\t\treturn joinPath(this.userHome, this.productService.dataFolderName, 'argv.json');\n\t}\n\n\t@memoize\n\tget snippetsHome(): URI { return joinPath(this.userRoamingDataHome, 'snippets'); }\n\n\t@memoize\n\tget isExtensionDevelopment(): boolean { return !!this.args.extensionDevelopmentPath; }\n\n\t@memoize\n\tget untitledWorkspacesHome(): URI { return URI.file(join(this.userDataPath, 'Workspaces')); }\n\n\t@memoize\n\tget installSourcePath(): string { return join(this.userDataPath, 'installSource'); }\n\n\t@memoize\n\tget builtinExtensionsPath(): string {\n\t\tconst cliBuiltinExtensionsDir = this.args['builtin-extensions-dir'];\n\t\tif (cliBuiltinExtensionsDir) {\n\t\t\treturn resolve(cliBuiltinExtensionsDir);\n\t\t}\n\n\t\treturn normalize(join(FileAccess.asFileUri('', require).fsPath, '..', 'extensions'));\n\t}\n\n\tget extensionsDownloadPath(): string {\n\t\tconst cliExtensionsDownloadDir = this.args['extensions-download-dir'];\n\t\tif (cliExtensionsDownloadDir) {\n\t\t\treturn resolve(cliExtensionsDownloadDir);\n\t\t}\n\n\t\treturn join(this.userDataPath, 'CachedExtensionVSIXs');\n\t}\n\n\t@memoize\n\tget extensionsPath(): string {\n\t\tconst cliExtensionsDir = this.args['extensions-dir'];\n\t\tif (cliExtensionsDir) {\n\t\t\treturn resolve(cliExtensionsDir);\n\t\t}\n\n\t\tconst vscodeExtensions = env['VSCODE_EXTENSIONS'];\n\t\tif (vscodeExtensions) {\n\t\t\treturn vscodeExtensions;\n\t\t}\n\n\t\tconst vscodePortable = env['VSCODE_PORTABLE'];\n\t\tif (vscodePortable) {\n\t\t\treturn join(vscodePortable, 'extensions');\n\t\t}\n\n\t\treturn joinPath(this.userHome, this.productService.dataFolderName, 'extensions').fsPath;\n\t}\n\n\t@memoize\n\tget extensionDevelopmentLocationURI(): URI[] | undefined {\n\t\tconst extensionDevelopmentPaths = this.args.extensionDevelopmentPath;\n\t\tif (Array.isArray(extensionDevelopmentPaths)) {\n\t\t\treturn extensionDevelopmentPaths.map(extensionDevelopmentPath => {\n\t\t\t\tif (/^[^:/?#]+?:\\/\\//.test(extensionDevelopmentPath)) {\n\t\t\t\t\treturn URI.parse(extensionDevelopmentPath);\n\t\t\t\t}\n\n\t\t\t\treturn URI.file(normalize(extensionDevelopmentPath));\n\t\t\t});\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\t@memoize\n\tget extensionDevelopmentKind(): ExtensionKind[] | undefined {\n\t\treturn this.args.extensionDevelopmentKind?.map(kind => kind === 'ui' || kind === 'workspace' || kind === 'web' ? kind : 'workspace');\n\t}\n\n\t@memoize\n\tget extensionTestsLocationURI(): URI | undefined {\n\t\tconst extensionTestsPath = this.args.extensionTestsPath;\n\t\tif (extensionTestsPath) {\n\t\t\tif (/^[^:/?#]+?:\\/\\//.test(extensionTestsPath)) {\n\t\t\t\treturn URI.parse(extensionTestsPath);\n\t\t\t}\n\n\t\t\treturn URI.file(normalize(extensionTestsPath));\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tget disableExtensions(): boolean | string[] {\n\t\tif (this.args['disable-extensions']) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst disableExtensions = this.args['disable-extension'];\n\t\tif (disableExtensions) {\n\t\t\tif (typeof disableExtensions === 'string') {\n\t\t\t\treturn [disableExtensions];\n\t\t\t}\n\n\t\t\tif (Array.isArray(disableExtensions) && disableExtensions.length > 0) {\n\t\t\t\treturn disableExtensions;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t@memoize\n\tget debugExtensionHost(): IExtensionHostDebugParams { return parseExtensionHostPort(this.args, this.isBuilt); }\n\tget debugRenderer(): boolean { return !!this.args.debugRenderer; }\n\n\tget isBuilt(): boolean { return !env['VSCODE_DEV']; }\n\tget verbose(): boolean { return !!this.args.verbose; }\n\tget logLevel(): string | undefined { return this.args.log; }\n\n\t@memoize\n\tget serviceMachineIdResource(): URI { return joinPath(URI.file(this.userDataPath), 'machineid'); }\n\n\tget crashReporterId(): string | undefined { return this.args['crash-reporter-id']; }\n\tget crashReporterDirectory(): string | undefined { return this.args['crash-reporter-directory']; }\n\n\tget driverHandle(): string | undefined { return this.args['driver']; }\n\n\t@memoize\n\tget telemetryLogResource(): URI { return URI.file(join(this.logsPath, 'telemetry.log')); }\n\tget disableTelemetry(): boolean { return !!this.args['disable-telemetry']; }\n\n\t@memoize\n\tget disableWorkspaceTrust(): boolean { return !!this.args['disable-workspace-trust']; }\n\n\tget args(): NativeParsedArgs { return this._args; }\n\n\tconstructor(\n\t\tprivate readonly _args: NativeParsedArgs,\n\t\tprivate readonly paths: INativeEnvironmentPaths,\n\t\tprotected readonly productService: IProductService\n\t) { }\n}\n\nexport function parseExtensionHostPort(args: NativeParsedArgs, isBuild: boolean): IExtensionHostDebugParams {\n\treturn parseDebugParams(args['inspect-extensions'], args['inspect-brk-extensions'], 5870, isBuild, args.debugId, args.extensionEnvironment);\n}\n\nexport function parseSearchPort(args: NativeParsedArgs, isBuild: boolean): IDebugParams {\n\treturn parseDebugParams(args['inspect-search'], args['inspect-brk-search'], 5876, isBuild, args.extensionEnvironment);\n}\n\nexport function parsePtyHostPort(args: NativeParsedArgs, isBuild: boolean): IDebugParams {\n\treturn parseDebugParams(args['inspect-ptyhost'], args['inspect-brk-ptyhost'], 5877, isBuild, args.extensionEnvironment);\n}\n\nfunction parseDebugParams(debugArg: string | undefined, debugBrkArg: string | undefined, defaultBuildPort: number, isBuild: boolean, debugId?: string, environmentString?: string): IExtensionHostDebugParams {\n\tconst portStr = debugBrkArg || debugArg;\n\tconst port = Number(portStr) || (!isBuild ? defaultBuildPort : null);\n\tconst brk = port ? Boolean(!!debugBrkArg) : false;\n\tlet env: Record<string, string> | undefined;\n\tif (environmentString) {\n\t\ttry {\n\t\t\tenv = JSON.parse(environmentString);\n\t\t} catch {\n\t\t\t// ignore\n\t\t}\n\t}\n\n\treturn { port, break: brk, debugId, env };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as minimist from 'minimist';\nimport { isWindows } from 'vs/base/common/platform';\nimport { localize } from 'vs/nls';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\n\n/**\n * This code is also used by standalone cli's. Avoid adding any other dependencies.\n */\nconst helpCategories = {\n\to: localize('optionsUpperCase', \"Options\"),\n\te: localize('extensionsManagement', \"Extensions Management\"),\n\tt: localize('troubleshooting', \"Troubleshooting\")\n};\n\nexport interface Option<OptionType> {\n\ttype: OptionType;\n\talias?: string;\n\tdeprecates?: string; // old deprecated id\n\targs?: string | string[];\n\tdescription?: string;\n\tcat?: keyof typeof helpCategories;\n}\n\nexport type OptionDescriptions<T> = {\n\t[P in keyof T]: Option<OptionTypeName<T[P]>>;\n};\n\ntype OptionTypeName<T> =\n\tT extends boolean ? 'boolean' :\n\tT extends string ? 'string' :\n\tT extends string[] ? 'string[]' :\n\tT extends undefined ? 'undefined' :\n\t'unknown';\n\nexport const OPTIONS: OptionDescriptions<Required<NativeParsedArgs>> = {\n\t'diff': { type: 'boolean', cat: 'o', alias: 'd', args: ['file', 'file'], description: localize('diff', \"Compare two files with each other.\") },\n\t'add': { type: 'boolean', cat: 'o', alias: 'a', args: 'folder', description: localize('add', \"Add folder(s) to the last active window.\") },\n\t'goto': { type: 'boolean', cat: 'o', alias: 'g', args: 'file:line[:character]', description: localize('goto', \"Open a file at the path on the specified line and character position.\") },\n\t'new-window': { type: 'boolean', cat: 'o', alias: 'n', description: localize('newWindow', \"Force to open a new window.\") },\n\t'reuse-window': { type: 'boolean', cat: 'o', alias: 'r', description: localize('reuseWindow', \"Force to open a file or folder in an already opened window.\") },\n\t'wait': { type: 'boolean', cat: 'o', alias: 'w', description: localize('wait', \"Wait for the files to be closed before returning.\") },\n\t'waitMarkerFilePath': { type: 'string' },\n\t'locale': { type: 'string', cat: 'o', args: 'locale', description: localize('locale', \"The locale to use (e.g. en-US or zh-TW).\") },\n\t'user-data-dir': { type: 'string', cat: 'o', args: 'dir', description: localize('userDataDir', \"Specifies the directory that user data is kept in. Can be used to open multiple distinct instances of Code.\") },\n\t'help': { type: 'boolean', cat: 'o', alias: 'h', description: localize('help', \"Print usage.\") },\n\n\t'extensions-dir': { type: 'string', deprecates: 'extensionHomePath', cat: 'e', args: 'dir', description: localize('extensionHomePath', \"Set the root path for extensions.\") },\n\t'extensions-download-dir': { type: 'string' },\n\t'builtin-extensions-dir': { type: 'string' },\n\t'list-extensions': { type: 'boolean', cat: 'e', description: localize('listExtensions', \"List the installed extensions.\") },\n\t'show-versions': { type: 'boolean', cat: 'e', description: localize('showVersions', \"Show versions of installed extensions, when using --list-extensions.\") },\n\t'category': { type: 'string', cat: 'e', description: localize('category', \"Filters installed extensions by provided category, when using --list-extensions.\"), args: 'category' },\n\t'install-extension': { type: 'string[]', cat: 'e', args: 'extension-id[@version] | path-to-vsix', description: localize('installExtension', \"Installs or updates the extension. The identifier of an extension is always `${publisher}.${name}`. Use `--force` argument to update to latest version. To install a specific version provide `@${version}`. For example: 'vscode.csharp@1.2.3'.\") },\n\t'pre-release': { type: 'boolean', cat: 'e', description: localize('install prerelease', \"Installs the pre-release version of the extension, when using --install-extension\") },\n\t'uninstall-extension': { type: 'string[]', cat: 'e', args: 'extension-id', description: localize('uninstallExtension', \"Uninstalls an extension.\") },\n\t'enable-proposed-api': { type: 'string[]', cat: 'e', args: 'extension-id', description: localize('experimentalApis', \"Enables proposed API features for extensions. Can receive one or more extension IDs to enable individually.\") },\n\n\t'version': { type: 'boolean', cat: 't', alias: 'v', description: localize('version', \"Print version.\") },\n\t'verbose': { type: 'boolean', cat: 't', description: localize('verbose', \"Print verbose output (implies --wait).\") },\n\t'log': { type: 'string', cat: 't', args: 'level', description: localize('log', \"Log level to use. Default is 'info'. Allowed values are 'critical', 'error', 'warn', 'info', 'debug', 'trace', 'off'.\") },\n\t'status': { type: 'boolean', alias: 's', cat: 't', description: localize('status', \"Print process usage and diagnostics information.\") },\n\t'prof-startup': { type: 'boolean', cat: 't', description: localize('prof-startup', \"Run CPU profiler during startup.\") },\n\t'prof-append-timers': { type: 'string' },\n\t'no-cached-data': { type: 'boolean' },\n\t'prof-startup-prefix': { type: 'string' },\n\t'prof-v8-extensions': { type: 'boolean' },\n\t'disable-extensions': { type: 'boolean', deprecates: 'disableExtensions', cat: 't', description: localize('disableExtensions', \"Disable all installed extensions.\") },\n\t'disable-extension': { type: 'string[]', cat: 't', args: 'extension-id', description: localize('disableExtension', \"Disable an extension.\") },\n\t'sync': { type: 'string', cat: 't', description: localize('turn sync', \"Turn sync on or off.\"), args: ['on', 'off'] },\n\n\t'inspect-extensions': { type: 'string', deprecates: 'debugPluginHost', args: 'port', cat: 't', description: localize('inspect-extensions', \"Allow debugging and profiling of extensions. Check the developer tools for the connection URI.\") },\n\t'inspect-brk-extensions': { type: 'string', deprecates: 'debugBrkPluginHost', args: 'port', cat: 't', description: localize('inspect-brk-extensions', \"Allow debugging and profiling of extensions with the extension host being paused after start. Check the developer tools for the connection URI.\") },\n\t'disable-gpu': { type: 'boolean', cat: 't', description: localize('disableGPU', \"Disable GPU hardware acceleration.\") },\n\t'ms-enable-electron-run-as-node': { type: 'boolean' },\n\t'max-memory': { type: 'string', cat: 't', description: localize('maxMemory', \"Max memory size for a window (in Mbytes).\"), args: 'memory' },\n\t'telemetry': { type: 'boolean', cat: 't', description: localize('telemetry', \"Shows all telemetry events which VS code collects.\") },\n\n\t'remote': { type: 'string' },\n\t'folder-uri': { type: 'string[]', cat: 'o', args: 'uri' },\n\t'file-uri': { type: 'string[]', cat: 'o', args: 'uri' },\n\n\t'locate-extension': { type: 'string[]' },\n\t'extensionDevelopmentPath': { type: 'string[]' },\n\t'extensionDevelopmentKind': { type: 'string[]' },\n\t'extensionTestsPath': { type: 'string' },\n\t'extensionEnvironment': { type: 'string' },\n\t'debugId': { type: 'string' },\n\t'debugRenderer': { type: 'boolean' },\n\t'inspect-ptyhost': { type: 'string' },\n\t'inspect-brk-ptyhost': { type: 'string' },\n\t'inspect-search': { type: 'string', deprecates: 'debugSearch' },\n\t'inspect-brk-search': { type: 'string', deprecates: 'debugBrkSearch' },\n\t'export-default-configuration': { type: 'string' },\n\t'install-source': { type: 'string' },\n\t'driver': { type: 'string' },\n\t'logExtensionHostCommunication': { type: 'boolean' },\n\t'skip-release-notes': { type: 'boolean' },\n\t'skip-welcome': { type: 'boolean' },\n\t'disable-telemetry': { type: 'boolean' },\n\t'disable-updates': { type: 'boolean' },\n\t'disable-keytar': { type: 'boolean' },\n\t'disable-workspace-trust': { type: 'boolean' },\n\t'disable-crash-reporter': { type: 'boolean' },\n\t'crash-reporter-directory': { type: 'string' },\n\t'crash-reporter-id': { type: 'string' },\n\t'skip-add-to-recently-opened': { type: 'boolean' },\n\t'unity-launch': { type: 'boolean' },\n\t'open-url': { type: 'boolean' },\n\t'file-write': { type: 'boolean' },\n\t'file-chmod': { type: 'boolean' },\n\t'driver-verbose': { type: 'boolean' },\n\t'install-builtin-extension': { type: 'string[]' },\n\t'force': { type: 'boolean' },\n\t'do-not-sync': { type: 'boolean' },\n\t'trace': { type: 'boolean' },\n\t'trace-category-filter': { type: 'string' },\n\t'trace-options': { type: 'string' },\n\t'force-user-env': { type: 'boolean' },\n\t'force-disable-user-env': { type: 'boolean' },\n\t'open-devtools': { type: 'boolean' },\n\t'__sandbox': { type: 'boolean' },\n\t'logsPath': { type: 'string' },\n\n\t// chromium flags\n\t'no-proxy-server': { type: 'boolean' },\n\t// Minimist incorrectly parses keys that start with `--no`\n\t// https://github.com/substack/minimist/blob/aeb3e27dae0412de5c0494e9563a5f10c82cc7a9/index.js#L118-L121\n\t// If --no-sandbox is passed via cli wrapper it will be treated as --sandbox which is incorrect, we use\n\t// the alias here to make sure --no-sandbox is always respected.\n\t// For https://github.com/microsoft/vscode/issues/128279\n\t'no-sandbox': { type: 'boolean', alias: 'sandbox' },\n\t'proxy-server': { type: 'string' },\n\t'proxy-bypass-list': { type: 'string' },\n\t'proxy-pac-url': { type: 'string' },\n\t'js-flags': { type: 'string' }, // chrome js flags\n\t'inspect': { type: 'string' },\n\t'inspect-brk': { type: 'string' },\n\t'nolazy': { type: 'boolean' }, // node inspect\n\t'force-device-scale-factor': { type: 'string' },\n\t'force-renderer-accessibility': { type: 'boolean' },\n\t'ignore-certificate-errors': { type: 'boolean' },\n\t'allow-insecure-localhost': { type: 'boolean' },\n\t'log-net-log': { type: 'string' },\n\t'vmodule': { type: 'string' },\n\t'_urls': { type: 'string[]' },\n\n\t_: { type: 'string[]' } // main arguments\n};\n\nexport interface ErrorReporter {\n\tonUnknownOption(id: string): void;\n\tonMultipleValues(id: string, usedValue: string): void;\n\tonDeprecatedOption(deprecatedId: string, currentId: string): void;\n}\n\nconst ignoringReporter: ErrorReporter = {\n\tonUnknownOption: () => { },\n\tonMultipleValues: () => { },\n\tonDeprecatedOption: () => { }\n};\n\nexport function parseArgs<T>(args: string[], options: OptionDescriptions<T>, errorReporter: ErrorReporter = ignoringReporter): T {\n\tconst alias: { [key: string]: string } = {};\n\tconst string: string[] = [];\n\tconst boolean: string[] = [];\n\tfor (let optionId in options) {\n\t\tconst o = options[optionId];\n\t\tif (o.alias) {\n\t\t\talias[optionId] = o.alias;\n\t\t}\n\n\t\tif (o.type === 'string' || o.type === 'string[]') {\n\t\t\tstring.push(optionId);\n\t\t\tif (o.deprecates) {\n\t\t\t\tstring.push(o.deprecates);\n\t\t\t}\n\t\t} else if (o.type === 'boolean') {\n\t\t\tboolean.push(optionId);\n\t\t\tif (o.deprecates) {\n\t\t\t\tboolean.push(o.deprecates);\n\t\t\t}\n\t\t}\n\t}\n\t// remove aliases to avoid confusion\n\tconst parsedArgs = minimist(args, { string, boolean, alias });\n\n\tconst cleanedArgs: any = {};\n\tconst remainingArgs: any = parsedArgs;\n\n\t// https://github.com/microsoft/vscode/issues/58177, https://github.com/microsoft/vscode/issues/106617\n\tcleanedArgs._ = parsedArgs._.map(arg => String(arg)).filter(arg => arg.length > 0);\n\n\tdelete remainingArgs._;\n\n\tfor (let optionId in options) {\n\t\tconst o = options[optionId];\n\t\tif (o.alias) {\n\t\t\tdelete remainingArgs[o.alias];\n\t\t}\n\n\t\tlet val = remainingArgs[optionId];\n\t\tif (o.deprecates && remainingArgs.hasOwnProperty(o.deprecates)) {\n\t\t\tif (!val) {\n\t\t\t\tval = remainingArgs[o.deprecates];\n\t\t\t\tif (val) {\n\t\t\t\t\terrorReporter.onDeprecatedOption(o.deprecates, optionId);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdelete remainingArgs[o.deprecates];\n\t\t}\n\n\t\tif (typeof val !== 'undefined') {\n\t\t\tif (o.type === 'string[]') {\n\t\t\t\tif (val && !Array.isArray(val)) {\n\t\t\t\t\tval = [val];\n\t\t\t\t}\n\t\t\t} else if (o.type === 'string') {\n\t\t\t\tif (Array.isArray(val)) {\n\t\t\t\t\tval = val.pop(); // take the last\n\t\t\t\t\terrorReporter.onMultipleValues(optionId, val);\n\t\t\t\t}\n\t\t\t}\n\t\t\tcleanedArgs[optionId] = val;\n\t\t}\n\t\tdelete remainingArgs[optionId];\n\t}\n\n\tfor (let key in remainingArgs) {\n\t\terrorReporter.onUnknownOption(key);\n\t}\n\n\treturn cleanedArgs;\n}\n\nfunction formatUsage(optionId: string, option: Option<any>) {\n\tlet args = '';\n\tif (option.args) {\n\t\tif (Array.isArray(option.args)) {\n\t\t\targs = ` <${option.args.join('> <')}>`;\n\t\t} else {\n\t\t\targs = ` <${option.args}>`;\n\t\t}\n\t}\n\tif (option.alias) {\n\t\treturn `-${option.alias} --${optionId}${args}`;\n\t}\n\treturn `--${optionId}${args}`;\n}\n\n// exported only for testing\nexport function formatOptions(options: OptionDescriptions<any>, columns: number): string[] {\n\tlet maxLength = 0;\n\tlet usageTexts: [string, string][] = [];\n\tfor (const optionId in options) {\n\t\tconst o = options[optionId];\n\t\tconst usageText = formatUsage(optionId, o);\n\t\tmaxLength = Math.max(maxLength, usageText.length);\n\t\tusageTexts.push([usageText, o.description!]);\n\t}\n\tlet argLength = maxLength + 2/*left padding*/ + 1/*right padding*/;\n\tif (columns - argLength < 25) {\n\t\t// Use a condensed version on narrow terminals\n\t\treturn usageTexts.reduce<string[]>((r, ut) => r.concat([`  ${ut[0]}`, `      ${ut[1]}`]), []);\n\t}\n\tlet descriptionColumns = columns - argLength - 1;\n\tlet result: string[] = [];\n\tfor (const ut of usageTexts) {\n\t\tlet usage = ut[0];\n\t\tlet wrappedDescription = wrapText(ut[1], descriptionColumns);\n\t\tlet keyPadding = indent(argLength - usage.length - 2/*left padding*/);\n\t\tresult.push('  ' + usage + keyPadding + wrappedDescription[0]);\n\t\tfor (let i = 1; i < wrappedDescription.length; i++) {\n\t\t\tresult.push(indent(argLength) + wrappedDescription[i]);\n\t\t}\n\t}\n\treturn result;\n}\n\nfunction indent(count: number): string {\n\treturn ' '.repeat(count);\n}\n\nfunction wrapText(text: string, columns: number): string[] {\n\tlet lines: string[] = [];\n\twhile (text.length) {\n\t\tlet index = text.length < columns ? text.length : text.lastIndexOf(' ', columns);\n\t\tlet line = text.slice(0, index).trim();\n\t\ttext = text.slice(index);\n\t\tlines.push(line);\n\t}\n\treturn lines;\n}\n\nexport function buildHelpMessage(productName: string, executableName: string, version: string, options: OptionDescriptions<any>, capabilities?: { noPipe?: boolean, noInputFiles: boolean }): string {\n\tconst columns = (process.stdout).isTTY && (process.stdout).columns || 80;\n\n\tconst inputFiles = capabilities?.noInputFiles !== true ? `[${localize('paths', 'paths')}...]` : '';\n\n\tconst help = [`${productName} ${version}`];\n\thelp.push('');\n\thelp.push(`${localize('usage', \"Usage\")}: ${executableName} [${localize('options', \"options\")}]${inputFiles}`);\n\thelp.push('');\n\tif (capabilities?.noPipe !== true) {\n\t\tif (isWindows) {\n\t\t\thelp.push(localize('stdinWindows', \"To read output from another program, append '-' (e.g. 'echo Hello World | {0} -')\", executableName));\n\t\t} else {\n\t\t\thelp.push(localize('stdinUnix', \"To read from stdin, append '-' (e.g. 'ps aux | grep code | {0} -')\", executableName));\n\t\t}\n\t\thelp.push('');\n\t}\n\tconst optionsByCategory: { [P in keyof typeof helpCategories]?: OptionDescriptions<any> } = {};\n\tfor (const optionId in options) {\n\t\tconst o = options[optionId];\n\t\tif (o.description && o.cat) {\n\t\t\tlet optionsByCat = optionsByCategory[o.cat];\n\t\t\tif (!optionsByCat) {\n\t\t\t\toptionsByCategory[o.cat] = optionsByCat = {};\n\t\t\t}\n\t\t\toptionsByCat[optionId] = o;\n\t\t}\n\t}\n\n\tfor (let helpCategoryKey in optionsByCategory) {\n\t\tconst key = <keyof typeof helpCategories>helpCategoryKey;\n\n\t\tlet categoryOptions = optionsByCategory[key];\n\t\tif (categoryOptions) {\n\t\t\thelp.push(helpCategories[key]);\n\t\t\thelp.push(...formatOptions(categoryOptions, columns));\n\t\t\thelp.push('');\n\t\t}\n\t}\n\treturn help.join('\\n');\n}\n\nexport function buildVersionMessage(version: string | undefined, commit: string | undefined): string {\n\treturn `${version || localize('unknownVersion', \"Unknown version\")}\\n${commit || localize('unknownCommit', \"Unknown commit\")}\\n${process.arch}`;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { AddressInfo, createServer } from 'net';\nimport { IOpenExtensionWindowResult } from 'vs/platform/debug/common/extensionHostDebug';\nimport { ExtensionHostDebugBroadcastChannel } from 'vs/platform/debug/common/extensionHostDebugIpc';\nimport { OPTIONS, parseArgs } from 'vs/platform/environment/node/argv';\nimport { IWindowsMainService, OpenContext } from 'vs/platform/windows/electron-main/windows';\n\nexport class ElectronExtensionHostDebugBroadcastChannel<TContext> extends ExtensionHostDebugBroadcastChannel<TContext> {\n\n\tconstructor(private windowsMainService: IWindowsMainService) {\n\t\tsuper();\n\t}\n\n\toverride call(ctx: TContext, command: string, arg?: any): Promise<any> {\n\t\tif (command === 'openExtensionDevelopmentHostWindow') {\n\t\t\treturn this.openExtensionDevelopmentHostWindow(arg[0], arg[1]);\n\t\t} else {\n\t\t\treturn super.call(ctx, command, arg);\n\t\t}\n\t}\n\n\tprivate async openExtensionDevelopmentHostWindow(args: string[], debugRenderer: boolean): Promise<IOpenExtensionWindowResult> {\n\t\tconst pargs = parseArgs(args, OPTIONS);\n\t\tpargs.debugRenderer = debugRenderer;\n\n\t\tconst extDevPaths = pargs.extensionDevelopmentPath;\n\t\tif (!extDevPaths) {\n\t\t\treturn { success: false };\n\t\t}\n\n\t\tconst [codeWindow] = this.windowsMainService.openExtensionDevelopmentHostWindow(extDevPaths, {\n\t\t\tcontext: OpenContext.API,\n\t\t\tcli: pargs,\n\t\t});\n\n\t\tif (!debugRenderer) {\n\t\t\treturn { success: true };\n\t\t}\n\n\t\tconst win = codeWindow.win;\n\t\tif (!win) {\n\t\t\treturn { success: true };\n\t\t}\n\n\t\tconst debug = win.webContents.debugger;\n\n\t\tlet listeners = debug.isAttached() ? Infinity : 0;\n\t\tconst server = createServer(listener => {\n\t\t\tif (listeners++ === 0) {\n\t\t\t\tdebug.attach();\n\t\t\t}\n\n\t\t\tlet closed = false;\n\t\t\tconst writeMessage = (message: object) => {\n\t\t\t\tif (!closed) { // in case sendCommand promises settle after closed\n\t\t\t\t\tlistener.write(JSON.stringify(message) + '\\0'); // null-delimited, CDP-compatible\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst onMessage = (_event: Event, method: string, params: unknown, sessionId?: string) =>\n\t\t\t\twriteMessage(({ method, params, sessionId }));\n\n\t\t\twin.on('close', () => {\n\t\t\t\tdebug.removeListener('message', onMessage);\n\t\t\t\tlistener.end();\n\t\t\t\tclosed = true;\n\t\t\t});\n\n\t\t\tdebug.addListener('message', onMessage);\n\n\t\t\tlet buf = Buffer.alloc(0);\n\t\t\tlistener.on('data', data => {\n\t\t\t\tbuf = Buffer.concat([buf, data]);\n\t\t\t\tfor (let delimiter = buf.indexOf(0); delimiter !== -1; delimiter = buf.indexOf(0)) {\n\t\t\t\t\tlet data: { id: number; sessionId: string; params: {} };\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst contents = buf.slice(0, delimiter).toString('utf8');\n\t\t\t\t\t\tbuf = buf.slice(delimiter + 1);\n\t\t\t\t\t\tdata = JSON.parse(contents);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole.error('error reading cdp line', e);\n\t\t\t\t\t}\n\n\t\t\t\t\t// depends on a new API for which electron.d.ts has not been updated:\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tdebug.sendCommand(data.method, data.params, data.sessionId)\n\t\t\t\t\t\t.then((result: object) => writeMessage({ id: data.id, sessionId: data.sessionId, result }))\n\t\t\t\t\t\t.catch((error: Error) => writeMessage({ id: data.id, sessionId: data.sessionId, error: { code: 0, message: error.message } }));\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tlistener.on('error', err => {\n\t\t\t\tconsole.error('error on cdp pipe:', err);\n\t\t\t});\n\n\t\t\tlistener.on('close', () => {\n\t\t\t\tclosed = true;\n\t\t\t\tif (--listeners === 0) {\n\t\t\t\t\tdebug.detach();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tawait new Promise<void>(r => server.listen(0, r));\n\t\twin.on('close', () => server.close());\n\n\t\treturn { rendererDebugPort: (server.address() as AddressInfo).port, success: true };\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/// <reference path=\"../../../../typings/require.d.ts\" />\n\n//@ts-check\n(function () {\n\t'use strict';\n\n\t/**\n\t * @typedef {import('../../environment/common/argv').NativeParsedArgs} NativeParsedArgs\n\t *\n\t * @param {typeof import('path')} path\n\t * @param {typeof import('os')} os\n\t * @param {string} productName\n\t * @param {string} cwd\n\t */\n\tfunction factory(path, os, productName, cwd) {\n\n\t\t/**\n\t\t * @param {NativeParsedArgs} cliArgs\n\t\t *\n\t\t * @returns {string}\n\t\t */\n\t\tfunction getUserDataPath(cliArgs) {\n\t\t\tconst userDataPath = doGetUserDataPath(cliArgs);\n\t\t\tconst pathsToResolve = [userDataPath];\n\n\t\t\t// If the user-data-path is not absolute, make\n\t\t\t// sure to resolve it against the passed in\n\t\t\t// current working directory. We cannot use the\n\t\t\t// node.js `path.resolve()` logic because it will\n\t\t\t// not pick up our `VSCODE_CWD` environment variable\n\t\t\t// (https://github.com/microsoft/vscode/issues/120269)\n\t\t\tif (!path.isAbsolute(userDataPath)) {\n\t\t\t\tpathsToResolve.unshift(cwd);\n\t\t\t}\n\n\t\t\treturn path.resolve(...pathsToResolve);\n\t\t}\n\n\t\t/**\n\t\t * @param {NativeParsedArgs} cliArgs\n\t\t *\n\t\t * @returns {string}\n\t\t */\n\t\tfunction doGetUserDataPath(cliArgs) {\n\n\t\t\t// 1. Support portable mode\n\t\t\tconst portablePath = process.env['VSCODE_PORTABLE'];\n\t\t\tif (portablePath) {\n\t\t\t\treturn path.join(portablePath, 'user-data');\n\t\t\t}\n\n\t\t\t// 2. Support global VSCODE_APPDATA environment variable\n\t\t\tlet appDataPath = process.env['VSCODE_APPDATA'];\n\t\t\tif (appDataPath) {\n\t\t\t\treturn path.join(appDataPath, productName);\n\t\t\t}\n\n\t\t\t// With Electron>=13 --user-data-dir switch will be propagated to\n\t\t\t// all processes https://github.com/electron/electron/blob/1897b14af36a02e9aa7e4d814159303441548251/shell/browser/electron_browser_client.cc#L546-L553\n\t\t\t// Check VSCODE_PORTABLE and VSCODE_APPDATA before this case to get correct values.\n\t\t\t// 3. Support explicit --user-data-dir\n\t\t\tconst cliPath = cliArgs['user-data-dir'];\n\t\t\tif (cliPath) {\n\t\t\t\treturn cliPath;\n\t\t\t}\n\n\t\t\t// 4. Otherwise check per platform\n\t\t\tswitch (process.platform) {\n\t\t\t\tcase 'win32':\n\t\t\t\t\tappDataPath = process.env['APPDATA'];\n\t\t\t\t\tif (!appDataPath) {\n\t\t\t\t\t\tconst userProfile = process.env['USERPROFILE'];\n\t\t\t\t\t\tif (typeof userProfile !== 'string') {\n\t\t\t\t\t\t\tthrow new Error('Windows: Unexpected undefined %USERPROFILE% environment variable');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tappDataPath = path.join(userProfile, 'AppData', 'Roaming');\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'darwin':\n\t\t\t\t\tappDataPath = path.join(os.homedir(), 'Library', 'Application Support');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'linux':\n\t\t\t\t\tappDataPath = process.env['XDG_CONFIG_HOME'] || path.join(os.homedir(), '.config');\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Platform not supported');\n\t\t\t}\n\n\t\t\treturn path.join(appDataPath, productName);\n\t\t}\n\n\t\treturn {\n\t\t\tgetUserDataPath\n\t\t};\n\t}\n\n\tif (typeof define === 'function') {\n\t\tdefine(__m[163/*vs/platform/environment/node/userDataPath*/], __M([0/*require*/,247/*path*/,26/*os*/,10/*vs/base/common/network*/,15/*vs/base/common/resources*/,34/*vs/base/common/process*/]), function (\n\t\t\trequire,\n\t\t\t/** @type {typeof import('path')} */ path,\n\t\t\t/** @type {typeof import('os')} */ os,\n\t\t\t/** @type {typeof import('../../../base/common/network')} */ network,\n\t\t\t/** @type {typeof import(\"../../../base/common/resources\")} */ resources,\n\t\t\t/** @type {typeof import(\"../../../base/common/process\")} */ process\n\t\t) {\n\t\t\tconst rootPath = resources.dirname(network.FileAccess.asFileUri('', require));\n\t\t\tconst pkg = require.__$__nodeRequire(resources.joinPath(rootPath, 'package.json').fsPath);\n\n\t\t\treturn factory(path, os, pkg.name, process.cwd());\n\t\t}); // amd\n\t} else if (typeof module === 'object' && typeof module.exports === 'object') {\n\t\tconst pkg = require('../../../../../package.json');\n\t\tconst path = require('path');\n\t\tconst os = require('os');\n\n\t\tmodule.exports = factory(path, os, pkg.name, process.env['VSCODE_CWD'] || process.cwd()); // commonjs\n\t} else {\n\t\tthrow new Error('Unknown context');\n\t}\n}());\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { homedir, tmpdir } from 'os';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { AbstractNativeEnvironmentService } from 'vs/platform/environment/common/environmentService';\nimport { getUserDataPath } from 'vs/platform/environment/node/userDataPath';\nimport { IProductService } from 'vs/platform/product/common/productService';\n\nexport class NativeEnvironmentService extends AbstractNativeEnvironmentService {\n\n\tconstructor(args: NativeParsedArgs, productService: IProductService) {\n\t\tsuper(args, {\n\t\t\thomeDir: homedir(),\n\t\t\ttmpDir: tmpdir(),\n\t\t\tuserDataDir: getUserDataPath(args)\n\t\t}, productService);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { tmpdir } from 'os';\nimport { join } from 'vs/base/common/path';\n\nexport function createWaitMarkerFile(verbose?: boolean): string | undefined {\n\tconst randomWaitMarkerPath = join(tmpdir(), Math.random().toString(36).replace(/[^a-z]+/g, '').substr(0, 10));\n\n\ttry {\n\t\tfs.writeFileSync(randomWaitMarkerPath, ''); // use built-in fs to avoid dragging in more dependencies\n\t\tif (verbose) {\n\t\t\tconsole.log(`Marker file for --wait created: ${randomWaitMarkerPath}`);\n\t\t}\n\t\treturn randomWaitMarkerPath;\n\t} catch (err) {\n\t\tif (verbose) {\n\t\t\tconsole.error(`Failed to create marker file for --wait: ${err}`);\n\t\t}\n\t\treturn undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\n\nexport interface IParsedVersion {\n\thasCaret: boolean;\n\thasGreaterEquals: boolean;\n\tmajorBase: number;\n\tmajorMustEqual: boolean;\n\tminorBase: number;\n\tminorMustEqual: boolean;\n\tpatchBase: number;\n\tpatchMustEqual: boolean;\n\tpreRelease: string | null;\n}\n\nexport interface INormalizedVersion {\n\tmajorBase: number;\n\tmajorMustEqual: boolean;\n\tminorBase: number;\n\tminorMustEqual: boolean;\n\tpatchBase: number;\n\tpatchMustEqual: boolean;\n\tnotBefore: number; /* milliseconds timestamp, or 0 */\n\tisMinimum: boolean;\n}\n\nconst VERSION_REGEXP = /^(\\^|>=)?((\\d+)|x)\\.((\\d+)|x)\\.((\\d+)|x)(\\-.*)?$/;\nconst NOT_BEFORE_REGEXP = /^-(\\d{4})(\\d{2})(\\d{2})$/;\n\nexport function isValidVersionStr(version: string): boolean {\n\tversion = version.trim();\n\treturn (version === '*' || VERSION_REGEXP.test(version));\n}\n\nexport function parseVersion(version: string): IParsedVersion | null {\n\tif (!isValidVersionStr(version)) {\n\t\treturn null;\n\t}\n\n\tversion = version.trim();\n\n\tif (version === '*') {\n\t\treturn {\n\t\t\thasCaret: false,\n\t\t\thasGreaterEquals: false,\n\t\t\tmajorBase: 0,\n\t\t\tmajorMustEqual: false,\n\t\t\tminorBase: 0,\n\t\t\tminorMustEqual: false,\n\t\t\tpatchBase: 0,\n\t\t\tpatchMustEqual: false,\n\t\t\tpreRelease: null\n\t\t};\n\t}\n\n\tlet m = version.match(VERSION_REGEXP);\n\tif (!m) {\n\t\treturn null;\n\t}\n\treturn {\n\t\thasCaret: m[1] === '^',\n\t\thasGreaterEquals: m[1] === '>=',\n\t\tmajorBase: m[2] === 'x' ? 0 : parseInt(m[2], 10),\n\t\tmajorMustEqual: (m[2] === 'x' ? false : true),\n\t\tminorBase: m[4] === 'x' ? 0 : parseInt(m[4], 10),\n\t\tminorMustEqual: (m[4] === 'x' ? false : true),\n\t\tpatchBase: m[6] === 'x' ? 0 : parseInt(m[6], 10),\n\t\tpatchMustEqual: (m[6] === 'x' ? false : true),\n\t\tpreRelease: m[8] || null\n\t};\n}\n\nexport function normalizeVersion(version: IParsedVersion | null): INormalizedVersion | null {\n\tif (!version) {\n\t\treturn null;\n\t}\n\n\tlet majorBase = version.majorBase,\n\t\tmajorMustEqual = version.majorMustEqual,\n\t\tminorBase = version.minorBase,\n\t\tminorMustEqual = version.minorMustEqual,\n\t\tpatchBase = version.patchBase,\n\t\tpatchMustEqual = version.patchMustEqual;\n\n\tif (version.hasCaret) {\n\t\tif (majorBase === 0) {\n\t\t\tpatchMustEqual = false;\n\t\t} else {\n\t\t\tminorMustEqual = false;\n\t\t\tpatchMustEqual = false;\n\t\t}\n\t}\n\n\tlet notBefore = 0;\n\tif (version.preRelease) {\n\t\tconst match = NOT_BEFORE_REGEXP.exec(version.preRelease);\n\t\tif (match) {\n\t\t\tconst [, year, month, day] = match;\n\t\t\tnotBefore = Date.UTC(Number(year), Number(month) - 1, Number(day));\n\t\t}\n\t}\n\n\treturn {\n\t\tmajorBase: majorBase,\n\t\tmajorMustEqual: majorMustEqual,\n\t\tminorBase: minorBase,\n\t\tminorMustEqual: minorMustEqual,\n\t\tpatchBase: patchBase,\n\t\tpatchMustEqual: patchMustEqual,\n\t\tisMinimum: version.hasGreaterEquals,\n\t\tnotBefore,\n\t};\n}\n\nexport function isValidVersion(_inputVersion: string | INormalizedVersion, _inputDate: ProductDate, _desiredVersion: string | INormalizedVersion): boolean {\n\tlet version: INormalizedVersion | null;\n\tif (typeof _inputVersion === 'string') {\n\t\tversion = normalizeVersion(parseVersion(_inputVersion));\n\t} else {\n\t\tversion = _inputVersion;\n\t}\n\n\tlet productTs: number | undefined;\n\tif (_inputDate instanceof Date) {\n\t\tproductTs = _inputDate.getTime();\n\t} else if (typeof _inputDate === 'string') {\n\t\tproductTs = new Date(_inputDate).getTime();\n\t}\n\n\tlet desiredVersion: INormalizedVersion | null;\n\tif (typeof _desiredVersion === 'string') {\n\t\tdesiredVersion = normalizeVersion(parseVersion(_desiredVersion));\n\t} else {\n\t\tdesiredVersion = _desiredVersion;\n\t}\n\n\tif (!version || !desiredVersion) {\n\t\treturn false;\n\t}\n\n\tlet majorBase = version.majorBase;\n\tlet minorBase = version.minorBase;\n\tlet patchBase = version.patchBase;\n\n\tlet desiredMajorBase = desiredVersion.majorBase;\n\tlet desiredMinorBase = desiredVersion.minorBase;\n\tlet desiredPatchBase = desiredVersion.patchBase;\n\tlet desiredNotBefore = desiredVersion.notBefore;\n\n\tlet majorMustEqual = desiredVersion.majorMustEqual;\n\tlet minorMustEqual = desiredVersion.minorMustEqual;\n\tlet patchMustEqual = desiredVersion.patchMustEqual;\n\n\tif (desiredVersion.isMinimum) {\n\t\tif (majorBase > desiredMajorBase) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (majorBase < desiredMajorBase) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (minorBase > desiredMinorBase) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (minorBase < desiredMinorBase) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (productTs && productTs < desiredNotBefore) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn patchBase >= desiredPatchBase;\n\t}\n\n\t// Anything < 1.0.0 is compatible with >= 1.0.0, except exact matches\n\tif (majorBase === 1 && desiredMajorBase === 0 && (!majorMustEqual || !minorMustEqual || !patchMustEqual)) {\n\t\tdesiredMajorBase = 1;\n\t\tdesiredMinorBase = 0;\n\t\tdesiredPatchBase = 0;\n\t\tmajorMustEqual = true;\n\t\tminorMustEqual = false;\n\t\tpatchMustEqual = false;\n\t}\n\n\tif (majorBase < desiredMajorBase) {\n\t\t// smaller major version\n\t\treturn false;\n\t}\n\n\tif (majorBase > desiredMajorBase) {\n\t\t// higher major version\n\t\treturn (!majorMustEqual);\n\t}\n\n\t// at this point, majorBase are equal\n\n\tif (minorBase < desiredMinorBase) {\n\t\t// smaller minor version\n\t\treturn false;\n\t}\n\n\tif (minorBase > desiredMinorBase) {\n\t\t// higher minor version\n\t\treturn (!minorMustEqual);\n\t}\n\n\t// at this point, minorBase are equal\n\n\tif (patchBase < desiredPatchBase) {\n\t\t// smaller patch version\n\t\treturn false;\n\t}\n\n\tif (patchBase > desiredPatchBase) {\n\t\t// higher patch version\n\t\treturn (!patchMustEqual);\n\t}\n\n\t// at this point, patchBase are equal\n\n\tif (productTs && productTs < desiredNotBefore) {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\nexport interface IReducedExtensionDescription {\n\tisBuiltin: boolean;\n\tengines: {\n\t\tvscode: string;\n\t};\n\tmain?: string;\n}\n\ntype ProductDate = string | Date | undefined;\n\nexport function isValidExtensionVersion(version: string, date: ProductDate, extensionDesc: IReducedExtensionDescription, notices: string[]): boolean {\n\n\tif (extensionDesc.isBuiltin || typeof extensionDesc.main === 'undefined') {\n\t\t// No version check for builtin or declarative extensions\n\t\treturn true;\n\t}\n\n\treturn isVersionValid(version, date, extensionDesc.engines.vscode, notices);\n}\n\nexport function isEngineValid(engine: string, version: string, date: ProductDate): boolean {\n\t// TODO@joao: discuss with alex '*' doesn't seem to be a valid engine version\n\treturn engine === '*' || isVersionValid(version, date, engine);\n}\n\nfunction isVersionValid(currentVersion: string, date: ProductDate, requestedVersion: string, notices: string[] = []): boolean {\n\n\tlet desiredVersion = normalizeVersion(parseVersion(requestedVersion));\n\tif (!desiredVersion) {\n\t\tnotices.push(nls.localize('versionSyntax', \"Could not parse `engines.vscode` value {0}. Please use, for example: ^1.22.0, ^1.22.x, etc.\", requestedVersion));\n\t\treturn false;\n\t}\n\n\t// enforce that a breaking API version is specified.\n\t// for 0.X.Y, that means up to 0.X must be specified\n\t// otherwise for Z.X.Y, that means Z must be specified\n\tif (desiredVersion.majorBase === 0) {\n\t\t// force that major and minor must be specific\n\t\tif (!desiredVersion.majorMustEqual || !desiredVersion.minorMustEqual) {\n\t\t\tnotices.push(nls.localize('versionSpecificity1', \"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions before 1.0.0, please define at a minimum the major and minor desired version. E.g. ^0.10.0, 0.10.x, 0.11.0, etc.\", requestedVersion));\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\t// force that major must be specific\n\t\tif (!desiredVersion.majorMustEqual) {\n\t\t\tnotices.push(nls.localize('versionSpecificity2', \"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions after 1.0.0, please define at a minimum the major desired version. E.g. ^1.10.0, 1.10.x, 1.x.x, 2.x.x, etc.\", requestedVersion));\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tif (!isValidVersion(currentVersion, date, desiredVersion)) {\n\t\tnotices.push(nls.localize('versionMismatch', \"Extension is not compatible with Code {0}. Extension requires: {1}.\", currentVersion, requestedVersion));\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { DiskFileSystemProvider } from 'vs/platform/files/node/diskFileSystemProvider';\nimport { Disposable, dispose, IDisposable } from 'vs/base/common/lifecycle';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IURITransformer } from 'vs/base/common/uriIpc';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { ReadableStreamEventPayload, listenStream } from 'vs/base/common/stream';\nimport { IStat, FileReadStreamOptions, FileWriteOptions, FileOpenOptions, FileDeleteOptions, FileOverwriteOptions, IFileChange, IWatchOptions, FileType } from 'vs/platform/files/common/files';\nimport { CancellationTokenSource } from 'vs/base/common/cancellation';\n\nexport interface ISessionFileWatcher extends IDisposable {\n\twatch(req: number, resource: URI, opts: IWatchOptions): IDisposable;\n}\n\n/**\n * A server implementation for a IPC based file system provider\n * (see `IPCFileSystemProvider`) client.\n */\nexport abstract class AbstractDiskFileSystemProviderChannel<T> extends Disposable implements IServerChannel<T> {\n\n\tconstructor(\n\t\tprotected readonly provider: DiskFileSystemProvider,\n\t\tprotected readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t}\n\n\tcall(ctx: T, command: string, arg?: any): Promise<any> {\n\t\tconst uriTransformer = this.getUriTransformer(ctx);\n\n\t\tswitch (command) {\n\t\t\tcase 'stat': return this.stat(uriTransformer, arg[0]);\n\t\t\tcase 'readdir': return this.readdir(uriTransformer, arg[0]);\n\t\t\tcase 'open': return this.open(uriTransformer, arg[0], arg[1]);\n\t\t\tcase 'close': return this.close(arg[0]);\n\t\t\tcase 'read': return this.read(arg[0], arg[1], arg[2]);\n\t\t\tcase 'readFile': return this.readFile(uriTransformer, arg[0]);\n\t\t\tcase 'write': return this.write(arg[0], arg[1], arg[2], arg[3], arg[4]);\n\t\t\tcase 'writeFile': return this.writeFile(uriTransformer, arg[0], arg[1], arg[2]);\n\t\t\tcase 'rename': return this.rename(uriTransformer, arg[0], arg[1], arg[2]);\n\t\t\tcase 'copy': return this.copy(uriTransformer, arg[0], arg[1], arg[2]);\n\t\t\tcase 'mkdir': return this.mkdir(uriTransformer, arg[0]);\n\t\t\tcase 'delete': return this.delete(uriTransformer, arg[0], arg[1]);\n\t\t\tcase 'watch': return this.watch(uriTransformer, arg[0], arg[1], arg[2], arg[3]);\n\t\t\tcase 'unwatch': return this.unwatch(arg[0], arg[1]);\n\t\t}\n\n\t\tthrow new Error(`IPC Command ${command} not found`);\n\t}\n\n\tlisten(ctx: T, event: string, arg: any): Event<any> {\n\t\tconst uriTransformer = this.getUriTransformer(ctx);\n\n\t\tswitch (event) {\n\t\t\tcase 'fileChange': return this.onFileChange(uriTransformer, arg[0]);\n\t\t\tcase 'readFileStream': return this.onReadFileStream(uriTransformer, arg[0], arg[1]);\n\t\t}\n\n\t\tthrow new Error(`Unknown event ${event}`);\n\t}\n\n\tprotected abstract getUriTransformer(ctx: T): IURITransformer;\n\n\tprotected abstract transformIncoming(uriTransformer: IURITransformer, _resource: UriComponents, supportVSCodeResource?: boolean): URI;\n\n\t//#region File Metadata Resolving\n\n\tprivate stat(uriTransformer: IURITransformer, _resource: UriComponents): Promise<IStat> {\n\t\tconst resource = this.transformIncoming(uriTransformer, _resource, true);\n\n\t\treturn this.provider.stat(resource);\n\t}\n\n\tprivate readdir(uriTransformer: IURITransformer, _resource: UriComponents): Promise<[string, FileType][]> {\n\t\tconst resource = this.transformIncoming(uriTransformer, _resource);\n\n\t\treturn this.provider.readdir(resource);\n\t}\n\n\t//#endregion\n\n\t//#region File Reading/Writing\n\n\tprivate async readFile(uriTransformer: IURITransformer, _resource: UriComponents): Promise<VSBuffer> {\n\t\tconst resource = this.transformIncoming(uriTransformer, _resource, true);\n\t\tconst buffer = await this.provider.readFile(resource);\n\n\t\treturn VSBuffer.wrap(buffer);\n\t}\n\n\tprivate onReadFileStream(uriTransformer: IURITransformer, _resource: URI, opts: FileReadStreamOptions): Event<ReadableStreamEventPayload<VSBuffer>> {\n\t\tconst resource = this.transformIncoming(uriTransformer, _resource, true);\n\t\tconst cts = new CancellationTokenSource();\n\n\t\tconst emitter = new Emitter<ReadableStreamEventPayload<VSBuffer>>({\n\t\t\tonLastListenerRemove: () => {\n\n\t\t\t\t// Ensure to cancel the read operation when there is no more\n\t\t\t\t// listener on the other side to prevent unneeded work.\n\t\t\t\tcts.cancel();\n\t\t\t}\n\t\t});\n\n\t\tconst fileStream = this.provider.readFileStream(resource, opts, cts.token);\n\t\tlistenStream(fileStream, {\n\t\t\tonData: chunk => emitter.fire(VSBuffer.wrap(chunk)),\n\t\t\tonError: error => emitter.fire(error),\n\t\t\tonEnd: () => {\n\n\t\t\t\t// Forward event\n\t\t\t\temitter.fire('end');\n\n\t\t\t\t// Cleanup\n\t\t\t\temitter.dispose();\n\t\t\t\tcts.dispose();\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate writeFile(uriTransformer: IURITransformer, _resource: UriComponents, content: VSBuffer, opts: FileWriteOptions): Promise<void> {\n\t\tconst resource = this.transformIncoming(uriTransformer, _resource);\n\n\t\treturn this.provider.writeFile(resource, content.buffer, opts);\n\t}\n\n\tprivate open(uriTransformer: IURITransformer, _resource: UriComponents, opts: FileOpenOptions): Promise<number> {\n\t\tconst resource = this.transformIncoming(uriTransformer, _resource, true);\n\n\t\treturn this.provider.open(resource, opts);\n\t}\n\n\tprivate close(fd: number): Promise<void> {\n\t\treturn this.provider.close(fd);\n\t}\n\n\tprivate async read(fd: number, pos: number, length: number): Promise<[VSBuffer, number]> {\n\t\tconst buffer = VSBuffer.alloc(length);\n\t\tconst bufferOffset = 0; // offset is 0 because we create a buffer to read into for each call\n\t\tconst bytesRead = await this.provider.read(fd, pos, buffer.buffer, bufferOffset, length);\n\n\t\treturn [buffer, bytesRead];\n\t}\n\n\tprivate write(fd: number, pos: number, data: VSBuffer, offset: number, length: number): Promise<number> {\n\t\treturn this.provider.write(fd, pos, data.buffer, offset, length);\n\t}\n\n\t//#endregion\n\n\t//#region Move/Copy/Delete/Create Folder\n\n\tprivate mkdir(uriTransformer: IURITransformer, _resource: UriComponents): Promise<void> {\n\t\tconst resource = this.transformIncoming(uriTransformer, _resource);\n\n\t\treturn this.provider.mkdir(resource);\n\t}\n\n\tprotected delete(uriTransformer: IURITransformer, _resource: UriComponents, opts: FileDeleteOptions): Promise<void> {\n\t\tconst resource = this.transformIncoming(uriTransformer, _resource);\n\n\t\treturn this.provider.delete(resource, opts);\n\t}\n\n\tprivate rename(uriTransformer: IURITransformer, _source: UriComponents, _target: UriComponents, opts: FileOverwriteOptions): Promise<void> {\n\t\tconst source = this.transformIncoming(uriTransformer, _source);\n\t\tconst target = this.transformIncoming(uriTransformer, _target);\n\n\t\treturn this.provider.rename(source, target, opts);\n\t}\n\n\tprivate copy(uriTransformer: IURITransformer, _source: UriComponents, _target: UriComponents, opts: FileOverwriteOptions): Promise<void> {\n\t\tconst source = this.transformIncoming(uriTransformer, _source);\n\t\tconst target = this.transformIncoming(uriTransformer, _target);\n\n\t\treturn this.provider.copy(source, target, opts);\n\t}\n\n\t//#endregion\n\n\t//#region File Watching\n\n\tprivate readonly sessionToWatcher = new Map<string /* session ID */, ISessionFileWatcher>();\n\tprivate readonly watchRequests = new Map<string /* session ID + request ID */, IDisposable>();\n\n\tprivate onFileChange(uriTransformer: IURITransformer, sessionId: string): Event<IFileChange[] | string> {\n\n\t\t// We want a specific emitter for the given session so that events\n\t\t// from the one session do not end up on the other session. As such\n\t\t// we create a `SessionFileWatcher` and a `Emitter` for that session.\n\n\t\tconst emitter = new Emitter<IFileChange[] | string>({\n\t\t\tonFirstListenerAdd: () => {\n\t\t\t\tthis.sessionToWatcher.set(sessionId, this.createSessionFileWatcher(uriTransformer, emitter));\n\t\t\t},\n\t\t\tonLastListenerRemove: () => {\n\t\t\t\tdispose(this.sessionToWatcher.get(sessionId));\n\t\t\t\tthis.sessionToWatcher.delete(sessionId);\n\t\t\t}\n\t\t});\n\n\t\treturn emitter.event;\n\t}\n\n\tprivate async watch(uriTransformer: IURITransformer, sessionId: string, req: number, _resource: UriComponents, opts: IWatchOptions): Promise<void> {\n\t\tconst watcher = this.sessionToWatcher.get(sessionId);\n\t\tif (watcher) {\n\t\t\tconst resource = this.transformIncoming(uriTransformer, _resource);\n\t\t\tconst disposable = watcher.watch(req, resource, opts);\n\t\t\tthis.watchRequests.set(sessionId + req, disposable);\n\t\t}\n\t}\n\n\tprivate async unwatch(sessionId: string, req: number): Promise<void> {\n\t\tconst id = sessionId + req;\n\t\tconst disposable = this.watchRequests.get(id);\n\t\tif (disposable) {\n\t\t\tdispose(disposable);\n\t\t\tthis.watchRequests.delete(id);\n\t\t}\n\t}\n\n\tprotected abstract createSessionFileWatcher(uriTransformer: IURITransformer, emitter: Emitter<IFileChange[] | string>): ISessionFileWatcher;\n\n\t//#endregion\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.watchRequests.forEach(disposable => dispose(disposable));\n\t\tthis.watchRequests.clear();\n\n\t\tthis.sessionToWatcher.forEach(disposable => dispose(disposable));\n\t\tthis.sessionToWatcher.clear();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport class SyncDescriptor<T> {\n\n\treadonly ctor: any;\n\treadonly staticArguments: any[];\n\treadonly supportsDelayedInstantiation: boolean;\n\n\tconstructor(ctor: new (...args: any[]) => T, staticArguments: any[] = [], supportsDelayedInstantiation: boolean = false) {\n\t\tthis.ctor = ctor;\n\t\tthis.staticArguments = staticArguments;\n\t\tthis.supportsDelayedInstantiation = supportsDelayedInstantiation;\n\t}\n}\n\nexport interface SyncDescriptor0<T> {\n\tctor: any;\n\tbind(): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor1<A1, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor2<A1, A2, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor1<A2, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor3<A1, A2, A3, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor2<A2, A3, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor1<A3, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor4<A1, A2, A3, A4, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor3<A2, A3, A4, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor2<A3, A4, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor1<A4, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor5<A1, A2, A3, A4, A5, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor4<A2, A3, A4, A5, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor3<A3, A4, A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor2<A4, A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor1<A5, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor6<A1, A2, A3, A4, A5, A6, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor5<A2, A3, A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor4<A3, A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor3<A4, A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor2<A5, A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor1<A6, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor6<A2, A3, A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor5<A3, A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor4<A4, A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor3<A5, A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor2<A6, A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor1<A7, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor0<T>;\n}\nexport interface SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tctor: any;\n\tbind(a1: A1): SyncDescriptor7<A2, A3, A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2): SyncDescriptor6<A3, A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3): SyncDescriptor5<A4, A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4): SyncDescriptor4<A5, A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): SyncDescriptor3<A6, A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): SyncDescriptor2<A7, A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): SyncDescriptor1<A8, T>;\n\tbind(a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): SyncDescriptor0<T>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport class Node<T> {\n\n\treadonly data: T;\n\treadonly incoming = new Map<string, Node<T>>();\n\treadonly outgoing = new Map<string, Node<T>>();\n\n\tconstructor(data: T) {\n\t\tthis.data = data;\n\t}\n}\n\nexport class Graph<T> {\n\n\tprivate readonly _nodes = new Map<string, Node<T>>();\n\n\tconstructor(private readonly _hashFn: (element: T) => string) {\n\t\t// empty\n\t}\n\n\troots(): Node<T>[] {\n\t\tconst ret: Node<T>[] = [];\n\t\tfor (let node of this._nodes.values()) {\n\t\t\tif (node.outgoing.size === 0) {\n\t\t\t\tret.push(node);\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\tinsertEdge(from: T, to: T): void {\n\t\tconst fromNode = this.lookupOrInsertNode(from);\n\t\tconst toNode = this.lookupOrInsertNode(to);\n\n\t\tfromNode.outgoing.set(this._hashFn(to), toNode);\n\t\ttoNode.incoming.set(this._hashFn(from), fromNode);\n\t}\n\n\tremoveNode(data: T): void {\n\t\tconst key = this._hashFn(data);\n\t\tthis._nodes.delete(key);\n\t\tfor (let node of this._nodes.values()) {\n\t\t\tnode.outgoing.delete(key);\n\t\t\tnode.incoming.delete(key);\n\t\t}\n\t}\n\n\tlookupOrInsertNode(data: T): Node<T> {\n\t\tconst key = this._hashFn(data);\n\t\tlet node = this._nodes.get(key);\n\n\t\tif (!node) {\n\t\t\tnode = new Node(data);\n\t\t\tthis._nodes.set(key, node);\n\t\t}\n\n\t\treturn node;\n\t}\n\n\tlookup(data: T): Node<T> | undefined {\n\t\treturn this._nodes.get(this._hashFn(data));\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._nodes.size === 0;\n\t}\n\n\ttoString(): string {\n\t\tlet data: string[] = [];\n\t\tfor (let [key, value] of this._nodes) {\n\t\t\tdata.push(`${key}, (incoming)[${[...value.incoming.keys()].join(', ')}], (outgoing)[${[...value.outgoing.keys()].join(',')}]`);\n\n\t\t}\n\t\treturn data.join('\\n');\n\t}\n\n\t/**\n\t * This is brute force and slow and **only** be used\n\t * to trouble shoot.\n\t */\n\tfindCycleSlow() {\n\t\tfor (let [id, node] of this._nodes) {\n\t\t\tconst seen = new Set<string>([id]);\n\t\t\tconst res = this._findCycle(node, seen);\n\t\t\tif (res) {\n\t\t\t\treturn res;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tprivate _findCycle(node: Node<T>, seen: Set<string>): string | undefined {\n\t\tfor (let [id, outgoing] of node.outgoing) {\n\t\t\tif (seen.has(id)) {\n\t\t\t\treturn [...seen, id].join(' -> ');\n\t\t\t}\n\t\t\tseen.add(id);\n\t\t\tconst value = this._findCycle(outgoing, seen);\n\t\t\tif (value) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tseen.delete(id);\n\t\t}\n\t\treturn undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as descriptors from './descriptors';\nimport { ServiceCollection } from './serviceCollection';\n\n// ------ internal util\n\nexport namespace _util {\n\n\texport const serviceIds = new Map<string, ServiceIdentifier<any>>();\n\n\texport const DI_TARGET = '$di$target';\n\texport const DI_DEPENDENCIES = '$di$dependencies';\n\n\texport function getServiceDependencies(ctor: any): { id: ServiceIdentifier<any>, index: number, optional: boolean }[] {\n\t\treturn ctor[DI_DEPENDENCIES] || [];\n\t}\n}\n\n// --- interfaces ------\n\nexport type BrandedService = { _serviceBrand: undefined };\n\nexport interface IConstructorSignature0<T> {\n\tnew(...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature1<A1, T> {\n\tnew <Services extends BrandedService[]>(first: A1, ...services: Services): T;\n}\n\nexport interface IConstructorSignature2<A1, A2, T> {\n\tnew(first: A1, second: A2, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature3<A1, A2, A3, T> {\n\tnew(first: A1, second: A2, third: A3, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature4<A1, A2, A3, A4, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature5<A1, A2, A3, A4, A5, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature6<A1, A2, A3, A4, A5, A6, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, ...services: BrandedService[]): T;\n}\n\nexport interface IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n\tnew(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8, ...services: BrandedService[]): T;\n}\n\nexport interface ServicesAccessor {\n\tget<T>(id: ServiceIdentifier<T>): T;\n}\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('instantiationService');\n\n/**\n * Given a list of arguments as a tuple, attempt to extract the leading, non-service arguments\n * to their own tuple.\n */\ntype GetLeadingNonServiceArgs<Args> =\n\tArgs extends [...BrandedService[]] ? []\n\t: Args extends [infer A1, ...BrandedService[]] ? [A1]\n\t: Args extends [infer A1, infer A2, ...BrandedService[]] ? [A1, A2]\n\t: Args extends [infer A1, infer A2, infer A3, ...BrandedService[]] ? [A1, A2, A3]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, ...BrandedService[]] ? [A1, A2, A3, A4]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...BrandedService[]] ? [A1, A2, A3, A4, A5]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n\t: Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...BrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n\t: never;\n\nexport interface IInstantiationService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Synchronously creates an instance that is denoted by\n\t * the descriptor\n\t */\n\tcreateInstance<T>(descriptor: descriptors.SyncDescriptor0<T>): T;\n\tcreateInstance<A1, T>(descriptor: descriptors.SyncDescriptor1<A1, T>, a1: A1): T;\n\tcreateInstance<A1, A2, T>(descriptor: descriptors.SyncDescriptor2<A1, A2, T>, a1: A1, a2: A2): T;\n\tcreateInstance<A1, A2, A3, T>(descriptor: descriptors.SyncDescriptor3<A1, A2, A3, T>, a1: A1, a2: A2, a3: A3): T;\n\tcreateInstance<A1, A2, A3, A4, T>(descriptor: descriptors.SyncDescriptor4<A1, A2, A3, A4, T>, a1: A1, a2: A2, a3: A3, a4: A4): T;\n\tcreateInstance<A1, A2, A3, A4, A5, T>(descriptor: descriptors.SyncDescriptor5<A1, A2, A3, A4, A5, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, T>(descriptor: descriptors.SyncDescriptor6<A1, A2, A3, A4, A5, A6, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, T>(descriptor: descriptors.SyncDescriptor7<A1, A2, A3, A4, A5, A6, A7, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7): T;\n\tcreateInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(descriptor: descriptors.SyncDescriptor8<A1, A2, A3, A4, A5, A6, A7, A8, T>, a1: A1, a2: A2, a3: A3, a4: A4, a5: A5, a6: A6, a7: A7, a8: A8): T;\n\n\tcreateInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n\n\t/**\n\t *\n\t */\n\tinvokeFunction<R, TS extends any[] = []>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R;\n\n\t/**\n\t * Creates a child of this service which inherts all current services\n\t * and adds/overwrites the given services\n\t */\n\tcreateChild(services: ServiceCollection): IInstantiationService;\n}\n\n\n/**\n * Identifies a service of type T\n */\nexport interface ServiceIdentifier<T> {\n\t(...args: any[]): void;\n\ttype: T;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number, optional: boolean): void {\n\tif ((target as any)[_util.DI_TARGET] === target) {\n\t\t(target as any)[_util.DI_DEPENDENCIES].push({ id, index, optional });\n\t} else {\n\t\t(target as any)[_util.DI_DEPENDENCIES] = [{ id, index, optional }];\n\t\t(target as any)[_util.DI_TARGET] = target;\n\t}\n}\n\n/**\n * The *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator<T>(serviceId: string): ServiceIdentifier<T> {\n\n\tif (_util.serviceIds.has(serviceId)) {\n\t\treturn _util.serviceIds.get(serviceId)!;\n\t}\n\n\tconst id = <any>function (target: Function, key: string, index: number): any {\n\t\tif (arguments.length !== 3) {\n\t\t\tthrow new Error('@IServiceName-decorator can only be used to decorate a parameter');\n\t\t}\n\t\tstoreServiceDependency(id, target, index, false);\n\t};\n\n\tid.toString = () => serviceId;\n\n\t_util.serviceIds.set(serviceId, id);\n\treturn id;\n}\n\nexport function refineServiceDecorator<T1, T extends T1>(serviceIdentifier: ServiceIdentifier<T1>): ServiceIdentifier<T> {\n\treturn <ServiceIdentifier<T>>serviceIdentifier;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport * as types from 'vs/base/common/types';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IWorkspaceFolder } from 'vs/platform/workspace/common/workspace';\n\nexport const IConfigurationService = createDecorator<IConfigurationService>('configurationService');\n\nexport function isConfigurationOverrides(thing: any): thing is IConfigurationOverrides {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& (!thing.overrideIdentifier || typeof thing.overrideIdentifier === 'string')\n\t\t&& (!thing.resource || thing.resource instanceof URI);\n}\n\nexport interface IConfigurationOverrides {\n\toverrideIdentifier?: string | null;\n\tresource?: URI | null;\n}\n\nexport function isConfigurationUpdateOverrides(thing: any): thing is IConfigurationUpdateOverrides {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& (!thing.overrideIdentifiers || types.isArray(thing.overrideIdentifiers))\n\t\t&& !thing.overrideIdentifier\n\t\t&& (!thing.resource || thing.resource instanceof URI);\n}\n\nexport type IConfigurationUpdateOverrides = Omit<IConfigurationOverrides, 'overrideIdentifier'> & { overrideIdentifiers?: string[] | null; };\n\nexport const enum ConfigurationTarget {\n\tUSER = 1,\n\tUSER_LOCAL,\n\tUSER_REMOTE,\n\tWORKSPACE,\n\tWORKSPACE_FOLDER,\n\tDEFAULT,\n\tMEMORY\n}\nexport function ConfigurationTargetToString(configurationTarget: ConfigurationTarget) {\n\tswitch (configurationTarget) {\n\t\tcase ConfigurationTarget.USER: return 'USER';\n\t\tcase ConfigurationTarget.USER_LOCAL: return 'USER_LOCAL';\n\t\tcase ConfigurationTarget.USER_REMOTE: return 'USER_REMOTE';\n\t\tcase ConfigurationTarget.WORKSPACE: return 'WORKSPACE';\n\t\tcase ConfigurationTarget.WORKSPACE_FOLDER: return 'WORKSPACE_FOLDER';\n\t\tcase ConfigurationTarget.DEFAULT: return 'DEFAULT';\n\t\tcase ConfigurationTarget.MEMORY: return 'MEMORY';\n\t}\n}\n\nexport interface IConfigurationChange {\n\tkeys: string[];\n\toverrides: [string, string[]][];\n}\n\nexport interface IConfigurationChangeEvent {\n\n\treadonly source: ConfigurationTarget;\n\treadonly affectedKeys: string[];\n\treadonly change: IConfigurationChange;\n\n\taffectsConfiguration(configuration: string, overrides?: IConfigurationOverrides): boolean;\n\n\t// Following data is used for telemetry\n\treadonly sourceConfig: any;\n}\n\nexport interface IConfigurationValue<T> {\n\n\treadonly defaultValue?: T;\n\treadonly userValue?: T;\n\treadonly userLocalValue?: T;\n\treadonly userRemoteValue?: T;\n\treadonly workspaceValue?: T;\n\treadonly workspaceFolderValue?: T;\n\treadonly memoryValue?: T;\n\treadonly value?: T;\n\n\treadonly default?: { value?: T, override?: T };\n\treadonly user?: { value?: T, override?: T };\n\treadonly userLocal?: { value?: T, override?: T };\n\treadonly userRemote?: { value?: T, override?: T };\n\treadonly workspace?: { value?: T, override?: T };\n\treadonly workspaceFolder?: { value?: T, override?: T };\n\treadonly memory?: { value?: T, override?: T };\n\n\treadonly overrideIdentifiers?: string[];\n}\n\nexport interface IConfigurationService {\n\treadonly _serviceBrand: undefined;\n\n\tonDidChangeConfiguration: Event<IConfigurationChangeEvent>;\n\n\tgetConfigurationData(): IConfigurationData | null;\n\n\t/**\n\t * Fetches the value of the section for the given overrides.\n\t * Value can be of native type or an object keyed off the section name.\n\t *\n\t * @param section - Section of the configuraion. Can be `null` or `undefined`.\n\t * @param overrides - Overrides that has to be applied while fetching\n\t *\n\t */\n\tgetValue<T>(): T;\n\tgetValue<T>(section: string): T;\n\tgetValue<T>(overrides: IConfigurationOverrides): T;\n\tgetValue<T>(section: string, overrides: IConfigurationOverrides): T;\n\n\tupdateValue(key: string, value: any): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides | IConfigurationUpdateOverrides): Promise<void>;\n\tupdateValue(key: string, value: any, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides | IConfigurationUpdateOverrides, target: ConfigurationTarget, donotNotifyError?: boolean): Promise<void>;\n\n\tinspect<T>(key: string, overrides?: IConfigurationOverrides): IConfigurationValue<Readonly<T>>;\n\n\treloadConfiguration(target?: ConfigurationTarget | IWorkspaceFolder): Promise<void>;\n\n\tkeys(): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t\tmemory?: string[];\n\t};\n}\n\nexport interface IConfigurationModel {\n\tcontents: any;\n\tkeys: string[];\n\toverrides: IOverrides[];\n}\n\nexport interface IOverrides {\n\tkeys: string[];\n\tcontents: any;\n\tidentifiers: string[];\n}\n\nexport interface IConfigurationData {\n\tdefaults: IConfigurationModel;\n\tuser: IConfigurationModel;\n\tworkspace: IConfigurationModel;\n\tfolders: [UriComponents, IConfigurationModel][];\n}\n\nexport interface IConfigurationCompareResult {\n\tadded: string[];\n\tremoved: string[];\n\tupdated: string[];\n\toverrides: [string, string[]][];\n}\n\nexport function toValuesTree(properties: { [qualifiedKey: string]: any }, conflictReporter: (message: string) => void): any {\n\tconst root = Object.create(null);\n\n\tfor (let key in properties) {\n\t\taddToValueTree(root, key, properties[key], conflictReporter);\n\t}\n\n\treturn root;\n}\n\nexport function addToValueTree(settingsTreeRoot: any, key: string, value: any, conflictReporter: (message: string) => void): void {\n\tconst segments = key.split('.');\n\tconst last = segments.pop()!;\n\n\tlet curr = settingsTreeRoot;\n\tfor (let i = 0; i < segments.length; i++) {\n\t\tlet s = segments[i];\n\t\tlet obj = curr[s];\n\t\tswitch (typeof obj) {\n\t\t\tcase 'undefined':\n\t\t\t\tobj = curr[s] = Object.create(null);\n\t\t\t\tbreak;\n\t\t\tcase 'object':\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconflictReporter(`Ignoring ${key} as ${segments.slice(0, i + 1).join('.')} is ${JSON.stringify(obj)}`);\n\t\t\t\treturn;\n\t\t}\n\t\tcurr = obj;\n\t}\n\n\tif (typeof curr === 'object' && curr !== null) {\n\t\ttry {\n\t\t\tcurr[last] = value; // workaround https://github.com/microsoft/vscode/issues/13606\n\t\t} catch (e) {\n\t\t\tconflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n\t\t}\n\t} else {\n\t\tconflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n\t}\n}\n\nexport function removeFromValueTree(valueTree: any, key: string): void {\n\tconst segments = key.split('.');\n\tdoRemoveFromValueTree(valueTree, segments);\n}\n\nfunction doRemoveFromValueTree(valueTree: any, segments: string[]): void {\n\tconst first = segments.shift()!;\n\tif (segments.length === 0) {\n\t\t// Reached last segment\n\t\tdelete valueTree[first];\n\t\treturn;\n\t}\n\n\tif (Object.keys(valueTree).indexOf(first) !== -1) {\n\t\tconst value = valueTree[first];\n\t\tif (typeof value === 'object' && !Array.isArray(value)) {\n\t\t\tdoRemoveFromValueTree(value, segments);\n\t\t\tif (Object.keys(value).length === 0) {\n\t\t\t\tdelete valueTree[first];\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * A helper function to get the configuration value with a specific settings path (e.g. config.some.setting)\n */\nexport function getConfigurationValue<T>(config: any, settingPath: string, defaultValue?: T): T {\n\tfunction accessSetting(config: any, path: string[]): any {\n\t\tlet current = config;\n\t\tfor (const component of path) {\n\t\t\tif (typeof current !== 'object' || current === null) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tcurrent = current[component];\n\t\t}\n\t\treturn <T>current;\n\t}\n\n\tconst path = settingPath.split('.');\n\tconst result = accessSetting(config, path);\n\n\treturn typeof result === 'undefined' ? defaultValue : result;\n}\n\nexport function merge(base: any, add: any, overwrite: boolean): void {\n\tObject.keys(add).forEach(key => {\n\t\tif (key !== '__proto__') {\n\t\t\tif (key in base) {\n\t\t\t\tif (types.isObject(base[key]) && types.isObject(add[key])) {\n\t\t\t\t\tmerge(base[key], add[key], overwrite);\n\t\t\t\t} else if (overwrite) {\n\t\t\t\t\tbase[key] = add[key];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbase[key] = add[key];\n\t\t\t}\n\t\t}\n\t});\n}\n\nexport function getMigratedSettingValue<T>(configurationService: IConfigurationService, currentSettingName: string, legacySettingName: string): T {\n\tconst setting = configurationService.inspect<T>(currentSettingName);\n\tconst legacySetting = configurationService.inspect<T>(legacySettingName);\n\n\tif (typeof setting.userValue !== 'undefined' || typeof setting.workspaceValue !== 'undefined' || typeof setting.workspaceFolderValue !== 'undefined') {\n\t\treturn setting.value!;\n\t} else if (typeof legacySetting.userValue !== 'undefined' || typeof legacySetting.workspaceValue !== 'undefined' || typeof legacySetting.workspaceFolderValue !== 'undefined') {\n\t\treturn legacySetting.value!;\n\t} else {\n\t\treturn setting.defaultValue!;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { ProcessItem } from 'vs/base/common/processes';\nimport { UriComponents } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IMainProcessInfo } from 'vs/platform/launch/common/launch';\nimport { IWorkspace } from 'vs/platform/workspace/common/workspace';\n\nexport const ID = 'diagnosticsService';\nexport const IDiagnosticsService = createDecorator<IDiagnosticsService>(ID);\n\nexport interface IDiagnosticsService {\n\treadonly _serviceBrand: undefined;\n\n\tgetPerformanceInfo(mainProcessInfo: IMainProcessInfo, remoteInfo: (IRemoteDiagnosticInfo | IRemoteDiagnosticError)[]): Promise<PerformanceInfo>;\n\tgetSystemInfo(mainProcessInfo: IMainProcessInfo, remoteInfo: (IRemoteDiagnosticInfo | IRemoteDiagnosticError)[]): Promise<SystemInfo>;\n\tgetDiagnostics(mainProcessInfo: IMainProcessInfo, remoteInfo: (IRemoteDiagnosticInfo | IRemoteDiagnosticError)[]): Promise<string>;\n\treportWorkspaceStats(workspace: IWorkspaceInformation): Promise<void>;\n}\n\nexport interface IMachineInfo {\n\tos: string;\n\tcpus?: string;\n\tmemory: string;\n\tvmHint: string;\n\tlinuxEnv?: ILinuxEnv;\n}\n\nexport interface ILinuxEnv {\n\tdesktopSession?: string;\n\txdgSessionDesktop?: string;\n\txdgCurrentDesktop?: string;\n\txdgSessionType?: string;\n}\n\nexport interface IDiagnosticInfo {\n\tmachineInfo: IMachineInfo;\n\tworkspaceMetadata?: IStringDictionary<WorkspaceStats>;\n\tprocesses?: ProcessItem;\n}\nexport interface SystemInfo extends IMachineInfo {\n\tprocessArgs: string;\n\tgpuStatus: any;\n\tscreenReader: string;\n\tremoteData: (IRemoteDiagnosticInfo | IRemoteDiagnosticError)[];\n\tload?: string;\n}\n\nexport interface IRemoteDiagnosticInfo extends IDiagnosticInfo {\n\thostName: string;\n}\n\nexport interface IRemoteDiagnosticError {\n\thostName: string;\n\terrorMessage: string;\n}\n\nexport interface IDiagnosticInfoOptions {\n\tincludeProcesses?: boolean;\n\tfolders?: UriComponents[];\n\tincludeExtensions?: boolean;\n}\n\nexport interface WorkspaceStatItem {\n\tname: string;\n\tcount: number;\n}\n\nexport interface WorkspaceStats {\n\tfileTypes: WorkspaceStatItem[];\n\tconfigFiles: WorkspaceStatItem[];\n\tfileCount: number;\n\tmaxFilesReached: boolean;\n\tlaunchConfigFiles: WorkspaceStatItem[];\n}\n\nexport interface PerformanceInfo {\n\tprocessInfo?: string;\n\tworkspaceInfo?: string;\n}\n\nexport interface IWorkspaceInformation extends IWorkspace {\n\ttelemetryId: string | undefined;\n\trendererSessionId: string;\n}\n\nexport function isRemoteDiagnosticError(x: any): x is IRemoteDiagnosticError {\n\treturn !!x.hostName && !!x.errorMessage;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ICommonEncryptionService } from 'vs/platform/encryption/common/encryptionService';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IEncryptionMainService = createDecorator<IEncryptionMainService>('encryptionMainService');\n\nexport interface IEncryptionMainService extends ICommonEncryptionService { }\n\nexport interface Encryption {\n\tencrypt(salt: string, value: string): Promise<string>;\n\tdecrypt(salt: string, value: string): Promise<string>;\n}\nexport class EncryptionMainService implements ICommonEncryptionService {\n\tdeclare readonly _serviceBrand: undefined;\n\tconstructor(\n\t\tprivate machineId: string) {\n\n\t}\n\n\tprivate encryption(): Promise<Encryption> {\n\t\treturn new Promise((resolve, reject) => require(['vscode-encrypt'], resolve, reject));\n\t}\n\n\tasync encrypt(value: string): Promise<string> {\n\t\ttry {\n\t\t\tconst encryption = await this.encryption();\n\t\t\treturn encryption.encrypt(this.machineId, value);\n\t\t} catch (e) {\n\t\t\treturn value;\n\t\t}\n\t}\n\n\tasync decrypt(value: string): Promise<string> {\n\t\ttry {\n\t\t\tconst encryption = await this.encryption();\n\t\t\treturn encryption.decrypt(this.machineId, value);\n\t\t} catch (e) {\n\t\t\treturn value;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { ExtensionKind } from 'vs/platform/extensions/common/extensions';\nimport { createDecorator, refineServiceDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IEnvironmentService = createDecorator<IEnvironmentService>('environmentService');\nexport const INativeEnvironmentService = refineServiceDecorator<IEnvironmentService, INativeEnvironmentService>(IEnvironmentService);\n\nexport interface IDebugParams {\n\tport: number | null;\n\tbreak: boolean;\n}\n\nexport interface IExtensionHostDebugParams extends IDebugParams {\n\tdebugId?: string;\n\tenv?: Record<string, string>;\n}\n\n/**\n * A basic environment service that can be used in various processes,\n * such as main, renderer and shared process. Use subclasses of this\n * service for specific environment.\n */\nexport interface IEnvironmentService {\n\n\treadonly _serviceBrand: undefined;\n\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t//\n\t// NOTE: KEEP THIS INTERFACE AS SMALL AS POSSIBLE.\n\t//\n\t// AS SUCH:\n\t//   - PUT NON-WEB PROPERTIES INTO NATIVE ENVIRONMENT SERVICE\n\t//   - PUT WORKBENCH ONLY PROPERTIES INTO WORKBENCH ENVIRONMENT SERVICE\n\t//   - PUT ELECTRON-MAIN ONLY PROPERTIES INTO MAIN ENVIRONMENT SERVICE\n\t//\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n\t// --- user roaming data\n\tuserRoamingDataHome: URI;\n\tsettingsResource: URI;\n\tkeybindingsResource: URI;\n\tkeyboardLayoutResource: URI;\n\targvResource: URI;\n\tsnippetsHome: URI;\n\n\t// --- data paths\n\tuntitledWorkspacesHome: URI;\n\tglobalStorageHome: URI;\n\tworkspaceStorageHome: URI;\n\tcacheHome: URI;\n\n\t// --- settings sync\n\tuserDataSyncHome: URI;\n\tuserDataSyncLogResource: URI;\n\tsync: 'on' | 'off' | undefined;\n\n\t// --- extension development\n\tdebugExtensionHost: IExtensionHostDebugParams;\n\tisExtensionDevelopment: boolean;\n\tdisableExtensions: boolean | string[];\n\tenableExtensions?: readonly string[];\n\textensionDevelopmentLocationURI?: URI[];\n\textensionDevelopmentKind?: ExtensionKind[];\n\textensionTestsLocationURI?: URI;\n\n\t// --- logging\n\tlogsPath: string;\n\tlogLevel?: string;\n\tverbose: boolean;\n\tisBuilt: boolean;\n\n\t// --- telemetry\n\tdisableTelemetry: boolean;\n\ttelemetryLogResource: URI;\n\tserviceMachineIdResource: URI;\n\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t//\n\t// NOTE: KEEP THIS INTERFACE AS SMALL AS POSSIBLE.\n\t//\n\t// AS SUCH:\n\t//   - PUT NON-WEB PROPERTIES INTO NATIVE ENVIRONMENT SERVICE\n\t//   - PUT WORKBENCH ONLY PROPERTIES INTO WORKBENCH ENVIRONMENT SERVICE\n\t//   - PUT ELECTRON-MAIN ONLY PROPERTIES INTO MAIN ENVIRONMENT SERVICE\n\t//\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n}\n\n/**\n * A subclass of the `IEnvironmentService` to be used only in native\n * environments (Windows, Linux, macOS) but not e.g. web.\n */\nexport interface INativeEnvironmentService extends IEnvironmentService {\n\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t//\n\t// NOTE: KEEP THIS INTERFACE AS SMALL AS POSSIBLE.\n\t//\n\t// AS SUCH:\n\t//   - PUT WORKBENCH ONLY PROPERTIES INTO WORKBENCH ENVIRONMENT SERVICE\n\t//   - PUT ELECTRON-MAIN ONLY PROPERTIES INTO MAIN ENVIRONMENT SERVICE\n\t//\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n\t// --- CLI Arguments\n\targs: NativeParsedArgs;\n\n\t// --- data paths\n\tappRoot: string;\n\tuserHome: URI;\n\tappSettingsHome: URI;\n\ttmpDir: URI;\n\tuserDataPath: string;\n\tmachineSettingsResource: URI;\n\tinstallSourcePath: string;\n\n\t// --- extensions\n\textensionsPath: string;\n\textensionsDownloadPath: string;\n\tbuiltinExtensionsPath: string;\n\n\t// --- smoke test support\n\tdriverHandle?: string;\n\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\t//\n\t// NOTE: KEEP THIS INTERFACE AS SMALL AS POSSIBLE.\n\t//\n\t// AS SUCH:\n\t//   - PUT NON-WEB PROPERTIES INTO NATIVE ENVIRONMENT SERVICE\n\t//   - PUT WORKBENCH ONLY PROPERTIES INTO WORKBENCH ENVIRONMENT SERVICE\n\t//   - PUT ELECTRON-MAIN ONLY PROPERTIES INTO MAIN ENVIRONMENT SERVICE\n\t//\n\t// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { Event } from 'vs/base/common/event';\nimport { FileAccess } from 'vs/base/common/network';\nimport { IPager } from 'vs/base/common/paging';\nimport { Platform } from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { ExtensionType, IExtension, IExtensionManifest } from 'vs/platform/extensions/common/extensions';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const EXTENSION_IDENTIFIER_PATTERN = '^([a-z0-9A-Z][a-z0-9-A-Z]*)\\\\.([a-z0-9A-Z][a-z0-9-A-Z]*)$';\nexport const EXTENSION_IDENTIFIER_REGEX = new RegExp(EXTENSION_IDENTIFIER_PATTERN);\nexport const WEB_EXTENSION_TAG = '__web_extension';\n\nexport const enum TargetPlatform {\n\tWIN32_X64 = 'win32-x64',\n\tWIN32_IA32 = 'win32-ia32',\n\tWIN32_ARM64 = 'win32-arm64',\n\n\tLINUX_X64 = 'linux-x64',\n\tLINUX_ARM64 = 'linux-arm64',\n\tLINUX_ARMHF = 'linux-armhf',\n\n\tALPINE_X64 = 'alpine-x64',\n\tALPINE_ARM64 = 'alpine-arm64',\n\n\tDARWIN_X64 = 'darwin-x64',\n\tDARWIN_ARM64 = 'darwin-arm64',\n\n\tWEB = 'web',\n\n\tUNIVERSAL = 'universal',\n\tUNKNOWN = 'unknown',\n\tUNDEFINED = 'undefined',\n}\n\nexport function TargetPlatformToString(targetPlatform: TargetPlatform) {\n\tswitch (targetPlatform) {\n\t\tcase TargetPlatform.WIN32_X64: return 'Windows 64 bit';\n\t\tcase TargetPlatform.WIN32_IA32: return 'Windows 32 bit';\n\t\tcase TargetPlatform.WIN32_ARM64: return 'Windows ARM';\n\n\t\tcase TargetPlatform.LINUX_X64: return 'Linux 64 bit';\n\t\tcase TargetPlatform.LINUX_ARM64: return 'Linux ARM 64';\n\t\tcase TargetPlatform.LINUX_ARMHF: return 'Linux ARM';\n\n\t\tcase TargetPlatform.ALPINE_X64: return 'Alpine Linux 64 bit';\n\t\tcase TargetPlatform.ALPINE_ARM64: return 'Alpine ARM 64';\n\n\t\tcase TargetPlatform.DARWIN_X64: return 'Mac';\n\t\tcase TargetPlatform.DARWIN_ARM64: return 'Mac Silicon';\n\n\t\tcase TargetPlatform.WEB: return 'Web';\n\n\t\tcase TargetPlatform.UNIVERSAL: return TargetPlatform.UNIVERSAL;\n\t\tcase TargetPlatform.UNKNOWN: return TargetPlatform.UNKNOWN;\n\t\tcase TargetPlatform.UNDEFINED: return TargetPlatform.UNDEFINED;\n\t}\n}\n\nexport function toTargetPlatform(targetPlatform: string): TargetPlatform {\n\tswitch (targetPlatform) {\n\t\tcase TargetPlatform.WIN32_X64: return TargetPlatform.WIN32_X64;\n\t\tcase TargetPlatform.WIN32_IA32: return TargetPlatform.WIN32_IA32;\n\t\tcase TargetPlatform.WIN32_ARM64: return TargetPlatform.WIN32_ARM64;\n\n\t\tcase TargetPlatform.LINUX_X64: return TargetPlatform.LINUX_X64;\n\t\tcase TargetPlatform.LINUX_ARM64: return TargetPlatform.LINUX_ARM64;\n\t\tcase TargetPlatform.LINUX_ARMHF: return TargetPlatform.LINUX_ARMHF;\n\n\t\tcase TargetPlatform.ALPINE_X64: return TargetPlatform.ALPINE_X64;\n\t\tcase TargetPlatform.ALPINE_ARM64: return TargetPlatform.ALPINE_ARM64;\n\n\t\tcase TargetPlatform.DARWIN_X64: return TargetPlatform.DARWIN_X64;\n\t\tcase TargetPlatform.DARWIN_ARM64: return TargetPlatform.DARWIN_ARM64;\n\n\t\tcase TargetPlatform.WEB: return TargetPlatform.WEB;\n\n\t\tcase TargetPlatform.UNIVERSAL: return TargetPlatform.UNIVERSAL;\n\t\tdefault: return TargetPlatform.UNKNOWN;\n\t}\n}\n\nexport function getTargetPlatform(platform: Platform | 'alpine', arch: string | undefined): TargetPlatform {\n\tswitch (platform) {\n\t\tcase Platform.Windows:\n\t\t\tif (arch === 'x64') {\n\t\t\t\treturn TargetPlatform.WIN32_X64;\n\t\t\t}\n\t\t\tif (arch === 'ia32') {\n\t\t\t\treturn TargetPlatform.WIN32_IA32;\n\t\t\t}\n\t\t\tif (arch === 'arm64') {\n\t\t\t\treturn TargetPlatform.WIN32_ARM64;\n\t\t\t}\n\t\t\treturn TargetPlatform.UNKNOWN;\n\n\t\tcase Platform.Linux:\n\t\t\tif (arch === 'x64') {\n\t\t\t\treturn TargetPlatform.LINUX_X64;\n\t\t\t}\n\t\t\tif (arch === 'arm64') {\n\t\t\t\treturn TargetPlatform.LINUX_ARM64;\n\t\t\t}\n\t\t\tif (arch === 'arm') {\n\t\t\t\treturn TargetPlatform.LINUX_ARMHF;\n\t\t\t}\n\t\t\treturn TargetPlatform.UNKNOWN;\n\n\t\tcase 'alpine':\n\t\t\tif (arch === 'x64') {\n\t\t\t\treturn TargetPlatform.ALPINE_X64;\n\t\t\t}\n\t\t\tif (arch === 'arm64') {\n\t\t\t\treturn TargetPlatform.ALPINE_ARM64;\n\t\t\t}\n\t\t\treturn TargetPlatform.UNKNOWN;\n\n\t\tcase Platform.Mac:\n\t\t\tif (arch === 'x64') {\n\t\t\t\treturn TargetPlatform.DARWIN_X64;\n\t\t\t}\n\t\t\tif (arch === 'arm64') {\n\t\t\t\treturn TargetPlatform.DARWIN_ARM64;\n\t\t\t}\n\t\t\treturn TargetPlatform.UNKNOWN;\n\n\t\tcase Platform.Web: return TargetPlatform.WEB;\n\t}\n}\n\nexport function isNotWebExtensionInWebTargetPlatform(allTargetPlatforms: TargetPlatform[], productTargetPlatform: TargetPlatform): boolean {\n\t// Not a web extension in web target platform\n\treturn productTargetPlatform === TargetPlatform.WEB && !allTargetPlatforms.includes(TargetPlatform.WEB);\n}\n\nexport function isTargetPlatformCompatible(extensionTargetPlatform: TargetPlatform, allTargetPlatforms: TargetPlatform[], productTargetPlatform: TargetPlatform): boolean {\n\t// Not compatible when extension is not a web extension in web target platform\n\tif (isNotWebExtensionInWebTargetPlatform(allTargetPlatforms, productTargetPlatform)) {\n\t\treturn false;\n\t}\n\n\t// Compatible when extension target platform is not defined\n\tif (extensionTargetPlatform === TargetPlatform.UNDEFINED) {\n\t\treturn true;\n\t}\n\n\t// Compatible when extension target platform is universal\n\tif (extensionTargetPlatform === TargetPlatform.UNIVERSAL) {\n\t\treturn true;\n\t}\n\n\t// Not compatible when extension target platform is unknown\n\tif (extensionTargetPlatform === TargetPlatform.UNKNOWN) {\n\t\treturn false;\n\t}\n\n\t// Compatible when extension and product target platforms matches\n\tif (extensionTargetPlatform === productTargetPlatform) {\n\t\treturn true;\n\t}\n\n\t// Fallback\n\tconst fallbackTargetPlatforms = getFallbackTargetPlarforms(productTargetPlatform);\n\treturn fallbackTargetPlatforms.includes(extensionTargetPlatform);\n}\n\nexport function getFallbackTargetPlarforms(targetPlatform: TargetPlatform): TargetPlatform[] {\n\tswitch (targetPlatform) {\n\t\tcase TargetPlatform.WIN32_X64: return [TargetPlatform.WIN32_IA32];\n\t\tcase TargetPlatform.WIN32_ARM64: return [TargetPlatform.WIN32_IA32];\n\t}\n\treturn [];\n}\n\nexport interface IGalleryExtensionProperties {\n\tdependencies?: string[];\n\textensionPack?: string[];\n\tengine?: string;\n\tlocalizedLanguages?: string[];\n\ttargetPlatform: TargetPlatform;\n\tisPreReleaseVersion: boolean;\n}\n\nexport interface IGalleryExtensionAsset {\n\turi: string;\n\tfallbackUri: string;\n}\n\nexport interface IGalleryExtensionAssets {\n\tmanifest: IGalleryExtensionAsset | null;\n\treadme: IGalleryExtensionAsset | null;\n\tchangelog: IGalleryExtensionAsset | null;\n\tlicense: IGalleryExtensionAsset | null;\n\trepository: IGalleryExtensionAsset | null;\n\tdownload: IGalleryExtensionAsset;\n\ticon: IGalleryExtensionAsset;\n\tcoreTranslations: [string, IGalleryExtensionAsset][];\n}\n\nexport function isIExtensionIdentifier(thing: any): thing is IExtensionIdentifier {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.id === 'string'\n\t\t&& (!thing.uuid || typeof thing.uuid === 'string');\n}\n\n/* __GDPR__FRAGMENT__\n\t\"ExtensionIdentifier\" : {\n\t\t\"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"uuid\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t}\n */\nexport interface IExtensionIdentifier {\n\tid: string;\n\tuuid?: string;\n}\n\nexport interface IExtensionIdentifierWithVersion extends IExtensionIdentifier {\n\tid: string;\n\tuuid?: string;\n\tversion: string;\n}\n\nexport interface IExtensionIdentifierWithPreRelease extends IExtensionIdentifier {\n\tpreRelease: boolean;\n}\n\nexport interface IGalleryExtensionIdentifier extends IExtensionIdentifier {\n\tuuid: string;\n}\n\nexport interface IGalleryExtensionVersion {\n\tversion: string;\n\tdate: string;\n\tisPreReleaseVersion: boolean;\n}\n\nexport interface IGalleryExtension {\n\tname: string;\n\tidentifier: IGalleryExtensionIdentifier;\n\tversion: string;\n\tdisplayName: string;\n\tpublisherId: string;\n\tpublisher: string;\n\tpublisherDisplayName: string;\n\tpublisherDomain?: { link: string, verified: boolean };\n\tdescription: string;\n\tinstallCount: number;\n\trating: number;\n\tratingCount: number;\n\tcategories: readonly string[];\n\ttags: readonly string[];\n\treleaseDate: number;\n\tlastUpdated: number;\n\tpreview: boolean;\n\thasPreReleaseVersion: boolean;\n\thasReleaseVersion: boolean;\n\tallTargetPlatforms: TargetPlatform[];\n\tassets: IGalleryExtensionAssets;\n\tproperties: IGalleryExtensionProperties;\n\ttelemetryData?: any;\n}\n\nexport interface IGalleryMetadata {\n\tid: string;\n\tpublisherId: string;\n\tpublisherDisplayName: string;\n\tisPreReleaseVersion: boolean,\n}\n\nexport type Metadata = Partial<IGalleryMetadata & { isMachineScoped: boolean; isBuiltin: boolean; preRelease: boolean, installedTimestamp: number }>;\n\nexport interface ILocalExtension extends IExtension {\n\tisMachineScoped: boolean;\n\tpublisherId: string | null;\n\tpublisherDisplayName: string | null;\n\tinstalledTimestamp?: number;\n\tisPreReleaseVersion: boolean;\n\tpreRelease: boolean;\n}\n\nexport const enum SortBy {\n\tNoneOrRelevance = 0,\n\tLastUpdatedDate = 1,\n\tTitle = 2,\n\tPublisherName = 3,\n\tInstallCount = 4,\n\tPublishedDate = 10,\n\tAverageRating = 6,\n\tWeightedRating = 12\n}\n\nexport const enum SortOrder {\n\tDefault = 0,\n\tAscending = 1,\n\tDescending = 2\n}\n\nexport interface IQueryOptions {\n\ttext?: string;\n\tids?: string[];\n\tnames?: string[];\n\tpageSize?: number;\n\tsortBy?: SortBy;\n\tsortOrder?: SortOrder;\n\tsource?: string;\n\tincludePreRelease?: boolean;\n}\n\nexport const enum StatisticType {\n\tInstall = 'install',\n\tUninstall = 'uninstall'\n}\n\nexport interface IExtensionsControlManifest {\n\tmalicious: IExtensionIdentifier[];\n\tunsupportedPreReleaseExtensions?: IStringDictionary<{ id: string, displayName: string }>;\n}\n\nexport const enum InstallOperation {\n\tNone = 1,\n\tInstall,\n\tUpdate,\n\tMigrate,\n}\n\nexport interface ITranslation {\n\tcontents: { [key: string]: {} };\n}\n\nexport const IExtensionGalleryService = createDecorator<IExtensionGalleryService>('extensionGalleryService');\nexport interface IExtensionGalleryService {\n\treadonly _serviceBrand: undefined;\n\tisEnabled(): boolean;\n\tquery(options: IQueryOptions, token: CancellationToken): Promise<IPager<IGalleryExtension>>;\n\tgetExtensions(identifiers: ReadonlyArray<IExtensionIdentifier | IExtensionIdentifierWithVersion>, token: CancellationToken): Promise<IGalleryExtension[]>;\n\tgetExtensions(identifiers: ReadonlyArray<IExtensionIdentifier | IExtensionIdentifierWithVersion>, includePreRelease: boolean, token: CancellationToken): Promise<IGalleryExtension[]>;\n\tgetExtensions2(identifiers: ReadonlyArray<IExtensionIdentifierWithPreRelease>): Promise<IGalleryExtension[]>;\n\tdownload(extension: IGalleryExtension, location: URI, operation: InstallOperation): Promise<void>;\n\treportStatistic(publisher: string, name: string, version: string, type: StatisticType): Promise<void>;\n\tgetReadme(extension: IGalleryExtension, token: CancellationToken): Promise<string>;\n\tgetManifest(extension: IGalleryExtension, token: CancellationToken): Promise<IExtensionManifest | null>;\n\tgetChangelog(extension: IGalleryExtension, token: CancellationToken): Promise<string>;\n\tgetCoreTranslation(extension: IGalleryExtension, languageId: string): Promise<ITranslation | null>;\n\tgetExtensionsControlManifest(): Promise<IExtensionsControlManifest>;\n\tisExtensionCompatible(extension: IGalleryExtension, includePreRelease: boolean, targetPlatform: TargetPlatform): Promise<boolean>;\n\tgetCompatibleExtension(extension: IGalleryExtension, includePreRelease: boolean, targetPlatform: TargetPlatform): Promise<IGalleryExtension | null>;\n\tgetCompatibleExtension(id: IExtensionIdentifier, includePreRelease: boolean, targetPlatform: TargetPlatform): Promise<IGalleryExtension | null>;\n\tgetAllCompatibleVersions(extension: IGalleryExtension, includePreRelease: boolean, targetPlatform: TargetPlatform): Promise<IGalleryExtensionVersion[]>;\n}\n\nexport interface InstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\tsource: URI | IGalleryExtension;\n}\n\nexport interface InstallExtensionResult {\n\treadonly identifier: IExtensionIdentifier;\n\treadonly operation: InstallOperation;\n\treadonly source?: URI | IGalleryExtension;\n\treadonly local?: ILocalExtension;\n}\n\nexport interface DidUninstallExtensionEvent {\n\tidentifier: IExtensionIdentifier;\n\terror?: string;\n}\n\nexport enum ExtensionManagementErrorCode {\n\tUnsupported = 'Unsupported',\n\tUnsupportedPreRelease = 'UnsupportedPreRelease',\n\tMalicious = 'Malicious',\n\tIncompatible = 'Incompatible',\n\tIncompatiblePreRelease = 'IncompatiblePreRelease',\n\tIncompatibleTargetPlatform = 'IncompatibleTargetPlatform',\n\tInvalid = 'Invalid',\n\tDownload = 'Download',\n\tExtract = 'Extract',\n\tDelete = 'Delete',\n\tRename = 'Rename',\n\tCorruptZip = 'CorruptZip',\n\tIncompleteZip = 'IncompleteZip',\n\tInternal = 'Internal',\n}\n\nexport class ExtensionManagementError extends Error {\n\tconstructor(message: string, readonly code: ExtensionManagementErrorCode) {\n\t\tsuper(message);\n\t\tthis.name = code;\n\t}\n}\n\nexport type InstallOptions = { isBuiltin?: boolean, isMachineScoped?: boolean, donotIncludePackAndDependencies?: boolean, installGivenVersion?: boolean, installPreReleaseVersion?: boolean };\nexport type InstallVSIXOptions = Omit<InstallOptions, 'installGivenVersion'> & { installOnlyNewlyAddedFromExtensionPack?: boolean };\nexport type UninstallOptions = { donotIncludePack?: boolean, donotCheckDependents?: boolean };\n\nexport interface IExtensionManagementParticipant {\n\tpostInstall(local: ILocalExtension, source: URI | IGalleryExtension, options: InstallOptions | InstallVSIXOptions, token: CancellationToken): Promise<void>;\n\tpostUninstall(local: ILocalExtension, options: UninstallOptions, token: CancellationToken): Promise<void>;\n}\n\nexport const IExtensionManagementService = createDecorator<IExtensionManagementService>('extensionManagementService');\nexport interface IExtensionManagementService {\n\treadonly _serviceBrand: undefined;\n\n\tonInstallExtension: Event<InstallExtensionEvent>;\n\tonDidInstallExtensions: Event<readonly InstallExtensionResult[]>;\n\tonUninstallExtension: Event<IExtensionIdentifier>;\n\tonDidUninstallExtension: Event<DidUninstallExtensionEvent>;\n\n\tzip(extension: ILocalExtension): Promise<URI>;\n\tunzip(zipLocation: URI): Promise<IExtensionIdentifier>;\n\tgetManifest(vsix: URI): Promise<IExtensionManifest>;\n\tinstall(vsix: URI, options?: InstallVSIXOptions): Promise<ILocalExtension>;\n\tcanInstall(extension: IGalleryExtension): Promise<boolean>;\n\tinstallFromGallery(extension: IGalleryExtension, options?: InstallOptions): Promise<ILocalExtension>;\n\tuninstall(extension: ILocalExtension, options?: UninstallOptions): Promise<void>;\n\treinstallFromGallery(extension: ILocalExtension): Promise<void>;\n\tgetInstalled(type?: ExtensionType, donotIgnoreInvalidExtensions?: boolean): Promise<ILocalExtension[]>;\n\tgetExtensionsControlManifest(): Promise<IExtensionsControlManifest>;\n\n\tupdateMetadata(local: ILocalExtension, metadata: IGalleryMetadata): Promise<ILocalExtension>;\n\tupdateExtensionScope(local: ILocalExtension, isMachineScoped: boolean): Promise<ILocalExtension>;\n\n\tregisterParticipant(pariticipant: IExtensionManagementParticipant): void;\n\tgetTargetPlatform(): Promise<TargetPlatform>;\n}\n\nexport const DISABLED_EXTENSIONS_STORAGE_PATH = 'extensionsIdentifiers/disabled';\nexport const ENABLED_EXTENSIONS_STORAGE_PATH = 'extensionsIdentifiers/enabled';\nexport const IGlobalExtensionEnablementService = createDecorator<IGlobalExtensionEnablementService>('IGlobalExtensionEnablementService');\n\nexport interface IGlobalExtensionEnablementService {\n\treadonly _serviceBrand: undefined;\n\treadonly onDidChangeEnablement: Event<{ readonly extensions: IExtensionIdentifier[], readonly source?: string }>;\n\n\tgetDisabledExtensions(): IExtensionIdentifier[];\n\tenableExtension(extension: IExtensionIdentifier, source?: string): Promise<boolean>;\n\tdisableExtension(extension: IExtensionIdentifier, source?: string): Promise<boolean>;\n\n}\n\nexport type IConfigBasedExtensionTip = {\n\treadonly extensionId: string,\n\treadonly extensionName: string,\n\treadonly isExtensionPack: boolean,\n\treadonly configName: string,\n\treadonly important: boolean,\n};\n\nexport type IExecutableBasedExtensionTip = {\n\treadonly extensionId: string,\n\treadonly extensionName: string,\n\treadonly isExtensionPack: boolean,\n\treadonly exeName: string,\n\treadonly exeFriendlyName: string,\n\treadonly windowsPath?: string,\n};\n\nexport type IWorkspaceTips = { readonly remoteSet: string[]; readonly recommendations: string[]; };\n\nexport const IExtensionTipsService = createDecorator<IExtensionTipsService>('IExtensionTipsService');\nexport interface IExtensionTipsService {\n\treadonly _serviceBrand: undefined;\n\n\tgetConfigBasedTips(folder: URI): Promise<IConfigBasedExtensionTip[]>;\n\tgetImportantExecutableBasedTips(): Promise<IExecutableBasedExtensionTip[]>;\n\tgetOtherExecutableBasedTips(): Promise<IExecutableBasedExtensionTip[]>;\n\tgetAllWorkspacesTips(): Promise<IWorkspaceTips[]>;\n}\n\n\nexport const DefaultIconPath = FileAccess.asBrowserUri('./media/defaultIcon.png', require).toString(true);\nexport const ExtensionsLabel = localize('extensions', \"Extensions\");\nexport const ExtensionsLocalizedLabel = { value: ExtensionsLabel, original: 'Extensions' };\nexport const ExtensionsChannelId = 'extensions';\nexport const PreferencesLabel = localize('preferences', \"Preferences\");\nexport const PreferencesLocalizedLabel = { value: PreferencesLabel, original: 'Preferences' };\n\n\nexport interface CLIOutput {\n\tlog(s: string): void;\n\terror(s: string): void;\n}\n\nexport const IExtensionManagementCLIService = createDecorator<IExtensionManagementCLIService>('IExtensionManagementCLIService');\nexport interface IExtensionManagementCLIService {\n\treadonly _serviceBrand: undefined;\n\n\tlistExtensions(showVersions: boolean, category?: string, output?: CLIOutput): Promise<void>;\n\tinstallExtensions(extensions: (string | URI)[], builtinExtensionIds: string[], installOptions: InstallOptions, force: boolean, output?: CLIOutput): Promise<void>;\n\tuninstallExtensions(extensions: (string | URI)[], force: boolean, output?: CLIOutput): Promise<void>;\n\tlocateExtension(extensions: string[], output?: CLIOutput): Promise<void>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IExtensionUrlTrustService = createDecorator<IExtensionUrlTrustService>('extensionUrlTrustService');\n\nexport interface IExtensionUrlTrustService {\n\treadonly _serviceBrand: undefined;\n\tisExtensionUrlTrusted(extensionId: string, url: string): Promise<boolean>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { SerializedError } from 'vs/base/common/errors';\nimport { Event } from 'vs/base/common/event';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IExtensionHostStarter = createDecorator<IExtensionHostStarter>('extensionHostStarter');\n\nexport const ipcExtensionHostStarterChannelName = 'extensionHostStarter';\n\nexport interface IExtensionHostProcessOptions {\n\tenv: { [key: string]: string | undefined; };\n\tdetached: boolean;\n\texecArgv: string[] | undefined;\n\tsilent: boolean;\n}\n\nexport interface IExtensionHostStarter {\n\treadonly _serviceBrand: undefined;\n\n\tonDynamicStdout(id: string): Event<string>;\n\tonDynamicStderr(id: string): Event<string>;\n\tonDynamicMessage(id: string): Event<any>;\n\tonDynamicError(id: string): Event<{ error: SerializedError; }>;\n\tonDynamicExit(id: string): Event<{ code: number; signal: string }>;\n\n\tcreateExtensionHost(): Promise<{ id: string; }>;\n\tstart(id: string, opts: IExtensionHostProcessOptions): Promise<{ pid: number; }>;\n\tenableInspectPort(id: string): Promise<boolean>;\n\tkill(id: string): Promise<void>;\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ITerminalEnvironment } from 'vs/platform/terminal/common/terminal';\n\nexport const IExternalTerminalService = createDecorator<IExternalTerminalService>('externalTerminal');\n\nexport interface IExternalTerminalSettings {\n\tlinuxExec?: string;\n\tosxExec?: string;\n\twindowsExec?: string;\n}\n\nexport interface ITerminalForPlatform {\n\twindows: string,\n\tlinux: string,\n\tosx: string\n}\n\nexport interface IExternalTerminalService {\n\treadonly _serviceBrand: undefined;\n\topenTerminal(configuration: IExternalTerminalSettings, cwd: string | undefined): Promise<void>;\n\trunInTerminal(title: string, cwd: string, args: string[], env: ITerminalEnvironment, settings: IExternalTerminalSettings): Promise<number | undefined>;\n\tgetDefaultTerminalForPlatforms(): Promise<ITerminalForPlatform>;\n}\n\nexport interface IExternalTerminalConfiguration {\n\tterminal: {\n\t\texplorerKind: 'integrated' | 'external',\n\t\texternal: IExternalTerminalSettings;\n\t};\n}\n\nexport const DEFAULT_TERMINAL_OSX = 'Terminal.app';\n\nexport const IExternalTerminalMainService = createDecorator<IExternalTerminalMainService>('externalTerminal');\n\nexport interface IExternalTerminalMainService extends IExternalTerminalService {\n\treadonly _serviceBrand: undefined;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as cp from 'child_process';\nimport { FileAccess } from 'vs/base/common/network';\nimport * as path from 'vs/base/common/path';\nimport * as env from 'vs/base/common/platform';\nimport { sanitizeProcessEnvironment } from 'vs/base/common/processes';\nimport * as pfs from 'vs/base/node/pfs';\nimport * as processes from 'vs/base/node/processes';\nimport * as nls from 'vs/nls';\nimport { DEFAULT_TERMINAL_OSX, IExternalTerminalMainService, IExternalTerminalSettings, ITerminalForPlatform } from 'vs/platform/externalTerminal/common/externalTerminal';\nimport { ITerminalEnvironment } from 'vs/platform/terminal/common/terminal';\n\nconst TERMINAL_TITLE = nls.localize('console.title', \"VS Code Console\");\n\nabstract class ExternalTerminalService {\n\tpublic _serviceBrand: undefined;\n\n\tasync getDefaultTerminalForPlatforms(): Promise<ITerminalForPlatform> {\n\t\treturn {\n\t\t\twindows: WindowsExternalTerminalService.getDefaultTerminalWindows(),\n\t\t\tlinux: await LinuxExternalTerminalService.getDefaultTerminalLinuxReady(),\n\t\t\tosx: 'xterm'\n\t\t};\n\t}\n}\n\nexport class WindowsExternalTerminalService extends ExternalTerminalService implements IExternalTerminalMainService {\n\tprivate static readonly CMD = 'cmd.exe';\n\tprivate static _DEFAULT_TERMINAL_WINDOWS: string;\n\n\tpublic openTerminal(configuration: IExternalTerminalSettings, cwd?: string): Promise<void> {\n\t\treturn this.spawnTerminal(cp, configuration, processes.getWindowsShell(), cwd);\n\t}\n\n\tpublic spawnTerminal(spawner: typeof cp, configuration: IExternalTerminalSettings, command: string, cwd?: string): Promise<void> {\n\t\tconst exec = configuration.windowsExec || WindowsExternalTerminalService.getDefaultTerminalWindows();\n\n\t\t// Make the drive letter uppercase on Windows (see #9448)\n\t\tif (cwd && cwd[1] === ':') {\n\t\t\tcwd = cwd[0].toUpperCase() + cwd.substr(1);\n\t\t}\n\n\t\t// cmder ignores the environment cwd and instead opts to always open in %USERPROFILE%\n\t\t// unless otherwise specified\n\t\tconst basename = path.basename(exec).toLowerCase();\n\t\tif (basename === 'cmder' || basename === 'cmder.exe') {\n\t\t\tspawner.spawn(exec, cwd ? [cwd] : undefined);\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tconst cmdArgs = ['/c', 'start', '/wait'];\n\t\tif (exec.indexOf(' ') >= 0) {\n\t\t\t// The \"\" argument is the window title. Without this, exec doesn't work when the path\n\t\t\t// contains spaces\n\t\t\tcmdArgs.push('\"\"');\n\t\t}\n\t\tcmdArgs.push(exec);\n\t\t// Add starting directory parameter for Windows Terminal (see #90734)\n\t\tif (basename === 'wt' || basename === 'wt.exe') {\n\t\t\tcmdArgs.push('-d .');\n\t\t}\n\n\t\treturn new Promise<void>((c, e) => {\n\t\t\tconst env = getSanitizedEnvironment(process);\n\t\t\tconst child = spawner.spawn(command, cmdArgs, { cwd, env });\n\t\t\tchild.on('error', e);\n\t\t\tchild.on('exit', () => c());\n\t\t});\n\t}\n\n\tpublic runInTerminal(title: string, dir: string, args: string[], envVars: ITerminalEnvironment, settings: IExternalTerminalSettings): Promise<number | undefined> {\n\t\tconst exec = 'windowsExec' in settings && settings.windowsExec ? settings.windowsExec : WindowsExternalTerminalService.getDefaultTerminalWindows();\n\n\t\treturn new Promise<number | undefined>((resolve, reject) => {\n\n\t\t\tconst title = `\"${dir} - ${TERMINAL_TITLE}\"`;\n\t\t\tconst command = `\"\"${args.join('\" \"')}\" & pause\"`; // use '|' to only pause on non-zero exit code\n\n\t\t\tconst cmdArgs = [\n\t\t\t\t'/c', 'start', title, '/wait', exec, '/c', command\n\t\t\t];\n\n\t\t\t// merge environment variables into a copy of the process.env\n\t\t\tconst env = Object.assign({}, getSanitizedEnvironment(process), envVars);\n\n\t\t\t// delete environment variables that have a null value\n\t\t\tObject.keys(env).filter(v => env[v] === null).forEach(key => delete env[key]);\n\n\t\t\tconst options: any = {\n\t\t\t\tcwd: dir,\n\t\t\t\tenv: env,\n\t\t\t\twindowsVerbatimArguments: true\n\t\t\t};\n\n\t\t\tconst cmd = cp.spawn(WindowsExternalTerminalService.CMD, cmdArgs, options);\n\t\t\tcmd.on('error', err => {\n\t\t\t\treject(improveError(err));\n\t\t\t});\n\n\t\t\tresolve(undefined);\n\t\t});\n\t}\n\n\tpublic static getDefaultTerminalWindows(): string {\n\t\tif (!WindowsExternalTerminalService._DEFAULT_TERMINAL_WINDOWS) {\n\t\t\tconst isWoW64 = !!process.env.hasOwnProperty('PROCESSOR_ARCHITEW6432');\n\t\t\tWindowsExternalTerminalService._DEFAULT_TERMINAL_WINDOWS = `${process.env.windir ? process.env.windir : 'C:\\\\Windows'}\\\\${isWoW64 ? 'Sysnative' : 'System32'}\\\\cmd.exe`;\n\t\t}\n\t\treturn WindowsExternalTerminalService._DEFAULT_TERMINAL_WINDOWS;\n\t}\n}\n\nexport class MacExternalTerminalService extends ExternalTerminalService implements IExternalTerminalMainService {\n\tprivate static readonly OSASCRIPT = '/usr/bin/osascript';\t// osascript is the AppleScript interpreter on OS X\n\n\tpublic openTerminal(configuration: IExternalTerminalSettings, cwd?: string): Promise<void> {\n\t\treturn this.spawnTerminal(cp, configuration, cwd);\n\t}\n\n\tpublic runInTerminal(title: string, dir: string, args: string[], envVars: ITerminalEnvironment, settings: IExternalTerminalSettings): Promise<number | undefined> {\n\n\t\tconst terminalApp = settings.osxExec || DEFAULT_TERMINAL_OSX;\n\n\t\treturn new Promise<number | undefined>((resolve, reject) => {\n\n\t\t\tif (terminalApp === DEFAULT_TERMINAL_OSX || terminalApp === 'iTerm.app') {\n\n\t\t\t\t// On OS X we launch an AppleScript that creates (or reuses) a Terminal window\n\t\t\t\t// and then launches the program inside that window.\n\n\t\t\t\tconst script = terminalApp === DEFAULT_TERMINAL_OSX ? 'TerminalHelper' : 'iTermHelper';\n\t\t\t\tconst scriptpath = FileAccess.asFileUri(`vs/workbench/contrib/externalTerminal/node/${script}.scpt`, require).fsPath;\n\n\t\t\t\tconst osaArgs = [\n\t\t\t\t\tscriptpath,\n\t\t\t\t\t'-t', title || TERMINAL_TITLE,\n\t\t\t\t\t'-w', dir,\n\t\t\t\t];\n\n\t\t\t\tfor (let a of args) {\n\t\t\t\t\tosaArgs.push('-a');\n\t\t\t\t\tosaArgs.push(a);\n\t\t\t\t}\n\n\t\t\t\tif (envVars) {\n\t\t\t\t\t// merge environment variables into a copy of the process.env\n\t\t\t\t\tconst env = Object.assign({}, getSanitizedEnvironment(process), envVars);\n\n\t\t\t\t\tfor (let key in env) {\n\t\t\t\t\t\tconst value = env[key];\n\t\t\t\t\t\tif (value === null) {\n\t\t\t\t\t\t\tosaArgs.push('-u');\n\t\t\t\t\t\t\tosaArgs.push(key);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tosaArgs.push('-e');\n\t\t\t\t\t\t\tosaArgs.push(`${key}=${value}`);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlet stderr = '';\n\t\t\t\tconst osa = cp.spawn(MacExternalTerminalService.OSASCRIPT, osaArgs);\n\t\t\t\tosa.on('error', err => {\n\t\t\t\t\treject(improveError(err));\n\t\t\t\t});\n\t\t\t\tosa.stderr.on('data', (data) => {\n\t\t\t\t\tstderr += data.toString();\n\t\t\t\t});\n\t\t\t\tosa.on('exit', (code: number) => {\n\t\t\t\t\tif (code === 0) {\t// OK\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (stderr) {\n\t\t\t\t\t\t\tconst lines = stderr.split('\\n', 1);\n\t\t\t\t\t\t\treject(new Error(lines[0]));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treject(new Error(nls.localize('mac.terminal.script.failed', \"Script '{0}' failed with exit code {1}\", script, code)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treject(new Error(nls.localize('mac.terminal.type.not.supported', \"'{0}' not supported\", terminalApp)));\n\t\t\t}\n\t\t});\n\t}\n\n\tspawnTerminal(spawner: typeof cp, configuration: IExternalTerminalSettings, cwd?: string): Promise<void> {\n\t\tconst terminalApp = configuration.osxExec || DEFAULT_TERMINAL_OSX;\n\n\t\treturn new Promise<void>((c, e) => {\n\t\t\tconst args = ['-a', terminalApp];\n\t\t\tif (cwd) {\n\t\t\t\targs.push(cwd);\n\t\t\t}\n\t\t\tconst env = getSanitizedEnvironment(process);\n\t\t\tconst child = spawner.spawn('/usr/bin/open', args, { cwd, env });\n\t\t\tchild.on('error', e);\n\t\t\tchild.on('exit', () => c());\n\t\t});\n\t}\n}\n\nexport class LinuxExternalTerminalService extends ExternalTerminalService implements IExternalTerminalMainService {\n\n\tprivate static readonly WAIT_MESSAGE = nls.localize('press.any.key', \"Press any key to continue...\");\n\n\tpublic openTerminal(configuration: IExternalTerminalSettings, cwd?: string): Promise<void> {\n\t\treturn this.spawnTerminal(cp, configuration, cwd);\n\t}\n\n\tpublic runInTerminal(title: string, dir: string, args: string[], envVars: ITerminalEnvironment, settings: IExternalTerminalSettings): Promise<number | undefined> {\n\n\t\tconst execPromise = settings.linuxExec ? Promise.resolve(settings.linuxExec) : LinuxExternalTerminalService.getDefaultTerminalLinuxReady();\n\n\t\treturn new Promise<number | undefined>((resolve, reject) => {\n\n\t\t\tlet termArgs: string[] = [];\n\t\t\t//termArgs.push('--title');\n\t\t\t//termArgs.push(`\"${TERMINAL_TITLE}\"`);\n\t\t\texecPromise.then(exec => {\n\t\t\t\tif (exec.indexOf('gnome-terminal') >= 0) {\n\t\t\t\t\ttermArgs.push('-x');\n\t\t\t\t} else {\n\t\t\t\t\ttermArgs.push('-e');\n\t\t\t\t}\n\t\t\t\ttermArgs.push('bash');\n\t\t\t\ttermArgs.push('-c');\n\n\t\t\t\tconst bashCommand = `${quote(args)}; echo; read -p \"${LinuxExternalTerminalService.WAIT_MESSAGE}\" -n1;`;\n\t\t\t\ttermArgs.push(`''${bashCommand}''`);\t// wrapping argument in two sets of ' because node is so \"friendly\" that it removes one set...\n\n\n\t\t\t\t// merge environment variables into a copy of the process.env\n\t\t\t\tconst env = Object.assign({}, getSanitizedEnvironment(process), envVars);\n\n\t\t\t\t// delete environment variables that have a null value\n\t\t\t\tObject.keys(env).filter(v => env[v] === null).forEach(key => delete env[key]);\n\n\t\t\t\tconst options: any = {\n\t\t\t\t\tcwd: dir,\n\t\t\t\t\tenv: env\n\t\t\t\t};\n\n\t\t\t\tlet stderr = '';\n\t\t\t\tconst cmd = cp.spawn(exec, termArgs, options);\n\t\t\t\tcmd.on('error', err => {\n\t\t\t\t\treject(improveError(err));\n\t\t\t\t});\n\t\t\t\tcmd.stderr.on('data', (data) => {\n\t\t\t\t\tstderr += data.toString();\n\t\t\t\t});\n\t\t\t\tcmd.on('exit', (code: number) => {\n\t\t\t\t\tif (code === 0) {\t// OK\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (stderr) {\n\t\t\t\t\t\t\tconst lines = stderr.split('\\n', 1);\n\t\t\t\t\t\t\treject(new Error(lines[0]));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treject(new Error(nls.localize('linux.term.failed', \"'{0}' failed with exit code {1}\", exec, code)));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate static _DEFAULT_TERMINAL_LINUX_READY: Promise<string>;\n\n\tpublic static async getDefaultTerminalLinuxReady(): Promise<string> {\n\t\tif (!LinuxExternalTerminalService._DEFAULT_TERMINAL_LINUX_READY) {\n\t\t\tif (!env.isLinux) {\n\t\t\t\tLinuxExternalTerminalService._DEFAULT_TERMINAL_LINUX_READY = Promise.resolve('xterm');\n\t\t\t} else {\n\t\t\t\tconst isDebian = await pfs.Promises.exists('/etc/debian_version');\n\t\t\t\tLinuxExternalTerminalService._DEFAULT_TERMINAL_LINUX_READY = new Promise<string>(r => {\n\t\t\t\t\tif (isDebian) {\n\t\t\t\t\t\tr('x-terminal-emulator');\n\t\t\t\t\t} else if (process.env.DESKTOP_SESSION === 'gnome' || process.env.DESKTOP_SESSION === 'gnome-classic') {\n\t\t\t\t\t\tr('gnome-terminal');\n\t\t\t\t\t} else if (process.env.DESKTOP_SESSION === 'kde-plasma') {\n\t\t\t\t\t\tr('konsole');\n\t\t\t\t\t} else if (process.env.COLORTERM) {\n\t\t\t\t\t\tr(process.env.COLORTERM);\n\t\t\t\t\t} else if (process.env.TERM) {\n\t\t\t\t\t\tr(process.env.TERM);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tr('xterm');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn LinuxExternalTerminalService._DEFAULT_TERMINAL_LINUX_READY;\n\t}\n\n\tspawnTerminal(spawner: typeof cp, configuration: IExternalTerminalSettings, cwd?: string): Promise<void> {\n\t\tconst execPromise = configuration.linuxExec ? Promise.resolve(configuration.linuxExec) : LinuxExternalTerminalService.getDefaultTerminalLinuxReady();\n\n\t\treturn new Promise<void>((c, e) => {\n\t\t\texecPromise.then(exec => {\n\t\t\t\tconst env = getSanitizedEnvironment(process);\n\t\t\t\tconst child = spawner.spawn(exec, [], { cwd, env });\n\t\t\t\tchild.on('error', e);\n\t\t\t\tchild.on('exit', () => c());\n\t\t\t});\n\t\t});\n\t}\n}\n\nfunction getSanitizedEnvironment(process: NodeJS.Process) {\n\tconst env = { ...process.env };\n\tsanitizeProcessEnvironment(env);\n\treturn env;\n}\n\n/**\n * tries to turn OS errors into more meaningful error messages\n */\nfunction improveError(err: Error & { errno?: string, path?: string }): Error {\n\tif ('errno' in err && err['errno'] === 'ENOENT' && 'path' in err && typeof err['path'] === 'string') {\n\t\treturn new Error(nls.localize('ext.term.app.not.found', \"can't find terminal application '{0}'\", err['path']));\n\t}\n\treturn err;\n}\n\n/**\n * Quote args if necessary and combine into a space separated string.\n */\nfunction quote(args: string[]): string {\n\tlet r = '';\n\tfor (let a of args) {\n\t\tif (a.indexOf(' ') >= 0) {\n\t\t\tr += '\"' + a + '\"';\n\t\t} else {\n\t\t\tr += a;\n\t\t}\n\t\tr += ' ';\n\t}\n\treturn r;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer, VSBufferReadable, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Event } from 'vs/base/common/event';\nimport { IExpression } from 'vs/base/common/glob';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { sep } from 'vs/base/common/path';\nimport { ReadableStreamEvents } from 'vs/base/common/stream';\nimport { startsWithIgnoreCase } from 'vs/base/common/strings';\nimport { isNumber } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\n//#region file service & providers\n\nexport const IFileService = createDecorator<IFileService>('fileService');\n\nexport interface IFileService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * An event that is fired when a file system provider is added or removed\n\t */\n\treadonly onDidChangeFileSystemProviderRegistrations: Event<IFileSystemProviderRegistrationEvent>;\n\n\t/**\n\t * An event that is fired when a registered file system provider changes it's capabilities.\n\t */\n\treadonly onDidChangeFileSystemProviderCapabilities: Event<IFileSystemProviderCapabilitiesChangeEvent>;\n\n\t/**\n\t * An event that is fired when a file system provider is about to be activated. Listeners\n\t * can join this event with a long running promise to help in the activation process.\n\t */\n\treadonly onWillActivateFileSystemProvider: Event<IFileSystemProviderActivationEvent>;\n\n\t/**\n\t * Registers a file system provider for a certain scheme.\n\t */\n\tregisterProvider(scheme: string, provider: IFileSystemProvider): IDisposable;\n\n\t/**\n\t * Returns a file system provider for a certain scheme.\n\t */\n\tgetProvider(scheme: string): IFileSystemProvider | undefined;\n\n\t/**\n\t * Tries to activate a provider with the given scheme.\n\t */\n\tactivateProvider(scheme: string): Promise<void>;\n\n\t/**\n\t * Checks if this file service can handle the given resource by\n\t * first activating any extension that wants to be activated\n\t * on the provided resource scheme to include extensions that\n\t * contribute file system providers for the given resource.\n\t */\n\tcanHandleResource(resource: URI): Promise<boolean>;\n\n\t/**\n\t * Checks if the file service has a registered provider for the\n\t * provided resource.\n\t *\n\t * Note: this does NOT account for contributed providers from\n\t * extensions that have not been activated yet. To include those,\n\t * consider to call `await fileService.canHandleResource(resource)`.\n\t */\n\thasProvider(resource: URI): boolean;\n\n\t/**\n\t * Checks if the provider for the provided resource has the provided file system capability.\n\t */\n\thasCapability(resource: URI, capability: FileSystemProviderCapabilities): boolean;\n\n\t/**\n\t * List the schemes and capabilies for registered file system providers\n\t */\n\tlistCapabilities(): Iterable<{ scheme: string, capabilities: FileSystemProviderCapabilities }>\n\n\t/**\n\t * Allows to listen for file changes. The event will fire for every file within the opened workspace\n\t * (if any) as well as all files that have been watched explicitly using the #watch() API.\n\t */\n\treadonly onDidFilesChange: Event<FileChangesEvent>;\n\n\t/**\n\t *\n\t * Raw access to all file events emitted from file system providers.\n\t *\n\t * @deprecated use this method only if you know what you are doing. use the other watch related events\n\t * and APIs for more efficient file watching.\n\t */\n\treadonly onDidChangeFilesRaw: Event<IRawFileChangesEvent>;\n\n\t/**\n\t * An event that is fired upon successful completion of a certain file operation.\n\t */\n\treadonly onDidRunOperation: Event<FileOperationEvent>;\n\n\t/**\n\t * Resolve the properties of a file/folder identified by the resource.\n\t *\n\t * If the optional parameter \"resolveTo\" is specified in options, the stat service is asked\n\t * to provide a stat object that should contain the full graph of folders up to all of the\n\t * target resources.\n\t *\n\t * If the optional parameter \"resolveSingleChildDescendants\" is specified in options,\n\t * the stat service is asked to automatically resolve child folders that only\n\t * contain a single element.\n\t *\n\t * If the optional parameter \"resolveMetadata\" is specified in options,\n\t * the stat will contain metadata information such as size, mtime and etag.\n\t */\n\tresolve(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tresolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\n\t/**\n\t * Same as resolve() but supports resolving multiple resources in parallel.\n\t * If one of the resolve targets fails to resolve returns a fake IFileStat instead of making the whole call fail.\n\t */\n\tresolveAll(toResolve: { resource: URI, options: IResolveMetadataFileOptions }[]): Promise<IResolveFileResult[]>;\n\tresolveAll(toResolve: { resource: URI, options?: IResolveFileOptions }[]): Promise<IResolveFileResult[]>;\n\n\t/**\n\t * Finds out if a file/folder identified by the resource exists.\n\t */\n\texists(resource: URI): Promise<boolean>;\n\n\t/**\n\t * Read the contents of the provided resource unbuffered.\n\t */\n\treadFile(resource: URI, options?: IReadFileOptions): Promise<IFileContent>;\n\n\t/**\n\t * Read the contents of the provided resource buffered as stream.\n\t */\n\treadFileStream(resource: URI, options?: IReadFileStreamOptions): Promise<IFileStreamContent>;\n\n\t/**\n\t * Updates the content replacing its previous value.\n\t */\n\twriteFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: IWriteFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Moves the file/folder to a new path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tmove(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Find out if a move operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanMove(source: URI, target: URI, overwrite?: boolean): Promise<Error | true>;\n\n\t/**\n\t * Copies the file/folder to a path identified by the resource.\n\t *\n\t * The optional parameter overwrite can be set to replace an existing file at the location.\n\t */\n\tcopy(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Find out if a copy operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanCopy(source: URI, target: URI, overwrite?: boolean): Promise<Error | true>;\n\n\t/**\n\t * Find out if a file create operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanCreateFile(resource: URI, options?: ICreateFileOptions): Promise<Error | true>;\n\n\t/**\n\t * Creates a new file with the given path and optional contents. The returned promise\n\t * will have the stat model object as a result.\n\t *\n\t * The optional parameter content can be used as value to fill into the new file.\n\t */\n\tcreateFile(resource: URI, bufferOrReadableOrStream?: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: ICreateFileOptions): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Creates a new folder with the given path. The returned promise\n\t * will have the stat model object as a result.\n\t */\n\tcreateFolder(resource: URI): Promise<IFileStatWithMetadata>;\n\n\t/**\n\t * Deletes the provided file. The optional useTrash parameter allows to\n\t * move the file to trash. The optional recursive parameter allows to delete\n\t * non-empty folders recursively.\n\t */\n\tdel(resource: URI, options?: Partial<FileDeleteOptions>): Promise<void>;\n\n\t/**\n\t * Find out if a delete operation is possible given the arguments. No changes on disk will\n\t * be performed. Returns an Error if the operation cannot be done.\n\t */\n\tcanDelete(resource: URI, options?: Partial<FileDeleteOptions>): Promise<Error | true>;\n\n\t/**\n\t * Allows to start a watcher that reports file/folder change events on the provided resource.\n\t *\n\t * Note: watching a folder does not report events recursively for child folders yet.\n\t */\n\twatch(resource: URI): IDisposable;\n\n\t/**\n\t * Frees up any resources occupied by this service.\n\t */\n\tdispose(): void;\n}\n\nexport interface FileOverwriteOptions {\n\n\t/**\n\t * Set to `true` to overwrite a file if it exists. Will\n\t * throw an error otherwise if the file does exist.\n\t */\n\treadonly overwrite: boolean;\n}\n\nexport interface FileUnlockOptions {\n\n\t/**\n\t * Set to `true` to try to remove any write locks the file might\n\t * have. A file that is write locked will throw an error for any\n\t * attempt to write to unless `unlock: true` is provided.\n\t */\n\treadonly unlock: boolean;\n}\n\nexport interface FileReadStreamOptions {\n\n\t/**\n\t * Is an integer specifying where to begin reading from in the file. If position is undefined,\n\t * data will be read from the current file position.\n\t */\n\treadonly position?: number;\n\n\t/**\n\t * Is an integer specifying how many bytes to read from the file. By default, all bytes\n\t * will be read.\n\t */\n\treadonly length?: number;\n\n\t/**\n\t * If provided, the size of the file will be checked against the limits.\n\t */\n\tlimits?: {\n\t\treadonly size?: number;\n\t\treadonly memory?: number;\n\t};\n}\n\nexport interface FileWriteOptions extends FileOverwriteOptions, FileUnlockOptions {\n\n\t/**\n\t * Set to `true` to create a file when it does not exist. Will\n\t * throw an error otherwise if the file does not exist.\n\t */\n\treadonly create: boolean;\n}\n\nexport type FileOpenOptions = FileOpenForReadOptions | FileOpenForWriteOptions;\n\nexport function isFileOpenForWriteOptions(options: FileOpenOptions): options is FileOpenForWriteOptions {\n\treturn options.create === true;\n}\n\nexport interface FileOpenForReadOptions {\n\n\t/**\n\t * A hint that the file should be opened for reading only.\n\t */\n\treadonly create: false;\n}\n\nexport interface FileOpenForWriteOptions extends FileUnlockOptions {\n\n\t/**\n\t * A hint that the file should be opened for reading and writing.\n\t */\n\treadonly create: true;\n}\n\nexport interface FileDeleteOptions {\n\n\t/**\n\t * Set to `true` to recursively delete any children of the file. This\n\t * only applies to folders and can lead to an error unless provided\n\t * if the folder is not empty.\n\t */\n\treadonly recursive: boolean;\n\n\t/**\n\t * Set to `true` to attempt to move the file to trash\n\t * instead of deleting it permanently from disk. This\n\t * option maybe not be supported on all providers.\n\t */\n\treadonly useTrash: boolean;\n}\n\nexport enum FileType {\n\n\t/**\n\t * File is unknown (neither file, directory nor symbolic link).\n\t */\n\tUnknown = 0,\n\n\t/**\n\t * File is a normal file.\n\t */\n\tFile = 1,\n\n\t/**\n\t * File is a directory.\n\t */\n\tDirectory = 2,\n\n\t/**\n\t * File is a symbolic link.\n\t *\n\t * Note: even when the file is a symbolic link, you can test for\n\t * `FileType.File` and `FileType.Directory` to know the type of\n\t * the target the link points to.\n\t */\n\tSymbolicLink = 64\n}\n\nexport enum FilePermission {\n\n\t/**\n\t * File is readonly.\n\t */\n\tReadonly = 1\n}\n\nexport interface IStat {\n\n\t/**\n\t * The file type.\n\t */\n\treadonly type: FileType;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t */\n\treadonly mtime: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t */\n\treadonly ctime: number;\n\n\t/**\n\t * The size of the file in bytes.\n\t */\n\treadonly size: number;\n\n\t/**\n\t * The file permissions.\n\t */\n\treadonly permissions?: FilePermission;\n}\n\nexport interface IWatchOptions {\n\n\t/**\n\t * Set to `true` to watch for changes recursively in a folder\n\t * and all of its children.\n\t */\n\treadonly recursive: boolean;\n\n\t/**\n\t * A set of paths to exclude from watching.\n\t */\n\texcludes: string[];\n}\n\nexport const enum FileSystemProviderCapabilities {\n\n\t/**\n\t * Provider supports unbuffered read/write.\n\t */\n\tFileReadWrite = 1 << 1,\n\n\t/**\n\t * Provider supports open/read/write/close low level file operations.\n\t */\n\tFileOpenReadWriteClose = 1 << 2,\n\n\t/**\n\t * Provider supports stream based reading.\n\t */\n\tFileReadStream = 1 << 4,\n\n\t/**\n\t * Provider supports copy operation.\n\t */\n\tFileFolderCopy = 1 << 3,\n\n\t/**\n\t * Provider is path case sensitive.\n\t */\n\tPathCaseSensitive = 1 << 10,\n\n\t/**\n\t * All files of the provider are readonly.\n\t */\n\tReadonly = 1 << 11,\n\n\t/**\n\t * Provider supports to delete via trash.\n\t */\n\tTrash = 1 << 12,\n\n\t/**\n\t * Provider support to unlock files for writing.\n\t */\n\tFileWriteUnlock = 1 << 13\n}\n\nexport interface IFileSystemProvider {\n\n\treadonly capabilities: FileSystemProviderCapabilities;\n\treadonly onDidChangeCapabilities: Event<void>;\n\n\treadonly onDidErrorOccur?: Event<string>;\n\n\treadonly onDidChangeFile: Event<readonly IFileChange[]>;\n\twatch(resource: URI, opts: IWatchOptions): IDisposable;\n\n\tstat(resource: URI): Promise<IStat>;\n\tmkdir(resource: URI): Promise<void>;\n\treaddir(resource: URI): Promise<[string, FileType][]>;\n\tdelete(resource: URI, opts: FileDeleteOptions): Promise<void>;\n\n\trename(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\tcopy?(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n\n\treadFile?(resource: URI): Promise<Uint8Array>;\n\twriteFile?(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n\n\treadFileStream?(resource: URI, opts: FileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array>;\n\n\topen?(resource: URI, opts: FileOpenOptions): Promise<number>;\n\tclose?(fd: number): Promise<void>;\n\tread?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite?(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport interface IFileSystemProviderWithFileReadWriteCapability extends IFileSystemProvider {\n\treadFile(resource: URI): Promise<Uint8Array>;\n\twriteFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void>;\n}\n\nexport function hasReadWriteCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadWriteCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadWrite);\n}\n\nexport interface IFileSystemProviderWithFileFolderCopyCapability extends IFileSystemProvider {\n\tcopy(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void>;\n}\n\nexport function hasFileFolderCopyCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileFolderCopyCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileFolderCopy);\n}\n\nexport interface IFileSystemProviderWithOpenReadWriteCloseCapability extends IFileSystemProvider {\n\topen(resource: URI, opts: FileOpenOptions): Promise<number>;\n\tclose(fd: number): Promise<void>;\n\tread(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n\twrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number>;\n}\n\nexport function hasOpenReadWriteCloseCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithOpenReadWriteCloseCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileOpenReadWriteClose);\n}\n\nexport interface IFileSystemProviderWithFileReadStreamCapability extends IFileSystemProvider {\n\treadFileStream(resource: URI, opts: FileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array>;\n}\n\nexport function hasFileReadStreamCapability(provider: IFileSystemProvider): provider is IFileSystemProviderWithFileReadStreamCapability {\n\treturn !!(provider.capabilities & FileSystemProviderCapabilities.FileReadStream);\n}\n\nexport enum FileSystemProviderErrorCode {\n\tFileExists = 'EntryExists',\n\tFileNotFound = 'EntryNotFound',\n\tFileNotADirectory = 'EntryNotADirectory',\n\tFileIsADirectory = 'EntryIsADirectory',\n\tFileExceedsMemoryLimit = 'EntryExceedsMemoryLimit',\n\tFileTooLarge = 'EntryTooLarge',\n\tFileWriteLocked = 'EntryWriteLocked',\n\tNoPermissions = 'NoPermissions',\n\tUnavailable = 'Unavailable',\n\tUnknown = 'Unknown'\n}\n\nexport class FileSystemProviderError extends Error {\n\n\tconstructor(message: string, readonly code: FileSystemProviderErrorCode) {\n\t\tsuper(message);\n\t}\n}\n\nexport function createFileSystemProviderError(error: Error | string, code: FileSystemProviderErrorCode): FileSystemProviderError {\n\tconst providerError = new FileSystemProviderError(error.toString(), code);\n\tmarkAsFileSystemProviderError(providerError, code);\n\n\treturn providerError;\n}\n\nexport function ensureFileSystemProviderError(error?: Error): Error {\n\tif (!error) {\n\t\treturn createFileSystemProviderError(localize('unknownError', \"Unknown Error\"), FileSystemProviderErrorCode.Unknown); // https://github.com/microsoft/vscode/issues/72798\n\t}\n\n\treturn error;\n}\n\nexport function markAsFileSystemProviderError(error: Error, code: FileSystemProviderErrorCode): Error {\n\terror.name = code ? `${code} (FileSystemError)` : `FileSystemError`;\n\n\treturn error;\n}\n\nexport function toFileSystemProviderErrorCode(error: Error | undefined | null): FileSystemProviderErrorCode {\n\n\t// Guard against abuse\n\tif (!error) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\t// FileSystemProviderError comes with the code\n\tif (error instanceof FileSystemProviderError) {\n\t\treturn error.code;\n\t}\n\n\t// Any other error, check for name match by assuming that the error\n\t// went through the markAsFileSystemProviderError() method\n\tconst match = /^(.+) \\(FileSystemError\\)$/.exec(error.name);\n\tif (!match) {\n\t\treturn FileSystemProviderErrorCode.Unknown;\n\t}\n\n\tswitch (match[1]) {\n\t\tcase FileSystemProviderErrorCode.FileExists: return FileSystemProviderErrorCode.FileExists;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory: return FileSystemProviderErrorCode.FileIsADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotADirectory: return FileSystemProviderErrorCode.FileNotADirectory;\n\t\tcase FileSystemProviderErrorCode.FileNotFound: return FileSystemProviderErrorCode.FileNotFound;\n\t\tcase FileSystemProviderErrorCode.FileExceedsMemoryLimit: return FileSystemProviderErrorCode.FileExceedsMemoryLimit;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge: return FileSystemProviderErrorCode.FileTooLarge;\n\t\tcase FileSystemProviderErrorCode.FileWriteLocked: return FileSystemProviderErrorCode.FileWriteLocked;\n\t\tcase FileSystemProviderErrorCode.NoPermissions: return FileSystemProviderErrorCode.NoPermissions;\n\t\tcase FileSystemProviderErrorCode.Unavailable: return FileSystemProviderErrorCode.Unavailable;\n\t}\n\n\treturn FileSystemProviderErrorCode.Unknown;\n}\n\nexport function toFileOperationResult(error: Error): FileOperationResult {\n\n\t// FileSystemProviderError comes with the result already\n\tif (error instanceof FileOperationError) {\n\t\treturn error.fileOperationResult;\n\t}\n\n\t// Otherwise try to find from code\n\tswitch (toFileSystemProviderErrorCode(error)) {\n\t\tcase FileSystemProviderErrorCode.FileNotFound:\n\t\t\treturn FileOperationResult.FILE_NOT_FOUND;\n\t\tcase FileSystemProviderErrorCode.FileIsADirectory:\n\t\t\treturn FileOperationResult.FILE_IS_DIRECTORY;\n\t\tcase FileSystemProviderErrorCode.FileNotADirectory:\n\t\t\treturn FileOperationResult.FILE_NOT_DIRECTORY;\n\t\tcase FileSystemProviderErrorCode.FileWriteLocked:\n\t\t\treturn FileOperationResult.FILE_WRITE_LOCKED;\n\t\tcase FileSystemProviderErrorCode.NoPermissions:\n\t\t\treturn FileOperationResult.FILE_PERMISSION_DENIED;\n\t\tcase FileSystemProviderErrorCode.FileExists:\n\t\t\treturn FileOperationResult.FILE_MOVE_CONFLICT;\n\t\tcase FileSystemProviderErrorCode.FileExceedsMemoryLimit:\n\t\t\treturn FileOperationResult.FILE_EXCEEDS_MEMORY_LIMIT;\n\t\tcase FileSystemProviderErrorCode.FileTooLarge:\n\t\t\treturn FileOperationResult.FILE_TOO_LARGE;\n\t\tdefault:\n\t\t\treturn FileOperationResult.FILE_OTHER_ERROR;\n\t}\n}\n\nexport interface IFileSystemProviderRegistrationEvent {\n\treadonly added: boolean;\n\treadonly scheme: string;\n\treadonly provider?: IFileSystemProvider;\n}\n\nexport interface IFileSystemProviderCapabilitiesChangeEvent {\n\treadonly provider: IFileSystemProvider;\n\treadonly scheme: string;\n}\n\nexport interface IFileSystemProviderActivationEvent {\n\treadonly scheme: string;\n\tjoin(promise: Promise<void>): void;\n}\n\nexport const enum FileOperation {\n\tCREATE,\n\tDELETE,\n\tMOVE,\n\tCOPY\n}\n\nexport class FileOperationEvent {\n\n\tconstructor(resource: URI, operation: FileOperation.DELETE);\n\tconstructor(resource: URI, operation: FileOperation.CREATE | FileOperation.MOVE | FileOperation.COPY, target: IFileStatWithMetadata);\n\tconstructor(readonly resource: URI, readonly operation: FileOperation, readonly target?: IFileStatWithMetadata) { }\n\n\tisOperation(operation: FileOperation.DELETE): boolean;\n\tisOperation(operation: FileOperation.MOVE | FileOperation.COPY | FileOperation.CREATE): this is { readonly target: IFileStatWithMetadata };\n\tisOperation(operation: FileOperation): boolean {\n\t\treturn this.operation === operation;\n\t}\n}\n\n/**\n * Possible changes that can occur to a file.\n */\nexport const enum FileChangeType {\n\tUPDATED,\n\tADDED,\n\tDELETED\n}\n\n/**\n * Identifies a single change in a file.\n */\nexport interface IFileChange {\n\n\t/**\n\t * The type of change that occurred to the file.\n\t */\n\treadonly type: FileChangeType;\n\n\t/**\n\t * The unified resource identifier of the file that changed.\n\t */\n\treadonly resource: URI;\n}\n\nexport interface IRawFileChangesEvent {\n\n\t/**\n\t * @deprecated use `FileChangesEvent` instead unless you know what you are doing\n\t */\n\treadonly changes: readonly IFileChange[];\n}\n\nexport class FileChangesEvent {\n\n\tprivate readonly added: TernarySearchTree<URI, IFileChange> | undefined = undefined;\n\tprivate readonly updated: TernarySearchTree<URI, IFileChange> | undefined = undefined;\n\tprivate readonly deleted: TernarySearchTree<URI, IFileChange> | undefined = undefined;\n\n\tconstructor(changes: readonly IFileChange[], ignorePathCasing: boolean) {\n\n\t\tconst entriesByType = new Map<FileChangeType, [URI, IFileChange][]>();\n\n\t\tfor (const change of changes) {\n\t\t\tconst array = entriesByType.get(change.type);\n\t\t\tif (array) {\n\t\t\t\tarray.push([change.resource, change]);\n\t\t\t} else {\n\t\t\t\tentriesByType.set(change.type, [[change.resource, change]]);\n\t\t\t}\n\t\t}\n\n\t\tfor (const [key, value] of entriesByType) {\n\t\t\tswitch (key) {\n\t\t\t\tcase FileChangeType.ADDED:\n\t\t\t\t\tthis.added = TernarySearchTree.forUris<IFileChange>(() => ignorePathCasing);\n\t\t\t\t\tthis.added.fill(value);\n\t\t\t\t\tbreak;\n\t\t\t\tcase FileChangeType.UPDATED:\n\t\t\t\t\tthis.updated = TernarySearchTree.forUris<IFileChange>(() => ignorePathCasing);\n\t\t\t\t\tthis.updated.fill(value);\n\t\t\t\t\tbreak;\n\t\t\t\tcase FileChangeType.DELETED:\n\t\t\t\t\tthis.deleted = TernarySearchTree.forUris<IFileChange>(() => ignorePathCasing);\n\t\t\t\t\tthis.deleted.fill(value);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Find out if the file change events match the provided resource.\n\t *\n\t * Note: when passing `FileChangeType.DELETED`, we consider a match\n\t * also when the parent of the resource got deleted.\n\t */\n\tcontains(resource: URI, ...types: FileChangeType[]): boolean {\n\t\treturn this.doContains(resource, { includeChildren: false }, ...types);\n\t}\n\n\t/**\n\t * Find out if the file change events either match the provided\n\t * resource, or contain a child of this resource.\n\t */\n\taffects(resource: URI, ...types: FileChangeType[]): boolean {\n\t\treturn this.doContains(resource, { includeChildren: true }, ...types);\n\t}\n\n\tprivate doContains(resource: URI, options: { includeChildren: boolean }, ...types: FileChangeType[]): boolean {\n\t\tif (!resource) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst hasTypesFilter = types.length > 0;\n\n\t\t// Added\n\t\tif (!hasTypesFilter || types.includes(FileChangeType.ADDED)) {\n\t\t\tif (this.added?.get(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (options.includeChildren && this.added?.findSuperstr(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t// Updated\n\t\tif (!hasTypesFilter || types.includes(FileChangeType.UPDATED)) {\n\t\t\tif (this.updated?.get(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (options.includeChildren && this.updated?.findSuperstr(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\t// Deleted\n\t\tif (!hasTypesFilter || types.includes(FileChangeType.DELETED)) {\n\t\t\tif (this.deleted?.findSubstr(resource) /* deleted also considers parent folders */) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tif (options.includeChildren && this.deleted?.findSuperstr(resource)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Returns if this event contains added files.\n\t */\n\tgotAdded(): boolean {\n\t\treturn !!this.added;\n\t}\n\n\t/**\n\t * Returns if this event contains deleted files.\n\t */\n\tgotDeleted(): boolean {\n\t\treturn !!this.deleted;\n\t}\n\n\t/**\n\t * Returns if this event contains updated files.\n\t */\n\tgotUpdated(): boolean {\n\t\treturn !!this.updated;\n\t}\n\n\t/**\n\t * @deprecated use the `contains` or `affects` method to efficiently find\n\t * out if the event relates to a given resource. these methods ensure:\n\t * - that there is no expensive lookup needed (by using a `TernarySearchTree`)\n\t * - correctly handles `FileChangeType.DELETED` events\n\t */\n\tget rawAdded(): TernarySearchTree<URI, IFileChange> | undefined { return this.added; }\n\n\t/**\n\t * @deprecated use the `contains` or `affects` method to efficiently find\n\t * out if the event relates to a given resource. these methods ensure:\n\t * - that there is no expensive lookup needed (by using a `TernarySearchTree`)\n\t * - correctly handles `FileChangeType.DELETED` events\n\t */\n\tget rawDeleted(): TernarySearchTree<URI, IFileChange> | undefined { return this.deleted; }\n\n}\n\nexport function isParent(path: string, candidate: string, ignoreCase?: boolean): boolean {\n\tif (!path || !candidate || path === candidate) {\n\t\treturn false;\n\t}\n\n\tif (candidate.length > path.length) {\n\t\treturn false;\n\t}\n\n\tif (candidate.charAt(candidate.length - 1) !== sep) {\n\t\tcandidate += sep;\n\t}\n\n\tif (ignoreCase) {\n\t\treturn startsWithIgnoreCase(path, candidate);\n\t}\n\n\treturn path.indexOf(candidate) === 0;\n}\n\ninterface IBaseStat {\n\n\t/**\n\t * The unified resource identifier of this file or folder.\n\t */\n\treadonly resource: URI;\n\n\t/**\n\t * The name which is the last segment\n\t * of the {{path}}.\n\t */\n\treadonly name: string;\n\n\t/**\n\t * The size of the file.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\treadonly size?: number;\n\n\t/**\n\t * The last modification date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\treadonly mtime?: number;\n\n\t/**\n\t * The creation date represented as millis from unix epoch.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\treadonly ctime?: number;\n\n\t/**\n\t * A unique identifier thet represents the\n\t * current state of the file or directory.\n\t *\n\t * The value may or may not be resolved as\n\t * it is optional.\n\t */\n\treadonly etag?: string;\n\n\t/**\n\t * The file is read-only.\n\t */\n\treadonly readonly?: boolean;\n}\n\nexport interface IBaseStatWithMetadata extends Required<IBaseStat> { }\n\n/**\n * A file resource with meta information.\n */\nexport interface IFileStat extends IBaseStat {\n\n\t/**\n\t * The resource is a file.\n\t */\n\treadonly isFile: boolean;\n\n\t/**\n\t * The resource is a directory.\n\t */\n\treadonly isDirectory: boolean;\n\n\t/**\n\t * The resource is a symbolic link. Note: even when the\n\t * file is a symbolic link, you can test for `FileType.File`\n\t * and `FileType.Directory` to know the type of the target\n\t * the link points to.\n\t */\n\treadonly isSymbolicLink: boolean;\n\n\t/**\n\t * The children of the file stat or undefined if none.\n\t */\n\tchildren?: IFileStat[];\n}\n\nexport interface IFileStatWithMetadata extends IFileStat, IBaseStatWithMetadata {\n\treadonly mtime: number;\n\treadonly ctime: number;\n\treadonly etag: string;\n\treadonly size: number;\n\treadonly readonly: boolean;\n\treadonly children?: IFileStatWithMetadata[];\n}\n\nexport interface IResolveFileResult {\n\treadonly stat?: IFileStat;\n\treadonly success: boolean;\n}\n\nexport interface IResolveFileResultWithMetadata extends IResolveFileResult {\n\treadonly stat?: IFileStatWithMetadata;\n}\n\nexport interface IFileContent extends IBaseStatWithMetadata {\n\n\t/**\n\t * The content of a file as buffer.\n\t */\n\treadonly value: VSBuffer;\n}\n\nexport interface IFileStreamContent extends IBaseStatWithMetadata {\n\n\t/**\n\t * The content of a file as stream.\n\t */\n\treadonly value: VSBufferReadableStream;\n}\n\nexport interface IBaseReadFileOptions extends FileReadStreamOptions {\n\n\t/**\n\t * The optional etag parameter allows to return early from resolving the resource if\n\t * the contents on disk match the etag. This prevents accumulated reading of resources\n\t * that have been read already with the same etag.\n\t * It is the task of the caller to makes sure to handle this error case from the promise.\n\t */\n\treadonly etag?: string;\n}\n\nexport interface IReadFileStreamOptions extends IBaseReadFileOptions { }\n\nexport interface IReadFileOptions extends IBaseReadFileOptions {\n\n\t/**\n\t * The optional `atomic` flag can be used to make sure\n\t * the `readFile` method is not running in parallel with\n\t * any `write` operations in the same process.\n\t *\n\t * Typically you should not need to use this flag but if\n\t * for example you are quickly reading a file right after\n\t * a file event occurred and the file changes a lot, there\n\t * is a chance that a read returns an empty or partial file\n\t * because a pending write has not finished yet.\n\t *\n\t * Note: this does not prevent the file from being written\n\t * to from a different process. If you need such atomic\n\t * operations, you better use a real database as storage.\n\t */\n\treadonly atomic?: boolean;\n}\n\nexport interface IWriteFileOptions {\n\n\t/**\n\t * The last known modification time of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly mtime?: number;\n\n\t/**\n\t * The etag of the file. This can be used to prevent dirty writes.\n\t */\n\treadonly etag?: string;\n\n\t/**\n\t * Whether to attempt to unlock a file before writing.\n\t */\n\treadonly unlock?: boolean;\n}\n\nexport interface IResolveFileOptions {\n\n\t/**\n\t * Automatically continue resolving children of a directory until the provided resources\n\t * are found.\n\t */\n\treadonly resolveTo?: readonly URI[];\n\n\t/**\n\t * Automatically continue resolving children of a directory if the number of children is 1.\n\t */\n\treadonly resolveSingleChildDescendants?: boolean;\n\n\t/**\n\t * Will resolve mtime, ctime, size and etag of files if enabled. This can have a negative impact\n\t * on performance and thus should only be used when these values are required.\n\t */\n\treadonly resolveMetadata?: boolean;\n}\n\nexport interface IResolveMetadataFileOptions extends IResolveFileOptions {\n\treadonly resolveMetadata: true;\n}\n\nexport interface ICreateFileOptions {\n\n\t/**\n\t * Overwrite the file to create if it already exists on disk. Otherwise\n\t * an error will be thrown (FILE_MODIFIED_SINCE).\n\t */\n\treadonly overwrite?: boolean;\n}\n\nexport class FileOperationError extends Error {\n\tconstructor(\n\t\tmessage: string,\n\t\treadonly fileOperationResult: FileOperationResult,\n\t\treadonly options?: IReadFileOptions & IWriteFileOptions & ICreateFileOptions\n\t) {\n\t\tsuper(message);\n\t}\n}\n\nexport class NotModifiedSinceFileOperationError extends FileOperationError {\n\n\tconstructor(\n\t\tmessage: string,\n\t\treadonly stat: IFileStatWithMetadata,\n\t\toptions?: IReadFileOptions\n\t) {\n\t\tsuper(message, FileOperationResult.FILE_NOT_MODIFIED_SINCE, options);\n\t}\n}\n\nexport const enum FileOperationResult {\n\tFILE_IS_DIRECTORY,\n\tFILE_NOT_FOUND,\n\tFILE_NOT_MODIFIED_SINCE,\n\tFILE_MODIFIED_SINCE,\n\tFILE_MOVE_CONFLICT,\n\tFILE_WRITE_LOCKED,\n\tFILE_PERMISSION_DENIED,\n\tFILE_TOO_LARGE,\n\tFILE_INVALID_PATH,\n\tFILE_EXCEEDS_MEMORY_LIMIT,\n\tFILE_NOT_DIRECTORY,\n\tFILE_OTHER_ERROR\n}\n\n//#endregion\n\n//#region Settings\n\nexport const AutoSaveConfiguration = {\n\tOFF: 'off',\n\tAFTER_DELAY: 'afterDelay',\n\tON_FOCUS_CHANGE: 'onFocusChange',\n\tON_WINDOW_CHANGE: 'onWindowChange'\n};\n\nexport const HotExitConfiguration = {\n\tOFF: 'off',\n\tON_EXIT: 'onExit',\n\tON_EXIT_AND_WINDOW_CLOSE: 'onExitAndWindowClose'\n};\n\nexport const FILES_ASSOCIATIONS_CONFIG = 'files.associations';\nexport const FILES_EXCLUDE_CONFIG = 'files.exclude';\n\nexport interface IFilesConfiguration {\n\tfiles: {\n\t\tassociations: { [filepattern: string]: string };\n\t\texclude: IExpression;\n\t\twatcherExclude: { [filepattern: string]: boolean };\n\t\twatcherInclude: string[];\n\t\tencoding: string;\n\t\tautoGuessEncoding: boolean;\n\t\tdefaultLanguage: string;\n\t\ttrimTrailingWhitespace: boolean;\n\t\tautoSave: string;\n\t\tautoSaveDelay: number;\n\t\teol: string;\n\t\tenableTrash: boolean;\n\t\thotExit: string;\n\t\tsaveConflictResolution: 'askUser' | 'overwriteFileOnDisk';\n\t};\n}\n\n//#endregion\n\n//#region Utilities\n\nexport enum FileKind {\n\tFILE,\n\tFOLDER,\n\tROOT_FOLDER\n}\n\n/**\n * A hint to disable etag checking for reading/writing.\n */\nexport const ETAG_DISABLED = '';\n\nexport function etag(stat: { mtime: number, size: number }): string;\nexport function etag(stat: { mtime: number | undefined, size: number | undefined }): string | undefined;\nexport function etag(stat: { mtime: number | undefined, size: number | undefined }): string | undefined {\n\tif (typeof stat.size !== 'number' || typeof stat.mtime !== 'number') {\n\t\treturn undefined;\n\t}\n\n\treturn stat.mtime.toString(29) + stat.size.toString(31);\n}\n\nexport async function whenProviderRegistered(file: URI, fileService: IFileService): Promise<void> {\n\tif (fileService.hasProvider(URI.from({ scheme: file.scheme }))) {\n\t\treturn;\n\t}\n\n\treturn new Promise(resolve => {\n\t\tconst disposable = fileService.onDidChangeFileSystemProviderRegistrations(e => {\n\t\t\tif (e.scheme === file.scheme && e.added) {\n\t\t\t\tdisposable.dispose();\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Native only: limits for memory sizes\n */\nexport const MIN_MAX_MEMORY_SIZE_MB = 2048;\nexport const FALLBACK_MAX_MEMORY_SIZE_MB = 4096;\n\n/**\n * Helper to format a raw byte size into a human readable label.\n */\nexport class ByteSize {\n\n\tstatic readonly KB = 1024;\n\tstatic readonly MB = ByteSize.KB * ByteSize.KB;\n\tstatic readonly GB = ByteSize.MB * ByteSize.KB;\n\tstatic readonly TB = ByteSize.GB * ByteSize.KB;\n\n\tstatic formatSize(size: number): string {\n\t\tif (!isNumber(size)) {\n\t\t\tsize = 0;\n\t\t}\n\n\t\tif (size < ByteSize.KB) {\n\t\t\treturn localize('sizeB', \"{0}B\", size.toFixed(0));\n\t\t}\n\n\t\tif (size < ByteSize.MB) {\n\t\t\treturn localize('sizeKB', \"{0}KB\", (size / ByteSize.KB).toFixed(2));\n\t\t}\n\n\t\tif (size < ByteSize.GB) {\n\t\t\treturn localize('sizeMB', \"{0}MB\", (size / ByteSize.MB).toFixed(2));\n\t\t}\n\n\t\tif (size < ByteSize.TB) {\n\t\t\treturn localize('sizeGB', \"{0}GB\", (size / ByteSize.GB).toFixed(2));\n\t\t}\n\n\t\treturn localize('sizeTB', \"{0}TB\", (size / ByteSize.TB).toFixed(2));\n\t}\n}\n\n// Native only: Arch limits\n\nexport interface IArchLimits {\n\treadonly maxFileSize: number;\n\treadonly maxHeapSize: number;\n}\n\nexport const enum Arch {\n\tIA32,\n\tOTHER\n}\n\nexport function getPlatformLimits(arch: Arch): IArchLimits {\n\treturn {\n\t\tmaxFileSize: arch === Arch.IA32 ? 300 * ByteSize.MB : 16 * ByteSize.GB,  // https://github.com/microsoft/vscode/issues/30180\n\t\tmaxHeapSize: arch === Arch.IA32 ? 700 * ByteSize.MB : 2 * 700 * ByteSize.MB, // https://github.com/v8/v8/blob/5918a23a3d571b9625e5cce246bdd5b46ff7cd8b/src/heap/heap.cc#L149\n\t};\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as assert from 'assert';\nimport { IProcessEnvironment } from 'vs/base/common/platform';\nimport { localize } from 'vs/nls';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { ErrorReporter, OPTIONS, parseArgs } from 'vs/platform/environment/node/argv';\nimport { MIN_MAX_MEMORY_SIZE_MB } from 'vs/platform/files/common/files';\n\nfunction parseAndValidate(cmdLineArgs: string[], reportWarnings: boolean): NativeParsedArgs {\n\tconst errorReporter: ErrorReporter = {\n\t\tonUnknownOption: (id) => {\n\t\t\tconsole.warn(localize('unknownOption', \"Warning: '{0}' is not in the list of known options, but still passed to Electron/Chromium.\", id));\n\t\t},\n\t\tonMultipleValues: (id, val) => {\n\t\t\tconsole.warn(localize('multipleValues', \"Option '{0}' is defined more than once. Using value '{1}.'\", id, val));\n\t\t},\n\t\tonDeprecatedOption: (deprecatedOption: string, actualOption: string) => {\n\t\t\tconsole.warn(localize('deprecatedArgument', \"Option '{0}' is deprecated, please use '{1}' instead\", deprecatedOption, actualOption));\n\t\t}\n\t};\n\n\tconst args = parseArgs(cmdLineArgs, OPTIONS, reportWarnings ? errorReporter : undefined);\n\tif (args.goto) {\n\t\targs._.forEach(arg => assert(/^(\\w:)?[^:]+(:\\d*){0,2}$/.test(arg), localize('gotoValidation', \"Arguments in `--goto` mode should be in the format of `FILE(:LINE(:CHARACTER))`.\")));\n\t}\n\n\tif (args['max-memory']) {\n\t\tassert(parseInt(args['max-memory']) >= MIN_MAX_MEMORY_SIZE_MB, `The max-memory argument cannot be specified lower than ${MIN_MAX_MEMORY_SIZE_MB} MB.`);\n\t}\n\n\treturn args;\n}\n\nfunction stripAppPath(argv: string[]): string[] | undefined {\n\tconst index = argv.findIndex(a => !/^-/.test(a));\n\n\tif (index > -1) {\n\t\treturn [...argv.slice(0, index), ...argv.slice(index + 1)];\n\t}\n\treturn undefined;\n}\n\n/**\n * Use this to parse raw code process.argv such as: `Electron . --verbose --wait`\n */\nexport function parseMainProcessArgv(processArgv: string[]): NativeParsedArgs {\n\tlet [, ...args] = processArgv;\n\n\t// If dev, remove the first non-option argument: it's the app location\n\tif (process.env['VSCODE_DEV']) {\n\t\targs = stripAppPath(args) || [];\n\t}\n\n\t// If called from CLI, don't report warnings as they are already reported.\n\tconst reportWarnings = !isLaunchedFromCli(process.env);\n\treturn parseAndValidate(args, reportWarnings);\n}\n\n/**\n * Use this to parse raw code CLI process.argv such as: `Electron cli.js . --verbose --wait`\n */\nexport function parseCLIProcessArgv(processArgv: string[]): NativeParsedArgs {\n\tconst [, , ...args] = processArgv; // remove the first non-option argument: it's always the app location\n\n\treturn parseAndValidate(args, true);\n}\n\nexport function addArg(argv: string[], ...args: string[]): string[] {\n\tconst endOfArgsMarkerIndex = argv.indexOf('--');\n\tif (endOfArgsMarkerIndex === -1) {\n\t\targv.push(...args);\n\t} else {\n\t\t// if the we have an argument \"--\" (end of argument marker)\n\t\t// we cannot add arguments at the end. rather, we add\n\t\t// arguments before the \"--\" marker.\n\t\targv.splice(endOfArgsMarkerIndex, 0, ...args);\n\t}\n\n\treturn argv;\n}\n\nexport function isLaunchedFromCli(env: IProcessEnvironment): boolean {\n\treturn env['VSCODE_CLI'] === '1';\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { spawn } from 'child_process';\nimport { basename } from 'vs/base/common/path';\nimport { localize } from 'vs/nls';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { canceled, isPromiseCanceledError } from 'vs/base/common/errors';\nimport { IProcessEnvironment, isWindows, OS } from 'vs/base/common/platform';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { getSystemShell } from 'vs/base/node/shell';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { isLaunchedFromCli } from 'vs/platform/environment/node/argvHelper';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { Promises } from 'vs/base/common/async';\n\n/**\n * The maximum of time we accept to wait on resolving the shell\n * environment before giving up. This ensures we are not blocking\n * other tasks from running for a too long time period.\n */\nconst MAX_SHELL_RESOLVE_TIME = 10000;\n\nlet unixShellEnvPromise: Promise<typeof process.env> | undefined = undefined;\n\n/**\n * Resolves the shell environment by spawning a shell. This call will cache\n * the shell spawning so that subsequent invocations use that cached result.\n *\n * Will throw an error if:\n * - we hit a timeout of `MAX_SHELL_RESOLVE_TIME`\n * - any other error from spawning a shell to figure out the environment\n */\nexport async function getResolvedShellEnv(logService: ILogService, args: NativeParsedArgs, env: IProcessEnvironment): Promise<typeof process.env> {\n\n\t// Skip if --force-disable-user-env\n\tif (args['force-disable-user-env']) {\n\t\tlogService.trace('resolveShellEnv(): skipped (--force-disable-user-env)');\n\n\t\treturn {};\n\t}\n\n\t// Skip on windows\n\telse if (isWindows) {\n\t\tlogService.trace('resolveShellEnv(): skipped (Windows)');\n\n\t\treturn {};\n\t}\n\n\t// Skip if running from CLI already\n\telse if (isLaunchedFromCli(env) && !args['force-user-env']) {\n\t\tlogService.trace('resolveShellEnv(): skipped (VSCODE_CLI is set)');\n\n\t\treturn {};\n\t}\n\n\t// Otherwise resolve (macOS, Linux)\n\telse {\n\t\tif (isLaunchedFromCli(env)) {\n\t\t\tlogService.trace('resolveShellEnv(): running (--force-user-env)');\n\t\t} else {\n\t\t\tlogService.trace('resolveShellEnv(): running (macOS/Linux)');\n\t\t}\n\n\t\t// Call this only once and cache the promise for\n\t\t// subsequent calls since this operation can be\n\t\t// expensive (spawns a process).\n\t\tif (!unixShellEnvPromise) {\n\t\t\tunixShellEnvPromise = Promises.withAsyncBody<NodeJS.ProcessEnv>(async (resolve, reject) => {\n\t\t\t\tconst cts = new CancellationTokenSource();\n\n\t\t\t\t// Give up resolving shell env after some time\n\t\t\t\tconst timeout = setTimeout(() => {\n\t\t\t\t\tcts.dispose(true);\n\t\t\t\t\treject(new Error(localize('resolveShellEnvTimeout', \"Unable to resolve your shell environment in a reasonable time. Please review your shell configuration.\")));\n\t\t\t\t}, MAX_SHELL_RESOLVE_TIME);\n\n\t\t\t\t// Resolve shell env and handle errors\n\t\t\t\ttry {\n\t\t\t\t\tresolve(await doResolveUnixShellEnv(logService, cts.token));\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (!isPromiseCanceledError(error) && !cts.token.isCancellationRequested) {\n\t\t\t\t\t\treject(new Error(localize('resolveShellEnvError', \"Unable to resolve your shell environment: {0}\", toErrorMessage(error))));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve({});\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\tclearTimeout(timeout);\n\t\t\t\t\tcts.dispose();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn unixShellEnvPromise;\n\t}\n}\n\nasync function doResolveUnixShellEnv(logService: ILogService, token: CancellationToken): Promise<typeof process.env> {\n\tconst runAsNode = process.env['ELECTRON_RUN_AS_NODE'];\n\tlogService.trace('getUnixShellEnvironment#runAsNode', runAsNode);\n\n\tconst noAttach = process.env['ELECTRON_NO_ATTACH_CONSOLE'];\n\tlogService.trace('getUnixShellEnvironment#noAttach', noAttach);\n\n\tconst mark = generateUuid().replace(/-/g, '').substr(0, 12);\n\tconst regex = new RegExp(mark + '(.*)' + mark);\n\n\tconst env = {\n\t\t...process.env,\n\t\tELECTRON_RUN_AS_NODE: '1',\n\t\tELECTRON_NO_ATTACH_CONSOLE: '1'\n\t};\n\n\tlogService.trace('getUnixShellEnvironment#env', env);\n\tconst systemShellUnix = await getSystemShell(OS, env);\n\tlogService.trace('getUnixShellEnvironment#shell', systemShellUnix);\n\n\treturn new Promise<typeof process.env>((resolve, reject) => {\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn reject(canceled());\n\t\t}\n\n\t\t// handle popular non-POSIX shells\n\t\tconst name = basename(systemShellUnix);\n\t\tlet command: string, shellArgs: Array<string>;\n\t\tconst extraArgs = (process.versions['electron'] && process.versions['microsoft-build']) ? '--ms-enable-electron-run-as-node' : '';\n\t\tif (/^pwsh(-preview)?$/.test(name)) {\n\t\t\t// Older versions of PowerShell removes double quotes sometimes so we use \"double single quotes\" which is how\n\t\t\t// you escape single quotes inside of a single quoted string.\n\t\t\tcommand = `& '${process.execPath}' ${extraArgs} -p '''${mark}'' + JSON.stringify(process.env) + ''${mark}'''`;\n\t\t\tshellArgs = ['-Login', '-Command'];\n\t\t} else {\n\t\t\tcommand = `'${process.execPath}' ${extraArgs} -p '\"${mark}\" + JSON.stringify(process.env) + \"${mark}\"'`;\n\n\t\t\tif (name === 'tcsh') {\n\t\t\t\tshellArgs = ['-ic'];\n\t\t\t} else {\n\t\t\t\tshellArgs = ['-ilc'];\n\t\t\t}\n\t\t}\n\n\t\tlogService.trace('getUnixShellEnvironment#spawn', JSON.stringify(shellArgs), command);\n\n\t\tconst child = spawn(systemShellUnix, [...shellArgs, command], {\n\t\t\tdetached: true,\n\t\t\tstdio: ['ignore', 'pipe', 'pipe'],\n\t\t\tenv\n\t\t});\n\n\t\ttoken.onCancellationRequested(() => {\n\t\t\tchild.kill();\n\n\t\t\treturn reject(canceled());\n\t\t});\n\n\t\tchild.on('error', err => {\n\t\t\tlogService.error('getUnixShellEnvironment#errorChildProcess', toErrorMessage(err));\n\t\t\treject(err);\n\t\t});\n\n\t\tconst buffers: Buffer[] = [];\n\t\tchild.stdout.on('data', b => buffers.push(b));\n\n\t\tconst stderr: Buffer[] = [];\n\t\tchild.stderr.on('data', b => stderr.push(b));\n\n\t\tchild.on('close', (code, signal) => {\n\t\t\tconst raw = Buffer.concat(buffers).toString('utf8');\n\t\t\tlogService.trace('getUnixShellEnvironment#raw', raw);\n\n\t\t\tconst stderrStr = Buffer.concat(stderr).toString('utf8');\n\t\t\tif (stderrStr.trim()) {\n\t\t\t\tlogService.trace('getUnixShellEnvironment#stderr', stderrStr);\n\t\t\t}\n\n\t\t\tif (code || signal) {\n\t\t\t\treturn reject(new Error(localize('resolveShellEnvExitError', \"Unexpected exit code from spawned shell (code {0}, signal {1})\", code, signal)));\n\t\t\t}\n\n\t\t\tconst match = regex.exec(raw);\n\t\t\tconst rawStripped = match ? match[1] : '{}';\n\n\t\t\ttry {\n\t\t\t\tconst env = JSON.parse(rawStripped);\n\n\t\t\t\tif (runAsNode) {\n\t\t\t\t\tenv['ELECTRON_RUN_AS_NODE'] = runAsNode;\n\t\t\t\t} else {\n\t\t\t\t\tdelete env['ELECTRON_RUN_AS_NODE'];\n\t\t\t\t}\n\n\t\t\t\tif (noAttach) {\n\t\t\t\t\tenv['ELECTRON_NO_ATTACH_CONSOLE'] = noAttach;\n\t\t\t\t} else {\n\t\t\t\t\tdelete env['ELECTRON_NO_ATTACH_CONSOLE'];\n\t\t\t\t}\n\n\t\t\t\t// https://github.com/microsoft/vscode/issues/22593#issuecomment-336050758\n\t\t\t\tdelete env['XDG_RUNTIME_DIR'];\n\n\t\t\t\tlogService.trace('getUnixShellEnvironment#result', env);\n\t\t\t\tresolve(env);\n\t\t\t} catch (err) {\n\t\t\t\tlogService.error('getUnixShellEnvironment#errorCaught', toErrorMessage(err));\n\t\t\t\treject(err);\n\t\t\t}\n\t\t});\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { IDataTransformer, IErrorTransformer, WriteableStream } from 'vs/base/common/stream';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { createFileSystemProviderError, ensureFileSystemProviderError, FileReadStreamOptions, FileSystemProviderErrorCode, IFileSystemProviderWithOpenReadWriteCloseCapability } from 'vs/platform/files/common/files';\n\nexport interface ICreateReadStreamOptions extends FileReadStreamOptions {\n\n\t/**\n\t * The size of the buffer to use before sending to the stream.\n\t */\n\tbufferSize: number;\n\n\t/**\n\t * Allows to massage any possibly error that happens during reading.\n\t */\n\terrorTransformer?: IErrorTransformer;\n}\n\n/**\n * A helper to read a file from a provider with open/read/close capability into a stream.\n */\nexport async function readFileIntoStream<T>(\n\tprovider: IFileSystemProviderWithOpenReadWriteCloseCapability,\n\tresource: URI,\n\ttarget: WriteableStream<T>,\n\ttransformer: IDataTransformer<VSBuffer, T>,\n\toptions: ICreateReadStreamOptions,\n\ttoken: CancellationToken\n): Promise<void> {\n\tlet error: Error | undefined = undefined;\n\n\ttry {\n\t\tawait doReadFileIntoStream(provider, resource, target, transformer, options, token);\n\t} catch (err) {\n\t\terror = err;\n\t} finally {\n\t\tif (error && options.errorTransformer) {\n\t\t\terror = options.errorTransformer(error);\n\t\t}\n\n\t\tif (typeof error !== 'undefined') {\n\t\t\ttarget.error(error);\n\t\t}\n\n\t\ttarget.end();\n\t}\n}\n\nasync function doReadFileIntoStream<T>(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, target: WriteableStream<T>, transformer: IDataTransformer<VSBuffer, T>, options: ICreateReadStreamOptions, token: CancellationToken): Promise<void> {\n\n\t// Check for cancellation\n\tthrowIfCancelled(token);\n\n\t// open handle through provider\n\tconst handle = await provider.open(resource, { create: false });\n\n\ttry {\n\n\t\t// Check for cancellation\n\t\tthrowIfCancelled(token);\n\n\t\tlet totalBytesRead = 0;\n\t\tlet bytesRead = 0;\n\t\tlet allowedRemainingBytes = (options && typeof options.length === 'number') ? options.length : undefined;\n\n\t\tlet buffer = VSBuffer.alloc(Math.min(options.bufferSize, typeof allowedRemainingBytes === 'number' ? allowedRemainingBytes : options.bufferSize));\n\n\t\tlet posInFile = options && typeof options.position === 'number' ? options.position : 0;\n\t\tlet posInBuffer = 0;\n\t\tdo {\n\t\t\t// read from source (handle) at current position (pos) into buffer (buffer) at\n\t\t\t// buffer position (posInBuffer) up to the size of the buffer (buffer.byteLength).\n\t\t\tbytesRead = await provider.read(handle, posInFile, buffer.buffer, posInBuffer, buffer.byteLength - posInBuffer);\n\n\t\t\tposInFile += bytesRead;\n\t\t\tposInBuffer += bytesRead;\n\t\t\ttotalBytesRead += bytesRead;\n\n\t\t\tif (typeof allowedRemainingBytes === 'number') {\n\t\t\t\tallowedRemainingBytes -= bytesRead;\n\t\t\t}\n\n\t\t\t// when buffer full, create a new one and emit it through stream\n\t\t\tif (posInBuffer === buffer.byteLength) {\n\t\t\t\tawait target.write(transformer(buffer));\n\n\t\t\t\tbuffer = VSBuffer.alloc(Math.min(options.bufferSize, typeof allowedRemainingBytes === 'number' ? allowedRemainingBytes : options.bufferSize));\n\n\t\t\t\tposInBuffer = 0;\n\t\t\t}\n\t\t} while (bytesRead > 0 && (typeof allowedRemainingBytes !== 'number' || allowedRemainingBytes > 0) && throwIfCancelled(token) && throwIfTooLarge(totalBytesRead, options));\n\n\t\t// wrap up with last buffer (also respect maxBytes if provided)\n\t\tif (posInBuffer > 0) {\n\t\t\tlet lastChunkLength = posInBuffer;\n\t\t\tif (typeof allowedRemainingBytes === 'number') {\n\t\t\t\tlastChunkLength = Math.min(posInBuffer, allowedRemainingBytes);\n\t\t\t}\n\n\t\t\ttarget.write(transformer(buffer.slice(0, lastChunkLength)));\n\t\t}\n\t} catch (error) {\n\t\tthrow ensureFileSystemProviderError(error);\n\t} finally {\n\t\tawait provider.close(handle);\n\t}\n}\n\nfunction throwIfCancelled(token: CancellationToken): boolean {\n\tif (token.isCancellationRequested) {\n\t\tthrow canceled();\n\t}\n\n\treturn true;\n}\n\nfunction throwIfTooLarge(totalBytesRead: number, options: ICreateReadStreamOptions): boolean {\n\n\t// Return early if file is too large to load and we have configured limits\n\tif (options?.limits) {\n\t\tif (typeof options.limits.memory === 'number' && totalBytesRead > options.limits.memory) {\n\t\t\tthrow createFileSystemProviderError(localize('fileTooLargeForHeapError', \"To open a file of this size, you need to restart and allow to use more memory\"), FileSystemProviderErrorCode.FileExceedsMemoryLimit);\n\t\t}\n\n\t\tif (typeof options.limits.size === 'number' && totalBytesRead > options.limits.size) {\n\t\t\tthrow createFileSystemProviderError(localize('fileTooLargeError', \"File is too large to open\"), FileSystemProviderErrorCode.FileTooLarge);\n\t\t}\n\t}\n\n\treturn true;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { Disposable, DisposableStore, MutableDisposable } from 'vs/base/common/lifecycle';\nimport { isLinux } from 'vs/base/common/platform';\nimport { URI as uri } from 'vs/base/common/uri';\nimport { FileChangeType, IFileChange, isParent } from 'vs/platform/files/common/files';\n\nexport interface IWatcherService {\n\n\t/**\n\t * A normalized file change event from the raw events\n\t * the watcher emits.\n\t */\n\treadonly onDidChangeFile: Event<IDiskFileChange[]>;\n\n\t/**\n\t * An event to indicate a message that should get logged.\n\t */\n\treadonly onDidLogMessage: Event<ILogMessage>;\n\n\t/**\n\t * An event to indicate an error occured from the watcher\n\t * that is unrecoverable. Listeners should restart the\n\t * service if possible.\n\t */\n\treadonly onDidError: Event<string>;\n\n\t/**\n\t * Configures the watcher service to watch according\n\t * to the requests. Any existing watched path that\n\t * is not in the array, will be removed from watching\n\t * and any new path will be added to watching.\n\t */\n\twatch(requests: IWatchRequest[]): Promise<void>;\n\n\t/**\n\t * Enable verbose logging in the watcher.\n\t */\n\tsetVerboseLogging(enabled: boolean): Promise<void>;\n\n\t/**\n\t * Stop all watchers.\n\t */\n\tstop(): Promise<void>;\n}\n\nexport abstract class AbstractWatcherService extends Disposable {\n\n\tprivate static readonly MAX_RESTARTS = 5;\n\n\tprivate service: IWatcherService | undefined;\n\tprivate readonly serviceDisposables = this._register(new MutableDisposable());\n\n\tprivate requests: IWatchRequest[] | undefined = undefined;\n\n\tprivate restartCounter = 0;\n\n\tconstructor(\n\t\tprivate readonly onFileChanges: (changes: IDiskFileChange[]) => void,\n\t\tprivate readonly onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean\n\t) {\n\t\tsuper();\n\t}\n\n\tprotected abstract createService(disposables: DisposableStore): IWatcherService;\n\n\tprotected init(): void {\n\n\t\t// Associate disposables to the service\n\t\tconst disposables = new DisposableStore();\n\t\tthis.serviceDisposables.value = disposables;\n\n\t\t// Ask implementors to create the service\n\t\tthis.service = this.createService(disposables);\n\t\tthis.service.setVerboseLogging(this.verboseLogging);\n\n\t\t// Wire in event handlers\n\t\tdisposables.add(this.service.onDidChangeFile(e => this.onFileChanges(e)));\n\t\tdisposables.add(this.service.onDidLogMessage(e => this.onLogMessage(e)));\n\t\tdisposables.add(this.service.onDidError(e => this.onError(e)));\n\t}\n\n\tprotected onError(error: string): void {\n\n\t\t// Restart up to N times\n\t\tif (this.restartCounter < AbstractWatcherService.MAX_RESTARTS && this.requests) {\n\t\t\tthis.error(`restarting watcher after error: ${error}`);\n\t\t\tthis.restart(this.requests);\n\t\t}\n\n\t\t// Otherwise log that we have given up to restart\n\t\telse {\n\t\t\tthis.error(`gave up attempting to restart watcher after error: ${error}`);\n\t\t}\n\t}\n\n\tprivate restart(requests: IWatchRequest[]): void {\n\t\tthis.restartCounter++;\n\n\t\tthis.init();\n\t\tthis.watch(requests);\n\t}\n\n\tasync watch(requests: IWatchRequest[]): Promise<void> {\n\t\tthis.requests = requests;\n\n\t\tawait this.service?.watch(requests);\n\t}\n\n\tasync setVerboseLogging(verboseLogging: boolean): Promise<void> {\n\t\tthis.verboseLogging = verboseLogging;\n\n\t\tawait this.service?.setVerboseLogging(verboseLogging);\n\t}\n\n\tprivate error(message: string) {\n\t\tthis.onLogMessage({ type: 'error', message: `[File Watcher (parcel)] ${message}` });\n\t}\n\n\toverride dispose(): void {\n\n\t\t// Render the serve invalid from here\n\t\tthis.service = undefined;\n\n\t\treturn super.dispose();\n\t}\n}\n\n/**\n * Base class of any watcher service we support.\n *\n * TODO@bpasero delete and replace with `AbstractWatcherService`\n */\nexport abstract class WatcherService extends Disposable {\n\n\t/**\n\t * Asks to watch the provided folders.\n\t */\n\tabstract watch(requests: IWatchRequest[]): Promise<void>;\n\n\t/**\n\t * Enable verbose logging from the watcher.\n\t */\n\tabstract setVerboseLogging(verboseLogging: boolean): Promise<void>;\n}\n\nexport interface IWatchRequest {\n\n\t/**\n\t * The path to watch.\n\t */\n\tpath: string;\n\n\t/**\n\t * A set of glob patterns or paths to exclude from watching.\n\t */\n\texcludes: string[];\n\n\t/**\n\t * @deprecated this only exists for WSL1 support and should never\n\t * be used in any other case.\n\t */\n\tpollingInterval?: number;\n}\n\nexport interface IDiskFileChange {\n\ttype: FileChangeType;\n\tpath: string;\n}\n\nexport interface ILogMessage {\n\ttype: 'trace' | 'warn' | 'error' | 'info' | 'debug';\n\tmessage: string;\n}\n\nexport function toFileChanges(changes: IDiskFileChange[]): IFileChange[] {\n\treturn changes.map(change => ({\n\t\ttype: change.type,\n\t\tresource: uri.file(change.path)\n\t}));\n}\n\nexport function coalesceEvents(changes: IDiskFileChange[]): IDiskFileChange[] {\n\n\t// Build deltas\n\tconst coalescer = new EventCoalescer();\n\tfor (const event of changes) {\n\t\tcoalescer.processEvent(event);\n\t}\n\n\treturn coalescer.coalesce();\n}\n\nclass EventCoalescer {\n\n\tprivate readonly coalesced = new Set<IDiskFileChange>();\n\tprivate readonly mapPathToChange = new Map<string, IDiskFileChange>();\n\n\tprivate toKey(event: IDiskFileChange): string {\n\t\tif (isLinux) {\n\t\t\treturn event.path;\n\t\t}\n\n\t\treturn event.path.toLowerCase(); // normalise to file system case sensitivity\n\t}\n\n\tprocessEvent(event: IDiskFileChange): void {\n\t\tconst existingEvent = this.mapPathToChange.get(this.toKey(event));\n\n\t\tlet keepEvent = false;\n\n\t\t// Event path already exists\n\t\tif (existingEvent) {\n\t\t\tconst currentChangeType = existingEvent.type;\n\t\t\tconst newChangeType = event.type;\n\n\t\t\t// macOS/Windows: track renames to different case but\n\t\t\t// same name by changing current event to DELETED\n\t\t\t// this encodes some underlying knowledge about the\n\t\t\t// file watcher being used by assuming we first get\n\t\t\t// an event for the CREATE and then an event that we\n\t\t\t// consider as DELETE if same name / different case.\n\t\t\tif (existingEvent.path !== event.path && event.type === FileChangeType.DELETED) {\n\t\t\t\tkeepEvent = true;\n\t\t\t}\n\n\t\t\t// Ignore CREATE followed by DELETE in one go\n\t\t\telse if (currentChangeType === FileChangeType.ADDED && newChangeType === FileChangeType.DELETED) {\n\t\t\t\tthis.mapPathToChange.delete(this.toKey(event));\n\t\t\t\tthis.coalesced.delete(existingEvent);\n\t\t\t}\n\n\t\t\t// Flatten DELETE followed by CREATE into CHANGE\n\t\t\telse if (currentChangeType === FileChangeType.DELETED && newChangeType === FileChangeType.ADDED) {\n\t\t\t\texistingEvent.type = FileChangeType.UPDATED;\n\t\t\t}\n\n\t\t\t// Do nothing. Keep the created event\n\t\t\telse if (currentChangeType === FileChangeType.ADDED && newChangeType === FileChangeType.UPDATED) { }\n\n\t\t\t// Otherwise apply change type\n\t\t\telse {\n\t\t\t\texistingEvent.type = newChangeType;\n\t\t\t}\n\t\t}\n\n\t\t// Otherwise keep\n\t\telse {\n\t\t\tkeepEvent = true;\n\t\t}\n\n\t\tif (keepEvent) {\n\t\t\tthis.coalesced.add(event);\n\t\t\tthis.mapPathToChange.set(this.toKey(event), event);\n\t\t}\n\t}\n\n\tcoalesce(): IDiskFileChange[] {\n\t\tconst addOrChangeEvents: IDiskFileChange[] = [];\n\t\tconst deletedPaths: string[] = [];\n\n\t\t// This algorithm will remove all DELETE events up to the root folder\n\t\t// that got deleted if any. This ensures that we are not producing\n\t\t// DELETE events for each file inside a folder that gets deleted.\n\t\t//\n\t\t// 1.) split ADD/CHANGE and DELETED events\n\t\t// 2.) sort short deleted paths to the top\n\t\t// 3.) for each DELETE, check if there is a deleted parent and ignore the event in that case\n\t\treturn Array.from(this.coalesced).filter(e => {\n\t\t\tif (e.type !== FileChangeType.DELETED) {\n\t\t\t\taddOrChangeEvents.push(e);\n\n\t\t\t\treturn false; // remove ADD / CHANGE\n\t\t\t}\n\n\t\t\treturn true; // keep DELETE\n\t\t}).sort((e1, e2) => {\n\t\t\treturn e1.path.length - e2.path.length; // shortest path first\n\t\t}).filter(e => {\n\t\t\tif (deletedPaths.some(deletedPath => isParent(e.path, deletedPath, !isLinux /* ignorecase */))) {\n\t\t\t\treturn false; // DELETE is ignored if parent is deleted already\n\t\t\t}\n\n\t\t\t// otherwise mark as deleted\n\t\t\tdeletedPaths.push(e.path);\n\n\t\t\treturn true;\n\t\t}).concat(addOrChangeEvents);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ThrottledDelayer } from 'vs/base/common/async';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { basename, join } from 'vs/base/common/path';\nimport { realpath } from 'vs/base/node/extpath';\nimport { SymlinkSupport } from 'vs/base/node/pfs';\nimport { CHANGE_BUFFER_DELAY, watchFile, watchFolder } from 'vs/base/node/watcher';\nimport { FileChangeType } from 'vs/platform/files/common/files';\nimport { IDiskFileChange, ILogMessage, coalesceEvents } from 'vs/platform/files/common/watcher';\n\nexport class FileWatcher extends Disposable {\n\tprivate isDisposed: boolean | undefined;\n\n\tprivate readonly fileChangesDelayer: ThrottledDelayer<void> = this._register(new ThrottledDelayer<void>(CHANGE_BUFFER_DELAY * 2 /* sync on delay from underlying library */));\n\tprivate fileChangesBuffer: IDiskFileChange[] = [];\n\n\tconstructor(\n\t\tprivate path: string,\n\t\tprivate onDidFilesChange: (changes: IDiskFileChange[]) => void,\n\t\tprivate onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean\n\t) {\n\t\tsuper();\n\n\t\tthis.startWatching();\n\t}\n\n\tsetVerboseLogging(verboseLogging: boolean): void {\n\t\tthis.verboseLogging = verboseLogging;\n\t}\n\n\tprivate async startWatching(): Promise<void> {\n\t\ttry {\n\t\t\tconst { stat, symbolicLink } = await SymlinkSupport.stat(this.path);\n\n\t\t\tif (this.isDisposed) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet pathToWatch = this.path;\n\t\t\tif (symbolicLink) {\n\t\t\t\ttry {\n\t\t\t\t\tpathToWatch = await realpath(pathToWatch);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.onError(error);\n\n\t\t\t\t\tif (symbolicLink.dangling) {\n\t\t\t\t\t\treturn; // give up if symbolic link is dangling\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Watch Folder\n\t\t\tif (stat.isDirectory()) {\n\t\t\t\tthis._register(watchFolder(pathToWatch, (eventType, path) => {\n\t\t\t\t\tthis.onFileChange({\n\t\t\t\t\t\ttype: eventType === 'changed' ? FileChangeType.UPDATED : eventType === 'added' ? FileChangeType.ADDED : FileChangeType.DELETED,\n\t\t\t\t\t\tpath: join(this.path, basename(path)) // ensure path is identical with what was passed in\n\t\t\t\t\t});\n\t\t\t\t}, error => this.onError(error)));\n\t\t\t}\n\n\t\t\t// Watch File\n\t\t\telse {\n\t\t\t\tthis._register(watchFile(pathToWatch, eventType => {\n\t\t\t\t\tthis.onFileChange({\n\t\t\t\t\t\ttype: eventType === 'changed' ? FileChangeType.UPDATED : FileChangeType.DELETED,\n\t\t\t\t\t\tpath: this.path // ensure path is identical with what was passed in\n\t\t\t\t\t});\n\t\t\t\t}, error => this.onError(error)));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\tthis.onError(error);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate onFileChange(event: IDiskFileChange): void {\n\n\t\t// Add to buffer\n\t\tthis.fileChangesBuffer.push(event);\n\n\t\t// Logging\n\t\tif (this.verboseLogging) {\n\t\t\tthis.onVerbose(`${event.type === FileChangeType.ADDED ? '[ADDED]' : event.type === FileChangeType.DELETED ? '[DELETED]' : '[CHANGED]'} ${event.path}`);\n\t\t}\n\n\t\t// Handle emit through delayer to accommodate for bulk changes and thus reduce spam\n\t\tthis.fileChangesDelayer.trigger(async () => {\n\t\t\tconst fileChanges = this.fileChangesBuffer;\n\t\t\tthis.fileChangesBuffer = [];\n\n\t\t\t// Event coalsecer\n\t\t\tconst coalescedFileChanges = coalesceEvents(fileChanges);\n\n\t\t\t// Logging\n\t\t\tif (this.verboseLogging) {\n\t\t\t\tfor (const event of coalescedFileChanges) {\n\t\t\t\t\tthis.onVerbose(`>> normalized ${event.type === FileChangeType.ADDED ? '[ADDED]' : event.type === FileChangeType.DELETED ? '[DELETED]' : '[CHANGED]'} ${event.path}`);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Fire\n\t\t\tif (coalescedFileChanges.length > 0) {\n\t\t\t\tthis.onDidFilesChange(coalescedFileChanges);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate onError(error: string): void {\n\t\tif (!this.isDisposed) {\n\t\t\tthis.onLogMessage({ type: 'error', message: `[File Watcher (node.js)] ${error}` });\n\t\t}\n\t}\n\n\tprivate onVerbose(message: string): void {\n\t\tif (!this.isDisposed) {\n\t\t\tthis.onLogMessage({ type: 'trace', message: `[File Watcher (node.js)] ${message}` });\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tthis.isDisposed = true;\n\n\t\tsuper.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { FileAccess } from 'vs/base/common/network';\nimport { getNextTickChannel, ProxyChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Client } from 'vs/base/parts/ipc/node/ipc.cp';\nimport { IWatcherService } from 'vs/platform/files/node/watcher/nsfw/watcher';\nimport { IDiskFileChange, ILogMessage, IWatchRequest, WatcherService } from 'vs/platform/files/common/watcher';\n\nexport class FileWatcher extends WatcherService {\n\n\tprivate service: IWatcherService | undefined;\n\n\tprivate isDisposed = false;\n\n\tconstructor(\n\t\tprivate readonly onDidFilesChange: (changes: IDiskFileChange[]) => void,\n\t\tprivate readonly onLogMessage: (msg: ILogMessage) => void,\n\t\tprivate verboseLogging: boolean\n\t) {\n\t\tsuper();\n\n\t\tthis.startWatching();\n\t}\n\n\tprivate startWatching(): void {\n\t\tconst client = this._register(new Client(\n\t\t\tFileAccess.asFileUri('bootstrap-fork', require).fsPath,\n\t\t\t{\n\t\t\t\tserverName: 'File Watcher (nsfw)',\n\t\t\t\targs: ['--type=watcherServiceNSFW'],\n\t\t\t\tenv: {\n\t\t\t\t\tVSCODE_AMD_ENTRYPOINT: 'vs/platform/files/node/watcher/nsfw/watcherApp',\n\t\t\t\t\tVSCODE_PIPE_LOGGING: 'true',\n\t\t\t\t\tVSCODE_VERBOSE_LOGGING: 'true' // transmit console logs from server to client\n\t\t\t\t}\n\t\t\t}\n\t\t));\n\n\t\t// Initialize watcher\n\t\tthis.service = ProxyChannel.toService<IWatcherService>(getNextTickChannel(client.getChannel('watcher')));\n\t\tthis.service.setVerboseLogging(this.verboseLogging);\n\n\t\t// Wire in event handlers\n\t\tthis._register(this.service.onDidChangeFile(e => !this.isDisposed && this.onDidFilesChange(e)));\n\t\tthis._register(this.service.onDidLogMessage(e => this.onLogMessage(e)));\n\t}\n\n\tasync setVerboseLogging(verboseLogging: boolean): Promise<void> {\n\t\tthis.verboseLogging = verboseLogging;\n\n\t\tif (!this.isDisposed) {\n\t\t\tawait this.service?.setVerboseLogging(verboseLogging);\n\t\t}\n\t}\n\n\terror(message: string) {\n\t\tthis.onLogMessage({ type: 'error', message: `[File Watcher (nsfw)] ${message}` });\n\t}\n\n\tasync watch(requests: IWatchRequest[]): Promise<void> {\n\t\tif (!this.isDisposed) {\n\t\t\tawait this.service?.watch(requests);\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tthis.isDisposed = true;\n\n\t\tsuper.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { FileAccess } from 'vs/base/common/network';\nimport { getNextTickChannel, ProxyChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Client } from 'vs/base/parts/ipc/node/ipc.cp';\nimport { AbstractWatcherService, IDiskFileChange, ILogMessage, IWatcherService } from 'vs/platform/files/common/watcher';\n\nexport class FileWatcher extends AbstractWatcherService {\n\n\tconstructor(\n\t\tonFileChanges: (changes: IDiskFileChange[]) => void,\n\t\tonLogMessage: (msg: ILogMessage) => void,\n\t\tverboseLogging: boolean\n\t) {\n\t\tsuper(onFileChanges, onLogMessage, verboseLogging);\n\n\t\tthis.init();\n\t}\n\n\tprotected override createService(disposables: DisposableStore): IWatcherService {\n\n\t\t// Fork the parcel file watcher and build a client around\n\t\t// its server for passing over requests and receiving events.\n\t\tconst client = disposables.add(new Client(\n\t\t\tFileAccess.asFileUri('bootstrap-fork', require).fsPath,\n\t\t\t{\n\t\t\t\tserverName: 'File Watcher (parcel, node.js)',\n\t\t\t\targs: ['--type=watcherServiceParcel'],\n\t\t\t\tenv: {\n\t\t\t\t\tVSCODE_AMD_ENTRYPOINT: 'vs/platform/files/node/watcher/parcel/watcherApp',\n\t\t\t\t\tVSCODE_PIPE_LOGGING: 'true',\n\t\t\t\t\tVSCODE_VERBOSE_LOGGING: 'true' // transmit console logs from server to client\n\t\t\t\t}\n\t\t\t}\n\t\t));\n\n\t\t// React on unexpected termination of the watcher process\n\t\tdisposables.add(client.onDidProcessExit(({ code, signal }) => this.onError(`terminated by itself with code ${code}, signal: ${signal}`)));\n\n\t\treturn ProxyChannel.toService<IWatcherService>(getNextTickChannel(client.getChannel('watcher')));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ServiceIdentifier } from 'vs/platform/instantiation/common/instantiation';\nimport { SyncDescriptor } from './descriptors';\n\nexport class ServiceCollection {\n\n\tprivate _entries = new Map<ServiceIdentifier<any>, any>();\n\n\tconstructor(...entries: [ServiceIdentifier<any>, any][]) {\n\t\tfor (let [id, service] of entries) {\n\t\t\tthis.set(id, service);\n\t\t}\n\t}\n\n\tset<T>(id: ServiceIdentifier<T>, instanceOrDescriptor: T | SyncDescriptor<T>): T | SyncDescriptor<T> {\n\t\tconst result = this._entries.get(id);\n\t\tthis._entries.set(id, instanceOrDescriptor);\n\t\treturn result;\n\t}\n\n\thas(id: ServiceIdentifier<any>): boolean {\n\t\treturn this._entries.has(id);\n\t}\n\n\tget<T>(id: ServiceIdentifier<T>): T | SyncDescriptor<T> {\n\t\treturn this._entries.get(id);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IdleValue } from 'vs/base/common/async';\nimport { illegalState } from 'vs/base/common/errors';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { Graph } from 'vs/platform/instantiation/common/graph';\nimport { IInstantiationService, ServiceIdentifier, ServicesAccessor, _util } from 'vs/platform/instantiation/common/instantiation';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\n\n// TRACING\nconst _enableTracing = false;\n\nclass CyclicDependencyError extends Error {\n\tconstructor(graph: Graph<any>) {\n\t\tsuper('cyclic dependency between services');\n\t\tthis.message = graph.findCycleSlow() ?? `UNABLE to detect cycle, dumping graph: \\n${graph.toString()}`;\n\t}\n}\n\nexport class InstantiationService implements IInstantiationService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _services: ServiceCollection;\n\tprivate readonly _strict: boolean;\n\tprivate readonly _parent?: InstantiationService;\n\n\tconstructor(services: ServiceCollection = new ServiceCollection(), strict: boolean = false, parent?: InstantiationService) {\n\t\tthis._services = services;\n\t\tthis._strict = strict;\n\t\tthis._parent = parent;\n\n\t\tthis._services.set(IInstantiationService, this);\n\t}\n\n\tcreateChild(services: ServiceCollection): IInstantiationService {\n\t\treturn new InstantiationService(services, this._strict, this);\n\t}\n\n\tinvokeFunction<R, TS extends any[] = []>(fn: (accessor: ServicesAccessor, ...args: TS) => R, ...args: TS): R {\n\t\tlet _trace = Trace.traceInvocation(fn);\n\t\tlet _done = false;\n\t\ttry {\n\t\t\tconst accessor: ServicesAccessor = {\n\t\t\t\tget: <T>(id: ServiceIdentifier<T>) => {\n\n\t\t\t\t\tif (_done) {\n\t\t\t\t\t\tthrow illegalState('service accessor is only valid during the invocation of its target method');\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = this._getOrCreateServiceInstance(id, _trace);\n\t\t\t\t\tif (!result) {\n\t\t\t\t\t\tthrow new Error(`[invokeFunction] unknown service '${id}'`);\n\t\t\t\t\t}\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn fn(accessor, ...args);\n\t\t} finally {\n\t\t\t_done = true;\n\t\t\t_trace.stop();\n\t\t}\n\t}\n\n\tcreateInstance(ctorOrDescriptor: any | SyncDescriptor<any>, ...rest: any[]): any {\n\t\tlet _trace: Trace;\n\t\tlet result: any;\n\t\tif (ctorOrDescriptor instanceof SyncDescriptor) {\n\t\t\t_trace = Trace.traceCreation(ctorOrDescriptor.ctor);\n\t\t\tresult = this._createInstance(ctorOrDescriptor.ctor, ctorOrDescriptor.staticArguments.concat(rest), _trace);\n\t\t} else {\n\t\t\t_trace = Trace.traceCreation(ctorOrDescriptor);\n\t\t\tresult = this._createInstance(ctorOrDescriptor, rest, _trace);\n\t\t}\n\t\t_trace.stop();\n\t\treturn result;\n\t}\n\n\tprivate _createInstance<T>(ctor: any, args: any[] = [], _trace: Trace): T {\n\n\t\t// arguments defined by service decorators\n\t\tlet serviceDependencies = _util.getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\t\tlet serviceArgs: any[] = [];\n\t\tfor (const dependency of serviceDependencies) {\n\t\t\tlet service = this._getOrCreateServiceInstance(dependency.id, _trace);\n\t\t\tif (!service && this._strict && !dependency.optional) {\n\t\t\t\tthrow new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n\t\t\t}\n\t\t\tserviceArgs.push(service);\n\t\t}\n\n\t\tlet firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n\t\t// check for argument mismatches, adjust static args if needed\n\t\tif (args.length !== firstServiceArgPos) {\n\t\t\tconsole.warn(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n\n\t\t\tlet delta = firstServiceArgPos - args.length;\n\t\t\tif (delta > 0) {\n\t\t\t\targs = args.concat(new Array(delta));\n\t\t\t} else {\n\t\t\t\targs = args.slice(0, firstServiceArgPos);\n\t\t\t}\n\t\t}\n\n\t\t// now create the instance\n\t\treturn <T>new ctor(...[...args, ...serviceArgs]);\n\t}\n\n\tprivate _setServiceInstance<T>(id: ServiceIdentifier<T>, instance: T): void {\n\t\tif (this._services.get(id) instanceof SyncDescriptor) {\n\t\t\tthis._services.set(id, instance);\n\t\t} else if (this._parent) {\n\t\t\tthis._parent._setServiceInstance(id, instance);\n\t\t} else {\n\t\t\tthrow new Error('illegalState - setting UNKNOWN service instance');\n\t\t}\n\t}\n\n\tprivate _getServiceInstanceOrDescriptor<T>(id: ServiceIdentifier<T>): T | SyncDescriptor<T> {\n\t\tlet instanceOrDesc = this._services.get(id);\n\t\tif (!instanceOrDesc && this._parent) {\n\t\t\treturn this._parent._getServiceInstanceOrDescriptor(id);\n\t\t} else {\n\t\t\treturn instanceOrDesc;\n\t\t}\n\t}\n\n\tprivate _getOrCreateServiceInstance<T>(id: ServiceIdentifier<T>, _trace: Trace): T {\n\t\tlet thing = this._getServiceInstanceOrDescriptor(id);\n\t\tif (thing instanceof SyncDescriptor) {\n\t\t\treturn this._safeCreateAndCacheServiceInstance(id, thing, _trace.branch(id, true));\n\t\t} else {\n\t\t\t_trace.branch(id, false);\n\t\t\treturn thing;\n\t\t}\n\t}\n\n\tprivate readonly _activeInstantiations = new Set<ServiceIdentifier<any>>();\n\n\n\tprivate _safeCreateAndCacheServiceInstance<T>(id: ServiceIdentifier<T>, desc: SyncDescriptor<T>, _trace: Trace): T {\n\t\tif (this._activeInstantiations.has(id)) {\n\t\t\tthrow new Error(`illegal state - RECURSIVELY instantiating service '${id}'`);\n\t\t}\n\t\tthis._activeInstantiations.add(id);\n\t\ttry {\n\t\t\treturn this._createAndCacheServiceInstance(id, desc, _trace);\n\t\t} finally {\n\t\t\tthis._activeInstantiations.delete(id);\n\t\t}\n\t}\n\n\tprivate _createAndCacheServiceInstance<T>(id: ServiceIdentifier<T>, desc: SyncDescriptor<T>, _trace: Trace): T {\n\n\t\ttype Triple = { id: ServiceIdentifier<any>, desc: SyncDescriptor<any>, _trace: Trace; };\n\t\tconst graph = new Graph<Triple>(data => data.id.toString());\n\n\t\tlet cycleCount = 0;\n\t\tconst stack = [{ id, desc, _trace }];\n\t\twhile (stack.length) {\n\t\t\tconst item = stack.pop()!;\n\t\t\tgraph.lookupOrInsertNode(item);\n\n\t\t\t// a weak but working heuristic for cycle checks\n\t\t\tif (cycleCount++ > 1000) {\n\t\t\t\tthrow new CyclicDependencyError(graph);\n\t\t\t}\n\n\t\t\t// check all dependencies for existence and if they need to be created first\n\t\t\tfor (let dependency of _util.getServiceDependencies(item.desc.ctor)) {\n\n\t\t\t\tlet instanceOrDesc = this._getServiceInstanceOrDescriptor(dependency.id);\n\t\t\t\tif (!instanceOrDesc && !dependency.optional) {\n\t\t\t\t\tconsole.warn(`[createInstance] ${id} depends on ${dependency.id} which is NOT registered.`);\n\t\t\t\t}\n\n\t\t\t\tif (instanceOrDesc instanceof SyncDescriptor) {\n\t\t\t\t\tconst d = { id: dependency.id, desc: instanceOrDesc, _trace: item._trace.branch(dependency.id, true) };\n\t\t\t\t\tgraph.insertEdge(item, d);\n\t\t\t\t\tstack.push(d);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\twhile (true) {\n\t\t\tconst roots = graph.roots();\n\n\t\t\t// if there is no more roots but still\n\t\t\t// nodes in the graph we have a cycle\n\t\t\tif (roots.length === 0) {\n\t\t\t\tif (!graph.isEmpty()) {\n\t\t\t\t\tthrow new CyclicDependencyError(graph);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tfor (const { data } of roots) {\n\t\t\t\t// Repeat the check for this still being a service sync descriptor. That's because\n\t\t\t\t// instantiating a dependency might have side-effect and recursively trigger instantiation\n\t\t\t\t// so that some dependencies are now fullfilled already.\n\t\t\t\tconst instanceOrDesc = this._getServiceInstanceOrDescriptor(data.id);\n\t\t\t\tif (instanceOrDesc instanceof SyncDescriptor) {\n\t\t\t\t\t// create instance and overwrite the service collections\n\t\t\t\t\tconst instance = this._createServiceInstanceWithOwner(data.id, data.desc.ctor, data.desc.staticArguments, data.desc.supportsDelayedInstantiation, data._trace);\n\t\t\t\t\tthis._setServiceInstance(data.id, instance);\n\t\t\t\t}\n\t\t\t\tgraph.removeNode(data);\n\t\t\t}\n\t\t}\n\t\treturn <T>this._getServiceInstanceOrDescriptor(id);\n\t}\n\n\tprivate _createServiceInstanceWithOwner<T>(id: ServiceIdentifier<T>, ctor: any, args: any[] = [], supportsDelayedInstantiation: boolean, _trace: Trace): T {\n\t\tif (this._services.get(id) instanceof SyncDescriptor) {\n\t\t\treturn this._createServiceInstance(ctor, args, supportsDelayedInstantiation, _trace);\n\t\t} else if (this._parent) {\n\t\t\treturn this._parent._createServiceInstanceWithOwner(id, ctor, args, supportsDelayedInstantiation, _trace);\n\t\t} else {\n\t\t\tthrow new Error(`illegalState - creating UNKNOWN service instance ${ctor.name}`);\n\t\t}\n\t}\n\n\tprivate _createServiceInstance<T>(ctor: any, args: any[] = [], _supportsDelayedInstantiation: boolean, _trace: Trace): T {\n\t\tif (!_supportsDelayedInstantiation) {\n\t\t\t// eager instantiation\n\t\t\treturn this._createInstance(ctor, args, _trace);\n\n\t\t} else {\n\t\t\t// Return a proxy object that's backed by an idle value. That\n\t\t\t// strategy is to instantiate services in our idle time or when actually\n\t\t\t// needed but not when injected into a consumer\n\t\t\tconst idle = new IdleValue<any>(() => this._createInstance<T>(ctor, args, _trace));\n\t\t\treturn <T>new Proxy(Object.create(null), {\n\t\t\t\tget(target: any, key: PropertyKey): any {\n\t\t\t\t\tif (key in target) {\n\t\t\t\t\t\treturn target[key];\n\t\t\t\t\t}\n\t\t\t\t\tlet obj = idle.value;\n\t\t\t\t\tlet prop = obj[key];\n\t\t\t\t\tif (typeof prop !== 'function') {\n\t\t\t\t\t\treturn prop;\n\t\t\t\t\t}\n\t\t\t\t\tprop = prop.bind(obj);\n\t\t\t\t\ttarget[key] = prop;\n\t\t\t\t\treturn prop;\n\t\t\t\t},\n\t\t\t\tset(_target: T, p: PropertyKey, value: any): boolean {\n\t\t\t\t\tidle.value[p] = value;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\n//#region -- tracing ---\n\nconst enum TraceType {\n\tCreation, Invocation, Branch\n}\n\nclass Trace {\n\n\tprivate static readonly _None = new class extends Trace {\n\t\tconstructor() { super(-1, null); }\n\t\toverride stop() { }\n\t\toverride branch() { return this; }\n\t};\n\n\tstatic traceInvocation(ctor: any): Trace {\n\t\treturn !_enableTracing ? Trace._None : new Trace(TraceType.Invocation, ctor.name || (ctor.toString() as string).substring(0, 42).replace(/\\n/g, ''));\n\t}\n\n\tstatic traceCreation(ctor: any): Trace {\n\t\treturn !_enableTracing ? Trace._None : new Trace(TraceType.Creation, ctor.name);\n\t}\n\n\tprivate static _totals: number = 0;\n\tprivate readonly _start: number = Date.now();\n\tprivate readonly _dep: [ServiceIdentifier<any>, boolean, Trace?][] = [];\n\n\tprivate constructor(\n\t\treadonly type: TraceType,\n\t\treadonly name: string | null\n\t) { }\n\n\tbranch(id: ServiceIdentifier<any>, first: boolean): Trace {\n\t\tlet child = new Trace(TraceType.Branch, id.toString());\n\t\tthis._dep.push([id, first, child]);\n\t\treturn child;\n\t}\n\n\tstop() {\n\t\tlet dur = Date.now() - this._start;\n\t\tTrace._totals += dur;\n\n\t\tlet causedCreation = false;\n\n\t\tfunction printChild(n: number, trace: Trace) {\n\t\t\tlet res: string[] = [];\n\t\t\tlet prefix = new Array(n + 1).join('\\t');\n\t\t\tfor (const [id, first, child] of trace._dep) {\n\t\t\t\tif (first && child) {\n\t\t\t\t\tcausedCreation = true;\n\t\t\t\t\tres.push(`${prefix}CREATES -> ${id}`);\n\t\t\t\t\tlet nested = printChild(n + 1, child);\n\t\t\t\t\tif (nested) {\n\t\t\t\t\t\tres.push(nested);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tres.push(`${prefix}uses -> ${id}`);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn res.join('\\n');\n\t\t}\n\n\t\tlet lines = [\n\t\t\t`${this.type === TraceType.Creation ? 'CREATE' : 'CALL'} ${this.name}`,\n\t\t\t`${printChild(1, this)}`,\n\t\t\t`DONE, took ${dur.toFixed(2)}ms (grand total ${Trace._totals.toFixed(2)}ms)`\n\t\t];\n\n\t\tif (dur > 2 || causedCreation) {\n\t\t\tconsole.log(lines.join('\\n'));\n\t\t}\n\t}\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { illegalArgument } from 'vs/base/common/errors';\nimport { AriaLabelProvider, ElectronAcceleratorLabelProvider, UILabelProvider, UserSettingsLabelProvider } from 'vs/base/common/keybindingLabels';\nimport { IBaseKeybinding, KeybindingModifier, ResolvedKeybinding, ResolvedKeybindingPart } from 'vs/base/common/keybindings';\nimport { OperatingSystem } from 'vs/base/common/platform';\n\nexport abstract class BaseResolvedKeybinding<T extends IBaseKeybinding> extends ResolvedKeybinding {\n\n\tprotected readonly _os: OperatingSystem;\n\tprotected readonly _parts: T[];\n\n\tconstructor(os: OperatingSystem, parts: T[]) {\n\t\tsuper();\n\t\tif (parts.length === 0) {\n\t\t\tthrow illegalArgument(`parts`);\n\t\t}\n\t\tthis._os = os;\n\t\tthis._parts = parts;\n\t}\n\n\tpublic getLabel(): string | null {\n\t\treturn UILabelProvider.toLabel(this._os, this._parts, (keybinding) => this._getLabel(keybinding));\n\t}\n\n\tpublic getAriaLabel(): string | null {\n\t\treturn AriaLabelProvider.toLabel(this._os, this._parts, (keybinding) => this._getAriaLabel(keybinding));\n\t}\n\n\tpublic getElectronAccelerator(): string | null {\n\t\tif (this._parts.length > 1) {\n\t\t\t// [Electron Accelerators] Electron cannot handle chords\n\t\t\treturn null;\n\t\t}\n\t\tif (this._parts[0].isDuplicateModifierCase()) {\n\t\t\t// [Electron Accelerators] Electron cannot handle modifier only keybindings\n\t\t\t// e.g. \"shift shift\"\n\t\t\treturn null;\n\t\t}\n\t\treturn ElectronAcceleratorLabelProvider.toLabel(this._os, this._parts, (keybinding) => this._getElectronAccelerator(keybinding));\n\t}\n\n\tpublic getUserSettingsLabel(): string | null {\n\t\treturn UserSettingsLabelProvider.toLabel(this._os, this._parts, (keybinding) => this._getUserSettingsLabel(keybinding));\n\t}\n\n\tpublic isWYSIWYG(): boolean {\n\t\treturn this._parts.every((keybinding) => this._isWYSIWYG(keybinding));\n\t}\n\n\tpublic isChord(): boolean {\n\t\treturn (this._parts.length > 1);\n\t}\n\n\tpublic getParts(): ResolvedKeybindingPart[] {\n\t\treturn this._parts.map((keybinding) => this._getPart(keybinding));\n\t}\n\n\tprivate _getPart(keybinding: T): ResolvedKeybindingPart {\n\t\treturn new ResolvedKeybindingPart(\n\t\t\tkeybinding.ctrlKey,\n\t\t\tkeybinding.shiftKey,\n\t\t\tkeybinding.altKey,\n\t\t\tkeybinding.metaKey,\n\t\t\tthis._getLabel(keybinding),\n\t\t\tthis._getAriaLabel(keybinding)\n\t\t);\n\t}\n\n\tpublic getDispatchParts(): (string | null)[] {\n\t\treturn this._parts.map((keybinding) => this._getDispatchPart(keybinding));\n\t}\n\n\tpublic getSingleModifierDispatchParts(): (KeybindingModifier | null)[] {\n\t\treturn this._parts.map((keybinding) => this._getSingleModifierDispatchPart(keybinding));\n\t}\n\n\tprotected abstract _getLabel(keybinding: T): string | null;\n\tprotected abstract _getAriaLabel(keybinding: T): string | null;\n\tprotected abstract _getElectronAccelerator(keybinding: T): string | null;\n\tprotected abstract _getUserSettingsLabel(keybinding: T): string | null;\n\tprotected abstract _isWYSIWYG(keybinding: T): boolean;\n\tprotected abstract _getDispatchPart(keybinding: T): string | null;\n\tprotected abstract _getSingleModifierDispatchPart(keybinding: T): KeybindingModifier | null;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CharCode } from 'vs/base/common/charCode';\nimport { ResolvedKeybinding } from 'vs/base/common/keybindings';\nimport { ContextKeyExpression } from 'vs/platform/contextkey/common/contextkey';\n\nexport class ResolvedKeybindingItem {\n\t_resolvedKeybindingItemBrand: void = undefined;\n\n\tpublic readonly resolvedKeybinding: ResolvedKeybinding | undefined;\n\tpublic readonly keypressParts: string[];\n\tpublic readonly bubble: boolean;\n\tpublic readonly command: string | null;\n\tpublic readonly commandArgs: any;\n\tpublic readonly when: ContextKeyExpression | undefined;\n\tpublic readonly isDefault: boolean;\n\tpublic readonly extensionId: string | null;\n\tpublic readonly isBuiltinExtension: boolean;\n\n\tconstructor(resolvedKeybinding: ResolvedKeybinding | undefined, command: string | null, commandArgs: any, when: ContextKeyExpression | undefined, isDefault: boolean, extensionId: string | null, isBuiltinExtension: boolean) {\n\t\tthis.resolvedKeybinding = resolvedKeybinding;\n\t\tthis.keypressParts = resolvedKeybinding ? removeElementsAfterNulls(resolvedKeybinding.getDispatchParts()) : [];\n\t\tif (resolvedKeybinding && this.keypressParts.length === 0) {\n\t\t\t// handle possible single modifier chord keybindings\n\t\t\tthis.keypressParts = removeElementsAfterNulls(resolvedKeybinding.getSingleModifierDispatchParts());\n\t\t}\n\t\tthis.bubble = (command ? command.charCodeAt(0) === CharCode.Caret : false);\n\t\tthis.command = this.bubble ? command!.substr(1) : command;\n\t\tthis.commandArgs = commandArgs;\n\t\tthis.when = when;\n\t\tthis.isDefault = isDefault;\n\t\tthis.extensionId = extensionId;\n\t\tthis.isBuiltinExtension = isBuiltinExtension;\n\t}\n}\n\nexport function removeElementsAfterNulls<T>(arr: (T | null)[]): T[] {\n\tlet result: T[] = [];\n\tfor (let i = 0, len = arr.length; i < len; i++) {\n\t\tconst element = arr[i];\n\t\tif (!element) {\n\t\t\t// stop processing at first encountered null\n\t\t\treturn result;\n\t\t}\n\t\tresult.push(element);\n\t}\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { KeyCode, KeyCodeUtils, IMMUTABLE_CODE_TO_KEY_CODE, ScanCode } from 'vs/base/common/keyCodes';\nimport { ChordKeybinding, Keybinding, KeybindingModifier, SimpleKeybinding, ScanCodeBinding } from 'vs/base/common/keybindings';\nimport { OperatingSystem } from 'vs/base/common/platform';\nimport { BaseResolvedKeybinding } from 'vs/platform/keybinding/common/baseResolvedKeybinding';\nimport { removeElementsAfterNulls } from 'vs/platform/keybinding/common/resolvedKeybindingItem';\n\n/**\n * Do not instantiate. Use KeybindingService to get a ResolvedKeybinding seeded with information about the current kb layout.\n */\nexport class USLayoutResolvedKeybinding extends BaseResolvedKeybinding<SimpleKeybinding> {\n\n\tconstructor(actual: Keybinding, os: OperatingSystem) {\n\t\tsuper(os, actual.parts);\n\t}\n\n\tprivate _keyCodeToUILabel(keyCode: KeyCode): string {\n\t\tif (this._os === OperatingSystem.Macintosh) {\n\t\t\tswitch (keyCode) {\n\t\t\t\tcase KeyCode.LeftArrow:\n\t\t\t\t\treturn '←';\n\t\t\t\tcase KeyCode.UpArrow:\n\t\t\t\t\treturn '↑';\n\t\t\t\tcase KeyCode.RightArrow:\n\t\t\t\t\treturn '→';\n\t\t\t\tcase KeyCode.DownArrow:\n\t\t\t\t\treturn '↓';\n\t\t\t}\n\t\t}\n\t\treturn KeyCodeUtils.toString(keyCode);\n\t}\n\n\tprotected _getLabel(keybinding: SimpleKeybinding): string | null {\n\t\tif (keybinding.isDuplicateModifierCase()) {\n\t\t\treturn '';\n\t\t}\n\t\treturn this._keyCodeToUILabel(keybinding.keyCode);\n\t}\n\n\tprotected _getAriaLabel(keybinding: SimpleKeybinding): string | null {\n\t\tif (keybinding.isDuplicateModifierCase()) {\n\t\t\treturn '';\n\t\t}\n\t\treturn KeyCodeUtils.toString(keybinding.keyCode);\n\t}\n\n\tprotected _getElectronAccelerator(keybinding: SimpleKeybinding): string | null {\n\t\treturn KeyCodeUtils.toElectronAccelerator(keybinding.keyCode);\n\t}\n\n\tprotected _getUserSettingsLabel(keybinding: SimpleKeybinding): string | null {\n\t\tif (keybinding.isDuplicateModifierCase()) {\n\t\t\treturn '';\n\t\t}\n\t\tconst result = KeyCodeUtils.toUserSettingsUS(keybinding.keyCode);\n\t\treturn (result ? result.toLowerCase() : result);\n\t}\n\n\tprotected _isWYSIWYG(): boolean {\n\t\treturn true;\n\t}\n\n\tprotected _getDispatchPart(keybinding: SimpleKeybinding): string | null {\n\t\treturn USLayoutResolvedKeybinding.getDispatchStr(keybinding);\n\t}\n\n\tpublic static getDispatchStr(keybinding: SimpleKeybinding): string | null {\n\t\tif (keybinding.isModifierKey()) {\n\t\t\treturn null;\n\t\t}\n\t\tlet result = '';\n\n\t\tif (keybinding.ctrlKey) {\n\t\t\tresult += 'ctrl+';\n\t\t}\n\t\tif (keybinding.shiftKey) {\n\t\t\tresult += 'shift+';\n\t\t}\n\t\tif (keybinding.altKey) {\n\t\t\tresult += 'alt+';\n\t\t}\n\t\tif (keybinding.metaKey) {\n\t\t\tresult += 'meta+';\n\t\t}\n\t\tresult += KeyCodeUtils.toString(keybinding.keyCode);\n\n\t\treturn result;\n\t}\n\n\tprotected _getSingleModifierDispatchPart(keybinding: SimpleKeybinding): KeybindingModifier | null {\n\t\tif (keybinding.keyCode === KeyCode.Ctrl && !keybinding.shiftKey && !keybinding.altKey && !keybinding.metaKey) {\n\t\t\treturn 'ctrl';\n\t\t}\n\t\tif (keybinding.keyCode === KeyCode.Shift && !keybinding.ctrlKey && !keybinding.altKey && !keybinding.metaKey) {\n\t\t\treturn 'shift';\n\t\t}\n\t\tif (keybinding.keyCode === KeyCode.Alt && !keybinding.ctrlKey && !keybinding.shiftKey && !keybinding.metaKey) {\n\t\t\treturn 'alt';\n\t\t}\n\t\tif (keybinding.keyCode === KeyCode.Meta && !keybinding.ctrlKey && !keybinding.shiftKey && !keybinding.altKey) {\n\t\t\treturn 'meta';\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * *NOTE*: Check return value for `KeyCode.Unknown`.\n\t */\n\tprivate static _scanCodeToKeyCode(scanCode: ScanCode): KeyCode {\n\t\tconst immutableKeyCode = IMMUTABLE_CODE_TO_KEY_CODE[scanCode];\n\t\tif (immutableKeyCode !== KeyCode.DependsOnKbLayout) {\n\t\t\treturn immutableKeyCode;\n\t\t}\n\n\t\tswitch (scanCode) {\n\t\t\tcase ScanCode.KeyA: return KeyCode.KeyA;\n\t\t\tcase ScanCode.KeyB: return KeyCode.KeyB;\n\t\t\tcase ScanCode.KeyC: return KeyCode.KeyC;\n\t\t\tcase ScanCode.KeyD: return KeyCode.KeyD;\n\t\t\tcase ScanCode.KeyE: return KeyCode.KeyE;\n\t\t\tcase ScanCode.KeyF: return KeyCode.KeyF;\n\t\t\tcase ScanCode.KeyG: return KeyCode.KeyG;\n\t\t\tcase ScanCode.KeyH: return KeyCode.KeyH;\n\t\t\tcase ScanCode.KeyI: return KeyCode.KeyI;\n\t\t\tcase ScanCode.KeyJ: return KeyCode.KeyJ;\n\t\t\tcase ScanCode.KeyK: return KeyCode.KeyK;\n\t\t\tcase ScanCode.KeyL: return KeyCode.KeyL;\n\t\t\tcase ScanCode.KeyM: return KeyCode.KeyM;\n\t\t\tcase ScanCode.KeyN: return KeyCode.KeyN;\n\t\t\tcase ScanCode.KeyO: return KeyCode.KeyO;\n\t\t\tcase ScanCode.KeyP: return KeyCode.KeyP;\n\t\t\tcase ScanCode.KeyQ: return KeyCode.KeyQ;\n\t\t\tcase ScanCode.KeyR: return KeyCode.KeyR;\n\t\t\tcase ScanCode.KeyS: return KeyCode.KeyS;\n\t\t\tcase ScanCode.KeyT: return KeyCode.KeyT;\n\t\t\tcase ScanCode.KeyU: return KeyCode.KeyU;\n\t\t\tcase ScanCode.KeyV: return KeyCode.KeyV;\n\t\t\tcase ScanCode.KeyW: return KeyCode.KeyW;\n\t\t\tcase ScanCode.KeyX: return KeyCode.KeyX;\n\t\t\tcase ScanCode.KeyY: return KeyCode.KeyY;\n\t\t\tcase ScanCode.KeyZ: return KeyCode.KeyZ;\n\t\t\tcase ScanCode.Digit1: return KeyCode.Digit1;\n\t\t\tcase ScanCode.Digit2: return KeyCode.Digit2;\n\t\t\tcase ScanCode.Digit3: return KeyCode.Digit3;\n\t\t\tcase ScanCode.Digit4: return KeyCode.Digit4;\n\t\t\tcase ScanCode.Digit5: return KeyCode.Digit5;\n\t\t\tcase ScanCode.Digit6: return KeyCode.Digit6;\n\t\t\tcase ScanCode.Digit7: return KeyCode.Digit7;\n\t\t\tcase ScanCode.Digit8: return KeyCode.Digit8;\n\t\t\tcase ScanCode.Digit9: return KeyCode.Digit9;\n\t\t\tcase ScanCode.Digit0: return KeyCode.Digit0;\n\t\t\tcase ScanCode.Minus: return KeyCode.Minus;\n\t\t\tcase ScanCode.Equal: return KeyCode.Equal;\n\t\t\tcase ScanCode.BracketLeft: return KeyCode.BracketLeft;\n\t\t\tcase ScanCode.BracketRight: return KeyCode.BracketRight;\n\t\t\tcase ScanCode.Backslash: return KeyCode.Backslash;\n\t\t\tcase ScanCode.IntlHash: return KeyCode.Unknown; // missing\n\t\t\tcase ScanCode.Semicolon: return KeyCode.Semicolon;\n\t\t\tcase ScanCode.Quote: return KeyCode.Quote;\n\t\t\tcase ScanCode.Backquote: return KeyCode.Backquote;\n\t\t\tcase ScanCode.Comma: return KeyCode.Comma;\n\t\t\tcase ScanCode.Period: return KeyCode.Period;\n\t\t\tcase ScanCode.Slash: return KeyCode.Slash;\n\t\t\tcase ScanCode.IntlBackslash: return KeyCode.IntlBackslash;\n\t\t}\n\t\treturn KeyCode.Unknown;\n\t}\n\n\tprivate static _resolveSimpleUserBinding(binding: SimpleKeybinding | ScanCodeBinding | null): SimpleKeybinding | null {\n\t\tif (!binding) {\n\t\t\treturn null;\n\t\t}\n\t\tif (binding instanceof SimpleKeybinding) {\n\t\t\treturn binding;\n\t\t}\n\t\tconst keyCode = this._scanCodeToKeyCode(binding.scanCode);\n\t\tif (keyCode === KeyCode.Unknown) {\n\t\t\treturn null;\n\t\t}\n\t\treturn new SimpleKeybinding(binding.ctrlKey, binding.shiftKey, binding.altKey, binding.metaKey, keyCode);\n\t}\n\n\tpublic static resolveUserBinding(input: (SimpleKeybinding | ScanCodeBinding)[], os: OperatingSystem): USLayoutResolvedKeybinding[] {\n\t\tconst parts: SimpleKeybinding[] = removeElementsAfterNulls(input.map(keybinding => this._resolveSimpleUserBinding(keybinding)));\n\t\tif (parts.length > 0) {\n\t\t\treturn [new USLayoutResolvedKeybinding(new ChordKeybinding(parts), os)];\n\t\t}\n\t\treturn [];\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isThenable, Promises } from 'vs/base/common/async';\n\n// Shared veto handling across main and renderer\nexport function handleVetos(vetos: (boolean | Promise<boolean>)[], onError: (error: Error) => void): Promise<boolean /* veto */> {\n\tif (vetos.length === 0) {\n\t\treturn Promise.resolve(false);\n\t}\n\n\tconst promises: Promise<void>[] = [];\n\tlet lazyValue = false;\n\n\tfor (let valueOrPromise of vetos) {\n\n\t\t// veto, done\n\t\tif (valueOrPromise === true) {\n\t\t\treturn Promise.resolve(true);\n\t\t}\n\n\t\tif (isThenable(valueOrPromise)) {\n\t\t\tpromises.push(valueOrPromise.then(value => {\n\t\t\t\tif (value) {\n\t\t\t\t\tlazyValue = true; // veto, done\n\t\t\t\t}\n\t\t\t}, err => {\n\t\t\t\tonError(err); // error, treated like a veto, done\n\t\t\t\tlazyValue = true;\n\t\t\t}));\n\t\t}\n\t}\n\n\treturn Promises.settled(promises).then(() => lazyValue);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { isWindows } from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { createDecorator as createServiceDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const ILogService = createServiceDecorator<ILogService>('logService');\nexport const ILoggerService = createServiceDecorator<ILoggerService>('loggerService');\n\nfunction now(): string {\n\treturn new Date().toISOString();\n}\n\nexport enum LogLevel {\n\tTrace,\n\tDebug,\n\tInfo,\n\tWarning,\n\tError,\n\tCritical,\n\tOff\n}\n\nexport const DEFAULT_LOG_LEVEL: LogLevel = LogLevel.Info;\n\nexport interface ILogger extends IDisposable {\n\tonDidChangeLogLevel: Event<LogLevel>;\n\tgetLevel(): LogLevel;\n\tsetLevel(level: LogLevel): void;\n\n\ttrace(message: string, ...args: any[]): void;\n\tdebug(message: string, ...args: any[]): void;\n\tinfo(message: string, ...args: any[]): void;\n\twarn(message: string, ...args: any[]): void;\n\terror(message: string | Error, ...args: any[]): void;\n\tcritical(message: string | Error, ...args: any[]): void;\n\n\t/**\n\t * An operation to flush the contents. Can be synchronous.\n\t */\n\tflush(): void;\n}\n\nexport function log(logger: ILogger, level: LogLevel, message: string): void {\n\tswitch (level) {\n\t\tcase LogLevel.Trace: logger.trace(message); break;\n\t\tcase LogLevel.Debug: logger.debug(message); break;\n\t\tcase LogLevel.Info: logger.info(message); break;\n\t\tcase LogLevel.Warning: logger.warn(message); break;\n\t\tcase LogLevel.Error: logger.error(message); break;\n\t\tcase LogLevel.Critical: logger.critical(message); break;\n\t\tdefault: throw new Error('Invalid log level');\n\t}\n}\n\nexport function format(args: any): string {\n\tlet result = '';\n\n\tfor (let i = 0; i < args.length; i++) {\n\t\tlet a = args[i];\n\n\t\tif (typeof a === 'object') {\n\t\t\ttry {\n\t\t\t\ta = JSON.stringify(a);\n\t\t\t} catch (e) { }\n\t\t}\n\n\t\tresult += (i > 0 ? ' ' : '') + a;\n\t}\n\n\treturn result;\n}\n\nexport interface ILogService extends ILogger {\n\treadonly _serviceBrand: undefined;\n}\n\nexport interface ILoggerOptions {\n\n\t/**\n\t * Name of the logger.\n\t */\n\tname?: string;\n\n\t/**\n\t * Do not create rotating files if max size exceeds.\n\t */\n\tdonotRotate?: boolean;\n\n\t/**\n\t * Do not use formatters.\n\t */\n\tdonotUseFormatters?: boolean;\n\n\t/**\n\t * If set, logger logs the message always.\n\t */\n\talways?: boolean;\n}\n\nexport interface ILoggerService {\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Creates a logger, or gets one if it already exists.\n\t */\n\tcreateLogger(file: URI, options?: ILoggerOptions): ILogger;\n\n\t/**\n\t * Gets an existing logger, if any.\n\t */\n\tgetLogger(file: URI): ILogger | undefined;\n}\n\nexport abstract class AbstractLogger extends Disposable {\n\n\tprivate level: LogLevel = DEFAULT_LOG_LEVEL;\n\tprivate readonly _onDidChangeLogLevel: Emitter<LogLevel> = this._register(new Emitter<LogLevel>());\n\treadonly onDidChangeLogLevel: Event<LogLevel> = this._onDidChangeLogLevel.event;\n\n\tsetLevel(level: LogLevel): void {\n\t\tif (this.level !== level) {\n\t\t\tthis.level = level;\n\t\t\tthis._onDidChangeLogLevel.fire(this.level);\n\t\t}\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.level;\n\t}\n\n}\n\nexport abstract class AbstractMessageLogger extends AbstractLogger implements ILogger {\n\n\tprotected abstract log(level: LogLevel, message: string): void;\n\n\tconstructor(private readonly logAlways?: boolean) {\n\t\tsuper();\n\t}\n\n\tprivate checkLogLevel(level: LogLevel): boolean {\n\t\treturn this.logAlways || this.getLevel() <= level;\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Trace)) {\n\t\t\tthis.log(LogLevel.Trace, format([message, ...args]));\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Debug)) {\n\t\t\tthis.log(LogLevel.Debug, format([message, ...args]));\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Info)) {\n\t\t\tthis.log(LogLevel.Info, format([message, ...args]));\n\t\t}\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Warning)) {\n\t\t\tthis.log(LogLevel.Warning, format([message, ...args]));\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Error)) {\n\n\t\t\tif (message instanceof Error) {\n\t\t\t\tconst array = Array.prototype.slice.call(arguments) as any[];\n\t\t\t\tarray[0] = message.stack;\n\t\t\t\tthis.log(LogLevel.Error, format(array));\n\t\t\t} else {\n\t\t\t\tthis.log(LogLevel.Error, format([message, ...args]));\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tif (this.checkLogLevel(LogLevel.Critical)) {\n\t\t\tthis.log(LogLevel.Critical, format([message, ...args]));\n\t\t}\n\t}\n\n\tflush(): void { }\n}\n\n\nexport class ConsoleMainLogger extends AbstractLogger implements ILogger {\n\n\tprivate useColors: boolean;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t\tthis.useColors = !isWindows;\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.log(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.log(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.warn(`\\x1b[93m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.warn(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[91m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tif (this.useColors) {\n\t\t\t\tconsole.error(`\\x1b[90m[main ${now()}]\\x1b[0m`, message, ...args);\n\t\t\t} else {\n\t\t\t\tconsole.error(`[main ${now()}]`, message, ...args);\n\t\t\t}\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n\n}\n\nexport class ConsoleLogger extends AbstractLogger implements ILogger {\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tconsole.log('%cTRACE', 'color: #888', message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tconsole.log('%cDEBUG', 'background: #eee; color: #888', message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tconsole.log('%c INFO', 'color: #33f', message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tconsole.log('%c WARN', 'color: #993', message, ...args);\n\t\t}\n\t}\n\n\terror(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tconsole.log('%c  ERR', 'color: #f33', message, ...args);\n\t\t}\n\t}\n\n\tcritical(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tconsole.log('%cCRITI', 'background: #f33; color: white', message, ...args);\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n}\n\nexport class AdapterLogger extends AbstractLogger implements ILogger {\n\n\tconstructor(private readonly adapter: { log: (logLevel: LogLevel, args: any[]) => void }, logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tthis.adapter.log(LogLevel.Trace, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tthis.adapter.log(LogLevel.Debug, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tthis.adapter.log(LogLevel.Info, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\twarn(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tthis.adapter.log(LogLevel.Warning, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tthis.adapter.log(LogLevel.Error, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tthis.adapter.log(LogLevel.Critical, [this.extractMessage(message), ...args]);\n\t\t}\n\t}\n\n\tprivate extractMessage(msg: string | Error): string {\n\t\tif (typeof msg === 'string') {\n\t\t\treturn msg;\n\t\t}\n\n\t\treturn toErrorMessage(msg, this.getLevel() <= LogLevel.Trace);\n\t}\n\n\toverride dispose(): void {\n\t\t// noop\n\t}\n\n\tflush(): void {\n\t\t// noop\n\t}\n}\n\nexport class MultiplexLogService extends AbstractLogger implements ILogService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private readonly logServices: ReadonlyArray<ILogger>) {\n\t\tsuper();\n\t\tif (logServices.length) {\n\t\t\tthis.setLevel(logServices[0].getLevel());\n\t\t}\n\t}\n\n\toverride setLevel(level: LogLevel): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.setLevel(level);\n\t\t}\n\t\tsuper.setLevel(level);\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.trace(message, ...args);\n\t\t}\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.debug(message, ...args);\n\t\t}\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.info(message, ...args);\n\t\t}\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.warn(message, ...args);\n\t\t}\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.error(message, ...args);\n\t\t}\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.critical(message, ...args);\n\t\t}\n\t}\n\n\tflush(): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.flush();\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tfor (const logService of this.logServices) {\n\t\t\tlogService.dispose();\n\t\t}\n\t}\n}\n\nexport class LogService extends Disposable implements ILogService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private logger: ILogger) {\n\t\tsuper();\n\t\tthis._register(logger);\n\t}\n\n\tget onDidChangeLogLevel(): Event<LogLevel> {\n\t\treturn this.logger.onDidChangeLogLevel;\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tthis.logger.setLevel(level);\n\t}\n\n\tgetLevel(): LogLevel {\n\t\treturn this.logger.getLevel();\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tthis.logger.trace(message, ...args);\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tthis.logger.debug(message, ...args);\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tthis.logger.info(message, ...args);\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tthis.logger.warn(message, ...args);\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tthis.logger.error(message, ...args);\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tthis.logger.critical(message, ...args);\n\t}\n\n\tflush(): void {\n\t\tthis.logger.flush();\n\t}\n}\n\nexport abstract class AbstractLoggerService extends Disposable implements ILoggerService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly loggers = new Map<string, ILogger>();\n\tprivate readonly logLevelChangeableLoggers: ILogger[] = [];\n\n\tconstructor(\n\t\tprivate logLevel: LogLevel,\n\t\tonDidChangeLogLevel: Event<LogLevel>,\n\t) {\n\t\tsuper();\n\t\tthis._register(onDidChangeLogLevel(logLevel => {\n\t\t\tthis.logLevel = logLevel;\n\t\t\tthis.logLevelChangeableLoggers.forEach(logger => logger.setLevel(logLevel));\n\t\t}));\n\t}\n\n\tgetLogger(resource: URI) {\n\t\treturn this.loggers.get(resource.toString());\n\t}\n\n\tcreateLogger(resource: URI, options?: ILoggerOptions): ILogger {\n\t\tlet logger = this.loggers.get(resource.toString());\n\t\tif (!logger) {\n\t\t\tlogger = this.doCreateLogger(resource, options?.always ? LogLevel.Trace : this.logLevel, options);\n\t\t\tthis.loggers.set(resource.toString(), logger);\n\t\t\tif (!options?.always) {\n\t\t\t\tthis.logLevelChangeableLoggers.push(logger);\n\t\t\t}\n\t\t}\n\t\treturn logger;\n\t}\n\n\toverride dispose(): void {\n\t\tthis.logLevelChangeableLoggers.splice(0, this.logLevelChangeableLoggers.length);\n\t\tthis.loggers.forEach(logger => logger.dispose());\n\t\tthis.loggers.clear();\n\t\tsuper.dispose();\n\t}\n\n\tprotected abstract doCreateLogger(resource: URI, logLevel: LogLevel, options?: ILoggerOptions): ILogger;\n}\n\nexport class NullLogService implements ILogService {\n\tdeclare readonly _serviceBrand: undefined;\n\treadonly onDidChangeLogLevel: Event<LogLevel> = new Emitter<LogLevel>().event;\n\tsetLevel(level: LogLevel): void { }\n\tgetLevel(): LogLevel { return LogLevel.Info; }\n\ttrace(message: string, ...args: any[]): void { }\n\tdebug(message: string, ...args: any[]): void { }\n\tinfo(message: string, ...args: any[]): void { }\n\twarn(message: string, ...args: any[]): void { }\n\terror(message: string | Error, ...args: any[]): void { }\n\tcritical(message: string | Error, ...args: any[]): void { }\n\tdispose(): void { }\n\tflush(): void { }\n}\n\nexport function getLogLevel(environmentService: IEnvironmentService): LogLevel {\n\tif (environmentService.verbose) {\n\t\treturn LogLevel.Trace;\n\t}\n\tif (typeof environmentService.logLevel === 'string') {\n\t\tconst logLevel = parseLogLevel(environmentService.logLevel.toLowerCase());\n\t\tif (logLevel !== undefined) {\n\t\t\treturn logLevel;\n\t\t}\n\t}\n\treturn DEFAULT_LOG_LEVEL;\n}\n\nexport function parseLogLevel(logLevel: string): LogLevel | undefined {\n\tswitch (logLevel) {\n\t\tcase 'trace':\n\t\t\treturn LogLevel.Trace;\n\t\tcase 'debug':\n\t\t\treturn LogLevel.Debug;\n\t\tcase 'info':\n\t\t\treturn LogLevel.Info;\n\t\tcase 'warn':\n\t\t\treturn LogLevel.Warning;\n\t\tcase 'error':\n\t\t\treturn LogLevel.Error;\n\t\tcase 'critical':\n\t\t\treturn LogLevel.Critical;\n\t\tcase 'off':\n\t\t\treturn LogLevel.Off;\n\t}\n\treturn undefined;\n}\n\nexport function LogLevelToString(logLevel: LogLevel): string {\n\tswitch (logLevel) {\n\t\tcase LogLevel.Trace: return 'trace';\n\t\tcase LogLevel.Debug: return 'debug';\n\t\tcase LogLevel.Info: return 'info';\n\t\tcase LogLevel.Warning: return 'warn';\n\t\tcase LogLevel.Error: return 'error';\n\t\tcase LogLevel.Critical: return 'critical';\n\t\tcase LogLevel.Off: return 'off';\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Queue } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { JSONPath, parse, ParseError } from 'vs/base/common/json';\nimport { setProperty } from 'vs/base/common/jsonEdit';\nimport { Edit, FormattingOptions } from 'vs/base/common/jsonFormatter';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { FileOperationError, FileOperationResult, IFileService, IWriteFileOptions } from 'vs/platform/files/common/files';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nexport const enum UserConfigurationErrorCode {\n\tERROR_INVALID_FILE = 'ERROR_INVALID_FILE',\n\tERROR_FILE_MODIFIED_SINCE = 'ERROR_FILE_MODIFIED_SINCE'\n}\n\nexport interface IJSONValue {\n\tpath: JSONPath;\n\tvalue: any;\n}\n\nexport const UserConfigurationFileServiceId = 'IUserConfigurationFileService';\nexport const IUserConfigurationFileService = createDecorator<IUserConfigurationFileService>(UserConfigurationFileServiceId);\n\nexport interface IUserConfigurationFileService {\n\treadonly _serviceBrand: undefined;\n\n\tupdateSettings(value: IJSONValue, formattingOptions: FormattingOptions): Promise<void>;\n\twrite(value: VSBuffer, options?: IWriteFileOptions): Promise<void>;\n}\n\nexport class UserConfigurationFileService implements IUserConfigurationFileService {\n\n\treadonly _serviceBrand: undefined;\n\n\tprivate readonly queue: Queue<void>;\n\n\tconstructor(\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@ILogService private readonly logService: ILogService,\n\t) {\n\t\tthis.queue = new Queue<void>();\n\t}\n\n\tasync updateSettings(value: IJSONValue, formattingOptions: FormattingOptions): Promise<void> {\n\t\treturn this.queue.queue(() => this.doWrite(value, formattingOptions)); // queue up writes to prevent race conditions\n\t}\n\n\tprivate async doWrite(jsonValue: IJSONValue, formattingOptions: FormattingOptions): Promise<void> {\n\t\tthis.logService.trace(`${UserConfigurationFileServiceId}#write`, this.environmentService.settingsResource.toString(), jsonValue);\n\t\tconst { value, mtime, etag } = await this.fileService.readFile(this.environmentService.settingsResource, { atomic: true });\n\t\tlet content = value.toString();\n\n\t\tconst parseErrors: ParseError[] = [];\n\t\tparse(content, parseErrors, { allowTrailingComma: true, allowEmptyContent: true });\n\t\tif (parseErrors.length) {\n\t\t\tthrow new Error(UserConfigurationErrorCode.ERROR_INVALID_FILE);\n\t\t}\n\n\t\tconst edit = this.getEdits(jsonValue, content, formattingOptions)[0];\n\t\tif (edit) {\n\t\t\tcontent = content.substring(0, edit.offset) + edit.content + content.substring(edit.offset + edit.length);\n\t\t\ttry {\n\t\t\t\tawait this.fileService.writeFile(this.environmentService.settingsResource, VSBuffer.fromString(content), { etag, mtime });\n\t\t\t} catch (error) {\n\t\t\t\tif ((<FileOperationError>error).fileOperationResult === FileOperationResult.FILE_MODIFIED_SINCE) {\n\t\t\t\t\tthrow new Error(UserConfigurationErrorCode.ERROR_FILE_MODIFIED_SINCE);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tasync write(content: VSBuffer, options?: IWriteFileOptions): Promise<void> {\n\t\t// queue up writes to prevent race conditions\n\t\treturn this.queue.queue(async () => {\n\t\t\tawait this.fileService.writeFile(this.environmentService.settingsResource, content, options);\n\t\t});\n\t}\n\n\tprivate getEdits({ value, path }: IJSONValue, modelContent: string, formattingOptions: FormattingOptions): Edit[] {\n\t\tif (path.length) {\n\t\t\treturn setProperty(modelContent, path, value, formattingOptions);\n\t\t}\n\n\t\t// Without jsonPath, the entire configuration file is being replaced, so we just use JSON.stringify\n\t\tconst content = JSON.stringify(value, null, formattingOptions.insertSpaces && formattingOptions.tabSize ? ' '.repeat(formattingOptions.tabSize) : '\\t');\n\t\treturn [{\n\t\t\tcontent,\n\t\t\tlength: modelContent.length,\n\t\t\toffset: 0\n\t\t}];\n\t}\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { insert } from 'vs/base/common/arrays';\nimport { ThrottledDelayer } from 'vs/base/common/async';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Emitter } from 'vs/base/common/event';\nimport { combinedDisposable, Disposable, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { normalize } from 'vs/base/common/path';\nimport { URI } from 'vs/base/common/uri';\nimport { IFileChange, IWatchOptions } from 'vs/platform/files/common/files';\nimport { IDiskFileChange, ILogMessage, IWatchRequest, toFileChanges, WatcherService } from 'vs/platform/files/common/watcher';\nimport { ILogService, LogLevel } from 'vs/platform/log/common/log';\n\nexport abstract class AbstractDiskFileSystemProvider extends Disposable {\n\n\tconstructor(\n\t\tprotected readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t}\n\n\t//#region File Watching\n\n\tprotected readonly _onDidErrorOccur = this._register(new Emitter<string>());\n\treadonly onDidErrorOccur = this._onDidErrorOccur.event;\n\n\tprotected readonly _onDidChangeFile = this._register(new Emitter<readonly IFileChange[]>());\n\treadonly onDidChangeFile = this._onDidChangeFile.event;\n\n\tprivate recursiveWatcher: WatcherService | undefined;\n\tprivate readonly recursiveFoldersToWatch: IWatchRequest[] = [];\n\tprivate recursiveWatchRequestDelayer = this._register(new ThrottledDelayer<void>(0));\n\n\twatch(resource: URI, opts: IWatchOptions): IDisposable {\n\t\tif (opts.recursive) {\n\t\t\treturn this.watchRecursive(resource, opts);\n\t\t}\n\n\t\treturn this.watchNonRecursive(resource);\n\t}\n\n\tprivate watchRecursive(resource: URI, opts: IWatchOptions): IDisposable {\n\n\t\t// Add to list of folders to watch recursively\n\t\tconst folderToWatch: IWatchRequest = { path: this.toFilePath(resource), excludes: opts.excludes };\n\t\tconst remove = insert(this.recursiveFoldersToWatch, folderToWatch);\n\n\t\t// Trigger update\n\t\tthis.refreshRecursiveWatchers();\n\n\t\treturn toDisposable(() => {\n\n\t\t\t// Remove from list of folders to watch recursively\n\t\t\tremove();\n\n\t\t\t// Trigger update\n\t\t\tthis.refreshRecursiveWatchers();\n\t\t});\n\t}\n\n\tprivate refreshRecursiveWatchers(): void {\n\n\t\t// Buffer requests for recursive watching to decide on right watcher\n\t\t// that supports potentially watching more than one folder at once\n\t\tthis.recursiveWatchRequestDelayer.trigger(() => {\n\t\t\treturn this.doRefreshRecursiveWatchers();\n\t\t}).catch(error => onUnexpectedError(error));\n\t}\n\n\tprivate doRefreshRecursiveWatchers(): Promise<void> {\n\n\t\t// Create watcher if this is the first time\n\t\tif (!this.recursiveWatcher) {\n\t\t\tthis.recursiveWatcher = this._register(this.createRecursiveWatcher(\n\t\t\t\tchanges => this._onDidChangeFile.fire(toFileChanges(changes)),\n\t\t\t\tmsg => this.onWatcherLogMessage(msg),\n\t\t\t\tthis.logService.getLevel() === LogLevel.Trace\n\t\t\t));\n\n\t\t\t// Apply log levels dynamically\n\t\t\tthis._register(this.logService.onDidChangeLogLevel(() => {\n\t\t\t\tthis.recursiveWatcher?.setVerboseLogging(this.logService.getLevel() === LogLevel.Trace);\n\t\t\t}));\n\t\t}\n\n\t\t// Ask to watch the provided folders\n\t\treturn this.doWatch(this.recursiveWatcher, this.recursiveFoldersToWatch);\n\t}\n\n\tprotected doWatch(watcher: WatcherService, requests: IWatchRequest[]): Promise<void> {\n\t\treturn watcher.watch(requests);\n\t}\n\n\tprotected abstract createRecursiveWatcher(\n\t\tonChange: (changes: IDiskFileChange[]) => void,\n\t\tonLogMessage: (msg: ILogMessage) => void,\n\t\tverboseLogging: boolean\n\t): WatcherService;\n\n\tprivate watchNonRecursive(resource: URI): IDisposable {\n\t\tconst watcherService = this.createNonRecursiveWatcher(\n\t\t\tthis.toFilePath(resource),\n\t\t\tchanges => this._onDidChangeFile.fire(toFileChanges(changes)),\n\t\t\tmsg => this.onWatcherLogMessage(msg),\n\t\t\tthis.logService.getLevel() === LogLevel.Trace\n\t\t);\n\n\t\tconst logLevelListener = this.logService.onDidChangeLogLevel(() => {\n\t\t\twatcherService.setVerboseLogging(this.logService.getLevel() === LogLevel.Trace);\n\t\t});\n\n\t\treturn combinedDisposable(watcherService, logLevelListener);\n\t}\n\n\tprivate onWatcherLogMessage(msg: ILogMessage): void {\n\t\tif (msg.type === 'error') {\n\t\t\tthis._onDidErrorOccur.fire(msg.message);\n\t\t}\n\n\t\tthis.logService[msg.type](msg.message);\n\t}\n\n\tprotected abstract createNonRecursiveWatcher(\n\t\tpath: string,\n\t\tonChange: (changes: IDiskFileChange[]) => void,\n\t\tonLogMessage: (msg: ILogMessage) => void,\n\t\tverboseLogging: boolean\n\t): IDisposable & { setVerboseLogging: (verboseLogging: boolean) => void };\n\n\tprotected toFilePath(resource: URI): string {\n\t\treturn normalize(resource.fsPath);\n\t}\n\n\t//#endregion\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { coalesce } from 'vs/base/common/arrays';\nimport { Promises, ResourceQueue, ThrottledWorker } from 'vs/base/common/async';\nimport { bufferedStreamToBuffer, bufferToReadable, newWriteableBufferStream, readableToBuffer, streamToBuffer, VSBuffer, VSBufferReadable, VSBufferReadableBufferedStream, VSBufferReadableStream } from 'vs/base/common/buffer';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { Emitter } from 'vs/base/common/event';\nimport { Iterable } from 'vs/base/common/iterator';\nimport { Disposable, DisposableStore, dispose, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { Schemas } from 'vs/base/common/network';\nimport { mark } from 'vs/base/common/performance';\nimport { extUri, extUriIgnorePathCase, IExtUri, isAbsolutePath } from 'vs/base/common/resources';\nimport { consumeStream, isReadableBufferedStream, isReadableStream, listenStream, newWriteableStream, peekReadable, peekStream, transform } from 'vs/base/common/stream';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { ensureFileSystemProviderError, etag, ETAG_DISABLED, FileChangesEvent, FileDeleteOptions, FileOperation, FileOperationError, FileOperationEvent, FileOperationResult, FilePermission, FileSystemProviderCapabilities, FileSystemProviderErrorCode, FileType, hasFileFolderCopyCapability, hasFileReadStreamCapability, hasOpenReadWriteCloseCapability, hasReadWriteCapability, ICreateFileOptions, IFileChange, IFileContent, IFileService, IFileStat, IFileStatWithMetadata, IFileStreamContent, IFileSystemProvider, IFileSystemProviderActivationEvent, IFileSystemProviderCapabilitiesChangeEvent, IFileSystemProviderRegistrationEvent, IFileSystemProviderWithFileReadStreamCapability, IFileSystemProviderWithFileReadWriteCapability, IFileSystemProviderWithOpenReadWriteCloseCapability, IRawFileChangesEvent, IReadFileOptions, IReadFileStreamOptions, IResolveFileOptions, IResolveFileResult, IResolveFileResultWithMetadata, IResolveMetadataFileOptions, IStat, IWatchOptions, IWriteFileOptions, NotModifiedSinceFileOperationError, toFileOperationResult, toFileSystemProviderErrorCode } from 'vs/platform/files/common/files';\nimport { readFileIntoStream } from 'vs/platform/files/common/io';\nimport { ILogService } from 'vs/platform/log/common/log';\n\nexport class FileService extends Disposable implements IFileService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\t// Choose a buffer size that is a balance between memory needs and\n\t// manageable IPC overhead. The larger the buffer size, the less\n\t// roundtrips we have to do for reading/writing data.\n\tprivate readonly BUFFER_SIZE = 256 * 1024;\n\n\tconstructor(@ILogService private readonly logService: ILogService) {\n\t\tsuper();\n\t}\n\n\t//#region File System Provider\n\n\tprivate readonly _onDidChangeFileSystemProviderRegistrations = this._register(new Emitter<IFileSystemProviderRegistrationEvent>());\n\treadonly onDidChangeFileSystemProviderRegistrations = this._onDidChangeFileSystemProviderRegistrations.event;\n\n\tprivate readonly _onWillActivateFileSystemProvider = this._register(new Emitter<IFileSystemProviderActivationEvent>());\n\treadonly onWillActivateFileSystemProvider = this._onWillActivateFileSystemProvider.event;\n\n\tprivate readonly _onDidChangeFileSystemProviderCapabilities = this._register(new Emitter<IFileSystemProviderCapabilitiesChangeEvent>());\n\treadonly onDidChangeFileSystemProviderCapabilities = this._onDidChangeFileSystemProviderCapabilities.event;\n\n\tprivate readonly provider = new Map<string, IFileSystemProvider>();\n\n\tregisterProvider(scheme: string, provider: IFileSystemProvider): IDisposable {\n\t\tif (this.provider.has(scheme)) {\n\t\t\tthrow new Error(`A filesystem provider for the scheme '${scheme}' is already registered.`);\n\t\t}\n\n\t\tmark(`code/registerFilesystem/${scheme}`);\n\n\t\t// Add provider with event\n\t\tthis.provider.set(scheme, provider);\n\t\tthis._onDidChangeFileSystemProviderRegistrations.fire({ added: true, scheme, provider });\n\n\t\t// Forward events from provider\n\t\tconst providerDisposables = new DisposableStore();\n\t\tproviderDisposables.add(provider.onDidChangeFile(changes => this.onDidChangeFile(changes, this.isPathCaseSensitive(provider))));\n\t\tproviderDisposables.add(provider.onDidChangeCapabilities(() => this._onDidChangeFileSystemProviderCapabilities.fire({ provider, scheme })));\n\t\tif (typeof provider.onDidErrorOccur === 'function') {\n\t\t\tproviderDisposables.add(provider.onDidErrorOccur(error => this._onError.fire(new Error(error))));\n\t\t}\n\n\t\treturn toDisposable(() => {\n\t\t\tthis._onDidChangeFileSystemProviderRegistrations.fire({ added: false, scheme, provider });\n\t\t\tthis.provider.delete(scheme);\n\n\t\t\tdispose(providerDisposables);\n\t\t});\n\t}\n\n\tgetProvider(scheme: string): IFileSystemProvider | undefined {\n\t\treturn this.provider.get(scheme);\n\t}\n\n\tasync activateProvider(scheme: string): Promise<void> {\n\n\t\t// Emit an event that we are about to activate a provider with the given scheme.\n\t\t// Listeners can participate in the activation by registering a provider for it.\n\t\tconst joiners: Promise<void>[] = [];\n\t\tthis._onWillActivateFileSystemProvider.fire({\n\t\t\tscheme,\n\t\t\tjoin(promise) {\n\t\t\t\tjoiners.push(promise);\n\t\t\t},\n\t\t});\n\n\t\tif (this.provider.has(scheme)) {\n\t\t\treturn; // provider is already here so we can return directly\n\t\t}\n\n\t\t// If the provider is not yet there, make sure to join on the listeners assuming\n\t\t// that it takes a bit longer to register the file system provider.\n\t\tawait Promises.settled(joiners);\n\t}\n\n\tasync canHandleResource(resource: URI): Promise<boolean> {\n\n\t\t// Await activation of potentially extension contributed providers\n\t\tawait this.activateProvider(resource.scheme);\n\n\t\treturn this.hasProvider(resource);\n\t}\n\n\thasProvider(resource: URI): boolean {\n\t\treturn this.provider.has(resource.scheme);\n\t}\n\n\thasCapability(resource: URI, capability: FileSystemProviderCapabilities): boolean {\n\t\tconst provider = this.provider.get(resource.scheme);\n\n\t\treturn !!(provider && (provider.capabilities & capability));\n\t}\n\n\tlistCapabilities(): Iterable<{ scheme: string, capabilities: FileSystemProviderCapabilities; }> {\n\t\treturn Iterable.map(this.provider, ([scheme, provider]) => ({ scheme, capabilities: provider.capabilities }));\n\t}\n\n\tprotected async withProvider(resource: URI): Promise<IFileSystemProvider> {\n\n\t\t// Assert path is absolute\n\t\tif (!isAbsolutePath(resource)) {\n\t\t\tthrow new FileOperationError(localize('invalidPath', \"Unable to resolve filesystem provider with relative file path '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_INVALID_PATH);\n\t\t}\n\n\t\t// Activate provider\n\t\tawait this.activateProvider(resource.scheme);\n\n\t\t// Assert provider\n\t\tconst provider = this.provider.get(resource.scheme);\n\t\tif (!provider) {\n\t\t\tconst error = new Error();\n\t\t\terror.name = 'ENOPRO';\n\t\t\terror.message = localize('noProviderFound', \"No file system provider found for resource '{0}'\", resource.toString());\n\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn provider;\n\t}\n\n\tprivate async withReadProvider(resource: URI): Promise<IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability | IFileSystemProviderWithFileReadStreamCapability> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\tif (hasOpenReadWriteCloseCapability(provider) || hasReadWriteCapability(provider) || hasFileReadStreamCapability(provider)) {\n\t\t\treturn provider;\n\t\t}\n\n\t\tthrow new Error(`Filesystem provider for scheme '${resource.scheme}' neither has FileReadWrite, FileReadStream nor FileOpenReadWriteClose capability which is needed for the read operation.`);\n\t}\n\n\tprivate async withWriteProvider(resource: URI): Promise<IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\tif (hasOpenReadWriteCloseCapability(provider) || hasReadWriteCapability(provider)) {\n\t\t\treturn provider;\n\t\t}\n\n\t\tthrow new Error(`Filesystem provider for scheme '${resource.scheme}' neither has FileReadWrite nor FileOpenReadWriteClose capability which is needed for the write operation.`);\n\t}\n\n\t//#endregion\n\n\tprivate readonly _onDidRunOperation = this._register(new Emitter<FileOperationEvent>());\n\treadonly onDidRunOperation = this._onDidRunOperation.event;\n\n\tprivate readonly _onError = this._register(new Emitter<Error>());\n\treadonly onError = this._onError.event;\n\n\t//#region File Metadata Resolving\n\n\tasync resolve(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tasync resolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\tasync resolve(resource: URI, options?: IResolveFileOptions): Promise<IFileStat> {\n\t\ttry {\n\t\t\treturn await this.doResolveFile(resource, options);\n\t\t} catch (error) {\n\n\t\t\t// Specially handle file not found case as file operation result\n\t\t\tif (toFileSystemProviderErrorCode(error) === FileSystemProviderErrorCode.FileNotFound) {\n\t\t\t\tthrow new FileOperationError(localize('fileNotFoundError', \"Unable to resolve nonexistent file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_NOT_FOUND);\n\t\t\t}\n\n\t\t\t// Bubble up any other error as is\n\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprivate async doResolveFile(resource: URI, options: IResolveMetadataFileOptions): Promise<IFileStatWithMetadata>;\n\tprivate async doResolveFile(resource: URI, options?: IResolveFileOptions): Promise<IFileStat>;\n\tprivate async doResolveFile(resource: URI, options?: IResolveFileOptions): Promise<IFileStat> {\n\t\tconst provider = await this.withProvider(resource);\n\t\tconst isPathCaseSensitive = this.isPathCaseSensitive(provider);\n\n\t\tconst resolveTo = options?.resolveTo;\n\t\tconst resolveSingleChildDescendants = options?.resolveSingleChildDescendants;\n\t\tconst resolveMetadata = options?.resolveMetadata;\n\n\t\tconst stat = await provider.stat(resource);\n\n\t\tlet trie: TernarySearchTree<URI, boolean> | undefined;\n\n\t\treturn this.toFileStat(provider, resource, stat, undefined, !!resolveMetadata, (stat, siblings) => {\n\n\t\t\t// lazy trie to check for recursive resolving\n\t\t\tif (!trie) {\n\t\t\t\ttrie = TernarySearchTree.forUris<true>(() => !isPathCaseSensitive);\n\t\t\t\ttrie.set(resource, true);\n\t\t\t\tif (resolveTo) {\n\t\t\t\t\ttrie.fill(true, resolveTo);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// check for recursive resolving\n\t\t\tif (trie.get(stat.resource) || trie.findSuperstr(stat.resource.with({ query: null, fragment: null } /* required for https://github.com/microsoft/vscode/issues/128151 */))) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// check for resolving single child folders\n\t\t\tif (stat.isDirectory && resolveSingleChildDescendants) {\n\t\t\t\treturn siblings === 1;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tprivate async toFileStat(provider: IFileSystemProvider, resource: URI, stat: IStat | { type: FileType; } & Partial<IStat>, siblings: number | undefined, resolveMetadata: boolean, recurse: (stat: IFileStat, siblings?: number) => boolean): Promise<IFileStat>;\n\tprivate async toFileStat(provider: IFileSystemProvider, resource: URI, stat: IStat, siblings: number | undefined, resolveMetadata: true, recurse: (stat: IFileStat, siblings?: number) => boolean): Promise<IFileStatWithMetadata>;\n\tprivate async toFileStat(provider: IFileSystemProvider, resource: URI, stat: IStat | { type: FileType; } & Partial<IStat>, siblings: number | undefined, resolveMetadata: boolean, recurse: (stat: IFileStat, siblings?: number) => boolean): Promise<IFileStat> {\n\t\tconst { providerExtUri } = this.getExtUri(provider);\n\n\t\t// convert to file stat\n\t\tconst fileStat: IFileStat = {\n\t\t\tresource,\n\t\t\tname: providerExtUri.basename(resource),\n\t\t\tisFile: (stat.type & FileType.File) !== 0,\n\t\t\tisDirectory: (stat.type & FileType.Directory) !== 0,\n\t\t\tisSymbolicLink: (stat.type & FileType.SymbolicLink) !== 0,\n\t\t\tmtime: stat.mtime,\n\t\t\tctime: stat.ctime,\n\t\t\tsize: stat.size,\n\t\t\treadonly: Boolean((stat.permissions ?? 0) & FilePermission.Readonly) || Boolean(provider.capabilities & FileSystemProviderCapabilities.Readonly),\n\t\t\tetag: etag({ mtime: stat.mtime, size: stat.size })\n\t\t};\n\n\t\t// check to recurse for directories\n\t\tif (fileStat.isDirectory && recurse(fileStat, siblings)) {\n\t\t\ttry {\n\t\t\t\tconst entries = await provider.readdir(resource);\n\t\t\t\tconst resolvedEntries = await Promises.settled(entries.map(async ([name, type]) => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst childResource = providerExtUri.joinPath(resource, name);\n\t\t\t\t\t\tconst childStat = resolveMetadata ? await provider.stat(childResource) : { type };\n\n\t\t\t\t\t\treturn await this.toFileStat(provider, childResource, childStat, entries.length, resolveMetadata, recurse);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tthis.logService.trace(error);\n\n\t\t\t\t\t\treturn null; // can happen e.g. due to permission errors\n\t\t\t\t\t}\n\t\t\t\t}));\n\n\t\t\t\t// make sure to get rid of null values that signal a failure to resolve a particular entry\n\t\t\t\tfileStat.children = coalesce(resolvedEntries);\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.trace(error);\n\n\t\t\t\tfileStat.children = []; // gracefully handle errors, we may not have permissions to read\n\t\t\t}\n\n\t\t\treturn fileStat;\n\t\t}\n\n\t\treturn fileStat;\n\t}\n\n\tasync resolveAll(toResolve: { resource: URI, options?: IResolveFileOptions; }[]): Promise<IResolveFileResult[]>;\n\tasync resolveAll(toResolve: { resource: URI, options: IResolveMetadataFileOptions; }[]): Promise<IResolveFileResultWithMetadata[]>;\n\tasync resolveAll(toResolve: { resource: URI; options?: IResolveFileOptions; }[]): Promise<IResolveFileResult[]> {\n\t\treturn Promises.settled(toResolve.map(async entry => {\n\t\t\ttry {\n\t\t\t\treturn { stat: await this.doResolveFile(entry.resource, entry.options), success: true };\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.trace(error);\n\n\t\t\t\treturn { stat: undefined, success: false };\n\t\t\t}\n\t\t}));\n\t}\n\n\tasync exists(resource: URI): Promise<boolean> {\n\t\tconst provider = await this.withProvider(resource);\n\n\t\ttry {\n\t\t\tconst stat = await provider.stat(resource);\n\n\t\t\treturn !!stat;\n\t\t} catch (error) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region File Reading/Writing\n\n\tasync canCreateFile(resource: URI, options?: ICreateFileOptions): Promise<Error | true> {\n\t\ttry {\n\t\t\tawait this.doValidateCreateFile(resource, options);\n\t\t} catch (error) {\n\t\t\treturn error;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate async doValidateCreateFile(resource: URI, options?: ICreateFileOptions): Promise<void> {\n\n\t\t// validate overwrite\n\t\tif (!options?.overwrite && await this.exists(resource)) {\n\t\t\tthrow new FileOperationError(localize('fileExists', \"Unable to create file '{0}' that already exists when overwrite flag is not set\", this.resourceForError(resource)), FileOperationResult.FILE_MODIFIED_SINCE, options);\n\t\t}\n\t}\n\n\tasync createFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream = VSBuffer.fromString(''), options?: ICreateFileOptions): Promise<IFileStatWithMetadata> {\n\n\t\t// validate\n\t\tawait this.doValidateCreateFile(resource, options);\n\n\t\t// do write into file (this will create it too)\n\t\tconst fileStat = await this.writeFile(resource, bufferOrReadableOrStream);\n\n\t\t// events\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(resource, FileOperation.CREATE, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tasync writeFile(resource: URI, bufferOrReadableOrStream: VSBuffer | VSBufferReadable | VSBufferReadableStream, options?: IWriteFileOptions): Promise<IFileStatWithMetadata> {\n\t\tconst provider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(resource), resource);\n\t\tconst { providerExtUri } = this.getExtUri(provider);\n\n\t\ttry {\n\n\t\t\t// validate write\n\t\t\tconst stat = await this.validateWriteFile(provider, resource, options);\n\n\t\t\t// mkdir recursively as needed\n\t\t\tif (!stat) {\n\t\t\t\tawait this.mkdirp(provider, providerExtUri.dirname(resource));\n\t\t\t}\n\n\t\t\t// optimization: if the provider has unbuffered write capability and the data\n\t\t\t// to write is a Readable, we consume up to 3 chunks and try to write the data\n\t\t\t// unbuffered to reduce the overhead. If the Readable has more data to provide\n\t\t\t// we continue to write buffered.\n\t\t\tlet bufferOrReadableOrStreamOrBufferedStream: VSBuffer | VSBufferReadable | VSBufferReadableStream | VSBufferReadableBufferedStream;\n\t\t\tif (hasReadWriteCapability(provider) && !(bufferOrReadableOrStream instanceof VSBuffer)) {\n\t\t\t\tif (isReadableStream(bufferOrReadableOrStream)) {\n\t\t\t\t\tconst bufferedStream = await peekStream(bufferOrReadableOrStream, 3);\n\t\t\t\t\tif (bufferedStream.ended) {\n\t\t\t\t\t\tbufferOrReadableOrStreamOrBufferedStream = VSBuffer.concat(bufferedStream.buffer);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbufferOrReadableOrStreamOrBufferedStream = bufferedStream;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tbufferOrReadableOrStreamOrBufferedStream = peekReadable(bufferOrReadableOrStream, data => VSBuffer.concat(data), 3);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbufferOrReadableOrStreamOrBufferedStream = bufferOrReadableOrStream;\n\t\t\t}\n\n\t\t\t// write file: unbuffered (only if data to write is a buffer, or the provider has no buffered write capability)\n\t\t\tif (!hasOpenReadWriteCloseCapability(provider) || (hasReadWriteCapability(provider) && bufferOrReadableOrStreamOrBufferedStream instanceof VSBuffer)) {\n\t\t\t\tawait this.doWriteUnbuffered(provider, resource, options, bufferOrReadableOrStreamOrBufferedStream);\n\t\t\t}\n\n\t\t\t// write file: buffered\n\t\t\telse {\n\t\t\t\tawait this.doWriteBuffered(provider, resource, options, bufferOrReadableOrStreamOrBufferedStream instanceof VSBuffer ? bufferToReadable(bufferOrReadableOrStreamOrBufferedStream) : bufferOrReadableOrStreamOrBufferedStream);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthrow new FileOperationError(localize('err.write', \"Unable to write file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options);\n\t\t}\n\n\t\treturn this.resolve(resource, { resolveMetadata: true });\n\t}\n\n\tprivate async validateWriteFile(provider: IFileSystemProvider, resource: URI, options?: IWriteFileOptions): Promise<IStat | undefined> {\n\n\t\t// Validate unlock support\n\t\tconst unlock = !!options?.unlock;\n\t\tif (unlock && !(provider.capabilities & FileSystemProviderCapabilities.FileWriteUnlock)) {\n\t\t\tthrow new Error(localize('writeFailedUnlockUnsupported', \"Unable to unlock file '{0}' because provider does not support it.\", this.resourceForError(resource)));\n\t\t}\n\n\t\t// Validate via file stat meta data\n\t\tlet stat: IStat | undefined = undefined;\n\t\ttry {\n\t\t\tstat = await provider.stat(resource);\n\t\t} catch (error) {\n\t\t\treturn undefined; // file might not exist\n\t\t}\n\n\t\t// File cannot be directory\n\t\tif ((stat.type & FileType.Directory) !== 0) {\n\t\t\tthrow new FileOperationError(localize('fileIsDirectoryWriteError', \"Unable to write file '{0}' that is actually a directory\", this.resourceForError(resource)), FileOperationResult.FILE_IS_DIRECTORY, options);\n\t\t}\n\n\t\t// File cannot be readonly\n\t\tthis.throwIfFileIsReadonly(resource, stat);\n\n\t\t// Dirty write prevention: if the file on disk has been changed and does not match our expected\n\t\t// mtime and etag, we bail out to prevent dirty writing.\n\t\t//\n\t\t// First, we check for a mtime that is in the future before we do more checks. The assumption is\n\t\t// that only the mtime is an indicator for a file that has changed on disk.\n\t\t//\n\t\t// Second, if the mtime has advanced, we compare the size of the file on disk with our previous\n\t\t// one using the etag() function. Relying only on the mtime check has prooven to produce false\n\t\t// positives due to file system weirdness (especially around remote file systems). As such, the\n\t\t// check for size is a weaker check because it can return a false negative if the file has changed\n\t\t// but to the same length. This is a compromise we take to avoid having to produce checksums of\n\t\t// the file content for comparison which would be much slower to compute.\n\t\tif (\n\t\t\ttypeof options?.mtime === 'number' && typeof options.etag === 'string' && options.etag !== ETAG_DISABLED &&\n\t\t\ttypeof stat.mtime === 'number' && typeof stat.size === 'number' &&\n\t\t\toptions.mtime < stat.mtime && options.etag !== etag({ mtime: options.mtime /* not using stat.mtime for a reason, see above */, size: stat.size })\n\t\t) {\n\t\t\tthrow new FileOperationError(localize('fileModifiedError', \"File Modified Since\"), FileOperationResult.FILE_MODIFIED_SINCE, options);\n\t\t}\n\n\t\treturn stat;\n\t}\n\n\tasync readFile(resource: URI, options?: IReadFileOptions): Promise<IFileContent> {\n\t\tconst provider = await this.withReadProvider(resource);\n\n\t\tif (options?.atomic) {\n\t\t\treturn this.doReadFileAtomic(provider, resource, options);\n\t\t}\n\n\t\treturn this.doReadFile(provider, resource, options);\n\t}\n\n\tprivate async doReadFileAtomic(provider: IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability | IFileSystemProviderWithFileReadStreamCapability, resource: URI, options?: IReadFileOptions): Promise<IFileContent> {\n\t\treturn new Promise<IFileContent>((resolve, reject) => {\n\t\t\tthis.writeQueue.queueFor(resource, this.getExtUri(provider).providerExtUri).queue(async () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst content = await this.doReadFile(provider, resource, options);\n\t\t\t\t\tresolve(content);\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate async doReadFile(provider: IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability | IFileSystemProviderWithFileReadStreamCapability, resource: URI, options?: IReadFileOptions): Promise<IFileContent> {\n\t\tconst stream = await this.doReadFileStream(provider, resource, {\n\t\t\t...options,\n\t\t\t// optimization: since we know that the caller does not\n\t\t\t// care about buffering, we indicate this to the reader.\n\t\t\t// this reduces all the overhead the buffered reading\n\t\t\t// has (open, read, close) if the provider supports\n\t\t\t// unbuffered reading.\n\t\t\tpreferUnbuffered: true\n\t\t});\n\n\t\treturn {\n\t\t\t...stream,\n\t\t\tvalue: await streamToBuffer(stream.value)\n\t\t};\n\t}\n\n\tasync readFileStream(resource: URI, options?: IReadFileStreamOptions): Promise<IFileStreamContent> {\n\t\tconst provider = await this.withReadProvider(resource);\n\n\t\treturn this.doReadFileStream(provider, resource, options);\n\t}\n\n\tprivate async doReadFileStream(provider: IFileSystemProviderWithFileReadWriteCapability | IFileSystemProviderWithOpenReadWriteCloseCapability | IFileSystemProviderWithFileReadStreamCapability, resource: URI, options?: IReadFileStreamOptions & { preferUnbuffered?: boolean; }): Promise<IFileStreamContent> {\n\n\t\t// install a cancellation token that gets cancelled\n\t\t// when any error occurs. this allows us to resolve\n\t\t// the content of the file while resolving metadata\n\t\t// but still cancel the operation in certain cases.\n\t\tconst cancellableSource = new CancellationTokenSource();\n\n\t\t// validate read operation\n\t\tconst statPromise = this.validateReadFile(resource, options).then(stat => stat, error => {\n\t\t\tcancellableSource.cancel();\n\n\t\t\tthrow error;\n\t\t});\n\n\t\tlet fileStream: VSBufferReadableStream | undefined = undefined;\n\t\ttry {\n\n\t\t\t// if the etag is provided, we await the result of the validation\n\t\t\t// due to the likelihood of hitting a NOT_MODIFIED_SINCE result.\n\t\t\t// otherwise, we let it run in parallel to the file reading for\n\t\t\t// optimal startup performance.\n\t\t\tif (typeof options?.etag === 'string' && options.etag !== ETAG_DISABLED) {\n\t\t\t\tawait statPromise;\n\t\t\t}\n\n\t\t\t// read unbuffered (only if either preferred, or the provider has no buffered read capability)\n\t\t\tif (!(hasOpenReadWriteCloseCapability(provider) || hasFileReadStreamCapability(provider)) || (hasReadWriteCapability(provider) && options?.preferUnbuffered)) {\n\t\t\t\tfileStream = this.readFileUnbuffered(provider, resource, options);\n\t\t\t}\n\n\t\t\t// read streamed (always prefer over primitive buffered read)\n\t\t\telse if (hasFileReadStreamCapability(provider)) {\n\t\t\t\tfileStream = this.readFileStreamed(provider, resource, cancellableSource.token, options);\n\t\t\t}\n\n\t\t\t// read buffered\n\t\t\telse {\n\t\t\t\tfileStream = this.readFileBuffered(provider, resource, cancellableSource.token, options);\n\t\t\t}\n\n\t\t\tconst fileStat = await statPromise;\n\n\t\t\treturn {\n\t\t\t\t...fileStat,\n\t\t\t\tvalue: fileStream\n\t\t\t};\n\t\t} catch (error) {\n\n\t\t\t// Await the stream to finish so that we exit this method\n\t\t\t// in a consistent state with file handles closed\n\t\t\t// (https://github.com/microsoft/vscode/issues/114024)\n\t\t\tif (fileStream) {\n\t\t\t\tawait consumeStream(fileStream);\n\t\t\t}\n\n\t\t\t// Re-throw errors as file operation errors but preserve\n\t\t\t// specific errors (such as not modified since)\n\t\t\tconst message = localize('err.read', \"Unable to read file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString());\n\t\t\tif (error instanceof NotModifiedSinceFileOperationError) {\n\t\t\t\tthrow new NotModifiedSinceFileOperationError(message, error.stat, options);\n\t\t\t} else {\n\t\t\t\tthrow new FileOperationError(message, toFileOperationResult(error), options);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate readFileStreamed(provider: IFileSystemProviderWithFileReadStreamCapability, resource: URI, token: CancellationToken, options: IReadFileStreamOptions = Object.create(null)): VSBufferReadableStream {\n\t\tconst fileStream = provider.readFileStream(resource, options, token);\n\n\t\treturn transform(fileStream, {\n\t\t\tdata: data => data instanceof VSBuffer ? data : VSBuffer.wrap(data),\n\t\t\terror: error => new FileOperationError(localize('err.read', \"Unable to read file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options)\n\t\t}, data => VSBuffer.concat(data));\n\t}\n\n\tprivate readFileBuffered(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, token: CancellationToken, options: IReadFileStreamOptions = Object.create(null)): VSBufferReadableStream {\n\t\tconst stream = newWriteableBufferStream();\n\n\t\treadFileIntoStream(provider, resource, stream, data => data, {\n\t\t\t...options,\n\t\t\tbufferSize: this.BUFFER_SIZE,\n\t\t\terrorTransformer: error => new FileOperationError(localize('err.read', \"Unable to read file '{0}' ({1})\", this.resourceForError(resource), ensureFileSystemProviderError(error).toString()), toFileOperationResult(error), options)\n\t\t}, token);\n\n\t\treturn stream;\n\t}\n\n\tprivate readFileUnbuffered(provider: IFileSystemProviderWithFileReadWriteCapability, resource: URI, options?: IReadFileStreamOptions): VSBufferReadableStream {\n\t\tconst stream = newWriteableStream<VSBuffer>(data => VSBuffer.concat(data));\n\n\t\t// Read the file into the stream async but do not wait for\n\t\t// this to complete because streams work via events\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tlet buffer = await provider.readFile(resource);\n\n\t\t\t\t// respect position option\n\t\t\t\tif (typeof options?.position === 'number') {\n\t\t\t\t\tbuffer = buffer.slice(options.position);\n\t\t\t\t}\n\n\t\t\t\t// respect length option\n\t\t\t\tif (typeof options?.length === 'number') {\n\t\t\t\t\tbuffer = buffer.slice(0, options.length);\n\t\t\t\t}\n\n\t\t\t\t// Throw if file is too large to load\n\t\t\t\tthis.validateReadFileLimits(resource, buffer.byteLength, options);\n\n\t\t\t\t// End stream with data\n\t\t\t\tstream.end(VSBuffer.wrap(buffer));\n\t\t\t} catch (err) {\n\t\t\t\tstream.error(err);\n\t\t\t\tstream.end();\n\t\t\t}\n\t\t})();\n\n\t\treturn stream;\n\t}\n\n\tprivate async validateReadFile(resource: URI, options?: IReadFileStreamOptions): Promise<IFileStatWithMetadata> {\n\t\tconst stat = await this.resolve(resource, { resolveMetadata: true });\n\n\t\t// Throw if resource is a directory\n\t\tif (stat.isDirectory) {\n\t\t\tthrow new FileOperationError(localize('fileIsDirectoryReadError', \"Unable to read file '{0}' that is actually a directory\", this.resourceForError(resource)), FileOperationResult.FILE_IS_DIRECTORY, options);\n\t\t}\n\n\t\t// Throw if file not modified since (unless disabled)\n\t\tif (typeof options?.etag === 'string' && options.etag !== ETAG_DISABLED && options.etag === stat.etag) {\n\t\t\tthrow new NotModifiedSinceFileOperationError(localize('fileNotModifiedError', \"File not modified since\"), stat, options);\n\t\t}\n\n\t\t// Throw if file is too large to load\n\t\tthis.validateReadFileLimits(resource, stat.size, options);\n\n\t\treturn stat;\n\t}\n\n\tprivate validateReadFileLimits(resource: URI, size: number, options?: IReadFileStreamOptions): void {\n\t\tif (options?.limits) {\n\t\t\tlet tooLargeErrorResult: FileOperationResult | undefined = undefined;\n\n\t\t\tif (typeof options.limits.memory === 'number' && size > options.limits.memory) {\n\t\t\t\ttooLargeErrorResult = FileOperationResult.FILE_EXCEEDS_MEMORY_LIMIT;\n\t\t\t}\n\n\t\t\tif (typeof options.limits.size === 'number' && size > options.limits.size) {\n\t\t\t\ttooLargeErrorResult = FileOperationResult.FILE_TOO_LARGE;\n\t\t\t}\n\n\t\t\tif (typeof tooLargeErrorResult === 'number') {\n\t\t\t\tthrow new FileOperationError(localize('fileTooLargeError', \"Unable to read file '{0}' that is too large to open\", this.resourceForError(resource)), tooLargeErrorResult);\n\t\t\t}\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region Move/Copy/Delete/Create Folder\n\n\tasync canMove(source: URI, target: URI, overwrite?: boolean): Promise<Error | true> {\n\t\treturn this.doCanMoveCopy(source, target, 'move', overwrite);\n\t}\n\n\tasync canCopy(source: URI, target: URI, overwrite?: boolean): Promise<Error | true> {\n\t\treturn this.doCanMoveCopy(source, target, 'copy', overwrite);\n\t}\n\n\tprivate async doCanMoveCopy(source: URI, target: URI, mode: 'move' | 'copy', overwrite?: boolean): Promise<Error | true> {\n\t\tif (source.toString() !== target.toString()) {\n\t\t\ttry {\n\t\t\t\tconst sourceProvider = mode === 'move' ? this.throwIfFileSystemIsReadonly(await this.withWriteProvider(source), source) : await this.withReadProvider(source);\n\t\t\t\tconst targetProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(target), target);\n\n\t\t\t\tawait this.doValidateMoveCopy(sourceProvider, source, targetProvider, target, mode, overwrite);\n\t\t\t} catch (error) {\n\t\t\t\treturn error;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tasync move(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata> {\n\t\tconst sourceProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(source), source);\n\t\tconst targetProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(target), target);\n\n\t\t// move\n\t\tconst mode = await this.doMoveCopy(sourceProvider, source, targetProvider, target, 'move', !!overwrite);\n\n\t\t// resolve and send events\n\t\tconst fileStat = await this.resolve(target, { resolveMetadata: true });\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(source, mode === 'move' ? FileOperation.MOVE : FileOperation.COPY, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tasync copy(source: URI, target: URI, overwrite?: boolean): Promise<IFileStatWithMetadata> {\n\t\tconst sourceProvider = await this.withReadProvider(source);\n\t\tconst targetProvider = this.throwIfFileSystemIsReadonly(await this.withWriteProvider(target), target);\n\n\t\t// copy\n\t\tconst mode = await this.doMoveCopy(sourceProvider, source, targetProvider, target, 'copy', !!overwrite);\n\n\t\t// resolve and send events\n\t\tconst fileStat = await this.resolve(target, { resolveMetadata: true });\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(source, mode === 'copy' ? FileOperation.COPY : FileOperation.MOVE, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tprivate async doMoveCopy(sourceProvider: IFileSystemProvider, source: URI, targetProvider: IFileSystemProvider, target: URI, mode: 'move' | 'copy', overwrite: boolean): Promise<'move' | 'copy'> {\n\t\tif (source.toString() === target.toString()) {\n\t\t\treturn mode; // simulate node.js behaviour here and do a no-op if paths match\n\t\t}\n\n\t\t// validation\n\t\tconst { exists, isSameResourceWithDifferentPathCase } = await this.doValidateMoveCopy(sourceProvider, source, targetProvider, target, mode, overwrite);\n\n\t\t// delete as needed (unless target is same resurce with different path case)\n\t\tif (exists && !isSameResourceWithDifferentPathCase && overwrite) {\n\t\t\tawait this.del(target, { recursive: true });\n\t\t}\n\n\t\t// create parent folders\n\t\tawait this.mkdirp(targetProvider, this.getExtUri(targetProvider).providerExtUri.dirname(target));\n\n\t\t// copy source => target\n\t\tif (mode === 'copy') {\n\n\t\t\t// same provider with fast copy: leverage copy() functionality\n\t\t\tif (sourceProvider === targetProvider && hasFileFolderCopyCapability(sourceProvider)) {\n\t\t\t\tawait sourceProvider.copy(source, target, { overwrite });\n\t\t\t}\n\n\t\t\t// when copying via buffer/unbuffered, we have to manually\n\t\t\t// traverse the source if it is a folder and not a file\n\t\t\telse {\n\t\t\t\tconst sourceFile = await this.resolve(source);\n\t\t\t\tif (sourceFile.isDirectory) {\n\t\t\t\t\tawait this.doCopyFolder(sourceProvider, sourceFile, targetProvider, target);\n\t\t\t\t} else {\n\t\t\t\t\tawait this.doCopyFile(sourceProvider, source, targetProvider, target);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn mode;\n\t\t}\n\n\t\t// move source => target\n\t\telse {\n\n\t\t\t// same provider: leverage rename() functionality\n\t\t\tif (sourceProvider === targetProvider) {\n\t\t\t\tawait sourceProvider.rename(source, target, { overwrite });\n\n\t\t\t\treturn mode;\n\t\t\t}\n\n\t\t\t// across providers: copy to target & delete at source\n\t\t\telse {\n\t\t\t\tawait this.doMoveCopy(sourceProvider, source, targetProvider, target, 'copy', overwrite);\n\t\t\t\tawait this.del(source, { recursive: true });\n\n\t\t\t\treturn 'copy';\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async doCopyFile(sourceProvider: IFileSystemProvider, source: URI, targetProvider: IFileSystemProvider, target: URI): Promise<void> {\n\n\t\t// copy: source (buffered) => target (buffered)\n\t\tif (hasOpenReadWriteCloseCapability(sourceProvider) && hasOpenReadWriteCloseCapability(targetProvider)) {\n\t\t\treturn this.doPipeBuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\n\t\t// copy: source (buffered) => target (unbuffered)\n\t\tif (hasOpenReadWriteCloseCapability(sourceProvider) && hasReadWriteCapability(targetProvider)) {\n\t\t\treturn this.doPipeBufferedToUnbuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\n\t\t// copy: source (unbuffered) => target (buffered)\n\t\tif (hasReadWriteCapability(sourceProvider) && hasOpenReadWriteCloseCapability(targetProvider)) {\n\t\t\treturn this.doPipeUnbufferedToBuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\n\t\t// copy: source (unbuffered) => target (unbuffered)\n\t\tif (hasReadWriteCapability(sourceProvider) && hasReadWriteCapability(targetProvider)) {\n\t\t\treturn this.doPipeUnbuffered(sourceProvider, source, targetProvider, target);\n\t\t}\n\t}\n\n\tprivate async doCopyFolder(sourceProvider: IFileSystemProvider, sourceFolder: IFileStat, targetProvider: IFileSystemProvider, targetFolder: URI): Promise<void> {\n\n\t\t// create folder in target\n\t\tawait targetProvider.mkdir(targetFolder);\n\n\t\t// create children in target\n\t\tif (Array.isArray(sourceFolder.children)) {\n\t\t\tawait Promises.settled(sourceFolder.children.map(async sourceChild => {\n\t\t\t\tconst targetChild = this.getExtUri(targetProvider).providerExtUri.joinPath(targetFolder, sourceChild.name);\n\t\t\t\tif (sourceChild.isDirectory) {\n\t\t\t\t\treturn this.doCopyFolder(sourceProvider, await this.resolve(sourceChild.resource), targetProvider, targetChild);\n\t\t\t\t} else {\n\t\t\t\t\treturn this.doCopyFile(sourceProvider, sourceChild.resource, targetProvider, targetChild);\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\t}\n\n\tprivate async doValidateMoveCopy(sourceProvider: IFileSystemProvider, source: URI, targetProvider: IFileSystemProvider, target: URI, mode: 'move' | 'copy', overwrite?: boolean): Promise<{ exists: boolean, isSameResourceWithDifferentPathCase: boolean; }> {\n\t\tlet isSameResourceWithDifferentPathCase = false;\n\n\t\t// Check if source is equal or parent to target (requires providers to be the same)\n\t\tif (sourceProvider === targetProvider) {\n\t\t\tconst { providerExtUri, isPathCaseSensitive } = this.getExtUri(sourceProvider);\n\t\t\tif (!isPathCaseSensitive) {\n\t\t\t\tisSameResourceWithDifferentPathCase = providerExtUri.isEqual(source, target);\n\t\t\t}\n\n\t\t\tif (isSameResourceWithDifferentPathCase && mode === 'copy') {\n\t\t\t\tthrow new Error(localize('unableToMoveCopyError1', \"Unable to copy when source '{0}' is same as target '{1}' with different path case on a case insensitive file system\", this.resourceForError(source), this.resourceForError(target)));\n\t\t\t}\n\n\t\t\tif (!isSameResourceWithDifferentPathCase && providerExtUri.isEqualOrParent(target, source)) {\n\t\t\t\tthrow new Error(localize('unableToMoveCopyError2', \"Unable to move/copy when source '{0}' is parent of target '{1}'.\", this.resourceForError(source), this.resourceForError(target)));\n\t\t\t}\n\t\t}\n\n\t\t// Extra checks if target exists and this is not a rename\n\t\tconst exists = await this.exists(target);\n\t\tif (exists && !isSameResourceWithDifferentPathCase) {\n\n\t\t\t// Bail out if target exists and we are not about to overwrite\n\t\t\tif (!overwrite) {\n\t\t\t\tthrow new FileOperationError(localize('unableToMoveCopyError3', \"Unable to move/copy '{0}' because target '{1}' already exists at destination.\", this.resourceForError(source), this.resourceForError(target)), FileOperationResult.FILE_MOVE_CONFLICT);\n\t\t\t}\n\n\t\t\t// Special case: if the target is a parent of the source, we cannot delete\n\t\t\t// it as it would delete the source as well. In this case we have to throw\n\t\t\tif (sourceProvider === targetProvider) {\n\t\t\t\tconst { providerExtUri } = this.getExtUri(sourceProvider);\n\t\t\t\tif (providerExtUri.isEqualOrParent(source, target)) {\n\t\t\t\t\tthrow new Error(localize('unableToMoveCopyError4', \"Unable to move/copy '{0}' into '{1}' since a file would replace the folder it is contained in.\", this.resourceForError(source), this.resourceForError(target)));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { exists, isSameResourceWithDifferentPathCase };\n\t}\n\n\tprivate getExtUri(provider: IFileSystemProvider): { providerExtUri: IExtUri, isPathCaseSensitive: boolean; } {\n\t\tconst isPathCaseSensitive = this.isPathCaseSensitive(provider);\n\n\t\treturn {\n\t\t\tproviderExtUri: isPathCaseSensitive ? extUri : extUriIgnorePathCase,\n\t\t\tisPathCaseSensitive\n\t\t};\n\t}\n\n\tprivate isPathCaseSensitive(provider: IFileSystemProvider): boolean {\n\t\treturn !!(provider.capabilities & FileSystemProviderCapabilities.PathCaseSensitive);\n\t}\n\n\tasync createFolder(resource: URI): Promise<IFileStatWithMetadata> {\n\t\tconst provider = this.throwIfFileSystemIsReadonly(await this.withProvider(resource), resource);\n\n\t\t// mkdir recursively\n\t\tawait this.mkdirp(provider, resource);\n\n\t\t// events\n\t\tconst fileStat = await this.resolve(resource, { resolveMetadata: true });\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(resource, FileOperation.CREATE, fileStat));\n\n\t\treturn fileStat;\n\t}\n\n\tprivate async mkdirp(provider: IFileSystemProvider, directory: URI): Promise<void> {\n\t\tconst directoriesToCreate: string[] = [];\n\n\t\t// mkdir until we reach root\n\t\tconst { providerExtUri } = this.getExtUri(provider);\n\t\twhile (!providerExtUri.isEqual(directory, providerExtUri.dirname(directory))) {\n\t\t\ttry {\n\t\t\t\tconst stat = await provider.stat(directory);\n\t\t\t\tif ((stat.type & FileType.Directory) === 0) {\n\t\t\t\t\tthrow new Error(localize('mkdirExistsError', \"Unable to create folder '{0}' that already exists but is not a directory\", this.resourceForError(directory)));\n\t\t\t\t}\n\n\t\t\t\tbreak; // we have hit a directory that exists -> good\n\t\t\t} catch (error) {\n\n\t\t\t\t// Bubble up any other error that is not file not found\n\t\t\t\tif (toFileSystemProviderErrorCode(error) !== FileSystemProviderErrorCode.FileNotFound) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\n\t\t\t\t// Upon error, remember directories that need to be created\n\t\t\t\tdirectoriesToCreate.push(providerExtUri.basename(directory));\n\n\t\t\t\t// Continue up\n\t\t\t\tdirectory = providerExtUri.dirname(directory);\n\t\t\t}\n\t\t}\n\n\t\t// Create directories as needed\n\t\tfor (let i = directoriesToCreate.length - 1; i >= 0; i--) {\n\t\t\tdirectory = providerExtUri.joinPath(directory, directoriesToCreate[i]);\n\n\t\t\ttry {\n\t\t\t\tawait provider.mkdir(directory);\n\t\t\t} catch (error) {\n\t\t\t\tif (toFileSystemProviderErrorCode(error) !== FileSystemProviderErrorCode.FileExists) {\n\t\t\t\t\t// For mkdirp() we tolerate that the mkdir() call fails\n\t\t\t\t\t// in case the folder already exists. This follows node.js\n\t\t\t\t\t// own implementation of fs.mkdir({ recursive: true }) and\n\t\t\t\t\t// reduces the chances of race conditions leading to errors\n\t\t\t\t\t// if multiple calls try to create the same folders\n\t\t\t\t\t// As such, we only throw an error here if it is other than\n\t\t\t\t\t// the fact that the file already exists.\n\t\t\t\t\t// (see also https://github.com/microsoft/vscode/issues/89834)\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tasync canDelete(resource: URI, options?: Partial<FileDeleteOptions>): Promise<Error | true> {\n\t\ttry {\n\t\t\tawait this.doValidateDelete(resource, options);\n\t\t} catch (error) {\n\t\t\treturn error;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate async doValidateDelete(resource: URI, options?: Partial<FileDeleteOptions>): Promise<IFileSystemProvider> {\n\t\tconst provider = this.throwIfFileSystemIsReadonly(await this.withProvider(resource), resource);\n\n\t\t// Validate trash support\n\t\tconst useTrash = !!options?.useTrash;\n\t\tif (useTrash && !(provider.capabilities & FileSystemProviderCapabilities.Trash)) {\n\t\t\tthrow new Error(localize('deleteFailedTrashUnsupported', \"Unable to delete file '{0}' via trash because provider does not support it.\", this.resourceForError(resource)));\n\t\t}\n\n\t\t// Validate delete\n\t\tlet stat: IStat | undefined = undefined;\n\t\ttry {\n\t\t\tstat = await provider.stat(resource);\n\t\t} catch (error) {\n\t\t\t// Handled later\n\t\t}\n\n\t\tif (stat) {\n\t\t\tthis.throwIfFileIsReadonly(resource, stat);\n\t\t} else {\n\t\t\tthrow new FileOperationError(localize('deleteFailedNotFound', \"Unable to delete nonexistent file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_NOT_FOUND);\n\t\t}\n\n\t\t// Validate recursive\n\t\tconst recursive = !!options?.recursive;\n\t\tif (!recursive) {\n\t\t\tconst stat = await this.resolve(resource);\n\t\t\tif (stat.isDirectory && Array.isArray(stat.children) && stat.children.length > 0) {\n\t\t\t\tthrow new Error(localize('deleteFailedNonEmptyFolder', \"Unable to delete non-empty folder '{0}'.\", this.resourceForError(resource)));\n\t\t\t}\n\t\t}\n\n\t\treturn provider;\n\t}\n\n\tasync del(resource: URI, options?: Partial<FileDeleteOptions>): Promise<void> {\n\t\tconst provider = await this.doValidateDelete(resource, options);\n\n\t\tconst useTrash = !!options?.useTrash;\n\t\tconst recursive = !!options?.recursive;\n\n\t\t// Delete through provider\n\t\tawait provider.delete(resource, { recursive, useTrash });\n\n\t\t// Events\n\t\tthis._onDidRunOperation.fire(new FileOperationEvent(resource, FileOperation.DELETE));\n\t}\n\n\t//#endregion\n\n\t//#region File Watching\n\n\t/**\n\t * Providers can send unlimited amount of `IFileChange` events\n\t * and we want to protect against this to reduce CPU pressure.\n\t * The following settings limit the amount of file changes we\n\t * process at once.\n\t * (https://github.com/microsoft/vscode/issues/124723)\n\t */\n\tprivate static readonly FILE_EVENTS_THROTTLING = {\n\t\tmaxChangesChunkSize: 500 as const,\t\t// number of changes we process per interval\n\t\tmaxChangesBufferSize: 30000 as const,  \t// total number of changes we are willing to buffer in memory\n\t\tcoolDownDelay: 200 as const,\t  \t\t// rest for 100ms before processing next events\n\t\twarningscounter: 0\t\t\t\t\t\t// keep track how many warnings we showed to reduce log spam\n\t};\n\n\tprivate readonly _onDidFilesChange = this._register(new Emitter<FileChangesEvent>());\n\treadonly onDidFilesChange = this._onDidFilesChange.event;\n\n\tprivate readonly _onDidChangeFilesRaw = this._register(new Emitter<IRawFileChangesEvent>());\n\treadonly onDidChangeFilesRaw = this._onDidChangeFilesRaw.event;\n\n\tprivate readonly activeWatchers = new Map<string, { disposable: IDisposable, count: number; }>();\n\n\tprivate readonly caseSensitiveFileEventsWorker = this._register(\n\t\tnew ThrottledWorker<IFileChange>(\n\t\t\tFileService.FILE_EVENTS_THROTTLING.maxChangesChunkSize,\n\t\t\tFileService.FILE_EVENTS_THROTTLING.maxChangesBufferSize,\n\t\t\tFileService.FILE_EVENTS_THROTTLING.coolDownDelay,\n\t\t\tchunks => this._onDidFilesChange.fire(new FileChangesEvent(chunks, false))\n\t\t)\n\t);\n\n\tprivate readonly caseInsensitiveFileEventsWorker = this._register(\n\t\tnew ThrottledWorker<IFileChange>(\n\t\t\tFileService.FILE_EVENTS_THROTTLING.maxChangesChunkSize,\n\t\t\tFileService.FILE_EVENTS_THROTTLING.maxChangesBufferSize,\n\t\t\tFileService.FILE_EVENTS_THROTTLING.coolDownDelay,\n\t\t\tchunks => this._onDidFilesChange.fire(new FileChangesEvent(chunks, true))\n\t\t)\n\t);\n\n\tprivate onDidChangeFile(changes: readonly IFileChange[], caseSensitive: boolean): void {\n\n\t\t// Event #1: access to raw events goes out instantly\n\t\t{\n\t\t\tthis._onDidChangeFilesRaw.fire({ changes });\n\t\t}\n\n\t\t// Event #2: immediately send out events for\n\t\t// explicitly watched resources by splitting\n\t\t// changes up into 2 buckets\n\t\tlet explicitlyWatchedFileChanges: IFileChange[] | undefined = undefined;\n\t\tlet implicitlyWatchedFileChanges: IFileChange[] | undefined = undefined;\n\t\t{\n\t\t\tfor (const change of changes) {\n\t\t\t\tif (this.watchedResources.has(change.resource)) {\n\t\t\t\t\tif (!explicitlyWatchedFileChanges) {\n\t\t\t\t\t\texplicitlyWatchedFileChanges = [];\n\t\t\t\t\t}\n\t\t\t\t\texplicitlyWatchedFileChanges.push(change);\n\t\t\t\t} else {\n\t\t\t\t\tif (!implicitlyWatchedFileChanges) {\n\t\t\t\t\t\timplicitlyWatchedFileChanges = [];\n\t\t\t\t\t}\n\t\t\t\t\timplicitlyWatchedFileChanges.push(change);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (explicitlyWatchedFileChanges) {\n\t\t\t\tthis._onDidFilesChange.fire(new FileChangesEvent(explicitlyWatchedFileChanges, !caseSensitive));\n\t\t\t}\n\t\t}\n\n\t\t// Event #3: implicitly watched resources get\n\t\t// throttled due to performance reasons\n\t\tif (implicitlyWatchedFileChanges) {\n\t\t\tconst worker = caseSensitive ? this.caseSensitiveFileEventsWorker : this.caseInsensitiveFileEventsWorker;\n\t\t\tconst worked = worker.work(implicitlyWatchedFileChanges);\n\n\t\t\tif (!worked && FileService.FILE_EVENTS_THROTTLING.warningscounter++ < 10) {\n\t\t\t\tthis.logService.warn(`[File watcher]: started ignoring events due to too many file change events at once (incoming: ${implicitlyWatchedFileChanges.length}, most recent change: ${implicitlyWatchedFileChanges[0].resource.toString()}). Use 'files.watcherExclude' setting to exclude folders with lots of changing files (e.g. compilation output).`);\n\t\t\t}\n\n\t\t\tif (worker.pending > 0) {\n\t\t\t\tthis.logService.trace(`[File watcher]: started throttling events due to large amount of file change events at once (pending: ${worker.pending}, most recent change: ${implicitlyWatchedFileChanges[0].resource.toString()}). Use 'files.watcherExclude' setting to exclude folders with lots of changing files (e.g. compilation output).`);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate readonly watchedResources = TernarySearchTree.forUris<number>(uri => {\n\t\tconst provider = this.getProvider(uri.scheme);\n\t\tif (provider) {\n\t\t\treturn !this.isPathCaseSensitive(provider);\n\t\t}\n\n\t\treturn false;\n\t});\n\n\twatch(resource: URI, options: IWatchOptions = { recursive: false, excludes: [] }): IDisposable {\n\t\tconst disposables = new DisposableStore();\n\n\t\t// Forward watch request to provider and\n\t\t// wire in disposables.\n\t\tlet watchDisposed = false;\n\t\tlet disposeWatch = () => { watchDisposed = true; };\n\t\tdisposables.add(toDisposable(() => disposeWatch()));\n\n\t\t// Watch and wire in disposable which is async but\n\t\t// check if we got disposed meanwhile and forward\n\t\tthis.doWatch(resource, options).then(disposable => {\n\t\t\tif (watchDisposed) {\n\t\t\t\tdispose(disposable);\n\t\t\t} else {\n\t\t\t\tdisposeWatch = () => dispose(disposable);\n\t\t\t}\n\t\t}, error => this.logService.error(error));\n\n\t\t// Remember as watched resource and unregister\n\t\t// properly on disposal.\n\t\t//\n\t\t// Note: we only do this for non-recursive watchers\n\t\t// until we have a better `createWatcher` based API\n\t\t// (https://github.com/microsoft/vscode/issues/126809)\n\t\t//\n\t\tif (!options.recursive) {\n\n\t\t\t// Increment counter for resource\n\t\t\tthis.watchedResources.set(resource, (this.watchedResources.get(resource) ?? 0) + 1);\n\n\t\t\t// Decrement counter for resource on dispose\n\t\t\t// and remove from map when last one is gone\n\t\t\tdisposables.add(toDisposable(() => {\n\t\t\t\tconst watchedResourceCounter = this.watchedResources.get(resource);\n\t\t\t\tif (typeof watchedResourceCounter === 'number') {\n\t\t\t\t\tif (watchedResourceCounter <= 1) {\n\t\t\t\t\t\tthis.watchedResources.delete(resource);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.watchedResources.set(resource, watchedResourceCounter - 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}));\n\t\t}\n\n\t\treturn disposables;\n\t}\n\n\tprivate async doWatch(resource: URI, options: IWatchOptions): Promise<IDisposable> {\n\t\tconst provider = await this.withProvider(resource);\n\t\tconst key = this.toWatchKey(provider, resource, options);\n\n\t\t// Only start watching if we are the first for the given key\n\t\tlet watcher = this.activeWatchers.get(key);\n\t\tif (!watcher) {\n\t\t\twatcher = { count: 0, disposable: provider.watch(resource, options) };\n\n\t\t\tthis.activeWatchers.set(key, watcher);\n\t\t}\n\n\t\t// Increment usage counter\n\t\twatcher.count += 1;\n\n\t\treturn toDisposable(() => {\n\t\t\tif (watcher) {\n\n\t\t\t\t// Unref\n\t\t\t\twatcher.count--;\n\n\t\t\t\t// Dispose only when last user is reached\n\t\t\t\tif (watcher.count === 0) {\n\t\t\t\t\tdispose(watcher.disposable);\n\t\t\t\t\tthis.activeWatchers.delete(key);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate toWatchKey(provider: IFileSystemProvider, resource: URI, options: IWatchOptions): string {\n\t\tconst { providerExtUri } = this.getExtUri(provider);\n\n\t\treturn [\n\t\t\tproviderExtUri.getComparisonKey(resource), \t// lowercase path if the provider is case insensitive\n\t\t\tString(options.recursive),\t\t\t\t\t// use recursive: true | false as part of the key\n\t\t\toptions.excludes.join()\t\t\t\t\t\t// use excludes as part of the key\n\t\t].join();\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tfor (const [, watcher] of this.activeWatchers) {\n\t\t\tdispose(watcher.disposable);\n\t\t}\n\n\t\tthis.activeWatchers.clear();\n\t}\n\n\t//#endregion\n\n\t//#region Helpers\n\n\tprivate readonly writeQueue = this._register(new ResourceQueue());\n\n\tprivate async doWriteBuffered(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, resource: URI, options: IWriteFileOptions | undefined, readableOrStreamOrBufferedStream: VSBufferReadable | VSBufferReadableStream | VSBufferReadableBufferedStream): Promise<void> {\n\t\treturn this.writeQueue.queueFor(resource, this.getExtUri(provider).providerExtUri).queue(async () => {\n\n\t\t\t// open handle\n\t\t\tconst handle = await provider.open(resource, { create: true, unlock: options?.unlock ?? false });\n\n\t\t\t// write into handle until all bytes from buffer have been written\n\t\t\ttry {\n\t\t\t\tif (isReadableStream(readableOrStreamOrBufferedStream) || isReadableBufferedStream(readableOrStreamOrBufferedStream)) {\n\t\t\t\t\tawait this.doWriteStreamBufferedQueued(provider, handle, readableOrStreamOrBufferedStream);\n\t\t\t\t} else {\n\t\t\t\t\tawait this.doWriteReadableBufferedQueued(provider, handle, readableOrStreamOrBufferedStream);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t\t} finally {\n\n\t\t\t\t// close handle always\n\t\t\t\tawait provider.close(handle);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async doWriteStreamBufferedQueued(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, handle: number, streamOrBufferedStream: VSBufferReadableStream | VSBufferReadableBufferedStream): Promise<void> {\n\t\tlet posInFile = 0;\n\t\tlet stream: VSBufferReadableStream;\n\n\t\t// Buffered stream: consume the buffer first by writing\n\t\t// it to the target before reading from the stream.\n\t\tif (isReadableBufferedStream(streamOrBufferedStream)) {\n\t\t\tif (streamOrBufferedStream.buffer.length > 0) {\n\t\t\t\tconst chunk = VSBuffer.concat(streamOrBufferedStream.buffer);\n\t\t\t\tawait this.doWriteBuffer(provider, handle, chunk, chunk.byteLength, posInFile, 0);\n\n\t\t\t\tposInFile += chunk.byteLength;\n\t\t\t}\n\n\t\t\t// If the stream has been consumed, return early\n\t\t\tif (streamOrBufferedStream.ended) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstream = streamOrBufferedStream.stream;\n\t\t}\n\n\t\t// Unbuffered stream - just take as is\n\t\telse {\n\t\t\tstream = streamOrBufferedStream;\n\t\t}\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlistenStream(stream, {\n\t\t\t\tonData: async chunk => {\n\n\t\t\t\t\t// pause stream to perform async write operation\n\t\t\t\t\tstream.pause();\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait this.doWriteBuffer(provider, handle, chunk, chunk.byteLength, posInFile, 0);\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\treturn reject(error);\n\t\t\t\t\t}\n\n\t\t\t\t\tposInFile += chunk.byteLength;\n\n\t\t\t\t\t// resume stream now that we have successfully written\n\t\t\t\t\t// run this on the next tick to prevent increasing the\n\t\t\t\t\t// execution stack because resume() may call the event\n\t\t\t\t\t// handler again before finishing.\n\t\t\t\t\tsetTimeout(() => stream.resume());\n\t\t\t\t},\n\t\t\t\tonError: error => reject(error),\n\t\t\t\tonEnd: () => resolve()\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate async doWriteReadableBufferedQueued(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, handle: number, readable: VSBufferReadable): Promise<void> {\n\t\tlet posInFile = 0;\n\n\t\tlet chunk: VSBuffer | null;\n\t\twhile ((chunk = readable.read()) !== null) {\n\t\t\tawait this.doWriteBuffer(provider, handle, chunk, chunk.byteLength, posInFile, 0);\n\n\t\t\tposInFile += chunk.byteLength;\n\t\t}\n\t}\n\n\tprivate async doWriteBuffer(provider: IFileSystemProviderWithOpenReadWriteCloseCapability, handle: number, buffer: VSBuffer, length: number, posInFile: number, posInBuffer: number): Promise<void> {\n\t\tlet totalBytesWritten = 0;\n\t\twhile (totalBytesWritten < length) {\n\n\t\t\t// Write through the provider\n\t\t\tconst bytesWritten = await provider.write(handle, posInFile + totalBytesWritten, buffer.buffer, posInBuffer + totalBytesWritten, length - totalBytesWritten);\n\t\t\ttotalBytesWritten += bytesWritten;\n\t\t}\n\t}\n\n\tprivate async doWriteUnbuffered(provider: IFileSystemProviderWithFileReadWriteCapability, resource: URI, options: IWriteFileOptions | undefined, bufferOrReadableOrStreamOrBufferedStream: VSBuffer | VSBufferReadable | VSBufferReadableStream | VSBufferReadableBufferedStream): Promise<void> {\n\t\treturn this.writeQueue.queueFor(resource, this.getExtUri(provider).providerExtUri).queue(() => this.doWriteUnbufferedQueued(provider, resource, options, bufferOrReadableOrStreamOrBufferedStream));\n\t}\n\n\tprivate async doWriteUnbufferedQueued(provider: IFileSystemProviderWithFileReadWriteCapability, resource: URI, options: IWriteFileOptions | undefined, bufferOrReadableOrStreamOrBufferedStream: VSBuffer | VSBufferReadable | VSBufferReadableStream | VSBufferReadableBufferedStream): Promise<void> {\n\t\tlet buffer: VSBuffer;\n\t\tif (bufferOrReadableOrStreamOrBufferedStream instanceof VSBuffer) {\n\t\t\tbuffer = bufferOrReadableOrStreamOrBufferedStream;\n\t\t} else if (isReadableStream(bufferOrReadableOrStreamOrBufferedStream)) {\n\t\t\tbuffer = await streamToBuffer(bufferOrReadableOrStreamOrBufferedStream);\n\t\t} else if (isReadableBufferedStream(bufferOrReadableOrStreamOrBufferedStream)) {\n\t\t\tbuffer = await bufferedStreamToBuffer(bufferOrReadableOrStreamOrBufferedStream);\n\t\t} else {\n\t\t\tbuffer = readableToBuffer(bufferOrReadableOrStreamOrBufferedStream);\n\t\t}\n\n\t\t// Write through the provider\n\t\tawait provider.writeFile(resource, buffer.buffer, { create: true, overwrite: true, unlock: options?.unlock ?? false });\n\t}\n\n\tprivate async doPipeBuffered(sourceProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\t\treturn this.writeQueue.queueFor(target, this.getExtUri(targetProvider).providerExtUri).queue(() => this.doPipeBufferedQueued(sourceProvider, source, targetProvider, target));\n\t}\n\n\tprivate async doPipeBufferedQueued(sourceProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\t\tlet sourceHandle: number | undefined = undefined;\n\t\tlet targetHandle: number | undefined = undefined;\n\n\t\ttry {\n\n\t\t\t// Open handles\n\t\t\tsourceHandle = await sourceProvider.open(source, { create: false });\n\t\t\ttargetHandle = await targetProvider.open(target, { create: true, unlock: false });\n\n\t\t\tconst buffer = VSBuffer.alloc(this.BUFFER_SIZE);\n\n\t\t\tlet posInFile = 0;\n\t\t\tlet posInBuffer = 0;\n\t\t\tlet bytesRead = 0;\n\t\t\tdo {\n\t\t\t\t// read from source (sourceHandle) at current position (posInFile) into buffer (buffer) at\n\t\t\t\t// buffer position (posInBuffer) up to the size of the buffer (buffer.byteLength).\n\t\t\t\tbytesRead = await sourceProvider.read(sourceHandle, posInFile, buffer.buffer, posInBuffer, buffer.byteLength - posInBuffer);\n\n\t\t\t\t// write into target (targetHandle) at current position (posInFile) from buffer (buffer) at\n\t\t\t\t// buffer position (posInBuffer) all bytes we read (bytesRead).\n\t\t\t\tawait this.doWriteBuffer(targetProvider, targetHandle, buffer, bytesRead, posInFile, posInBuffer);\n\n\t\t\t\tposInFile += bytesRead;\n\t\t\t\tposInBuffer += bytesRead;\n\n\t\t\t\t// when buffer full, fill it again from the beginning\n\t\t\t\tif (posInBuffer === buffer.byteLength) {\n\t\t\t\t\tposInBuffer = 0;\n\t\t\t\t}\n\t\t\t} while (bytesRead > 0);\n\t\t} catch (error) {\n\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tawait Promises.settled([\n\t\t\t\ttypeof sourceHandle === 'number' ? sourceProvider.close(sourceHandle) : Promise.resolve(),\n\t\t\t\ttypeof targetHandle === 'number' ? targetProvider.close(targetHandle) : Promise.resolve(),\n\t\t\t]);\n\t\t}\n\t}\n\n\tprivate async doPipeUnbuffered(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithFileReadWriteCapability, target: URI): Promise<void> {\n\t\treturn this.writeQueue.queueFor(target, this.getExtUri(targetProvider).providerExtUri).queue(() => this.doPipeUnbufferedQueued(sourceProvider, source, targetProvider, target));\n\t}\n\n\tprivate async doPipeUnbufferedQueued(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithFileReadWriteCapability, target: URI): Promise<void> {\n\t\treturn targetProvider.writeFile(target, await sourceProvider.readFile(source), { create: true, overwrite: true, unlock: false });\n\t}\n\n\tprivate async doPipeUnbufferedToBuffered(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\t\treturn this.writeQueue.queueFor(target, this.getExtUri(targetProvider).providerExtUri).queue(() => this.doPipeUnbufferedToBufferedQueued(sourceProvider, source, targetProvider, target));\n\t}\n\n\tprivate async doPipeUnbufferedToBufferedQueued(sourceProvider: IFileSystemProviderWithFileReadWriteCapability, source: URI, targetProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, target: URI): Promise<void> {\n\n\t\t// Open handle\n\t\tconst targetHandle = await targetProvider.open(target, { create: true, unlock: false });\n\n\t\t// Read entire buffer from source and write buffered\n\t\ttry {\n\t\t\tconst buffer = await sourceProvider.readFile(source);\n\t\t\tawait this.doWriteBuffer(targetProvider, targetHandle, VSBuffer.wrap(buffer), buffer.byteLength, 0, 0);\n\t\t} catch (error) {\n\t\t\tthrow ensureFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tawait targetProvider.close(targetHandle);\n\t\t}\n\t}\n\n\tprivate async doPipeBufferedToUnbuffered(sourceProvider: IFileSystemProviderWithOpenReadWriteCloseCapability, source: URI, targetProvider: IFileSystemProviderWithFileReadWriteCapability, target: URI): Promise<void> {\n\n\t\t// Read buffer via stream buffered\n\t\tconst buffer = await streamToBuffer(this.readFileBuffered(sourceProvider, source, CancellationToken.None));\n\n\t\t// Write buffer into target at once\n\t\tawait this.doWriteUnbuffered(targetProvider, target, undefined, buffer);\n\t}\n\n\tprotected throwIfFileSystemIsReadonly<T extends IFileSystemProvider>(provider: T, resource: URI): T {\n\t\tif (provider.capabilities & FileSystemProviderCapabilities.Readonly) {\n\t\t\tthrow new FileOperationError(localize('err.readonly', \"Unable to modify readonly file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_PERMISSION_DENIED);\n\t\t}\n\n\t\treturn provider;\n\t}\n\n\tprivate throwIfFileIsReadonly(resource: URI, stat: IStat): void {\n\t\tif ((stat.permissions ?? 0) & FilePermission.Readonly) {\n\t\t\tthrow new FileOperationError(localize('err.readonly', \"Unable to modify readonly file '{0}'\", this.resourceForError(resource)), FileOperationResult.FILE_PERMISSION_DENIED);\n\t\t}\n\t}\n\n\tprivate resourceForError(resource: URI): string {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\treturn resource.fsPath;\n\t\t}\n\n\t\treturn resource.toString(true);\n\t}\n\n\t//#endregion\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { shell } from 'electron';\nimport { localize } from 'vs/nls';\nimport { isWindows } from 'vs/base/common/platform';\nimport { Emitter } from 'vs/base/common/event';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { FileDeleteOptions, IFileChange, IWatchOptions, createFileSystemProviderError, FileSystemProviderErrorCode } from 'vs/platform/files/common/files';\nimport { FileWatcher as NodeJSWatcherService } from 'vs/platform/files/node/watcher/nodejs/watcherService';\nimport { DiskFileSystemProvider } from 'vs/platform/files/node/diskFileSystemProvider';\nimport { basename, normalize } from 'vs/base/common/path';\nimport { Disposable, DisposableStore, dispose, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { ILogMessage, toFileChanges } from 'vs/platform/files/common/watcher';\nimport { ILogService, LogLevel } from 'vs/platform/log/common/log';\nimport { AbstractDiskFileSystemProviderChannel, ISessionFileWatcher } from 'vs/platform/files/node/diskFileSystemProviderIpc';\nimport { DefaultURITransformer, IURITransformer } from 'vs/base/common/uriIpc';\n\n/**\n * A server implementation for a IPC based file system provider (see `IPCFileSystemProvider`)\n * client.\n */\nexport class DiskFileSystemProviderChannel extends AbstractDiskFileSystemProviderChannel<unknown> {\n\n\tconstructor(\n\t\tprovider: DiskFileSystemProvider,\n\t\tlogService: ILogService\n\t) {\n\t\tsuper(provider, logService);\n\t}\n\n\tprotected override getUriTransformer(ctx: unknown): IURITransformer {\n\t\treturn DefaultURITransformer;\n\t}\n\n\tprotected override transformIncoming(uriTransformer: IURITransformer, _resource: UriComponents): URI {\n\t\treturn URI.revive(_resource);\n\t}\n\n\t//#region Delete: override to support Electron's trash support\n\n\tprotected override async delete(uriTransformer: IURITransformer, _resource: UriComponents, opts: FileDeleteOptions): Promise<void> {\n\t\tif (!opts.useTrash) {\n\t\t\treturn super.delete(uriTransformer, _resource, opts);\n\t\t}\n\n\t\tconst resource = this.transformIncoming(uriTransformer, _resource);\n\t\tconst filePath = normalize(resource.fsPath);\n\t\ttry {\n\t\t\tawait shell.trashItem(filePath);\n\t\t} catch (error) {\n\t\t\tthrow createFileSystemProviderError(isWindows ? localize('binFailed', \"Failed to move '{0}' to the recycle bin\", basename(filePath)) : localize('trashFailed', \"Failed to move '{0}' to the trash\", basename(filePath)), FileSystemProviderErrorCode.Unknown);\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region File Watching\n\n\tprotected createSessionFileWatcher(uriTransformer: IURITransformer, emitter: Emitter<IFileChange[] | string>): ISessionFileWatcher {\n\t\treturn new SessionFileWatcher(emitter, this.logService);\n\t}\n\n\t//#endregion\n\n}\n\nclass SessionFileWatcher extends Disposable implements ISessionFileWatcher {\n\n\tprivate readonly watcherRequests = new Map<number /* request ID */, IDisposable>();\n\n\tconstructor(\n\t\tprivate readonly sessionEmitter: Emitter<IFileChange[] | string>,\n\t\tprivate readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t}\n\n\twatch(req: number, resource: URI, opts: IWatchOptions): IDisposable {\n\t\tif (opts.recursive) {\n\t\t\tthrow createFileSystemProviderError('Recursive watcher is not supported from main process', FileSystemProviderErrorCode.Unavailable);\n\t\t}\n\n\t\tconst disposable = new DisposableStore();\n\n\t\tthis.watcherRequests.set(req, disposable);\n\t\tdisposable.add(toDisposable(() => this.watcherRequests.delete(req)));\n\n\t\tconst watcher = disposable.add(new NodeJSWatcherService(\n\t\t\tnormalize(resource.fsPath),\n\t\t\tchanges => this.sessionEmitter.fire(toFileChanges(changes)),\n\t\t\tmsg => this.onWatcherLogMessage(msg),\n\t\t\tthis.logService.getLevel() === LogLevel.Trace\n\t\t));\n\n\t\tdisposable.add(this.logService.onDidChangeLogLevel(() => {\n\t\t\twatcher.setVerboseLogging(this.logService.getLevel() === LogLevel.Trace);\n\t\t}));\n\n\t\treturn disposable;\n\t}\n\n\tprivate onWatcherLogMessage(msg: ILogMessage): void {\n\t\tif (msg.type === 'error') {\n\t\t\tthis.sessionEmitter.fire(msg.message);\n\t\t}\n\n\t\tthis.logService[msg.type](msg.message);\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis.watcherRequests.forEach(disposable => dispose(disposable));\n\t\tthis.watcherRequests.clear();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as fs from 'fs';\nimport { gracefulify } from 'graceful-fs';\nimport { retry } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Event } from 'vs/base/common/event';\nimport { isEqual } from 'vs/base/common/extpath';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { basename, dirname } from 'vs/base/common/path';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { joinPath } from 'vs/base/common/resources';\nimport { newWriteableStream, ReadableStreamEvents } from 'vs/base/common/stream';\nimport { URI } from 'vs/base/common/uri';\nimport { IDirent, Promises, RimRafMode, SymlinkSupport } from 'vs/base/node/pfs';\nimport { localize } from 'vs/nls';\nimport { createFileSystemProviderError, FileDeleteOptions, FileOpenOptions, FileOverwriteOptions, FileReadStreamOptions, FileSystemProviderCapabilities, FileSystemProviderError, FileSystemProviderErrorCode, FileType, FileWriteOptions, IFileSystemProviderWithFileFolderCopyCapability, IFileSystemProviderWithFileReadStreamCapability, IFileSystemProviderWithFileReadWriteCapability, IFileSystemProviderWithOpenReadWriteCloseCapability, isFileOpenForWriteOptions, IStat } from 'vs/platform/files/common/files';\nimport { readFileIntoStream } from 'vs/platform/files/common/io';\nimport { FileWatcher as NodeJSWatcherService } from 'vs/platform/files/node/watcher/nodejs/watcherService';\nimport { FileWatcher as NsfwWatcherService } from 'vs/platform/files/node/watcher/nsfw/watcherService';\nimport { FileWatcher as ParcelWatcherService } from 'vs/platform/files/node/watcher/parcel/watcherService';\nimport { IDiskFileChange, ILogMessage, IWatchRequest, WatcherService } from 'vs/platform/files/common/watcher';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { AbstractDiskFileSystemProvider } from 'vs/platform/files/common/diskFileSystemProvider';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\n\n/**\n * Enable graceful-fs very early from here to have it enabled\n * in all contexts that leverage the disk file system provider.\n */\n(() => {\n\ttry {\n\t\tgracefulify(fs);\n\t} catch (error) {\n\t\tconsole.error(`Error enabling graceful-fs: ${toErrorMessage(error)}`);\n\t}\n})();\n\nexport interface IWatcherOptions {\n\n\t/**\n\t * If `true`, will enable polling for all watchers, otherwise\n\t * will enable it for paths included in the string array.\n\t *\n\t * @deprecated this only exists for WSL1 support and should never\n\t * be used in any other case.\n\t */\n\tusePolling: boolean | string[];\n\n\t/**\n\t * If polling is enabled (via `usePolling`), defines the duration\n\t * in which the watcher will poll for changes.\n\t *\n\t * @deprecated this only exists for WSL1 support and should never\n\t * be used in any other case.\n\t */\n\tpollingInterval?: number;\n}\n\nexport interface IDiskFileSystemProviderOptions {\n\twatcher?: IWatcherOptions;\n\tlegacyWatcher?: string;\n}\n\nexport class DiskFileSystemProvider extends AbstractDiskFileSystemProvider implements\n\tIFileSystemProviderWithFileReadWriteCapability,\n\tIFileSystemProviderWithOpenReadWriteCloseCapability,\n\tIFileSystemProviderWithFileReadStreamCapability,\n\tIFileSystemProviderWithFileFolderCopyCapability {\n\n\tconstructor(\n\t\tlogService: ILogService,\n\t\tprivate readonly options?: IDiskFileSystemProviderOptions\n\t) {\n\t\tsuper(logService);\n\t}\n\n\t//#region File Capabilities\n\n\treadonly onDidChangeCapabilities: Event<void> = Event.None;\n\n\tprotected _capabilities: FileSystemProviderCapabilities | undefined;\n\tget capabilities(): FileSystemProviderCapabilities {\n\t\tif (!this._capabilities) {\n\t\t\tthis._capabilities =\n\t\t\t\tFileSystemProviderCapabilities.FileReadWrite |\n\t\t\t\tFileSystemProviderCapabilities.FileOpenReadWriteClose |\n\t\t\t\tFileSystemProviderCapabilities.FileReadStream |\n\t\t\t\tFileSystemProviderCapabilities.FileFolderCopy |\n\t\t\t\tFileSystemProviderCapabilities.FileWriteUnlock;\n\n\t\t\tif (isLinux) {\n\t\t\t\tthis._capabilities |= FileSystemProviderCapabilities.PathCaseSensitive;\n\t\t\t}\n\t\t}\n\n\t\treturn this._capabilities;\n\t}\n\n\t//#endregion\n\n\t//#region File Metadata Resolving\n\n\tasync stat(resource: URI): Promise<IStat> {\n\t\ttry {\n\t\t\tconst { stat, symbolicLink } = await SymlinkSupport.stat(this.toFilePath(resource)); // cannot use fs.stat() here to support links properly\n\n\t\t\treturn {\n\t\t\t\ttype: this.toType(stat, symbolicLink),\n\t\t\t\tctime: stat.birthtime.getTime(), // intentionally not using ctime here, we want the creation time\n\t\t\t\tmtime: stat.mtime.getTime(),\n\t\t\t\tsize: stat.size\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync readdir(resource: URI): Promise<[string, FileType][]> {\n\t\ttry {\n\t\t\tconst children = await Promises.readdir(this.toFilePath(resource), { withFileTypes: true });\n\n\t\t\tconst result: [string, FileType][] = [];\n\t\t\tawait Promise.all(children.map(async child => {\n\t\t\t\ttry {\n\t\t\t\t\tlet type: FileType;\n\t\t\t\t\tif (child.isSymbolicLink()) {\n\t\t\t\t\t\ttype = (await this.stat(joinPath(resource, child.name))).type; // always resolve target the link points to if any\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = this.toType(child);\n\t\t\t\t\t}\n\n\t\t\t\t\tresult.push([child.name, type]);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.trace(error); // ignore errors for individual entries that can arise from permission denied\n\t\t\t\t}\n\t\t\t}));\n\n\t\t\treturn result;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprivate toType(entry: fs.Stats | IDirent, symbolicLink?: { dangling: boolean }): FileType {\n\n\t\t// Signal file type by checking for file / directory, except:\n\t\t// - symbolic links pointing to nonexistent files are FileType.Unknown\n\t\t// - files that are neither file nor directory are FileType.Unknown\n\t\tlet type: FileType;\n\t\tif (symbolicLink?.dangling) {\n\t\t\ttype = FileType.Unknown;\n\t\t} else if (entry.isFile()) {\n\t\t\ttype = FileType.File;\n\t\t} else if (entry.isDirectory()) {\n\t\t\ttype = FileType.Directory;\n\t\t} else {\n\t\t\ttype = FileType.Unknown;\n\t\t}\n\n\t\t// Always signal symbolic link as file type additionally\n\t\tif (symbolicLink) {\n\t\t\ttype |= FileType.SymbolicLink;\n\t\t}\n\n\t\treturn type;\n\t}\n\n\t//#endregion\n\n\t//#region File Reading/Writing\n\n\tasync readFile(resource: URI): Promise<Uint8Array> {\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\treturn await Promises.readFile(filePath);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\treadFileStream(resource: URI, opts: FileReadStreamOptions, token: CancellationToken): ReadableStreamEvents<Uint8Array> {\n\t\tconst stream = newWriteableStream<Uint8Array>(data => VSBuffer.concat(data.map(data => VSBuffer.wrap(data))).buffer);\n\n\t\treadFileIntoStream(this, resource, stream, data => data.buffer, {\n\t\t\t...opts,\n\t\t\tbufferSize: 256 * 1024 // read into chunks of 256kb each to reduce IPC overhead\n\t\t}, token);\n\n\t\treturn stream;\n\t}\n\n\tasync writeFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void> {\n\t\tlet handle: number | undefined = undefined;\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\t// Validate target unless { create: true, overwrite: true }\n\t\t\tif (!opts.create || !opts.overwrite) {\n\t\t\t\tconst fileExists = await Promises.exists(filePath);\n\t\t\t\tif (fileExists) {\n\t\t\t\t\tif (!opts.overwrite) {\n\t\t\t\t\t\tthrow createFileSystemProviderError(localize('fileExists', \"File already exists\"), FileSystemProviderErrorCode.FileExists);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (!opts.create) {\n\t\t\t\t\t\tthrow createFileSystemProviderError(localize('fileNotExists', \"File does not exist\"), FileSystemProviderErrorCode.FileNotFound);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Open\n\t\t\thandle = await this.open(resource, { create: true, unlock: opts.unlock });\n\n\t\t\t// Write content at once\n\t\t\tawait this.write(handle, 0, content, 0, content.byteLength);\n\t\t} catch (error) {\n\t\t\tthrow await this.toFileSystemProviderWriteError(resource, error);\n\t\t} finally {\n\t\t\tif (typeof handle === 'number') {\n\t\t\t\tawait this.close(handle);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate readonly mapHandleToPos = new Map<number, number>();\n\n\tprivate readonly writeHandles = new Map<number, URI>();\n\tprivate canFlush: boolean = true;\n\n\tasync open(resource: URI, opts: FileOpenOptions): Promise<number> {\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\t// Determine wether to unlock the file (write only)\n\t\t\tif (isFileOpenForWriteOptions(opts) && opts.unlock) {\n\t\t\t\ttry {\n\t\t\t\t\tconst { stat } = await SymlinkSupport.stat(filePath);\n\t\t\t\t\tif (!(stat.mode & 0o200 /* File mode indicating writable by owner */)) {\n\t\t\t\t\t\tawait Promises.chmod(filePath, stat.mode | 0o200);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.trace(error); // ignore any errors here and try to just write\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Determine file flags for opening (read vs write)\n\t\t\tlet flags: string | undefined = undefined;\n\t\t\tif (isFileOpenForWriteOptions(opts)) {\n\t\t\t\tif (isWindows) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\t// On Windows and if the file exists, we use a different strategy of saving the file\n\t\t\t\t\t\t// by first truncating the file and then writing with r+ flag. This helps to save hidden files on Windows\n\t\t\t\t\t\t// (see https://github.com/microsoft/vscode/issues/931) and prevent removing alternate data streams\n\t\t\t\t\t\t// (see https://github.com/microsoft/vscode/issues/6363)\n\t\t\t\t\t\tawait Promises.truncate(filePath, 0);\n\n\t\t\t\t\t\t// After a successful truncate() the flag can be set to 'r+' which will not truncate.\n\t\t\t\t\t\tflags = 'r+';\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\t\t\t\tthis.logService.trace(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// we take opts.create as a hint that the file is opened for writing\n\t\t\t\t// as such we use 'w' to truncate an existing or create the\n\t\t\t\t// file otherwise. we do not allow reading.\n\t\t\t\tif (!flags) {\n\t\t\t\t\tflags = 'w';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// otherwise we assume the file is opened for reading\n\t\t\t\t// as such we use 'r' to neither truncate, nor create\n\t\t\t\t// the file.\n\t\t\t\tflags = 'r';\n\t\t\t}\n\n\t\t\tconst handle = await Promises.open(filePath, flags);\n\n\t\t\t// remember this handle to track file position of the handle\n\t\t\t// we init the position to 0 since the file descriptor was\n\t\t\t// just created and the position was not moved so far (see\n\t\t\t// also http://man7.org/linux/man-pages/man2/open.2.html -\n\t\t\t// \"The file offset is set to the beginning of the file.\")\n\t\t\tthis.mapHandleToPos.set(handle, 0);\n\n\t\t\t// remember that this handle was used for writing\n\t\t\tif (isFileOpenForWriteOptions(opts)) {\n\t\t\t\tthis.writeHandles.set(handle, resource);\n\t\t\t}\n\n\t\t\treturn handle;\n\t\t} catch (error) {\n\t\t\tif (isFileOpenForWriteOptions(opts)) {\n\t\t\t\tthrow await this.toFileSystemProviderWriteError(resource, error);\n\t\t\t} else {\n\t\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync close(fd: number): Promise<void> {\n\t\ttry {\n\n\t\t\t// remove this handle from map of positions\n\t\t\tthis.mapHandleToPos.delete(fd);\n\n\t\t\t// if a handle is closed that was used for writing, ensure\n\t\t\t// to flush the contents to disk if possible.\n\t\t\tif (this.writeHandles.delete(fd) && this.canFlush) {\n\t\t\t\ttry {\n\t\t\t\t\tawait Promises.fdatasync(fd); // https://github.com/microsoft/vscode/issues/9589\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// In some exotic setups it is well possible that node fails to sync\n\t\t\t\t\t// In that case we disable flushing and log the error to our logger\n\t\t\t\t\tthis.canFlush = false;\n\t\t\t\t\tthis.logService.error(error);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn await Promises.close(fd);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync read(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\tconst normalizedPos = this.normalizePos(fd, pos);\n\n\t\tlet bytesRead: number | null = null;\n\t\ttry {\n\t\t\tconst result = await Promises.read(fd, data, offset, length, normalizedPos);\n\n\t\t\tif (typeof result === 'number') {\n\t\t\t\tbytesRead = result; // node.d.ts fail\n\t\t\t} else {\n\t\t\t\tbytesRead = result.bytesRead;\n\t\t\t}\n\n\t\t\treturn bytesRead;\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t} finally {\n\t\t\tthis.updatePos(fd, normalizedPos, bytesRead);\n\t\t}\n\t}\n\n\tprivate normalizePos(fd: number, pos: number): number | null {\n\n\t\t// when calling fs.read/write we try to avoid passing in the \"pos\" argument and\n\t\t// rather prefer to pass in \"null\" because this avoids an extra seek(pos)\n\t\t// call that in some cases can even fail (e.g. when opening a file over FTP -\n\t\t// see https://github.com/microsoft/vscode/issues/73884).\n\t\t//\n\t\t// as such, we compare the passed in position argument with our last known\n\t\t// position for the file descriptor and use \"null\" if they match.\n\t\tif (pos === this.mapHandleToPos.get(fd)) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn pos;\n\t}\n\n\tprivate updatePos(fd: number, pos: number | null, bytesLength: number | null): void {\n\t\tconst lastKnownPos = this.mapHandleToPos.get(fd);\n\t\tif (typeof lastKnownPos === 'number') {\n\n\t\t\t// pos !== null signals that previously a position was used that is\n\t\t\t// not null. node.js documentation explains, that in this case\n\t\t\t// the internal file pointer is not moving and as such we do not move\n\t\t\t// our position pointer.\n\t\t\t//\n\t\t\t// Docs: \"If position is null, data will be read from the current file position,\n\t\t\t// and the file position will be updated. If position is an integer, the file position\n\t\t\t// will remain unchanged.\"\n\t\t\tif (typeof pos === 'number') {\n\t\t\t\t// do not modify the position\n\t\t\t}\n\n\t\t\t// bytesLength = number is a signal that the read/write operation was\n\t\t\t// successful and as such we need to advance the position in the Map\n\t\t\t//\n\t\t\t// Docs (http://man7.org/linux/man-pages/man2/read.2.html):\n\t\t\t// \"On files that support seeking, the read operation commences at the\n\t\t\t// file offset, and the file offset is incremented by the number of\n\t\t\t// bytes read.\"\n\t\t\t//\n\t\t\t// Docs (http://man7.org/linux/man-pages/man2/write.2.html):\n\t\t\t// \"For a seekable file (i.e., one to which lseek(2) may be applied, for\n\t\t\t// example, a regular file) writing takes place at the file offset, and\n\t\t\t// the file offset is incremented by the number of bytes actually\n\t\t\t// written.\"\n\t\t\telse if (typeof bytesLength === 'number') {\n\t\t\t\tthis.mapHandleToPos.set(fd, lastKnownPos + bytesLength);\n\t\t\t}\n\n\t\t\t// bytesLength = null signals an error in the read/write operation\n\t\t\t// and as such we drop the handle from the Map because the position\n\t\t\t// is unspecificed at this point.\n\t\t\telse {\n\t\t\t\tthis.mapHandleToPos.delete(fd);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync write(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\t// we know at this point that the file to write to is truncated and thus empty\n\t\t// if the write now fails, the file remains empty. as such we really try hard\n\t\t// to ensure the write succeeds by retrying up to three times.\n\t\treturn retry(() => this.doWrite(fd, pos, data, offset, length), 100 /* ms delay */, 3 /* retries */);\n\t}\n\n\tprivate async doWrite(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\n\t\tconst normalizedPos = this.normalizePos(fd, pos);\n\n\t\tlet bytesWritten: number | null = null;\n\t\ttry {\n\t\t\tconst result = await Promises.write(fd, data, offset, length, normalizedPos);\n\n\t\t\tif (typeof result === 'number') {\n\t\t\t\tbytesWritten = result; // node.d.ts fail\n\t\t\t} else {\n\t\t\t\tbytesWritten = result.bytesWritten;\n\t\t\t}\n\n\t\t\treturn bytesWritten;\n\t\t} catch (error) {\n\t\t\tthrow await this.toFileSystemProviderWriteError(this.writeHandles.get(fd), error);\n\t\t} finally {\n\t\t\tthis.updatePos(fd, normalizedPos, bytesWritten);\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region Move/Copy/Delete/Create Folder\n\n\tasync mkdir(resource: URI): Promise<void> {\n\t\ttry {\n\t\t\tawait Promises.mkdir(this.toFilePath(resource));\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync delete(resource: URI, opts: FileDeleteOptions): Promise<void> {\n\t\ttry {\n\t\t\tconst filePath = this.toFilePath(resource);\n\n\t\t\tawait this.doDelete(filePath, opts);\n\t\t} catch (error) {\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprotected async doDelete(filePath: string, opts: FileDeleteOptions): Promise<void> {\n\t\tif (opts.recursive) {\n\t\t\tawait Promises.rm(filePath, RimRafMode.MOVE);\n\t\t} else {\n\t\t\tawait Promises.unlink(filePath);\n\t\t}\n\t}\n\n\tasync rename(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\tconst fromFilePath = this.toFilePath(from);\n\t\tconst toFilePath = this.toFilePath(to);\n\n\t\tif (fromFilePath === toFilePath) {\n\t\t\treturn; // simulate node.js behaviour here and do a no-op if paths match\n\t\t}\n\n\t\ttry {\n\n\t\t\t// Ensure target does not exist\n\t\t\tawait this.validateTargetDeleted(from, to, 'move', opts.overwrite);\n\n\t\t\t// Move\n\t\t\tawait Promises.move(fromFilePath, toFilePath);\n\t\t} catch (error) {\n\n\t\t\t// rewrite some typical errors that can happen especially around symlinks\n\t\t\t// to something the user can better understand\n\t\t\tif (error.code === 'EINVAL' || error.code === 'EBUSY' || error.code === 'ENAMETOOLONG') {\n\t\t\t\terror = new Error(localize('moveError', \"Unable to move '{0}' into '{1}' ({2}).\", basename(fromFilePath), basename(dirname(toFilePath)), error.toString()));\n\t\t\t}\n\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tasync copy(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void> {\n\t\tconst fromFilePath = this.toFilePath(from);\n\t\tconst toFilePath = this.toFilePath(to);\n\n\t\tif (fromFilePath === toFilePath) {\n\t\t\treturn; // simulate node.js behaviour here and do a no-op if paths match\n\t\t}\n\n\t\ttry {\n\n\t\t\t// Ensure target does not exist\n\t\t\tawait this.validateTargetDeleted(from, to, 'copy', opts.overwrite);\n\n\t\t\t// Copy\n\t\t\tawait Promises.copy(fromFilePath, toFilePath, { preserveSymlinks: true });\n\t\t} catch (error) {\n\n\t\t\t// rewrite some typical errors that can happen especially around symlinks\n\t\t\t// to something the user can better understand\n\t\t\tif (error.code === 'EINVAL' || error.code === 'EBUSY' || error.code === 'ENAMETOOLONG') {\n\t\t\t\terror = new Error(localize('copyError', \"Unable to copy '{0}' into '{1}' ({2}).\", basename(fromFilePath), basename(dirname(toFilePath)), error.toString()));\n\t\t\t}\n\n\t\t\tthrow this.toFileSystemProviderError(error);\n\t\t}\n\t}\n\n\tprivate async validateTargetDeleted(from: URI, to: URI, mode: 'move' | 'copy', overwrite?: boolean): Promise<void> {\n\t\tconst fromFilePath = this.toFilePath(from);\n\t\tconst toFilePath = this.toFilePath(to);\n\n\t\tlet isSameResourceWithDifferentPathCase = false;\n\t\tconst isPathCaseSensitive = !!(this.capabilities & FileSystemProviderCapabilities.PathCaseSensitive);\n\t\tif (!isPathCaseSensitive) {\n\t\t\tisSameResourceWithDifferentPathCase = isEqual(fromFilePath, toFilePath, true /* ignore case */);\n\t\t}\n\n\t\tif (isSameResourceWithDifferentPathCase && mode === 'copy') {\n\t\t\tthrow createFileSystemProviderError(localize('fileCopyErrorPathCase', \"'File cannot be copied to same path with different path case\"), FileSystemProviderErrorCode.FileExists);\n\t\t}\n\n\t\t// handle existing target (unless this is a case change)\n\t\tif (!isSameResourceWithDifferentPathCase && await Promises.exists(toFilePath)) {\n\t\t\tif (!overwrite) {\n\t\t\t\tthrow createFileSystemProviderError(localize('fileCopyErrorExists', \"File at target already exists\"), FileSystemProviderErrorCode.FileExists);\n\t\t\t}\n\n\t\t\t// Delete target\n\t\t\tawait this.delete(to, { recursive: true, useTrash: false });\n\t\t}\n\t}\n\n\t//#endregion\n\n\t//#region File Watching\n\n\tprotected createRecursiveWatcher(\n\t\tonChange: (changes: IDiskFileChange[]) => void,\n\t\tonLogMessage: (msg: ILogMessage) => void,\n\t\tverboseLogging: boolean\n\t): WatcherService {\n\t\tlet watcherImpl: {\n\t\t\tnew(\n\t\t\t\tonChange: (changes: IDiskFileChange[]) => void,\n\t\t\t\tonLogMessage: (msg: ILogMessage) => void,\n\t\t\t\tverboseLogging: boolean,\n\t\t\t\twatcherOptions?: IWatcherOptions\n\t\t\t): WatcherService\n\t\t};\n\n\t\tlet enableLegacyWatcher = false;\n\t\tif (this.options?.watcher?.usePolling) {\n\t\t\tenableLegacyWatcher = false; // must use Parcel watcher for when polling is required\n\t\t} else {\n\t\t\tenableLegacyWatcher = this.options?.legacyWatcher === 'on'; // setting always wins\n\t\t}\n\n\t\tif (enableLegacyWatcher) {\n\t\t\twatcherImpl = NsfwWatcherService;\n\t\t} else {\n\t\t\twatcherImpl = ParcelWatcherService;\n\t\t}\n\n\t\treturn new watcherImpl(\n\t\t\tchanges => onChange(changes),\n\t\t\tmsg => onLogMessage(msg),\n\t\t\tverboseLogging,\n\t\t\tthis.options?.watcher\n\t\t);\n\t}\n\n\tprotected override doWatch(watcher: WatcherService, requests: IWatchRequest[]): Promise<void> {\n\t\tconst usePolling = this.options?.watcher?.usePolling;\n\t\tif (usePolling === true) {\n\t\t\tfor (const request of requests) {\n\t\t\t\trequest.pollingInterval = this.options?.watcher?.pollingInterval ?? 5000;\n\t\t\t}\n\t\t} else if (Array.isArray(usePolling)) {\n\t\t\tfor (const request of requests) {\n\t\t\t\tif (usePolling.includes(request.path)) {\n\t\t\t\t\trequest.pollingInterval = this.options?.watcher?.pollingInterval ?? 5000;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn super.doWatch(watcher, requests);\n\t}\n\n\tprotected createNonRecursiveWatcher(\n\t\tpath: string,\n\t\tonChange: (changes: IDiskFileChange[]) => void,\n\t\tonLogMessage: (msg: ILogMessage) => void,\n\t\tverboseLogging: boolean\n\t): IDisposable & { setVerboseLogging: (verboseLogging: boolean) => void } {\n\t\treturn new NodeJSWatcherService(\n\t\t\tpath,\n\t\t\tchanges => onChange(changes),\n\t\t\tmsg => onLogMessage(msg),\n\t\t\tverboseLogging\n\t\t);\n\t}\n\n\t//#endregion\n\n\t//#region Helpers\n\n\tprivate toFileSystemProviderError(error: NodeJS.ErrnoException): FileSystemProviderError {\n\t\tif (error instanceof FileSystemProviderError) {\n\t\t\treturn error; // avoid double conversion\n\t\t}\n\n\t\tlet code: FileSystemProviderErrorCode;\n\t\tswitch (error.code) {\n\t\t\tcase 'ENOENT':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileNotFound;\n\t\t\t\tbreak;\n\t\t\tcase 'EISDIR':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileIsADirectory;\n\t\t\t\tbreak;\n\t\t\tcase 'ENOTDIR':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileNotADirectory;\n\t\t\t\tbreak;\n\t\t\tcase 'EEXIST':\n\t\t\t\tcode = FileSystemProviderErrorCode.FileExists;\n\t\t\t\tbreak;\n\t\t\tcase 'EPERM':\n\t\t\tcase 'EACCES':\n\t\t\t\tcode = FileSystemProviderErrorCode.NoPermissions;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcode = FileSystemProviderErrorCode.Unknown;\n\t\t}\n\n\t\treturn createFileSystemProviderError(error, code);\n\t}\n\n\tprivate async toFileSystemProviderWriteError(resource: URI | undefined, error: NodeJS.ErrnoException): Promise<FileSystemProviderError> {\n\t\tlet fileSystemProviderWriteError = this.toFileSystemProviderError(error);\n\n\t\t// If the write error signals permission issues, we try\n\t\t// to read the file's mode to see if the file is write\n\t\t// locked.\n\t\tif (resource && fileSystemProviderWriteError.code === FileSystemProviderErrorCode.NoPermissions) {\n\t\t\ttry {\n\t\t\t\tconst { stat } = await SymlinkSupport.stat(this.toFilePath(resource));\n\t\t\t\tif (!(stat.mode & 0o200 /* File mode indicating writable by owner */)) {\n\t\t\t\t\tfileSystemProviderWriteError = createFileSystemProviderError(error, FileSystemProviderErrorCode.FileWriteLocked);\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.trace(error); // ignore - return original error\n\t\t\t}\n\t\t}\n\n\t\treturn fileSystemProviderWriteError;\n\t}\n\n\t//#endregion\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { AbstractLogger, DEFAULT_LOG_LEVEL, ILogger, ILogService, LogLevel } from 'vs/platform/log/common/log';\n\ninterface ILog {\n\tlevel: LogLevel;\n\targs: any[];\n}\n\nfunction getLogFunction(logger: ILogger, level: LogLevel): Function {\n\tswitch (level) {\n\t\tcase LogLevel.Trace: return logger.trace;\n\t\tcase LogLevel.Debug: return logger.debug;\n\t\tcase LogLevel.Info: return logger.info;\n\t\tcase LogLevel.Warning: return logger.warn;\n\t\tcase LogLevel.Error: return logger.error;\n\t\tcase LogLevel.Critical: return logger.critical;\n\t\tdefault: throw new Error('Invalid log level');\n\t}\n}\n\nexport class BufferLogService extends AbstractLogger implements ILogService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\tprivate buffer: ILog[] = [];\n\tprivate _logger: ILogger | undefined = undefined;\n\n\tconstructor(logLevel: LogLevel = DEFAULT_LOG_LEVEL) {\n\t\tsuper();\n\t\tthis.setLevel(logLevel);\n\t\tthis._register(this.onDidChangeLogLevel(level => {\n\t\t\tif (this._logger) {\n\t\t\t\tthis._logger.setLevel(level);\n\t\t\t}\n\t\t}));\n\t}\n\n\tset logger(logger: ILogger) {\n\t\tthis._logger = logger;\n\n\t\tfor (const { level, args } of this.buffer) {\n\t\t\tconst fn = getLogFunction(logger, level);\n\t\t\tfn.apply(logger, args);\n\t\t}\n\n\t\tthis.buffer = [];\n\t}\n\n\tprivate _log(level: LogLevel, ...args: any[]): void {\n\t\tif (this._logger) {\n\t\t\tconst fn = getLogFunction(this._logger, level);\n\t\t\tfn.apply(this._logger, args);\n\t\t} else if (this.getLevel() <= level) {\n\t\t\tthis.buffer.push({ level, args });\n\t\t}\n\t}\n\n\ttrace(message: string, ...args: any[]): void {\n\t\tthis._log(LogLevel.Trace, message, ...args);\n\t}\n\n\tdebug(message: string, ...args: any[]): void {\n\t\tthis._log(LogLevel.Debug, message, ...args);\n\t}\n\n\tinfo(message: string, ...args: any[]): void {\n\t\tthis._log(LogLevel.Info, message, ...args);\n\t}\n\n\twarn(message: string, ...args: any[]): void {\n\t\tthis._log(LogLevel.Warning, message, ...args);\n\t}\n\n\terror(message: string | Error, ...args: any[]): void {\n\t\tthis._log(LogLevel.Error, message, ...args);\n\t}\n\n\tcritical(message: string | Error, ...args: any[]): void {\n\t\tthis._log(LogLevel.Critical, message, ...args);\n\t}\n\n\toverride dispose(): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.dispose();\n\t\t}\n\t}\n\n\tflush(): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.flush();\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Queue } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { basename, dirname, joinPath } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { ByteSize, FileOperationError, FileOperationResult, IFileService, whenProviderRegistered } from 'vs/platform/files/common/files';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { BufferLogService } from 'vs/platform/log/common/bufferLog';\nimport { AbstractLogger, AbstractLoggerService, format, ILogger, ILoggerOptions, ILoggerService, ILogService, LogLevel } from 'vs/platform/log/common/log';\n\nconst MAX_FILE_SIZE = 5 * ByteSize.MB;\n\nexport class FileLogger extends AbstractLogger implements ILogger {\n\n\tprivate readonly initializePromise: Promise<void>;\n\tprivate readonly queue: Queue<void>;\n\tprivate backupIndex: number = 1;\n\n\tconstructor(\n\t\tprivate readonly name: string,\n\t\tprivate readonly resource: URI,\n\t\tlevel: LogLevel,\n\t\tprivate readonly donotUseFormatters: boolean,\n\t\t@IFileService private readonly fileService: IFileService\n\t) {\n\t\tsuper();\n\t\tthis.setLevel(level);\n\t\tthis.queue = this._register(new Queue<void>());\n\t\tthis.initializePromise = this.initialize();\n\t}\n\n\ttrace(): void {\n\t\tif (this.getLevel() <= LogLevel.Trace) {\n\t\t\tthis._log(LogLevel.Trace, format(arguments));\n\t\t}\n\t}\n\n\tdebug(): void {\n\t\tif (this.getLevel() <= LogLevel.Debug) {\n\t\t\tthis._log(LogLevel.Debug, format(arguments));\n\t\t}\n\t}\n\n\tinfo(): void {\n\t\tif (this.getLevel() <= LogLevel.Info) {\n\t\t\tthis._log(LogLevel.Info, format(arguments));\n\t\t}\n\t}\n\n\twarn(): void {\n\t\tif (this.getLevel() <= LogLevel.Warning) {\n\t\t\tthis._log(LogLevel.Warning, format(arguments));\n\t\t}\n\t}\n\n\terror(): void {\n\t\tif (this.getLevel() <= LogLevel.Error) {\n\t\t\tconst arg = arguments[0];\n\n\t\t\tif (arg instanceof Error) {\n\t\t\t\tconst array = Array.prototype.slice.call(arguments) as any[];\n\t\t\t\tarray[0] = arg.stack;\n\t\t\t\tthis._log(LogLevel.Error, format(array));\n\t\t\t} else {\n\t\t\t\tthis._log(LogLevel.Error, format(arguments));\n\t\t\t}\n\t\t}\n\t}\n\n\tcritical(): void {\n\t\tif (this.getLevel() <= LogLevel.Critical) {\n\t\t\tthis._log(LogLevel.Critical, format(arguments));\n\t\t}\n\t}\n\n\tflush(): void {\n\t}\n\n\tprivate async initialize(): Promise<void> {\n\t\ttry {\n\t\t\tawait this.fileService.createFile(this.resource);\n\t\t} catch (error) {\n\t\t\tif ((<FileOperationError>error).fileOperationResult !== FileOperationResult.FILE_MODIFIED_SINCE) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _log(level: LogLevel, message: string): void {\n\t\tthis.queue.queue(async () => {\n\t\t\tawait this.initializePromise;\n\t\t\tlet content = await this.loadContent();\n\t\t\tif (content.length > MAX_FILE_SIZE) {\n\t\t\t\tawait this.fileService.writeFile(this.getBackupResource(), VSBuffer.fromString(content));\n\t\t\t\tcontent = '';\n\t\t\t}\n\t\t\tif (this.donotUseFormatters) {\n\t\t\t\tcontent += message;\n\t\t\t} else {\n\t\t\t\tcontent += `[${this.getCurrentTimestamp()}] [${this.name}] [${this.stringifyLogLevel(level)}] ${message}\\n`;\n\t\t\t}\n\t\t\tawait this.fileService.writeFile(this.resource, VSBuffer.fromString(content));\n\t\t});\n\t}\n\n\tprivate getCurrentTimestamp(): string {\n\t\tconst toTwoDigits = (v: number) => v < 10 ? `0${v}` : v;\n\t\tconst toThreeDigits = (v: number) => v < 10 ? `00${v}` : v < 100 ? `0${v}` : v;\n\t\tconst currentTime = new Date();\n\t\treturn `${currentTime.getFullYear()}-${toTwoDigits(currentTime.getMonth() + 1)}-${toTwoDigits(currentTime.getDate())} ${toTwoDigits(currentTime.getHours())}:${toTwoDigits(currentTime.getMinutes())}:${toTwoDigits(currentTime.getSeconds())}.${toThreeDigits(currentTime.getMilliseconds())}`;\n\t}\n\n\tprivate getBackupResource(): URI {\n\t\tthis.backupIndex = this.backupIndex > 5 ? 1 : this.backupIndex;\n\t\treturn joinPath(dirname(this.resource), `${basename(this.resource)}_${this.backupIndex++}`);\n\t}\n\n\tprivate async loadContent(): Promise<string> {\n\t\ttry {\n\t\t\tconst content = await this.fileService.readFile(this.resource);\n\t\t\treturn content.value.toString();\n\t\t} catch (e) {\n\t\t\treturn '';\n\t\t}\n\t}\n\n\tprivate stringifyLogLevel(level: LogLevel): string {\n\t\tswitch (level) {\n\t\t\tcase LogLevel.Critical: return 'critical';\n\t\t\tcase LogLevel.Debug: return 'debug';\n\t\t\tcase LogLevel.Error: return 'error';\n\t\t\tcase LogLevel.Info: return 'info';\n\t\t\tcase LogLevel.Trace: return 'trace';\n\t\t\tcase LogLevel.Warning: return 'warning';\n\t\t}\n\t\treturn '';\n\t}\n\n}\n\nexport class FileLoggerService extends AbstractLoggerService implements ILoggerService {\n\n\tconstructor(\n\t\t@ILogService logService: ILogService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t) {\n\t\tsuper(logService.getLevel(), logService.onDidChangeLogLevel);\n\t}\n\n\tprotected doCreateLogger(resource: URI, logLevel: LogLevel, options?: ILoggerOptions): ILogger {\n\t\tconst logger = new BufferLogService(logLevel);\n\t\twhenProviderRegistered(resource, this.fileService).then(() => (<BufferLogService>logger).logger = this.instantiationService.createInstance(FileLogger, options?.name || basename(resource), resource, logger.getLevel(), !!options?.donotUseFormatters));\n\t\treturn logger;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { URI } from 'vs/base/common/uri';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { AbstractLoggerService, AbstractMessageLogger, AdapterLogger, ILogger, ILoggerOptions, ILoggerService, ILogService, log, LogLevel, LogService } from 'vs/platform/log/common/log';\n\nexport class LogLevelChannel implements IServerChannel {\n\n\tonDidChangeLogLevel: Event<LogLevel>;\n\n\tconstructor(private service: ILogService) {\n\t\tthis.onDidChangeLogLevel = Event.buffer(service.onDidChangeLogLevel, true);\n\t}\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'onDidChangeLogLevel': return this.onDidChangeLogLevel;\n\t\t}\n\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tasync call(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'setLevel': return this.service.setLevel(arg);\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n\n}\n\nexport class LogLevelChannelClient {\n\n\tconstructor(private channel: IChannel) { }\n\n\tget onDidChangeLogLevel(): Event<LogLevel> {\n\t\treturn this.channel.listen('onDidChangeLogLevel');\n\t}\n\n\tsetLevel(level: LogLevel): void {\n\t\tLogLevelChannelClient.setLevel(this.channel, level);\n\t}\n\n\tpublic static setLevel(channel: IChannel, level: LogLevel): Promise<void> {\n\t\treturn channel.call('setLevel', level);\n\t}\n\n}\n\nexport class LoggerChannel implements IServerChannel {\n\n\tprivate readonly loggers = new Map<string, ILogger>();\n\n\tconstructor(private readonly loggerService: ILoggerService) { }\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tasync call(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'createLogger': this.createLogger(URI.revive(arg[0]), arg[1]); return;\n\t\t\tcase 'log': return this.log(URI.revive(arg[0]), arg[1]);\n\t\t\tcase 'consoleLog': return this.consoleLog(arg[0], arg[1]);\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n\n\tprivate createLogger(file: URI, options: ILoggerOptions): void {\n\t\tthis.loggers.set(file.toString(), this.loggerService.createLogger(file, options));\n\t}\n\n\tprivate consoleLog(level: LogLevel, args: any[]): void {\n\t\tlet consoleFn = console.log;\n\n\t\tswitch (level) {\n\t\t\tcase LogLevel.Error:\n\t\t\t\tconsoleFn = console.error;\n\t\t\t\tbreak;\n\t\t\tcase LogLevel.Warning:\n\t\t\t\tconsoleFn = console.warn;\n\t\t\t\tbreak;\n\t\t\tcase LogLevel.Info:\n\t\t\t\tconsoleFn = console.info;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tconsoleFn.call(console, ...args);\n\t}\n\n\tprivate log(file: URI, messages: [LogLevel, string][]): void {\n\t\tconst logger = this.loggers.get(file.toString());\n\t\tif (!logger) {\n\t\t\tthrow new Error('Create the logger before logging');\n\t\t}\n\t\tfor (const [level, message] of messages) {\n\t\t\tlog(logger, level, message);\n\t\t}\n\t}\n}\n\nexport class LoggerChannelClient extends AbstractLoggerService implements ILoggerService {\n\n\tconstructor(logLevel: LogLevel, onDidChangeLogLevel: Event<LogLevel>, private readonly channel: IChannel) {\n\t\tsuper(logLevel, onDidChangeLogLevel);\n\t}\n\n\tcreateConsoleMainLogger(): ILogger {\n\t\treturn new AdapterLogger({\n\t\t\tlog: (level: LogLevel, args: any[]) => {\n\t\t\t\tthis.channel.call('consoleLog', [level, args]);\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected doCreateLogger(file: URI, logLevel: LogLevel, options?: ILoggerOptions): ILogger {\n\t\treturn new Logger(this.channel, file, logLevel, options);\n\t}\n\n}\n\nclass Logger extends AbstractMessageLogger {\n\n\tprivate isLoggerCreated: boolean = false;\n\tprivate buffer: [LogLevel, string][] = [];\n\n\tconstructor(\n\t\tprivate readonly channel: IChannel,\n\t\tprivate readonly file: URI,\n\t\tlogLevel: LogLevel,\n\t\tloggerOptions?: ILoggerOptions,\n\t) {\n\t\tsuper(loggerOptions?.always);\n\t\tthis.setLevel(logLevel);\n\t\tthis.channel.call('createLogger', [file, loggerOptions])\n\t\t\t.then(() => {\n\t\t\t\tthis.doLog(this.buffer);\n\t\t\t\tthis.isLoggerCreated = true;\n\t\t\t});\n\t}\n\n\tprotected log(level: LogLevel, message: string) {\n\t\tconst messages: [LogLevel, string][] = [[level, message]];\n\t\tif (this.isLoggerCreated) {\n\t\t\tthis.doLog(messages);\n\t\t} else {\n\t\t\tthis.buffer.push(...messages);\n\t\t}\n\t}\n\n\tprivate doLog(messages: [LogLevel, string][]) {\n\t\tthis.channel.call('log', [this.file, messages]);\n\t}\n}\n\nexport class FollowerLogService extends LogService implements ILogService {\n\n\tconstructor(private parent: LogLevelChannelClient, logService: ILogService) {\n\t\tsuper(logService);\n\t\tthis._register(parent.onDidChangeLogLevel(level => logService.setLevel(level)));\n\t}\n\n\toverride setLevel(level: LogLevel): void {\n\t\tsuper.setLevel(level);\n\n\t\tthis.parent.setLevel(level);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as spdlog from 'spdlog';\nimport { ByteSize } from 'vs/platform/files/common/files';\nimport { AbstractMessageLogger, ILogger, LogLevel } from 'vs/platform/log/common/log';\n\nasync function createSpdLogLogger(name: string, logfilePath: string, filesize: number, filecount: number, donotUseFormatters: boolean): Promise<spdlog.Logger | null> {\n\t// Do not crash if spdlog cannot be loaded\n\ttry {\n\t\tconst _spdlog = await import('spdlog');\n\t\t_spdlog.setFlushOn(LogLevel.Trace);\n\t\tconst logger = await _spdlog.createAsyncRotatingLogger(name, logfilePath, filesize, filecount);\n\t\tif (donotUseFormatters) {\n\t\t\tlogger.clearFormatters();\n\t\t}\n\t\treturn logger;\n\t} catch (e) {\n\t\tconsole.error(e);\n\t}\n\treturn null;\n}\n\ninterface ILog {\n\tlevel: LogLevel;\n\tmessage: string;\n}\n\nfunction log(logger: spdlog.Logger, level: LogLevel, message: string): void {\n\tswitch (level) {\n\t\tcase LogLevel.Trace: logger.trace(message); break;\n\t\tcase LogLevel.Debug: logger.debug(message); break;\n\t\tcase LogLevel.Info: logger.info(message); break;\n\t\tcase LogLevel.Warning: logger.warn(message); break;\n\t\tcase LogLevel.Error: logger.error(message); break;\n\t\tcase LogLevel.Critical: logger.critical(message); break;\n\t\tdefault: throw new Error('Invalid log level');\n\t}\n}\n\nexport class SpdLogLogger extends AbstractMessageLogger implements ILogger {\n\n\tprivate buffer: ILog[] = [];\n\tprivate readonly _loggerCreationPromise: Promise<void>;\n\tprivate _logger: spdlog.Logger | undefined;\n\n\tconstructor(\n\t\tname: string,\n\t\tfilepath: string,\n\t\trotating: boolean,\n\t\tdonotUseFormatters: boolean,\n\t\tlevel: LogLevel,\n\t) {\n\t\tsuper();\n\t\tthis.setLevel(level);\n\t\tthis._loggerCreationPromise = this._createSpdLogLogger(name, filepath, rotating, donotUseFormatters);\n\t\tthis._register(this.onDidChangeLogLevel(level => {\n\t\t\tif (this._logger) {\n\t\t\t\tthis._logger.setLevel(level);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate async _createSpdLogLogger(name: string, filepath: string, rotating: boolean, donotUseFormatters: boolean): Promise<void> {\n\t\tconst filecount = rotating ? 6 : 1;\n\t\tconst filesize = (30 / filecount) * ByteSize.MB;\n\t\tconst logger = await createSpdLogLogger(name, filepath, filesize, filecount, donotUseFormatters);\n\t\tif (logger) {\n\t\t\tthis._logger = logger;\n\t\t\tthis._logger.setLevel(this.getLevel());\n\t\t\tfor (const { level, message } of this.buffer) {\n\t\t\t\tlog(this._logger, level, message);\n\t\t\t}\n\t\t\tthis.buffer = [];\n\t\t}\n\t}\n\n\tprotected log(level: LogLevel, message: string): void {\n\t\tif (this._logger) {\n\t\t\tlog(this._logger, level, message);\n\t\t} else if (this.getLevel() <= level) {\n\t\t\tthis.buffer.push({ level, message });\n\t\t}\n\t}\n\n\toverride flush(): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.flush();\n\t\t} else {\n\t\t\tthis._loggerCreationPromise.then(() => this.flush());\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tif (this._logger) {\n\t\t\tthis.disposeLogger();\n\t\t} else {\n\t\t\tthis._loggerCreationPromise.then(() => this.disposeLogger());\n\t\t}\n\t}\n\n\tprivate disposeLogger(): void {\n\t\tif (this._logger) {\n\t\t\tthis._logger.drop();\n\t\t\tthis._logger = undefined;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Schemas } from 'vs/base/common/network';\nimport { basename } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { FileLogger } from 'vs/platform/log/common/fileLog';\nimport { AbstractLoggerService, ILogger, ILoggerOptions, ILoggerService, ILogService, LogLevel } from 'vs/platform/log/common/log';\nimport { SpdLogLogger } from 'vs/platform/log/node/spdlogLog';\n\nexport class LoggerService extends AbstractLoggerService implements ILoggerService {\n\n\tconstructor(\n\t\t@ILogService logService: ILogService,\n\t\t@IFileService private readonly fileService: IFileService\n\t) {\n\t\tsuper(logService.getLevel(), logService.onDidChangeLogLevel);\n\t}\n\n\tprotected doCreateLogger(resource: URI, logLevel: LogLevel, options?: ILoggerOptions): ILogger {\n\t\tif (resource.scheme === Schemas.file) {\n\t\t\treturn new SpdLogLogger(options?.name || generateUuid(), resource.fsPath, !options?.donotRotate, !!options?.donotUseFormatters, logLevel);\n\t\t} else {\n\t\t\treturn new FileLogger(options?.name ?? basename(resource), resource, logLevel, !!options?.donotUseFormatters, this.fileService);\n\t\t}\n\t}\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\n\nexport interface ICommonMenubarService {\n\tupdateMenubar(windowId: number, menuData: IMenubarData): Promise<void>;\n}\n\nexport interface IMenubarData {\n\tmenus: { [id: string]: IMenubarMenu };\n\tkeybindings: { [id: string]: IMenubarKeybinding };\n}\n\nexport interface IMenubarMenu {\n\titems: Array<MenubarMenuItem>;\n}\n\nexport interface IMenubarKeybinding {\n\tlabel: string;\n\tuserSettingsLabel?: string;\n\tisNative?: boolean; // Assumed true if missing\n}\n\nexport interface IMenubarMenuItemAction {\n\tid: string;\n\tlabel: string;\n\tchecked?: boolean; // Assumed false if missing\n\tenabled?: boolean; // Assumed true if missing\n}\n\nexport interface IMenubarMenuRecentItemAction {\n\tid: string;\n\tlabel: string;\n\turi: URI;\n\tremoteAuthority?: string;\n\tenabled?: boolean;\n}\n\nexport interface IMenubarMenuItemSubmenu {\n\tid: string;\n\tlabel: string;\n\tsubmenu: IMenubarMenu;\n}\n\nexport interface IMenubarMenuItemSeparator {\n\tid: 'vscode.menubar.separator';\n}\n\nexport type MenubarMenuItem = IMenubarMenuItemAction | IMenubarMenuItemSubmenu | IMenubarMenuItemSeparator | IMenubarMenuRecentItemAction;\n\nexport function isMenubarMenuItemSubmenu(menuItem: MenubarMenuItem): menuItem is IMenubarMenuItemSubmenu {\n\treturn (<IMenubarMenuItemSubmenu>menuItem).submenu !== undefined;\n}\n\nexport function isMenubarMenuItemSeparator(menuItem: MenubarMenuItem): menuItem is IMenubarMenuItemSeparator {\n\treturn (<IMenubarMenuItemSeparator>menuItem).id === 'vscode.menubar.separator';\n}\n\nexport function isMenubarMenuItemRecentAction(menuItem: MenubarMenuItem): menuItem is IMenubarMenuRecentItemAction {\n\treturn (<IMenubarMenuRecentItemAction>menuItem).uri !== undefined;\n}\n\nexport function isMenubarMenuItemAction(menuItem: MenubarMenuItem): menuItem is IMenubarMenuItemAction {\n\treturn !isMenubarMenuItemSubmenu(menuItem) && !isMenubarMenuItemSeparator(menuItem) && !isMenubarMenuItemRecentAction(menuItem);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { FileAccess } from 'vs/base/common/network';\nimport { globals } from 'vs/base/common/platform';\nimport { env } from 'vs/base/common/process';\nimport { IProductConfiguration } from 'vs/base/common/product';\nimport { dirname, joinPath } from 'vs/base/common/resources';\nimport { ISandboxConfiguration } from 'vs/base/parts/sandbox/common/sandboxTypes';\n\n/**\n * @deprecated You MUST use `IProductService` if possible.\n */\nlet product: IProductConfiguration;\n\n// Native sandbox environment\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.context !== 'undefined') {\n\tconst configuration: ISandboxConfiguration | undefined = globals.vscode.context.configuration();\n\tif (configuration) {\n\t\tproduct = configuration.product;\n\t} else {\n\t\tthrow new Error('Sandbox: unable to resolve product configuration from preload script.');\n\t}\n}\n\n// Native node.js environment\nelse if (typeof require?.__$__nodeRequire === 'function') {\n\n\t// Obtain values from product.json and package.json\n\tconst rootPath = dirname(FileAccess.asFileUri('', require));\n\n\tproduct = require.__$__nodeRequire(joinPath(rootPath, 'product.json').fsPath);\n\tconst pkg = require.__$__nodeRequire(joinPath(rootPath, 'package.json').fsPath) as { version: string; };\n\n\t// Running out of sources\n\tif (env['VSCODE_DEV']) {\n\t\tObject.assign(product, {\n\t\t\tnameShort: `${product.nameShort} Dev`,\n\t\t\tnameLong: `${product.nameLong} Dev`,\n\t\t\tdataFolderName: `${product.dataFolderName}-dev`\n\t\t});\n\t}\n\n\tObject.assign(product, {\n\t\tversion: pkg.version\n\t});\n}\n\n// Web environment or unknown\nelse {\n\n\t// Built time configuration (do NOT modify)\n\tproduct = { /*BUILD->INSERT_PRODUCT_CONFIGURATION*/ } as IProductConfiguration;\n\n\t// Running out of sources\n\tif (Object.keys(product).length === 0) {\n\t\tObject.assign(product, {\n\t\t\tversion: '1.63.0-dev',\n\t\t\tnameShort: 'OI Wiki Editor',\n\t\t\tnameLong: 'OI Wiki Editor',\n\t\t\tapplicationName: 'code-oss',\n\t\t\tdataFolderName: '.vscode-oss',\n\t\t\turlProtocol: 'code-oss',\n\t\t\treportIssueUrl: 'https://github.com/microsoft/vscode/issues/new',\n\t\t\tlicenseName: 'MIT',\n\t\t\tlicenseUrl: 'https://github.com/microsoft/vscode/blob/main/LICENSE.txt',\n\t\t\textensionAllowedProposedApi: [\n\t\t\t\t'ms-vscode.vscode-js-profile-flame',\n\t\t\t\t'ms-vscode.vscode-js-profile-table',\n\t\t\t\t'GitHub.remotehub',\n\t\t\t\t'GitHub.remotehub-insiders'\n\t\t\t],\n\t\t\textensionsGallery: {\n\t\t\t\tserviceUrl: \"https://marketplace.visualstudio.com/_apis/public/gallery\",\n\t\t\t\tcacheUrl: \"https://vscode.blob.core.windows.net/gallery/index\",\n\t\t\t\titemUrl: \"https://marketplace.visualstudio.com/items\"\n\t\t\t},\n\t\t});\n\t}\n}\n\n/**\n * @deprecated You MUST use `IProductService` if possible.\n */\nexport default product;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IProductConfiguration } from 'vs/base/common/product';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IProductService = createDecorator<IProductService>('productService');\n\nexport interface IProductService extends Readonly<IProductConfiguration> {\n\n\treadonly _serviceBrand: undefined;\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as crypto from 'crypto';\nimport { IExtensionUrlTrustService } from 'vs/platform/extensionManagement/common/extensionUrlTrust';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\n\nexport class ExtensionUrlTrustService implements IExtensionUrlTrustService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate trustedExtensionUrlPublicKeys = new Map<string, (crypto.KeyObject | string | null)[]>();\n\n\tconstructor(\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@ILogService private readonly logService: ILogService\n\t) { }\n\n\tasync isExtensionUrlTrusted(extensionId: string, url: string): Promise<boolean> {\n\t\tif (!this.productService.trustedExtensionUrlPublicKeys) {\n\t\t\tthis.logService.trace('ExtensionUrlTrustService#isExtensionUrlTrusted', 'There are no configured trusted keys');\n\t\t\treturn false;\n\t\t}\n\n\t\tconst match = /^(.*)#([^#]+)$/.exec(url);\n\n\t\tif (!match) {\n\t\t\tthis.logService.trace('ExtensionUrlTrustService#isExtensionUrlTrusted', 'Uri has no fragment', url);\n\t\t\treturn false;\n\t\t}\n\n\t\tconst [, originalUrl, fragment] = match;\n\n\t\tlet keys = this.trustedExtensionUrlPublicKeys.get(extensionId);\n\n\t\tif (!keys) {\n\t\t\tkeys = this.productService.trustedExtensionUrlPublicKeys[extensionId];\n\n\t\t\tif (!keys || keys.length === 0) {\n\t\t\t\tthis.logService.trace('ExtensionUrlTrustService#isExtensionUrlTrusted', 'Extension doesn\\'t have any trusted keys', extensionId);\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tthis.trustedExtensionUrlPublicKeys.set(extensionId, [...keys]);\n\t\t}\n\n\t\tconst fragmentBuffer = Buffer.from(decodeURIComponent(fragment), 'base64');\n\n\t\tif (fragmentBuffer.length <= 6) {\n\t\t\tthis.logService.trace('ExtensionUrlTrustService#isExtensionUrlTrusted', 'Uri fragment is not a signature', url);\n\t\t\treturn false;\n\t\t}\n\n\t\tconst timestampBuffer = fragmentBuffer.slice(0, 6);\n\t\tconst timestamp = fragmentBuffer.readUIntBE(0, 6);\n\t\tconst diff = Date.now() - timestamp;\n\n\t\tif (diff < 0 || diff > 3_600_000) { // 1 hour\n\t\t\tthis.logService.trace('ExtensionUrlTrustService#isExtensionUrlTrusted', 'Signed uri has expired', url);\n\t\t\treturn false;\n\t\t}\n\n\t\tconst signatureBuffer = fragmentBuffer.slice(6);\n\t\tconst verify = crypto.createVerify('SHA256');\n\t\tverify.write(timestampBuffer);\n\t\tverify.write(Buffer.from(originalUrl));\n\t\tverify.end();\n\n\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\tlet key = keys[i];\n\n\t\t\tif (key === null) { // failed to be parsed before\n\t\t\t\tcontinue;\n\t\t\t} else if (typeof key === 'string') { // needs to be parsed\n\t\t\t\ttry {\n\t\t\t\t\tkey = crypto.createPublicKey({ key: Buffer.from(key, 'base64'), format: 'der', type: 'spki' });\n\t\t\t\t\tkeys[i] = key;\n\t\t\t\t} catch (err) {\n\t\t\t\t\tthis.logService.warn('ExtensionUrlTrustService#isExtensionUrlTrusted', `Failed to parse trusted extension uri public key #${i + 1} for ${extensionId}:`, err);\n\t\t\t\t\tkeys[i] = null;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (verify.verify(key, signatureBuffer)) {\n\t\t\t\tthis.logService.trace('ExtensionUrlTrustService#isExtensionUrlTrusted', 'Signed uri is valid', url);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\tthis.logService.trace('ExtensionUrlTrustService#isExtensionUrlTrusted', 'Signed uri could not be verified', url);\n\t\treturn false;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IProtocolMainService = createDecorator<IProtocolMainService>('protocolMainService');\n\nexport interface IIPCObjectUrl<T> extends IDisposable {\n\n\t/**\n\t * A `URI` that a renderer can use to retrieve the\n\t * object via `ipcRenderer.invoke(resource.toString())`\n\t */\n\tresource: URI;\n\n\t/**\n\t * Allows to update the value of the object after it\n\t * has been created.\n\t *\n\t * @param obj the object to make accessible to the\n\t * renderer.\n\t */\n\tupdate(obj: T): void;\n}\n\nexport interface IProtocolMainService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Allows to make an object accessible to a renderer\n\t * via `ipcRenderer.invoke(resource.toString())`.\n\t */\n\tcreateIPCObjectUrl<T>(): IIPCObjectUrl<T>;\n\n\t/**\n\t * Adds a `URI` as root to the list of allowed\n\t * resources for file access.\n\t *\n\t * @param root the URI to allow for file access\n\t */\n\taddValidFileRoot(root: URI): IDisposable;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ipcMain, session } from 'electron';\nimport { Disposable, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { FileAccess, Schemas } from 'vs/base/common/network';\nimport { isLinux } from 'vs/base/common/platform';\nimport { extname } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IIPCObjectUrl, IProtocolMainService } from 'vs/platform/protocol/electron-main/protocol';\n\ntype ProtocolCallback = { (result: string | Electron.FilePathWithHeaders | { error: number }): void };\n\nexport class ProtocolMainService extends Disposable implements IProtocolMainService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly validRoots = TernarySearchTree.forUris<boolean>(() => !isLinux);\n\tprivate readonly validExtensions = new Set(['.svg', '.png', '.jpg', '.jpeg', '.gif', '.bmp']); // https://github.com/microsoft/vscode/issues/119384\n\n\tconstructor(\n\t\t@INativeEnvironmentService environmentService: INativeEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\n\t\t// Define an initial set of roots we allow loading from\n\t\t// - appRoot\t: all files installed as part of the app\n\t\t// - extensions : all files shipped from extensions\n\t\t// - storage    : all files in global and workspace storage (https://github.com/microsoft/vscode/issues/116735)\n\t\tthis.addValidFileRoot(URI.file(environmentService.appRoot));\n\t\tthis.addValidFileRoot(URI.file(environmentService.extensionsPath));\n\t\tthis.addValidFileRoot(environmentService.globalStorageHome);\n\t\tthis.addValidFileRoot(environmentService.workspaceStorageHome);\n\n\t\t// Handle protocols\n\t\tthis.handleProtocols();\n\t}\n\n\tprivate handleProtocols(): void {\n\t\tconst { defaultSession } = session;\n\n\t\t// Register vscode-file:// handler\n\t\tdefaultSession.protocol.registerFileProtocol(Schemas.vscodeFileResource, (request, callback) => this.handleResourceRequest(request, callback));\n\n\t\t// Block any file:// access\n\t\tdefaultSession.protocol.interceptFileProtocol(Schemas.file, (request, callback) => this.handleFileRequest(request, callback));\n\n\t\t// Cleanup\n\t\tthis._register(toDisposable(() => {\n\t\t\tdefaultSession.protocol.unregisterProtocol(Schemas.vscodeFileResource);\n\t\t\tdefaultSession.protocol.uninterceptProtocol(Schemas.file);\n\t\t}));\n\t}\n\n\taddValidFileRoot(root: URI): IDisposable {\n\t\tif (!this.validRoots.get(root)) {\n\t\t\tthis.validRoots.set(root, true);\n\n\t\t\treturn toDisposable(() => this.validRoots.delete(root));\n\t\t}\n\n\t\treturn Disposable.None;\n\t}\n\n\t//#region file://\n\n\tprivate handleFileRequest(request: Electron.ProtocolRequest, callback: ProtocolCallback) {\n\t\tconst uri = URI.parse(request.url);\n\n\t\tthis.logService.error(`Refused to load resource ${uri.fsPath} from ${Schemas.file}: protocol (original URL: ${request.url})`);\n\n\t\treturn callback({ error: -3 /* ABORTED */ });\n\t}\n\n\t//#endregion\n\n\t//#region vscode-file://\n\n\tprivate handleResourceRequest(request: Electron.ProtocolRequest, callback: ProtocolCallback): void {\n\t\tconst uri = URI.parse(request.url);\n\n\t\t// Restore the `vscode-file` URI to a `file` URI so that we can\n\t\t// ensure the root is valid and properly tell Chrome where the\n\t\t// resource is at.\n\t\tconst fileUri = FileAccess.asFileUri(uri);\n\n\t\t// first check by validRoots\n\t\tif (this.validRoots.findSubstr(fileUri)) {\n\t\t\treturn callback({\n\t\t\t\tpath: fileUri.fsPath\n\t\t\t});\n\t\t}\n\n\t\t// then check by validExtensions\n\t\tif (this.validExtensions.has(extname(fileUri))) {\n\t\t\treturn callback({\n\t\t\t\tpath: fileUri.fsPath\n\t\t\t});\n\t\t}\n\n\t\t// finally block to load the resource\n\t\tthis.logService.error(`${Schemas.vscodeFileResource}: Refused to load resource ${fileUri.fsPath} from ${Schemas.vscodeFileResource}: protocol (original URL: ${request.url})`);\n\n\t\treturn callback({ error: -3 /* ABORTED */ });\n\t}\n\n\t//#endregion\n\n\t//#region IPC Object URLs\n\n\tcreateIPCObjectUrl<T>(): IIPCObjectUrl<T> {\n\t\tlet obj: T | undefined = undefined;\n\n\t\t// Create unique URI\n\t\tconst resource = URI.from({\n\t\t\tscheme: 'vscode', // used for all our IPC communication (vscode:<channel>)\n\t\t\tpath: generateUuid()\n\t\t});\n\n\t\t// Install IPC handler\n\t\tconst channel = resource.toString();\n\t\tconst handler = async (): Promise<T | undefined> => obj;\n\t\tipcMain.handle(channel, handler);\n\n\t\tthis.logService.trace(`IPC Object URL: Registered new channel ${channel}.`);\n\n\t\treturn {\n\t\t\tresource,\n\t\t\tupdate: updatedObj => obj = updatedObj,\n\t\t\tdispose: () => {\n\t\t\t\tthis.logService.trace(`IPC Object URL: Removed channel ${channel}.`);\n\n\t\t\t\tipcMain.removeHandler(channel);\n\t\t\t}\n\t\t};\n\t}\n\n\t//#endregion\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as Assert from 'vs/base/common/assert';\nimport * as Types from 'vs/base/common/types';\n\nexport interface IRegistry {\n\n\t/**\n\t * Adds the extension functions and properties defined by data to the\n\t * platform. The provided id must be unique.\n\t * @param id a unique identifier\n\t * @param data a contribution\n\t */\n\tadd(id: string, data: any): void;\n\n\t/**\n\t * Returns true iff there is an extension with the provided id.\n\t * @param id an extension identifier\n\t */\n\tknows(id: string): boolean;\n\n\t/**\n\t * Returns the extension functions and properties defined by the specified key or null.\n\t * @param id an extension identifier\n\t */\n\tas<T>(id: string): T;\n}\n\nclass RegistryImpl implements IRegistry {\n\n\tprivate readonly data = new Map<string, any>();\n\n\tpublic add(id: string, data: any): void {\n\t\tAssert.ok(Types.isString(id));\n\t\tAssert.ok(Types.isObject(data));\n\t\tAssert.ok(!this.data.has(id), 'There is already an extension with this id');\n\n\t\tthis.data.set(id, data);\n\t}\n\n\tpublic knows(id: string): boolean {\n\t\treturn this.data.has(id);\n\t}\n\n\tpublic as(id: string): any {\n\t\treturn this.data.get(id) || null;\n\t}\n}\n\nexport const Registry: IRegistry = new RegistryImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport * as platform from 'vs/platform/registry/common/platform';\n\nexport const Extensions = {\n\tJSONContribution: 'base.contributions.json'\n};\n\nexport interface ISchemaContributions {\n\tschemas: { [id: string]: IJSONSchema };\n}\n\nexport interface IJSONContributionRegistry {\n\n\treadonly onDidChangeSchema: Event<string>;\n\n\t/**\n\t * Register a schema to the registry.\n\t */\n\tregisterSchema(uri: string, unresolvedSchemaContent: IJSONSchema): void;\n\n\n\t/**\n\t * Notifies all listeners that the content of the given schema has changed.\n\t * @param uri The id of the schema\n\t */\n\tnotifySchemaChanged(uri: string): void;\n\n\t/**\n\t * Get all schemas\n\t */\n\tgetSchemaContributions(): ISchemaContributions;\n}\n\n\n\nfunction normalizeId(id: string) {\n\tif (id.length > 0 && id.charAt(id.length - 1) === '#') {\n\t\treturn id.substring(0, id.length - 1);\n\t}\n\treturn id;\n}\n\n\n\nclass JSONContributionRegistry implements IJSONContributionRegistry {\n\n\tprivate schemasById: { [id: string]: IJSONSchema };\n\n\tprivate readonly _onDidChangeSchema = new Emitter<string>();\n\treadonly onDidChangeSchema: Event<string> = this._onDidChangeSchema.event;\n\n\tconstructor() {\n\t\tthis.schemasById = {};\n\t}\n\n\tpublic registerSchema(uri: string, unresolvedSchemaContent: IJSONSchema): void {\n\t\tthis.schemasById[normalizeId(uri)] = unresolvedSchemaContent;\n\t\tthis._onDidChangeSchema.fire(uri);\n\t}\n\n\tpublic notifySchemaChanged(uri: string): void {\n\t\tthis._onDidChangeSchema.fire(uri);\n\t}\n\n\tpublic getSchemaContributions(): ISchemaContributions {\n\t\treturn {\n\t\t\tschemas: this.schemasById,\n\t\t};\n\t}\n\n}\n\nconst jsonContributionRegistry = new JSONContributionRegistry();\nplatform.Registry.add(Extensions.JSONContribution, jsonContributionRegistry);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { distinct } from 'vs/base/common/arrays';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport * as types from 'vs/base/common/types';\nimport * as nls from 'vs/nls';\nimport { Extensions as JSONExtensions, IJSONContributionRegistry } from 'vs/platform/jsonschemas/common/jsonContributionRegistry';\nimport { Registry } from 'vs/platform/registry/common/platform';\n\nexport enum EditPresentationTypes {\n\tMultiline = 'multilineText',\n\tSingleline = 'singlelineText'\n}\n\nexport const Extensions = {\n\tConfiguration: 'base.contributions.configuration'\n};\n\nexport interface IConfigurationRegistry {\n\n\t/**\n\t * Register a configuration to the registry.\n\t */\n\tregisterConfiguration(configuration: IConfigurationNode): void;\n\n\t/**\n\t * Register multiple configurations to the registry.\n\t */\n\tregisterConfigurations(configurations: IConfigurationNode[], validate?: boolean): void;\n\n\t/**\n\t * Deregister multiple configurations from the registry.\n\t */\n\tderegisterConfigurations(configurations: IConfigurationNode[]): void;\n\n\t/**\n\t * update the configuration registry by\n\t * \t- registering the configurations to add\n\t * \t- dereigstering the configurations to remove\n\t */\n\tupdateConfigurations(configurations: { add: IConfigurationNode[], remove: IConfigurationNode[] }): void;\n\n\t/**\n\t * Register multiple default configurations to the registry.\n\t */\n\tregisterDefaultConfigurations(defaultConfigurations: IConfigurationDefaults[]): void;\n\n\t/**\n\t * Deregister multiple default configurations from the registry.\n\t */\n\tderegisterDefaultConfigurations(defaultConfigurations: IConfigurationDefaults[]): void;\n\n\t/**\n\t * Return the registered configuration defaults overrides\n\t */\n\tgetConfigurationDefaultsOverrides(): Map<string, IConfigurationDefaultOverride>;\n\n\t/**\n\t * Signal that the schema of a configuration setting has changes. It is currently only supported to change enumeration values.\n\t * Property or default value changes are not allowed.\n\t */\n\tnotifyConfigurationSchemaUpdated(...configurations: IConfigurationNode[]): void;\n\n\t/**\n\t * Event that fires whenver a configuration has been\n\t * registered.\n\t */\n\treadonly onDidSchemaChange: Event<void>;\n\n\t/**\n\t * Event that fires whenver a configuration has been\n\t * registered.\n\t */\n\treadonly onDidUpdateConfiguration: Event<{ properties: string[], defaultsOverrides?: boolean }>;\n\n\t/**\n\t * Returns all configuration nodes contributed to this registry.\n\t */\n\tgetConfigurations(): IConfigurationNode[];\n\n\t/**\n\t * Returns all configurations settings of all configuration nodes contributed to this registry.\n\t */\n\tgetConfigurationProperties(): IStringDictionary<IRegisteredConfigurationPropertySchema>;\n\n\t/**\n\t * Returns all excluded configurations settings of all configuration nodes contributed to this registry.\n\t */\n\tgetExcludedConfigurationProperties(): IStringDictionary<IRegisteredConfigurationPropertySchema>;\n\n\t/**\n\t * Register the identifiers for editor configurations\n\t */\n\tregisterOverrideIdentifiers(identifiers: string[]): void;\n}\n\nexport const enum ConfigurationScope {\n\t/**\n\t * Application specific configuration, which can be configured only in local user settings.\n\t */\n\tAPPLICATION = 1,\n\t/**\n\t * Machine specific configuration, which can be configured only in local and remote user settings.\n\t */\n\tMACHINE,\n\t/**\n\t * Window specific configuration, which can be configured in the user or workspace settings.\n\t */\n\tWINDOW,\n\t/**\n\t * Resource specific configuration, which can be configured in the user, workspace or folder settings.\n\t */\n\tRESOURCE,\n\t/**\n\t * Resource specific configuration that can be configured in language specific settings\n\t */\n\tLANGUAGE_OVERRIDABLE,\n\t/**\n\t * Machine specific configuration that can also be configured in workspace or folder settings.\n\t */\n\tMACHINE_OVERRIDABLE,\n}\n\nexport interface IConfigurationPropertySchema extends IJSONSchema {\n\n\tscope?: ConfigurationScope;\n\n\t/**\n\t * When restricted, value of this configuration will be read only from trusted sources.\n\t * For eg., If the workspace is not trusted, then the value of this configuration is not read from workspace settings file.\n\t */\n\trestricted?: boolean;\n\n\t/**\n\t * When `false` this property is excluded from the registry. Default is to include.\n\t */\n\tincluded?: boolean;\n\n\t/**\n\t * List of tags associated to the property.\n\t *  - A tag can be used for filtering\n\t *  - Use `experimental` tag for marking the setting as experimental. **Note:** Defaults of experimental settings can be changed by the running experiments.\n\t */\n\ttags?: string[];\n\n\t/**\n\t * When enabled this setting is ignored during sync and user can override this.\n\t */\n\tignoreSync?: boolean;\n\n\t/**\n\t * When enabled this setting is ignored during sync and user cannot override this.\n\t */\n\tdisallowSyncIgnore?: boolean;\n\n\t/**\n\t * Labels for enumeration items\n\t */\n\tenumItemLabels?: string[];\n\n\t/**\n\t * When specified, controls the presentation format of string settings.\n\t * Otherwise, the presentation format defaults to `singleline`.\n\t */\n\teditPresentation?: EditPresentationTypes;\n\n\t/**\n\t * When specified, gives an order number for the setting\n\t * within the settings editor. Otherwise, the setting is placed at the end.\n\t */\n\torder?: number;\n}\n\nexport interface IExtensionInfo {\n\tid: string;\n\tdisplayName?: string;\n}\n\nexport interface IConfigurationNode {\n\tid?: string;\n\torder?: number;\n\ttype?: string | string[];\n\ttitle?: string;\n\tdescription?: string;\n\tproperties?: IStringDictionary<IConfigurationPropertySchema>;\n\tallOf?: IConfigurationNode[];\n\tscope?: ConfigurationScope;\n\textensionInfo?: IExtensionInfo;\n\trestrictedProperties?: string[];\n}\n\nexport interface IConfigurationDefaults {\n\toverrides: IStringDictionary<any>;\n\tsource?: IExtensionInfo | string;\n}\n\nexport type IRegisteredConfigurationPropertySchema = IConfigurationPropertySchema & {\n\tdefaultDefaultValue?: any,\n\tsource?: IExtensionInfo,\n\tdefaultValueSource?: IExtensionInfo | string;\n};\n\nexport type IConfigurationDefaultOverride = { value: any, source?: IExtensionInfo | string };\n\nexport const allSettings: { properties: IStringDictionary<IConfigurationPropertySchema>, patternProperties: IStringDictionary<IConfigurationPropertySchema> } = { properties: {}, patternProperties: {} };\nexport const applicationSettings: { properties: IStringDictionary<IConfigurationPropertySchema>, patternProperties: IStringDictionary<IConfigurationPropertySchema> } = { properties: {}, patternProperties: {} };\nexport const machineSettings: { properties: IStringDictionary<IConfigurationPropertySchema>, patternProperties: IStringDictionary<IConfigurationPropertySchema> } = { properties: {}, patternProperties: {} };\nexport const machineOverridableSettings: { properties: IStringDictionary<IConfigurationPropertySchema>, patternProperties: IStringDictionary<IConfigurationPropertySchema> } = { properties: {}, patternProperties: {} };\nexport const windowSettings: { properties: IStringDictionary<IConfigurationPropertySchema>, patternProperties: IStringDictionary<IConfigurationPropertySchema> } = { properties: {}, patternProperties: {} };\nexport const resourceSettings: { properties: IStringDictionary<IConfigurationPropertySchema>, patternProperties: IStringDictionary<IConfigurationPropertySchema> } = { properties: {}, patternProperties: {} };\n\nexport const resourceLanguageSettingsSchemaId = 'vscode://schemas/settings/resourceLanguage';\nexport const configurationDefaultsSchemaId = 'vscode://schemas/settings/configurationDefaults';\n\nconst contributionRegistry = Registry.as<IJSONContributionRegistry>(JSONExtensions.JSONContribution);\n\nclass ConfigurationRegistry implements IConfigurationRegistry {\n\n\tprivate readonly configurationDefaultsOverrides: Map<string, IConfigurationDefaultOverride>;\n\tprivate readonly defaultLanguageConfigurationOverridesNode: IConfigurationNode;\n\tprivate readonly configurationContributors: IConfigurationNode[];\n\tprivate readonly configurationProperties: IStringDictionary<IRegisteredConfigurationPropertySchema>;\n\tprivate readonly excludedConfigurationProperties: IStringDictionary<IRegisteredConfigurationPropertySchema>;\n\tprivate readonly resourceLanguageSettingsSchema: IJSONSchema;\n\tprivate readonly overrideIdentifiers = new Set<string>();\n\n\tprivate readonly _onDidSchemaChange = new Emitter<void>();\n\treadonly onDidSchemaChange: Event<void> = this._onDidSchemaChange.event;\n\n\tprivate readonly _onDidUpdateConfiguration = new Emitter<{ properties: string[], defaultsOverrides?: boolean }>();\n\treadonly onDidUpdateConfiguration = this._onDidUpdateConfiguration.event;\n\n\tconstructor() {\n\t\tthis.configurationDefaultsOverrides = new Map<string, IConfigurationDefaultOverride>();\n\t\tthis.defaultLanguageConfigurationOverridesNode = {\n\t\t\tid: 'defaultOverrides',\n\t\t\ttitle: nls.localize('defaultLanguageConfigurationOverrides.title', \"Default Language Configuration Overrides\"),\n\t\t\tproperties: {}\n\t\t};\n\t\tthis.configurationContributors = [this.defaultLanguageConfigurationOverridesNode];\n\t\tthis.resourceLanguageSettingsSchema = { properties: {}, patternProperties: {}, additionalProperties: false, errorMessage: 'Unknown editor configuration setting', allowTrailingCommas: true, allowComments: true };\n\t\tthis.configurationProperties = {};\n\t\tthis.excludedConfigurationProperties = {};\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t\tthis.registerOverridePropertyPatternKey();\n\t}\n\n\tpublic registerConfiguration(configuration: IConfigurationNode, validate: boolean = true): void {\n\t\tthis.registerConfigurations([configuration], validate);\n\t}\n\n\tpublic registerConfigurations(configurations: IConfigurationNode[], validate: boolean = true): void {\n\t\tconst properties = this.doRegisterConfigurations(configurations, validate);\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire({ properties });\n\t}\n\n\tpublic deregisterConfigurations(configurations: IConfigurationNode[]): void {\n\t\tconst properties = this.doDeregisterConfigurations(configurations);\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire({ properties });\n\t}\n\n\tpublic updateConfigurations({ add, remove }: { add: IConfigurationNode[], remove: IConfigurationNode[] }): void {\n\t\tconst properties = [];\n\t\tproperties.push(...this.doDeregisterConfigurations(remove));\n\t\tproperties.push(...this.doRegisterConfigurations(add, false));\n\n\t\tcontributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire({ properties: distinct(properties) });\n\t}\n\n\tpublic registerDefaultConfigurations(configurationDefaults: IConfigurationDefaults[]): void {\n\t\tconst properties: string[] = [];\n\t\tconst overrideIdentifiers: string[] = [];\n\n\t\tfor (const { overrides, source } of configurationDefaults) {\n\t\t\tfor (const key in overrides) {\n\t\t\t\tproperties.push(key);\n\n\t\t\t\tif (OVERRIDE_PROPERTY_REGEX.test(key)) {\n\t\t\t\t\tconst defaultValue = { ...(this.configurationDefaultsOverrides.get(key)?.value || {}), ...overrides[key] };\n\t\t\t\t\tthis.configurationDefaultsOverrides.set(key, { source, value: defaultValue });\n\t\t\t\t\tconst property: IRegisteredConfigurationPropertySchema = {\n\t\t\t\t\t\ttype: 'object',\n\t\t\t\t\t\tdefault: defaultValue,\n\t\t\t\t\t\tdescription: nls.localize('defaultLanguageConfiguration.description', \"Configure settings to be overridden for {0} language.\", key),\n\t\t\t\t\t\t$ref: resourceLanguageSettingsSchemaId,\n\t\t\t\t\t\tdefaultDefaultValue: defaultValue,\n\t\t\t\t\t\tsource: types.isString(source) ? undefined : source,\n\t\t\t\t\t};\n\t\t\t\t\toverrideIdentifiers.push(...overrideIdentifiersFromKey(key));\n\t\t\t\t\tthis.configurationProperties[key] = property;\n\t\t\t\t\tthis.defaultLanguageConfigurationOverridesNode.properties![key] = property;\n\t\t\t\t} else {\n\t\t\t\t\tthis.configurationDefaultsOverrides.set(key, { value: overrides[key], source });\n\t\t\t\t\tconst property = this.configurationProperties[key];\n\t\t\t\t\tif (property) {\n\t\t\t\t\t\tthis.updatePropertyDefaultValue(key, property);\n\t\t\t\t\t\tthis.updateSchema(key, property);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.registerOverrideIdentifiers(overrideIdentifiers);\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire({ properties, defaultsOverrides: true });\n\t}\n\n\tpublic deregisterDefaultConfigurations(defaultConfigurations: IConfigurationDefaults[]): void {\n\t\tconst properties: string[] = [];\n\t\tfor (const { overrides, source } of defaultConfigurations) {\n\t\t\tfor (const key in overrides) {\n\t\t\t\tconst configurationDefaultsOverride = this.configurationDefaultsOverrides.get(key);\n\t\t\t\tconst id = types.isString(source) ? source : source?.id;\n\t\t\t\tconst configurationDefaultsOverrideSourceId = types.isString(configurationDefaultsOverride?.source) ? configurationDefaultsOverride?.source : configurationDefaultsOverride?.source?.id;\n\t\t\t\tif (id !== configurationDefaultsOverrideSourceId) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tproperties.push(key);\n\t\t\t\tthis.configurationDefaultsOverrides.delete(key);\n\t\t\t\tif (OVERRIDE_PROPERTY_REGEX.test(key)) {\n\t\t\t\t\tdelete this.configurationProperties[key];\n\t\t\t\t\tdelete this.defaultLanguageConfigurationOverridesNode.properties![key];\n\t\t\t\t} else {\n\t\t\t\t\tconst property = this.configurationProperties[key];\n\t\t\t\t\tif (property) {\n\t\t\t\t\t\tthis.updatePropertyDefaultValue(key, property);\n\t\t\t\t\t\tthis.updateSchema(key, property);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.updateOverridePropertyPatternKey();\n\t\tthis._onDidSchemaChange.fire();\n\t\tthis._onDidUpdateConfiguration.fire({ properties, defaultsOverrides: true });\n\t}\n\n\tpublic notifyConfigurationSchemaUpdated(...configurations: IConfigurationNode[]) {\n\t\tthis._onDidSchemaChange.fire();\n\t}\n\n\tpublic registerOverrideIdentifiers(overrideIdentifiers: string[]): void {\n\t\tfor (const overrideIdentifier of overrideIdentifiers) {\n\t\t\tthis.overrideIdentifiers.add(overrideIdentifier);\n\t\t}\n\t\tthis.updateOverridePropertyPatternKey();\n\t}\n\n\tprivate doRegisterConfigurations(configurations: IConfigurationNode[], validate: boolean): string[] {\n\t\tconst properties: string[] = [];\n\t\tconfigurations.forEach(configuration => {\n\t\t\tproperties.push(...this.validateAndRegisterProperties(configuration, validate, configuration.extensionInfo, configuration.restrictedProperties)); // fills in defaults\n\t\t\tthis.configurationContributors.push(configuration);\n\t\t\tthis.registerJSONConfiguration(configuration);\n\t\t});\n\t\treturn properties;\n\t}\n\n\tprivate doDeregisterConfigurations(configurations: IConfigurationNode[]): string[] {\n\t\tconst properties: string[] = [];\n\t\tconst deregisterConfiguration = (configuration: IConfigurationNode) => {\n\t\t\tif (configuration.properties) {\n\t\t\t\tfor (const key in configuration.properties) {\n\t\t\t\t\tproperties.push(key);\n\t\t\t\t\tdelete this.configurationProperties[key];\n\t\t\t\t\tthis.removeFromSchema(key, configuration.properties[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (configuration.allOf) {\n\t\t\t\tconfiguration.allOf.forEach(node => deregisterConfiguration(node));\n\t\t\t}\n\t\t};\n\t\tfor (const configuration of configurations) {\n\t\t\tderegisterConfiguration(configuration);\n\t\t\tconst index = this.configurationContributors.indexOf(configuration);\n\t\t\tif (index !== -1) {\n\t\t\t\tthis.configurationContributors.splice(index, 1);\n\t\t\t}\n\t\t}\n\t\treturn properties;\n\t}\n\n\tprivate validateAndRegisterProperties(configuration: IConfigurationNode, validate: boolean = true, extensionInfo: IExtensionInfo | undefined, restrictedProperties: string[] | undefined, scope: ConfigurationScope = ConfigurationScope.WINDOW): string[] {\n\t\tscope = types.isUndefinedOrNull(configuration.scope) ? scope : configuration.scope;\n\t\tlet propertyKeys: string[] = [];\n\t\tlet properties = configuration.properties;\n\t\tif (properties) {\n\t\t\tfor (let key in properties) {\n\t\t\t\tif (validate && validateProperty(key)) {\n\t\t\t\t\tdelete properties[key];\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst property: IRegisteredConfigurationPropertySchema = properties[key];\n\t\t\t\tproperty.source = extensionInfo;\n\n\t\t\t\t// update default value\n\t\t\t\tproperty.defaultDefaultValue = properties[key].default;\n\t\t\t\tthis.updatePropertyDefaultValue(key, property);\n\n\t\t\t\t// update scope\n\t\t\t\tif (OVERRIDE_PROPERTY_REGEX.test(key)) {\n\t\t\t\t\tproperty.scope = undefined; // No scope for overridable properties `[${identifier}]`\n\t\t\t\t} else {\n\t\t\t\t\tproperty.scope = types.isUndefinedOrNull(property.scope) ? scope : property.scope;\n\t\t\t\t\tproperty.restricted = types.isUndefinedOrNull(property.restricted) ? !!restrictedProperties?.includes(key) : property.restricted;\n\t\t\t\t}\n\n\t\t\t\t// Add to properties maps\n\t\t\t\t// Property is included by default if 'included' is unspecified\n\t\t\t\tif (properties[key].hasOwnProperty('included') && !properties[key].included) {\n\t\t\t\t\tthis.excludedConfigurationProperties[key] = properties[key];\n\t\t\t\t\tdelete properties[key];\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tthis.configurationProperties[key] = properties[key];\n\t\t\t\t}\n\n\t\t\t\tif (!properties[key].deprecationMessage && properties[key].markdownDeprecationMessage) {\n\t\t\t\t\t// If not set, default deprecationMessage to the markdown source\n\t\t\t\t\tproperties[key].deprecationMessage = properties[key].markdownDeprecationMessage;\n\t\t\t\t}\n\n\t\t\t\tpropertyKeys.push(key);\n\t\t\t}\n\t\t}\n\t\tlet subNodes = configuration.allOf;\n\t\tif (subNodes) {\n\t\t\tfor (let node of subNodes) {\n\t\t\t\tpropertyKeys.push(...this.validateAndRegisterProperties(node, validate, extensionInfo, restrictedProperties, scope));\n\t\t\t}\n\t\t}\n\t\treturn propertyKeys;\n\t}\n\n\t// TODO: @sandy081 - Remove this method and include required info in getConfigurationProperties\n\tgetConfigurations(): IConfigurationNode[] {\n\t\treturn this.configurationContributors;\n\t}\n\n\tgetConfigurationProperties(): IStringDictionary<IRegisteredConfigurationPropertySchema> {\n\t\treturn this.configurationProperties;\n\t}\n\n\tgetExcludedConfigurationProperties(): IStringDictionary<IRegisteredConfigurationPropertySchema> {\n\t\treturn this.excludedConfigurationProperties;\n\t}\n\n\tgetConfigurationDefaultsOverrides(): Map<string, IConfigurationDefaultOverride> {\n\t\treturn this.configurationDefaultsOverrides;\n\t}\n\n\tprivate registerJSONConfiguration(configuration: IConfigurationNode) {\n\t\tconst register = (configuration: IConfigurationNode) => {\n\t\t\tlet properties = configuration.properties;\n\t\t\tif (properties) {\n\t\t\t\tfor (const key in properties) {\n\t\t\t\t\tthis.updateSchema(key, properties[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet subNodes = configuration.allOf;\n\t\t\tif (subNodes) {\n\t\t\t\tsubNodes.forEach(register);\n\t\t\t}\n\t\t};\n\t\tregister(configuration);\n\t}\n\n\tprivate updateSchema(key: string, property: IConfigurationPropertySchema): void {\n\t\tallSettings.properties[key] = property;\n\t\tswitch (property.scope) {\n\t\t\tcase ConfigurationScope.APPLICATION:\n\t\t\t\tapplicationSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.MACHINE:\n\t\t\t\tmachineSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.MACHINE_OVERRIDABLE:\n\t\t\t\tmachineOverridableSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.WINDOW:\n\t\t\t\twindowSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.RESOURCE:\n\t\t\t\tresourceSettings.properties[key] = property;\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.LANGUAGE_OVERRIDABLE:\n\t\t\t\tresourceSettings.properties[key] = property;\n\t\t\t\tthis.resourceLanguageSettingsSchema.properties![key] = property;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate removeFromSchema(key: string, property: IConfigurationPropertySchema): void {\n\t\tdelete allSettings.properties[key];\n\t\tswitch (property.scope) {\n\t\t\tcase ConfigurationScope.APPLICATION:\n\t\t\t\tdelete applicationSettings.properties[key];\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.MACHINE:\n\t\t\t\tdelete machineSettings.properties[key];\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.MACHINE_OVERRIDABLE:\n\t\t\t\tdelete machineOverridableSettings.properties[key];\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.WINDOW:\n\t\t\t\tdelete windowSettings.properties[key];\n\t\t\t\tbreak;\n\t\t\tcase ConfigurationScope.RESOURCE:\n\t\t\tcase ConfigurationScope.LANGUAGE_OVERRIDABLE:\n\t\t\t\tdelete resourceSettings.properties[key];\n\t\t\t\tdelete this.resourceLanguageSettingsSchema.properties![key];\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate updateOverridePropertyPatternKey(): void {\n\t\tfor (const overrideIdentifier of this.overrideIdentifiers.values()) {\n\t\t\tconst overrideIdentifierProperty = `[${overrideIdentifier}]`;\n\t\t\tconst resourceLanguagePropertiesSchema: IJSONSchema = {\n\t\t\t\ttype: 'object',\n\t\t\t\tdescription: nls.localize('overrideSettings.defaultDescription', \"Configure editor settings to be overridden for a language.\"),\n\t\t\t\terrorMessage: nls.localize('overrideSettings.errorMessage', \"This setting does not support per-language configuration.\"),\n\t\t\t\t$ref: resourceLanguageSettingsSchemaId,\n\t\t\t};\n\t\t\tthis.updatePropertyDefaultValue(overrideIdentifierProperty, resourceLanguagePropertiesSchema);\n\t\t\tallSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tapplicationSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tmachineSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tmachineOverridableSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\twindowSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t\tresourceSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n\t\t}\n\t\tthis._onDidSchemaChange.fire();\n\t}\n\n\tprivate registerOverridePropertyPatternKey(): void {\n\t\tconst resourceLanguagePropertiesSchema: IJSONSchema = {\n\t\t\ttype: 'object',\n\t\t\tdescription: nls.localize('overrideSettings.defaultDescription', \"Configure editor settings to be overridden for a language.\"),\n\t\t\terrorMessage: nls.localize('overrideSettings.errorMessage', \"This setting does not support per-language configuration.\"),\n\t\t\t$ref: resourceLanguageSettingsSchemaId,\n\t\t};\n\t\tallSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n\t\tapplicationSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n\t\tmachineSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n\t\tmachineOverridableSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n\t\twindowSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n\t\tresourceSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n\t\tthis._onDidSchemaChange.fire();\n\t}\n\n\tprivate updatePropertyDefaultValue(key: string, property: IRegisteredConfigurationPropertySchema): void {\n\t\tconst configurationdefaultOverride = this.configurationDefaultsOverrides.get(key);\n\t\tlet defaultValue = configurationdefaultOverride?.value;\n\t\tlet defaultSource = configurationdefaultOverride?.source;\n\t\tif (types.isUndefined(defaultValue)) {\n\t\t\tdefaultValue = property.defaultDefaultValue;\n\t\t\tdefaultSource = undefined;\n\t\t}\n\t\tif (types.isUndefined(defaultValue)) {\n\t\t\tdefaultValue = getDefaultValue(property.type);\n\t\t}\n\t\tproperty.default = defaultValue;\n\t\tproperty.defaultValueSource = defaultSource;\n\t}\n}\n\nconst OVERRIDE_IDENTIFIER_PATTERN = `\\\\[([^\\\\]]+)\\\\]`;\nconst OVERRIDE_IDENTIFIER_REGEX = new RegExp(OVERRIDE_IDENTIFIER_PATTERN, 'g');\nexport const OVERRIDE_PROPERTY_PATTERN = `^(${OVERRIDE_IDENTIFIER_PATTERN})+$`;\nexport const OVERRIDE_PROPERTY_REGEX = new RegExp(OVERRIDE_PROPERTY_PATTERN);\n\nexport function overrideIdentifiersFromKey(key: string): string[] {\n\tconst identifiers: string[] = [];\n\tif (OVERRIDE_PROPERTY_REGEX.test(key)) {\n\t\tlet matches = OVERRIDE_IDENTIFIER_REGEX.exec(key);\n\t\twhile (matches?.length) {\n\t\t\tconst identifier = matches[1].trim();\n\t\t\tif (identifier) {\n\t\t\t\tidentifiers.push(identifier);\n\t\t\t}\n\t\t\tmatches = OVERRIDE_IDENTIFIER_REGEX.exec(key);\n\t\t}\n\t}\n\treturn distinct(identifiers);\n}\n\nexport function keyFromOverrideIdentifiers(overrideIdentifiers: string[]): string {\n\treturn overrideIdentifiers.reduce((result, overrideIdentifier) => `${result}[${overrideIdentifier}]`, '');\n}\n\nexport function getDefaultValue(type: string | string[] | undefined): any {\n\tconst t = Array.isArray(type) ? (<string[]>type)[0] : <string>type;\n\tswitch (t) {\n\t\tcase 'boolean':\n\t\t\treturn false;\n\t\tcase 'integer':\n\t\tcase 'number':\n\t\t\treturn 0;\n\t\tcase 'string':\n\t\t\treturn '';\n\t\tcase 'array':\n\t\t\treturn [];\n\t\tcase 'object':\n\t\t\treturn {};\n\t\tdefault:\n\t\t\treturn null;\n\t}\n}\n\nconst configurationRegistry = new ConfigurationRegistry();\nRegistry.add(Extensions.Configuration, configurationRegistry);\n\nexport function validateProperty(property: string): string | null {\n\tif (!property.trim()) {\n\t\treturn nls.localize('config.property.empty', \"Cannot register an empty property\");\n\t}\n\tif (OVERRIDE_PROPERTY_REGEX.test(property)) {\n\t\treturn nls.localize('config.property.languageDefault', \"Cannot register '{0}'. This matches property pattern '\\\\\\\\[.*\\\\\\\\]$' for describing language specific editor settings. Use 'configurationDefaults' contribution.\", property);\n\t}\n\tif (configurationRegistry.getConfigurationProperties()[property] !== undefined) {\n\t\treturn nls.localize('config.property.duplicate', \"Cannot register '{0}'. This property is already registered.\", property);\n\t}\n\treturn null;\n}\n\nexport function getScopes(): [string, ConfigurationScope | undefined][] {\n\tconst scopes: [string, ConfigurationScope | undefined][] = [];\n\tconst configurationProperties = configurationRegistry.getConfigurationProperties();\n\tfor (const key of Object.keys(configurationProperties)) {\n\t\tscopes.push([key, configurationProperties[key].scope]);\n\t}\n\tscopes.push(['launch', ConfigurationScope.RESOURCE]);\n\tscopes.push(['task', ConfigurationScope.RESOURCE]);\n\treturn scopes;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as arrays from 'vs/base/common/arrays';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport * as json from 'vs/base/common/json';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { getOrSet, ResourceMap } from 'vs/base/common/map';\nimport * as objects from 'vs/base/common/objects';\nimport { IExtUri } from 'vs/base/common/resources';\nimport * as types from 'vs/base/common/types';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { addToValueTree, ConfigurationTarget, getConfigurationValue, IConfigurationChange, IConfigurationChangeEvent, IConfigurationCompareResult, IConfigurationData, IConfigurationModel, IConfigurationOverrides, IConfigurationUpdateOverrides, IConfigurationValue, IOverrides, removeFromValueTree, toValuesTree } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationScope, Extensions, IConfigurationPropertySchema, IConfigurationRegistry, overrideIdentifiersFromKey, OVERRIDE_PROPERTY_REGEX } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Workspace } from 'vs/platform/workspace/common/workspace';\n\nexport class ConfigurationModel implements IConfigurationModel {\n\n\tprivate isFrozen: boolean = false;\n\tprivate readonly overrideConfigurations = new Map<string, ConfigurationModel>();\n\n\tconstructor(\n\t\tprivate readonly _contents: any = {},\n\t\tprivate readonly _keys: string[] = [],\n\t\tprivate readonly _overrides: IOverrides[] = []\n\t) {\n\t}\n\n\tget contents(): any {\n\t\treturn this.checkAndFreeze(this._contents);\n\t}\n\n\tget overrides(): IOverrides[] {\n\t\treturn this.checkAndFreeze(this._overrides);\n\t}\n\n\tget keys(): string[] {\n\t\treturn this.checkAndFreeze(this._keys);\n\t}\n\n\tisEmpty(): boolean {\n\t\treturn this._keys.length === 0 && Object.keys(this._contents).length === 0 && this._overrides.length === 0;\n\t}\n\n\tgetValue<V>(section: string | undefined): V {\n\t\treturn section ? getConfigurationValue<any>(this.contents, section) : this.contents;\n\t}\n\n\tgetOverrideValue<V>(section: string | undefined, overrideIdentifier: string): V | undefined {\n\t\tconst overrideContents = this.getContentsForOverrideIdentifer(overrideIdentifier);\n\t\treturn overrideContents\n\t\t\t? section ? getConfigurationValue<any>(overrideContents, section) : overrideContents\n\t\t\t: undefined;\n\t}\n\n\tgetKeysForOverrideIdentifier(identifier: string): string[] {\n\t\tconst keys: string[] = [];\n\t\tfor (const override of this.overrides) {\n\t\t\tif (override.identifiers.includes(identifier)) {\n\t\t\t\tkeys.push(...override.keys);\n\t\t\t}\n\t\t}\n\t\treturn arrays.distinct(keys);\n\t}\n\n\tgetAllOverrideIdentifiers(): string[] {\n\t\tconst result: string[] = [];\n\t\tfor (const override of this.overrides) {\n\t\t\tresult.push(...override.identifiers);\n\t\t}\n\t\treturn arrays.distinct(result);\n\t}\n\n\toverride(identifier: string): ConfigurationModel {\n\t\tlet overrideConfigurationModel = this.overrideConfigurations.get(identifier);\n\t\tif (!overrideConfigurationModel) {\n\t\t\toverrideConfigurationModel = this.createOverrideConfigurationModel(identifier);\n\t\t\tthis.overrideConfigurations.set(identifier, overrideConfigurationModel);\n\t\t}\n\t\treturn overrideConfigurationModel;\n\t}\n\n\tmerge(...others: ConfigurationModel[]): ConfigurationModel {\n\t\tconst contents = objects.deepClone(this.contents);\n\t\tconst overrides = objects.deepClone(this.overrides);\n\t\tconst keys = [...this.keys];\n\n\t\tfor (const other of others) {\n\t\t\tthis.mergeContents(contents, other.contents);\n\n\t\t\tfor (const otherOverride of other.overrides) {\n\t\t\t\tconst [override] = overrides.filter(o => arrays.equals(o.identifiers, otherOverride.identifiers));\n\t\t\t\tif (override) {\n\t\t\t\t\tthis.mergeContents(override.contents, otherOverride.contents);\n\t\t\t\t\toverride.keys.push(...otherOverride.keys);\n\t\t\t\t\toverride.keys = arrays.distinct(override.keys);\n\t\t\t\t} else {\n\t\t\t\t\toverrides.push(objects.deepClone(otherOverride));\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (const key of other.keys) {\n\t\t\t\tif (keys.indexOf(key) === -1) {\n\t\t\t\t\tkeys.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn new ConfigurationModel(contents, keys, overrides);\n\t}\n\n\tfreeze(): ConfigurationModel {\n\t\tthis.isFrozen = true;\n\t\treturn this;\n\t}\n\n\tprivate createOverrideConfigurationModel(identifier: string): ConfigurationModel {\n\t\tconst overrideContents = this.getContentsForOverrideIdentifer(identifier);\n\n\t\tif (!overrideContents || typeof overrideContents !== 'object' || !Object.keys(overrideContents).length) {\n\t\t\t// If there are no valid overrides, return self\n\t\t\treturn this;\n\t\t}\n\n\t\tlet contents: any = {};\n\t\tfor (const key of arrays.distinct([...Object.keys(this.contents), ...Object.keys(overrideContents)])) {\n\n\t\t\tlet contentsForKey = this.contents[key];\n\t\t\tlet overrideContentsForKey = overrideContents[key];\n\n\t\t\t// If there are override contents for the key, clone and merge otherwise use base contents\n\t\t\tif (overrideContentsForKey) {\n\t\t\t\t// Clone and merge only if base contents and override contents are of type object otherwise just override\n\t\t\t\tif (typeof contentsForKey === 'object' && typeof overrideContentsForKey === 'object') {\n\t\t\t\t\tcontentsForKey = objects.deepClone(contentsForKey);\n\t\t\t\t\tthis.mergeContents(contentsForKey, overrideContentsForKey);\n\t\t\t\t} else {\n\t\t\t\t\tcontentsForKey = overrideContentsForKey;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcontents[key] = contentsForKey;\n\t\t}\n\n\t\treturn new ConfigurationModel(contents, this.keys, this.overrides);\n\t}\n\n\tprivate mergeContents(source: any, target: any): void {\n\t\tfor (const key of Object.keys(target)) {\n\t\t\tif (key in source) {\n\t\t\t\tif (types.isObject(source[key]) && types.isObject(target[key])) {\n\t\t\t\t\tthis.mergeContents(source[key], target[key]);\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tsource[key] = objects.deepClone(target[key]);\n\t\t}\n\t}\n\n\tprivate checkAndFreeze<T>(data: T): T {\n\t\tif (this.isFrozen && !Object.isFrozen(data)) {\n\t\t\treturn objects.deepFreeze(data);\n\t\t}\n\t\treturn data;\n\t}\n\n\tprivate getContentsForOverrideIdentifer(identifier: string): any {\n\t\tlet contentsForIdentifierOnly: IStringDictionary<any> | null = null;\n\t\tlet contents: IStringDictionary<any> | null = null;\n\t\tconst mergeContents = (contentsToMerge: any) => {\n\t\t\tif (contentsToMerge) {\n\t\t\t\tif (contents) {\n\t\t\t\t\tthis.mergeContents(contents, contentsToMerge);\n\t\t\t\t} else {\n\t\t\t\t\tcontents = objects.deepClone(contentsToMerge);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tfor (const override of this.overrides) {\n\t\t\tif (arrays.equals(override.identifiers, [identifier])) {\n\t\t\t\tcontentsForIdentifierOnly = override.contents;\n\t\t\t} else if (override.identifiers.includes(identifier)) {\n\t\t\t\tmergeContents(override.contents);\n\t\t\t}\n\t\t}\n\t\t// Merge contents of the identifier only at the end to take precedence.\n\t\tmergeContents(contentsForIdentifierOnly);\n\t\treturn contents;\n\t}\n\n\ttoJSON(): IConfigurationModel {\n\t\treturn {\n\t\t\tcontents: this.contents,\n\t\t\toverrides: this.overrides,\n\t\t\tkeys: this.keys\n\t\t};\n\t}\n\n\t// Update methods\n\n\tpublic setValue(key: string, value: any) {\n\t\tthis.addKey(key);\n\t\taddToValueTree(this.contents, key, value, e => { throw new Error(e); });\n\t}\n\n\tpublic removeValue(key: string): void {\n\t\tif (this.removeKey(key)) {\n\t\t\tremoveFromValueTree(this.contents, key);\n\t\t}\n\t}\n\n\tprivate addKey(key: string): void {\n\t\tlet index = this.keys.length;\n\t\tfor (let i = 0; i < index; i++) {\n\t\t\tif (key.indexOf(this.keys[i]) === 0) {\n\t\t\t\tindex = i;\n\t\t\t}\n\t\t}\n\t\tthis.keys.splice(index, 1, key);\n\t}\n\n\tprivate removeKey(key: string): boolean {\n\t\tlet index = this.keys.indexOf(key);\n\t\tif (index !== -1) {\n\t\t\tthis.keys.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n}\n\nexport class DefaultConfigurationModel extends ConfigurationModel {\n\n\tconstructor(configurationDefaultsOverrides: IStringDictionary<any> = {}) {\n\t\tconst properties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\t\tconst keys = Object.keys(properties);\n\t\tconst contents: any = Object.create(null);\n\t\tconst overrides: IOverrides[] = [];\n\n\t\tfor (const key in properties) {\n\t\t\tconst defaultOverrideValue = configurationDefaultsOverrides[key];\n\t\t\tconst value = defaultOverrideValue !== undefined ? defaultOverrideValue : properties[key].default;\n\t\t\taddToValueTree(contents, key, value, message => console.error(`Conflict in default settings: ${message}`));\n\t\t}\n\t\tfor (const key of Object.keys(contents)) {\n\t\t\tif (OVERRIDE_PROPERTY_REGEX.test(key)) {\n\t\t\t\toverrides.push({\n\t\t\t\t\tidentifiers: overrideIdentifiersFromKey(key),\n\t\t\t\t\tkeys: Object.keys(contents[key]),\n\t\t\t\t\tcontents: toValuesTree(contents[key], message => console.error(`Conflict in default settings file: ${message}`)),\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tsuper(contents, keys, overrides);\n\t}\n}\n\nexport interface ConfigurationParseOptions {\n\tscopes: ConfigurationScope[] | undefined;\n\tskipRestricted?: boolean;\n}\n\nexport class ConfigurationModelParser {\n\n\tprivate _raw: any = null;\n\tprivate _configurationModel: ConfigurationModel | null = null;\n\tprivate _restrictedConfigurations: string[] = [];\n\tprivate _parseErrors: any[] = [];\n\n\tconstructor(protected readonly _name: string) { }\n\n\tget configurationModel(): ConfigurationModel {\n\t\treturn this._configurationModel || new ConfigurationModel();\n\t}\n\n\tget restrictedConfigurations(): string[] {\n\t\treturn this._restrictedConfigurations;\n\t}\n\n\tget errors(): any[] {\n\t\treturn this._parseErrors;\n\t}\n\n\tpublic parse(content: string | null | undefined, options?: ConfigurationParseOptions): void {\n\t\tif (!types.isUndefinedOrNull(content)) {\n\t\t\tconst raw = this.doParseContent(content);\n\t\t\tthis.parseRaw(raw, options);\n\t\t}\n\t}\n\n\tpublic reparse(options: ConfigurationParseOptions): void {\n\t\tif (this._raw) {\n\t\t\tthis.parseRaw(this._raw, options);\n\t\t}\n\t}\n\n\tpublic parseRaw(raw: any, options?: ConfigurationParseOptions): void {\n\t\tthis._raw = raw;\n\t\tconst { contents, keys, overrides, restricted } = this.doParseRaw(raw, options);\n\t\tthis._configurationModel = new ConfigurationModel(contents, keys, overrides);\n\t\tthis._restrictedConfigurations = restricted || [];\n\t}\n\n\tprivate doParseContent(content: string): any {\n\t\tlet raw: any = {};\n\t\tlet currentProperty: string | null = null;\n\t\tlet currentParent: any = [];\n\t\tlet previousParents: any[] = [];\n\t\tlet parseErrors: json.ParseError[] = [];\n\n\t\tfunction onValue(value: any) {\n\t\t\tif (Array.isArray(currentParent)) {\n\t\t\t\t(<any[]>currentParent).push(value);\n\t\t\t} else if (currentProperty !== null) {\n\t\t\t\tcurrentParent[currentProperty] = value;\n\t\t\t}\n\t\t}\n\n\t\tlet visitor: json.JSONVisitor = {\n\t\t\tonObjectBegin: () => {\n\t\t\t\tlet object = {};\n\t\t\t\tonValue(object);\n\t\t\t\tpreviousParents.push(currentParent);\n\t\t\t\tcurrentParent = object;\n\t\t\t\tcurrentProperty = null;\n\t\t\t},\n\t\t\tonObjectProperty: (name: string) => {\n\t\t\t\tcurrentProperty = name;\n\t\t\t},\n\t\t\tonObjectEnd: () => {\n\t\t\t\tcurrentParent = previousParents.pop();\n\t\t\t},\n\t\t\tonArrayBegin: () => {\n\t\t\t\tlet array: any[] = [];\n\t\t\t\tonValue(array);\n\t\t\t\tpreviousParents.push(currentParent);\n\t\t\t\tcurrentParent = array;\n\t\t\t\tcurrentProperty = null;\n\t\t\t},\n\t\t\tonArrayEnd: () => {\n\t\t\t\tcurrentParent = previousParents.pop();\n\t\t\t},\n\t\t\tonLiteralValue: onValue,\n\t\t\tonError: (error: json.ParseErrorCode, offset: number, length: number) => {\n\t\t\t\tparseErrors.push({ error, offset, length });\n\t\t\t}\n\t\t};\n\t\tif (content) {\n\t\t\ttry {\n\t\t\t\tjson.visit(content, visitor);\n\t\t\t\traw = currentParent[0] || {};\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(`Error while parsing settings file ${this._name}: ${e}`);\n\t\t\t\tthis._parseErrors = [e];\n\t\t\t}\n\t\t}\n\n\t\treturn raw;\n\t}\n\n\tprotected doParseRaw(raw: any, options?: ConfigurationParseOptions): IConfigurationModel & { restricted?: string[] } {\n\t\tconst configurationProperties = Registry.as<IConfigurationRegistry>(Extensions.Configuration).getConfigurationProperties();\n\t\tconst filtered = this.filter(raw, configurationProperties, true, options);\n\t\traw = filtered.raw;\n\t\tconst contents = toValuesTree(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n\t\tconst keys = Object.keys(raw);\n\t\tconst overrides = this.toOverrides(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n\t\treturn { contents, keys, overrides, restricted: filtered.restricted };\n\t}\n\n\tprivate filter(properties: any, configurationProperties: { [qualifiedKey: string]: IConfigurationPropertySchema | undefined }, filterOverriddenProperties: boolean, options?: ConfigurationParseOptions): { raw: {}, restricted: string[] } {\n\t\tif (!options?.scopes && !options?.skipRestricted) {\n\t\t\treturn { raw: properties, restricted: [] };\n\t\t}\n\t\tconst raw: any = {};\n\t\tconst restricted: string[] = [];\n\t\tfor (let key in properties) {\n\t\t\tif (OVERRIDE_PROPERTY_REGEX.test(key) && filterOverriddenProperties) {\n\t\t\t\tconst result = this.filter(properties[key], configurationProperties, false, options);\n\t\t\t\traw[key] = result.raw;\n\t\t\t\trestricted.push(...result.restricted);\n\t\t\t} else {\n\t\t\t\tconst propertySchema = configurationProperties[key];\n\t\t\t\tconst scope = propertySchema ? typeof propertySchema.scope !== 'undefined' ? propertySchema.scope : ConfigurationScope.WINDOW : undefined;\n\t\t\t\tif (propertySchema?.restricted) {\n\t\t\t\t\trestricted.push(key);\n\t\t\t\t}\n\t\t\t\t// Load unregistered configurations always.\n\t\t\t\tif (scope === undefined || options.scopes === undefined || options.scopes.includes(scope)) {\n\t\t\t\t\tif (!(options.skipRestricted && propertySchema?.restricted)) {\n\t\t\t\t\t\traw[key] = properties[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn { raw, restricted };\n\t}\n\n\tprivate toOverrides(raw: any, conflictReporter: (message: string) => void): IOverrides[] {\n\t\tconst overrides: IOverrides[] = [];\n\t\tfor (const key of Object.keys(raw)) {\n\t\t\tif (OVERRIDE_PROPERTY_REGEX.test(key)) {\n\t\t\t\tconst overrideRaw: any = {};\n\t\t\t\tfor (const keyInOverrideRaw in raw[key]) {\n\t\t\t\t\toverrideRaw[keyInOverrideRaw] = raw[key][keyInOverrideRaw];\n\t\t\t\t}\n\t\t\t\toverrides.push({\n\t\t\t\t\tidentifiers: overrideIdentifiersFromKey(key),\n\t\t\t\t\tkeys: Object.keys(overrideRaw),\n\t\t\t\t\tcontents: toValuesTree(overrideRaw, conflictReporter)\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\treturn overrides;\n\t}\n\n}\n\nexport class UserSettings extends Disposable {\n\n\tprivate readonly parser: ConfigurationModelParser;\n\tprivate readonly parseOptions: ConfigurationParseOptions;\n\tprotected readonly _onDidChange: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDidChange: Event<void> = this._onDidChange.event;\n\n\tconstructor(\n\t\tprivate readonly userSettingsResource: URI,\n\t\tprivate readonly scopes: ConfigurationScope[] | undefined,\n\t\textUri: IExtUri,\n\t\tprivate readonly fileService: IFileService\n\t) {\n\t\tsuper();\n\t\tthis.parser = new ConfigurationModelParser(this.userSettingsResource.toString());\n\t\tthis.parseOptions = { scopes: this.scopes };\n\t\tthis._register(this.fileService.watch(extUri.dirname(this.userSettingsResource)));\n\t\t// Also listen to the resource incase the resource is a symlink - https://github.com/microsoft/vscode/issues/118134\n\t\tthis._register(this.fileService.watch(this.userSettingsResource));\n\t\tthis._register(Event.filter(this.fileService.onDidFilesChange, e => e.contains(this.userSettingsResource))(() => this._onDidChange.fire()));\n\t}\n\n\tasync loadConfiguration(): Promise<ConfigurationModel> {\n\t\ttry {\n\t\t\tconst content = await this.fileService.readFile(this.userSettingsResource);\n\t\t\tthis.parser.parse(content.value.toString() || '{}', this.parseOptions);\n\t\t\treturn this.parser.configurationModel;\n\t\t} catch (e) {\n\t\t\treturn new ConfigurationModel();\n\t\t}\n\t}\n\n\treparse(): ConfigurationModel {\n\t\tthis.parser.reparse(this.parseOptions);\n\t\treturn this.parser.configurationModel;\n\t}\n\n\tgetRestrictedSettings(): string[] {\n\t\treturn this.parser.restrictedConfigurations;\n\t}\n}\n\n\nexport class Configuration {\n\n\tprivate _workspaceConsolidatedConfiguration: ConfigurationModel | null = null;\n\tprivate _foldersConsolidatedConfigurations: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>();\n\n\tconstructor(\n\t\tprivate _defaultConfiguration: ConfigurationModel,\n\t\tprivate _localUserConfiguration: ConfigurationModel,\n\t\tprivate _remoteUserConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _workspaceConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _folderConfigurations: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>(),\n\t\tprivate _memoryConfiguration: ConfigurationModel = new ConfigurationModel(),\n\t\tprivate _memoryConfigurationByResource: ResourceMap<ConfigurationModel> = new ResourceMap<ConfigurationModel>(),\n\t\tprivate _freeze: boolean = true) {\n\t}\n\n\tgetValue(section: string | undefined, overrides: IConfigurationOverrides, workspace: Workspace | undefined): any {\n\t\tconst consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\n\t\treturn consolidateConfigurationModel.getValue(section);\n\t}\n\n\tupdateValue(key: string, value: any, overrides: IConfigurationUpdateOverrides = {}): void {\n\t\tlet memoryConfiguration: ConfigurationModel | undefined;\n\t\tif (overrides.resource) {\n\t\t\tmemoryConfiguration = this._memoryConfigurationByResource.get(overrides.resource);\n\t\t\tif (!memoryConfiguration) {\n\t\t\t\tmemoryConfiguration = new ConfigurationModel();\n\t\t\t\tthis._memoryConfigurationByResource.set(overrides.resource, memoryConfiguration);\n\t\t\t}\n\t\t} else {\n\t\t\tmemoryConfiguration = this._memoryConfiguration;\n\t\t}\n\n\t\tif (value === undefined) {\n\t\t\tmemoryConfiguration.removeValue(key);\n\t\t} else {\n\t\t\tmemoryConfiguration.setValue(key, value);\n\t\t}\n\n\t\tif (!overrides.resource) {\n\t\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\t}\n\t}\n\n\tinspect<C>(key: string, overrides: IConfigurationOverrides, workspace: Workspace | undefined): IConfigurationValue<C> {\n\t\tconst consolidateConfigurationModel = this.getConsolidateConfigurationModel(overrides, workspace);\n\t\tconst folderConfigurationModel = this.getFolderConfigurationModelForResource(overrides.resource, workspace);\n\t\tconst memoryConfigurationModel = overrides.resource ? this._memoryConfigurationByResource.get(overrides.resource) || this._memoryConfiguration : this._memoryConfiguration;\n\n\t\tconst defaultValue = overrides.overrideIdentifier ? this._defaultConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this._defaultConfiguration.freeze().getValue<C>(key);\n\t\tconst userValue = overrides.overrideIdentifier ? this.userConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this.userConfiguration.freeze().getValue<C>(key);\n\t\tconst userLocalValue = overrides.overrideIdentifier ? this.localUserConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this.localUserConfiguration.freeze().getValue<C>(key);\n\t\tconst userRemoteValue = overrides.overrideIdentifier ? this.remoteUserConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this.remoteUserConfiguration.freeze().getValue<C>(key);\n\t\tconst workspaceValue = workspace ? overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : this._workspaceConfiguration.freeze().getValue<C>(key) : undefined; //Check on workspace exists or not because _workspaceConfiguration is never null\n\t\tconst workspaceFolderValue = folderConfigurationModel ? overrides.overrideIdentifier ? folderConfigurationModel.freeze().override(overrides.overrideIdentifier).getValue<C>(key) : folderConfigurationModel.freeze().getValue<C>(key) : undefined;\n\t\tconst memoryValue = overrides.overrideIdentifier ? memoryConfigurationModel.override(overrides.overrideIdentifier).getValue<C>(key) : memoryConfigurationModel.getValue<C>(key);\n\t\tconst value = consolidateConfigurationModel.getValue<C>(key);\n\t\tconst overrideIdentifiers: string[] = arrays.distinct(arrays.flatten(consolidateConfigurationModel.overrides.map(override => override.identifiers))).filter(overrideIdentifier => consolidateConfigurationModel.getOverrideValue(key, overrideIdentifier) !== undefined);\n\n\t\treturn {\n\t\t\tdefaultValue: defaultValue,\n\t\t\tuserValue: userValue,\n\t\t\tuserLocalValue: userLocalValue,\n\t\t\tuserRemoteValue: userRemoteValue,\n\t\t\tworkspaceValue: workspaceValue,\n\t\t\tworkspaceFolderValue: workspaceFolderValue,\n\t\t\tmemoryValue: memoryValue,\n\t\t\tvalue,\n\n\t\t\tdefault: defaultValue !== undefined ? { value: this._defaultConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this._defaultConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tuser: userValue !== undefined ? { value: this.userConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.userConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tuserLocal: userLocalValue !== undefined ? { value: this.localUserConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.localUserConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tuserRemote: userRemoteValue !== undefined ? { value: this.remoteUserConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.remoteUserConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tworkspace: workspaceValue !== undefined ? { value: this._workspaceConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tworkspaceFolder: workspaceFolderValue !== undefined ? { value: folderConfigurationModel?.freeze().getValue(key), override: overrides.overrideIdentifier ? folderConfigurationModel?.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\t\t\tmemory: memoryValue !== undefined ? { value: memoryConfigurationModel.getValue(key), override: overrides.overrideIdentifier ? memoryConfigurationModel.getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n\n\t\t\toverrideIdentifiers: overrideIdentifiers.length ? overrideIdentifiers : undefined\n\t\t};\n\t}\n\n\tkeys(workspace: Workspace | undefined): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t} {\n\t\tconst folderConfigurationModel = this.getFolderConfigurationModelForResource(undefined, workspace);\n\t\treturn {\n\t\t\tdefault: this._defaultConfiguration.freeze().keys,\n\t\t\tuser: this.userConfiguration.freeze().keys,\n\t\t\tworkspace: this._workspaceConfiguration.freeze().keys,\n\t\t\tworkspaceFolder: folderConfigurationModel ? folderConfigurationModel.freeze().keys : []\n\t\t};\n\t}\n\n\tupdateDefaultConfiguration(defaultConfiguration: ConfigurationModel): void {\n\t\tthis._defaultConfiguration = defaultConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateLocalUserConfiguration(localUserConfiguration: ConfigurationModel): void {\n\t\tthis._localUserConfiguration = localUserConfiguration;\n\t\tthis._userConfiguration = null;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateRemoteUserConfiguration(remoteUserConfiguration: ConfigurationModel): void {\n\t\tthis._remoteUserConfiguration = remoteUserConfiguration;\n\t\tthis._userConfiguration = null;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateWorkspaceConfiguration(workspaceConfiguration: ConfigurationModel): void {\n\t\tthis._workspaceConfiguration = workspaceConfiguration;\n\t\tthis._workspaceConsolidatedConfiguration = null;\n\t\tthis._foldersConsolidatedConfigurations.clear();\n\t}\n\n\tupdateFolderConfiguration(resource: URI, configuration: ConfigurationModel): void {\n\t\tthis._folderConfigurations.set(resource, configuration);\n\t\tthis._foldersConsolidatedConfigurations.delete(resource);\n\t}\n\n\tdeleteFolderConfiguration(resource: URI): void {\n\t\tthis.folderConfigurations.delete(resource);\n\t\tthis._foldersConsolidatedConfigurations.delete(resource);\n\t}\n\n\tcompareAndUpdateDefaultConfiguration(defaults: ConfigurationModel, keys?: string[]): IConfigurationChange {\n\t\tconst overrides: [string, string[]][] = [];\n\t\tif (!keys) {\n\t\t\tconst { added, updated, removed } = compare(this._defaultConfiguration, defaults);\n\t\t\tkeys = [...added, ...updated, ...removed];\n\t\t}\n\t\tfor (const key of keys) {\n\t\t\tfor (const overrideIdentifier of overrideIdentifiersFromKey(key)) {\n\t\t\t\tconst fromKeys = this._defaultConfiguration.getKeysForOverrideIdentifier(overrideIdentifier);\n\t\t\t\tconst toKeys = defaults.getKeysForOverrideIdentifier(overrideIdentifier);\n\t\t\t\tconst keys = [\n\t\t\t\t\t...toKeys.filter(key => fromKeys.indexOf(key) === -1),\n\t\t\t\t\t...fromKeys.filter(key => toKeys.indexOf(key) === -1),\n\t\t\t\t\t...fromKeys.filter(key => !objects.equals(this._defaultConfiguration.override(overrideIdentifier).getValue(key), defaults.override(overrideIdentifier).getValue(key)))\n\t\t\t\t];\n\t\t\t\toverrides.push([overrideIdentifier, keys]);\n\t\t\t}\n\t\t}\n\t\tthis.updateDefaultConfiguration(defaults);\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateLocalUserConfiguration(user: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.localUserConfiguration, user);\n\t\tconst keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateLocalUserConfiguration(user);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateRemoteUserConfiguration(user: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.remoteUserConfiguration, user);\n\t\tlet keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateRemoteUserConfiguration(user);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateWorkspaceConfiguration(workspaceConfiguration: ConfigurationModel): IConfigurationChange {\n\t\tconst { added, updated, removed, overrides } = compare(this.workspaceConfiguration, workspaceConfiguration);\n\t\tlet keys = [...added, ...updated, ...removed];\n\t\tif (keys.length) {\n\t\t\tthis.updateWorkspaceConfiguration(workspaceConfiguration);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndUpdateFolderConfiguration(resource: URI, folderConfiguration: ConfigurationModel): IConfigurationChange {\n\t\tconst currentFolderConfiguration = this.folderConfigurations.get(resource);\n\t\tconst { added, updated, removed, overrides } = compare(currentFolderConfiguration, folderConfiguration);\n\t\tlet keys = [...added, ...updated, ...removed];\n\t\tif (keys.length || !currentFolderConfiguration) {\n\t\t\tthis.updateFolderConfiguration(resource, folderConfiguration);\n\t\t}\n\t\treturn { keys, overrides };\n\t}\n\n\tcompareAndDeleteFolderConfiguration(folder: URI): IConfigurationChange {\n\t\tconst folderConfig = this.folderConfigurations.get(folder);\n\t\tif (!folderConfig) {\n\t\t\tthrow new Error('Unknown folder');\n\t\t}\n\t\tthis.deleteFolderConfiguration(folder);\n\t\tconst { added, updated, removed, overrides } = compare(folderConfig, undefined);\n\t\treturn { keys: [...added, ...updated, ...removed], overrides };\n\t}\n\n\tget defaults(): ConfigurationModel {\n\t\treturn this._defaultConfiguration;\n\t}\n\n\tprivate _userConfiguration: ConfigurationModel | null = null;\n\tget userConfiguration(): ConfigurationModel {\n\t\tif (!this._userConfiguration) {\n\t\t\tthis._userConfiguration = this._remoteUserConfiguration.isEmpty() ? this._localUserConfiguration : this._localUserConfiguration.merge(this._remoteUserConfiguration);\n\t\t\tif (this._freeze) {\n\t\t\t\tthis._userConfiguration.freeze();\n\t\t\t}\n\t\t}\n\t\treturn this._userConfiguration;\n\t}\n\n\tget localUserConfiguration(): ConfigurationModel {\n\t\treturn this._localUserConfiguration;\n\t}\n\n\tget remoteUserConfiguration(): ConfigurationModel {\n\t\treturn this._remoteUserConfiguration;\n\t}\n\n\tget workspaceConfiguration(): ConfigurationModel {\n\t\treturn this._workspaceConfiguration;\n\t}\n\n\tprotected get folderConfigurations(): ResourceMap<ConfigurationModel> {\n\t\treturn this._folderConfigurations;\n\t}\n\n\tprivate getConsolidateConfigurationModel(overrides: IConfigurationOverrides, workspace: Workspace | undefined): ConfigurationModel {\n\t\tlet configurationModel = this.getConsolidatedConfigurationModelForResource(overrides, workspace);\n\t\treturn overrides.overrideIdentifier ? configurationModel.override(overrides.overrideIdentifier) : configurationModel;\n\t}\n\n\tprivate getConsolidatedConfigurationModelForResource({ resource }: IConfigurationOverrides, workspace: Workspace | undefined): ConfigurationModel {\n\t\tlet consolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n\n\t\tif (workspace && resource) {\n\t\t\tconst root = workspace.getFolder(resource);\n\t\t\tif (root) {\n\t\t\t\tconsolidateConfiguration = this.getFolderConsolidatedConfiguration(root.uri) || consolidateConfiguration;\n\t\t\t}\n\t\t\tconst memoryConfigurationForResource = this._memoryConfigurationByResource.get(resource);\n\t\t\tif (memoryConfigurationForResource) {\n\t\t\t\tconsolidateConfiguration = consolidateConfiguration.merge(memoryConfigurationForResource);\n\t\t\t}\n\t\t}\n\n\t\treturn consolidateConfiguration;\n\t}\n\n\tprivate getWorkspaceConsolidatedConfiguration(): ConfigurationModel {\n\t\tif (!this._workspaceConsolidatedConfiguration) {\n\t\t\tthis._workspaceConsolidatedConfiguration = this._defaultConfiguration.merge(this.userConfiguration, this._workspaceConfiguration, this._memoryConfiguration);\n\t\t\tif (this._freeze) {\n\t\t\t\tthis._workspaceConfiguration = this._workspaceConfiguration.freeze();\n\t\t\t}\n\t\t}\n\t\treturn this._workspaceConsolidatedConfiguration;\n\t}\n\n\tprivate getFolderConsolidatedConfiguration(folder: URI): ConfigurationModel {\n\t\tlet folderConsolidatedConfiguration = this._foldersConsolidatedConfigurations.get(folder);\n\t\tif (!folderConsolidatedConfiguration) {\n\t\t\tconst workspaceConsolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n\t\t\tconst folderConfiguration = this._folderConfigurations.get(folder);\n\t\t\tif (folderConfiguration) {\n\t\t\t\tfolderConsolidatedConfiguration = workspaceConsolidateConfiguration.merge(folderConfiguration);\n\t\t\t\tif (this._freeze) {\n\t\t\t\t\tfolderConsolidatedConfiguration = folderConsolidatedConfiguration.freeze();\n\t\t\t\t}\n\t\t\t\tthis._foldersConsolidatedConfigurations.set(folder, folderConsolidatedConfiguration);\n\t\t\t} else {\n\t\t\t\tfolderConsolidatedConfiguration = workspaceConsolidateConfiguration;\n\t\t\t}\n\t\t}\n\t\treturn folderConsolidatedConfiguration;\n\t}\n\n\tprivate getFolderConfigurationModelForResource(resource: URI | null | undefined, workspace: Workspace | undefined): ConfigurationModel | undefined {\n\t\tif (workspace && resource) {\n\t\t\tconst root = workspace.getFolder(resource);\n\t\t\tif (root) {\n\t\t\t\treturn this._folderConfigurations.get(root.uri);\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\ttoData(): IConfigurationData {\n\t\treturn {\n\t\t\tdefaults: {\n\t\t\t\tcontents: this._defaultConfiguration.contents,\n\t\t\t\toverrides: this._defaultConfiguration.overrides,\n\t\t\t\tkeys: this._defaultConfiguration.keys\n\t\t\t},\n\t\t\tuser: {\n\t\t\t\tcontents: this.userConfiguration.contents,\n\t\t\t\toverrides: this.userConfiguration.overrides,\n\t\t\t\tkeys: this.userConfiguration.keys\n\t\t\t},\n\t\t\tworkspace: {\n\t\t\t\tcontents: this._workspaceConfiguration.contents,\n\t\t\t\toverrides: this._workspaceConfiguration.overrides,\n\t\t\t\tkeys: this._workspaceConfiguration.keys\n\t\t\t},\n\t\t\tfolders: [...this._folderConfigurations.keys()].reduce<[UriComponents, IConfigurationModel][]>((result, folder) => {\n\t\t\t\tconst { contents, overrides, keys } = this._folderConfigurations.get(folder)!;\n\t\t\t\tresult.push([folder, { contents, overrides, keys }]);\n\t\t\t\treturn result;\n\t\t\t}, [])\n\t\t};\n\t}\n\n\tallKeys(): string[] {\n\t\tconst keys: Set<string> = new Set<string>();\n\t\tthis._defaultConfiguration.freeze().keys.forEach(key => keys.add(key));\n\t\tthis.userConfiguration.freeze().keys.forEach(key => keys.add(key));\n\t\tthis._workspaceConfiguration.freeze().keys.forEach(key => keys.add(key));\n\t\tthis._folderConfigurations.forEach(folderConfiguraiton => folderConfiguraiton.freeze().keys.forEach(key => keys.add(key)));\n\t\treturn [...keys.values()];\n\t}\n\n\tprotected allOverrideIdentifiers(): string[] {\n\t\tconst keys: Set<string> = new Set<string>();\n\t\tthis._defaultConfiguration.freeze().getAllOverrideIdentifiers().forEach(key => keys.add(key));\n\t\tthis.userConfiguration.freeze().getAllOverrideIdentifiers().forEach(key => keys.add(key));\n\t\tthis._workspaceConfiguration.freeze().getAllOverrideIdentifiers().forEach(key => keys.add(key));\n\t\tthis._folderConfigurations.forEach(folderConfiguraiton => folderConfiguraiton.freeze().getAllOverrideIdentifiers().forEach(key => keys.add(key)));\n\t\treturn [...keys.values()];\n\t}\n\n\tprotected getAllKeysForOverrideIdentifier(overrideIdentifier: string): string[] {\n\t\tconst keys: Set<string> = new Set<string>();\n\t\tthis._defaultConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis.userConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis._workspaceConfiguration.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key));\n\t\tthis._folderConfigurations.forEach(folderConfiguraiton => folderConfiguraiton.getKeysForOverrideIdentifier(overrideIdentifier).forEach(key => keys.add(key)));\n\t\treturn [...keys.values()];\n\t}\n\n\tstatic parse(data: IConfigurationData): Configuration {\n\t\tconst defaultConfiguration = this.parseConfigurationModel(data.defaults);\n\t\tconst userConfiguration = this.parseConfigurationModel(data.user);\n\t\tconst workspaceConfiguration = this.parseConfigurationModel(data.workspace);\n\t\tconst folders: ResourceMap<ConfigurationModel> = data.folders.reduce((result, value) => {\n\t\t\tresult.set(URI.revive(value[0]), this.parseConfigurationModel(value[1]));\n\t\t\treturn result;\n\t\t}, new ResourceMap<ConfigurationModel>());\n\t\treturn new Configuration(defaultConfiguration, userConfiguration, new ConfigurationModel(), workspaceConfiguration, folders, new ConfigurationModel(), new ResourceMap<ConfigurationModel>(), false);\n\t}\n\n\tprivate static parseConfigurationModel(model: IConfigurationModel): ConfigurationModel {\n\t\treturn new ConfigurationModel(model.contents, model.keys, model.overrides).freeze();\n\t}\n\n}\n\nexport function mergeChanges(...changes: IConfigurationChange[]): IConfigurationChange {\n\tif (changes.length === 0) {\n\t\treturn { keys: [], overrides: [] };\n\t}\n\tif (changes.length === 1) {\n\t\treturn changes[0];\n\t}\n\tconst keysSet = new Set<string>();\n\tconst overridesMap = new Map<string, Set<string>>();\n\tfor (const change of changes) {\n\t\tchange.keys.forEach(key => keysSet.add(key));\n\t\tchange.overrides.forEach(([identifier, keys]) => {\n\t\t\tconst result = getOrSet(overridesMap, identifier, new Set<string>());\n\t\t\tkeys.forEach(key => result.add(key));\n\t\t});\n\t}\n\tconst overrides: [string, string[]][] = [];\n\toverridesMap.forEach((keys, identifier) => overrides.push([identifier, [...keys.values()]]));\n\treturn { keys: [...keysSet.values()], overrides };\n}\n\nexport class ConfigurationChangeEvent implements IConfigurationChangeEvent {\n\n\tprivate readonly affectedKeysTree: any;\n\treadonly affectedKeys: string[];\n\tsource!: ConfigurationTarget;\n\tsourceConfig: any;\n\n\tconstructor(readonly change: IConfigurationChange, private readonly previous: { workspace?: Workspace, data: IConfigurationData } | undefined, private readonly currentConfiguraiton: Configuration, private readonly currentWorkspace?: Workspace) {\n\t\tconst keysSet = new Set<string>();\n\t\tchange.keys.forEach(key => keysSet.add(key));\n\t\tchange.overrides.forEach(([, keys]) => keys.forEach(key => keysSet.add(key)));\n\t\tthis.affectedKeys = [...keysSet.values()];\n\n\t\tconst configurationModel = new ConfigurationModel();\n\t\tthis.affectedKeys.forEach(key => configurationModel.setValue(key, {}));\n\t\tthis.affectedKeysTree = configurationModel.contents;\n\t}\n\n\tprivate _previousConfiguration: Configuration | undefined = undefined;\n\tget previousConfiguration(): Configuration | undefined {\n\t\tif (!this._previousConfiguration && this.previous) {\n\t\t\tthis._previousConfiguration = Configuration.parse(this.previous.data);\n\t\t}\n\t\treturn this._previousConfiguration;\n\t}\n\n\taffectsConfiguration(section: string, overrides?: IConfigurationOverrides): boolean {\n\t\tif (this.doesAffectedKeysTreeContains(this.affectedKeysTree, section)) {\n\t\t\tif (overrides) {\n\t\t\t\tconst value1 = this.previousConfiguration ? this.previousConfiguration.getValue(section, overrides, this.previous?.workspace) : undefined;\n\t\t\t\tconst value2 = this.currentConfiguraiton.getValue(section, overrides, this.currentWorkspace);\n\t\t\t\treturn !objects.equals(value1, value2);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tprivate doesAffectedKeysTreeContains(affectedKeysTree: any, section: string): boolean {\n\t\tlet requestedTree = toValuesTree({ [section]: true }, () => { });\n\n\t\tlet key;\n\t\twhile (typeof requestedTree === 'object' && (key = Object.keys(requestedTree)[0])) { // Only one key should present, since we added only one property\n\t\t\taffectedKeysTree = affectedKeysTree[key];\n\t\t\tif (!affectedKeysTree) {\n\t\t\t\treturn false; // Requested tree is not found\n\t\t\t}\n\t\t\trequestedTree = requestedTree[key];\n\t\t}\n\t\treturn true;\n\t}\n}\n\nexport class AllKeysConfigurationChangeEvent extends ConfigurationChangeEvent {\n\tconstructor(configuration: Configuration, workspace: Workspace, source: ConfigurationTarget, sourceConfig: any) {\n\t\tsuper({ keys: configuration.allKeys(), overrides: [] }, undefined, configuration, workspace);\n\t\tthis.source = source;\n\t\tthis.sourceConfig = sourceConfig;\n\t}\n}\n\nfunction compare(from: ConfigurationModel | undefined, to: ConfigurationModel | undefined): IConfigurationCompareResult {\n\tconst { added, removed, updated } = compareConfigurationContents(to, from);\n\tconst overrides: [string, string[]][] = [];\n\n\tconst fromOverrideIdentifiers = from?.getAllOverrideIdentifiers() || [];\n\tconst toOverrideIdentifiers = to?.getAllOverrideIdentifiers() || [];\n\n\tif (to) {\n\t\tconst addedOverrideIdentifiers = toOverrideIdentifiers.filter(key => !fromOverrideIdentifiers.includes(key));\n\t\tfor (const identifier of addedOverrideIdentifiers) {\n\t\t\toverrides.push([identifier, to.getKeysForOverrideIdentifier(identifier)]);\n\t\t}\n\t}\n\n\tif (from) {\n\t\tconst removedOverrideIdentifiers = fromOverrideIdentifiers.filter(key => !toOverrideIdentifiers.includes(key));\n\t\tfor (const identifier of removedOverrideIdentifiers) {\n\t\t\toverrides.push([identifier, from.getKeysForOverrideIdentifier(identifier)]);\n\t\t}\n\t}\n\n\tif (to && from) {\n\t\tfor (const identifier of fromOverrideIdentifiers) {\n\t\t\tif (toOverrideIdentifiers.includes(identifier)) {\n\t\t\t\tconst result = compareConfigurationContents({ contents: from.getOverrideValue(undefined, identifier) || {}, keys: from.getKeysForOverrideIdentifier(identifier) }, { contents: to.getOverrideValue(undefined, identifier) || {}, keys: to.getKeysForOverrideIdentifier(identifier) });\n\t\t\t\toverrides.push([identifier, [...result.added, ...result.removed, ...result.updated]]);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { added, removed, updated, overrides };\n}\n\nfunction compareConfigurationContents(to: { keys: string[], contents: any } | undefined, from: { keys: string[], contents: any } | undefined) {\n\tconst added = to\n\t\t? from ? to.keys.filter(key => from.keys.indexOf(key) === -1) : [...to.keys]\n\t\t: [];\n\tconst removed = from\n\t\t? to ? from.keys.filter(key => to.keys.indexOf(key) === -1) : [...from.keys]\n\t\t: [];\n\tconst updated: string[] = [];\n\n\tif (to && from) {\n\t\tfor (const key of from.keys) {\n\t\t\tif (to.keys.indexOf(key) !== -1) {\n\t\t\t\tconst value1 = getConfigurationValue(from.contents, key);\n\t\t\t\tconst value2 = getConfigurationValue(to.contents, key);\n\t\t\t\tif (!objects.equals(value1, value2)) {\n\t\t\t\t\tupdated.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn { added, removed, updated };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { extUriBiasedIgnorePathCase } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { ConfigurationTarget, IConfigurationChange, IConfigurationChangeEvent, IConfigurationData, IConfigurationOverrides, IConfigurationService, IConfigurationValue, isConfigurationOverrides } from 'vs/platform/configuration/common/configuration';\nimport { Configuration, ConfigurationChangeEvent, ConfigurationModel, DefaultConfigurationModel, UserSettings } from 'vs/platform/configuration/common/configurationModels';\nimport { Extensions, IConfigurationRegistry } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { Registry } from 'vs/platform/registry/common/platform';\n\nexport class ConfigurationService extends Disposable implements IConfigurationService, IDisposable {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate configuration: Configuration;\n\tprivate userConfiguration: UserSettings;\n\tprivate readonly reloadConfigurationScheduler: RunOnceScheduler;\n\n\tprivate readonly _onDidChangeConfiguration: Emitter<IConfigurationChangeEvent> = this._register(new Emitter<IConfigurationChangeEvent>());\n\treadonly onDidChangeConfiguration: Event<IConfigurationChangeEvent> = this._onDidChangeConfiguration.event;\n\n\tconstructor(\n\t\tprivate readonly settingsResource: URI,\n\t\tfileService: IFileService\n\t) {\n\t\tsuper();\n\t\tthis.userConfiguration = this._register(new UserSettings(this.settingsResource, undefined, extUriBiasedIgnorePathCase, fileService));\n\t\tthis.configuration = new Configuration(new DefaultConfigurationModel(), new ConfigurationModel());\n\n\t\tthis.reloadConfigurationScheduler = this._register(new RunOnceScheduler(() => this.reloadConfiguration(), 50));\n\t\tthis._register(Registry.as<IConfigurationRegistry>(Extensions.Configuration).onDidUpdateConfiguration(({ properties }) => this.onDidDefaultConfigurationChange(properties)));\n\t\tthis._register(this.userConfiguration.onDidChange(() => this.reloadConfigurationScheduler.schedule()));\n\t}\n\n\tasync initialize(): Promise<void> {\n\t\tconst userConfiguration = await this.userConfiguration.loadConfiguration();\n\t\tthis.configuration = new Configuration(new DefaultConfigurationModel(), userConfiguration);\n\t}\n\n\tgetConfigurationData(): IConfigurationData {\n\t\treturn this.configuration.toData();\n\t}\n\n\tgetValue<T>(): T;\n\tgetValue<T>(section: string): T;\n\tgetValue<T>(overrides: IConfigurationOverrides): T;\n\tgetValue<T>(section: string, overrides: IConfigurationOverrides): T;\n\tgetValue(arg1?: any, arg2?: any): any {\n\t\tconst section = typeof arg1 === 'string' ? arg1 : undefined;\n\t\tconst overrides = isConfigurationOverrides(arg1) ? arg1 : isConfigurationOverrides(arg2) ? arg2 : {};\n\t\treturn this.configuration.getValue(section, overrides, undefined);\n\t}\n\n\tupdateValue(key: string, value: any): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides): Promise<void>;\n\tupdateValue(key: string, value: any, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, overrides: IConfigurationOverrides, target: ConfigurationTarget): Promise<void>;\n\tupdateValue(key: string, value: any, arg3?: any, arg4?: any): Promise<void> {\n\t\treturn Promise.reject(new Error('not supported'));\n\t}\n\n\tinspect<T>(key: string): IConfigurationValue<T> {\n\t\treturn this.configuration.inspect<T>(key, {}, undefined);\n\t}\n\n\tkeys(): {\n\t\tdefault: string[];\n\t\tuser: string[];\n\t\tworkspace: string[];\n\t\tworkspaceFolder: string[];\n\t} {\n\t\treturn this.configuration.keys(undefined);\n\t}\n\n\tasync reloadConfiguration(): Promise<void> {\n\t\tconst configurationModel = await this.userConfiguration.loadConfiguration();\n\t\tthis.onDidChangeUserConfiguration(configurationModel);\n\t}\n\n\tprivate onDidChangeUserConfiguration(userConfigurationModel: ConfigurationModel): void {\n\t\tconst previous = this.configuration.toData();\n\t\tconst change = this.configuration.compareAndUpdateLocalUserConfiguration(userConfigurationModel);\n\t\tthis.trigger(change, previous, ConfigurationTarget.USER);\n\t}\n\n\tprivate onDidDefaultConfigurationChange(properties: string[]): void {\n\t\tconst previous = this.configuration.toData();\n\t\tconst change = this.configuration.compareAndUpdateDefaultConfiguration(new DefaultConfigurationModel(), properties);\n\t\tthis.trigger(change, previous, ConfigurationTarget.DEFAULT);\n\t}\n\n\tprivate trigger(configurationChange: IConfigurationChange, previous: IConfigurationData, source: ConfigurationTarget): void {\n\t\tconst event = new ConfigurationChangeEvent(configurationChange, { data: previous }, this.configuration);\n\t\tevent.source = source;\n\t\tevent.sourceConfig = this.getTargetConfiguration(source);\n\t\tthis._onDidChangeConfiguration.fire(event);\n\t}\n\n\tprivate getTargetConfiguration(target: ConfigurationTarget): any {\n\t\tswitch (target) {\n\t\t\tcase ConfigurationTarget.DEFAULT:\n\t\t\t\treturn this.configuration.defaults.contents;\n\t\t\tcase ConfigurationTarget.USER:\n\t\t\t\treturn this.configuration.localUserConfiguration.contents;\n\t\t}\n\t\treturn {};\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IRemoteAuthorityResolverService = createDecorator<IRemoteAuthorityResolverService>('remoteAuthorityResolverService');\n\nexport interface ResolvedAuthority {\n\treadonly authority: string;\n\treadonly host: string;\n\treadonly port: number;\n\treadonly connectionToken: string | undefined;\n}\n\nexport interface ResolvedOptions {\n\treadonly extensionHostEnv?: { [key: string]: string | null };\n\treadonly isTrusted?: boolean;\n\treadonly authenticationSession?: { id: string, providerId: string };\n}\n\nexport interface TunnelDescription {\n\tremoteAddress: { port: number, host: string };\n\tlocalAddress: { port: number, host: string } | string;\n\tprivacy?: string;\n\tprotocol?: string;\n}\nexport interface TunnelInformation {\n\tenvironmentTunnels?: TunnelDescription[];\n}\n\nexport interface ResolverResult {\n\tauthority: ResolvedAuthority;\n\toptions?: ResolvedOptions;\n\ttunnelInformation?: TunnelInformation;\n}\n\nexport interface IRemoteConnectionData {\n\thost: string;\n\tport: number;\n\tconnectionToken: string | undefined;\n}\n\nexport enum RemoteAuthorityResolverErrorCode {\n\tUnknown = 'Unknown',\n\tNotAvailable = 'NotAvailable',\n\tTemporarilyNotAvailable = 'TemporarilyNotAvailable',\n\tNoResolverFound = 'NoResolverFound'\n}\n\nexport class RemoteAuthorityResolverError extends Error {\n\n\tpublic static isTemporarilyNotAvailable(err: any): boolean {\n\t\treturn (err instanceof RemoteAuthorityResolverError) && err._code === RemoteAuthorityResolverErrorCode.TemporarilyNotAvailable;\n\t}\n\n\tpublic static isNoResolverFound(err: any): err is RemoteAuthorityResolverError {\n\t\treturn (err instanceof RemoteAuthorityResolverError) && err._code === RemoteAuthorityResolverErrorCode.NoResolverFound;\n\t}\n\n\tpublic static isHandled(err: any): boolean {\n\t\treturn (err instanceof RemoteAuthorityResolverError) && err.isHandled;\n\t}\n\n\tpublic readonly _message: string | undefined;\n\tpublic readonly _code: RemoteAuthorityResolverErrorCode;\n\tpublic readonly _detail: any;\n\n\tpublic isHandled: boolean;\n\n\tconstructor(message?: string, code: RemoteAuthorityResolverErrorCode = RemoteAuthorityResolverErrorCode.Unknown, detail?: any) {\n\t\tsuper(message);\n\n\t\tthis._message = message;\n\t\tthis._code = code;\n\t\tthis._detail = detail;\n\n\t\tthis.isHandled = (code === RemoteAuthorityResolverErrorCode.NotAvailable) && detail === true;\n\n\t\t// workaround when extending builtin objects and when compiling to ES5, see:\n\t\t// https://github.com/microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n\t\tif (typeof (<any>Object).setPrototypeOf === 'function') {\n\t\t\t(<any>Object).setPrototypeOf(this, RemoteAuthorityResolverError.prototype);\n\t\t}\n\t}\n}\n\nexport interface IRemoteAuthorityResolverService {\n\n\treadonly _serviceBrand: undefined;\n\n\treadonly onDidChangeConnectionData: Event<void>;\n\n\tresolveAuthority(authority: string): Promise<ResolverResult>;\n\tgetConnectionData(authority: string): IRemoteConnectionData | null;\n\t/**\n\t * Get the canonical URI for a `vscode-remote://` URI.\n\t *\n\t * **NOTE**: This can throw e.g. in cases where there is no resolver installed for the specific remote authority.\n\t *\n\t * @param uri The `vscode-remote://` URI\n\t */\n\tgetCanonicalURI(uri: URI): Promise<URI>;\n\n\t_clearResolvedAuthority(authority: string): void;\n\t_setResolvedAuthority(resolvedAuthority: ResolvedAuthority, resolvedOptions?: ResolvedOptions): void;\n\t_setResolvedAuthorityError(authority: string, err: any): void;\n\t_setAuthorityConnectionToken(authority: string, connectionToken: string): void;\n\t_setCanonicalURIProvider(provider: (uri: URI) => Promise<URI>): void;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancelablePromise, createCancelablePromise } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { isPromiseCanceledError, onUnexpectedError } from 'vs/base/common/errors';\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable, DisposableStore, IDisposable } from 'vs/base/common/lifecycle';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IIPCLogger } from 'vs/base/parts/ipc/common/ipc';\nimport { Client, ISocket, PersistentProtocol, SocketCloseEventType } from 'vs/base/parts/ipc/common/ipc.net';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { RemoteAgentConnectionContext } from 'vs/platform/remote/common/remoteAgentEnvironment';\nimport { RemoteAuthorityResolverError } from 'vs/platform/remote/common/remoteAuthorityResolver';\nimport { ISignService } from 'vs/platform/sign/common/sign';\n\nconst RECONNECT_TIMEOUT = 30 * 1000 /* 30s */;\n\nexport const enum ConnectionType {\n\tManagement = 1,\n\tExtensionHost = 2,\n\tTunnel = 3,\n}\n\nfunction connectionTypeToString(connectionType: ConnectionType): string {\n\tswitch (connectionType) {\n\t\tcase ConnectionType.Management:\n\t\t\treturn 'Management';\n\t\tcase ConnectionType.ExtensionHost:\n\t\t\treturn 'ExtensionHost';\n\t\tcase ConnectionType.Tunnel:\n\t\t\treturn 'Tunnel';\n\t}\n}\n\nexport interface AuthRequest {\n\ttype: 'auth';\n\tauth: string;\n\tdata: string;\n}\n\nexport interface SignRequest {\n\ttype: 'sign';\n\tdata: string;\n\tsignedData: string;\n}\n\nexport interface ConnectionTypeRequest {\n\ttype: 'connectionType';\n\tcommit?: string;\n\tsignedData: string;\n\tdesiredConnectionType?: ConnectionType;\n\targs?: any;\n}\n\nexport interface ErrorMessage {\n\ttype: 'error';\n\treason: string;\n}\n\nexport interface OKMessage {\n\ttype: 'ok';\n}\n\nexport type HandshakeMessage = AuthRequest | SignRequest | ConnectionTypeRequest | ErrorMessage | OKMessage;\n\n\ninterface ISimpleConnectionOptions {\n\tcommit: string | undefined;\n\thost: string;\n\tport: number;\n\tconnectionToken: string | undefined;\n\treconnectionToken: string;\n\treconnectionProtocol: PersistentProtocol | null;\n\tsocketFactory: ISocketFactory;\n\tsignService: ISignService;\n\tlogService: ILogService;\n}\n\nexport interface IConnectCallback {\n\t(err: any | undefined, socket: ISocket | undefined): void;\n}\n\nexport interface ISocketFactory {\n\tconnect(host: string, port: number, query: string, debugLabel: string, callback: IConnectCallback): void;\n}\n\nfunction createTimeoutCancellation(millis: number): CancellationToken {\n\tconst source = new CancellationTokenSource();\n\tsetTimeout(() => source.cancel(), millis);\n\treturn source.token;\n}\n\nfunction combineTimeoutCancellation(a: CancellationToken, b: CancellationToken): CancellationToken {\n\tif (a.isCancellationRequested || b.isCancellationRequested) {\n\t\treturn CancellationToken.Cancelled;\n\t}\n\tconst source = new CancellationTokenSource();\n\ta.onCancellationRequested(() => source.cancel());\n\tb.onCancellationRequested(() => source.cancel());\n\treturn source.token;\n}\n\nclass PromiseWithTimeout<T> {\n\n\tprivate _state: 'pending' | 'resolved' | 'rejected' | 'timedout';\n\tprivate readonly _disposables: DisposableStore;\n\tpublic readonly promise: Promise<T>;\n\tprivate _resolvePromise!: (value: T) => void;\n\tprivate _rejectPromise!: (err: any) => void;\n\n\tpublic get didTimeout(): boolean {\n\t\treturn (this._state === 'timedout');\n\t}\n\n\tconstructor(timeoutCancellationToken: CancellationToken) {\n\t\tthis._state = 'pending';\n\t\tthis._disposables = new DisposableStore();\n\t\tthis.promise = new Promise<T>((resolve, reject) => {\n\t\t\tthis._resolvePromise = resolve;\n\t\t\tthis._rejectPromise = reject;\n\t\t});\n\n\t\tif (timeoutCancellationToken.isCancellationRequested) {\n\t\t\tthis._timeout();\n\t\t} else {\n\t\t\tthis._disposables.add(timeoutCancellationToken.onCancellationRequested(() => this._timeout()));\n\t\t}\n\t}\n\n\tpublic registerDisposable(disposable: IDisposable): void {\n\t\tif (this._state === 'pending') {\n\t\t\tthis._disposables.add(disposable);\n\t\t} else {\n\t\t\tdisposable.dispose();\n\t\t}\n\t}\n\n\tprivate _timeout(): void {\n\t\tif (this._state !== 'pending') {\n\t\t\treturn;\n\t\t}\n\t\tthis._disposables.dispose();\n\t\tthis._state = 'timedout';\n\t\tthis._rejectPromise(this._createTimeoutError());\n\t}\n\n\tprivate _createTimeoutError(): Error {\n\t\tconst err: any = new Error('Time limit reached');\n\t\terr.code = 'ETIMEDOUT';\n\t\terr.syscall = 'connect';\n\t\treturn err;\n\t}\n\n\tpublic resolve(value: T): void {\n\t\tif (this._state !== 'pending') {\n\t\t\treturn;\n\t\t}\n\t\tthis._disposables.dispose();\n\t\tthis._state = 'resolved';\n\t\tthis._resolvePromise(value);\n\t}\n\n\tpublic reject(err: any): void {\n\t\tif (this._state !== 'pending') {\n\t\t\treturn;\n\t\t}\n\t\tthis._disposables.dispose();\n\t\tthis._state = 'rejected';\n\t\tthis._rejectPromise(err);\n\t}\n}\n\nfunction readOneControlMessage<T>(protocol: PersistentProtocol, timeoutCancellationToken: CancellationToken): Promise<T> {\n\tconst result = new PromiseWithTimeout<T>(timeoutCancellationToken);\n\tresult.registerDisposable(protocol.onControlMessage(raw => {\n\t\tconst msg: T = JSON.parse(raw.toString());\n\t\tconst error = getErrorFromMessage(msg);\n\t\tif (error) {\n\t\t\tresult.reject(error);\n\t\t} else {\n\t\t\tresult.resolve(msg);\n\t\t}\n\t}));\n\treturn result.promise;\n}\n\nfunction createSocket(logService: ILogService, socketFactory: ISocketFactory, host: string, port: number, query: string, debugLabel: string, timeoutCancellationToken: CancellationToken): Promise<ISocket> {\n\tconst result = new PromiseWithTimeout<ISocket>(timeoutCancellationToken);\n\tsocketFactory.connect(host, port, query, debugLabel, (err: any, socket: ISocket | undefined) => {\n\t\tif (result.didTimeout) {\n\t\t\tif (err) {\n\t\t\t\tlogService.error(err);\n\t\t\t}\n\t\t\tsocket?.dispose();\n\t\t} else {\n\t\t\tif (err || !socket) {\n\t\t\t\tresult.reject(err);\n\t\t\t} else {\n\t\t\t\tresult.resolve(socket);\n\t\t\t}\n\t\t}\n\t});\n\treturn result.promise;\n}\n\nfunction raceWithTimeoutCancellation<T>(promise: Promise<T>, timeoutCancellationToken: CancellationToken): Promise<T> {\n\tconst result = new PromiseWithTimeout<T>(timeoutCancellationToken);\n\tpromise.then(\n\t\t(res) => {\n\t\t\tif (!result.didTimeout) {\n\t\t\t\tresult.resolve(res);\n\t\t\t}\n\t\t},\n\t\t(err) => {\n\t\t\tif (!result.didTimeout) {\n\t\t\t\tresult.reject(err);\n\t\t\t}\n\t\t}\n\t);\n\treturn result.promise;\n}\n\nasync function connectToRemoteExtensionHostAgent(options: ISimpleConnectionOptions, connectionType: ConnectionType, args: any | undefined, timeoutCancellationToken: CancellationToken): Promise<{ protocol: PersistentProtocol; ownsProtocol: boolean; }> {\n\tconst logPrefix = connectLogPrefix(options, connectionType);\n\n\toptions.logService.trace(`${logPrefix} 1/6. invoking socketFactory.connect().`);\n\n\tlet socket: ISocket;\n\ttry {\n\t\tsocket = await createSocket(options.logService, options.socketFactory, options.host, options.port, `reconnectionToken=${options.reconnectionToken}&reconnection=${options.reconnectionProtocol ? 'true' : 'false'}`, `renderer-${connectionTypeToString(connectionType)}-${options.reconnectionToken}`, timeoutCancellationToken);\n\t} catch (error) {\n\t\toptions.logService.error(`${logPrefix} socketFactory.connect() failed or timed out. Error:`);\n\t\toptions.logService.error(error);\n\t\tthrow error;\n\t}\n\n\toptions.logService.trace(`${logPrefix} 2/6. socketFactory.connect() was successful.`);\n\n\tlet protocol: PersistentProtocol;\n\tlet ownsProtocol: boolean;\n\tif (options.reconnectionProtocol) {\n\t\toptions.reconnectionProtocol.beginAcceptReconnection(socket, null);\n\t\tprotocol = options.reconnectionProtocol;\n\t\townsProtocol = false;\n\t} else {\n\t\tprotocol = new PersistentProtocol(socket, null);\n\t\townsProtocol = true;\n\t}\n\n\toptions.logService.trace(`${logPrefix} 3/6. sending AuthRequest control message.`);\n\tconst message = await raceWithTimeoutCancellation(options.signService.createNewMessage(generateUuid()), timeoutCancellationToken);\n\n\tconst authRequest: AuthRequest = {\n\t\ttype: 'auth',\n\t\tauth: options.connectionToken || '00000000000000000000',\n\t\tdata: message.data\n\t};\n\tprotocol.sendControl(VSBuffer.fromString(JSON.stringify(authRequest)));\n\n\ttry {\n\t\tconst msg = await readOneControlMessage<HandshakeMessage>(protocol, combineTimeoutCancellation(timeoutCancellationToken, createTimeoutCancellation(10000)));\n\n\t\tif (msg.type !== 'sign' || typeof msg.data !== 'string') {\n\t\t\tconst error: any = new Error('Unexpected handshake message');\n\t\t\terror.code = 'VSCODE_CONNECTION_ERROR';\n\t\t\tthrow error;\n\t\t}\n\n\t\toptions.logService.trace(`${logPrefix} 4/6. received SignRequest control message.`);\n\n\t\tconst isValid = await raceWithTimeoutCancellation(options.signService.validate(message, msg.signedData), timeoutCancellationToken);\n\t\tif (!isValid) {\n\t\t\tconst error: any = new Error('Refused to connect to unsupported server');\n\t\t\terror.code = 'VSCODE_CONNECTION_ERROR';\n\t\t\tthrow error;\n\t\t}\n\n\t\tconst signed = await raceWithTimeoutCancellation(options.signService.sign(msg.data), timeoutCancellationToken);\n\t\tconst connTypeRequest: ConnectionTypeRequest = {\n\t\t\ttype: 'connectionType',\n\t\t\tcommit: options.commit,\n\t\t\tsignedData: signed,\n\t\t\tdesiredConnectionType: connectionType\n\t\t};\n\t\tif (args) {\n\t\t\tconnTypeRequest.args = args;\n\t\t}\n\n\t\toptions.logService.trace(`${logPrefix} 5/6. sending ConnectionTypeRequest control message.`);\n\t\tprotocol.sendControl(VSBuffer.fromString(JSON.stringify(connTypeRequest)));\n\n\t\treturn { protocol, ownsProtocol };\n\n\t} catch (error) {\n\t\tif (error && error.code === 'ETIMEDOUT') {\n\t\t\toptions.logService.error(`${logPrefix} the handshake timed out. Error:`);\n\t\t\toptions.logService.error(error);\n\t\t}\n\t\tif (error && error.code === 'VSCODE_CONNECTION_ERROR') {\n\t\t\toptions.logService.error(`${logPrefix} received error control message when negotiating connection. Error:`);\n\t\t\toptions.logService.error(error);\n\t\t}\n\t\tif (ownsProtocol) {\n\t\t\tsafeDisposeProtocolAndSocket(protocol);\n\t\t}\n\t\tthrow error;\n\t}\n}\n\ninterface IManagementConnectionResult {\n\tprotocol: PersistentProtocol;\n}\n\nasync function connectToRemoteExtensionHostAgentAndReadOneMessage<T>(options: ISimpleConnectionOptions, connectionType: ConnectionType, args: any | undefined, timeoutCancellationToken: CancellationToken): Promise<{ protocol: PersistentProtocol; firstMessage: T; }> {\n\tconst startTime = Date.now();\n\tconst logPrefix = connectLogPrefix(options, connectionType);\n\tconst { protocol, ownsProtocol } = await connectToRemoteExtensionHostAgent(options, connectionType, args, timeoutCancellationToken);\n\tconst result = new PromiseWithTimeout<{ protocol: PersistentProtocol; firstMessage: T; }>(timeoutCancellationToken);\n\tresult.registerDisposable(protocol.onControlMessage(raw => {\n\t\tconst msg: T = JSON.parse(raw.toString());\n\t\tconst error = getErrorFromMessage(msg);\n\t\tif (error) {\n\t\t\toptions.logService.error(`${logPrefix} received error control message when negotiating connection. Error:`);\n\t\t\toptions.logService.error(error);\n\t\t\tif (ownsProtocol) {\n\t\t\t\tsafeDisposeProtocolAndSocket(protocol);\n\t\t\t}\n\t\t\tresult.reject(error);\n\t\t} else {\n\t\t\tif (options.reconnectionProtocol) {\n\t\t\t\toptions.reconnectionProtocol.endAcceptReconnection();\n\t\t\t}\n\t\t\toptions.logService.trace(`${logPrefix} 6/6. handshake finished, connection is up and running after ${logElapsed(startTime)}!`);\n\t\t\tresult.resolve({ protocol, firstMessage: msg });\n\t\t}\n\t}));\n\treturn result.promise;\n}\n\nasync function doConnectRemoteAgentManagement(options: ISimpleConnectionOptions, timeoutCancellationToken: CancellationToken): Promise<IManagementConnectionResult> {\n\tconst { protocol } = await connectToRemoteExtensionHostAgentAndReadOneMessage(options, ConnectionType.Management, undefined, timeoutCancellationToken);\n\treturn { protocol };\n}\n\nexport interface IRemoteExtensionHostStartParams {\n\tlanguage: string;\n\tdebugId?: string;\n\tbreak?: boolean;\n\tport?: number | null;\n\tenv?: { [key: string]: string | null };\n}\n\ninterface IExtensionHostConnectionResult {\n\tprotocol: PersistentProtocol;\n\tdebugPort?: number;\n}\n\nasync function doConnectRemoteAgentExtensionHost(options: ISimpleConnectionOptions, startArguments: IRemoteExtensionHostStartParams, timeoutCancellationToken: CancellationToken): Promise<IExtensionHostConnectionResult> {\n\tconst { protocol, firstMessage } = await connectToRemoteExtensionHostAgentAndReadOneMessage<{ debugPort?: number; }>(options, ConnectionType.ExtensionHost, startArguments, timeoutCancellationToken);\n\tconst debugPort = firstMessage && firstMessage.debugPort;\n\treturn { protocol, debugPort };\n}\n\nexport interface ITunnelConnectionStartParams {\n\thost: string;\n\tport: number;\n}\n\nasync function doConnectRemoteAgentTunnel(options: ISimpleConnectionOptions, startParams: ITunnelConnectionStartParams, timeoutCancellationToken: CancellationToken): Promise<PersistentProtocol> {\n\tconst startTime = Date.now();\n\tconst logPrefix = connectLogPrefix(options, ConnectionType.Tunnel);\n\tconst { protocol } = await connectToRemoteExtensionHostAgent(options, ConnectionType.Tunnel, startParams, timeoutCancellationToken);\n\toptions.logService.trace(`${logPrefix} 6/6. handshake finished, connection is up and running after ${logElapsed(startTime)}!`);\n\treturn protocol;\n}\n\nexport interface IConnectionOptions {\n\tcommit: string | undefined;\n\tsocketFactory: ISocketFactory;\n\taddressProvider: IAddressProvider;\n\tsignService: ISignService;\n\tlogService: ILogService;\n\tipcLogger: IIPCLogger | null;\n}\n\nasync function resolveConnectionOptions(options: IConnectionOptions, reconnectionToken: string, reconnectionProtocol: PersistentProtocol | null): Promise<ISimpleConnectionOptions> {\n\tconst { host, port, connectionToken } = await options.addressProvider.getAddress();\n\treturn {\n\t\tcommit: options.commit,\n\t\thost: host,\n\t\tport: port,\n\t\tconnectionToken: connectionToken,\n\t\treconnectionToken: reconnectionToken,\n\t\treconnectionProtocol: reconnectionProtocol,\n\t\tsocketFactory: options.socketFactory,\n\t\tsignService: options.signService,\n\t\tlogService: options.logService\n\t};\n}\n\nexport interface IAddress {\n\thost: string;\n\tport: number;\n\tconnectionToken: string | undefined;\n}\n\nexport interface IAddressProvider {\n\tgetAddress(): Promise<IAddress>;\n}\n\nexport async function connectRemoteAgentManagement(options: IConnectionOptions, remoteAuthority: string, clientId: string): Promise<ManagementPersistentConnection> {\n\ttry {\n\t\tconst reconnectionToken = generateUuid();\n\t\tconst simpleOptions = await resolveConnectionOptions(options, reconnectionToken, null);\n\t\tconst { protocol } = await doConnectRemoteAgentManagement(simpleOptions, CancellationToken.None);\n\t\treturn new ManagementPersistentConnection(options, remoteAuthority, clientId, reconnectionToken, protocol);\n\t} catch (err) {\n\t\toptions.logService.error(`[remote-connection] An error occurred in the very first connect attempt, it will be treated as a permanent error! Error:`);\n\t\toptions.logService.error(err);\n\t\tPersistentConnection.triggerPermanentFailure(0, 0, RemoteAuthorityResolverError.isHandled(err));\n\t\tthrow err;\n\t}\n}\n\nexport async function connectRemoteAgentExtensionHost(options: IConnectionOptions, startArguments: IRemoteExtensionHostStartParams): Promise<ExtensionHostPersistentConnection> {\n\ttry {\n\t\tconst reconnectionToken = generateUuid();\n\t\tconst simpleOptions = await resolveConnectionOptions(options, reconnectionToken, null);\n\t\tconst { protocol, debugPort } = await doConnectRemoteAgentExtensionHost(simpleOptions, startArguments, CancellationToken.None);\n\t\treturn new ExtensionHostPersistentConnection(options, startArguments, reconnectionToken, protocol, debugPort);\n\t} catch (err) {\n\t\toptions.logService.error(`[remote-connection] An error occurred in the very first connect attempt, it will be treated as a permanent error! Error:`);\n\t\toptions.logService.error(err);\n\t\tPersistentConnection.triggerPermanentFailure(0, 0, RemoteAuthorityResolverError.isHandled(err));\n\t\tthrow err;\n\t}\n}\n\nexport async function connectRemoteAgentTunnel(options: IConnectionOptions, tunnelRemoteHost: string, tunnelRemotePort: number): Promise<PersistentProtocol> {\n\tconst simpleOptions = await resolveConnectionOptions(options, generateUuid(), null);\n\tconst protocol = await doConnectRemoteAgentTunnel(simpleOptions, { host: tunnelRemoteHost, port: tunnelRemotePort }, CancellationToken.None);\n\treturn protocol;\n}\n\nfunction sleep(seconds: number): CancelablePromise<void> {\n\treturn createCancelablePromise(token => {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst timeout = setTimeout(resolve, seconds * 1000);\n\t\t\ttoken.onCancellationRequested(() => {\n\t\t\t\tclearTimeout(timeout);\n\t\t\t\tresolve();\n\t\t\t});\n\t\t});\n\t});\n}\n\nexport const enum PersistentConnectionEventType {\n\tConnectionLost,\n\tReconnectionWait,\n\tReconnectionRunning,\n\tReconnectionPermanentFailure,\n\tConnectionGain\n}\nexport class ConnectionLostEvent {\n\tpublic readonly type = PersistentConnectionEventType.ConnectionLost;\n\tconstructor(\n\t\tpublic readonly reconnectionToken: string,\n\t\tpublic readonly millisSinceLastIncomingData: number\n\t) { }\n}\nexport class ReconnectionWaitEvent {\n\tpublic readonly type = PersistentConnectionEventType.ReconnectionWait;\n\tconstructor(\n\t\tpublic readonly reconnectionToken: string,\n\t\tpublic readonly millisSinceLastIncomingData: number,\n\t\tpublic readonly durationSeconds: number,\n\t\tprivate readonly cancellableTimer: CancelablePromise<void>\n\t) { }\n\n\tpublic skipWait(): void {\n\t\tthis.cancellableTimer.cancel();\n\t}\n}\nexport class ReconnectionRunningEvent {\n\tpublic readonly type = PersistentConnectionEventType.ReconnectionRunning;\n\tconstructor(\n\t\tpublic readonly reconnectionToken: string,\n\t\tpublic readonly millisSinceLastIncomingData: number,\n\t\tpublic readonly attempt: number\n\t) { }\n}\nexport class ConnectionGainEvent {\n\tpublic readonly type = PersistentConnectionEventType.ConnectionGain;\n\tconstructor(\n\t\tpublic readonly reconnectionToken: string,\n\t\tpublic readonly millisSinceLastIncomingData: number,\n\t\tpublic readonly attempt: number\n\t) { }\n}\nexport class ReconnectionPermanentFailureEvent {\n\tpublic readonly type = PersistentConnectionEventType.ReconnectionPermanentFailure;\n\tconstructor(\n\t\tpublic readonly reconnectionToken: string,\n\t\tpublic readonly millisSinceLastIncomingData: number,\n\t\tpublic readonly attempt: number,\n\t\tpublic readonly handled: boolean\n\t) { }\n}\nexport type PersistentConnectionEvent = ConnectionGainEvent | ConnectionLostEvent | ReconnectionWaitEvent | ReconnectionRunningEvent | ReconnectionPermanentFailureEvent;\n\nexport abstract class PersistentConnection extends Disposable {\n\n\tpublic static triggerPermanentFailure(millisSinceLastIncomingData: number, attempt: number, handled: boolean): void {\n\t\tthis._permanentFailure = true;\n\t\tthis._permanentFailureMillisSinceLastIncomingData = millisSinceLastIncomingData;\n\t\tthis._permanentFailureAttempt = attempt;\n\t\tthis._permanentFailureHandled = handled;\n\t\tthis._instances.forEach(instance => instance._gotoPermanentFailure(this._permanentFailureMillisSinceLastIncomingData, this._permanentFailureAttempt, this._permanentFailureHandled));\n\t}\n\n\tpublic static debugTriggerReconnection() {\n\t\tthis._instances.forEach(instance => instance._beginReconnecting());\n\t}\n\n\tpublic static debugPauseSocketWriting() {\n\t\tthis._instances.forEach(instance => instance._pauseSocketWriting());\n\t}\n\n\tprivate static _permanentFailure: boolean = false;\n\tprivate static _permanentFailureMillisSinceLastIncomingData: number = 0;\n\tprivate static _permanentFailureAttempt: number = 0;\n\tprivate static _permanentFailureHandled: boolean = false;\n\tprivate static _instances: PersistentConnection[] = [];\n\n\tprivate readonly _onDidStateChange = this._register(new Emitter<PersistentConnectionEvent>());\n\tpublic readonly onDidStateChange = this._onDidStateChange.event;\n\n\tprotected readonly _options: IConnectionOptions;\n\tpublic readonly reconnectionToken: string;\n\tpublic readonly protocol: PersistentProtocol;\n\n\tprivate _isReconnecting: boolean;\n\n\tconstructor(private readonly _connectionType: ConnectionType, options: IConnectionOptions, reconnectionToken: string, protocol: PersistentProtocol) {\n\t\tsuper();\n\t\tthis._options = options;\n\t\tthis.reconnectionToken = reconnectionToken;\n\t\tthis.protocol = protocol;\n\t\tthis._isReconnecting = false;\n\n\t\tthis._onDidStateChange.fire(new ConnectionGainEvent(this.reconnectionToken, 0, 0));\n\n\t\tthis._register(protocol.onSocketClose((e) => {\n\t\t\tconst logPrefix = commonLogPrefix(this._connectionType, this.reconnectionToken, true);\n\t\t\tif (!e) {\n\t\t\t\tthis._options.logService.info(`${logPrefix} received socket close event.`);\n\t\t\t} else if (e.type === SocketCloseEventType.NodeSocketCloseEvent) {\n\t\t\t\tthis._options.logService.info(`${logPrefix} received socket close event (hadError: ${e.hadError}).`);\n\t\t\t\tif (e.error) {\n\t\t\t\t\tthis._options.logService.error(e.error);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._options.logService.info(`${logPrefix} received socket close event (wasClean: ${e.wasClean}, code: ${e.code}, reason: ${e.reason}).`);\n\t\t\t\tif (e.event) {\n\t\t\t\t\tthis._options.logService.error(e.event);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._beginReconnecting();\n\t\t}));\n\t\tthis._register(protocol.onSocketTimeout(() => {\n\t\t\tconst logPrefix = commonLogPrefix(this._connectionType, this.reconnectionToken, true);\n\t\t\tthis._options.logService.info(`${logPrefix} received socket timeout event.`);\n\t\t\tthis._beginReconnecting();\n\t\t}));\n\n\t\tPersistentConnection._instances.push(this);\n\n\t\tif (PersistentConnection._permanentFailure) {\n\t\t\tthis._gotoPermanentFailure(PersistentConnection._permanentFailureMillisSinceLastIncomingData, PersistentConnection._permanentFailureAttempt, PersistentConnection._permanentFailureHandled);\n\t\t}\n\t}\n\n\tprivate async _beginReconnecting(): Promise<void> {\n\t\t// Only have one reconnection loop active at a time.\n\t\tif (this._isReconnecting) {\n\t\t\treturn;\n\t\t}\n\t\ttry {\n\t\t\tthis._isReconnecting = true;\n\t\t\tawait this._runReconnectingLoop();\n\t\t} finally {\n\t\t\tthis._isReconnecting = false;\n\t\t}\n\t}\n\n\tprivate async _runReconnectingLoop(): Promise<void> {\n\t\tif (PersistentConnection._permanentFailure) {\n\t\t\t// no more attempts!\n\t\t\treturn;\n\t\t}\n\t\tconst logPrefix = commonLogPrefix(this._connectionType, this.reconnectionToken, true);\n\t\tthis._options.logService.info(`${logPrefix} starting reconnecting loop. You can get more information with the trace log level.`);\n\t\tthis._onDidStateChange.fire(new ConnectionLostEvent(this.reconnectionToken, this.protocol.getMillisSinceLastIncomingData()));\n\t\tconst TIMES = [0, 5, 5, 10, 10, 10, 10, 10, 30];\n\t\tlet attempt = -1;\n\t\tdo {\n\t\t\tattempt++;\n\t\t\tconst waitTime = (attempt < TIMES.length ? TIMES[attempt] : TIMES[TIMES.length - 1]);\n\t\t\ttry {\n\t\t\t\tif (waitTime > 0) {\n\t\t\t\t\tconst sleepPromise = sleep(waitTime);\n\t\t\t\t\tthis._onDidStateChange.fire(new ReconnectionWaitEvent(this.reconnectionToken, this.protocol.getMillisSinceLastIncomingData(), waitTime, sleepPromise));\n\n\t\t\t\t\tthis._options.logService.info(`${logPrefix} waiting for ${waitTime} seconds before reconnecting...`);\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait sleepPromise;\n\t\t\t\t\t} catch { } // User canceled timer\n\t\t\t\t}\n\n\t\t\t\tif (PersistentConnection._permanentFailure) {\n\t\t\t\t\tthis._options.logService.error(`${logPrefix} permanent failure occurred while running the reconnecting loop.`);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// connection was lost, let's try to re-establish it\n\t\t\t\tthis._onDidStateChange.fire(new ReconnectionRunningEvent(this.reconnectionToken, this.protocol.getMillisSinceLastIncomingData(), attempt + 1));\n\t\t\t\tthis._options.logService.info(`${logPrefix} resolving connection...`);\n\t\t\t\tconst simpleOptions = await resolveConnectionOptions(this._options, this.reconnectionToken, this.protocol);\n\t\t\t\tthis._options.logService.info(`${logPrefix} connecting to ${simpleOptions.host}:${simpleOptions.port}...`);\n\t\t\t\tawait this._reconnect(simpleOptions, createTimeoutCancellation(RECONNECT_TIMEOUT));\n\t\t\t\tthis._options.logService.info(`${logPrefix} reconnected!`);\n\t\t\t\tthis._onDidStateChange.fire(new ConnectionGainEvent(this.reconnectionToken, this.protocol.getMillisSinceLastIncomingData(), attempt + 1));\n\n\t\t\t\tbreak;\n\t\t\t} catch (err) {\n\t\t\t\tif (err.code === 'VSCODE_CONNECTION_ERROR') {\n\t\t\t\t\tthis._options.logService.error(`${logPrefix} A permanent error occurred in the reconnecting loop! Will give up now! Error:`);\n\t\t\t\t\tthis._options.logService.error(err);\n\t\t\t\t\tPersistentConnection.triggerPermanentFailure(this.protocol.getMillisSinceLastIncomingData(), attempt + 1, false);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (attempt > 360) {\n\t\t\t\t\t// ReconnectionGraceTime is 3hrs, with 30s between attempts that yields a maximum of 360 attempts\n\t\t\t\t\tthis._options.logService.error(`${logPrefix} An error occurred while reconnecting, but it will be treated as a permanent error because the reconnection grace time has expired! Will give up now! Error:`);\n\t\t\t\t\tthis._options.logService.error(err);\n\t\t\t\t\tPersistentConnection.triggerPermanentFailure(this.protocol.getMillisSinceLastIncomingData(), attempt + 1, false);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (RemoteAuthorityResolverError.isTemporarilyNotAvailable(err)) {\n\t\t\t\t\tthis._options.logService.info(`${logPrefix} A temporarily not available error occurred while trying to reconnect, will try again...`);\n\t\t\t\t\tthis._options.logService.trace(err);\n\t\t\t\t\t// try again!\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif ((err.code === 'ETIMEDOUT' || err.code === 'ENETUNREACH' || err.code === 'ECONNREFUSED' || err.code === 'ECONNRESET') && err.syscall === 'connect') {\n\t\t\t\t\tthis._options.logService.info(`${logPrefix} A network error occurred while trying to reconnect, will try again...`);\n\t\t\t\t\tthis._options.logService.trace(err);\n\t\t\t\t\t// try again!\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (isPromiseCanceledError(err)) {\n\t\t\t\t\tthis._options.logService.info(`${logPrefix} A promise cancelation error occurred while trying to reconnect, will try again...`);\n\t\t\t\t\tthis._options.logService.trace(err);\n\t\t\t\t\t// try again!\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (err instanceof RemoteAuthorityResolverError) {\n\t\t\t\t\tthis._options.logService.error(`${logPrefix} A RemoteAuthorityResolverError occurred while trying to reconnect. Will give up now! Error:`);\n\t\t\t\t\tthis._options.logService.error(err);\n\t\t\t\t\tPersistentConnection.triggerPermanentFailure(this.protocol.getMillisSinceLastIncomingData(), attempt + 1, RemoteAuthorityResolverError.isHandled(err));\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tthis._options.logService.error(`${logPrefix} An unknown error occurred while trying to reconnect, since this is an unknown case, it will be treated as a permanent error! Will give up now! Error:`);\n\t\t\t\tthis._options.logService.error(err);\n\t\t\t\tPersistentConnection.triggerPermanentFailure(this.protocol.getMillisSinceLastIncomingData(), attempt + 1, false);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while (!PersistentConnection._permanentFailure);\n\t}\n\n\tprivate _gotoPermanentFailure(millisSinceLastIncomingData: number, attempt: number, handled: boolean): void {\n\t\tthis._onDidStateChange.fire(new ReconnectionPermanentFailureEvent(this.reconnectionToken, millisSinceLastIncomingData, attempt, handled));\n\t\tsafeDisposeProtocolAndSocket(this.protocol);\n\t}\n\n\tprivate _pauseSocketWriting(): void {\n\t\tthis.protocol.pauseSocketWriting();\n\t}\n\n\tprotected abstract _reconnect(options: ISimpleConnectionOptions, timeoutCancellationToken: CancellationToken): Promise<void>;\n}\n\nexport class ManagementPersistentConnection extends PersistentConnection {\n\n\tpublic readonly client: Client<RemoteAgentConnectionContext>;\n\n\tconstructor(options: IConnectionOptions, remoteAuthority: string, clientId: string, reconnectionToken: string, protocol: PersistentProtocol) {\n\t\tsuper(ConnectionType.Management, options, reconnectionToken, protocol);\n\t\tthis.client = this._register(new Client<RemoteAgentConnectionContext>(protocol, {\n\t\t\tremoteAuthority: remoteAuthority,\n\t\t\tclientId: clientId\n\t\t}, options.ipcLogger));\n\t}\n\n\tprotected async _reconnect(options: ISimpleConnectionOptions, timeoutCancellationToken: CancellationToken): Promise<void> {\n\t\tawait doConnectRemoteAgentManagement(options, timeoutCancellationToken);\n\t}\n}\n\nexport class ExtensionHostPersistentConnection extends PersistentConnection {\n\n\tprivate readonly _startArguments: IRemoteExtensionHostStartParams;\n\tpublic readonly debugPort: number | undefined;\n\n\tconstructor(options: IConnectionOptions, startArguments: IRemoteExtensionHostStartParams, reconnectionToken: string, protocol: PersistentProtocol, debugPort: number | undefined) {\n\t\tsuper(ConnectionType.ExtensionHost, options, reconnectionToken, protocol);\n\t\tthis._startArguments = startArguments;\n\t\tthis.debugPort = debugPort;\n\t}\n\n\tprotected async _reconnect(options: ISimpleConnectionOptions, timeoutCancellationToken: CancellationToken): Promise<void> {\n\t\tawait doConnectRemoteAgentExtensionHost(options, this._startArguments, timeoutCancellationToken);\n\t}\n}\n\nfunction safeDisposeProtocolAndSocket(protocol: PersistentProtocol): void {\n\ttry {\n\t\tprotocol.acceptDisconnect();\n\t\tconst socket = protocol.getSocket();\n\t\tprotocol.dispose();\n\t\tsocket.dispose();\n\t} catch (err) {\n\t\tonUnexpectedError(err);\n\t}\n}\n\nfunction getErrorFromMessage(msg: any): Error | null {\n\tif (msg && msg.type === 'error') {\n\t\tconst error = new Error(`Connection error: ${msg.reason}`);\n\t\t(<any>error).code = 'VSCODE_CONNECTION_ERROR';\n\t\treturn error;\n\t}\n\treturn null;\n}\n\nfunction stringRightPad(str: string, len: number): string {\n\twhile (str.length < len) {\n\t\tstr += ' ';\n\t}\n\treturn str;\n}\n\nfunction commonLogPrefix(connectionType: ConnectionType, reconnectionToken: string, isReconnect: boolean): string {\n\treturn `[remote-connection][${stringRightPad(connectionTypeToString(connectionType), 13)}][${reconnectionToken.substr(0, 5)}…][${isReconnect ? 'reconnect' : 'initial'}]`;\n}\n\nfunction connectLogPrefix(options: ISimpleConnectionOptions, connectionType: ConnectionType): string {\n\treturn `${commonLogPrefix(connectionType, options.reconnectionToken, !!options.reconnectionProtocol)}[${options.host}:${options.port}]`;\n}\n\nfunction logElapsed(startTime: number): string {\n\treturn `${Date.now() - startTime} ms`;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Schemas } from 'vs/base/common/network';\nimport { URI } from 'vs/base/common/uri';\nimport { IWorkspace } from 'vs/platform/workspace/common/workspace';\n\nexport function getRemoteAuthority(uri: URI): string | undefined {\n\treturn uri.scheme === Schemas.vscodeRemote ? uri.authority : undefined;\n}\n\nexport function getRemoteName(authority: string): string;\nexport function getRemoteName(authority: undefined): undefined;\nexport function getRemoteName(authority: string | undefined): string | undefined;\nexport function getRemoteName(authority: string | undefined): string | undefined {\n\tif (!authority) {\n\t\treturn undefined;\n\t}\n\tconst pos = authority.indexOf('+');\n\tif (pos < 0) {\n\t\t// e.g. localhost:8000\n\t\treturn authority;\n\t}\n\treturn authority.substr(0, pos);\n}\n\nexport function isVirtualResource(resource: URI) {\n\treturn resource.scheme !== Schemas.file && resource.scheme !== Schemas.vscodeRemote;\n}\n\nexport function getVirtualWorkspaceLocation(workspace: IWorkspace): { scheme: string, authority: string } | undefined {\n\tif (workspace.folders.length) {\n\t\treturn workspace.folders.every(f => isVirtualResource(f.uri)) ? workspace.folders[0].uri : undefined;\n\t} else if (workspace.configuration && isVirtualResource(workspace.configuration)) {\n\t\treturn workspace.configuration;\n\t}\n\treturn undefined;\n}\n\nexport function getVirtualWorkspaceScheme(workspace: IWorkspace): string | undefined {\n\treturn getVirtualWorkspaceLocation(workspace)?.scheme;\n}\n\nexport function isVirtualWorkspace(workspace: IWorkspace): boolean {\n\treturn getVirtualWorkspaceLocation(workspace) !== undefined;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as strings from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ILocalization } from 'vs/platform/localizations/common/localizations';\nimport { getRemoteName } from 'vs/platform/remote/common/remoteHosts';\n\nexport const MANIFEST_CACHE_FOLDER = 'CachedExtensions';\nexport const USER_MANIFEST_CACHE_FILE = 'user';\nexport const BUILTIN_MANIFEST_CACHE_FILE = 'builtin';\n\nexport interface ICommand {\n\tcommand: string;\n\ttitle: string;\n\tcategory?: string;\n}\n\nexport interface IConfigurationProperty {\n\tdescription: string;\n\ttype: string | string[];\n\tdefault?: any;\n}\n\nexport interface IConfiguration {\n\tid?: string,\n\torder?: number,\n\ttitle?: string,\n\tproperties: { [key: string]: IConfigurationProperty; };\n}\n\nexport interface IDebugger {\n\tlabel?: string;\n\ttype: string;\n\truntime?: string;\n}\n\nexport interface IGrammar {\n\tlanguage: string;\n}\n\nexport interface IJSONValidation {\n\tfileMatch: string | string[];\n\turl: string;\n}\n\nexport interface IKeyBinding {\n\tcommand: string;\n\tkey: string;\n\twhen?: string;\n\tmac?: string;\n\tlinux?: string;\n\twin?: string;\n}\n\nexport interface ILanguage {\n\tid: string;\n\textensions: string[];\n\taliases: string[];\n}\n\nexport interface IMenu {\n\tcommand: string;\n\talt?: string;\n\twhen?: string;\n\tgroup?: string;\n}\n\nexport interface ISnippet {\n\tlanguage: string;\n}\n\nexport interface ITheme {\n\tlabel: string;\n}\n\nexport interface IViewContainer {\n\tid: string;\n\ttitle: string;\n}\n\nexport interface IView {\n\tid: string;\n\tname: string;\n}\n\nexport interface IColor {\n\tid: string;\n\tdescription: string;\n\tdefaults: { light: string, dark: string, highContrast: string };\n}\n\nexport interface IWebviewEditor {\n\treadonly viewType: string;\n\treadonly priority: string;\n\treadonly selector: readonly {\n\t\treadonly filenamePattern?: string;\n\t}[];\n}\n\nexport interface ICodeActionContributionAction {\n\treadonly kind: string;\n\treadonly title: string;\n\treadonly description?: string;\n}\n\nexport interface ICodeActionContribution {\n\treadonly languages: readonly string[];\n\treadonly actions: readonly ICodeActionContributionAction[];\n}\n\nexport interface IAuthenticationContribution {\n\treadonly id: string;\n\treadonly label: string;\n}\n\nexport interface IWalkthroughStep {\n\treadonly id: string;\n\treadonly title: string;\n\treadonly description: string | undefined;\n\treadonly media:\n\t| { image: string | { dark: string, light: string, hc: string }, altText: string, markdown?: never, svg?: never }\n\t| { markdown: string, image?: never, svg?: never }\n\t| { svg: string, altText: string, markdown?: never, image?: never }\n\treadonly completionEvents?: string[];\n\t/** @deprecated use `completionEvents: 'onCommand:...'` */\n\treadonly doneOn?: { command: string };\n\treadonly when?: string;\n}\n\nexport interface IWalkthrough {\n\treadonly id: string,\n\treadonly title: string;\n\treadonly description: string;\n\treadonly steps: IWalkthroughStep[];\n\treadonly featuredFor: string[] | undefined;\n\treadonly when?: string;\n}\n\nexport interface IStartEntry {\n\treadonly title: string;\n\treadonly description: string;\n\treadonly command: string;\n\treadonly when?: string;\n\treadonly category: 'file' | 'folder' | 'notebook';\n}\n\nexport interface INotebookEntry {\n\treadonly type: string;\n\treadonly displayName: string;\n}\n\nexport interface INotebookRendererContribution {\n\treadonly id: string;\n\treadonly displayName: string;\n\treadonly mimeTypes: string[];\n}\n\nexport interface IExtensionContributions {\n\tcommands?: ICommand[];\n\tconfiguration?: IConfiguration | IConfiguration[];\n\tdebuggers?: IDebugger[];\n\tgrammars?: IGrammar[];\n\tjsonValidation?: IJSONValidation[];\n\tkeybindings?: IKeyBinding[];\n\tlanguages?: ILanguage[];\n\tmenus?: { [context: string]: IMenu[] };\n\tsnippets?: ISnippet[];\n\tthemes?: ITheme[];\n\ticonThemes?: ITheme[];\n\tproductIconThemes?: ITheme[];\n\tviewsContainers?: { [location: string]: IViewContainer[] };\n\tviews?: { [location: string]: IView[] };\n\tcolors?: IColor[];\n\tlocalizations?: ILocalization[];\n\treadonly customEditors?: readonly IWebviewEditor[];\n\treadonly codeActions?: readonly ICodeActionContribution[];\n\tauthentication?: IAuthenticationContribution[];\n\twalkthroughs?: IWalkthrough[];\n\tstartEntries?: IStartEntry[];\n\treadonly notebooks?: INotebookEntry[];\n\treadonly notebookRenderer?: INotebookRendererContribution[];\n}\n\nexport interface IExtensionCapabilities {\n\treadonly virtualWorkspaces?: ExtensionVirtualWorkspaceSupport;\n\treadonly untrustedWorkspaces?: ExtensionUntrustedWorkspaceSupport;\n}\n\n\nexport const ALL_EXTENSION_KINDS: readonly ExtensionKind[] = ['ui', 'workspace', 'web'];\nexport type ExtensionKind = 'ui' | 'workspace' | 'web';\n\nexport type LimitedWorkspaceSupportType = 'limited';\nexport type ExtensionUntrustedWorkspaceSupportType = boolean | LimitedWorkspaceSupportType;\nexport type ExtensionUntrustedWorkspaceSupport = { supported: true; } | { supported: false, description: string } | { supported: LimitedWorkspaceSupportType, description: string, restrictedConfigurations?: string[] };\n\nexport type ExtensionVirtualWorkspaceSupportType = boolean | LimitedWorkspaceSupportType;\nexport type ExtensionVirtualWorkspaceSupport = boolean | { supported: true; } | { supported: false | LimitedWorkspaceSupportType, description: string };\n\nexport function getWorkspaceSupportTypeMessage(supportType: ExtensionUntrustedWorkspaceSupport | ExtensionVirtualWorkspaceSupport | undefined): string | undefined {\n\tif (typeof supportType === 'object' && supportType !== null) {\n\t\tif (supportType.supported !== true) {\n\t\t\treturn supportType.description;\n\t\t}\n\t}\n\treturn undefined;\n}\n\n\nexport function isIExtensionIdentifier(thing: any): thing is IExtensionIdentifier {\n\treturn thing\n\t\t&& typeof thing === 'object'\n\t\t&& typeof thing.id === 'string'\n\t\t&& (!thing.uuid || typeof thing.uuid === 'string');\n}\n\nexport interface IExtensionIdentifier {\n\tid: string;\n\tuuid?: string;\n}\n\nexport const EXTENSION_CATEGORIES = [\n\t'Azure',\n\t'Data Science',\n\t'Debuggers',\n\t'Extension Packs',\n\t'Education',\n\t'Formatters',\n\t'Keymaps',\n\t'Language Packs',\n\t'Linters',\n\t'Machine Learning',\n\t'Notebooks',\n\t'Programming Languages',\n\t'SCM Providers',\n\t'Snippets',\n\t'Testing',\n\t'Themes',\n\t'Visualization',\n\t'Other',\n];\n\nexport interface IExtensionManifest {\n\treadonly name: string;\n\treadonly displayName?: string;\n\treadonly publisher: string;\n\treadonly version: string;\n\treadonly engines: { readonly vscode: string };\n\treadonly description?: string;\n\treadonly main?: string;\n\treadonly browser?: string;\n\treadonly icon?: string;\n\treadonly categories?: string[];\n\treadonly keywords?: string[];\n\treadonly activationEvents?: string[];\n\treadonly extensionDependencies?: string[];\n\treadonly extensionPack?: string[];\n\treadonly extensionKind?: ExtensionKind | ExtensionKind[];\n\treadonly contributes?: IExtensionContributions;\n\treadonly repository?: { url: string; };\n\treadonly bugs?: { url: string; };\n\treadonly enabledApiProposals?: readonly string[];\n\treadonly api?: string;\n\treadonly scripts?: { [key: string]: string; };\n\treadonly capabilities?: IExtensionCapabilities;\n}\n\nexport const enum ExtensionType {\n\tSystem,\n\tUser\n}\n\nexport interface IExtension {\n\treadonly type: ExtensionType;\n\treadonly isBuiltin: boolean;\n\treadonly identifier: IExtensionIdentifier;\n\treadonly manifest: IExtensionManifest;\n\treadonly location: URI;\n\treadonly readmeUrl?: URI;\n\treadonly changelogUrl?: URI;\n}\n\n/**\n * **!Do not construct directly!**\n *\n * **!Only static methods because it gets serialized!**\n *\n * This represents the \"canonical\" version for an extension identifier. Extension ids\n * have to be case-insensitive (due to the marketplace), but we must ensure case\n * preservation because the extension API is already public at this time.\n *\n * For example, given an extension with the publisher `\"Hello\"` and the name `\"World\"`,\n * its canonical extension identifier is `\"Hello.World\"`. This extension could be\n * referenced in some other extension's dependencies using the string `\"hello.world\"`.\n *\n * To make matters more complicated, an extension can optionally have an UUID. When two\n * extensions have the same UUID, they are considered equal even if their identifier is different.\n */\nexport class ExtensionIdentifier {\n\tpublic readonly value: string;\n\tprivate readonly _lower: string;\n\n\tconstructor(value: string) {\n\t\tthis.value = value;\n\t\tthis._lower = value.toLowerCase();\n\t}\n\n\tpublic static equals(a: ExtensionIdentifier | string | null | undefined, b: ExtensionIdentifier | string | null | undefined) {\n\t\tif (typeof a === 'undefined' || a === null) {\n\t\t\treturn (typeof b === 'undefined' || b === null);\n\t\t}\n\t\tif (typeof b === 'undefined' || b === null) {\n\t\t\treturn false;\n\t\t}\n\t\tif (typeof a === 'string' || typeof b === 'string') {\n\t\t\t// At least one of the arguments is an extension id in string form,\n\t\t\t// so we have to use the string comparison which ignores case.\n\t\t\tlet aValue = (typeof a === 'string' ? a : a.value);\n\t\t\tlet bValue = (typeof b === 'string' ? b : b.value);\n\t\t\treturn strings.equalsIgnoreCase(aValue, bValue);\n\t\t}\n\n\t\t// Now we know both arguments are ExtensionIdentifier\n\t\treturn (a._lower === b._lower);\n\t}\n\n\t/**\n\t * Gives the value by which to index (for equality).\n\t */\n\tpublic static toKey(id: ExtensionIdentifier | string): string {\n\t\tif (typeof id === 'string') {\n\t\t\treturn id.toLowerCase();\n\t\t}\n\t\treturn id._lower;\n\t}\n}\n\nexport interface IExtensionDescription extends IExtensionManifest {\n\treadonly identifier: ExtensionIdentifier;\n\treadonly uuid?: string;\n\treadonly isBuiltin: boolean;\n\treadonly isUserBuiltin: boolean;\n\treadonly isUnderDevelopment: boolean;\n\treadonly extensionLocation: URI;\n}\n\nexport function isLanguagePackExtension(manifest: IExtensionManifest): boolean {\n\treturn manifest.contributes && manifest.contributes.localizations ? manifest.contributes.localizations.length > 0 : false;\n}\n\nexport function isAuthenticationProviderExtension(manifest: IExtensionManifest): boolean {\n\treturn manifest.contributes && manifest.contributes.authentication ? manifest.contributes.authentication.length > 0 : false;\n}\n\nexport function isResolverExtension(manifest: IExtensionManifest, remoteAuthority: string | undefined): boolean {\n\tif (remoteAuthority) {\n\t\tconst activationEvent = `onResolveRemoteAuthority:${getRemoteName(remoteAuthority)}`;\n\t\treturn manifest.activationEvents?.indexOf(activationEvent) !== -1;\n\t}\n\treturn false;\n}\n\nexport const IBuiltinExtensionsScannerService = createDecorator<IBuiltinExtensionsScannerService>('IBuiltinExtensionsScannerService');\nexport interface IBuiltinExtensionsScannerService {\n\treadonly _serviceBrand: undefined;\n\tscanBuiltinExtensions(): Promise<IExtension[]>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { compareIgnoreCase } from 'vs/base/common/strings';\nimport { IExtensionIdentifier, IExtensionIdentifierWithVersion, IGalleryExtension, ILocalExtension, IExtensionsControlManifest } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { ExtensionIdentifier, IExtension } from 'vs/platform/extensions/common/extensions';\n\nexport function areSameExtensions(a: IExtensionIdentifier, b: IExtensionIdentifier): boolean {\n\tif (a.uuid && b.uuid) {\n\t\treturn a.uuid === b.uuid;\n\t}\n\tif (a.id === b.id) {\n\t\treturn true;\n\t}\n\treturn compareIgnoreCase(a.id, b.id) === 0;\n}\n\nexport class ExtensionIdentifierWithVersion implements IExtensionIdentifierWithVersion {\n\n\treadonly id: string;\n\treadonly uuid?: string;\n\n\tconstructor(\n\t\tidentifier: IExtensionIdentifier,\n\t\treadonly version: string\n\t) {\n\t\tthis.id = identifier.id;\n\t\tthis.uuid = identifier.uuid;\n\t}\n\n\tkey(): string {\n\t\treturn `${this.id}-${this.version}`;\n\t}\n\n\tequals(o: any): boolean {\n\t\tif (!(o instanceof ExtensionIdentifierWithVersion)) {\n\t\t\treturn false;\n\t\t}\n\t\treturn areSameExtensions(this, o) && this.version === o.version;\n\t}\n}\n\nexport function getExtensionId(publisher: string, name: string): string {\n\treturn `${publisher}.${name}`;\n}\n\nexport function adoptToGalleryExtensionId(id: string): string {\n\treturn id.toLocaleLowerCase();\n}\n\nexport function getGalleryExtensionId(publisher: string, name: string): string {\n\treturn adoptToGalleryExtensionId(getExtensionId(publisher, name));\n}\n\nexport function groupByExtension<T>(extensions: T[], getExtensionIdentifier: (t: T) => IExtensionIdentifier): T[][] {\n\tconst byExtension: T[][] = [];\n\tconst findGroup = (extension: T) => {\n\t\tfor (const group of byExtension) {\n\t\t\tif (group.some(e => areSameExtensions(getExtensionIdentifier(e), getExtensionIdentifier(extension)))) {\n\t\t\t\treturn group;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t};\n\tfor (const extension of extensions) {\n\t\tconst group = findGroup(extension);\n\t\tif (group) {\n\t\t\tgroup.push(extension);\n\t\t} else {\n\t\t\tbyExtension.push([extension]);\n\t\t}\n\t}\n\treturn byExtension;\n}\n\nexport function getLocalExtensionTelemetryData(extension: ILocalExtension): any {\n\treturn {\n\t\tid: extension.identifier.id,\n\t\tname: extension.manifest.name,\n\t\tgalleryId: null,\n\t\tpublisherId: extension.publisherId,\n\t\tpublisherName: extension.manifest.publisher,\n\t\tpublisherDisplayName: extension.publisherDisplayName,\n\t\tdependencies: extension.manifest.extensionDependencies && extension.manifest.extensionDependencies.length > 0\n\t};\n}\n\n\n/* __GDPR__FRAGMENT__\n\t\"GalleryExtensionTelemetryData\" : {\n\t\t\"id\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"name\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"galleryId\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherId\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherName\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"publisherDisplayName\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"isPreReleaseVersion\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"dependencies\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\"${include}\": [\n\t\t\t\"${GalleryExtensionTelemetryData2}\"\n\t\t]\n\t}\n*/\nexport function getGalleryExtensionTelemetryData(extension: IGalleryExtension): any {\n\treturn {\n\t\tid: extension.identifier.id,\n\t\tname: extension.name,\n\t\tgalleryId: extension.identifier.uuid,\n\t\tpublisherId: extension.publisherId,\n\t\tpublisherName: extension.publisher,\n\t\tpublisherDisplayName: extension.publisherDisplayName,\n\t\tisPreReleaseVersion: extension.properties.isPreReleaseVersion,\n\t\tdependencies: !!(extension.properties.dependencies && extension.properties.dependencies.length > 0),\n\t\t...extension.telemetryData\n\t};\n}\n\nexport const BetterMergeId = new ExtensionIdentifier('pprice.better-merge');\n\nexport function getMaliciousExtensionsSet(manifest: IExtensionsControlManifest): Set<string> {\n\tconst result = new Set<string>();\n\n\tif (manifest.malicious) {\n\t\tfor (const extension of manifest.malicious) {\n\t\t\tresult.add(extension.id);\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function getExtensionDependencies(installedExtensions: ReadonlyArray<IExtension>, extension: IExtension): IExtension[] {\n\tconst dependencies: IExtension[] = [];\n\tconst extensions = extension.manifest.extensionDependencies?.slice(0) ?? [];\n\n\twhile (extensions.length) {\n\t\tconst id = extensions.shift();\n\n\t\tif (id && dependencies.every(e => !areSameExtensions(e.identifier, { id }))) {\n\t\t\tconst ext = installedExtensions.filter(e => areSameExtensions(e.identifier, { id }));\n\t\t\tif (ext.length === 1) {\n\t\t\t\tdependencies.push(ext[0]);\n\t\t\t\textensions.push(...ext[0].manifest.extensionDependencies?.slice(0) ?? []);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dependencies;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { isWindows, OperatingSystem } from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IAddressProvider } from 'vs/platform/remote/common/remoteAgentConnection';\n\nexport const ITunnelService = createDecorator<ITunnelService>('tunnelService');\nexport const ISharedTunnelsService = createDecorator<ISharedTunnelsService>('sharedTunnelsService');\n\nexport interface RemoteTunnel {\n\treadonly tunnelRemotePort: number;\n\treadonly tunnelRemoteHost: string;\n\treadonly tunnelLocalPort?: number;\n\treadonly localAddress: string;\n\treadonly privacy: string;\n\treadonly protocol?: string;\n\tdispose(silent?: boolean): Promise<void>;\n}\n\nexport interface TunnelOptions {\n\tremoteAddress: { port: number, host: string; };\n\tlocalAddressPort?: number;\n\tlabel?: string;\n\tpublic?: boolean;\n\tprivacy?: string;\n\tprotocol?: string;\n}\n\nexport enum TunnelProtocol {\n\tHttp = 'http',\n\tHttps = 'https'\n}\n\nexport enum TunnelPrivacyId {\n\tConstantPrivate = 'constantPrivate', // private, and changing is unsupported\n\tPrivate = 'private',\n\tPublic = 'public'\n}\n\nexport interface TunnelCreationOptions {\n\televationRequired?: boolean;\n}\n\nexport interface TunnelPrivacy {\n\tthemeIcon: string;\n\tid: string;\n\tlabel: string;\n}\n\nexport interface TunnelProviderFeatures {\n\televation: boolean;\n\t/**\n\t * @deprecated\n\t */\n\tpublic: boolean;\n\tprivacyOptions: TunnelPrivacy[];\n}\n\nexport interface ITunnelProvider {\n\tforwardPort(tunnelOptions: TunnelOptions, tunnelCreationOptions: TunnelCreationOptions): Promise<RemoteTunnel | undefined> | undefined;\n}\n\nexport enum ProvidedOnAutoForward {\n\tNotify = 1,\n\tOpenBrowser = 2,\n\tOpenPreview = 3,\n\tSilent = 4,\n\tIgnore = 5,\n\tOpenBrowserOnce = 6\n}\n\nexport interface ProvidedPortAttributes {\n\tport: number;\n\tautoForwardAction: ProvidedOnAutoForward;\n}\n\nexport interface PortAttributesProvider {\n\tprovidePortAttributes(ports: number[], pid: number | undefined, commandLine: string | undefined, token: CancellationToken): Promise<ProvidedPortAttributes[]>;\n}\n\nexport interface ITunnel {\n\tremoteAddress: { port: number, host: string };\n\n\t/**\n\t * The complete local address(ex. localhost:1234)\n\t */\n\tlocalAddress: string;\n\n\t/**\n\t * @deprecated Use privacy instead\n\t */\n\tpublic?: boolean;\n\n\tprivacy?: string;\n\n\tprotocol?: string;\n\n\t/**\n\t * Implementers of Tunnel should fire onDidDispose when dispose is called.\n\t */\n\tonDidDispose: Event<void>;\n\n\tdispose(): Promise<void> | void;\n}\n\nexport interface ISharedTunnelsService {\n\treadonly _serviceBrand: undefined;\n\n\topenTunnel(authority: string, addressProvider: IAddressProvider | undefined, remoteHost: string | undefined, remotePort: number, localPort?: number, elevateIfNeeded?: boolean, privacy?: string, protocol?: string): Promise<RemoteTunnel | undefined> | undefined;\n}\n\nexport interface ITunnelService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly tunnels: Promise<readonly RemoteTunnel[]>;\n\treadonly canChangePrivacy: boolean;\n\treadonly privacyOptions: TunnelPrivacy[];\n\treadonly onTunnelOpened: Event<RemoteTunnel>;\n\treadonly onTunnelClosed: Event<{ host: string, port: number; }>;\n\treadonly canElevate: boolean;\n\treadonly hasTunnelProvider: boolean;\n\treadonly onAddedTunnelProvider: Event<void>;\n\n\tcanTunnel(uri: URI): boolean;\n\topenTunnel(addressProvider: IAddressProvider | undefined, remoteHost: string | undefined, remotePort: number, localPort?: number, elevateIfNeeded?: boolean, privacy?: string, protocol?: string): Promise<RemoteTunnel | undefined> | undefined;\n\tcloseTunnel(remoteHost: string, remotePort: number): Promise<void>;\n\tsetTunnelProvider(provider: ITunnelProvider | undefined, features: TunnelProviderFeatures): IDisposable;\n}\n\nexport function extractLocalHostUriMetaDataForPortMapping(uri: URI): { address: string, port: number; } | undefined {\n\tif (uri.scheme !== 'http' && uri.scheme !== 'https') {\n\t\treturn undefined;\n\t}\n\tconst localhostMatch = /^(localhost|127\\.0\\.0\\.1|0\\.0\\.0\\.0):(\\d+)$/.exec(uri.authority);\n\tif (!localhostMatch) {\n\t\treturn undefined;\n\t}\n\treturn {\n\t\taddress: localhostMatch[1],\n\t\tport: +localhostMatch[2],\n\t};\n}\n\nexport const LOCALHOST_ADDRESSES = ['localhost', '127.0.0.1', '0:0:0:0:0:0:0:1', '::1'];\nexport function isLocalhost(host: string): boolean {\n\treturn LOCALHOST_ADDRESSES.indexOf(host) >= 0;\n}\n\nexport const ALL_INTERFACES_ADDRESSES = ['0.0.0.0', '0:0:0:0:0:0:0:0', '::'];\nexport function isAllInterfaces(host: string): boolean {\n\treturn ALL_INTERFACES_ADDRESSES.indexOf(host) >= 0;\n}\n\nexport function isPortPrivileged(port: number, os?: OperatingSystem): boolean {\n\tif (os) {\n\t\treturn os !== OperatingSystem.Windows && (port < 1024);\n\t} else {\n\t\treturn !isWindows && (port < 1024);\n\t}\n}\n\nexport abstract class AbstractTunnelService implements ITunnelService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _onTunnelOpened: Emitter<RemoteTunnel> = new Emitter();\n\tpublic onTunnelOpened: Event<RemoteTunnel> = this._onTunnelOpened.event;\n\tprivate _onTunnelClosed: Emitter<{ host: string, port: number; }> = new Emitter();\n\tpublic onTunnelClosed: Event<{ host: string, port: number; }> = this._onTunnelClosed.event;\n\tprivate _onAddedTunnelProvider: Emitter<void> = new Emitter();\n\tpublic onAddedTunnelProvider: Event<void> = this._onAddedTunnelProvider.event;\n\tprotected readonly _tunnels = new Map</*host*/ string, Map</* port */ number, { refcount: number, readonly value: Promise<RemoteTunnel | undefined>; }>>();\n\tprotected _tunnelProvider: ITunnelProvider | undefined;\n\tprotected _canElevate: boolean = false;\n\tprivate _privacyOptions: TunnelPrivacy[] = [];\n\n\tpublic constructor(\n\t\t@ILogService protected readonly logService: ILogService\n\t) { }\n\n\tget hasTunnelProvider(): boolean {\n\t\treturn !!this._tunnelProvider;\n\t}\n\n\tsetTunnelProvider(provider: ITunnelProvider | undefined, features: TunnelProviderFeatures): IDisposable {\n\t\tthis._tunnelProvider = provider;\n\t\tif (!provider) {\n\t\t\t// clear features\n\t\t\tthis._canElevate = false;\n\t\t\tthis._privacyOptions = [];\n\t\t\tthis._onAddedTunnelProvider.fire();\n\t\t\treturn {\n\t\t\t\tdispose: () => { }\n\t\t\t};\n\t\t}\n\t\tthis._canElevate = features.elevation;\n\t\tthis._privacyOptions = features.privacyOptions;\n\t\tthis._onAddedTunnelProvider.fire();\n\t\treturn {\n\t\t\tdispose: () => {\n\t\t\t\tthis._tunnelProvider = undefined;\n\t\t\t\tthis._canElevate = false;\n\t\t\t\tthis._privacyOptions = [];\n\t\t\t}\n\t\t};\n\t}\n\n\tpublic get canElevate(): boolean {\n\t\treturn this._canElevate;\n\t}\n\n\tpublic get canChangePrivacy() {\n\t\treturn this._privacyOptions.length > 0;\n\t}\n\n\tpublic get privacyOptions() {\n\t\treturn this._privacyOptions;\n\t}\n\n\tpublic get tunnels(): Promise<readonly RemoteTunnel[]> {\n\t\treturn this.getTunnels();\n\t}\n\n\tprivate async getTunnels(): Promise<readonly RemoteTunnel[]> {\n\t\tconst tunnels: RemoteTunnel[] = [];\n\t\tconst tunnelArray = Array.from(this._tunnels.values());\n\t\tfor (let portMap of tunnelArray) {\n\t\t\tconst portArray = Array.from(portMap.values());\n\t\t\tfor (let x of portArray) {\n\t\t\t\tconst tunnelValue = await x.value;\n\t\t\t\tif (tunnelValue) {\n\t\t\t\t\ttunnels.push(tunnelValue);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn tunnels;\n\t}\n\n\tasync dispose(): Promise<void> {\n\t\tfor (const portMap of this._tunnels.values()) {\n\t\t\tfor (const { value } of portMap.values()) {\n\t\t\t\tawait value.then(tunnel => tunnel?.dispose());\n\t\t\t}\n\t\t\tportMap.clear();\n\t\t}\n\t\tthis._tunnels.clear();\n\t}\n\n\topenTunnel(addressProvider: IAddressProvider | undefined, remoteHost: string | undefined, remotePort: number, localPort?: number, elevateIfNeeded: boolean = false, privacy: string = TunnelPrivacyId.Private, protocol?: string): Promise<RemoteTunnel | undefined> | undefined {\n\t\tthis.logService.trace(`ForwardedPorts: (TunnelService) openTunnel request for ${remoteHost}:${remotePort} on local port ${localPort}.`);\n\t\tif (!addressProvider) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (!remoteHost) {\n\t\t\tremoteHost = 'localhost';\n\t\t}\n\n\t\tconst resolvedTunnel = this.retainOrCreateTunnel(addressProvider, remoteHost, remotePort, localPort, elevateIfNeeded, privacy, protocol);\n\t\tif (!resolvedTunnel) {\n\t\t\tthis.logService.trace(`ForwardedPorts: (TunnelService) Tunnel was not created.`);\n\t\t\treturn resolvedTunnel;\n\t\t}\n\n\t\treturn resolvedTunnel.then(tunnel => {\n\t\t\tif (!tunnel) {\n\t\t\t\tthis.logService.trace('ForwardedPorts: (TunnelService) New tunnel is undefined.');\n\t\t\t\tthis.removeEmptyTunnelFromMap(remoteHost!, remotePort);\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tthis.logService.trace('ForwardedPorts: (TunnelService) New tunnel established.');\n\t\t\tconst newTunnel = this.makeTunnel(tunnel);\n\t\t\tif (tunnel.tunnelRemoteHost !== remoteHost || tunnel.tunnelRemotePort !== remotePort) {\n\t\t\t\tthis.logService.warn('ForwardedPorts: (TunnelService) Created tunnel does not match requirements of requested tunnel. Host or port mismatch.');\n\t\t\t}\n\t\t\tthis._onTunnelOpened.fire(newTunnel);\n\t\t\treturn newTunnel;\n\t\t});\n\t}\n\n\tprivate makeTunnel(tunnel: RemoteTunnel): RemoteTunnel {\n\t\treturn {\n\t\t\ttunnelRemotePort: tunnel.tunnelRemotePort,\n\t\t\ttunnelRemoteHost: tunnel.tunnelRemoteHost,\n\t\t\ttunnelLocalPort: tunnel.tunnelLocalPort,\n\t\t\tlocalAddress: tunnel.localAddress,\n\t\t\tprivacy: tunnel.privacy,\n\t\t\tprotocol: tunnel.protocol,\n\t\t\tdispose: async () => {\n\t\t\t\tthis.logService.trace(`ForwardedPorts: (TunnelService) dispose request for ${tunnel.tunnelRemoteHost}:${tunnel.tunnelRemotePort} `);\n\t\t\t\tconst existingHost = this._tunnels.get(tunnel.tunnelRemoteHost);\n\t\t\t\tif (existingHost) {\n\t\t\t\t\tconst existing = existingHost.get(tunnel.tunnelRemotePort);\n\t\t\t\t\tif (existing) {\n\t\t\t\t\t\texisting.refcount--;\n\t\t\t\t\t\tawait this.tryDisposeTunnel(tunnel.tunnelRemoteHost, tunnel.tunnelRemotePort, existing);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n\n\tprivate async tryDisposeTunnel(remoteHost: string, remotePort: number, tunnel: { refcount: number, readonly value: Promise<RemoteTunnel | undefined> }): Promise<void> {\n\t\tif (tunnel.refcount <= 0) {\n\t\t\tthis.logService.trace(`ForwardedPorts: (TunnelService) Tunnel is being disposed ${remoteHost}:${remotePort}.`);\n\t\t\tconst disposePromise: Promise<void> = tunnel.value.then(async (tunnel) => {\n\t\t\t\tif (tunnel) {\n\t\t\t\t\tawait tunnel.dispose(true);\n\t\t\t\t\tthis._onTunnelClosed.fire({ host: tunnel.tunnelRemoteHost, port: tunnel.tunnelRemotePort });\n\t\t\t\t}\n\t\t\t});\n\t\t\tif (this._tunnels.has(remoteHost)) {\n\t\t\t\tthis._tunnels.get(remoteHost)!.delete(remotePort);\n\t\t\t}\n\t\t\treturn disposePromise;\n\t\t}\n\t}\n\n\tasync closeTunnel(remoteHost: string, remotePort: number): Promise<void> {\n\t\tthis.logService.trace(`ForwardedPorts: (TunnelService) close request for ${remoteHost}:${remotePort} `);\n\t\tconst portMap = this._tunnels.get(remoteHost);\n\t\tif (portMap && portMap.has(remotePort)) {\n\t\t\tconst value = portMap.get(remotePort)!;\n\t\t\tvalue.refcount = 0;\n\t\t\tawait this.tryDisposeTunnel(remoteHost, remotePort, value);\n\t\t}\n\t}\n\n\tprotected addTunnelToMap(remoteHost: string, remotePort: number, tunnel: Promise<RemoteTunnel | undefined>) {\n\t\tif (!this._tunnels.has(remoteHost)) {\n\t\t\tthis._tunnels.set(remoteHost, new Map());\n\t\t}\n\t\tthis._tunnels.get(remoteHost)!.set(remotePort, { refcount: 1, value: tunnel });\n\t}\n\n\tprivate async removeEmptyTunnelFromMap(remoteHost: string, remotePort: number) {\n\t\tconst hostMap = this._tunnels.get(remoteHost);\n\t\tif (hostMap) {\n\t\t\tconst tunnel = hostMap.get(remotePort);\n\t\t\tconst tunnelResult = await tunnel;\n\t\t\tif (!tunnelResult) {\n\t\t\t\thostMap.delete(remotePort);\n\t\t\t}\n\t\t\tif (hostMap.size === 0) {\n\t\t\t\tthis._tunnels.delete(remoteHost);\n\t\t\t}\n\t\t}\n\t}\n\n\tprotected getTunnelFromMap(remoteHost: string, remotePort: number): { refcount: number, readonly value: Promise<RemoteTunnel | undefined> } | undefined {\n\t\tlet hosts = [remoteHost];\n\t\t// Order matters. We want the original host to be first.\n\t\tif (isLocalhost(remoteHost)) {\n\t\t\thosts.push(...LOCALHOST_ADDRESSES);\n\t\t\t// For localhost, we add the all interfaces hosts because if the tunnel is already available at all interfaces,\n\t\t\t// then of course it is available at localhost.\n\t\t\thosts.push(...ALL_INTERFACES_ADDRESSES);\n\t\t} else if (isAllInterfaces(remoteHost)) {\n\t\t\thosts.push(...ALL_INTERFACES_ADDRESSES);\n\t\t}\n\n\t\tconst existingPortMaps = hosts.map(host => this._tunnels.get(host));\n\t\tfor (const map of existingPortMaps) {\n\t\t\tconst existingTunnel = map?.get(remotePort);\n\t\t\tif (existingTunnel) {\n\t\t\t\treturn existingTunnel;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tcanTunnel(uri: URI): boolean {\n\t\treturn !!extractLocalHostUriMetaDataForPortMapping(uri);\n\t}\n\n\tprotected abstract retainOrCreateTunnel(addressProvider: IAddressProvider, remoteHost: string, remotePort: number, localPort: number | undefined, elevateIfNeeded: boolean, privacy: string, protocol?: string): Promise<RemoteTunnel | undefined> | undefined;\n\n\tprotected createWithProvider(tunnelProvider: ITunnelProvider, remoteHost: string, remotePort: number, localPort: number | undefined, elevateIfNeeded: boolean, privacy: string, protocol?: string): Promise<RemoteTunnel | undefined> | undefined {\n\t\tthis.logService.trace(`ForwardedPorts: (TunnelService) Creating tunnel with provider ${remoteHost}:${remotePort} on local port ${localPort}.`);\n\n\t\tconst preferredLocalPort = localPort === undefined ? remotePort : localPort;\n\t\tconst creationInfo = { elevationRequired: elevateIfNeeded ? isPortPrivileged(preferredLocalPort) : false };\n\t\tconst tunnelOptions: TunnelOptions = { remoteAddress: { host: remoteHost, port: remotePort }, localAddressPort: localPort, privacy, public: privacy !== TunnelPrivacyId.Private, protocol };\n\t\tconst tunnel = tunnelProvider.forwardPort(tunnelOptions, creationInfo);\n\t\tthis.logService.trace('ForwardedPorts: (TunnelService) Tunnel created by provider.');\n\t\tif (tunnel) {\n\t\t\tthis.addTunnelToMap(remoteHost, remotePort, tunnel);\n\t\t}\n\t\treturn tunnel;\n\t}\n}\n\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { streamToBuffer } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IRequestContext, IRequestOptions } from 'vs/base/parts/request/common/request';\nimport { localize } from 'vs/nls';\nimport { ConfigurationScope, Extensions, IConfigurationNode, IConfigurationRegistry } from 'vs/platform/configuration/common/configurationRegistry';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { Registry } from 'vs/platform/registry/common/platform';\n\nexport const IRequestService = createDecorator<IRequestService>('requestService');\n\nexport interface IRequestService {\n\treadonly _serviceBrand: undefined;\n\n\trequest(options: IRequestOptions, token: CancellationToken): Promise<IRequestContext>;\n\n\tresolveProxy(url: string): Promise<string | undefined>;\n}\n\nexport function isSuccess(context: IRequestContext): boolean {\n\treturn (context.res.statusCode && context.res.statusCode >= 200 && context.res.statusCode < 300) || context.res.statusCode === 1223;\n}\n\nfunction hasNoContent(context: IRequestContext): boolean {\n\treturn context.res.statusCode === 204;\n}\n\nexport async function asText(context: IRequestContext): Promise<string | null> {\n\tif (!isSuccess(context)) {\n\t\tthrow new Error('Server returned ' + context.res.statusCode);\n\t}\n\tif (hasNoContent(context)) {\n\t\treturn null;\n\t}\n\tconst buffer = await streamToBuffer(context.stream);\n\treturn buffer.toString();\n}\n\nexport async function asJson<T = {}>(context: IRequestContext): Promise<T | null> {\n\tif (!isSuccess(context)) {\n\t\tthrow new Error('Server returned ' + context.res.statusCode);\n\t}\n\tif (hasNoContent(context)) {\n\t\treturn null;\n\t}\n\tconst buffer = await streamToBuffer(context.stream);\n\tconst str = buffer.toString();\n\ttry {\n\t\treturn JSON.parse(str);\n\t} catch (err) {\n\t\terr.message += ':\\n' + str;\n\t\tthrow err;\n\t}\n}\n\n\nexport interface IHTTPConfiguration {\n\thttp?: {\n\t\tproxy?: string;\n\t\tproxyStrictSSL?: boolean;\n\t\tproxyAuthorization?: string;\n\t};\n}\n\nexport function updateProxyConfigurationsScope(scope: ConfigurationScope): void {\n\tregisterProxyConfigurations(scope);\n}\n\nlet proxyConfiguration: IConfigurationNode | undefined;\nfunction registerProxyConfigurations(scope: ConfigurationScope): void {\n\tconst configurationRegistry = Registry.as<IConfigurationRegistry>(Extensions.Configuration);\n\tconst oldProxyConfiguration = proxyConfiguration;\n\tproxyConfiguration = {\n\t\tid: 'http',\n\t\torder: 15,\n\t\ttitle: localize('httpConfigurationTitle', \"HTTP\"),\n\t\ttype: 'object',\n\t\tscope,\n\t\tproperties: {\n\t\t\t'http.proxy': {\n\t\t\t\ttype: 'string',\n\t\t\t\tpattern: '^https?://([^:]*(:[^@]*)?@)?([^:]+|\\\\[[:0-9a-fA-F]+\\\\])(:\\\\d+)?/?$|^$',\n\t\t\t\tmarkdownDescription: localize('proxy', \"The proxy setting to use. If not set, will be inherited from the `http_proxy` and `https_proxy` environment variables.\"),\n\t\t\t\trestricted: true\n\t\t\t},\n\t\t\t'http.proxyStrictSSL': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdescription: localize('strictSSL', \"Controls whether the proxy server certificate should be verified against the list of supplied CAs.\"),\n\t\t\t\trestricted: true\n\t\t\t},\n\t\t\t'http.proxyAuthorization': {\n\t\t\t\ttype: ['null', 'string'],\n\t\t\t\tdefault: null,\n\t\t\t\tmarkdownDescription: localize('proxyAuthorization', \"The value to send as the `Proxy-Authorization` header for every network request.\"),\n\t\t\t\trestricted: true\n\t\t\t},\n\t\t\t'http.proxySupport': {\n\t\t\t\ttype: 'string',\n\t\t\t\tenum: ['off', 'on', 'fallback', 'override'],\n\t\t\t\tenumDescriptions: [\n\t\t\t\t\tlocalize('proxySupportOff', \"Disable proxy support for extensions.\"),\n\t\t\t\t\tlocalize('proxySupportOn', \"Enable proxy support for extensions.\"),\n\t\t\t\t\tlocalize('proxySupportFallback', \"Enable proxy support for extensions, fall back to request options, when no proxy found.\"),\n\t\t\t\t\tlocalize('proxySupportOverride', \"Enable proxy support for extensions, override request options.\"),\n\t\t\t\t],\n\t\t\t\tdefault: 'override',\n\t\t\t\tdescription: localize('proxySupport', \"Use the proxy support for extensions.\"),\n\t\t\t\trestricted: true\n\t\t\t},\n\t\t\t'http.systemCertificates': {\n\t\t\t\ttype: 'boolean',\n\t\t\t\tdefault: true,\n\t\t\t\tdescription: localize('systemCertificates', \"Controls whether CA certificates should be loaded from the OS. (On Windows and macOS, a reload of the window is required after turning this off.)\"),\n\t\t\t\trestricted: true\n\t\t\t}\n\t\t}\n\t};\n\tconfigurationRegistry.updateConfigurations({ add: [proxyConfiguration], remove: oldProxyConfiguration ? [oldProxyConfiguration] : [] });\n}\n\nregisterProxyConfigurations(ConfigurationScope.MACHINE);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { parse as parseUrl, Url } from 'url';\nimport { isBoolean } from 'vs/base/common/types';\n\nexport type Agent = any;\n\nfunction getSystemProxyURI(requestURL: Url, env: typeof process.env): string | null {\n\tif (requestURL.protocol === 'http:') {\n\t\treturn env.HTTP_PROXY || env.http_proxy || null;\n\t} else if (requestURL.protocol === 'https:') {\n\t\treturn env.HTTPS_PROXY || env.https_proxy || env.HTTP_PROXY || env.http_proxy || null;\n\t}\n\n\treturn null;\n}\n\nexport interface IOptions {\n\tproxyUrl?: string;\n\tstrictSSL?: boolean;\n}\n\nexport async function getProxyAgent(rawRequestURL: string, env: typeof process.env, options: IOptions = {}): Promise<Agent> {\n\tconst requestURL = parseUrl(rawRequestURL);\n\tconst proxyURL = options.proxyUrl || getSystemProxyURI(requestURL, env);\n\n\tif (!proxyURL) {\n\t\treturn null;\n\t}\n\n\tconst proxyEndpoint = parseUrl(proxyURL);\n\n\tif (!/^https?:$/.test(proxyEndpoint.protocol || '')) {\n\t\treturn null;\n\t}\n\n\tconst opts = {\n\t\thost: proxyEndpoint.hostname || '',\n\t\tport: proxyEndpoint.port || (proxyEndpoint.protocol === 'https' ? '443' : '80'),\n\t\tauth: proxyEndpoint.auth,\n\t\trejectUnauthorized: isBoolean(options.strictSSL) ? options.strictSSL : true,\n\t};\n\n\treturn requestURL.protocol === 'http:'\n\t\t? new (await import('http-proxy-agent'))(opts as any as Url)\n\t\t: new (await import('https-proxy-agent'))(opts);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { generateUuid, isUUID } from 'vs/base/common/uuid';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\n\nexport async function getServiceMachineId(environmentService: IEnvironmentService, fileService: IFileService, storageService: {\n\tget: (key: string, scope: StorageScope, fallbackValue?: string | undefined) => string | undefined,\n\tstore: (key: string, value: string, scope: StorageScope, target: StorageTarget) => void\n} | undefined): Promise<string> {\n\tlet uuid: string | null = storageService ? storageService.get('storage.serviceMachineId', StorageScope.GLOBAL) || null : null;\n\tif (uuid) {\n\t\treturn uuid;\n\t}\n\ttry {\n\t\tconst contents = await fileService.readFile(environmentService.serviceMachineIdResource);\n\t\tconst value = contents.value.toString();\n\t\tuuid = isUUID(value) ? value : null;\n\t} catch (e) {\n\t\tuuid = null;\n\t}\n\n\tif (!uuid) {\n\t\tuuid = generateUuid();\n\t\ttry {\n\t\t\tawait fileService.writeFile(environmentService.serviceMachineIdResource, VSBuffer.fromString(uuid));\n\t\t} catch (error) {\n\t\t\t//noop\n\t\t}\n\t}\n\tif (storageService) {\n\t\tstorageService.store('storage.serviceMachineId', uuid, StorageScope.GLOBAL, StorageTarget.MACHINE);\n\t}\n\treturn uuid;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const SIGN_SERVICE_ID = 'signService';\nexport const ISignService = createDecorator<ISignService>(SIGN_SERVICE_ID);\n\nexport interface IMessage {\n\tid: string;\n\tdata: string;\n}\n\nexport interface ISignService {\n\treadonly _serviceBrand: undefined;\n\n\tcreateNewMessage(value: string): Promise<IMessage>;\n\tvalidate(message: IMessage, value: string): Promise<boolean>;\n\tsign(value: string): Promise<string>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IMessage, ISignService } from 'vs/platform/sign/common/sign';\n\ndeclare module vsda {\n\t// the signer is a native module that for historical reasons uses a lower case class name\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\texport class signer {\n\t\tsign(arg: string): string;\n\t}\n\n\t// eslint-disable-next-line @typescript-eslint/naming-convention\n\texport class validator {\n\t\tcreateNewMessage(arg: string): string;\n\t\tvalidate(arg: string): 'ok' | 'error';\n\t}\n}\n\nexport class SignService implements ISignService {\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate static _nextId = 1;\n\tprivate readonly validators = new Map<string, vsda.validator>();\n\n\tprivate vsda(): Promise<typeof vsda> {\n\t\treturn new Promise((resolve, reject) => require(['vsda'], resolve, reject));\n\t}\n\n\tasync createNewMessage(value: string): Promise<IMessage> {\n\t\ttry {\n\t\t\tconst vsda = await this.vsda();\n\t\t\tconst validator = new vsda.validator();\n\t\t\tif (validator) {\n\t\t\t\tconst id = String(SignService._nextId++);\n\t\t\t\tthis.validators.set(id, validator);\n\t\t\t\treturn {\n\t\t\t\t\tid: id,\n\t\t\t\t\tdata: validator.createNewMessage(value)\n\t\t\t\t};\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// ignore errors silently\n\t\t}\n\t\treturn { id: '', data: value };\n\t}\n\n\tasync validate(message: IMessage, value: string): Promise<boolean> {\n\t\tif (!message.id) {\n\t\t\treturn true;\n\t\t}\n\n\t\tconst validator = this.validators.get(message.id);\n\t\tif (!validator) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.validators.delete(message.id);\n\t\ttry {\n\t\t\treturn (validator.validate(value) === 'ok');\n\t\t} catch (e) {\n\t\t\t// ignore errors silently\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tasync sign(value: string): Promise<string> {\n\t\ttry {\n\t\t\tconst vsda = await this.vsda();\n\t\t\tconst signer = new vsda.signer();\n\t\t\tif (signer) {\n\t\t\t\treturn signer.sign(value);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// ignore errors silently\n\t\t}\n\t\treturn value;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IStateMainService = createDecorator<IStateMainService>('stateMainService');\n\nexport interface IStateMainService {\n\n\treadonly _serviceBrand: undefined;\n\n\tgetItem<T>(key: string, defaultValue: T): T;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined;\n\n\tsetItem(key: string, data?: object | string | number | boolean | undefined | null): void;\n\tsetItems(items: readonly { key: string, data?: object | string | number | boolean | undefined | null }[]): void;\n\n\tremoveItem(key: string): void;\n\n\tclose(): Promise<void>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { app, BrowserWindow, ipcMain } from 'electron';\nimport { Barrier, Promises, timeout } from 'vs/base/common/async';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { isMacintosh, isWindows } from 'vs/base/common/platform';\nimport { cwd } from 'vs/base/common/process';\nimport { assertIsDefined } from 'vs/base/common/types';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { handleVetos } from 'vs/platform/lifecycle/common/lifecycle';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IStateMainService } from 'vs/platform/state/electron-main/state';\nimport { ICodeWindow, LoadReason, UnloadReason } from 'vs/platform/windows/electron-main/windows';\nimport { ISingleFolderWorkspaceIdentifier, IWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\n\nexport const ILifecycleMainService = createDecorator<ILifecycleMainService>('lifecycleMainService');\n\nexport interface WindowLoadEvent {\n\twindow: ICodeWindow;\n\tworkspace: IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | undefined;\n\treason: LoadReason;\n}\n\nexport interface WindowUnloadEvent {\n\twindow: ICodeWindow;\n\treason: UnloadReason;\n\tveto(value: boolean | Promise<boolean>): void;\n}\n\nexport interface ShutdownEvent {\n\n\t/**\n\t * Allows to join the shutdown. The promise can be a long running operation but it\n\t * will block the application from closing.\n\t */\n\tjoin(promise: Promise<void>): void;\n}\n\nexport interface ILifecycleMainService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Will be true if the program was restarted (e.g. due to explicit request or update).\n\t */\n\treadonly wasRestarted: boolean;\n\n\t/**\n\t * Will be true if the program was requested to quit.\n\t */\n\treadonly quitRequested: boolean;\n\n\t/**\n\t * A flag indicating in what phase of the lifecycle we currently are.\n\t */\n\tphase: LifecycleMainPhase;\n\n\t/**\n\t * An event that fires when the application is about to shutdown before any window is closed.\n\t * The shutdown can still be prevented by any window that vetos this event.\n\t */\n\treadonly onBeforeShutdown: Event<void>;\n\n\t/**\n\t * An event that fires after the onBeforeShutdown event has been fired and after no window has\n\t * vetoed the shutdown sequence. At this point listeners are ensured that the application will\n\t * quit without veto.\n\t */\n\treadonly onWillShutdown: Event<ShutdownEvent>;\n\n\t/**\n\t * An event that fires when a window is loading. This can either be a window opening for the\n\t * first time or a window reloading or changing to another URL.\n\t */\n\treadonly onWillLoadWindow: Event<WindowLoadEvent>;\n\n\t/**\n\t * An event that fires before a window is about to unload. Listeners can veto this event to prevent\n\t * the window from unloading.\n\t */\n\treadonly onBeforeUnloadWindow: Event<WindowUnloadEvent>;\n\n\t/**\n\t * An event that fires before a window closes. This event is fired after any veto has been dealt\n\t * with so that listeners know for sure that the window will close without veto.\n\t */\n\treadonly onBeforeCloseWindow: Event<ICodeWindow>;\n\n\t/**\n\t * Make a `ICodeWindow` known to the lifecycle main service.\n\t */\n\tregisterWindow(window: ICodeWindow): void;\n\n\t/**\n\t * Reload a window. All lifecycle event handlers are triggered.\n\t */\n\treload(window: ICodeWindow, cli?: NativeParsedArgs): Promise<void>;\n\n\t/**\n\t * Unload a window for the provided reason. All lifecycle event handlers are triggered.\n\t */\n\tunload(window: ICodeWindow, reason: UnloadReason): Promise<boolean /* veto */>;\n\n\t/**\n\t * Restart the application with optional arguments (CLI). All lifecycle event handlers are triggered.\n\t */\n\trelaunch(options?: { addArgs?: string[], removeArgs?: string[] }): Promise<void>;\n\n\t/**\n\t * Shutdown the application normally. All lifecycle event handlers are triggered.\n\t */\n\tquit(willRestart?: boolean): Promise<boolean /* veto */>;\n\n\t/**\n\t * Forcefully shutdown the application and optionally set an exit code.\n\t *\n\t * This method should only be used in rare situations where it is important\n\t * to set an exit code (e.g. running tests) or when the application is\n\t * not in a healthy state and should terminate asap.\n\t *\n\t * This method does not fire the normal lifecycle events to the windows,\n\t * that normally can be vetoed. Windows are destroyed without a chance\n\t * of components to participate. The only lifecycle event handler that\n\t * is triggered is `onWillShutdown` in the main process.\n\t */\n\tkill(code?: number): Promise<void>;\n\n\t/**\n\t * Returns a promise that resolves when a certain lifecycle phase\n\t * has started.\n\t */\n\twhen(phase: LifecycleMainPhase): Promise<void>;\n}\n\nexport const enum LifecycleMainPhase {\n\n\t/**\n\t * The first phase signals that we are about to startup.\n\t */\n\tStarting = 1,\n\n\t/**\n\t * Services are ready and first window is about to open.\n\t */\n\tReady = 2,\n\n\t/**\n\t * This phase signals a point in time after the window has opened\n\t * and is typically the best place to do work that is not required\n\t * for the window to open.\n\t */\n\tAfterWindowOpen = 3\n}\n\nexport class LifecycleMainService extends Disposable implements ILifecycleMainService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate static readonly QUIT_AND_RESTART_KEY = 'lifecycle.quitAndRestart';\n\n\tprivate readonly _onBeforeShutdown = this._register(new Emitter<void>());\n\treadonly onBeforeShutdown = this._onBeforeShutdown.event;\n\n\tprivate readonly _onWillShutdown = this._register(new Emitter<ShutdownEvent>());\n\treadonly onWillShutdown = this._onWillShutdown.event;\n\n\tprivate readonly _onWillLoadWindow = this._register(new Emitter<WindowLoadEvent>());\n\treadonly onWillLoadWindow = this._onWillLoadWindow.event;\n\n\tprivate readonly _onBeforeCloseWindow = this._register(new Emitter<ICodeWindow>());\n\treadonly onBeforeCloseWindow = this._onBeforeCloseWindow.event;\n\n\tprivate readonly _onBeforeUnloadWindow = this._register(new Emitter<WindowUnloadEvent>());\n\treadonly onBeforeUnloadWindow = this._onBeforeUnloadWindow.event;\n\n\tprivate _quitRequested = false;\n\tget quitRequested(): boolean { return this._quitRequested; }\n\n\tprivate _wasRestarted: boolean = false;\n\tget wasRestarted(): boolean { return this._wasRestarted; }\n\n\tprivate _phase = LifecycleMainPhase.Starting;\n\tget phase(): LifecycleMainPhase { return this._phase; }\n\n\tprivate readonly windowToCloseRequest = new Set<number>();\n\tprivate oneTimeListenerTokenGenerator = 0;\n\tprivate windowCounter = 0;\n\n\tprivate pendingQuitPromise: Promise<boolean> | undefined = undefined;\n\tprivate pendingQuitPromiseResolve: { (veto: boolean): void } | undefined = undefined;\n\n\tprivate pendingWillShutdownPromise: Promise<void> | undefined = undefined;\n\n\tprivate readonly phaseWhen = new Map<LifecycleMainPhase, Barrier>();\n\n\tconstructor(\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IStateMainService private readonly stateMainService: IStateMainService\n\t) {\n\t\tsuper();\n\n\t\tthis.resolveRestarted();\n\t\tthis.when(LifecycleMainPhase.Ready).then(() => this.registerListeners());\n\t}\n\n\tprivate resolveRestarted(): void {\n\t\tthis._wasRestarted = !!this.stateMainService.getItem(LifecycleMainService.QUIT_AND_RESTART_KEY);\n\n\t\tif (this._wasRestarted) {\n\t\t\t// remove the marker right after if found\n\t\t\tthis.stateMainService.removeItem(LifecycleMainService.QUIT_AND_RESTART_KEY);\n\t\t}\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// before-quit: an event that is fired if application quit was\n\t\t// requested but before any window was closed.\n\t\tconst beforeQuitListener = () => {\n\t\t\tif (this._quitRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.logService.trace('Lifecycle#app.on(before-quit)');\n\t\t\tthis._quitRequested = true;\n\n\t\t\t// Emit event to indicate that we are about to shutdown\n\t\t\tthis.logService.trace('Lifecycle#onBeforeShutdown.fire()');\n\t\t\tthis._onBeforeShutdown.fire();\n\n\t\t\t// macOS: can run without any window open. in that case we fire\n\t\t\t// the onWillShutdown() event directly because there is no veto\n\t\t\t// to be expected.\n\t\t\tif (isMacintosh && this.windowCounter === 0) {\n\t\t\t\tthis.fireOnWillShutdown();\n\t\t\t}\n\t\t};\n\t\tapp.addListener('before-quit', beforeQuitListener);\n\n\t\t// window-all-closed: an event that only fires when the last window\n\t\t// was closed. We override this event to be in charge if app.quit()\n\t\t// should be called or not.\n\t\tconst windowAllClosedListener = () => {\n\t\t\tthis.logService.trace('Lifecycle#app.on(window-all-closed)');\n\n\t\t\t// Windows/Linux: we quit when all windows have closed\n\t\t\t// Mac: we only quit when quit was requested\n\t\t\tif (this._quitRequested || !isMacintosh) {\n\t\t\t\tapp.quit();\n\t\t\t}\n\t\t};\n\t\tapp.addListener('window-all-closed', windowAllClosedListener);\n\n\t\t// will-quit: an event that is fired after all windows have been\n\t\t// closed, but before actually quitting.\n\t\tapp.once('will-quit', e => {\n\t\t\tthis.logService.trace('Lifecycle#app.on(will-quit)');\n\n\t\t\t// Prevent the quit until the shutdown promise was resolved\n\t\t\te.preventDefault();\n\n\t\t\t// Start shutdown sequence\n\t\t\tconst shutdownPromise = this.fireOnWillShutdown();\n\n\t\t\t// Wait until shutdown is signaled to be complete\n\t\t\tshutdownPromise.finally(() => {\n\n\t\t\t\t// Resolve pending quit promise now without veto\n\t\t\t\tthis.resolvePendingQuitPromise(false /* no veto */);\n\n\t\t\t\t// Quit again, this time do not prevent this, since our\n\t\t\t\t// will-quit listener is only installed \"once\". Also\n\t\t\t\t// remove any listener we have that is no longer needed\n\t\t\t\tapp.removeListener('before-quit', beforeQuitListener);\n\t\t\t\tapp.removeListener('window-all-closed', windowAllClosedListener);\n\t\t\t\tapp.quit();\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate fireOnWillShutdown(): Promise<void> {\n\t\tif (this.pendingWillShutdownPromise) {\n\t\t\treturn this.pendingWillShutdownPromise; // shutdown is already running\n\t\t}\n\n\t\tthis.logService.trace('Lifecycle#onWillShutdown.fire()');\n\n\t\tconst joiners: Promise<void>[] = [];\n\n\t\tthis._onWillShutdown.fire({\n\t\t\tjoin(promise) {\n\t\t\t\tjoiners.push(promise);\n\t\t\t}\n\t\t});\n\n\t\tthis.pendingWillShutdownPromise = (async () => {\n\n\t\t\t// Settle all shutdown event joiners\n\t\t\ttry {\n\t\t\t\tawait Promises.settled(joiners);\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.error(error);\n\t\t\t}\n\n\t\t\t// Then, always make sure at the end\n\t\t\t// the state service is flushed.\n\t\t\ttry {\n\t\t\t\tawait this.stateMainService.close();\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.error(error);\n\t\t\t}\n\t\t})();\n\n\t\treturn this.pendingWillShutdownPromise;\n\t}\n\n\tset phase(value: LifecycleMainPhase) {\n\t\tif (value < this.phase) {\n\t\t\tthrow new Error('Lifecycle cannot go backwards');\n\t\t}\n\n\t\tif (this._phase === value) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.logService.trace(`lifecycle (main): phase changed (value: ${value})`);\n\n\t\tthis._phase = value;\n\n\t\tconst barrier = this.phaseWhen.get(this._phase);\n\t\tif (barrier) {\n\t\t\tbarrier.open();\n\t\t\tthis.phaseWhen.delete(this._phase);\n\t\t}\n\t}\n\n\tasync when(phase: LifecycleMainPhase): Promise<void> {\n\t\tif (phase <= this._phase) {\n\t\t\treturn;\n\t\t}\n\n\t\tlet barrier = this.phaseWhen.get(phase);\n\t\tif (!barrier) {\n\t\t\tbarrier = new Barrier();\n\t\t\tthis.phaseWhen.set(phase, barrier);\n\t\t}\n\n\t\tawait barrier.wait();\n\t}\n\n\tregisterWindow(window: ICodeWindow): void {\n\t\tconst windowListeners = new DisposableStore();\n\n\t\t// track window count\n\t\tthis.windowCounter++;\n\n\t\t// Window Will Load\n\t\twindowListeners.add(window.onWillLoad(e => this._onWillLoadWindow.fire({ window, workspace: e.workspace, reason: e.reason })));\n\n\t\t// Window Before Closing: Main -> Renderer\n\t\tconst win = assertIsDefined(window.win);\n\t\twin.on('close', e => {\n\n\t\t\t// The window already acknowledged to be closed\n\t\t\tconst windowId = window.id;\n\t\t\tif (this.windowToCloseRequest.has(windowId)) {\n\t\t\t\tthis.windowToCloseRequest.delete(windowId);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.logService.trace(`Lifecycle#window.on('close') - window ID ${window.id}`);\n\n\t\t\t// Otherwise prevent unload and handle it from window\n\t\t\te.preventDefault();\n\t\t\tthis.unload(window, UnloadReason.CLOSE).then(veto => {\n\t\t\t\tif (veto) {\n\t\t\t\t\tthis.windowToCloseRequest.delete(windowId);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.windowToCloseRequest.add(windowId);\n\n\t\t\t\t// Fire onBeforeCloseWindow before actually closing\n\t\t\t\tthis.logService.trace(`Lifecycle#onBeforeCloseWindow.fire() - window ID ${windowId}`);\n\t\t\t\tthis._onBeforeCloseWindow.fire(window);\n\n\t\t\t\t// No veto, close window now\n\t\t\t\twindow.close();\n\t\t\t});\n\t\t});\n\n\t\t// Window After Closing\n\t\twin.on('closed', () => {\n\t\t\tthis.logService.trace(`Lifecycle#window.on('closed') - window ID ${window.id}`);\n\n\t\t\t// update window count\n\t\t\tthis.windowCounter--;\n\n\t\t\t// clear window listeners\n\t\t\twindowListeners.dispose();\n\n\t\t\t// if there are no more code windows opened, fire the onWillShutdown event, unless\n\t\t\t// we are on macOS where it is perfectly fine to close the last window and\n\t\t\t// the application continues running (unless quit was actually requested)\n\t\t\tif (this.windowCounter === 0 && (!isMacintosh || this._quitRequested)) {\n\t\t\t\tthis.fireOnWillShutdown();\n\t\t\t}\n\t\t});\n\t}\n\n\tasync reload(window: ICodeWindow, cli?: NativeParsedArgs): Promise<void> {\n\n\t\t// Only reload when the window has not vetoed this\n\t\tconst veto = await this.unload(window, UnloadReason.RELOAD);\n\t\tif (!veto) {\n\t\t\twindow.reload(cli);\n\t\t}\n\t}\n\n\tasync unload(window: ICodeWindow, reason: UnloadReason): Promise<boolean /* veto */> {\n\n\t\t// Always allow to unload a window that is not yet ready\n\t\tif (!window.isReady) {\n\t\t\treturn false;\n\t\t}\n\n\t\tthis.logService.trace(`Lifecycle#unload() - window ID ${window.id}`);\n\n\t\t// first ask the window itself if it vetos the unload\n\t\tconst windowUnloadReason = this._quitRequested ? UnloadReason.QUIT : reason;\n\t\tlet veto = await this.onBeforeUnloadWindowInRenderer(window, windowUnloadReason);\n\t\tif (veto) {\n\t\t\tthis.logService.trace(`Lifecycle#unload() - veto in renderer (window ID ${window.id})`);\n\n\t\t\treturn this.handleWindowUnloadVeto(veto);\n\t\t}\n\n\t\t// then check for vetos in the main side\n\t\tveto = await this.onBeforeUnloadWindowInMain(window, windowUnloadReason);\n\t\tif (veto) {\n\t\t\tthis.logService.trace(`Lifecycle#unload() - veto in main (window ID ${window.id})`);\n\n\t\t\treturn this.handleWindowUnloadVeto(veto);\n\t\t}\n\n\t\tthis.logService.trace(`Lifecycle#unload() - no veto (window ID ${window.id})`);\n\n\t\t// finally if there are no vetos, unload the renderer\n\t\tawait this.onWillUnloadWindowInRenderer(window, windowUnloadReason);\n\n\t\treturn false;\n\t}\n\n\tprivate handleWindowUnloadVeto(veto: boolean): boolean {\n\t\tif (!veto) {\n\t\t\treturn false; // no veto\n\t\t}\n\n\t\t// a veto resolves any pending quit with veto\n\t\tthis.resolvePendingQuitPromise(true /* veto */);\n\n\t\t// a veto resets the pending quit request flag\n\t\tthis._quitRequested = false;\n\n\t\treturn true; // veto\n\t}\n\n\tprivate resolvePendingQuitPromise(veto: boolean): void {\n\t\tif (this.pendingQuitPromiseResolve) {\n\t\t\tthis.pendingQuitPromiseResolve(veto);\n\t\t\tthis.pendingQuitPromiseResolve = undefined;\n\t\t\tthis.pendingQuitPromise = undefined;\n\t\t}\n\t}\n\n\tprivate onBeforeUnloadWindowInRenderer(window: ICodeWindow, reason: UnloadReason): Promise<boolean /* veto */> {\n\t\treturn new Promise<boolean>(resolve => {\n\t\t\tconst oneTimeEventToken = this.oneTimeListenerTokenGenerator++;\n\t\t\tconst okChannel = `vscode:ok${oneTimeEventToken}`;\n\t\t\tconst cancelChannel = `vscode:cancel${oneTimeEventToken}`;\n\n\t\t\tipcMain.once(okChannel, () => {\n\t\t\t\tresolve(false); // no veto\n\t\t\t});\n\n\t\t\tipcMain.once(cancelChannel, () => {\n\t\t\t\tresolve(true); // veto\n\t\t\t});\n\n\t\t\twindow.send('vscode:onBeforeUnload', { okChannel, cancelChannel, reason });\n\t\t});\n\t}\n\n\tprivate onBeforeUnloadWindowInMain(window: ICodeWindow, reason: UnloadReason): Promise<boolean /* veto */> {\n\t\tconst vetos: (boolean | Promise<boolean>)[] = [];\n\n\t\tthis._onBeforeUnloadWindow.fire({\n\t\t\treason,\n\t\t\twindow,\n\t\t\tveto(value) {\n\t\t\t\tvetos.push(value);\n\t\t\t}\n\t\t});\n\n\t\treturn handleVetos(vetos, err => this.logService.error(err));\n\t}\n\n\tprivate onWillUnloadWindowInRenderer(window: ICodeWindow, reason: UnloadReason): Promise<void> {\n\t\treturn new Promise<void>(resolve => {\n\t\t\tconst oneTimeEventToken = this.oneTimeListenerTokenGenerator++;\n\t\t\tconst replyChannel = `vscode:reply${oneTimeEventToken}`;\n\n\t\t\tipcMain.once(replyChannel, () => resolve());\n\n\t\t\twindow.send('vscode:onWillUnload', { replyChannel, reason });\n\t\t});\n\t}\n\n\tquit(willRestart?: boolean): Promise<boolean /* veto */> {\n\t\tif (this.pendingQuitPromise) {\n\t\t\treturn this.pendingQuitPromise;\n\t\t}\n\n\t\tthis.logService.trace(`Lifecycle#quit() - will restart: ${willRestart}`);\n\n\t\t// Remember if we are about to restart\n\t\tif (willRestart) {\n\t\t\tthis.stateMainService.setItem(LifecycleMainService.QUIT_AND_RESTART_KEY, true);\n\t\t}\n\n\t\tthis.pendingQuitPromise = new Promise(resolve => {\n\n\t\t\t// Store as field to access it from a window cancellation\n\t\t\tthis.pendingQuitPromiseResolve = resolve;\n\n\t\t\t// Calling app.quit() will trigger the close handlers of each opened window\n\t\t\t// and only if no window vetoed the shutdown, we will get the will-quit event\n\t\t\tthis.logService.trace('Lifecycle#quit() - calling app.quit()');\n\t\t\tapp.quit();\n\t\t});\n\n\t\treturn this.pendingQuitPromise;\n\t}\n\n\tasync relaunch(options?: { addArgs?: string[], removeArgs?: string[] }): Promise<void> {\n\t\tthis.logService.trace('Lifecycle#relaunch()');\n\n\t\tconst args = process.argv.slice(1);\n\t\tif (options?.addArgs) {\n\t\t\targs.push(...options.addArgs);\n\t\t}\n\n\t\tif (options?.removeArgs) {\n\t\t\tfor (const a of options.removeArgs) {\n\t\t\t\tconst idx = args.indexOf(a);\n\t\t\t\tif (idx >= 0) {\n\t\t\t\t\targs.splice(idx, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst quitListener = () => {\n\t\t\t// Windows: we are about to restart and as such we need to restore the original\n\t\t\t// current working directory we had on startup to get the exact same startup\n\t\t\t// behaviour. As such, we briefly change back to that directory and then when\n\t\t\t// Code starts it will set it back to the installation directory again.\n\t\t\ttry {\n\t\t\t\tif (isWindows) {\n\t\t\t\t\tconst currentWorkingDir = cwd();\n\t\t\t\t\tif (currentWorkingDir !== process.cwd()) {\n\t\t\t\t\t\tprocess.chdir(currentWorkingDir);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tthis.logService.error(err);\n\t\t\t}\n\n\t\t\t// relaunch after we are sure there is no veto\n\t\t\tthis.logService.trace('Lifecycle#relaunch() - calling app.relaunch()');\n\t\t\tapp.relaunch({ args });\n\t\t};\n\t\tapp.once('quit', quitListener);\n\n\t\t// app.relaunch() does not quit automatically, so we quit first,\n\t\t// check for vetoes and then relaunch from the app.on('quit') event\n\t\tconst veto = await this.quit(true /* will restart */);\n\t\tif (veto) {\n\t\t\tapp.removeListener('quit', quitListener);\n\t\t}\n\t}\n\n\tasync kill(code?: number): Promise<void> {\n\t\tthis.logService.trace('Lifecycle#kill()');\n\n\t\t// Give main process participants a chance to oderly shutdown\n\t\tawait this.fireOnWillShutdown();\n\n\t\t// From extension tests we have seen issues where calling app.exit()\n\t\t// with an opened window can lead to native crashes (Linux). As such,\n\t\t// we should make sure to destroy any opened window before calling\n\t\t// `app.exit()`.\n\t\t//\n\t\t// Note: Electron implements a similar logic here:\n\t\t// https://github.com/electron/electron/blob/fe5318d753637c3903e23fc1ed1b263025887b6a/spec-main/window-helpers.ts#L5\n\n\t\tawait Promise.race([\n\n\t\t\t// still do not block more than 1s\n\t\t\ttimeout(1000),\n\n\t\t\t// destroy any opened window\n\t\t\t(async () => {\n\t\t\t\tfor (const window of BrowserWindow.getAllWindows()) {\n\t\t\t\t\tif (window && !window.isDestroyed()) {\n\t\t\t\t\t\tlet whenWindowClosed: Promise<void>;\n\t\t\t\t\t\tif (window.webContents && !window.webContents.isDestroyed()) {\n\t\t\t\t\t\t\twhenWindowClosed = new Promise(resolve => window.once('closed', resolve));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\twhenWindowClosed = Promise.resolve();\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twindow.destroy();\n\t\t\t\t\t\tawait whenWindowClosed;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})()\n\t\t]);\n\n\t\t// Now exit either after 1s or all windows destroyed\n\t\tapp.exit(code);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nativeKeymap from 'native-keymap';\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IKeyboardLayoutData, INativeKeyboardLayoutService } from 'vs/platform/keyboardLayout/common/keyboardLayoutService';\nimport { ILifecycleMainService, LifecycleMainPhase } from 'vs/platform/lifecycle/electron-main/lifecycleMainService';\n\nexport const IKeyboardLayoutMainService = createDecorator<IKeyboardLayoutMainService>('keyboardLayoutMainService');\n\nexport interface IKeyboardLayoutMainService extends INativeKeyboardLayoutService { }\n\nexport class KeyboardLayoutMainService extends Disposable implements INativeKeyboardLayoutService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidChangeKeyboardLayout = this._register(new Emitter<IKeyboardLayoutData>());\n\treadonly onDidChangeKeyboardLayout = this._onDidChangeKeyboardLayout.event;\n\n\tprivate _initPromise: Promise<void> | null;\n\tprivate _keyboardLayoutData: IKeyboardLayoutData | null;\n\n\tconstructor(\n\t\t@ILifecycleMainService lifecycleMainService: ILifecycleMainService\n\t) {\n\t\tsuper();\n\t\tthis._initPromise = null;\n\t\tthis._keyboardLayoutData = null;\n\n\t\t// perf: automatically trigger initialize after windows\n\t\t// have opened so that we can do this work in parallel\n\t\t// to the window load.\n\t\tlifecycleMainService.when(LifecycleMainPhase.AfterWindowOpen).then(() => this._initialize());\n\t}\n\n\tprivate _initialize(): Promise<void> {\n\t\tif (!this._initPromise) {\n\t\t\tthis._initPromise = this._doInitialize();\n\t\t}\n\t\treturn this._initPromise;\n\t}\n\n\tprivate async _doInitialize(): Promise<void> {\n\t\tconst nativeKeymapMod = await import('native-keymap');\n\n\t\tthis._keyboardLayoutData = readKeyboardLayoutData(nativeKeymapMod);\n\t\tnativeKeymapMod.onDidChangeKeyboardLayout(() => {\n\t\t\tthis._keyboardLayoutData = readKeyboardLayoutData(nativeKeymapMod);\n\t\t\tthis._onDidChangeKeyboardLayout.fire(this._keyboardLayoutData);\n\t\t});\n\t}\n\n\tpublic async getKeyboardLayoutData(): Promise<IKeyboardLayoutData> {\n\t\tawait this._initialize();\n\t\treturn this._keyboardLayoutData!;\n\t}\n}\n\nfunction readKeyboardLayoutData(nativeKeymapMod: typeof nativeKeymap): IKeyboardLayoutData {\n\tconst keyboardMapping = nativeKeymapMod.getKeyMap();\n\tconst keyboardLayoutInfo = nativeKeymapMod.getCurrentKeyboardLayout();\n\treturn { keyboardMapping, keyboardLayoutInfo };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Promises, RunOnceScheduler, runWhenIdle } from 'vs/base/common/async';\nimport { Emitter, Event, PauseableEmitter } from 'vs/base/common/event';\nimport { Disposable, dispose, MutableDisposable } from 'vs/base/common/lifecycle';\nimport { mark } from 'vs/base/common/performance';\nimport { isUndefinedOrNull } from 'vs/base/common/types';\nimport { InMemoryStorageDatabase, IStorage, Storage } from 'vs/base/parts/storage/common/storage';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IWorkspaceInitializationPayload } from 'vs/platform/workspaces/common/workspaces';\n\nexport const IS_NEW_KEY = '__$__isNewStorageMarker';\nconst TARGET_KEY = '__$__targetStorageMarker';\n\nexport const IStorageService = createDecorator<IStorageService>('storageService');\n\nexport enum WillSaveStateReason {\n\n\t/**\n\t * No specific reason to save state.\n\t */\n\tNONE,\n\n\t/**\n\t * A hint that the workbench is about to shutdown.\n\t */\n\tSHUTDOWN\n}\n\nexport interface IWillSaveStateEvent {\n\treason: WillSaveStateReason;\n}\n\nexport interface IStorageService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Emitted whenever data is updated or deleted.\n\t */\n\treadonly onDidChangeValue: Event<IStorageValueChangeEvent>;\n\n\t/**\n\t * Emitted whenever target of a storage entry changes.\n\t */\n\treadonly onDidChangeTarget: Event<IStorageTargetChangeEvent>;\n\n\t/**\n\t * Emitted when the storage is about to persist. This is the right time\n\t * to persist data to ensure it is stored before the application shuts\n\t * down.\n\t *\n\t * The will save state event allows to optionally ask for the reason of\n\t * saving the state, e.g. to find out if the state is saved due to a\n\t * shutdown.\n\t *\n\t * Note: this event may be fired many times, not only on shutdown to prevent\n\t * loss of state in situations where the shutdown is not sufficient to\n\t * persist the data properly.\n\t */\n\treadonly onWillSaveState: Event<IWillSaveStateEvent>;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided `defaultValue` if the element is `null` or `undefined`.\n\t *\n\t * @param scope allows to define the scope of the storage operation\n\t * to either the current workspace only or all workspaces.\n\t */\n\tget(key: string, scope: StorageScope, fallbackValue: string): string;\n\tget(key: string, scope: StorageScope, fallbackValue?: string): string | undefined;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided `defaultValue` if the element is `null` or `undefined`.\n\t * The element will be converted to a `boolean`.\n\t *\n\t * @param scope allows to define the scope of the storage operation\n\t * to either the current workspace only or all workspaces.\n\t */\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue: boolean): boolean;\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue?: boolean): boolean | undefined;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided `defaultValue` if the element is `null` or `undefined`.\n\t * The element will be converted to a `number` using `parseInt` with a\n\t * base of `10`.\n\t *\n\t * @param scope allows to define the scope of the storage operation\n\t * to either the current workspace only or all workspaces.\n\t */\n\tgetNumber(key: string, scope: StorageScope, fallbackValue: number): number;\n\tgetNumber(key: string, scope: StorageScope, fallbackValue?: number): number | undefined;\n\n\t/**\n\t * Store a value under the given key to storage. The value will be\n\t * converted to a `string`. Storing either `undefined` or `null` will\n\t * remove the entry under the key.\n\t *\n\t * @param scope allows to define the scope of the storage operation\n\t * to either the current workspace only or all workspaces.\n\t *\n\t * @param target allows to define the target of the storage operation\n\t * to either the current machine or user.\n\t */\n\tstore(key: string, value: string | boolean | number | undefined | null, scope: StorageScope, target: StorageTarget): void;\n\n\t/**\n\t * Delete an element stored under the provided key from storage.\n\t *\n\t * The scope argument allows to define the scope of the storage\n\t * operation to either the current workspace only or all workspaces.\n\t */\n\tremove(key: string, scope: StorageScope): void;\n\n\t/**\n\t * Returns all the keys used in the storage for the provided `scope`\n\t * and `target`.\n\t *\n\t * Note: this will NOT return all keys stored in the storage layer.\n\t * Some keys may not have an associated `StorageTarget` and thus\n\t * will be excluded from the results.\n\t *\n\t * @param scope allows to define the scope for the keys\n\t * to either the current workspace only or all workspaces.\n\t *\n\t * @param target allows to define the target for the keys\n\t * to either the current machine or user.\n\t */\n\tkeys(scope: StorageScope, target: StorageTarget): string[];\n\n\t/**\n\t * Log the contents of the storage to the console.\n\t */\n\tlogStorage(): void;\n\n\t/**\n\t * Migrate the storage contents to another workspace.\n\t */\n\tmigrate(toWorkspace: IWorkspaceInitializationPayload): Promise<void>;\n\n\t/**\n\t * Whether the storage for the given scope was created during this session or\n\t * existed before.\n\t */\n\tisNew(scope: StorageScope): boolean;\n\n\t/**\n\t * Allows to flush state, e.g. in cases where a shutdown is\n\t * imminent. This will send out the `onWillSaveState` to ask\n\t * everyone for latest state.\n\t *\n\t * @returns a `Promise` that can be awaited on when all updates\n\t * to the underlying storage have been flushed.\n\t */\n\tflush(reason?: WillSaveStateReason): Promise<void>;\n}\n\nexport const enum StorageScope {\n\n\t/**\n\t * The stored data will be scoped to all workspaces.\n\t */\n\tGLOBAL,\n\n\t/**\n\t * The stored data will be scoped to the current workspace.\n\t */\n\tWORKSPACE\n}\n\nexport const enum StorageTarget {\n\n\t/**\n\t * The stored data is user specific and applies across machines.\n\t */\n\tUSER,\n\n\t/**\n\t * The stored data is machine specific.\n\t */\n\tMACHINE\n}\n\nexport interface IStorageValueChangeEvent {\n\n\t/**\n\t * The scope for the storage entry that changed\n\t * or was removed.\n\t */\n\treadonly scope: StorageScope;\n\n\t/**\n\t * The `key` of the storage entry that was changed\n\t * or was removed.\n\t */\n\treadonly key: string;\n\n\t/**\n\t * The `target` can be `undefined` if a key is being\n\t * removed.\n\t */\n\treadonly target: StorageTarget | undefined;\n}\n\nexport interface IStorageTargetChangeEvent {\n\n\t/**\n\t * The scope for the target that changed. Listeners\n\t * should use `keys(scope, target)` to get an updated\n\t * list of keys for the given `scope` and `target`.\n\t */\n\treadonly scope: StorageScope;\n}\n\ninterface IKeyTargets {\n\t[key: string]: StorageTarget\n}\n\nexport interface IStorageServiceOptions {\n\tflushInterval: number;\n}\n\nexport abstract class AbstractStorageService extends Disposable implements IStorageService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate static DEFAULT_FLUSH_INTERVAL = 60 * 1000; // every minute\n\n\tprivate readonly _onDidChangeValue = this._register(new PauseableEmitter<IStorageValueChangeEvent>());\n\treadonly onDidChangeValue = this._onDidChangeValue.event;\n\n\tprivate readonly _onDidChangeTarget = this._register(new PauseableEmitter<IStorageTargetChangeEvent>());\n\treadonly onDidChangeTarget = this._onDidChangeTarget.event;\n\n\tprivate readonly _onWillSaveState = this._register(new Emitter<IWillSaveStateEvent>());\n\treadonly onWillSaveState = this._onWillSaveState.event;\n\n\tprivate initializationPromise: Promise<void> | undefined;\n\n\tprivate readonly flushWhenIdleScheduler = this._register(new RunOnceScheduler(() => this.doFlushWhenIdle(), this.options.flushInterval));\n\tprivate readonly runFlushWhenIdle = this._register(new MutableDisposable());\n\n\tconstructor(private options: IStorageServiceOptions = { flushInterval: AbstractStorageService.DEFAULT_FLUSH_INTERVAL }) {\n\t\tsuper();\n\t}\n\n\tprivate doFlushWhenIdle(): void {\n\t\tthis.runFlushWhenIdle.value = runWhenIdle(() => {\n\t\t\tif (this.shouldFlushWhenIdle()) {\n\t\t\t\tthis.flush();\n\t\t\t}\n\n\t\t\t// repeat\n\t\t\tthis.flushWhenIdleScheduler.schedule();\n\t\t});\n\t}\n\n\tprotected shouldFlushWhenIdle(): boolean {\n\t\treturn true;\n\t}\n\n\tprotected stopFlushWhenIdle(): void {\n\t\tdispose([this.runFlushWhenIdle, this.flushWhenIdleScheduler]);\n\t}\n\n\tinitialize(): Promise<void> {\n\t\tif (!this.initializationPromise) {\n\t\t\tthis.initializationPromise = (async () => {\n\n\t\t\t\t// Init all storage locations\n\t\t\t\tmark('code/willInitStorage');\n\t\t\t\ttry {\n\t\t\t\t\t// Ask subclasses to initialize storage\n\t\t\t\t\tawait this.doInitialize();\n\t\t\t\t} finally {\n\t\t\t\t\tmark('code/didInitStorage');\n\t\t\t\t}\n\n\t\t\t\t// On some OS we do not get enough time to persist state on shutdown (e.g. when\n\t\t\t\t// Windows restarts after applying updates). In other cases, VSCode might crash,\n\t\t\t\t// so we periodically save state to reduce the chance of loosing any state.\n\t\t\t\t// In the browser we do not have support for long running unload sequences. As such,\n\t\t\t\t// we cannot ask for saving state in that moment, because that would result in a\n\t\t\t\t// long running operation.\n\t\t\t\t// Instead, periodically ask customers to save save. The library will be clever enough\n\t\t\t\t// to only save state that has actually changed.\n\t\t\t\tthis.flushWhenIdleScheduler.schedule();\n\t\t\t})();\n\t\t}\n\n\t\treturn this.initializationPromise;\n\t}\n\n\tprotected emitDidChangeValue(scope: StorageScope, key: string): void {\n\n\t\t// Specially handle `TARGET_KEY`\n\t\tif (key === TARGET_KEY) {\n\n\t\t\t// Clear our cached version which is now out of date\n\t\t\tif (scope === StorageScope.GLOBAL) {\n\t\t\t\tthis._globalKeyTargets = undefined;\n\t\t\t} else if (scope === StorageScope.WORKSPACE) {\n\t\t\t\tthis._workspaceKeyTargets = undefined;\n\t\t\t}\n\n\t\t\t// Emit as `didChangeTarget` event\n\t\t\tthis._onDidChangeTarget.fire({ scope });\n\t\t}\n\n\t\t// Emit any other key to outside\n\t\telse {\n\t\t\tthis._onDidChangeValue.fire({ scope, key, target: this.getKeyTargets(scope)[key] });\n\t\t}\n\t}\n\n\tprotected emitWillSaveState(reason: WillSaveStateReason): void {\n\t\tthis._onWillSaveState.fire({ reason });\n\t}\n\n\tget(key: string, scope: StorageScope, fallbackValue: string): string;\n\tget(key: string, scope: StorageScope): string | undefined;\n\tget(key: string, scope: StorageScope, fallbackValue?: string): string | undefined {\n\t\treturn this.getStorage(scope)?.get(key, fallbackValue);\n\t}\n\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue: boolean): boolean;\n\tgetBoolean(key: string, scope: StorageScope): boolean | undefined;\n\tgetBoolean(key: string, scope: StorageScope, fallbackValue?: boolean): boolean | undefined {\n\t\treturn this.getStorage(scope)?.getBoolean(key, fallbackValue);\n\t}\n\n\tgetNumber(key: string, scope: StorageScope, fallbackValue: number): number;\n\tgetNumber(key: string, scope: StorageScope): number | undefined;\n\tgetNumber(key: string, scope: StorageScope, fallbackValue?: number): number | undefined {\n\t\treturn this.getStorage(scope)?.getNumber(key, fallbackValue);\n\t}\n\n\tstore(key: string, value: string | boolean | number | undefined | null, scope: StorageScope, target: StorageTarget): void {\n\n\t\t// We remove the key for undefined/null values\n\t\tif (isUndefinedOrNull(value)) {\n\t\t\tthis.remove(key, scope);\n\t\t\treturn;\n\t\t}\n\n\t\t// Update our datastructures but send events only after\n\t\tthis.withPausedEmitters(() => {\n\n\t\t\t// Update key-target map\n\t\t\tthis.updateKeyTarget(key, scope, target);\n\n\t\t\t// Store actual value\n\t\t\tthis.getStorage(scope)?.set(key, value);\n\t\t});\n\t}\n\n\tremove(key: string, scope: StorageScope): void {\n\n\t\t// Update our datastructures but send events only after\n\t\tthis.withPausedEmitters(() => {\n\n\t\t\t// Update key-target map\n\t\t\tthis.updateKeyTarget(key, scope, undefined);\n\n\t\t\t// Remove actual key\n\t\t\tthis.getStorage(scope)?.delete(key);\n\t\t});\n\t}\n\n\tprivate withPausedEmitters(fn: Function): void {\n\n\t\t// Pause emitters\n\t\tthis._onDidChangeValue.pause();\n\t\tthis._onDidChangeTarget.pause();\n\n\t\ttry {\n\t\t\tfn();\n\t\t} finally {\n\n\t\t\t// Resume emitters\n\t\t\tthis._onDidChangeValue.resume();\n\t\t\tthis._onDidChangeTarget.resume();\n\t\t}\n\t}\n\n\tkeys(scope: StorageScope, target: StorageTarget): string[] {\n\t\tconst keys: string[] = [];\n\n\t\tconst keyTargets = this.getKeyTargets(scope);\n\t\tfor (const key of Object.keys(keyTargets)) {\n\t\t\tconst keyTarget = keyTargets[key];\n\t\t\tif (keyTarget === target) {\n\t\t\t\tkeys.push(key);\n\t\t\t}\n\t\t}\n\n\t\treturn keys;\n\t}\n\n\tprivate updateKeyTarget(key: string, scope: StorageScope, target: StorageTarget | undefined): void {\n\n\t\t// Add\n\t\tconst keyTargets = this.getKeyTargets(scope);\n\t\tif (typeof target === 'number') {\n\t\t\tif (keyTargets[key] !== target) {\n\t\t\t\tkeyTargets[key] = target;\n\t\t\t\tthis.getStorage(scope)?.set(TARGET_KEY, JSON.stringify(keyTargets));\n\t\t\t}\n\t\t}\n\n\t\t// Remove\n\t\telse {\n\t\t\tif (typeof keyTargets[key] === 'number') {\n\t\t\t\tdelete keyTargets[key];\n\t\t\t\tthis.getStorage(scope)?.set(TARGET_KEY, JSON.stringify(keyTargets));\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _workspaceKeyTargets: IKeyTargets | undefined = undefined;\n\tprivate get workspaceKeyTargets(): IKeyTargets {\n\t\tif (!this._workspaceKeyTargets) {\n\t\t\tthis._workspaceKeyTargets = this.loadKeyTargets(StorageScope.WORKSPACE);\n\t\t}\n\n\t\treturn this._workspaceKeyTargets;\n\t}\n\n\tprivate _globalKeyTargets: IKeyTargets | undefined = undefined;\n\tprivate get globalKeyTargets(): IKeyTargets {\n\t\tif (!this._globalKeyTargets) {\n\t\t\tthis._globalKeyTargets = this.loadKeyTargets(StorageScope.GLOBAL);\n\t\t}\n\n\t\treturn this._globalKeyTargets;\n\t}\n\n\tprivate getKeyTargets(scope: StorageScope): IKeyTargets {\n\t\treturn scope === StorageScope.GLOBAL ? this.globalKeyTargets : this.workspaceKeyTargets;\n\t}\n\n\tprivate loadKeyTargets(scope: StorageScope): { [key: string]: StorageTarget } {\n\t\tconst keysRaw = this.get(TARGET_KEY, scope);\n\t\tif (keysRaw) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(keysRaw);\n\t\t\t} catch (error) {\n\t\t\t\t// Fail gracefully\n\t\t\t}\n\t\t}\n\n\t\treturn Object.create(null);\n\t}\n\n\tisNew(scope: StorageScope): boolean {\n\t\treturn this.getBoolean(IS_NEW_KEY, scope) === true;\n\t}\n\n\tasync flush(reason = WillSaveStateReason.NONE): Promise<void> {\n\n\t\t// Signal event to collect changes\n\t\tthis._onWillSaveState.fire({ reason });\n\n\t\tconst globalStorage = this.getStorage(StorageScope.GLOBAL);\n\t\tconst workspaceStorage = this.getStorage(StorageScope.WORKSPACE);\n\n\t\tswitch (reason) {\n\n\t\t\t// Unspecific reason: just wait when data is flushed\n\t\t\tcase WillSaveStateReason.NONE:\n\t\t\t\tawait Promises.settled([\n\t\t\t\t\tglobalStorage?.whenFlushed() ?? Promise.resolve(),\n\t\t\t\t\tworkspaceStorage?.whenFlushed() ?? Promise.resolve()\n\t\t\t\t]);\n\t\t\t\tbreak;\n\n\t\t\t// Shutdown: we want to flush as soon as possible\n\t\t\t// and not hit any delays that might be there\n\t\t\tcase WillSaveStateReason.SHUTDOWN:\n\t\t\t\tawait Promises.settled([\n\t\t\t\t\tglobalStorage?.flush(0) ?? Promise.resolve(),\n\t\t\t\t\tworkspaceStorage?.flush(0) ?? Promise.resolve()\n\t\t\t\t]);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tasync logStorage(): Promise<void> {\n\t\tconst globalItems = this.getStorage(StorageScope.GLOBAL)?.items ?? new Map<string, string>();\n\t\tconst workspaceItems = this.getStorage(StorageScope.WORKSPACE)?.items ?? new Map<string, string>();\n\n\t\treturn logStorage(\n\t\t\tglobalItems,\n\t\t\tworkspaceItems,\n\t\t\tthis.getLogDetails(StorageScope.GLOBAL) ?? '',\n\t\t\tthis.getLogDetails(StorageScope.WORKSPACE) ?? ''\n\t\t);\n\t}\n\n\t// --- abstract\n\n\tprotected abstract doInitialize(): Promise<void>;\n\n\tprotected abstract getStorage(scope: StorageScope): IStorage | undefined;\n\n\tprotected abstract getLogDetails(scope: StorageScope): string | undefined;\n\n\tabstract migrate(toWorkspace: IWorkspaceInitializationPayload): Promise<void>;\n}\n\nexport class InMemoryStorageService extends AbstractStorageService {\n\n\tprivate readonly globalStorage = this._register(new Storage(new InMemoryStorageDatabase()));\n\tprivate readonly workspaceStorage = this._register(new Storage(new InMemoryStorageDatabase()));\n\n\tconstructor() {\n\t\tsuper();\n\n\t\tthis._register(this.workspaceStorage.onDidChangeStorage(key => this.emitDidChangeValue(StorageScope.WORKSPACE, key)));\n\t\tthis._register(this.globalStorage.onDidChangeStorage(key => this.emitDidChangeValue(StorageScope.GLOBAL, key)));\n\t}\n\n\tprotected getStorage(scope: StorageScope): IStorage {\n\t\treturn scope === StorageScope.GLOBAL ? this.globalStorage : this.workspaceStorage;\n\t}\n\n\tprotected getLogDetails(scope: StorageScope): string | undefined {\n\t\treturn scope === StorageScope.GLOBAL ? 'inMemory (global)' : 'inMemory (workspace)';\n\t}\n\n\tprotected async doInitialize(): Promise<void> { }\n\n\tasync migrate(toWorkspace: IWorkspaceInitializationPayload): Promise<void> {\n\t\t// not supported\n\t}\n}\n\nexport async function logStorage(global: Map<string, string>, workspace: Map<string, string>, globalPath: string, workspacePath: string): Promise<void> {\n\tconst safeParse = (value: string) => {\n\t\ttry {\n\t\t\treturn JSON.parse(value);\n\t\t} catch (error) {\n\t\t\treturn value;\n\t\t}\n\t};\n\n\tconst globalItems = new Map<string, string>();\n\tconst globalItemsParsed = new Map<string, string>();\n\tglobal.forEach((value, key) => {\n\t\tglobalItems.set(key, value);\n\t\tglobalItemsParsed.set(key, safeParse(value));\n\t});\n\n\tconst workspaceItems = new Map<string, string>();\n\tconst workspaceItemsParsed = new Map<string, string>();\n\tworkspace.forEach((value, key) => {\n\t\tworkspaceItems.set(key, value);\n\t\tworkspaceItemsParsed.set(key, safeParse(value));\n\t});\n\n\tconsole.group(`Storage: Global (path: ${globalPath})`);\n\tlet globalValues: { key: string, value: string }[] = [];\n\tglobalItems.forEach((value, key) => {\n\t\tglobalValues.push({ key, value });\n\t});\n\tconsole.table(globalValues);\n\tconsole.groupEnd();\n\n\tconsole.log(globalItemsParsed);\n\n\tconsole.group(`Storage: Workspace (path: ${workspacePath})`);\n\tlet workspaceValues: { key: string, value: string }[] = [];\n\tworkspaceItems.forEach((value, key) => {\n\t\tworkspaceValues.push({ key, value });\n\t});\n\tconsole.table(workspaceValues);\n\tconsole.groupEnd();\n\n\tconsole.log(workspaceItemsParsed);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isLinuxSnap, platform, Platform, PlatformToString } from 'vs/base/common/platform';\nimport { env, platform as nodePlatform } from 'vs/base/common/process';\nimport { URI } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IFileService } from 'vs/platform/files/common/files';\n\nfunction getPlatformDetail(hostname: string): string | undefined {\n\tif (platform === Platform.Linux && /^penguin(\\.|$)/i.test(hostname)) {\n\t\treturn 'chromebook';\n\t}\n\n\treturn undefined;\n}\n\nexport async function resolveCommonProperties(\n\tfileService: IFileService,\n\trelease: string,\n\thostname: string,\n\tarch: string,\n\tcommit: string | undefined,\n\tversion: string | undefined,\n\tmachineId: string | undefined,\n\tmsftInternalDomains: string[] | undefined,\n\tinstallSourcePath: string,\n\tproduct?: string\n): Promise<{ [name: string]: string | boolean | undefined; }> {\n\tconst result: { [name: string]: string | boolean | undefined; } = Object.create(null);\n\n\t// __GDPR__COMMON__ \"common.machineId\" : { \"endPoint\": \"MacAddressHash\", \"classification\": \"EndUserPseudonymizedInformation\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.machineId'] = machineId;\n\t// __GDPR__COMMON__ \"sessionID\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['sessionID'] = generateUuid() + Date.now();\n\t// __GDPR__COMMON__ \"commitHash\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['commitHash'] = commit;\n\t// __GDPR__COMMON__ \"version\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['version'] = version;\n\t// __GDPR__COMMON__ \"common.platformVersion\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.platformVersion'] = (release || '').replace(/^(\\d+)(\\.\\d+)?(\\.\\d+)?(.*)/, '$1$2$3');\n\t// __GDPR__COMMON__ \"common.platform\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\tresult['common.platform'] = PlatformToString(platform);\n\t// __GDPR__COMMON__ \"common.nodePlatform\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.nodePlatform'] = nodePlatform;\n\t// __GDPR__COMMON__ \"common.nodeArch\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.nodeArch'] = arch;\n\t// __GDPR__COMMON__ \"common.product\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\" }\n\tresult['common.product'] = product || 'desktop';\n\n\tconst msftInternal = verifyMicrosoftInternalDomain(msftInternalDomains || []);\n\tif (msftInternal) {\n\t\t// __GDPR__COMMON__ \"common.msftInternal\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\tresult['common.msftInternal'] = msftInternal;\n\t}\n\n\t// dynamic properties which value differs on each call\n\tlet seq = 0;\n\tconst startTime = Date.now();\n\tObject.defineProperties(result, {\n\t\t// __GDPR__COMMON__ \"timestamp\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t'timestamp': {\n\t\t\tget: () => new Date(),\n\t\t\tenumerable: true\n\t\t},\n\t\t// __GDPR__COMMON__ \"common.timesincesessionstart\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t'common.timesincesessionstart': {\n\t\t\tget: () => Date.now() - startTime,\n\t\t\tenumerable: true\n\t\t},\n\t\t// __GDPR__COMMON__ \"common.sequence\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true }\n\t\t'common.sequence': {\n\t\t\tget: () => seq++,\n\t\t\tenumerable: true\n\t\t}\n\t});\n\n\tif (isLinuxSnap) {\n\t\t// __GDPR__COMMON__ \"common.snap\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\tresult['common.snap'] = 'true';\n\t}\n\n\tconst platformDetail = getPlatformDetail(hostname);\n\n\tif (platformDetail) {\n\t\t// __GDPR__COMMON__ \"common.platformDetail\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\tresult['common.platformDetail'] = platformDetail;\n\t}\n\n\ttry {\n\t\tconst contents = await fileService.readFile(URI.file(installSourcePath));\n\n\t\t// __GDPR__COMMON__ \"common.source\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\tresult['common.source'] = contents.value.toString().slice(0, 30);\n\t} catch (error) {\n\t\t// ignore error\n\t}\n\n\treturn result;\n}\n\nexport function verifyMicrosoftInternalDomain(domainList: readonly string[]): boolean {\n\tconst userDnsDomain = env['USERDNSDOMAIN'];\n\tif (!userDnsDomain) {\n\t\treturn false;\n\t}\n\n\tconst domain = userDnsDomain.toLowerCase();\n\treturn domainList.some(msftDomain => domain === msftDomain);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ClassifiedEvent, GDPRClassification, StrictPropertyCheck } from 'vs/platform/telemetry/common/gdprTypings';\n\nexport const ITelemetryService = createDecorator<ITelemetryService>('telemetryService');\n\nexport interface ITelemetryInfo {\n\tsessionId: string;\n\tmachineId: string;\n\tfirstSessionDate: string;\n\tmsftInternal?: boolean;\n}\n\nexport interface ITelemetryData {\n\tfrom?: string;\n\ttarget?: string;\n\t[key: string]: any;\n}\n\nexport interface ITelemetryService {\n\n\t/**\n\t * Whether error telemetry will get sent. If false, `publicLogError` will no-op.\n\t */\n\treadonly sendErrorTelemetry: boolean;\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Sends a telemetry event that has been privacy approved.\n\t * Do not call this unless you have been given approval.\n\t */\n\tpublicLog(eventName: string, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<void>;\n\n\tpublicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>, anonymizeFilePaths?: boolean): Promise<void>;\n\n\tpublicLogError(errorEventName: string, data?: ITelemetryData): Promise<void>;\n\n\tpublicLogError2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>): Promise<void>;\n\n\tgetTelemetryInfo(): Promise<ITelemetryInfo>;\n\n\tsetExperimentProperty(name: string, value: string): void;\n\n\ttelemetryLevel: TelemetryLevel;\n}\n\nexport interface ITelemetryEndpoint {\n\tid: string;\n\taiKey: string;\n\tsendErrorTelemetry: boolean;\n}\n\nexport const ICustomEndpointTelemetryService = createDecorator<ICustomEndpointTelemetryService>('customEndpointTelemetryService');\n\nexport interface ICustomEndpointTelemetryService {\n\treadonly _serviceBrand: undefined;\n\n\tpublicLog(endpoint: ITelemetryEndpoint, eventName: string, data?: ITelemetryData): Promise<void>;\n\tpublicLogError(endpoint: ITelemetryEndpoint, errorEventName: string, data?: ITelemetryData): Promise<void>;\n}\n\n// Keys\nexport const currentSessionDateStorageKey = 'telemetry.currentSessionDate';\nexport const firstSessionDateStorageKey = 'telemetry.firstSessionDate';\nexport const lastSessionDateStorageKey = 'telemetry.lastSessionDate';\nexport const machineIdKey = 'telemetry.machineId';\n\n// Configuration Keys\nexport const TELEMETRY_SECTION_ID = 'telemetry';\nexport const TELEMETRY_SETTING_ID = 'telemetry.telemetryLevel';\nexport const TELEMETRY_OLD_SETTING_ID = 'telemetry.enableTelemetry';\n\nexport const enum TelemetryLevel {\n\tNONE = 0,\n\tCRASH = 1,\n\tERROR = 2,\n\tUSAGE = 3\n}\n\nexport const enum TelemetryConfiguration {\n\tOFF = 'off',\n\tCRASH = 'crash',\n\tERROR = 'error',\n\tON = 'all'\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as osLib from 'os';\nimport { Iterable } from 'vs/base/common/iterator';\nimport { Promises } from 'vs/base/common/async';\nimport { getNodeType, parse, ParseError } from 'vs/base/common/json';\nimport { Schemas } from 'vs/base/common/network';\nimport { basename, join } from 'vs/base/common/path';\nimport { isLinux, isWindows } from 'vs/base/common/platform';\nimport { ProcessItem } from 'vs/base/common/processes';\nimport { URI } from 'vs/base/common/uri';\nimport { virtualMachineHint } from 'vs/base/node/id';\nimport { IDirent, Promises as pfs } from 'vs/base/node/pfs';\nimport { listProcesses } from 'vs/base/node/ps';\nimport { IDiagnosticsService, IMachineInfo, IRemoteDiagnosticError, IRemoteDiagnosticInfo, isRemoteDiagnosticError, IWorkspaceInformation, PerformanceInfo, SystemInfo, WorkspaceStatItem, WorkspaceStats } from 'vs/platform/diagnostics/common/diagnostics';\nimport { ByteSize } from 'vs/platform/files/common/files';\nimport { IMainProcessInfo } from 'vs/platform/launch/common/launch';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\n\nexport interface VersionInfo {\n\tvscodeVersion: string;\n\tos: string;\n}\n\nexport interface ProcessInfo {\n\tcpu: number;\n\tmemory: number;\n\tpid: number;\n\tname: string;\n}\n\ninterface ConfigFilePatterns {\n\ttag: string;\n\tfilePattern: RegExp;\n\trelativePathPattern?: RegExp;\n}\n\ninterface RootFileMatcher {\n\ttag: string;\n\tmatcher: (path: string) => boolean;\n}\n\nexport async function collectWorkspaceStats(folder: string, filter: string[]): Promise<WorkspaceStats> {\n\tconst configFilePatterns: ConfigFilePatterns[] = [\n\t\t{ tag: 'grunt.js', filePattern: /^gruntfile\\.js$/i },\n\t\t{ tag: 'gulp.js', filePattern: /^gulpfile\\.js$/i },\n\t\t{ tag: 'tsconfig.json', filePattern: /^tsconfig\\.json$/i },\n\t\t{ tag: 'package.json', filePattern: /^package\\.json$/i },\n\t\t{ tag: 'jsconfig.json', filePattern: /^jsconfig\\.json$/i },\n\t\t{ tag: 'tslint.json', filePattern: /^tslint\\.json$/i },\n\t\t{ tag: 'eslint.json', filePattern: /^eslint\\.json$/i },\n\t\t{ tag: 'tasks.json', filePattern: /^tasks\\.json$/i },\n\t\t{ tag: 'launch.json', filePattern: /^launch\\.json$/i },\n\t\t{ tag: 'settings.json', filePattern: /^settings\\.json$/i },\n\t\t{ tag: 'webpack.config.js', filePattern: /^webpack\\.config\\.js$/i },\n\t\t{ tag: 'project.json', filePattern: /^project\\.json$/i },\n\t\t{ tag: 'makefile', filePattern: /^makefile$/i },\n\t\t{ tag: 'sln', filePattern: /^.+\\.sln$/i },\n\t\t{ tag: 'csproj', filePattern: /^.+\\.csproj$/i },\n\t\t{ tag: 'cmake', filePattern: /^.+\\.cmake$/i },\n\t\t{ tag: 'github-actions', filePattern: /^.+\\.ya?ml$/i, relativePathPattern: /^\\.github(?:\\/|\\\\)workflows$/i },\n\t\t{ tag: 'devcontainer.json', filePattern: /^devcontainer\\.json$/i },\n\t\t{ tag: 'dockerfile', filePattern: /^(dockerfile|docker\\-compose\\.ya?ml)$/i }\n\t];\n\n\tlet rootFileMatchers: RootFileMatcher[];\n\n\t// Linux is omitted because few cloud sync clients support it, and for those who are available on Linux, there are multiple clients and they can be configured differently\n\tconst homeDir = osLib.homedir().toLowerCase();\n\tswitch (process.platform) {\n\t\tcase 'win32':\n\t\t\trootFileMatchers = [\n\t\t\t\t{\n\t\t\t\t\ttag: 'gdrive', matcher: (path) => {\n\t\t\t\t\t\t// File Streaming or Mirror Files mode\n\t\t\t\t\t\treturn /^[a-z]:\\\\(my drive|shared drives)\\\\/.test(path) || path.startsWith(homeDir + '\\\\my drive\\\\');\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttag: 'dropbox', matcher: path => path.startsWith(homeDir + '\\\\dropbox') // Ending in *\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttag: 'onedrive', matcher: path => path.startsWith(homeDir + '\\\\onedrive') // Ending in *\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttag: 'box', matcher: path => path.startsWith(homeDir + '\\\\box\\\\')\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttag: 'nextcloud', matcher: path => path.startsWith(homeDir + '\\\\nextcloud\\\\')\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttag: 'owncloud', matcher: path => path.startsWith(homeDir + '\\\\owncloud\\\\')\n\t\t\t\t},\n\t\t\t];\n\t\t\tbreak;\n\n\t\tcase 'darwin':\n\t\t\trootFileMatchers = [\n\t\t\t\t{\n\t\t\t\t\ttag: 'gdrive', matcher: (path) => {\n\t\t\t\t\t\t// File Streaming mode\n\t\t\t\t\t\treturn path.startsWith('/volumes/googledrive/') || path.startsWith(homeDir + '/my drive/');\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttag: 'dropbox', matcher: path => path.startsWith(homeDir + '/dropbox') // Ending in *\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttag: 'onedrive', matcher: (path) => {\n\t\t\t\t\t\t// Old vs new client\n\t\t\t\t\t\treturn path.startsWith(homeDir + '/onedrive') || path.startsWith(homeDir + '/library/cloudstorage/onedrive');\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttag: 'icloud', matcher: path => path.startsWith(homeDir + '/library/mobile documents/')\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttag: 'box', matcher: path => path.startsWith(homeDir + '/box/')\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttag: 'nextcloud', matcher: path => path.startsWith(homeDir + '/nextcloud/')\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\ttag: 'owncloud', matcher: path => path.startsWith(homeDir + '/owncloud/')\n\t\t\t\t},\n\t\t\t];\n\t\t\tbreak;\n\t}\n\n\tconst fileTypes = new Map<string, number>();\n\tconst configFiles = new Map<string, number>();\n\n\tconst MAX_FILES = 20000;\n\n\tfunction collect(root: string, dir: string, filter: string[], token: { count: number, maxReached: boolean }): Promise<void> {\n\t\tfor (const rootPath of rootFileMatchers) {\n\t\t\tconst lowercaseRoot = root.toLowerCase();\n\t\t\tif (rootPath.matcher(lowercaseRoot)) {\n\t\t\t\tconfigFiles.set(rootPath.tag, 1);\n\t\t\t}\n\t\t}\n\n\t\tconst relativePath = dir.substring(root.length + 1);\n\n\t\treturn Promises.withAsyncBody(async resolve => {\n\t\t\tlet files: IDirent[];\n\t\t\ttry {\n\t\t\t\tfiles = await pfs.readdir(dir, { withFileTypes: true });\n\t\t\t} catch (error) {\n\t\t\t\t// Ignore folders that can't be read\n\t\t\t\tresolve();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (token.count >= MAX_FILES) {\n\t\t\t\ttoken.count += files.length;\n\t\t\t\ttoken.maxReached = true;\n\t\t\t\tresolve();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet pending = files.length;\n\t\t\tif (pending === 0) {\n\t\t\t\tresolve();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet filesToRead = files;\n\t\t\tif (token.count + files.length > MAX_FILES) {\n\t\t\t\ttoken.maxReached = true;\n\t\t\t\tpending = MAX_FILES - token.count;\n\t\t\t\tfilesToRead = files.slice(0, pending);\n\t\t\t}\n\n\t\t\ttoken.count += files.length;\n\n\t\t\tfor (const file of filesToRead) {\n\t\t\t\tif (file.isDirectory()) {\n\t\t\t\t\tif (!filter.includes(file.name)) {\n\t\t\t\t\t\tawait collect(root, join(dir, file.name), filter, token);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (--pending === 0) {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst index = file.name.lastIndexOf('.');\n\t\t\t\t\tif (index >= 0) {\n\t\t\t\t\t\tconst fileType = file.name.substring(index + 1);\n\t\t\t\t\t\tif (fileType) {\n\t\t\t\t\t\t\tfileTypes.set(fileType, (fileTypes.get(fileType) ?? 0) + 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (const configFile of configFilePatterns) {\n\t\t\t\t\t\tif (configFile.relativePathPattern?.test(relativePath) !== false && configFile.filePattern.test(file.name)) {\n\t\t\t\t\t\t\tconfigFiles.set(configFile.tag, (configFiles.get(configFile.tag) ?? 0) + 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (--pending === 0) {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tconst token: { count: number, maxReached: boolean } = { count: 0, maxReached: false };\n\n\tawait collect(folder, folder, filter, token);\n\tconst launchConfigs = await collectLaunchConfigs(folder);\n\treturn {\n\t\tconfigFiles: asSortedItems(configFiles),\n\t\tfileTypes: asSortedItems(fileTypes),\n\t\tfileCount: token.count,\n\t\tmaxFilesReached: token.maxReached,\n\t\tlaunchConfigFiles: launchConfigs\n\t};\n}\n\nfunction asSortedItems(items: Map<string, number>): WorkspaceStatItem[] {\n\treturn [\n\t\t...Iterable.map(items.entries(), ([name, count]) => ({ name: name, count: count }))\n\t].sort((a, b) => b.count - a.count);\n}\n\nexport function getMachineInfo(): IMachineInfo {\n\n\tconst machineInfo: IMachineInfo = {\n\t\tos: `${osLib.type()} ${osLib.arch()} ${osLib.release()}`,\n\t\tmemory: `${(osLib.totalmem() / ByteSize.GB).toFixed(2)}GB (${(osLib.freemem() / ByteSize.GB).toFixed(2)}GB free)`,\n\t\tvmHint: `${Math.round((virtualMachineHint.value() * 100))}%`,\n\t};\n\n\tconst cpus = osLib.cpus();\n\tif (cpus && cpus.length > 0) {\n\t\tmachineInfo.cpus = `${cpus[0].model} (${cpus.length} x ${cpus[0].speed})`;\n\t}\n\n\treturn machineInfo;\n}\n\nexport async function collectLaunchConfigs(folder: string): Promise<WorkspaceStatItem[]> {\n\ttry {\n\t\tconst launchConfigs = new Map<string, number>();\n\t\tconst launchConfig = join(folder, '.vscode', 'launch.json');\n\n\t\tconst contents = await pfs.readFile(launchConfig);\n\n\t\tconst errors: ParseError[] = [];\n\t\tconst json = parse(contents.toString(), errors);\n\t\tif (errors.length) {\n\t\t\tconsole.log(`Unable to parse ${launchConfig}`);\n\t\t\treturn [];\n\t\t}\n\n\t\tif (getNodeType(json) === 'object' && json['configurations']) {\n\t\t\tfor (const each of json['configurations']) {\n\t\t\t\tconst type = each['type'];\n\t\t\t\tif (type) {\n\t\t\t\t\tif (launchConfigs.has(type)) {\n\t\t\t\t\t\tlaunchConfigs.set(type, launchConfigs.get(type)! + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlaunchConfigs.set(type, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn asSortedItems(launchConfigs);\n\t} catch (error) {\n\t\treturn [];\n\t}\n}\n\nexport class DiagnosticsService implements IDiagnosticsService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IProductService private readonly productService: IProductService\n\t) { }\n\n\tprivate formatMachineInfo(info: IMachineInfo): string {\n\t\tconst output: string[] = [];\n\t\toutput.push(`OS Version:       ${info.os}`);\n\t\toutput.push(`CPUs:             ${info.cpus}`);\n\t\toutput.push(`Memory (System):  ${info.memory}`);\n\t\toutput.push(`VM:               ${info.vmHint}`);\n\n\t\treturn output.join('\\n');\n\t}\n\n\tprivate formatEnvironment(info: IMainProcessInfo): string {\n\t\tconst output: string[] = [];\n\t\toutput.push(`Version:          ${this.productService.nameShort} ${this.productService.version} (${this.productService.commit || 'Commit unknown'}, ${this.productService.date || 'Date unknown'})`);\n\t\toutput.push(`OS Version:       ${osLib.type()} ${osLib.arch()} ${osLib.release()}`);\n\t\tconst cpus = osLib.cpus();\n\t\tif (cpus && cpus.length > 0) {\n\t\t\toutput.push(`CPUs:             ${cpus[0].model} (${cpus.length} x ${cpus[0].speed})`);\n\t\t}\n\t\toutput.push(`Memory (System):  ${(osLib.totalmem() / ByteSize.GB).toFixed(2)}GB (${(osLib.freemem() / ByteSize.GB).toFixed(2)}GB free)`);\n\t\tif (!isWindows) {\n\t\t\toutput.push(`Load (avg):       ${osLib.loadavg().map(l => Math.round(l)).join(', ')}`); // only provided on Linux/macOS\n\t\t}\n\t\toutput.push(`VM:               ${Math.round((virtualMachineHint.value() * 100))}%`);\n\t\toutput.push(`Screen Reader:    ${info.screenReader ? 'yes' : 'no'}`);\n\t\toutput.push(`Process Argv:     ${info.mainArguments.join(' ')}`);\n\t\toutput.push(`GPU Status:       ${this.expandGPUFeatures(info.gpuFeatureStatus)}`);\n\n\t\treturn output.join('\\n');\n\t}\n\n\tpublic async getPerformanceInfo(info: IMainProcessInfo, remoteData: (IRemoteDiagnosticInfo | IRemoteDiagnosticError)[]): Promise<PerformanceInfo> {\n\t\treturn Promise.all([listProcesses(info.mainPID), this.formatWorkspaceMetadata(info)]).then(async result => {\n\t\t\tlet [rootProcess, workspaceInfo] = result;\n\t\t\tlet processInfo = this.formatProcessList(info, rootProcess);\n\n\t\t\tremoteData.forEach(diagnostics => {\n\t\t\t\tif (isRemoteDiagnosticError(diagnostics)) {\n\t\t\t\t\tprocessInfo += `\\n${diagnostics.errorMessage}`;\n\t\t\t\t\tworkspaceInfo += `\\n${diagnostics.errorMessage}`;\n\t\t\t\t} else {\n\t\t\t\t\tprocessInfo += `\\n\\nRemote: ${diagnostics.hostName}`;\n\t\t\t\t\tif (diagnostics.processes) {\n\t\t\t\t\t\tprocessInfo += `\\n${this.formatProcessList(info, diagnostics.processes)}`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diagnostics.workspaceMetadata) {\n\t\t\t\t\t\tworkspaceInfo += `\\n|  Remote: ${diagnostics.hostName}`;\n\t\t\t\t\t\tfor (const folder of Object.keys(diagnostics.workspaceMetadata)) {\n\t\t\t\t\t\t\tconst metadata = diagnostics.workspaceMetadata[folder];\n\n\t\t\t\t\t\t\tlet countMessage = `${metadata.fileCount} files`;\n\t\t\t\t\t\t\tif (metadata.maxFilesReached) {\n\t\t\t\t\t\t\t\tcountMessage = `more than ${countMessage}`;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tworkspaceInfo += `|    Folder (${folder}): ${countMessage}`;\n\t\t\t\t\t\t\tworkspaceInfo += this.formatWorkspaceStats(metadata);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\tprocessInfo,\n\t\t\t\tworkspaceInfo\n\t\t\t};\n\t\t});\n\t}\n\n\tpublic async getSystemInfo(info: IMainProcessInfo, remoteData: (IRemoteDiagnosticInfo | IRemoteDiagnosticError)[]): Promise<SystemInfo> {\n\t\tconst { memory, vmHint, os, cpus } = getMachineInfo();\n\t\tconst systemInfo: SystemInfo = {\n\t\t\tos,\n\t\t\tmemory,\n\t\t\tcpus,\n\t\t\tvmHint,\n\t\t\tprocessArgs: `${info.mainArguments.join(' ')}`,\n\t\t\tgpuStatus: info.gpuFeatureStatus,\n\t\t\tscreenReader: `${info.screenReader ? 'yes' : 'no'}`,\n\t\t\tremoteData\n\t\t};\n\n\t\tif (!isWindows) {\n\t\t\tsystemInfo.load = `${osLib.loadavg().map(l => Math.round(l)).join(', ')}`;\n\t\t}\n\n\t\tif (isLinux) {\n\t\t\tsystemInfo.linuxEnv = {\n\t\t\t\tdesktopSession: process.env['DESKTOP_SESSION'],\n\t\t\t\txdgSessionDesktop: process.env['XDG_SESSION_DESKTOP'],\n\t\t\t\txdgCurrentDesktop: process.env['XDG_CURRENT_DESKTOP'],\n\t\t\t\txdgSessionType: process.env['XDG_SESSION_TYPE']\n\t\t\t};\n\t\t}\n\n\t\treturn Promise.resolve(systemInfo);\n\t}\n\n\tpublic async getDiagnostics(info: IMainProcessInfo, remoteDiagnostics: (IRemoteDiagnosticInfo | IRemoteDiagnosticError)[]): Promise<string> {\n\t\tconst output: string[] = [];\n\t\treturn listProcesses(info.mainPID).then(async rootProcess => {\n\n\t\t\t// Environment Info\n\t\t\toutput.push('');\n\t\t\toutput.push(this.formatEnvironment(info));\n\n\t\t\t// Process List\n\t\t\toutput.push('');\n\t\t\toutput.push(this.formatProcessList(info, rootProcess));\n\n\t\t\t// Workspace Stats\n\t\t\tif (info.windows.some(window => window.folderURIs && window.folderURIs.length > 0 && !window.remoteAuthority)) {\n\t\t\t\toutput.push('');\n\t\t\t\toutput.push('Workspace Stats: ');\n\t\t\t\toutput.push(await this.formatWorkspaceMetadata(info));\n\t\t\t}\n\n\t\t\tremoteDiagnostics.forEach(diagnostics => {\n\t\t\t\tif (isRemoteDiagnosticError(diagnostics)) {\n\t\t\t\t\toutput.push(`\\n${diagnostics.errorMessage}`);\n\t\t\t\t} else {\n\t\t\t\t\toutput.push('\\n\\n');\n\t\t\t\t\toutput.push(`Remote:           ${diagnostics.hostName}`);\n\t\t\t\t\toutput.push(this.formatMachineInfo(diagnostics.machineInfo));\n\n\t\t\t\t\tif (diagnostics.processes) {\n\t\t\t\t\t\toutput.push(this.formatProcessList(info, diagnostics.processes));\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diagnostics.workspaceMetadata) {\n\t\t\t\t\t\tfor (const folder of Object.keys(diagnostics.workspaceMetadata)) {\n\t\t\t\t\t\t\tconst metadata = diagnostics.workspaceMetadata[folder];\n\n\t\t\t\t\t\t\tlet countMessage = `${metadata.fileCount} files`;\n\t\t\t\t\t\t\tif (metadata.maxFilesReached) {\n\t\t\t\t\t\t\t\tcountMessage = `more than ${countMessage}`;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\toutput.push(`Folder (${folder}): ${countMessage}`);\n\t\t\t\t\t\t\toutput.push(this.formatWorkspaceStats(metadata));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\toutput.push('');\n\t\t\toutput.push('');\n\n\t\t\treturn output.join('\\n');\n\t\t});\n\t}\n\n\tprivate formatWorkspaceStats(workspaceStats: WorkspaceStats): string {\n\t\tconst output: string[] = [];\n\t\tconst lineLength = 60;\n\t\tlet col = 0;\n\n\t\tconst appendAndWrap = (name: string, count: number) => {\n\t\t\tconst item = ` ${name}(${count})`;\n\n\t\t\tif (col + item.length > lineLength) {\n\t\t\t\toutput.push(line);\n\t\t\t\tline = '|                 ';\n\t\t\t\tcol = line.length;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tcol += item.length;\n\t\t\t}\n\t\t\tline += item;\n\t\t};\n\n\t\t// File Types\n\t\tlet line = '|      File types:';\n\t\tconst maxShown = 10;\n\t\tlet max = workspaceStats.fileTypes.length > maxShown ? maxShown : workspaceStats.fileTypes.length;\n\t\tfor (let i = 0; i < max; i++) {\n\t\t\tconst item = workspaceStats.fileTypes[i];\n\t\t\tappendAndWrap(item.name, item.count);\n\t\t}\n\t\toutput.push(line);\n\n\t\t// Conf Files\n\t\tif (workspaceStats.configFiles.length >= 0) {\n\t\t\tline = '|      Conf files:';\n\t\t\tcol = 0;\n\t\t\tworkspaceStats.configFiles.forEach((item) => {\n\t\t\t\tappendAndWrap(item.name, item.count);\n\t\t\t});\n\t\t\toutput.push(line);\n\t\t}\n\n\t\tif (workspaceStats.launchConfigFiles.length > 0) {\n\t\t\tlet line = '|      Launch Configs:';\n\t\t\tworkspaceStats.launchConfigFiles.forEach(each => {\n\t\t\t\tconst item = each.count > 1 ? ` ${each.name}(${each.count})` : ` ${each.name}`;\n\t\t\t\tline += item;\n\t\t\t});\n\t\t\toutput.push(line);\n\t\t}\n\t\treturn output.join('\\n');\n\t}\n\n\tprivate expandGPUFeatures(gpuFeatures: any): string {\n\t\tconst longestFeatureName = Math.max(...Object.keys(gpuFeatures).map(feature => feature.length));\n\t\t// Make columns aligned by adding spaces after feature name\n\t\treturn Object.keys(gpuFeatures).map(feature => `${feature}:  ${' '.repeat(longestFeatureName - feature.length)}  ${gpuFeatures[feature]}`).join('\\n                  ');\n\t}\n\n\tprivate formatWorkspaceMetadata(info: IMainProcessInfo): Promise<string> {\n\t\tconst output: string[] = [];\n\t\tconst workspaceStatPromises: Promise<void>[] = [];\n\n\t\tinfo.windows.forEach(window => {\n\t\t\tif (window.folderURIs.length === 0 || !!window.remoteAuthority) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\toutput.push(`|  Window (${window.title})`);\n\n\t\t\twindow.folderURIs.forEach(uriComponents => {\n\t\t\t\tconst folderUri = URI.revive(uriComponents);\n\t\t\t\tif (folderUri.scheme === Schemas.file) {\n\t\t\t\t\tconst folder = folderUri.fsPath;\n\t\t\t\t\tworkspaceStatPromises.push(collectWorkspaceStats(folder, ['node_modules', '.git']).then(stats => {\n\t\t\t\t\t\tlet countMessage = `${stats.fileCount} files`;\n\t\t\t\t\t\tif (stats.maxFilesReached) {\n\t\t\t\t\t\t\tcountMessage = `more than ${countMessage}`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\toutput.push(`|    Folder (${basename(folder)}): ${countMessage}`);\n\t\t\t\t\t\toutput.push(this.formatWorkspaceStats(stats));\n\n\t\t\t\t\t}).catch(error => {\n\t\t\t\t\t\toutput.push(`|      Error: Unable to collect workspace stats for folder ${folder} (${error.toString()})`);\n\t\t\t\t\t}));\n\t\t\t\t} else {\n\t\t\t\t\toutput.push(`|    Folder (${folderUri.toString()}): Workspace stats not available.`);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn Promise.all(workspaceStatPromises)\n\t\t\t.then(_ => output.join('\\n'))\n\t\t\t.catch(e => `Unable to collect workspace stats: ${e}`);\n\t}\n\n\tprivate formatProcessList(info: IMainProcessInfo, rootProcess: ProcessItem): string {\n\t\tconst mapPidToWindowTitle = new Map<number, string>();\n\t\tinfo.windows.forEach(window => mapPidToWindowTitle.set(window.pid, window.title));\n\n\t\tconst output: string[] = [];\n\n\t\toutput.push('CPU %\\tMem MB\\t   PID\\tProcess');\n\n\t\tif (rootProcess) {\n\t\t\tthis.formatProcessItem(info.mainPID, mapPidToWindowTitle, output, rootProcess, 0);\n\t\t}\n\n\t\treturn output.join('\\n');\n\t}\n\n\tprivate formatProcessItem(mainPid: number, mapPidToWindowTitle: Map<number, string>, output: string[], item: ProcessItem, indent: number): void {\n\t\tconst isRoot = (indent === 0);\n\n\t\t// Format name with indent\n\t\tlet name: string;\n\t\tif (isRoot) {\n\t\t\tname = item.pid === mainPid ? `${this.productService.applicationName} main` : 'remote agent';\n\t\t} else {\n\t\t\tname = `${'  '.repeat(indent)} ${item.name}`;\n\n\t\t\tif (item.name === 'window') {\n\t\t\t\tname = `${name} (${mapPidToWindowTitle.get(item.pid)})`;\n\t\t\t}\n\t\t}\n\n\t\tconst memory = process.platform === 'win32' ? item.mem : (osLib.totalmem() * (item.mem / 100));\n\t\toutput.push(`${item.load.toFixed(0).padStart(5, ' ')}\\t${(memory / ByteSize.MB).toFixed(0).padStart(6, ' ')}\\t${item.pid.toFixed(0).padStart(6, ' ')}\\t${name}`);\n\n\t\t// Recurse into children if any\n\t\tif (Array.isArray(item.children)) {\n\t\t\titem.children.forEach(child => this.formatProcessItem(mainPid, mapPidToWindowTitle, output, child, indent + 1));\n\t\t}\n\t}\n\n\tpublic async reportWorkspaceStats(workspace: IWorkspaceInformation): Promise<void> {\n\t\tfor (const { uri } of workspace.folders) {\n\t\t\tconst folderUri = URI.revive(uri);\n\t\t\tif (folderUri.scheme !== Schemas.file) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst folder = folderUri.fsPath;\n\t\t\ttry {\n\t\t\t\tconst stats = await collectWorkspaceStats(folder, ['node_modules', '.git']);\n\t\t\t\ttype WorkspaceStatsClassification = {\n\t\t\t\t\t'workspace.id': { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t\t\trendererSessionId: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t\t};\n\t\t\t\ttype WorkspaceStatsEvent = {\n\t\t\t\t\t'workspace.id': string | undefined;\n\t\t\t\t\trendererSessionId: string;\n\t\t\t\t};\n\t\t\t\tthis.telemetryService.publicLog2<WorkspaceStatsEvent, WorkspaceStatsClassification>('workspace.stats', {\n\t\t\t\t\t'workspace.id': workspace.telemetryId,\n\t\t\t\t\trendererSessionId: workspace.rendererSessionId\n\t\t\t\t});\n\t\t\t\ttype WorkspaceStatsFileClassification = {\n\t\t\t\t\trendererSessionId: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t\t\ttype: { classification: 'SystemMetaData', purpose: 'FeatureInsight', isMeasurement: true };\n\t\t\t\t\tcount: { classification: 'SystemMetaData', purpose: 'FeatureInsight', isMeasurement: true };\n\t\t\t\t};\n\t\t\t\ttype WorkspaceStatsFileEvent = {\n\t\t\t\t\trendererSessionId: string;\n\t\t\t\t\ttype: string;\n\t\t\t\t\tcount: number;\n\t\t\t\t};\n\t\t\t\tstats.fileTypes.forEach(e => {\n\t\t\t\t\tthis.telemetryService.publicLog2<WorkspaceStatsFileEvent, WorkspaceStatsFileClassification>('workspace.stats.file', {\n\t\t\t\t\t\trendererSessionId: workspace.rendererSessionId,\n\t\t\t\t\t\ttype: e.name,\n\t\t\t\t\t\tcount: e.count\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tstats.launchConfigFiles.forEach(e => {\n\t\t\t\t\tthis.telemetryService.publicLog2<WorkspaceStatsFileEvent, WorkspaceStatsFileClassification>('workspace.stats.launchConfigFile', {\n\t\t\t\t\t\trendererSessionId: workspace.rendererSessionId,\n\t\t\t\t\t\ttype: e.name,\n\t\t\t\t\t\tcount: e.count\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tstats.configFiles.forEach(e => {\n\t\t\t\t\tthis.telemetryService.publicLog2<WorkspaceStatsFileEvent, WorkspaceStatsFileClassification>('workspace.stats.configFiles', {\n\t\t\t\t\t\trendererSessionId: workspace.rendererSessionId,\n\t\t\t\t\t\ttype: e.name,\n\t\t\t\t\t\tcount: e.count\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} catch {\n\t\t\t\t// Report nothing if collecting metadata fails.\n\t\t\t}\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { ITelemetryAppender } from 'vs/platform/telemetry/common/telemetryUtils';\n\nexport interface ITelemetryLog {\n\teventName: string;\n\tdata?: any;\n}\n\nexport class TelemetryAppenderChannel implements IServerChannel {\n\n\tconstructor(private appenders: ITelemetryAppender[]) { }\n\n\tlisten<T>(_: unknown, event: string): Event<T> {\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, { eventName, data }: ITelemetryLog): Promise<any> {\n\t\tthis.appenders.forEach(a => a.log(eventName, data));\n\t\treturn Promise.resolve(null);\n\t}\n}\n\nexport class TelemetryAppenderClient implements ITelemetryAppender {\n\n\tconstructor(private channel: IChannel) { }\n\n\tlog(eventName: string, data?: any): any {\n\t\tthis.channel.call('log', { eventName, data })\n\t\t\t.then(undefined, err => `Failed to log telemetry: ${console.warn(err)}`);\n\n\t\treturn Promise.resolve(null);\n\t}\n\n\tflush(): Promise<void> {\n\t\t// TODO\n\t\treturn Promise.resolve();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { safeStringify } from 'vs/base/common/objects';\nimport { isObject } from 'vs/base/common/types';\nimport { ConfigurationTarget, ConfigurationTargetToString, IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ClassifiedEvent, GDPRClassification, StrictPropertyCheck } from 'vs/platform/telemetry/common/gdprTypings';\nimport { ICustomEndpointTelemetryService, ITelemetryData, ITelemetryEndpoint, ITelemetryInfo, ITelemetryService, TelemetryConfiguration, TelemetryLevel, TELEMETRY_OLD_SETTING_ID, TELEMETRY_SETTING_ID } from 'vs/platform/telemetry/common/telemetry';\n\nexport class NullTelemetryServiceShape implements ITelemetryService {\n\tdeclare readonly _serviceBrand: undefined;\n\treadonly sendErrorTelemetry = false;\n\n\tpublicLog(eventName: string, data?: ITelemetryData) {\n\t\treturn Promise.resolve(undefined);\n\t}\n\tpublicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>) {\n\t\treturn this.publicLog(eventName, data as ITelemetryData);\n\t}\n\tpublicLogError(eventName: string, data?: ITelemetryData) {\n\t\treturn Promise.resolve(undefined);\n\t}\n\tpublicLogError2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>) {\n\t\treturn this.publicLogError(eventName, data as ITelemetryData);\n\t}\n\n\tsetExperimentProperty() { }\n\ttelemetryLevel = TelemetryLevel.NONE;\n\tgetTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\treturn Promise.resolve({\n\t\t\tinstanceId: 'someValue.instanceId',\n\t\t\tsessionId: 'someValue.sessionId',\n\t\t\tmachineId: 'someValue.machineId',\n\t\t\tfirstSessionDate: 'someValue.firstSessionDate'\n\t\t});\n\t}\n}\n\nexport const NullTelemetryService = new NullTelemetryServiceShape();\n\nexport class NullEndpointTelemetryService implements ICustomEndpointTelemetryService {\n\t_serviceBrand: undefined;\n\n\tasync publicLog(_endpoint: ITelemetryEndpoint, _eventName: string, _data?: ITelemetryData): Promise<void> {\n\t\t// noop\n\t}\n\n\tasync publicLogError(_endpoint: ITelemetryEndpoint, _errorEventName: string, _data?: ITelemetryData): Promise<void> {\n\t\t// noop\n\t}\n}\n\nexport interface ITelemetryAppender {\n\tlog(eventName: string, data: any): void;\n\tflush(): Promise<any>;\n}\n\nexport const NullAppender: ITelemetryAppender = { log: () => null, flush: () => Promise.resolve(null) };\n\n\n/* __GDPR__FRAGMENT__\n\t\"URIDescriptor\" : {\n\t\t\"mimeType\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"scheme\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"ext\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\"path\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t}\n*/\nexport interface URIDescriptor {\n\tmimeType?: string;\n\tscheme?: string;\n\text?: string;\n\tpath?: string;\n}\n\nexport function configurationTelemetry(telemetryService: ITelemetryService, configurationService: IConfigurationService): IDisposable {\n\treturn configurationService.onDidChangeConfiguration(event => {\n\t\tif (event.source !== ConfigurationTarget.DEFAULT) {\n\t\t\ttype UpdateConfigurationClassification = {\n\t\t\t\tconfigurationSource: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t\tconfigurationKeys: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t};\n\t\t\ttype UpdateConfigurationEvent = {\n\t\t\t\tconfigurationSource: string;\n\t\t\t\tconfigurationKeys: string[];\n\t\t\t};\n\t\t\ttelemetryService.publicLog2<UpdateConfigurationEvent, UpdateConfigurationClassification>('updateConfiguration', {\n\t\t\t\tconfigurationSource: ConfigurationTargetToString(event.source),\n\t\t\t\tconfigurationKeys: flattenKeys(event.sourceConfig)\n\t\t\t});\n\t\t}\n\t});\n}\n\n/**\n * Determines how telemetry is handled based on the current running configuration.\n * To log telemetry locally, the client must not disable telemetry via the CLI\n * If client is a built product and telemetry is enabled via the product.json, telemetry is supported\n * This function is only used to determine if telemetry contructs should occur, but is not impacted by user configuration\n *\n * @param productService\n * @param environmentService\n * @returns false - telemetry is completely disabled, true - telemetry is logged locally, but may not be sent\n */\nexport function supportsTelemetry(productService: IProductService, environmentService: IEnvironmentService): boolean {\n\treturn !(environmentService.disableTelemetry || !productService.enableTelemetry);\n}\n\n/**\n * Determines how telemetry is handled based on the user's configuration.\n *\n * @param configurationService\n * @returns OFF, ERROR, ON\n */\nexport function getTelemetryLevel(configurationService: IConfigurationService): TelemetryLevel {\n\tconst newConfig = configurationService.getValue<TelemetryConfiguration>(TELEMETRY_SETTING_ID);\n\tconst crashReporterConfig = configurationService.getValue<boolean | undefined>('telemetry.enableCrashReporter');\n\tconst oldConfig = configurationService.getValue<boolean | undefined>(TELEMETRY_OLD_SETTING_ID);\n\n\t// If `telemetry.enableCrashReporter` is false or `telemetry.enableTelemetry' is false, disable telemetry\n\tif (oldConfig === false || crashReporterConfig === false) {\n\t\treturn TelemetryLevel.NONE;\n\t}\n\n\t// Maps new telemetry setting to a telemetry level\n\tswitch (newConfig ?? TelemetryConfiguration.ON) {\n\t\tcase TelemetryConfiguration.ON:\n\t\t\treturn TelemetryLevel.USAGE;\n\t\tcase TelemetryConfiguration.ERROR:\n\t\t\treturn TelemetryLevel.ERROR;\n\t\tcase TelemetryConfiguration.CRASH:\n\t\t\treturn TelemetryLevel.CRASH;\n\t\tcase TelemetryConfiguration.OFF:\n\t\t\treturn TelemetryLevel.NONE;\n\t}\n}\n\nexport interface Properties {\n\t[key: string]: string;\n}\n\nexport interface Measurements {\n\t[key: string]: number;\n}\n\nexport function validateTelemetryData(data?: any): { properties: Properties, measurements: Measurements } {\n\n\tconst properties: Properties = Object.create(null);\n\tconst measurements: Measurements = Object.create(null);\n\n\tconst flat = Object.create(null);\n\tflatten(data, flat);\n\n\tfor (let prop in flat) {\n\t\t// enforce property names less than 150 char, take the last 150 char\n\t\tprop = prop.length > 150 ? prop.substr(prop.length - 149) : prop;\n\t\tconst value = flat[prop];\n\n\t\tif (typeof value === 'number') {\n\t\t\tmeasurements[prop] = value;\n\n\t\t} else if (typeof value === 'boolean') {\n\t\t\tmeasurements[prop] = value ? 1 : 0;\n\n\t\t} else if (typeof value === 'string') {\n\t\t\tif (value.length > 8192) {\n\t\t\t\tconsole.warn(`Telemetry property: ${prop} has been trimmed to 8192, the original length is ${value.length}`);\n\t\t\t}\n\t\t\t//enforce property value to be less than 8192 char, take the first 8192 char\n\t\t\t// https://docs.microsoft.com/en-us/azure/azure-monitor/app/api-custom-events-metrics#limits\n\t\t\tproperties[prop] = value.substring(0, 8191);\n\n\t\t} else if (typeof value !== 'undefined' && value !== null) {\n\t\t\tproperties[prop] = value;\n\t\t}\n\t}\n\n\treturn {\n\t\tproperties,\n\t\tmeasurements\n\t};\n}\n\nexport function cleanRemoteAuthority(remoteAuthority?: string): string {\n\tif (!remoteAuthority) {\n\t\treturn 'none';\n\t}\n\n\tlet ret = 'other';\n\tconst allowedAuthorities = ['ssh-remote', 'dev-container', 'attached-container', 'wsl'];\n\tallowedAuthorities.forEach((res: string) => {\n\t\tif (remoteAuthority!.indexOf(`${res}+`) === 0) {\n\t\t\tret = res;\n\t\t}\n\t});\n\n\treturn ret;\n}\n\nfunction flatten(obj: any, result: { [key: string]: any }, order: number = 0, prefix?: string): void {\n\tif (!obj) {\n\t\treturn;\n\t}\n\n\tfor (let item of Object.getOwnPropertyNames(obj)) {\n\t\tconst value = obj[item];\n\t\tconst index = prefix ? prefix + item : item;\n\n\t\tif (Array.isArray(value)) {\n\t\t\tresult[index] = safeStringify(value);\n\n\t\t} else if (value instanceof Date) {\n\t\t\t// TODO unsure why this is here and not in _getData\n\t\t\tresult[index] = value.toISOString();\n\n\t\t} else if (isObject(value)) {\n\t\t\tif (order < 2) {\n\t\t\t\tflatten(value, result, order + 1, index + '.');\n\t\t\t} else {\n\t\t\t\tresult[index] = safeStringify(value);\n\t\t\t}\n\t\t} else {\n\t\t\tresult[index] = value;\n\t\t}\n\t}\n}\n\nfunction flattenKeys(value: Object | undefined): string[] {\n\tif (!value) {\n\t\treturn [];\n\t}\n\tconst result: string[] = [];\n\tflatKeys(result, '', value);\n\treturn result;\n}\n\nfunction flatKeys(result: string[], prefix: string, value: { [key: string]: any } | undefined): void {\n\tif (value && typeof value === 'object' && !Array.isArray(value)) {\n\t\tObject.keys(value)\n\t\t\t.forEach(key => flatKeys(result, prefix ? `${prefix}.${key}` : key, value[key]));\n\t} else {\n\t\tresult.push(prefix);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { distinct } from 'vs/base/common/arrays';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IStringDictionary } from 'vs/base/common/collections';\nimport { canceled, getErrorMessage, isPromiseCanceledError } from 'vs/base/common/errors';\nimport { getOrDefault } from 'vs/base/common/objects';\nimport { IPager } from 'vs/base/common/paging';\nimport { isWeb, platform } from 'vs/base/common/platform';\nimport { arch } from 'vs/base/common/process';\nimport { isBoolean } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { IHeaders, IRequestContext, IRequestOptions } from 'vs/base/parts/request/common/request';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { DefaultIconPath, getFallbackTargetPlarforms, getTargetPlatform, IExtensionGalleryService, IExtensionIdentifier, IExtensionIdentifierWithVersion, IGalleryExtension, IGalleryExtensionAsset, IGalleryExtensionAssets, IGalleryExtensionVersion, InstallOperation, IQueryOptions, IExtensionsControlManifest, isIExtensionIdentifier, isNotWebExtensionInWebTargetPlatform, isTargetPlatformCompatible, ITranslation, SortBy, SortOrder, StatisticType, TargetPlatform, toTargetPlatform, WEB_EXTENSION_TAG, IExtensionIdentifierWithPreRelease } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { adoptToGalleryExtensionId, areSameExtensions, getGalleryExtensionId, getGalleryExtensionTelemetryData } from 'vs/platform/extensionManagement/common/extensionManagementUtil';\nimport { IExtensionManifest } from 'vs/platform/extensions/common/extensions';\nimport { isEngineValid } from 'vs/platform/extensions/common/extensionValidator';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { asJson, asText, IRequestService, isSuccess } from 'vs/platform/request/common/request';\nimport { getServiceMachineId } from 'vs/platform/serviceMachineId/common/serviceMachineId';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { ITelemetryService, TelemetryLevel } from 'vs/platform/telemetry/common/telemetry';\nimport { getTelemetryLevel, supportsTelemetry } from 'vs/platform/telemetry/common/telemetryUtils';\n\nconst CURRENT_TARGET_PLATFORM = isWeb ? TargetPlatform.WEB : getTargetPlatform(platform, arch);\n\ninterface IRawGalleryExtensionFile {\n\treadonly assetType: string;\n\treadonly source: string;\n}\n\ninterface IRawGalleryExtensionProperty {\n\treadonly key: string;\n\treadonly value: string;\n}\n\nexport interface IRawGalleryExtensionVersion {\n\treadonly version: string;\n\treadonly lastUpdated: string;\n\treadonly assetUri: string;\n\treadonly fallbackAssetUri: string;\n\treadonly files: IRawGalleryExtensionFile[];\n\treadonly properties?: IRawGalleryExtensionProperty[];\n\treadonly targetPlatform?: string;\n}\n\ninterface IRawGalleryExtensionStatistics {\n\treadonly statisticName: string;\n\treadonly value: number;\n}\n\ninterface IRawGalleryExtensionPublisher {\n\treadonly displayName: string;\n\treadonly publisherId: string;\n\treadonly publisherName: string;\n\treadonly domain?: string | null;\n\treadonly isDomainVerified?: boolean;\n}\n\ninterface IRawGalleryExtension {\n\treadonly extensionId: string;\n\treadonly extensionName: string;\n\treadonly displayName: string;\n\treadonly shortDescription: string;\n\treadonly publisher: IRawGalleryExtensionPublisher;\n\treadonly versions: IRawGalleryExtensionVersion[];\n\treadonly statistics: IRawGalleryExtensionStatistics[];\n\treadonly tags: string[] | undefined;\n\treadonly releaseDate: string;\n\treadonly publishedDate: string;\n\treadonly lastUpdated: string;\n\treadonly categories: string[] | undefined;\n\treadonly flags: string;\n}\n\ninterface IRawGalleryQueryResult {\n\treadonly results: {\n\t\treadonly extensions: IRawGalleryExtension[];\n\t\treadonly resultMetadata: {\n\t\t\treadonly metadataType: string;\n\t\t\treadonly metadataItems: {\n\t\t\t\treadonly name: string;\n\t\t\t\treadonly count: number;\n\t\t\t}[];\n\t\t}[]\n\t}[];\n}\n\nenum Flags {\n\tNone = 0x0,\n\tIncludeVersions = 0x1,\n\tIncludeFiles = 0x2,\n\tIncludeCategoryAndTags = 0x4,\n\tIncludeSharedAccounts = 0x8,\n\tIncludeVersionProperties = 0x10,\n\tExcludeNonValidated = 0x20,\n\tIncludeInstallationTargets = 0x40,\n\tIncludeAssetUri = 0x80,\n\tIncludeStatistics = 0x100,\n\tIncludeLatestVersionOnly = 0x200,\n\tUnpublished = 0x1000\n}\n\nfunction flagsToString(...flags: Flags[]): string {\n\treturn String(flags.reduce((r, f) => r | f, 0));\n}\n\nenum FilterType {\n\tTag = 1,\n\tExtensionId = 4,\n\tCategory = 5,\n\tExtensionName = 7,\n\tTarget = 8,\n\tFeatured = 9,\n\tSearchText = 10,\n\tExcludeWithFlags = 12\n}\n\nconst AssetType = {\n\tIcon: 'Microsoft.VisualStudio.Services.Icons.Default',\n\tDetails: 'Microsoft.VisualStudio.Services.Content.Details',\n\tChangelog: 'Microsoft.VisualStudio.Services.Content.Changelog',\n\tManifest: 'Microsoft.VisualStudio.Code.Manifest',\n\tVSIX: 'Microsoft.VisualStudio.Services.VSIXPackage',\n\tLicense: 'Microsoft.VisualStudio.Services.Content.License',\n\tRepository: 'Microsoft.VisualStudio.Services.Links.Source'\n};\n\nconst PropertyType = {\n\tDependency: 'Microsoft.VisualStudio.Code.ExtensionDependencies',\n\tExtensionPack: 'Microsoft.VisualStudio.Code.ExtensionPack',\n\tEngine: 'Microsoft.VisualStudio.Code.Engine',\n\tPreRelease: 'Microsoft.VisualStudio.Code.PreRelease',\n\tLocalizedLanguages: 'Microsoft.VisualStudio.Code.LocalizedLanguages',\n\tWebExtension: 'Microsoft.VisualStudio.Code.WebExtension'\n};\n\ninterface ICriterium {\n\treadonly filterType: FilterType;\n\treadonly value?: string;\n}\n\nconst DefaultPageSize = 10;\n\ninterface IQueryState {\n\treadonly pageNumber: number;\n\treadonly pageSize: number;\n\treadonly sortBy: SortBy;\n\treadonly sortOrder: SortOrder;\n\treadonly flags: Flags;\n\treadonly criteria: ICriterium[];\n\treadonly assetTypes: string[];\n}\n\nconst DefaultQueryState: IQueryState = {\n\tpageNumber: 1,\n\tpageSize: DefaultPageSize,\n\tsortBy: SortBy.NoneOrRelevance,\n\tsortOrder: SortOrder.Default,\n\tflags: Flags.None,\n\tcriteria: [],\n\tassetTypes: []\n};\n\ntype GalleryServiceQueryClassification = {\n\treadonly filterTypes: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\treadonly sortBy: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\treadonly sortOrder: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\treadonly duration: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth', 'isMeasurement': true };\n\treadonly success: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\treadonly requestBodySize: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\treadonly responseBodySize?: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\treadonly statusCode?: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\treadonly errorCode?: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\treadonly count?: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n};\n\ntype QueryTelemetryData = {\n\treadonly filterTypes: string[];\n\treadonly sortBy: string;\n\treadonly sortOrder: string;\n};\n\ntype GalleryServiceQueryEvent = QueryTelemetryData & {\n\treadonly duration: number;\n\treadonly success: boolean;\n\treadonly requestBodySize: string;\n\treadonly responseBodySize?: string;\n\treadonly statusCode?: string;\n\treadonly errorCode?: string;\n\treadonly count?: string;\n};\n\ntype GalleryServicePreReleaseQueryClassification = {\n\treadonly duration: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth', 'isMeasurement': true };\n\treadonly count: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n};\n\ntype GalleryServicePreReleasesQueryEvent = {\n\treadonly duration: number;\n\treadonly count: number;\n};\n\nclass Query {\n\n\tconstructor(private state = DefaultQueryState) { }\n\n\tget pageNumber(): number { return this.state.pageNumber; }\n\tget pageSize(): number { return this.state.pageSize; }\n\tget sortBy(): number { return this.state.sortBy; }\n\tget sortOrder(): number { return this.state.sortOrder; }\n\tget flags(): number { return this.state.flags; }\n\n\twithPage(pageNumber: number, pageSize: number = this.state.pageSize): Query {\n\t\treturn new Query({ ...this.state, pageNumber, pageSize });\n\t}\n\n\twithFilter(filterType: FilterType, ...values: string[]): Query {\n\t\tconst criteria = [\n\t\t\t...this.state.criteria,\n\t\t\t...values.length ? values.map(value => ({ filterType, value })) : [{ filterType }]\n\t\t];\n\n\t\treturn new Query({ ...this.state, criteria });\n\t}\n\n\twithSortBy(sortBy: SortBy): Query {\n\t\treturn new Query({ ...this.state, sortBy });\n\t}\n\n\twithSortOrder(sortOrder: SortOrder): Query {\n\t\treturn new Query({ ...this.state, sortOrder });\n\t}\n\n\twithFlags(...flags: Flags[]): Query {\n\t\treturn new Query({ ...this.state, flags: flags.reduce<number>((r, f) => r | f, 0) });\n\t}\n\n\twithAssetTypes(...assetTypes: string[]): Query {\n\t\treturn new Query({ ...this.state, assetTypes });\n\t}\n\n\tget raw(): any {\n\t\tconst { criteria, pageNumber, pageSize, sortBy, sortOrder, flags, assetTypes } = this.state;\n\t\tconst filters = [{ criteria, pageNumber, pageSize, sortBy, sortOrder }];\n\t\treturn { filters, assetTypes, flags };\n\t}\n\n\tget searchText(): string {\n\t\tconst criterium = this.state.criteria.filter(criterium => criterium.filterType === FilterType.SearchText)[0];\n\t\treturn criterium && criterium.value ? criterium.value : '';\n\t}\n\n\tget telemetryData(): QueryTelemetryData {\n\t\treturn {\n\t\t\tfilterTypes: this.state.criteria.map(criterium => String(criterium.filterType)),\n\t\t\tsortBy: String(this.sortBy),\n\t\t\tsortOrder: String(this.sortOrder)\n\t\t};\n\t}\n}\n\nfunction getStatistic(statistics: IRawGalleryExtensionStatistics[], name: string): number {\n\tconst result = (statistics || []).filter(s => s.statisticName === name)[0];\n\treturn result ? result.value : 0;\n}\n\nfunction getCoreTranslationAssets(version: IRawGalleryExtensionVersion): [string, IGalleryExtensionAsset][] {\n\tconst coreTranslationAssetPrefix = 'Microsoft.VisualStudio.Code.Translation.';\n\tconst result = version.files.filter(f => f.assetType.indexOf(coreTranslationAssetPrefix) === 0);\n\treturn result.reduce<[string, IGalleryExtensionAsset][]>((result, file) => {\n\t\tconst asset = getVersionAsset(version, file.assetType);\n\t\tif (asset) {\n\t\t\tresult.push([file.assetType.substring(coreTranslationAssetPrefix.length), asset]);\n\t\t}\n\t\treturn result;\n\t}, []);\n}\n\nfunction getRepositoryAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset | null {\n\tif (version.properties) {\n\t\tconst results = version.properties.filter(p => p.key === AssetType.Repository);\n\t\tconst gitRegExp = new RegExp('((git|ssh|http(s)?)|(git@[\\\\w.]+))(:(//)?)([\\\\w.@:/\\\\-~]+)(.git)(/)?');\n\n\t\tconst uri = results.filter(r => gitRegExp.test(r.value))[0];\n\t\treturn uri ? { uri: uri.value, fallbackUri: uri.value } : null;\n\t}\n\treturn getVersionAsset(version, AssetType.Repository);\n}\n\nfunction getDownloadAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset {\n\treturn {\n\t\turi: `${version.fallbackAssetUri}/${AssetType.VSIX}?redirect=true${version.targetPlatform ? `&targetPlatform=${version.targetPlatform}` : ''}`,\n\t\tfallbackUri: `${version.fallbackAssetUri}/${AssetType.VSIX}${version.targetPlatform ? `?targetPlatform=${version.targetPlatform}` : ''}`\n\t};\n}\n\nfunction getIconAsset(version: IRawGalleryExtensionVersion): IGalleryExtensionAsset {\n\tconst asset = getVersionAsset(version, AssetType.Icon);\n\tif (asset) {\n\t\treturn asset;\n\t}\n\tconst uri = DefaultIconPath;\n\treturn { uri, fallbackUri: uri };\n}\n\nfunction getVersionAsset(version: IRawGalleryExtensionVersion, type: string): IGalleryExtensionAsset | null {\n\tconst result = version.files.filter(f => f.assetType === type)[0];\n\treturn result ? { uri: `${version.assetUri}/${type}`, fallbackUri: `${version.fallbackAssetUri}/${type}` } : null;\n}\n\nfunction getExtensions(version: IRawGalleryExtensionVersion, property: string): string[] {\n\tconst values = version.properties ? version.properties.filter(p => p.key === property) : [];\n\tconst value = values.length > 0 && values[0].value;\n\treturn value ? value.split(',').map(v => adoptToGalleryExtensionId(v)) : [];\n}\n\nfunction getEngine(version: IRawGalleryExtensionVersion): string {\n\tconst values = version.properties ? version.properties.filter(p => p.key === PropertyType.Engine) : [];\n\treturn (values.length > 0 && values[0].value) || '';\n}\n\nfunction isPreReleaseVersion(version: IRawGalleryExtensionVersion): boolean {\n\tconst values = version.properties ? version.properties.filter(p => p.key === PropertyType.PreRelease) : [];\n\treturn values.length > 0 && values[0].value === 'true';\n}\n\nfunction getLocalizedLanguages(version: IRawGalleryExtensionVersion): string[] {\n\tconst values = version.properties ? version.properties.filter(p => p.key === PropertyType.LocalizedLanguages) : [];\n\tconst value = (values.length > 0 && values[0].value) || '';\n\treturn value ? value.split(',') : [];\n}\n\nfunction getIsPreview(flags: string): boolean {\n\treturn flags.indexOf('preview') !== -1;\n}\n\nfunction getTargetPlatformForExtensionVersion(version: IRawGalleryExtensionVersion): TargetPlatform {\n\treturn version.targetPlatform ? toTargetPlatform(version.targetPlatform) : TargetPlatform.UNDEFINED;\n}\n\nfunction getAllTargetPlatforms(rawGalleryExtension: IRawGalleryExtension): TargetPlatform[] {\n\tconst allTargetPlatforms = distinct(rawGalleryExtension.versions.map(getTargetPlatformForExtensionVersion));\n\n\t// Is a web extension only if it has WEB_EXTENSION_TAG\n\tconst isWebExtension = !!rawGalleryExtension.tags?.includes(WEB_EXTENSION_TAG);\n\n\t// Include Web Target Platform only if it is a web extension\n\tconst webTargetPlatformIndex = allTargetPlatforms.indexOf(TargetPlatform.WEB);\n\tif (isWebExtension) {\n\t\tif (webTargetPlatformIndex === -1) {\n\t\t\t// Web extension but does not has web target platform -> add it\n\t\t\tallTargetPlatforms.push(TargetPlatform.WEB);\n\t\t}\n\t} else {\n\t\tif (webTargetPlatformIndex !== -1) {\n\t\t\t// Not a web extension but has web target platform -> remove it\n\t\t\tallTargetPlatforms.splice(webTargetPlatformIndex, 1);\n\t\t}\n\t}\n\n\treturn allTargetPlatforms;\n}\n\nexport function sortExtensionVersions(versions: IRawGalleryExtensionVersion[], preferredTargetPlatform: TargetPlatform): IRawGalleryExtensionVersion[] {\n\t/* It is expected that versions from Marketplace are sorted by version. So we are just sorting by preferred targetPlatform */\n\tconst fallbackTargetPlatforms = getFallbackTargetPlarforms(preferredTargetPlatform);\n\tfor (let index = 0; index < versions.length; index++) {\n\t\tconst version = versions[index];\n\t\tif (version.version === versions[index - 1]?.version) {\n\t\t\tlet insertionIndex = index;\n\t\t\tconst versionTargetPlatform = getTargetPlatformForExtensionVersion(version);\n\t\t\t/* put it at the beginning */\n\t\t\tif (versionTargetPlatform === preferredTargetPlatform) {\n\t\t\t\twhile (insertionIndex > 0 && versions[insertionIndex - 1].version === version.version) { insertionIndex--; }\n\t\t\t}\n\t\t\t/* put it after version with preferred targetPlatform or at the beginning */\n\t\t\telse if (fallbackTargetPlatforms.includes(versionTargetPlatform)) {\n\t\t\t\twhile (insertionIndex > 0 && versions[insertionIndex - 1].version === version.version && getTargetPlatformForExtensionVersion(versions[insertionIndex - 1]) !== preferredTargetPlatform) { insertionIndex--; }\n\t\t\t}\n\t\t\tif (insertionIndex !== index) {\n\t\t\t\tversions.splice(index, 1);\n\t\t\t\tversions.splice(insertionIndex, 0, version);\n\t\t\t}\n\t\t}\n\t}\n\treturn versions;\n}\n\nfunction toExtension(galleryExtension: IRawGalleryExtension, version: IRawGalleryExtensionVersion, allTargetPlatforms: TargetPlatform[], hasReleaseVersion: boolean, telemetryData?: IStringDictionary<any>): IGalleryExtension {\n\tconst latestVersion = galleryExtension.versions[0];\n\tconst assets = <IGalleryExtensionAssets>{\n\t\tmanifest: getVersionAsset(version, AssetType.Manifest),\n\t\treadme: getVersionAsset(version, AssetType.Details),\n\t\tchangelog: getVersionAsset(version, AssetType.Changelog),\n\t\tlicense: getVersionAsset(version, AssetType.License),\n\t\trepository: getRepositoryAsset(version),\n\t\tdownload: getDownloadAsset(version),\n\t\ticon: getIconAsset(version),\n\t\tcoreTranslations: getCoreTranslationAssets(version)\n\t};\n\n\treturn {\n\t\tidentifier: {\n\t\t\tid: getGalleryExtensionId(galleryExtension.publisher.publisherName, galleryExtension.extensionName),\n\t\t\tuuid: galleryExtension.extensionId\n\t\t},\n\t\tname: galleryExtension.extensionName,\n\t\tversion: version.version,\n\t\tdisplayName: galleryExtension.displayName,\n\t\tpublisherId: galleryExtension.publisher.publisherId,\n\t\tpublisher: galleryExtension.publisher.publisherName,\n\t\tpublisherDisplayName: galleryExtension.publisher.displayName,\n\t\tpublisherDomain: galleryExtension.publisher.domain ? { link: galleryExtension.publisher.domain, verified: !!galleryExtension.publisher.isDomainVerified } : undefined,\n\t\tdescription: galleryExtension.shortDescription || '',\n\t\tinstallCount: getStatistic(galleryExtension.statistics, 'install'),\n\t\trating: getStatistic(galleryExtension.statistics, 'averagerating'),\n\t\tratingCount: getStatistic(galleryExtension.statistics, 'ratingcount'),\n\t\tcategories: galleryExtension.categories || [],\n\t\ttags: galleryExtension.tags || [],\n\t\treleaseDate: Date.parse(galleryExtension.releaseDate),\n\t\tlastUpdated: Date.parse(galleryExtension.lastUpdated),\n\t\tallTargetPlatforms,\n\t\tassets,\n\t\tproperties: {\n\t\t\tdependencies: getExtensions(version, PropertyType.Dependency),\n\t\t\textensionPack: getExtensions(version, PropertyType.ExtensionPack),\n\t\t\tengine: getEngine(version),\n\t\t\tlocalizedLanguages: getLocalizedLanguages(version),\n\t\t\ttargetPlatform: getTargetPlatformForExtensionVersion(version),\n\t\t\tisPreReleaseVersion: isPreReleaseVersion(version)\n\t\t},\n\t\thasPreReleaseVersion: isPreReleaseVersion(latestVersion),\n\t\thasReleaseVersion,\n\t\tpreview: getIsPreview(galleryExtension.flags),\n\t\t/* __GDPR__FRAGMENT__\n\t\t\t\"GalleryExtensionTelemetryData2\" : {\n\t\t\t\t\"index\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\", \"isMeasurement\": true },\n\t\t\t\t\"querySource\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t}\n\t\t*/\n\t\ttelemetryData,\n\t};\n}\n\ninterface IRawExtensionsControlManifest {\n\tmalicious: string[];\n\tunsupported: IStringDictionary<boolean | { preReleaseExtension: { id: string, displayName: string } }>;\n}\n\nabstract class AbstractExtensionGalleryService implements IExtensionGalleryService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate extensionsGalleryUrl: string | undefined;\n\tprivate extensionsControlUrl: string | undefined;\n\n\tprivate readonly commonHeadersPromise: Promise<{ [key: string]: string; }>;\n\n\tconstructor(\n\t\tstorageService: IStorageService | undefined,\n\t\t@IRequestService private readonly requestService: IRequestService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t) {\n\t\tconst config = productService.extensionsGallery;\n\t\tthis.extensionsGalleryUrl = config && config.serviceUrl;\n\t\tthis.extensionsControlUrl = config && config.controlUrl;\n\t\tthis.commonHeadersPromise = resolveMarketplaceHeaders(productService.version, productService, this.environmentService, this.configurationService, this.fileService, storageService);\n\t}\n\n\tprivate api(path = ''): string {\n\t\treturn `${this.extensionsGalleryUrl}${path}`;\n\t}\n\n\tisEnabled(): boolean {\n\t\treturn !!this.extensionsGalleryUrl;\n\t}\n\n\tgetExtensions(identifiers: ReadonlyArray<IExtensionIdentifier | IExtensionIdentifierWithVersion>, token: CancellationToken): Promise<IGalleryExtension[]>\n\tgetExtensions(identifiers: ReadonlyArray<IExtensionIdentifier | IExtensionIdentifierWithVersion>, includePreRelease: boolean, token: CancellationToken): Promise<IGalleryExtension[]>\n\tasync getExtensions(identifiers: ReadonlyArray<IExtensionIdentifier | IExtensionIdentifierWithVersion>, arg1: any, arg2?: any): Promise<IGalleryExtension[]> {\n\t\tconst includePreRelease = isBoolean(arg1) ? arg1 : false;\n\t\tconst token: CancellationToken = isBoolean(arg1) ? arg2 : arg1;\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeCategoryAndTags, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n\t\t\t.withPage(1, identifiers.length)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code')\n\t\t\t.withFilter(FilterType.ExtensionName, ...identifiers.map(({ id }) => id.toLowerCase()));\n\n\t\tif (identifiers.every(identifier => !(<IExtensionIdentifierWithVersion>identifier).version)) {\n\t\t\tquery = query.withFlags(Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeCategoryAndTags, Flags.IncludeFiles, Flags.IncludeVersionProperties, Flags.IncludeLatestVersionOnly);\n\t\t}\n\n\t\tconst { galleryExtensions } = await this.queryGallery(query, CURRENT_TARGET_PLATFORM, CancellationToken.None);\n\t\tconst galleryExtensionsByVersion = galleryExtensions.map(rawGalleryExtension => {\n\t\t\tconst id = getGalleryExtensionId(rawGalleryExtension.publisher.publisherName, rawGalleryExtension.extensionName);\n\t\t\treturn { rawGalleryExtension, version: (<IExtensionIdentifierWithVersion | undefined>identifiers.find(identifier => areSameExtensions(identifier, { id })))?.version, preRelease: includePreRelease };\n\t\t});\n\t\treturn this.converToGalleryExtensions(galleryExtensionsByVersion, CURRENT_TARGET_PLATFORM, () => undefined, token);\n\t}\n\n\tasync getExtensions2(identifiers: ReadonlyArray<IExtensionIdentifierWithPreRelease>): Promise<IGalleryExtension[]> {\n\t\tconst names: string[] = []; const ids: string[] = [];\n\t\tfor (const identifier of identifiers) {\n\t\t\tif (identifier.uuid) {\n\t\t\t\tids.push(identifier.uuid);\n\t\t\t} else {\n\t\t\t\tnames.push(identifier.id.toLowerCase());\n\t\t\t}\n\t\t}\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeCategoryAndTags, Flags.IncludeFiles, Flags.IncludeVersionProperties, Flags.IncludeLatestVersionOnly)\n\t\t\t.withPage(1, identifiers.length)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code');\n\t\tif (ids.length) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, ...ids);\n\t\t}\n\t\tif (names.length) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, ...names);\n\t\t}\n\n\t\tconst { galleryExtensions: rawGalleryExtensions } = await this.queryGallery(query, CURRENT_TARGET_PLATFORM, CancellationToken.None);\n\t\tconst rawGalleryExtensionsInput = rawGalleryExtensions.map(rawGalleryExtension => {\n\t\t\tconst id = getGalleryExtensionId(rawGalleryExtension.publisher.publisherName, rawGalleryExtension.extensionName);\n\t\t\tconst identifier = identifiers.find(identifier => areSameExtensions(identifier, { id, uuid: rawGalleryExtension.extensionId }));\n\t\t\treturn { rawGalleryExtension, preRelease: !!identifier?.preRelease };\n\t\t});\n\n\t\treturn this.converToGalleryExtensions(rawGalleryExtensionsInput, CURRENT_TARGET_PLATFORM, () => undefined, CancellationToken.None);\n\t}\n\n\tasync getCompatibleExtension(arg1: IExtensionIdentifier | IGalleryExtension, includePreRelease: boolean, targetPlatform: TargetPlatform): Promise<IGalleryExtension | null> {\n\t\tconst extension: IGalleryExtension | null = isIExtensionIdentifier(arg1) ? null : arg1;\n\t\tif (extension) {\n\t\t\tif (isNotWebExtensionInWebTargetPlatform(extension.allTargetPlatforms, targetPlatform)) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (await this.isExtensionCompatible(extension, includePreRelease, targetPlatform)) {\n\t\t\t\treturn extension;\n\t\t\t}\n\t\t}\n\t\tconst { id, uuid } = extension ? extension.identifier : <IExtensionIdentifier>arg1;\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeCategoryAndTags, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n\t\t\t.withPage(1, 1)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code');\n\n\t\tif (uuid) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, uuid);\n\t\t} else {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, id);\n\t\t}\n\n\t\tconst { galleryExtensions } = await this.queryGallery(query, targetPlatform, CancellationToken.None);\n\t\tconst [rawExtension] = galleryExtensions;\n\t\tif (!rawExtension || !rawExtension.versions.length) {\n\t\t\treturn null;\n\t\t}\n\n\t\tconst allTargetPlatforms = getAllTargetPlatforms(rawExtension);\n\t\tif (isNotWebExtensionInWebTargetPlatform(allTargetPlatforms, targetPlatform)) {\n\t\t\treturn null;\n\t\t}\n\n\t\tfor (let rawVersion of rawExtension.versions) {\n\t\t\t// set engine property if does not exist\n\t\t\tif (!getEngine(rawVersion)) {\n\t\t\t\tconst engine = await this.getEngine(rawVersion);\n\t\t\t\trawVersion = {\n\t\t\t\t\t...rawVersion,\n\t\t\t\t\tproperties: [...(rawVersion.properties || []), { key: PropertyType.Engine, value: engine }]\n\t\t\t\t};\n\t\t\t}\n\t\t\tif (await this.isRawExtensionVersionCompatible(rawVersion, includePreRelease, allTargetPlatforms, targetPlatform)) {\n\t\t\t\tconst hasReleaseVersion = rawExtension.versions.some(version => !isPreReleaseVersion(version));\n\t\t\t\treturn toExtension(rawExtension, rawVersion, allTargetPlatforms, hasReleaseVersion);\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tasync isExtensionCompatible(extension: IGalleryExtension, includePreRelease: boolean, targetPlatform: TargetPlatform): Promise<boolean> {\n\t\tif (!isTargetPlatformCompatible(extension.properties.targetPlatform, extension.allTargetPlatforms, targetPlatform)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!includePreRelease && extension.properties.isPreReleaseVersion) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet engine = extension.properties.engine;\n\t\tif (!engine) {\n\t\t\tconst manifest = await this.getManifest(extension, CancellationToken.None);\n\t\t\tif (!manifest) {\n\t\t\t\tthrow new Error('Manifest was not found');\n\t\t\t}\n\t\t\tengine = manifest.engines.vscode;\n\t\t}\n\t\treturn isEngineValid(engine, this.productService.version, this.productService.date);\n\t}\n\n\tprivate async isRawExtensionVersionCompatible(rawExtensionVersion: IRawGalleryExtensionVersion, includePreRelease: boolean, allTargetPlatforms: TargetPlatform[], targetPlatform: TargetPlatform): Promise<boolean> {\n\t\tif (!isTargetPlatformCompatible(getTargetPlatformForExtensionVersion(rawExtensionVersion), allTargetPlatforms, targetPlatform)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!includePreRelease && isPreReleaseVersion(rawExtensionVersion)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst engine = await this.getEngine(rawExtensionVersion);\n\t\treturn isEngineValid(engine, this.productService.version, this.productService.date);\n\t}\n\n\tasync query(options: IQueryOptions, token: CancellationToken): Promise<IPager<IGalleryExtension>> {\n\t\tif (!this.isEnabled()) {\n\t\t\tthrow new Error('No extension gallery service configured.');\n\t\t}\n\n\t\tlet text = options.text || '';\n\t\tconst pageSize = getOrDefault(options, o => o.pageSize, 50);\n\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeLatestVersionOnly, Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeCategoryAndTags, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n\t\t\t.withPage(1, pageSize)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code');\n\n\t\tif (text) {\n\t\t\t// Use category filter instead of \"category:themes\"\n\t\t\ttext = text.replace(/\\bcategory:(\"([^\"]*)\"|([^\"]\\S*))(\\s+|\\b|$)/g, (_, quotedCategory, category) => {\n\t\t\t\tquery = query.withFilter(FilterType.Category, category || quotedCategory);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\t// Use tag filter instead of \"tag:debuggers\"\n\t\t\ttext = text.replace(/\\btag:(\"([^\"]*)\"|([^\"]\\S*))(\\s+|\\b|$)/g, (_, quotedTag, tag) => {\n\t\t\t\tquery = query.withFilter(FilterType.Tag, tag || quotedTag);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\t// Use featured filter\n\t\t\ttext = text.replace(/\\bfeatured(\\s+|\\b|$)/g, () => {\n\t\t\t\tquery = query.withFilter(FilterType.Featured);\n\t\t\t\treturn '';\n\t\t\t});\n\n\t\t\ttext = text.trim();\n\n\t\t\tif (text) {\n\t\t\t\ttext = text.length < 200 ? text : text.substring(0, 200);\n\t\t\t\tquery = query.withFilter(FilterType.SearchText, text);\n\t\t\t}\n\n\t\t\tquery = query.withSortBy(SortBy.NoneOrRelevance);\n\t\t} else if (options.ids) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, ...options.ids);\n\t\t} else if (options.names) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, ...options.names);\n\t\t} else {\n\t\t\tquery = query.withSortBy(SortBy.InstallCount);\n\t\t}\n\n\t\tif (typeof options.sortBy === 'number') {\n\t\t\tquery = query.withSortBy(options.sortBy);\n\t\t}\n\n\t\tif (typeof options.sortOrder === 'number') {\n\t\t\tquery = query.withSortOrder(options.sortOrder);\n\t\t}\n\n\t\tconst { galleryExtensions, total } = await this.queryGallery(query, CURRENT_TARGET_PLATFORM, token);\n\t\tconst telemetryData = (index: number) => ({ index: ((query.pageNumber - 1) * query.pageSize) + index, querySource: options.source });\n\t\tconst extensions = await this.converToGalleryExtensions(galleryExtensions.map(rawGalleryExtension => ({ rawGalleryExtension, preRelease: !!options.includePreRelease })), CURRENT_TARGET_PLATFORM, telemetryData, token);\n\t\tconst getPage = async (pageIndex: number, ct: CancellationToken) => {\n\t\t\tif (ct.isCancellationRequested) {\n\t\t\t\tthrow canceled();\n\t\t\t}\n\t\t\tconst nextPageQuery = query.withPage(pageIndex + 1);\n\t\t\tconst { galleryExtensions } = await this.queryGallery(nextPageQuery, CURRENT_TARGET_PLATFORM, ct);\n\t\t\treturn await this.converToGalleryExtensions(galleryExtensions.map(rawGalleryExtension => ({ rawGalleryExtension, preRelease: !!options.includePreRelease })), CURRENT_TARGET_PLATFORM, telemetryData, token);\n\t\t};\n\n\t\treturn { firstPage: extensions, total, pageSize: query.pageSize, getPage } as IPager<IGalleryExtension>;\n\t}\n\n\tprivate async converToGalleryExtensions(rawGalleryExtensions: { rawGalleryExtension: IRawGalleryExtension, preRelease: boolean, version?: string }[], targetPlatform: TargetPlatform, telemetryData: (index: number) => IStringDictionary<any> | undefined, token: CancellationToken): Promise<IGalleryExtension[]> {\n\t\tconst toExtensionWithLatestVersion = (galleryExtension: IRawGalleryExtension, index: number, hasReleaseVersion: boolean, preRelease: boolean): IGalleryExtension => {\n\t\t\tconst allTargetPlatforms = getAllTargetPlatforms(galleryExtension);\n\t\t\tlet latestVersion = galleryExtension.versions[0];\n\t\t\tlatestVersion = galleryExtension.versions.find(version => version.version === latestVersion.version && isTargetPlatformCompatible(getTargetPlatformForExtensionVersion(version), allTargetPlatforms, targetPlatform)) || latestVersion;\n\t\t\tif (isPreReleaseVersion(latestVersion) && !preRelease) {\n\t\t\t\tlatestVersion = galleryExtension.versions.find(version => version.version !== latestVersion.version && !isPreReleaseVersion(version)) || latestVersion;\n\t\t\t}\n\t\t\treturn toExtension(galleryExtension, latestVersion, allTargetPlatforms, hasReleaseVersion, telemetryData(index));\n\t\t};\n\t\tconst result: [number, IGalleryExtension][] = [];\n\t\tconst preReleaseVersions = new Map<string, { index: number, preRelease: boolean }>();\n\t\tfor (let index = 0; index < rawGalleryExtensions.length; index++) {\n\t\t\tconst { rawGalleryExtension, version, preRelease } = rawGalleryExtensions[index];\n\t\t\tconst hasReleaseVersion = rawGalleryExtension.versions.some(version => !isPreReleaseVersion(version));\n\t\t\tif (version) {\n\t\t\t\tconst versionAsset = rawGalleryExtension.versions.find(v => v.version === version);\n\t\t\t\tif (versionAsset) {\n\t\t\t\t\tresult.push([index, toExtension(rawGalleryExtension, versionAsset, getAllTargetPlatforms(rawGalleryExtension), hasReleaseVersion)]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst extension = toExtensionWithLatestVersion(rawGalleryExtension, index, hasReleaseVersion, preRelease);\n\t\t\t\tif (extension.properties.isPreReleaseVersion) {\n\t\t\t\t\tpreReleaseVersions.set(extension.identifier.uuid, { index, preRelease });\n\t\t\t\t} else {\n\t\t\t\t\tresult.push([index, extension]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (preReleaseVersions.size) {\n\t\t\tconst startTime = new Date().getTime();\n\t\t\tconst query = new Query()\n\t\t\t\t.withFlags(Flags.IncludeVersions, Flags.IncludeAssetUri, Flags.IncludeStatistics, Flags.IncludeCategoryAndTags, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n\t\t\t\t.withPage(1, preReleaseVersions.size)\n\t\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code')\n\t\t\t\t.withFilter(FilterType.ExtensionId, ...preReleaseVersions.keys());\n\t\t\tconst { galleryExtensions } = await this.queryGallery(query, targetPlatform, token);\n\t\t\tthis.telemetryService.publicLog2<GalleryServicePreReleasesQueryEvent, GalleryServicePreReleaseQueryClassification>('galleryService:preReleasesQuery', {\n\t\t\t\tduration: new Date().getTime() - startTime,\n\t\t\t\tcount: preReleaseVersions.size\n\t\t\t});\n\t\t\tif (galleryExtensions.length !== preReleaseVersions.size) {\n\t\t\t\tthrow new Error('Not all extensions with latest versions are returned');\n\t\t\t}\n\t\t\tfor (const rawGalleryExtension of galleryExtensions) {\n\t\t\t\tconst hasReleaseVersion = rawGalleryExtension.versions.some(version => !isPreReleaseVersion(version));\n\t\t\t\tconst { index, preRelease } = preReleaseVersions.get(rawGalleryExtension.extensionId)!;\n\t\t\t\tconst extension = toExtensionWithLatestVersion(rawGalleryExtension, index, hasReleaseVersion, preRelease);\n\t\t\t\tresult.push([index, extension]);\n\t\t\t}\n\t\t}\n\n\t\treturn result.sort((a, b) => a[0] - b[0]).map(([, extension]) => extension);\n\t}\n\n\tprivate async queryGallery(query: Query, targetPlatform: TargetPlatform, token: CancellationToken): Promise<{ galleryExtensions: IRawGalleryExtension[], total: number; }> {\n\t\tif (!this.isEnabled()) {\n\t\t\tthrow new Error('No extension gallery service configured.');\n\t\t}\n\n\t\t// Always exclude non validated and unpublished extensions\n\t\tquery = query\n\t\t\t.withFlags(query.flags, Flags.ExcludeNonValidated)\n\t\t\t.withFilter(FilterType.ExcludeWithFlags, flagsToString(Flags.Unpublished));\n\n\t\tconst commonHeaders = await this.commonHeadersPromise;\n\t\tconst data = JSON.stringify(query.raw);\n\t\tconst headers = {\n\t\t\t...commonHeaders,\n\t\t\t'Content-Type': 'application/json',\n\t\t\t'Accept': 'application/json;api-version=3.0-preview.1',\n\t\t\t'Accept-Encoding': 'gzip',\n\t\t\t'Content-Length': String(data.length)\n\t\t};\n\n\t\tconst startTime = new Date().getTime();\n\t\tlet context: IRequestContext | undefined, error: any, total: number = 0;\n\n\t\ttry {\n\t\t\tcontext = await this.requestService.request({\n\t\t\t\ttype: 'POST',\n\t\t\t\turl: this.api('/extensionquery'),\n\t\t\t\tdata,\n\t\t\t\theaders\n\t\t\t}, token);\n\n\t\t\tif (context.res.statusCode && context.res.statusCode >= 400 && context.res.statusCode < 500) {\n\t\t\t\treturn { galleryExtensions: [], total };\n\t\t\t}\n\n\t\t\tconst result = await asJson<IRawGalleryQueryResult>(context);\n\t\t\tif (result) {\n\t\t\t\tconst r = result.results[0];\n\t\t\t\tconst galleryExtensions = r.extensions;\n\t\t\t\tgalleryExtensions.forEach(e => sortExtensionVersions(e.versions, targetPlatform));\n\t\t\t\tconst resultCount = r.resultMetadata && r.resultMetadata.filter(m => m.metadataType === 'ResultCount')[0];\n\t\t\t\ttotal = resultCount && resultCount.metadataItems.filter(i => i.name === 'TotalCount')[0].count || 0;\n\n\t\t\t\treturn { galleryExtensions, total };\n\t\t\t}\n\t\t\treturn { galleryExtensions: [], total };\n\n\t\t} catch (e) {\n\t\t\terror = e;\n\t\t\tthrow e;\n\t\t} finally {\n\t\t\tthis.telemetryService.publicLog2<GalleryServiceQueryEvent, GalleryServiceQueryClassification>('galleryService:query', {\n\t\t\t\t...query.telemetryData,\n\t\t\t\trequestBodySize: String(data.length),\n\t\t\t\tduration: new Date().getTime() - startTime,\n\t\t\t\tsuccess: !!context && isSuccess(context),\n\t\t\t\tresponseBodySize: context?.res.headers['Content-Length'],\n\t\t\t\tstatusCode: context ? String(context.res.statusCode) : undefined,\n\t\t\t\terrorCode: error\n\t\t\t\t\t? isPromiseCanceledError(error) ? 'canceled' : getErrorMessage(error).startsWith('XHR timeout') ? 'timeout' : 'failed'\n\t\t\t\t\t: undefined,\n\t\t\t\tcount: String(total)\n\t\t\t});\n\t\t}\n\t}\n\n\tasync reportStatistic(publisher: string, name: string, version: string, type: StatisticType): Promise<void> {\n\t\tif (!this.isEnabled()) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst url = isWeb ? this.api(`/itemName/${publisher}.${name}/version/${version}/statType/${type === StatisticType.Install ? '1' : '3'}/vscodewebextension`) : this.api(`/publishers/${publisher}/extensions/${name}/${version}/stats?statType=${type}`);\n\t\tconst Accept = isWeb ? 'api-version=6.1-preview.1' : '*/*;api-version=4.0-preview.1';\n\n\t\tconst commonHeaders = await this.commonHeadersPromise;\n\t\tconst headers = { ...commonHeaders, Accept };\n\t\ttry {\n\t\t\tawait this.requestService.request({\n\t\t\t\ttype: 'POST',\n\t\t\t\turl,\n\t\t\t\theaders\n\t\t\t}, CancellationToken.None);\n\t\t} catch (error) { /* Ignore */ }\n\t}\n\n\tasync download(extension: IGalleryExtension, location: URI, operation: InstallOperation): Promise<void> {\n\t\tthis.logService.trace('ExtensionGalleryService#download', extension.identifier.id);\n\t\tconst data = getGalleryExtensionTelemetryData(extension);\n\t\tconst startTime = new Date().getTime();\n\t\t/* __GDPR__\n\t\t\t\"galleryService:downloadVSIX\" : {\n\t\t\t\t\"duration\": { \"classification\": \"SystemMetaData\", \"purpose\": \"PerformanceAndHealth\", \"isMeasurement\": true },\n\t\t\t\t\"${include}\": [\n\t\t\t\t\t\"${GalleryExtensionTelemetryData}\"\n\t\t\t\t]\n\t\t\t}\n\t\t*/\n\t\tconst log = (duration: number) => this.telemetryService.publicLog('galleryService:downloadVSIX', { ...data, duration });\n\n\t\tconst operationParam = operation === InstallOperation.Install ? 'install' : operation === InstallOperation.Update ? 'update' : '';\n\t\tconst downloadAsset = operationParam ? {\n\t\t\turi: `${extension.assets.download.uri}${URI.parse(extension.assets.download.uri).query ? '&' : '?'}${operationParam}=true`,\n\t\t\tfallbackUri: `${extension.assets.download.fallbackUri}${URI.parse(extension.assets.download.fallbackUri).query ? '&' : '?'}${operationParam}=true`\n\t\t} : extension.assets.download;\n\n\t\tconst context = await this.getAsset(downloadAsset);\n\t\tawait this.fileService.writeFile(location, context.stream);\n\t\tlog(new Date().getTime() - startTime);\n\t}\n\n\tasync getReadme(extension: IGalleryExtension, token: CancellationToken): Promise<string> {\n\t\tif (extension.assets.readme) {\n\t\t\tconst context = await this.getAsset(extension.assets.readme, {}, token);\n\t\t\tconst content = await asText(context);\n\t\t\treturn content || '';\n\t\t}\n\t\treturn '';\n\t}\n\n\tasync getManifest(extension: IGalleryExtension, token: CancellationToken): Promise<IExtensionManifest | null> {\n\t\tif (extension.assets.manifest) {\n\t\t\tconst context = await this.getAsset(extension.assets.manifest, {}, token);\n\t\t\tconst text = await asText(context);\n\t\t\treturn text ? JSON.parse(text) : null;\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate async getManifestFromRawExtensionVersion(rawExtensionVersion: IRawGalleryExtensionVersion, token: CancellationToken): Promise<IExtensionManifest | null> {\n\t\tconst manifestAsset = getVersionAsset(rawExtensionVersion, AssetType.Manifest);\n\t\tif (!manifestAsset) {\n\t\t\tthrow new Error('Manifest was not found');\n\t\t}\n\t\tconst headers = { 'Accept-Encoding': 'gzip' };\n\t\tconst context = await this.getAsset(manifestAsset, { headers });\n\t\treturn await asJson<IExtensionManifest>(context);\n\t}\n\n\tasync getCoreTranslation(extension: IGalleryExtension, languageId: string): Promise<ITranslation | null> {\n\t\tconst asset = extension.assets.coreTranslations.filter(t => t[0] === languageId.toUpperCase())[0];\n\t\tif (asset) {\n\t\t\tconst context = await this.getAsset(asset[1]);\n\t\t\tconst text = await asText(context);\n\t\t\treturn text ? JSON.parse(text) : null;\n\t\t}\n\t\treturn null;\n\t}\n\n\tasync getChangelog(extension: IGalleryExtension, token: CancellationToken): Promise<string> {\n\t\tif (extension.assets.changelog) {\n\t\t\tconst context = await this.getAsset(extension.assets.changelog, {}, token);\n\t\t\tconst content = await asText(context);\n\t\t\treturn content || '';\n\t\t}\n\t\treturn '';\n\t}\n\n\tasync getAllCompatibleVersions(extension: IGalleryExtension, includePreRelease: boolean, targetPlatform: TargetPlatform): Promise<IGalleryExtensionVersion[]> {\n\t\tlet query = new Query()\n\t\t\t.withFlags(Flags.IncludeVersions, Flags.IncludeCategoryAndTags, Flags.IncludeFiles, Flags.IncludeVersionProperties)\n\t\t\t.withPage(1, 1)\n\t\t\t.withFilter(FilterType.Target, 'Microsoft.VisualStudio.Code');\n\n\t\tif (extension.identifier.uuid) {\n\t\t\tquery = query.withFilter(FilterType.ExtensionId, extension.identifier.uuid);\n\t\t} else {\n\t\t\tquery = query.withFilter(FilterType.ExtensionName, extension.identifier.id);\n\t\t}\n\n\t\tconst { galleryExtensions } = await this.queryGallery(query, targetPlatform, CancellationToken.None);\n\t\tif (!galleryExtensions.length) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst allTargetPlatforms = getAllTargetPlatforms(galleryExtensions[0]);\n\t\tif (isNotWebExtensionInWebTargetPlatform(allTargetPlatforms, targetPlatform)) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst result: IGalleryExtensionVersion[] = [];\n\t\tfor (const version of galleryExtensions[0].versions) {\n\t\t\ttry {\n\t\t\t\tif (result[result.length - 1]?.version !== version.version && await this.isRawExtensionVersionCompatible(version, includePreRelease, allTargetPlatforms, targetPlatform)) {\n\t\t\t\t\tresult.push({ version: version.version, date: version.lastUpdated, isPreReleaseVersion: isPreReleaseVersion(version) });\n\t\t\t\t}\n\t\t\t} catch (error) { /* Ignore error and skip version */ }\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate async getAsset(asset: IGalleryExtensionAsset, options: IRequestOptions = {}, token: CancellationToken = CancellationToken.None): Promise<IRequestContext> {\n\t\tconst commonHeaders = await this.commonHeadersPromise;\n\t\tconst baseOptions = { type: 'GET' };\n\t\tconst headers = { ...commonHeaders, ...(options.headers || {}) };\n\t\toptions = { ...options, ...baseOptions, headers };\n\n\t\tconst url = asset.uri;\n\t\tconst fallbackUrl = asset.fallbackUri;\n\t\tconst firstOptions = { ...options, url };\n\n\t\ttry {\n\t\t\tconst context = await this.requestService.request(firstOptions, token);\n\t\t\tif (context.res.statusCode === 200) {\n\t\t\t\treturn context;\n\t\t\t}\n\t\t\tconst message = await asText(context);\n\t\t\tthrow new Error(`Expected 200, got back ${context.res.statusCode} instead.\\n\\n${message}`);\n\t\t} catch (err) {\n\t\t\tif (isPromiseCanceledError(err)) {\n\t\t\t\tthrow err;\n\t\t\t}\n\n\t\t\tconst message = getErrorMessage(err);\n\t\t\ttype GalleryServiceCDNFallbackClassification = {\n\t\t\t\turl: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t\tmessage: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t\t};\n\t\t\ttype GalleryServiceCDNFallbackEvent = {\n\t\t\t\turl: string;\n\t\t\t\tmessage: string;\n\t\t\t};\n\t\t\tthis.telemetryService.publicLog2<GalleryServiceCDNFallbackEvent, GalleryServiceCDNFallbackClassification>('galleryService:cdnFallback', { url, message });\n\n\t\t\tconst fallbackOptions = { ...options, url: fallbackUrl };\n\t\t\treturn this.requestService.request(fallbackOptions, token);\n\t\t}\n\t}\n\n\tprivate async getEngine(rawExtensionVersion: IRawGalleryExtensionVersion): Promise<string> {\n\t\tlet engine = getEngine(rawExtensionVersion);\n\t\tif (!engine) {\n\t\t\tconst manifest = await this.getManifestFromRawExtensionVersion(rawExtensionVersion, CancellationToken.None);\n\t\t\tif (!manifest) {\n\t\t\t\tthrow new Error('Manifest was not found');\n\t\t\t}\n\t\t\tengine = manifest.engines.vscode;\n\t\t}\n\t\treturn engine;\n\t}\n\n\tasync getExtensionsControlManifest(): Promise<IExtensionsControlManifest> {\n\t\tif (!this.isEnabled()) {\n\t\t\tthrow new Error('No extension gallery service configured.');\n\t\t}\n\n\t\tif (!this.extensionsControlUrl) {\n\t\t\treturn { malicious: [] };\n\t\t}\n\n\t\tconst context = await this.requestService.request({ type: 'GET', url: this.extensionsControlUrl }, CancellationToken.None);\n\t\tif (context.res.statusCode !== 200) {\n\t\t\tthrow new Error('Could not get extensions report.');\n\t\t}\n\n\t\tconst result = await asJson<IRawExtensionsControlManifest>(context);\n\t\tconst malicious: IExtensionIdentifier[] = [];\n\t\tconst unsupportedPreReleaseExtensions: IStringDictionary<{ id: string, displayName: string }> = {};\n\n\t\tif (result) {\n\t\t\tfor (const id of result.malicious) {\n\t\t\t\tmalicious.push({ id });\n\t\t\t}\n\t\t\tif (result.unsupported) {\n\t\t\t\tfor (const extensionId of Object.keys(result.unsupported)) {\n\t\t\t\t\tconst value = result.unsupported[extensionId];\n\t\t\t\t\tif (!isBoolean(value)) {\n\t\t\t\t\t\tunsupportedPreReleaseExtensions[extensionId.toLowerCase()] = value.preReleaseExtension;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { malicious, unsupportedPreReleaseExtensions };\n\t}\n}\n\nexport class ExtensionGalleryService extends AbstractExtensionGalleryService {\n\n\tconstructor(\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IRequestService requestService: IRequestService,\n\t\t@ILogService logService: ILogService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IProductService productService: IProductService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t) {\n\t\tsuper(storageService, requestService, logService, environmentService, telemetryService, fileService, productService, configurationService);\n\t}\n}\n\nexport class ExtensionGalleryServiceWithNoStorageService extends AbstractExtensionGalleryService {\n\n\tconstructor(\n\t\t@IRequestService requestService: IRequestService,\n\t\t@ILogService logService: ILogService,\n\t\t@IEnvironmentService environmentService: IEnvironmentService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IProductService productService: IProductService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t) {\n\t\tsuper(undefined, requestService, logService, environmentService, telemetryService, fileService, productService, configurationService);\n\t}\n}\n\nexport async function resolveMarketplaceHeaders(version: string, productService: IProductService, environmentService: IEnvironmentService, configurationService: IConfigurationService, fileService: IFileService, storageService: {\n\tget: (key: string, scope: StorageScope) => string | undefined,\n\tstore: (key: string, value: string, scope: StorageScope, target: StorageTarget) => void\n} | undefined): Promise<{ [key: string]: string; }> {\n\tconst headers: IHeaders = {\n\t\t'X-Market-Client-Id': `VSCode ${version}`,\n\t\t'User-Agent': `VSCode ${version}`\n\t};\n\tconst uuid = await getServiceMachineId(environmentService, fileService, storageService);\n\tif (supportsTelemetry(productService, environmentService) && getTelemetryLevel(configurationService) === TelemetryLevel.USAGE) {\n\t\theaders['X-Market-User-Id'] = uuid;\n\t}\n\treturn headers;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { cloneAndChange, mixin } from 'vs/base/common/objects';\nimport { isWeb } from 'vs/base/common/platform';\nimport { escapeRegExpCharacters } from 'vs/base/common/strings';\nimport { localize } from 'vs/nls';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationScope, Extensions, IConfigurationRegistry } from 'vs/platform/configuration/common/configurationRegistry';\nimport product from 'vs/platform/product/common/product';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { ClassifiedEvent, GDPRClassification, StrictPropertyCheck } from 'vs/platform/telemetry/common/gdprTypings';\nimport { ITelemetryData, ITelemetryInfo, ITelemetryService, TelemetryConfiguration, TelemetryLevel, TELEMETRY_OLD_SETTING_ID, TELEMETRY_SECTION_ID, TELEMETRY_SETTING_ID } from 'vs/platform/telemetry/common/telemetry';\nimport { getTelemetryLevel, ITelemetryAppender } from 'vs/platform/telemetry/common/telemetryUtils';\n\nexport interface ITelemetryServiceConfig {\n\tappenders: ITelemetryAppender[];\n\tsendErrorTelemetry?: boolean;\n\tcommonProperties?: Promise<{ [name: string]: any }>;\n\tpiiPaths?: string[];\n}\n\nexport class TelemetryService implements ITelemetryService {\n\n\tstatic readonly IDLE_START_EVENT_NAME = 'UserIdleStart';\n\tstatic readonly IDLE_STOP_EVENT_NAME = 'UserIdleStop';\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _appenders: ITelemetryAppender[];\n\tprivate _commonProperties: Promise<{ [name: string]: any; }>;\n\tprivate _experimentProperties: { [name: string]: string } = {};\n\tprivate _piiPaths: string[];\n\tprivate _telemetryLevel: TelemetryLevel;\n\tpublic readonly sendErrorTelemetry: boolean;\n\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate _cleanupPatterns: RegExp[] = [];\n\n\tconstructor(\n\t\tconfig: ITelemetryServiceConfig,\n\t\t@IConfigurationService private _configurationService: IConfigurationService\n\t) {\n\t\tthis._appenders = config.appenders;\n\t\tthis._commonProperties = config.commonProperties || Promise.resolve({});\n\t\tthis._piiPaths = config.piiPaths || [];\n\t\tthis._telemetryLevel = TelemetryLevel.USAGE;\n\t\tthis.sendErrorTelemetry = !!config.sendErrorTelemetry;\n\n\t\t// static cleanup pattern for: `file:///DANGEROUS/PATH/resources/app/Useful/Information`\n\t\tthis._cleanupPatterns = [/file:\\/\\/\\/.*?\\/resources\\/app\\//gi];\n\n\t\tfor (let piiPath of this._piiPaths) {\n\t\t\tthis._cleanupPatterns.push(new RegExp(escapeRegExpCharacters(piiPath), 'gi'));\n\t\t}\n\n\n\t\tthis._updateTelemetryLevel();\n\t\tthis._configurationService.onDidChangeConfiguration(this._updateTelemetryLevel, this, this._disposables);\n\t\ttype OptInClassification = {\n\t\t\toptIn: { classification: 'SystemMetaData', purpose: 'BusinessInsight', isMeasurement: true };\n\t\t};\n\t\ttype OptInEvent = {\n\t\t\toptIn: boolean;\n\t\t};\n\t\tthis.publicLog2<OptInEvent, OptInClassification>('optInStatus', { optIn: this._telemetryLevel === TelemetryLevel.USAGE });\n\n\t\tthis._commonProperties.then(values => {\n\t\t\tconst isHashedId = /^[a-f0-9]+$/i.test(values['common.machineId']);\n\n\t\t\ttype MachineIdFallbackClassification = {\n\t\t\t\tusingFallbackGuid: { classification: 'SystemMetaData', purpose: 'BusinessInsight', isMeasurement: true };\n\t\t\t};\n\t\t\tthis.publicLog2<{ usingFallbackGuid: boolean }, MachineIdFallbackClassification>('machineIdFallback', { usingFallbackGuid: !isHashedId });\n\t\t});\n\t}\n\n\tsetExperimentProperty(name: string, value: string): void {\n\t\tthis._experimentProperties[name] = value;\n\t}\n\n\tprivate _updateTelemetryLevel(): void {\n\t\tthis._telemetryLevel = getTelemetryLevel(this._configurationService);\n\t}\n\n\tget telemetryLevel(): TelemetryLevel {\n\t\treturn this._telemetryLevel;\n\t}\n\n\tasync getTelemetryInfo(): Promise<ITelemetryInfo> {\n\t\tconst values = await this._commonProperties;\n\n\t\t// well known properties\n\t\tlet sessionId = values['sessionID'];\n\t\tlet machineId = values['common.machineId'];\n\t\tlet firstSessionDate = values['common.firstSessionDate'];\n\t\tlet msftInternal = values['common.msftInternal'];\n\n\t\treturn { sessionId, machineId, firstSessionDate, msftInternal };\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t}\n\n\tprivate _log(eventName: string, eventLevel: TelemetryLevel, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<any> {\n\t\t// don't send events when the user is optout\n\t\tif (this.telemetryLevel < eventLevel) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\treturn this._commonProperties.then(values => {\n\n\t\t\t// (first) add common properties\n\t\t\tdata = mixin(data, values);\n\n\t\t\t// (next) add experiment properties\n\t\t\tdata = mixin(data, this._experimentProperties);\n\n\t\t\t// (last) remove all PII from data\n\t\t\tdata = cloneAndChange(data, value => {\n\t\t\t\tif (typeof value === 'string') {\n\t\t\t\t\treturn this._cleanupInfo(value, anonymizeFilePaths);\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t});\n\n\t\t\t// Log to the appenders of sufficient level\n\t\t\tthis._appenders.forEach(a => a.log(eventName, data));\n\n\t\t}, err => {\n\t\t\t// unsure what to do now...\n\t\t\tconsole.error(err);\n\t\t});\n\t}\n\n\tpublicLog(eventName: string, data?: ITelemetryData, anonymizeFilePaths?: boolean): Promise<any> {\n\t\treturn this._log(eventName, TelemetryLevel.USAGE, data, anonymizeFilePaths);\n\t}\n\n\tpublicLog2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>, anonymizeFilePaths?: boolean): Promise<any> {\n\t\treturn this.publicLog(eventName, data as ITelemetryData, anonymizeFilePaths);\n\t}\n\n\tpublicLogError(errorEventName: string, data?: ITelemetryData): Promise<any> {\n\t\tif (!this.sendErrorTelemetry) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\t// Send error event and anonymize paths\n\t\treturn this._log(errorEventName, TelemetryLevel.ERROR, data, true);\n\t}\n\n\tpublicLogError2<E extends ClassifiedEvent<T> = never, T extends GDPRClassification<T> = never>(eventName: string, data?: StrictPropertyCheck<T, E>): Promise<any> {\n\t\treturn this.publicLogError(eventName, data as ITelemetryData);\n\t}\n\n\tprivate _anonymizeFilePaths(stack: string): string {\n\t\tlet updatedStack = stack;\n\n\t\tconst cleanUpIndexes: [number, number][] = [];\n\t\tfor (let regexp of this._cleanupPatterns) {\n\t\t\twhile (true) {\n\t\t\t\tconst result = regexp.exec(stack);\n\t\t\t\tif (!result) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tcleanUpIndexes.push([result.index, regexp.lastIndex]);\n\t\t\t}\n\t\t}\n\n\t\tconst nodeModulesRegex = /^[\\\\\\/]?(node_modules|node_modules\\.asar)[\\\\\\/]/;\n\t\tconst fileRegex = /(file:\\/\\/)?([a-zA-Z]:(\\\\\\\\|\\\\|\\/)|(\\\\\\\\|\\\\|\\/))?([\\w-\\._]+(\\\\\\\\|\\\\|\\/))+[\\w-\\._]*/g;\n\t\tlet lastIndex = 0;\n\t\tupdatedStack = '';\n\n\t\twhile (true) {\n\t\t\tconst result = fileRegex.exec(stack);\n\t\t\tif (!result) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t// Anoynimize user file paths that do not need to be retained or cleaned up.\n\t\t\tif (!nodeModulesRegex.test(result[0]) && cleanUpIndexes.every(([x, y]) => result.index < x || result.index >= y)) {\n\t\t\t\tupdatedStack += stack.substring(lastIndex, result.index) + '<REDACTED: user-file-path>';\n\t\t\t\tlastIndex = fileRegex.lastIndex;\n\t\t\t}\n\t\t}\n\t\tif (lastIndex < stack.length) {\n\t\t\tupdatedStack += stack.substr(lastIndex);\n\t\t}\n\n\t\treturn updatedStack;\n\t}\n\n\tprivate _removePropertiesWithPossibleUserInfo(property: string): string {\n\t\t// If for some reason it is undefined we skip it (this shouldn't be possible);\n\t\tif (!property) {\n\t\t\treturn property;\n\t\t}\n\n\t\tconst value = property.toLowerCase();\n\n\t\t// Regex which matches @*.site\n\t\tconst emailRegex = /@[a-zA-Z0-9-.]+/;\n\t\tconst secretRegex = /(key|token|sig|signature|password|passwd|pwd)[=\"':\\s]/;\n\n\t\t// Check for common user data in the telemetry events\n\t\tif (secretRegex.test(value)) {\n\t\t\treturn '<REDACTED: secret>';\n\t\t} else if (emailRegex.test(value)) {\n\t\t\treturn '<REDACTED: email>';\n\t\t}\n\n\t\treturn property;\n\t}\n\n\n\tprivate _cleanupInfo(property: string, anonymizeFilePaths?: boolean): string {\n\t\tlet updatedProperty = property;\n\n\t\t// anonymize file paths\n\t\tif (anonymizeFilePaths) {\n\t\t\tupdatedProperty = this._anonymizeFilePaths(updatedProperty);\n\t\t}\n\n\t\t// sanitize with configured cleanup patterns\n\t\tfor (let regexp of this._cleanupPatterns) {\n\t\t\tupdatedProperty = updatedProperty.replace(regexp, '');\n\t\t}\n\n\t\t// remove possible user info\n\t\tupdatedProperty = this._removePropertiesWithPossibleUserInfo(updatedProperty);\n\n\t\treturn updatedProperty;\n\t}\n}\n\nfunction getTelemetryLevelSettingDescription(): string {\n\tconst telemetryText = localize('telemetry.telemetryLevelMd', \"Controls all core and first party extension telemetry. This helps us to better understand how {0} is performing, where improvements need to be made, and how features are being used.\", product.nameLong);\n\tconst externalLinksStatement = !product.privacyStatementUrl ?\n\t\tlocalize(\"telemetry.docsStatement\", \"Read more about the [data we collect]({0}).\", 'https://aka.ms/vscode-telemetry') :\n\t\tlocalize(\"telemetry.docsAndPrivacyStatement\", \"Read more about the [data we collect]({0}) and our [privacy statement]({1}).\", 'https://aka.ms/vscode-telemetry', product.privacyStatementUrl);\n\tconst restartString = !isWeb ? localize('telemetry.restart', 'A full restart of the application is necessary for crash reporting changes to take effect.') : '';\n\n\tconst crashReportsHeader = localize('telemetry.crashReports', \"Crash Reports\");\n\tconst errorsHeader = localize('telemetry.errors', \"Error Telemetry\");\n\tconst usageHeader = localize('telemetry.usage', \"Usage Data\");\n\n\tconst telemetryTableDescription = localize('telemetry.telemetryLevel.tableDescription', \"The following table outlines the data sent with each setting:\");\n\tconst telemetryTable = `\n|       | ${crashReportsHeader} | ${errorsHeader} | ${usageHeader} |\n|:------|:---------------------:|:---------------:|:--------------:|\n| all   |            ✓          |        ✓        |        ✓       |\n| error |            ✓          |        ✓        |        -       |\n| crash |            ✓          |        -        |        -       |\n| off   |            -          |        -        |        -       |\n`;\n\n\tconst deprecatedSettingNote = localize('telemetry.telemetryLevel.deprecated', \"****Note:*** If this setting is 'off', no telemetry will be sent regardless of other telemetry settings. If this setting is set to anything except 'off' and telemetry is disabled with deprecated settings, no telemetry will be sent.*\");\n\tconst telemetryDescription = `\n${telemetryText} ${externalLinksStatement} ${restartString}\n\n&nbsp;\n\n${telemetryTableDescription}\n${telemetryTable}\n\n&nbsp;\n\n${deprecatedSettingNote}\n`;\n\n\treturn telemetryDescription;\n}\n\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration).registerConfiguration({\n\t'id': TELEMETRY_SECTION_ID,\n\t'order': 110,\n\t'type': 'object',\n\t'title': localize('telemetryConfigurationTitle', \"Telemetry\"),\n\t'properties': {\n\t\t[TELEMETRY_SETTING_ID]: {\n\t\t\t'type': 'string',\n\t\t\t'enum': [TelemetryConfiguration.ON, TelemetryConfiguration.ERROR, TelemetryConfiguration.CRASH, TelemetryConfiguration.OFF],\n\t\t\t'enumDescriptions': [\n\t\t\t\tlocalize('telemetry.telemetryLevel.default', \"Sends usage data, errors, and crash reports.\"),\n\t\t\t\tlocalize('telemetry.telemetryLevel.error', \"Sends general error telemetry and crash reports.\"),\n\t\t\t\tlocalize('telemetry.telemetryLevel.crash', \"Sends OS level crash reports.\"),\n\t\t\t\tlocalize('telemetry.telemetryLevel.off', \"Disables all product telemetry.\")\n\t\t\t],\n\t\t\t'markdownDescription': getTelemetryLevelSettingDescription(),\n\t\t\t'default': TelemetryConfiguration.ON,\n\t\t\t'restricted': true,\n\t\t\t'scope': ConfigurationScope.APPLICATION,\n\t\t\t'tags': ['usesOnlineServices', 'telemetry']\n\t\t}\n\t}\n});\n\n// Deprecated telemetry setting\nRegistry.as<IConfigurationRegistry>(Extensions.Configuration).registerConfiguration({\n\t'id': TELEMETRY_SECTION_ID,\n\t'order': 110,\n\t'type': 'object',\n\t'title': localize('telemetryConfigurationTitle', \"Telemetry\"),\n\t'properties': {\n\t\t[TELEMETRY_OLD_SETTING_ID]: {\n\t\t\t'type': 'boolean',\n\t\t\t'markdownDescription':\n\t\t\t\t!product.privacyStatementUrl ?\n\t\t\t\t\tlocalize('telemetry.enableTelemetry', \"Enable diagnostic data to be collected. This helps us to better understand how {0} is performing and where improvements need to be made.\", product.nameLong) :\n\t\t\t\t\tlocalize('telemetry.enableTelemetryMd', \"Enable diagnostic data to be collected. This helps us to better understand how {0} is performing and where improvements need to be made. [Read more]({1}) about what we collect and our privacy statement.\", product.nameLong, product.privacyStatementUrl),\n\t\t\t'default': true,\n\t\t\t'restricted': true,\n\t\t\t'markdownDeprecationMessage': localize('enableTelemetryDeprecated', \"If this setting is false, no telemetry will be sent regardless of the new setting's value. Deprecated in favor of the {0} setting.\", `\\`#${TELEMETRY_SETTING_ID}#\\``),\n\t\t\t'scope': ConfigurationScope.APPLICATION,\n\t\t\t'tags': ['usesOnlineServices', 'telemetry']\n\t\t}\n\t}\n});\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n/**\n * Color scheme used by the OS and by color themes.\n */\nexport enum ColorScheme {\n\tDARK = 'dark',\n\tLIGHT = 'light',\n\tHIGH_CONTRAST = 'hc'\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Codicon, CSSIcon } from 'vs/base/common/codicons';\nimport { Color } from 'vs/base/common/color';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport * as platform from 'vs/platform/registry/common/platform';\nimport { ColorIdentifier } from 'vs/platform/theme/common/colorRegistry';\nimport { ColorScheme } from 'vs/platform/theme/common/theme';\n\nexport const IThemeService = createDecorator<IThemeService>('themeService');\n\nexport interface ThemeColor {\n\tid: string;\n}\n\nexport namespace ThemeColor {\n\texport function isThemeColor(obj: any): obj is ThemeColor {\n\t\treturn obj && typeof obj === 'object' && typeof (<ThemeColor>obj).id === 'string';\n\t}\n}\n\nexport function themeColorFromId(id: ColorIdentifier) {\n\treturn { id };\n}\n\n// theme icon\nexport interface ThemeIcon {\n\treadonly id: string;\n\treadonly color?: ThemeColor;\n}\n\nexport namespace ThemeIcon {\n\texport function isThemeIcon(obj: any): obj is ThemeIcon {\n\t\treturn obj && typeof obj === 'object' && typeof (<ThemeIcon>obj).id === 'string' && (typeof (<ThemeIcon>obj).color === 'undefined' || ThemeColor.isThemeColor((<ThemeIcon>obj).color));\n\t}\n\n\tconst _regexFromString = new RegExp(`^\\\\$\\\\((${CSSIcon.iconNameExpression}(?:${CSSIcon.iconModifierExpression})?)\\\\)$`);\n\n\texport function fromString(str: string): ThemeIcon | undefined {\n\t\tconst match = _regexFromString.exec(str);\n\t\tif (!match) {\n\t\t\treturn undefined;\n\t\t}\n\t\tlet [, name] = match;\n\t\treturn { id: name };\n\t}\n\n\texport function modify(icon: ThemeIcon, modifier: 'disabled' | 'spin' | undefined): ThemeIcon {\n\t\tlet id = icon.id;\n\t\tconst tildeIndex = id.lastIndexOf('~');\n\t\tif (tildeIndex !== -1) {\n\t\t\tid = id.substring(0, tildeIndex);\n\t\t}\n\t\tif (modifier) {\n\t\t\tid = `${id}~${modifier}`;\n\t\t}\n\t\treturn { id };\n\t}\n\n\texport function getModifier(icon: ThemeIcon): string | undefined {\n\t\tconst tildeIndex = icon.id.lastIndexOf('~');\n\t\tif (tildeIndex !== -1) {\n\t\t\treturn icon.id.substring(tildeIndex + 1);\n\t\t}\n\t\treturn undefined;\n\t}\n\n\texport function isEqual(ti1: ThemeIcon, ti2: ThemeIcon): boolean {\n\t\treturn ti1.id === ti2.id && ti1.color?.id === ti2.color?.id;\n\t}\n\n\texport function asThemeIcon(codicon: Codicon, color?: string): ThemeIcon {\n\t\treturn { id: codicon.id, color: color ? themeColorFromId(color) : undefined };\n\t}\n\n\texport const asClassNameArray: (icon: ThemeIcon) => string[] = CSSIcon.asClassNameArray;\n\texport const asClassName: (icon: ThemeIcon) => string = CSSIcon.asClassName;\n\texport const asCSSSelector: (icon: ThemeIcon) => string = CSSIcon.asCSSSelector;\n}\n\nexport const FileThemeIcon = Codicon.file;\nexport const FolderThemeIcon = Codicon.folder;\n\nexport function getThemeTypeSelector(type: ColorScheme): string {\n\tswitch (type) {\n\t\tcase ColorScheme.DARK: return 'vs-dark';\n\t\tcase ColorScheme.HIGH_CONTRAST: return 'hc-black';\n\t\tdefault: return 'vs';\n\t}\n}\n\nexport interface ITokenStyle {\n\treadonly foreground?: number;\n\treadonly bold?: boolean;\n\treadonly underline?: boolean;\n\treadonly italic?: boolean;\n}\n\nexport interface IColorTheme {\n\n\treadonly type: ColorScheme;\n\n\treadonly label: string;\n\n\t/**\n\t * Resolves the color of the given color identifier. If the theme does not\n\t * specify the color, the default color is returned unless <code>useDefault</code> is set to false.\n\t * @param color the id of the color\n\t * @param useDefault specifies if the default color should be used. If not set, the default is used.\n\t */\n\tgetColor(color: ColorIdentifier, useDefault?: boolean): Color | undefined;\n\n\t/**\n\t * Returns whether the theme defines a value for the color. If not, that means the\n\t * default color will be used.\n\t */\n\tdefines(color: ColorIdentifier): boolean;\n\n\t/**\n\t * Returns the token style for a given classification. The result uses the <code>MetadataConsts</code> format\n\t */\n\tgetTokenStyleMetadata(type: string, modifiers: string[], modelLanguage: string): ITokenStyle | undefined;\n\n\t/**\n\t * List of all colors used with tokens. <code>getTokenStyleMetadata</code> references the colors by index into this list.\n\t */\n\treadonly tokenColorMap: string[];\n\n\t/**\n\t * Defines whether semantic highlighting should be enabled for the theme.\n\t */\n\treadonly semanticHighlighting: boolean;\n}\n\nexport interface IFileIconTheme {\n\treadonly hasFileIcons: boolean;\n\treadonly hasFolderIcons: boolean;\n\treadonly hidesExplorerArrows: boolean;\n}\n\nexport interface ICssStyleCollector {\n\taddRule(rule: string): void;\n}\n\nexport interface IThemingParticipant {\n\t(theme: IColorTheme, collector: ICssStyleCollector, environment: IEnvironmentService): void;\n}\n\nexport interface IThemeService {\n\treadonly _serviceBrand: undefined;\n\n\tgetColorTheme(): IColorTheme;\n\n\treadonly onDidColorThemeChange: Event<IColorTheme>;\n\n\tgetFileIconTheme(): IFileIconTheme;\n\n\treadonly onDidFileIconThemeChange: Event<IFileIconTheme>;\n\n}\n\n// static theming participant\nexport const Extensions = {\n\tThemingContribution: 'base.contributions.theming'\n};\n\nexport interface IThemingRegistry {\n\n\t/**\n\t * Register a theming participant that is invoked on every theme change.\n\t */\n\tonColorThemeChange(participant: IThemingParticipant): IDisposable;\n\n\tgetThemingParticipants(): IThemingParticipant[];\n\n\treadonly onThemingParticipantAdded: Event<IThemingParticipant>;\n}\n\nclass ThemingRegistry implements IThemingRegistry {\n\tprivate themingParticipants: IThemingParticipant[] = [];\n\tprivate readonly onThemingParticipantAddedEmitter: Emitter<IThemingParticipant>;\n\n\tconstructor() {\n\t\tthis.themingParticipants = [];\n\t\tthis.onThemingParticipantAddedEmitter = new Emitter<IThemingParticipant>();\n\t}\n\n\tpublic onColorThemeChange(participant: IThemingParticipant): IDisposable {\n\t\tthis.themingParticipants.push(participant);\n\t\tthis.onThemingParticipantAddedEmitter.fire(participant);\n\t\treturn toDisposable(() => {\n\t\t\tconst idx = this.themingParticipants.indexOf(participant);\n\t\t\tthis.themingParticipants.splice(idx, 1);\n\t\t});\n\t}\n\n\tpublic get onThemingParticipantAdded(): Event<IThemingParticipant> {\n\t\treturn this.onThemingParticipantAddedEmitter.event;\n\t}\n\n\tpublic getThemingParticipants(): IThemingParticipant[] {\n\t\treturn this.themingParticipants;\n\t}\n}\n\nlet themingRegistry = new ThemingRegistry();\nplatform.Registry.add(Extensions.ThemingContribution, themingRegistry);\n\nexport function registerThemingParticipant(participant: IThemingParticipant): IDisposable {\n\treturn themingRegistry.onColorThemeChange(participant);\n}\n\n/**\n * Utility base class for all themable components.\n */\nexport class Themable extends Disposable {\n\tprotected theme: IColorTheme;\n\n\tconstructor(\n\t\tprotected themeService: IThemeService\n\t) {\n\t\tsuper();\n\n\t\tthis.theme = themeService.getColorTheme();\n\n\t\t// Hook up to theme changes\n\t\tthis._register(this.themeService.onDidColorThemeChange(theme => this.onThemeChange(theme)));\n\t}\n\n\tprotected onThemeChange(theme: IColorTheme): void {\n\t\tthis.theme = theme;\n\n\t\tthis.updateStyles();\n\t}\n\n\tprotected updateStyles(): void {\n\t\t// Subclasses to override\n\t}\n\n\tprotected getColor(id: string, modify?: (color: Color, theme: IColorTheme) => Color): string | null {\n\t\tlet color = this.theme.getColor(id);\n\n\t\tif (color && modify) {\n\t\t\tcolor = modify(color, this.theme);\n\t\t}\n\n\t\treturn color ? color.toString() : null;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { BrowserWindow, nativeTheme } from 'electron';\nimport { isMacintosh, isWindows } from 'vs/base/common/platform';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IStateMainService } from 'vs/platform/state/electron-main/state';\nimport { IPartsSplash } from 'vs/platform/windows/common/windows';\n\nconst DEFAULT_BG_LIGHT = '#FFFFFF';\nconst DEFAULT_BG_DARK = '#1E1E1E';\nconst DEFAULT_BG_HC_BLACK = '#000000';\n\nconst THEME_STORAGE_KEY = 'theme';\nconst THEME_BG_STORAGE_KEY = 'themeBackground';\nconst THEME_WINDOW_SPLASH = 'windowSplash';\n\nexport const IThemeMainService = createDecorator<IThemeMainService>('themeMainService');\n\nexport interface IThemeMainService {\n\n\treadonly _serviceBrand: undefined;\n\n\tgetBackgroundColor(): string;\n\n\tsaveWindowSplash(windowId: number | undefined, splash: IPartsSplash): void;\n\tgetWindowSplash(): IPartsSplash | undefined;\n}\n\nexport class ThemeMainService implements IThemeMainService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(@IStateMainService private stateMainService: IStateMainService) { }\n\n\tgetBackgroundColor(): string {\n\t\tif ((isWindows || isMacintosh) && nativeTheme.shouldUseInvertedColorScheme) {\n\t\t\treturn DEFAULT_BG_HC_BLACK;\n\t\t}\n\n\t\tlet background = this.stateMainService.getItem<string | null>(THEME_BG_STORAGE_KEY, null);\n\t\tif (!background) {\n\t\t\tlet baseTheme: string;\n\t\t\tif ((isWindows || isMacintosh) && nativeTheme.shouldUseInvertedColorScheme) {\n\t\t\t\tbaseTheme = 'hc-black';\n\t\t\t} else {\n\t\t\t\tbaseTheme = this.stateMainService.getItem<string>(THEME_STORAGE_KEY, 'vs-dark').split(' ')[0];\n\t\t\t}\n\n\t\t\tbackground = (baseTheme === 'hc-black') ? DEFAULT_BG_HC_BLACK : (baseTheme === 'vs' ? DEFAULT_BG_LIGHT : DEFAULT_BG_DARK);\n\t\t}\n\n\t\tif (isMacintosh && background.toUpperCase() === DEFAULT_BG_DARK) {\n\t\t\tbackground = '#171717'; // https://github.com/electron/electron/issues/5150\n\t\t}\n\n\t\treturn background;\n\t}\n\n\tsaveWindowSplash(windowId: number | undefined, splash: IPartsSplash): void {\n\n\t\t// Update in storage\n\t\tthis.stateMainService.setItems([\n\t\t\t{ key: THEME_STORAGE_KEY, data: splash.baseTheme },\n\t\t\t{ key: THEME_BG_STORAGE_KEY, data: splash.colorInfo.background },\n\t\t\t{ key: THEME_WINDOW_SPLASH, data: splash }\n\t\t]);\n\n\t\t// Update in opened windows\n\t\tif (typeof windowId === 'number') {\n\t\t\tthis.updateBackgroundColor(windowId, splash);\n\t\t}\n\t}\n\n\tprivate updateBackgroundColor(windowId: number, splash: IPartsSplash): void {\n\t\tfor (const window of BrowserWindow.getAllWindows()) {\n\t\t\tif (window.id === windowId) {\n\t\t\t\twindow.setBackgroundColor(splash.colorInfo.background);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tgetWindowSplash(): IPartsSplash | undefined {\n\t\treturn this.stateMainService.getItem<IPartsSplash>(THEME_WINDOW_SPLASH);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport interface IUpdate {\n\tversion: string;\n\tproductVersion: string;\n\tsupportsFastUpdate?: boolean;\n\turl?: string;\n\thash?: string;\n}\n\n/**\n * Updates are run as a state machine:\n *\n *      Uninitialized\n *           ↓\n *          Idle\n *          ↓  ↑\n *   Checking for Updates  →  Available for Download\n *         ↓\n *     Downloading  →   Ready\n *         ↓               ↑\n *     Downloaded   →  Updating\n *\n * Available: There is an update available for download (linux).\n * Ready: Code will be updated as soon as it restarts (win32, darwin).\n * Downloaded: There is an update ready to be installed in the background (win32).\n */\n\nexport const enum StateType {\n\tUninitialized = 'uninitialized',\n\tIdle = 'idle',\n\tCheckingForUpdates = 'checking for updates',\n\tAvailableForDownload = 'available for download',\n\tDownloading = 'downloading',\n\tDownloaded = 'downloaded',\n\tUpdating = 'updating',\n\tReady = 'ready',\n}\n\nexport const enum UpdateType {\n\tSetup,\n\tArchive,\n\tSnap\n}\n\nexport type Uninitialized = { type: StateType.Uninitialized };\nexport type Idle = { type: StateType.Idle, updateType: UpdateType, error?: string };\nexport type CheckingForUpdates = { type: StateType.CheckingForUpdates, explicit: boolean };\nexport type AvailableForDownload = { type: StateType.AvailableForDownload, update: IUpdate };\nexport type Downloading = { type: StateType.Downloading, update: IUpdate };\nexport type Downloaded = { type: StateType.Downloaded, update: IUpdate };\nexport type Updating = { type: StateType.Updating, update: IUpdate };\nexport type Ready = { type: StateType.Ready, update: IUpdate };\n\nexport type State = Uninitialized | Idle | CheckingForUpdates | AvailableForDownload | Downloading | Downloaded | Updating | Ready;\n\nexport const State = {\n\tUninitialized: { type: StateType.Uninitialized } as Uninitialized,\n\tIdle: (updateType: UpdateType, error?: string) => ({ type: StateType.Idle, updateType, error }) as Idle,\n\tCheckingForUpdates: (explicit: boolean) => ({ type: StateType.CheckingForUpdates, explicit } as CheckingForUpdates),\n\tAvailableForDownload: (update: IUpdate) => ({ type: StateType.AvailableForDownload, update } as AvailableForDownload),\n\tDownloading: (update: IUpdate) => ({ type: StateType.Downloading, update } as Downloading),\n\tDownloaded: (update: IUpdate) => ({ type: StateType.Downloaded, update } as Downloaded),\n\tUpdating: (update: IUpdate) => ({ type: StateType.Updating, update } as Updating),\n\tReady: (update: IUpdate) => ({ type: StateType.Ready, update } as Ready),\n};\n\nexport interface IAutoUpdater extends Event.NodeEventEmitter {\n\tsetFeedURL(url: string): void;\n\tcheckForUpdates(): void;\n\tapplyUpdate?(): Promise<void>;\n\tquitAndInstall(): void;\n}\n\nexport const IUpdateService = createDecorator<IUpdateService>('updateService');\n\nexport interface IUpdateService {\n\treadonly _serviceBrand: undefined;\n\n\treadonly onStateChange: Event<State>;\n\treadonly state: State;\n\n\tcheckForUpdates(explicit: boolean): Promise<void>;\n\tdownloadUpdate(): Promise<void>;\n\tapplyUpdate(): Promise<void>;\n\tquitAndInstall(): Promise<void>;\n\n\tisLatestVersion(): Promise<boolean | undefined>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { isWeb, isWindows } from 'vs/base/common/platform';\nimport { localize } from 'vs/nls';\nimport { ConfigurationScope, Extensions as ConfigurationExtensions, IConfigurationRegistry } from 'vs/platform/configuration/common/configurationRegistry';\nimport { Registry } from 'vs/platform/registry/common/platform';\n\nconst configurationRegistry = Registry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration);\nconfigurationRegistry.registerConfiguration({\n\tid: 'update',\n\torder: 15,\n\ttitle: localize('updateConfigurationTitle', \"Update\"),\n\ttype: 'object',\n\tproperties: {\n\t\t'update.mode': {\n\t\t\ttype: 'string',\n\t\t\tenum: ['none', 'manual', 'start', 'default'],\n\t\t\tdefault: 'default',\n\t\t\tscope: ConfigurationScope.APPLICATION,\n\t\t\tdescription: localize('updateMode', \"Configure whether you receive automatic updates. Requires a restart after change. The updates are fetched from a Microsoft online service.\"),\n\t\t\ttags: ['usesOnlineServices'],\n\t\t\tenumDescriptions: [\n\t\t\t\tlocalize('none', \"Disable updates.\"),\n\t\t\t\tlocalize('manual', \"Disable automatic background update checks. Updates will be available if you manually check for updates.\"),\n\t\t\t\tlocalize('start', \"Check for updates only on startup. Disable automatic background update checks.\"),\n\t\t\t\tlocalize('default', \"Enable automatic update checks. Code will check for updates automatically and periodically.\")\n\t\t\t]\n\t\t},\n\t\t'update.channel': {\n\t\t\ttype: 'string',\n\t\t\tdefault: 'default',\n\t\t\tscope: ConfigurationScope.APPLICATION,\n\t\t\tdescription: localize('updateMode', \"Configure whether you receive automatic updates. Requires a restart after change. The updates are fetched from a Microsoft online service.\"),\n\t\t\tdeprecationMessage: localize('deprecated', \"This setting is deprecated, please use '{0}' instead.\", 'update.mode')\n\t\t},\n\t\t'update.enableWindowsBackgroundUpdates': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.APPLICATION,\n\t\t\ttitle: localize('enableWindowsBackgroundUpdatesTitle', \"Enable Background Updates on Windows\"),\n\t\t\tdescription: localize('enableWindowsBackgroundUpdates', \"Enable to download and install new VS Code versions in the background on Windows.\"),\n\t\t\tincluded: isWindows && !isWeb\n\t\t},\n\t\t'update.showReleaseNotes': {\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.APPLICATION,\n\t\t\tdescription: localize('showReleaseNotes', \"Show Release Notes after an update. The Release Notes are fetched from a Microsoft online service.\"),\n\t\t\ttags: ['usesOnlineServices']\n\t\t}\n\t}\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IUpdateService, State } from 'vs/platform/update/common/update';\n\nexport class UpdateChannel implements IServerChannel {\n\n\tconstructor(private service: IUpdateService) { }\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'onStateChange': return this.service.onStateChange;\n\t\t}\n\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'checkForUpdates': return this.service.checkForUpdates(arg);\n\t\t\tcase 'downloadUpdate': return this.service.downloadUpdate();\n\t\t\tcase 'applyUpdate': return this.service.applyUpdate();\n\t\t\tcase 'quitAndInstall': return this.service.quitAndInstall();\n\t\t\tcase '_getInitialState': return Promise.resolve(this.service.state);\n\t\t\tcase 'isLatestVersion': return this.service.isLatestVersion();\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n}\n\nexport class UpdateChannelClient implements IUpdateService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onStateChange = new Emitter<State>();\n\treadonly onStateChange: Event<State> = this._onStateChange.event;\n\n\tprivate _state: State = State.Uninitialized;\n\tget state(): State { return this._state; }\n\tset state(state: State) {\n\t\tthis._state = state;\n\t\tthis._onStateChange.fire(state);\n\t}\n\n\tconstructor(private readonly channel: IChannel) {\n\t\tthis.channel.listen<State>('onStateChange')(state => this.state = state);\n\t\tthis.channel.call<State>('_getInitialState').then(state => this.state = state);\n\t}\n\n\tcheckForUpdates(explicit: boolean): Promise<void> {\n\t\treturn this.channel.call('checkForUpdates', explicit);\n\t}\n\n\tdownloadUpdate(): Promise<void> {\n\t\treturn this.channel.call('downloadUpdate');\n\t}\n\n\tapplyUpdate(): Promise<void> {\n\t\treturn this.channel.call('applyUpdate');\n\t}\n\n\tquitAndInstall(): Promise<void> {\n\t\treturn this.channel.call('quitAndInstall');\n\t}\n\n\tisLatestVersion(): Promise<boolean> {\n\t\treturn this.channel.call('isLatestVersion');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IURLService = createDecorator<IURLService>('urlService');\n\nexport interface IOpenURLOptions {\n\n\t/**\n\t * If not provided or `false`, signals that the\n\t * URL to open did not originate from the product\n\t * but outside. As such, a confirmation dialog\n\t * might be shown to the user.\n\t */\n\ttrusted?: boolean;\n\n\toriginalUrl?: string;\n}\n\nexport interface IURLHandler {\n\thandleURL(uri: URI, options?: IOpenURLOptions): Promise<boolean>;\n}\n\nexport interface IURLService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Create a URL that can be called to trigger IURLhandlers.\n\t * The URL that gets passed to the IURLHandlers carries over\n\t * any of the provided IURLCreateOption values.\n\t */\n\tcreate(options?: Partial<UriComponents>): URI;\n\n\topen(url: URI, options?: IOpenURLOptions): Promise<boolean>;\n\n\tregisterHandler(handler: IURLHandler): IDisposable;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Event } from 'vs/base/common/event';\nimport { URI } from 'vs/base/common/uri';\nimport { Client, IChannel, IClientRouter, IConnectionHub, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { IOpenURLOptions, IURLHandler } from 'vs/platform/url/common/url';\n\nexport class URLHandlerChannel implements IServerChannel {\n\n\tconstructor(private handler: IURLHandler) { }\n\n\tlisten<T>(_: unknown, event: string): Event<T> {\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'handleURL': return this.handler.handleURL(URI.revive(arg[0]), arg[1]);\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n}\n\nexport class URLHandlerChannelClient implements IURLHandler {\n\n\tconstructor(private channel: IChannel) { }\n\n\thandleURL(uri: URI, options?: IOpenURLOptions): Promise<boolean> {\n\t\treturn this.channel.call('handleURL', [uri.toJSON(), options]);\n\t}\n}\n\nexport class URLHandlerRouter implements IClientRouter<string> {\n\n\tconstructor(private next: IClientRouter<string>) { }\n\n\tasync routeCall(hub: IConnectionHub<string>, command: string, arg?: any, cancellationToken?: CancellationToken): Promise<Client<string>> {\n\t\tif (command !== 'handleURL') {\n\t\t\tthrow new Error(`Call not found: ${command}`);\n\t\t}\n\n\t\tif (arg) {\n\t\t\tconst uri = URI.revive(arg);\n\n\t\t\tif (uri && uri.query) {\n\t\t\t\tconst match = /\\bwindowId=(\\d+)/.exec(uri.query);\n\n\t\t\t\tif (match) {\n\t\t\t\t\tconst windowId = match[1];\n\t\t\t\t\tconst regex = new RegExp(`window:${windowId}`);\n\t\t\t\t\tconst connection = hub.connections.find(c => regex.test(c.ctx));\n\n\t\t\t\t\tif (connection) {\n\t\t\t\t\t\treturn connection;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.next.routeCall(hub, command, arg, cancellationToken);\n\t}\n\n\trouteEvent(_: IConnectionHub<string>, event: string): Promise<Client<string>> {\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { first } from 'vs/base/common/async';\nimport { Disposable, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IOpenURLOptions, IURLHandler, IURLService } from 'vs/platform/url/common/url';\n\nexport abstract class AbstractURLService extends Disposable implements IURLService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate handlers = new Set<IURLHandler>();\n\n\tabstract create(options?: Partial<UriComponents>): URI;\n\n\topen(uri: URI, options?: IOpenURLOptions): Promise<boolean> {\n\t\tconst handlers = [...this.handlers.values()];\n\t\treturn first(handlers.map(h => () => h.handleURL(uri, options)), undefined, false).then(val => val || false);\n\t}\n\n\tregisterHandler(handler: IURLHandler): IDisposable {\n\t\tthis.handlers.add(handler);\n\t\treturn toDisposable(() => this.handlers.delete(handler));\n\t}\n}\n\nexport class NativeURLService extends AbstractURLService {\n\n\tconstructor(\n\t\t@IProductService protected readonly productService: IProductService\n\t) {\n\t\tsuper();\n\t}\n\n\tcreate(options?: Partial<UriComponents>): URI {\n\t\tlet { authority, path, query, fragment } = options ? options : { authority: undefined, path: undefined, query: undefined, fragment: undefined };\n\n\t\tif (authority && path && path.indexOf('/') !== 0) {\n\t\t\tpath = `/${path}`; // URI validation requires a path if there is an authority\n\t\t}\n\n\t\treturn URI.from({ scheme: this.productService.urlProtocol, authority, path, query, fragment });\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { app, Event as ElectronEvent } from 'electron';\nimport { disposableTimeout } from 'vs/base/common/async';\nimport { Event } from 'vs/base/common/event';\nimport { Disposable, DisposableStore, IDisposable } from 'vs/base/common/lifecycle';\nimport { isWindows } from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport { IEnvironmentMainService } from 'vs/platform/environment/electron-main/environmentMainService';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IURLService } from 'vs/platform/url/common/url';\nimport { IWindowsMainService } from 'vs/platform/windows/electron-main/windows';\n\nfunction uriFromRawUrl(url: string): URI | null {\n\ttry {\n\t\treturn URI.parse(url);\n\t} catch (e) {\n\t\treturn null;\n\t}\n}\n\n/**\n * A listener for URLs that are opened from the OS and handled by VSCode.\n * Depending on the platform, this works differently:\n * - Windows: we use `app.setAsDefaultProtocolClient()` to register VSCode with the OS\n *            and additionally add the `open-url` command line argument to identify.\n * - macOS:   we rely on `app.on('open-url')` to be called by the OS\n * - Linux:   we have a special shortcut installed (`resources/linux/code-url-handler.desktop`)\n *            that calls VSCode with the `open-url` command line argument\n *            (https://github.com/microsoft/vscode/pull/56727)\n */\nexport class ElectronURLListener {\n\n\tprivate uris: { uri: URI, url: string }[] = [];\n\tprivate retryCount = 0;\n\tprivate flushDisposable: IDisposable = Disposable.None;\n\tprivate disposables = new DisposableStore();\n\n\tconstructor(\n\t\tinitialUrisToHandle: { uri: URI, url: string }[],\n\t\tprivate readonly urlService: IURLService,\n\t\twindowsMainService: IWindowsMainService,\n\t\tenvironmentMainService: IEnvironmentMainService,\n\t\tproductService: IProductService\n\t) {\n\n\t\t// the initial set of URIs we need to handle once the window is ready\n\t\tthis.uris = initialUrisToHandle;\n\n\t\t// Windows: install as protocol handler\n\t\tif (isWindows) {\n\t\t\tconst windowsParameters = environmentMainService.isBuilt ? [] : [`\"${environmentMainService.appRoot}\"`];\n\t\t\twindowsParameters.push('--open-url', '--');\n\t\t\tapp.setAsDefaultProtocolClient(productService.urlProtocol, process.execPath, windowsParameters);\n\t\t}\n\n\t\t// macOS: listen to `open-url` events from here on to handle\n\t\tconst onOpenElectronUrl = Event.map(\n\t\t\tEvent.fromNodeEventEmitter(app, 'open-url', (event: ElectronEvent, url: string) => ({ event, url })),\n\t\t\t({ event, url }) => {\n\t\t\t\tevent.preventDefault(); // always prevent default and return the url as string\n\t\t\t\treturn url;\n\t\t\t});\n\n\t\tthis.disposables.add(onOpenElectronUrl(url => {\n\t\t\tconst uri = uriFromRawUrl(url);\n\n\t\t\tif (!uri) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.urlService.open(uri, { originalUrl: url });\n\t\t}));\n\n\t\t// Send initial links to the window once it has loaded\n\t\tconst isWindowReady = windowsMainService.getWindows()\n\t\t\t.filter(w => w.isReady)\n\t\t\t.length > 0;\n\n\t\tif (isWindowReady) {\n\t\t\tthis.flush();\n\t\t} else {\n\t\t\tEvent.once(windowsMainService.onDidSignalReadyWindow)(this.flush, this, this.disposables);\n\t\t}\n\t}\n\n\tprivate async flush(): Promise<void> {\n\t\tif (this.retryCount++ > 10) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst uris: { uri: URI, url: string }[] = [];\n\n\t\tfor (const obj of this.uris) {\n\t\t\tconst handled = await this.urlService.open(obj.uri, { originalUrl: obj.url });\n\n\t\t\tif (!handled) {\n\t\t\t\turis.push(obj);\n\t\t\t}\n\t\t}\n\n\t\tif (uris.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.uris = uris;\n\t\tthis.flushDisposable = disposableTimeout(() => this.flush(), 500);\n\t}\n\n\tdispose(): void {\n\t\tthis.disposables.dispose();\n\t\tthis.flushDisposable.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IWebviewManagerService = createDecorator<IWebviewManagerService>('webviewManagerService');\n\nexport interface WebviewWebContentsId {\n\treadonly webContentsId: number;\n}\n\nexport interface WebviewWindowId {\n\treadonly windowId: number;\n}\n\nexport interface FindInFrameOptions {\n\tforward?: boolean;\n\tfindNext?: boolean;\n\tmatchCase?: boolean;\n}\n\nexport interface FoundInFrameResult {\n\trequestId: number;\n\tactiveMatchOrdinal: number;\n\tmatches: number;\n\tselectionArea: any;\n\tfinalUpdate: boolean;\n}\n\nexport interface IWebviewManagerService {\n\t_serviceBrand: unknown;\n\n\tonFoundInFrame: Event<FoundInFrameResult>;\n\n\tsetIgnoreMenuShortcuts(id: WebviewWebContentsId | WebviewWindowId, enabled: boolean): Promise<void>;\n\n\tfindInFrame(windowId: WebviewWindowId, frameName: string, text: string, options: FindInFrameOptions): Promise<void>;\n\n\tstopFindInFrame(windowId: WebviewWindowId, frameName: string, options: { keepSelection?: boolean }): Promise<void>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { protocol } from 'electron';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { FileAccess, Schemas } from 'vs/base/common/network';\nimport { URI } from 'vs/base/common/uri';\n\n\nexport class WebviewProtocolProvider extends Disposable {\n\n\tprivate static validWebviewFilePaths = new Map([\n\t\t['/index.html', 'index.html'],\n\t\t['/fake.html', 'fake.html'],\n\t\t['/main.js', 'main.js'],\n\t\t['/service-worker.js', 'service-worker.js'],\n\t]);\n\n\tconstructor() {\n\t\tsuper();\n\n\t\t// Register the protocol for loading webview html\n\t\tconst webviewHandler = this.handleWebviewRequest.bind(this);\n\t\tprotocol.registerFileProtocol(Schemas.vscodeWebview, webviewHandler);\n\t}\n\n\tprivate handleWebviewRequest(\n\t\trequest: Electron.ProtocolRequest,\n\t\tcallback: (response: string | Electron.ProtocolResponse) => void\n\t) {\n\t\ttry {\n\t\t\tconst uri = URI.parse(request.url);\n\t\t\tconst entry = WebviewProtocolProvider.validWebviewFilePaths.get(uri.path);\n\t\t\tif (typeof entry === 'string') {\n\t\t\t\tconst relativeResourcePath = `vs/workbench/contrib/webview/browser/pre/${entry}`;\n\t\t\t\tconst url = FileAccess.asFileUri(relativeResourcePath, require);\n\t\t\t\treturn callback(decodeURIComponent(url.fsPath));\n\t\t\t} else {\n\t\t\t\treturn callback({ error: -10 /* ACCESS_DENIED - https://cs.chromium.org/chromium/src/net/base/net_error_list.h?l=32 */ });\n\t\t\t}\n\t\t} catch {\n\t\t\t// noop\n\t\t}\n\t\treturn callback({ error: -2 /* FAILED - https://cs.chromium.org/chromium/src/net/base/net_error_list.h?l=32 */ });\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { PerformanceMark } from 'vs/base/common/performance';\nimport { isLinux, isMacintosh, isNative, isWeb } from 'vs/base/common/platform';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { ISandboxConfiguration } from 'vs/base/parts/sandbox/common/sandboxTypes';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { FileType } from 'vs/platform/files/common/files';\nimport { LogLevel } from 'vs/platform/log/common/log';\nimport { ISingleFolderWorkspaceIdentifier, IWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\n\nexport const WindowMinimumSize = {\n\tWIDTH: 400,\n\tWIDTH_WITH_VERTICAL_PANEL: 600,\n\tHEIGHT: 270\n};\n\nexport interface IBaseOpenWindowsOptions {\n\n\t/**\n\t * Whether to reuse the window or open a new one.\n\t */\n\treadonly forceReuseWindow?: boolean;\n\n\t/**\n\t * The remote authority to use when windows are opened with either\n\t * - no workspace (empty window)\n\t * - a workspace that is neither `file://` nor `vscode-remote://`\n\t * Use 'null' for a local window.\n\t * If not set, defaults to the remote authority of the current window.\n\t */\n\treadonly remoteAuthority?: string | null;\n}\n\nexport interface IOpenWindowOptions extends IBaseOpenWindowsOptions {\n\treadonly forceNewWindow?: boolean;\n\treadonly preferNewWindow?: boolean;\n\n\treadonly noRecentEntry?: boolean;\n\n\treadonly addMode?: boolean;\n\n\treadonly diffMode?: boolean;\n\treadonly gotoLineMode?: boolean;\n\n\treadonly waitMarkerFileURI?: URI;\n}\n\nexport interface IAddFoldersRequest {\n\treadonly foldersToAdd: UriComponents[];\n}\n\nexport interface IOpenedWindow {\n\treadonly id: number;\n\treadonly workspace?: IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier;\n\treadonly title: string;\n\treadonly filename?: string;\n\treadonly dirty: boolean;\n}\n\nexport interface IOpenEmptyWindowOptions extends IBaseOpenWindowsOptions { }\n\nexport type IWindowOpenable = IWorkspaceToOpen | IFolderToOpen | IFileToOpen;\n\nexport interface IBaseWindowOpenable {\n\tlabel?: string;\n}\n\nexport interface IWorkspaceToOpen extends IBaseWindowOpenable {\n\treadonly workspaceUri: URI;\n}\n\nexport interface IFolderToOpen extends IBaseWindowOpenable {\n\treadonly folderUri: URI;\n}\n\nexport interface IFileToOpen extends IBaseWindowOpenable {\n\treadonly fileUri: URI;\n}\n\nexport function isWorkspaceToOpen(uriToOpen: IWindowOpenable): uriToOpen is IWorkspaceToOpen {\n\treturn !!(uriToOpen as IWorkspaceToOpen).workspaceUri;\n}\n\nexport function isFolderToOpen(uriToOpen: IWindowOpenable): uriToOpen is IFolderToOpen {\n\treturn !!(uriToOpen as IFolderToOpen).folderUri;\n}\n\nexport function isFileToOpen(uriToOpen: IWindowOpenable): uriToOpen is IFileToOpen {\n\treturn !!(uriToOpen as IFileToOpen).fileUri;\n}\n\nexport type MenuBarVisibility = 'classic' | 'visible' | 'toggle' | 'hidden' | 'compact';\n\nexport function getMenuBarVisibility(configurationService: IConfigurationService): MenuBarVisibility {\n\tconst titleBarStyle = getTitleBarStyle(configurationService);\n\tconst menuBarVisibility = configurationService.getValue<MenuBarVisibility | 'default'>('window.menuBarVisibility');\n\n\tif (menuBarVisibility === 'default' || (titleBarStyle === 'native' && menuBarVisibility === 'compact') || (isMacintosh && isNative)) {\n\t\treturn 'classic';\n\t} else {\n\t\treturn menuBarVisibility;\n\t}\n}\n\nexport interface IWindowsConfiguration {\n\treadonly window: IWindowSettings;\n}\n\nexport interface IWindowSettings {\n\treadonly openFilesInNewWindow: 'on' | 'off' | 'default';\n\treadonly openFoldersInNewWindow: 'on' | 'off' | 'default';\n\treadonly openWithoutArgumentsInNewWindow: 'on' | 'off';\n\treadonly restoreWindows: 'preserve' | 'all' | 'folders' | 'one' | 'none';\n\treadonly restoreFullscreen: boolean;\n\treadonly zoomLevel: number;\n\treadonly titleBarStyle: 'native' | 'custom';\n\treadonly autoDetectHighContrast: boolean;\n\treadonly menuBarVisibility: MenuBarVisibility;\n\treadonly newWindowDimensions: 'default' | 'inherit' | 'offset' | 'maximized' | 'fullscreen';\n\treadonly nativeTabs: boolean;\n\treadonly nativeFullScreen: boolean;\n\treadonly enableMenuBarMnemonics: boolean;\n\treadonly closeWhenEmpty: boolean;\n\treadonly clickThroughInactive: boolean;\n}\n\ninterface IWindowBorderColors {\n\treadonly 'window.activeBorder'?: string;\n\treadonly 'window.inactiveBorder'?: string;\n}\n\nexport function getTitleBarStyle(configurationService: IConfigurationService): 'native' | 'custom' {\n\tif (isWeb) {\n\t\treturn 'custom';\n\t}\n\n\tconst configuration = configurationService.getValue<IWindowSettings | undefined>('window');\n\tif (configuration) {\n\t\tconst useNativeTabs = isMacintosh && configuration.nativeTabs === true;\n\t\tif (useNativeTabs) {\n\t\t\treturn 'native'; // native tabs on sierra do not work with custom title style\n\t\t}\n\n\t\tconst useSimpleFullScreen = isMacintosh && configuration.nativeFullScreen === false;\n\t\tif (useSimpleFullScreen) {\n\t\t\treturn 'native'; // simple fullscreen does not work well with custom title style (https://github.com/microsoft/vscode/issues/63291)\n\t\t}\n\n\t\tconst colorCustomizations = configurationService.getValue<IWindowBorderColors | undefined>('workbench.colorCustomizations');\n\t\tif (colorCustomizations?.['window.activeBorder'] || colorCustomizations?.['window.inactiveBorder']) {\n\t\t\treturn 'custom'; // window border colors do not work with native title style\n\t\t}\n\n\t\tconst style = configuration.titleBarStyle;\n\t\tif (style === 'native' || style === 'custom') {\n\t\t\treturn style;\n\t\t}\n\t}\n\n\treturn isLinux ? 'native' : 'custom'; // default to custom on all macOS and Windows\n}\n\nexport interface IPath extends IPathData {\n\n\t// the file path to open within the instance\n\tfileUri?: URI;\n}\n\nexport interface IPathData {\n\n\t// the file path to open within the instance\n\treadonly fileUri?: UriComponents;\n\n\t/**\n\t * An optional selection to apply in the file\n\t */\n\treadonly selection?: {\n\t\treadonly startLineNumber: number;\n\t\treadonly startColumn: number;\n\t\treadonly endLineNumber?: number;\n\t\treadonly endColumn?: number;\n\t}\n\n\t// a hint that the file exists. if true, the\n\t// file exists, if false it does not. with\n\t// `undefined` the state is unknown.\n\treadonly exists?: boolean;\n\n\t// a hint about the file type of this path.\n\t// with `undefined` the type is unknown.\n\treadonly type?: FileType;\n\n\t// Specifies if the file should be only be opened\n\t// if it exists\n\treadonly openOnlyIfExists?: boolean;\n\n\t// Specifies an optional id to override the editor\n\t// used to edit the resource, e.g. custom editor.\n\treadonly editorOverrideId?: string;\n}\n\nexport interface IPathsToWaitFor extends IPathsToWaitForData {\n\tpaths: IPath[];\n\twaitMarkerFileUri: URI;\n}\n\ninterface IPathsToWaitForData {\n\treadonly paths: IPathData[];\n\treadonly waitMarkerFileUri: UriComponents;\n}\n\nexport interface IOpenFileRequest {\n\treadonly filesToOpenOrCreate?: IPathData[];\n\treadonly filesToDiff?: IPathData[];\n}\n\n/**\n * Additional context for the request on native only.\n */\nexport interface INativeOpenFileRequest extends IOpenFileRequest {\n\treadonly termProgram?: string;\n\treadonly filesToWait?: IPathsToWaitForData;\n}\n\nexport interface INativeRunActionInWindowRequest {\n\treadonly id: string;\n\treadonly from: 'menu' | 'touchbar' | 'mouse';\n\treadonly args?: any[];\n}\n\nexport interface INativeRunKeybindingInWindowRequest {\n\treadonly userSettingsLabel: string;\n}\n\nexport interface IColorScheme {\n\treadonly dark: boolean;\n\treadonly highContrast: boolean;\n}\n\nexport interface IWindowConfiguration {\n\tremoteAuthority?: string;\n\n\tfilesToOpenOrCreate?: IPath[];\n\tfilesToDiff?: IPath[];\n}\n\nexport interface IOSConfiguration {\n\treadonly release: string;\n\treadonly hostname: string;\n}\n\nexport interface IPartsSplash {\n\tbaseTheme: string;\n\tcolorInfo: {\n\t\tbackground: string;\n\t\tforeground: string | undefined;\n\t\teditorBackground: string | undefined;\n\t\ttitleBarBackground: string | undefined;\n\t\tactivityBarBackground: string | undefined;\n\t\tsideBarBackground: string | undefined;\n\t\tstatusBarBackground: string | undefined;\n\t\tstatusBarNoFolderBackground: string | undefined;\n\t\twindowBorder: string | undefined;\n\t}\n\tlayoutInfo: {\n\t\tsideBarSide: string;\n\t\teditorPartMinWidth: number;\n\t\ttitleBarHeight: number;\n\t\tactivityBarWidth: number;\n\t\tsideBarWidth: number;\n\t\tstatusBarHeight: number;\n\t\twindowBorder: boolean;\n\t\twindowBorderRadius: string | undefined;\n\t} | undefined\n}\n\nexport interface INativeWindowConfiguration extends IWindowConfiguration, NativeParsedArgs, ISandboxConfiguration {\n\tmainPid: number;\n\n\tmachineId: string;\n\n\texecPath: string;\n\tbackupPath?: string;\n\n\thomeDir: string;\n\ttmpDir: string;\n\tuserDataDir: string;\n\n\tpartsSplash?: IPartsSplash;\n\n\tworkspace?: IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier;\n\n\tisInitialStartup?: boolean;\n\tlogLevel: LogLevel;\n\n\tfullscreen?: boolean;\n\tmaximized?: boolean;\n\taccessibilitySupport?: boolean;\n\tcolorScheme: IColorScheme;\n\tautoDetectHighContrast?: boolean;\n\n\tlegacyWatcher?: string; // TODO@bpasero remove me once watcher is settled\n\texperimentalSandboxedFileService?: boolean; // TODO@bpasero remove me once sandbox is settled\n\n\tperfMarks: PerformanceMark[];\n\n\tfilesToWait?: IPathsToWaitFor;\n\n\tos: IOSConfiguration;\n}\n\n/**\n * According to Electron docs: `scale := 1.2 ^ level`.\n * https://github.com/electron/electron/blob/master/docs/api/web-contents.md#contentssetzoomlevellevel\n */\nexport function zoomLevelToZoomFactor(zoomLevel = 0): number {\n\treturn Math.pow(1.2, zoomLevel);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { BrowserWindow, Rectangle, WebContents } from 'electron';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Event } from 'vs/base/common/event';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { IProcessEnvironment } from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport { ISerializableCommandAction } from 'vs/platform/actions/common/actions';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { INativeWindowConfiguration, IOpenEmptyWindowOptions, IWindowOpenable } from 'vs/platform/windows/common/windows';\nimport { ISingleFolderWorkspaceIdentifier, IWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\n\nexport const enum LoadReason {\n\n\t/**\n\t * The window is loaded for the first time.\n\t */\n\tINITIAL = 1,\n\n\t/**\n\t * The window is loaded into a different workspace context.\n\t */\n\tLOAD,\n\n\t/**\n\t * The window is reloaded.\n\t */\n\tRELOAD\n}\n\nexport const enum UnloadReason {\n\n\t/**\n\t * The window is closed.\n\t */\n\tCLOSE = 1,\n\n\t/**\n\t * All windows unload because the application quits.\n\t */\n\tQUIT,\n\n\t/**\n\t * The window is reloaded.\n\t */\n\tRELOAD,\n\n\t/**\n\t * The window is loaded into a different workspace context.\n\t */\n\tLOAD\n}\n\nexport const enum OpenContext {\n\n\t// opening when running from the command line\n\tCLI,\n\n\t// macOS only: opening from the dock (also when opening files to a running instance from desktop)\n\tDOCK,\n\n\t// opening from the main application window\n\tMENU,\n\n\t// opening from a file or folder dialog\n\tDIALOG,\n\n\t// opening from the OS's UI\n\tDESKTOP,\n\n\t// opening through the API\n\tAPI\n}\n\nexport interface IWindowState {\n\twidth?: number;\n\theight?: number;\n\tx?: number;\n\ty?: number;\n\tmode?: WindowMode;\n\tdisplay?: number;\n}\n\nexport const defaultWindowState = function (mode = WindowMode.Normal): IWindowState {\n\treturn {\n\t\twidth: 1024,\n\t\theight: 768,\n\t\tmode\n\t};\n};\n\nexport const enum WindowMode {\n\tMaximized,\n\tNormal,\n\tMinimized, // not used anymore, but also cannot remove due to existing stored UI state (needs migration)\n\tFullscreen\n}\n\nexport interface ILoadEvent {\n\tworkspace: IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | undefined;\n\treason: LoadReason;\n}\n\nexport interface ICodeWindow extends IDisposable {\n\n\treadonly onWillLoad: Event<ILoadEvent>;\n\treadonly onDidSignalReady: Event<void>;\n\treadonly onDidClose: Event<void>;\n\treadonly onDidDestroy: Event<void>;\n\n\treadonly whenClosedOrLoaded: Promise<void>;\n\n\treadonly id: number;\n\treadonly win: BrowserWindow | null; /* `null` after being disposed */\n\treadonly config: INativeWindowConfiguration | undefined;\n\n\treadonly openedWorkspace?: IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier;\n\n\treadonly backupPath?: string;\n\n\treadonly remoteAuthority?: string;\n\n\treadonly isExtensionDevelopmentHost: boolean;\n\treadonly isExtensionTestHost: boolean;\n\n\treadonly lastFocusTime: number;\n\n\treadonly isReady: boolean;\n\tready(): Promise<ICodeWindow>;\n\tsetReady(): void;\n\n\treadonly hasHiddenTitleBarStyle: boolean;\n\n\taddTabbedWindow(window: ICodeWindow): void;\n\n\tload(config: INativeWindowConfiguration, options?: { isReload?: boolean }): void;\n\treload(cli?: NativeParsedArgs): void;\n\n\tfocus(options?: { force: boolean }): void;\n\tclose(): void;\n\n\tgetBounds(): Rectangle;\n\n\tsend(channel: string, ...args: any[]): void;\n\tsendWhenReady(channel: string, token: CancellationToken, ...args: any[]): void;\n\n\treadonly isFullScreen: boolean;\n\ttoggleFullScreen(): void;\n\n\tisMinimized(): boolean;\n\n\tsetRepresentedFilename(name: string): void;\n\tgetRepresentedFilename(): string | undefined;\n\n\tsetDocumentEdited(edited: boolean): void;\n\tisDocumentEdited(): boolean;\n\n\thandleTitleDoubleClick(): void;\n\n\tupdateTouchBar(items: ISerializableCommandAction[][]): void;\n\n\tserializeWindowState(): IWindowState;\n}\n\nexport const enum WindowError {\n\n\t/**\n\t * Maps to the `unresponsive` event on a `BrowserWindow`.\n\t */\n\tUNRESPONSIVE = 1,\n\n\t/**\n\t * Maps to the `render-proces-gone` event on a `WebContents`.\n\t */\n\tCRASHED = 2,\n\n\t/**\n\t * Maps to the `did-fail-load` event on a `WebContents`.\n\t */\n\tLOAD = 3\n}\n\nexport const IWindowsMainService = createDecorator<IWindowsMainService>('windowsMainService');\n\nexport interface IWindowsCountChangedEvent {\n\treadonly oldCount: number;\n\treadonly newCount: number;\n}\n\nexport interface IWindowsMainService {\n\n\treadonly _serviceBrand: undefined;\n\n\treadonly onDidChangeWindowsCount: Event<IWindowsCountChangedEvent>;\n\n\treadonly onDidOpenWindow: Event<ICodeWindow>;\n\treadonly onDidSignalReadyWindow: Event<ICodeWindow>;\n\treadonly onDidDestroyWindow: Event<ICodeWindow>;\n\n\topen(openConfig: IOpenConfiguration): ICodeWindow[];\n\topenEmptyWindow(openConfig: IOpenEmptyConfiguration, options?: IOpenEmptyWindowOptions): ICodeWindow[];\n\topenExistingWindow(window: ICodeWindow, openConfig: IOpenConfiguration): void;\n\topenExtensionDevelopmentHostWindow(extensionDevelopmentPath: string[], openConfig: IOpenConfiguration): ICodeWindow[];\n\n\tsendToFocused(channel: string, ...args: any[]): void;\n\tsendToAll(channel: string, payload?: any, windowIdsToIgnore?: number[]): void;\n\n\tgetWindows(): ICodeWindow[];\n\tgetWindowCount(): number;\n\n\tgetFocusedWindow(): ICodeWindow | undefined;\n\tgetLastActiveWindow(): ICodeWindow | undefined;\n\n\tgetWindowById(windowId: number): ICodeWindow | undefined;\n\tgetWindowByWebContents(webContents: WebContents): ICodeWindow | undefined;\n}\n\nexport interface IBaseOpenConfiguration {\n\treadonly context: OpenContext;\n\treadonly contextWindowId?: number;\n}\n\nexport interface IOpenConfiguration extends IBaseOpenConfiguration {\n\treadonly cli: NativeParsedArgs;\n\treadonly userEnv?: IProcessEnvironment;\n\treadonly urisToOpen?: IWindowOpenable[];\n\treadonly waitMarkerFileURI?: URI;\n\treadonly preferNewWindow?: boolean;\n\treadonly forceNewWindow?: boolean;\n\treadonly forceNewTabbedWindow?: boolean;\n\treadonly forceReuseWindow?: boolean;\n\treadonly forceEmpty?: boolean;\n\treadonly diffMode?: boolean;\n\taddMode?: boolean;\n\treadonly gotoLineMode?: boolean;\n\treadonly initialStartup?: boolean;\n\treadonly noRecentEntry?: boolean;\n\t/**\n\t * The remote authority to use when windows are opened with either\n\t * - no workspace (empty window)\n\t * - a workspace that is neither `file://` nor `vscode-remote://`\n\t */\n\treadonly remoteAuthority?: string;\n}\n\nexport interface IOpenEmptyConfiguration extends IBaseOpenConfiguration { }\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { WebContents, webContents, WebFrameMain } from 'electron';\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { FindInFrameOptions, FoundInFrameResult, IWebviewManagerService, WebviewWebContentsId, WebviewWindowId } from 'vs/platform/webview/common/webviewManagerService';\nimport { WebviewProtocolProvider } from 'vs/platform/webview/electron-main/webviewProtocolProvider';\nimport { IWindowsMainService } from 'vs/platform/windows/electron-main/windows';\n\nexport class WebviewMainService extends Disposable implements IWebviewManagerService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onFoundInFrame = this._register(new Emitter<FoundInFrameResult>());\n\tpublic onFoundInFrame = this._onFoundInFrame.event;\n\n\tconstructor(\n\t\t@IWindowsMainService private readonly windowsMainService: IWindowsMainService,\n\t) {\n\t\tsuper();\n\t\tthis._register(new WebviewProtocolProvider());\n\t}\n\n\tpublic async setIgnoreMenuShortcuts(id: WebviewWebContentsId | WebviewWindowId, enabled: boolean): Promise<void> {\n\t\tlet contents: WebContents | undefined;\n\n\t\tif (typeof (id as WebviewWindowId).windowId === 'number') {\n\t\t\tconst { windowId } = (id as WebviewWindowId);\n\t\t\tconst window = this.windowsMainService.getWindowById(windowId);\n\t\t\tif (!window?.win) {\n\t\t\t\tthrow new Error(`Invalid windowId: ${windowId}`);\n\t\t\t}\n\t\t\tcontents = window.win.webContents;\n\t\t} else {\n\t\t\tconst { webContentsId } = (id as WebviewWebContentsId);\n\t\t\tcontents = webContents.fromId(webContentsId);\n\t\t\tif (!contents) {\n\t\t\t\tthrow new Error(`Invalid webContentsId: ${webContentsId}`);\n\t\t\t}\n\t\t}\n\n\t\tif (!contents.isDestroyed()) {\n\t\t\tcontents.setIgnoreMenuShortcuts(enabled);\n\t\t}\n\t}\n\n\tpublic async findInFrame(windowId: WebviewWindowId, frameName: string, text: string, options: { findNext?: boolean, forward?: boolean }): Promise<void> {\n\t\tconst initialFrame = this.getFrameByName(windowId, frameName);\n\n\t\ttype WebFrameMainWithFindSupport = typeof WebFrameMain & {\n\t\t\tfindInFrame?(text: string, findOptions: FindInFrameOptions): void;\n\t\t};\n\t\tconst frame = initialFrame as unknown as WebFrameMainWithFindSupport;\n\t\tif (typeof frame.findInFrame === 'function') {\n\t\t\tframe.findInFrame(text, {\n\t\t\t\tfindNext: options.findNext,\n\t\t\t\tforward: options.forward,\n\t\t\t});\n\t\t\tconst foundInFrameHandler = (_: unknown, result: FoundInFrameResult) => {\n\t\t\t\tif (result.finalUpdate) {\n\t\t\t\t\tthis._onFoundInFrame.fire(result);\n\t\t\t\t\tinitialFrame.removeListener('found-in-frame', foundInFrameHandler);\n\t\t\t\t}\n\t\t\t};\n\t\t\tinitialFrame.on('found-in-frame', foundInFrameHandler);\n\t\t}\n\t}\n\n\tpublic async stopFindInFrame(windowId: WebviewWindowId, frameName: string, options: { keepSelection?: boolean }): Promise<void> {\n\t\tconst initialFrame = this.getFrameByName(windowId, frameName);\n\n\t\ttype WebFrameMainWithFindSupport = typeof WebFrameMain & {\n\t\t\tstopFindInFrame?(stopOption: 'keepSelection' | 'clearSelection'): void;\n\t\t};\n\n\t\tconst frame = initialFrame as unknown as WebFrameMainWithFindSupport;\n\t\tif (typeof frame.stopFindInFrame === 'function') {\n\t\t\tframe.stopFindInFrame(options.keepSelection ? 'keepSelection' : 'clearSelection');\n\t\t}\n\t}\n\n\tprivate getFrameByName(windowId: WebviewWindowId, frameName: string): WebFrameMain {\n\t\tconst window = this.windowsMainService.getWindowById(windowId.windowId);\n\t\tif (!window?.win) {\n\t\t\tthrow new Error(`Invalid windowId: ${windowId}`);\n\t\t}\n\t\tconst frame = window.win.webContents.mainFrame.framesInSubtree.find(frame => {\n\t\t\treturn frame.name === frameName;\n\t\t});\n\t\tif (!frame) {\n\t\t\tthrow new Error(`Unknown frame: ${frameName}`);\n\t\t}\n\t\treturn frame;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancelablePromise, createCancelablePromise } from 'vs/base/common/async';\nimport { Event } from 'vs/base/common/event';\nimport { Disposable, DisposableStore } from 'vs/base/common/lifecycle';\n\nexport class ActiveWindowManager extends Disposable {\n\n\tprivate readonly disposables = this._register(new DisposableStore());\n\tprivate firstActiveWindowIdPromise: CancelablePromise<number | undefined> | undefined;\n\n\tprivate activeWindowId: number | undefined;\n\n\tconstructor({ onDidOpenWindow, onDidFocusWindow, getActiveWindowId }: {\n\t\tonDidOpenWindow: Event<number>,\n\t\tonDidFocusWindow: Event<number>,\n\t\tgetActiveWindowId(): Promise<number | undefined>\n\t}) {\n\t\tsuper();\n\n\t\t// remember last active window id upon events\n\t\tconst onActiveWindowChange = Event.latch(Event.any(onDidOpenWindow, onDidFocusWindow));\n\t\tonActiveWindowChange(this.setActiveWindow, this, this.disposables);\n\n\t\t// resolve current active window\n\t\tthis.firstActiveWindowIdPromise = createCancelablePromise(() => getActiveWindowId());\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tconst windowId = await this.firstActiveWindowIdPromise;\n\t\t\t\tthis.activeWindowId = (typeof this.activeWindowId === 'number') ? this.activeWindowId : windowId;\n\t\t\t} catch (error) {\n\t\t\t\t// ignore\n\t\t\t} finally {\n\t\t\t\tthis.firstActiveWindowIdPromise = undefined;\n\t\t\t}\n\t\t})();\n\t}\n\n\tprivate setActiveWindow(windowId: number | undefined) {\n\t\tif (this.firstActiveWindowIdPromise) {\n\t\t\tthis.firstActiveWindowIdPromise.cancel();\n\t\t\tthis.firstActiveWindowIdPromise = undefined;\n\t\t}\n\n\t\tthis.activeWindowId = windowId;\n\t}\n\n\tasync getActiveClientId(): Promise<string | undefined> {\n\t\tconst id = this.firstActiveWindowIdPromise ? (await this.firstActiveWindowIdPromise) : this.activeWindowId;\n\n\t\treturn `window:${id}`;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { IWorkspaceFolderProvider } from 'vs/base/common/labels';\nimport { TernarySearchTree } from 'vs/base/common/map';\nimport { basenameOrAuthority, joinPath } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ISingleFolderWorkspaceIdentifier, IStoredWorkspaceFolder, IWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\n\nexport const IWorkspaceContextService = createDecorator<IWorkspaceContextService>('contextService');\n\nexport interface IWorkspaceContextService extends IWorkspaceFolderProvider {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * An event which fires on workbench state changes.\n\t */\n\treadonly onDidChangeWorkbenchState: Event<WorkbenchState>;\n\n\t/**\n\t * An event which fires on workspace name changes.\n\t */\n\treadonly onDidChangeWorkspaceName: Event<void>;\n\n\t/**\n\t * An event which fires before workspace folders change.\n\t */\n\treadonly onWillChangeWorkspaceFolders: Event<IWorkspaceFoldersWillChangeEvent>;\n\n\t/**\n\t * An event which fires on workspace folders change.\n\t */\n\treadonly onDidChangeWorkspaceFolders: Event<IWorkspaceFoldersChangeEvent>;\n\n\t/**\n\t * Provides access to the complete workspace object.\n\t */\n\tgetCompleteWorkspace(): Promise<IWorkspace>;\n\n\t/**\n\t * Provides access to the workspace object the window is running with.\n\t * Use `getCompleteWorkspace` to get complete workspace object.\n\t */\n\tgetWorkspace(): IWorkspace;\n\n\t/**\n\t * Return the state of the workbench.\n\t *\n\t * WorkbenchState.EMPTY - if the workbench was opened with empty window or file\n\t * WorkbenchState.FOLDER - if the workbench was opened with a folder\n\t * WorkbenchState.WORKSPACE - if the workbench was opened with a workspace\n\t */\n\tgetWorkbenchState(): WorkbenchState;\n\n\t/**\n\t * Returns the folder for the given resource from the workspace.\n\t * Can be null if there is no workspace or the resource is not inside the workspace.\n\t */\n\tgetWorkspaceFolder(resource: URI): IWorkspaceFolder | null;\n\n\t/**\n\t * Return `true` if the current workspace has the given identifier or root URI otherwise `false`.\n\t */\n\tisCurrentWorkspace(workspaceIdOrFolder: IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | URI): boolean;\n\n\t/**\n\t * Returns if the provided resource is inside the workspace or not.\n\t */\n\tisInsideWorkspace(resource: URI): boolean;\n}\n\nexport const enum WorkbenchState {\n\tEMPTY = 1,\n\tFOLDER,\n\tWORKSPACE\n}\n\nexport interface IWorkspaceFoldersWillChangeEvent {\n\tjoin(promise: Promise<void>): void;\n\treadonly changes: IWorkspaceFoldersChangeEvent;\n\treadonly fromCache: boolean;\n}\n\nexport interface IWorkspaceFoldersChangeEvent {\n\tadded: IWorkspaceFolder[];\n\tremoved: IWorkspaceFolder[];\n\tchanged: IWorkspaceFolder[];\n}\n\nexport interface IWorkspace {\n\n\t/**\n\t * the unique identifier of the workspace.\n\t */\n\treadonly id: string;\n\n\t/**\n\t * Folders in the workspace.\n\t */\n\treadonly folders: IWorkspaceFolder[];\n\n\t/**\n\t * Transient workspaces are meant to go away after being used\n\t * once, e.g. a window reload of a transient workspace will\n\t * open an empty window.\n\t */\n\treadonly transient?: boolean;\n\n\t/**\n\t * the location of the workspace configuration\n\t */\n\treadonly configuration?: URI | null;\n}\n\nexport function isWorkspace(thing: unknown): thing is IWorkspace {\n\tconst candidate = thing as IWorkspace | undefined;\n\n\treturn !!(candidate && typeof candidate === 'object'\n\t\t&& typeof candidate.id === 'string'\n\t\t&& Array.isArray(candidate.folders));\n}\n\nexport interface IWorkspaceFolderData {\n\n\t/**\n\t * The associated URI for this workspace folder.\n\t */\n\treadonly uri: URI;\n\n\t/**\n\t * The name of this workspace folder. Defaults to\n\t * the basename of its [uri-path](#Uri.path)\n\t */\n\treadonly name: string;\n\n\t/**\n\t * The ordinal number of this workspace folder.\n\t */\n\treadonly index: number;\n}\n\nexport interface IWorkspaceFolder extends IWorkspaceFolderData {\n\n\t/**\n\t * Given workspace folder relative path, returns the resource with the absolute path.\n\t */\n\ttoResource: (relativePath: string) => URI;\n}\n\nexport function isWorkspaceFolder(thing: unknown): thing is IWorkspaceFolder {\n\tconst candidate = thing as IWorkspaceFolder;\n\n\treturn !!(candidate && typeof candidate === 'object'\n\t\t&& URI.isUri(candidate.uri)\n\t\t&& typeof candidate.name === 'string'\n\t\t&& typeof candidate.toResource === 'function');\n}\n\nexport class Workspace implements IWorkspace {\n\n\tprivate _foldersMap: TernarySearchTree<URI, WorkspaceFolder> = TernarySearchTree.forUris<WorkspaceFolder>(this._ignorePathCasing);\n\tprivate _folders!: WorkspaceFolder[];\n\n\tconstructor(\n\t\tprivate _id: string,\n\t\tfolders: WorkspaceFolder[],\n\t\tprivate _transient: boolean,\n\t\tprivate _configuration: URI | null,\n\t\tprivate _ignorePathCasing: (key: URI) => boolean,\n\t) {\n\t\tthis.folders = folders;\n\t}\n\n\tupdate(workspace: Workspace) {\n\t\tthis._id = workspace.id;\n\t\tthis._configuration = workspace.configuration;\n\t\tthis._transient = workspace.transient;\n\t\tthis._ignorePathCasing = workspace._ignorePathCasing;\n\t\tthis.folders = workspace.folders;\n\t}\n\n\tget folders(): WorkspaceFolder[] {\n\t\treturn this._folders;\n\t}\n\n\tset folders(folders: WorkspaceFolder[]) {\n\t\tthis._folders = folders;\n\t\tthis.updateFoldersMap();\n\t}\n\n\tget id(): string {\n\t\treturn this._id;\n\t}\n\n\tget transient(): boolean {\n\t\treturn this._transient;\n\t}\n\n\tget configuration(): URI | null {\n\t\treturn this._configuration;\n\t}\n\n\tset configuration(configuration: URI | null) {\n\t\tthis._configuration = configuration;\n\t}\n\n\tgetFolder(resource: URI): IWorkspaceFolder | null {\n\t\tif (!resource) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this._foldersMap.findSubstr(resource.with({\n\t\t\tscheme: resource.scheme,\n\t\t\tauthority: resource.authority,\n\t\t\tpath: resource.path\n\t\t})) || null;\n\t}\n\n\tprivate updateFoldersMap(): void {\n\t\tthis._foldersMap = TernarySearchTree.forUris<WorkspaceFolder>(this._ignorePathCasing);\n\t\tfor (const folder of this.folders) {\n\t\t\tthis._foldersMap.set(folder.uri, folder);\n\t\t}\n\t}\n\n\ttoJSON(): IWorkspace {\n\t\treturn { id: this.id, folders: this.folders, transient: this.transient, configuration: this.configuration };\n\t}\n}\n\nexport class WorkspaceFolder implements IWorkspaceFolder {\n\n\treadonly uri: URI;\n\tname: string;\n\tindex: number;\n\n\tconstructor(data: IWorkspaceFolderData,\n\t\treadonly raw?: IStoredWorkspaceFolder) {\n\t\tthis.uri = data.uri;\n\t\tthis.index = data.index;\n\t\tthis.name = data.name;\n\t}\n\n\ttoResource(relativePath: string): URI {\n\t\treturn joinPath(this.uri, relativePath);\n\t}\n\n\ttoJSON(): IWorkspaceFolderData {\n\t\treturn { uri: this.uri, name: this.name, index: this.index };\n\t}\n}\n\nexport function toWorkspaceFolder(resource: URI): WorkspaceFolder {\n\treturn new WorkspaceFolder({ uri: resource, index: 0, name: basenameOrAuthority(resource) }, { uri: resource.toString() });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { toSlashes } from 'vs/base/common/extpath';\nimport * as json from 'vs/base/common/json';\nimport * as jsonEdit from 'vs/base/common/jsonEdit';\nimport { FormattingOptions } from 'vs/base/common/jsonFormatter';\nimport { normalizeDriveLetter } from 'vs/base/common/labels';\nimport { Schemas } from 'vs/base/common/network';\nimport { extname, isAbsolute } from 'vs/base/common/path';\nimport { isLinux, isMacintosh, isWindows } from 'vs/base/common/platform';\nimport { extname as resourceExtname, extUriBiasedIgnorePathCase, IExtUri, isEqualAuthority } from 'vs/base/common/resources';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { getRemoteAuthority } from 'vs/platform/remote/common/remoteHosts';\nimport { IWorkspace, IWorkspaceFolder, WorkspaceFolder } from 'vs/platform/workspace/common/workspace';\n\nexport const WORKSPACE_EXTENSION = 'code-workspace';\nconst WORKSPACE_SUFFIX = `.${WORKSPACE_EXTENSION}`;\nexport const WORKSPACE_FILTER = [{ name: localize('codeWorkspace', \"Code Workspace\"), extensions: [WORKSPACE_EXTENSION] }];\nexport const UNTITLED_WORKSPACE_NAME = 'workspace.json';\n\nexport function hasWorkspaceFileExtension(path: string | URI) {\n\tconst ext = (typeof path === 'string') ? extname(path) : resourceExtname(path);\n\n\treturn ext === WORKSPACE_SUFFIX;\n}\n\nexport const IWorkspacesService = createDecorator<IWorkspacesService>('workspacesService');\n\nexport interface IWorkspacesService {\n\n\treadonly _serviceBrand: undefined;\n\n\t// Workspaces Management\n\tenterWorkspace(path: URI): Promise<IEnterWorkspaceResult | undefined>;\n\tcreateUntitledWorkspace(folders?: IWorkspaceFolderCreationData[], remoteAuthority?: string): Promise<IWorkspaceIdentifier>;\n\tdeleteUntitledWorkspace(workspace: IWorkspaceIdentifier): Promise<void>;\n\tgetWorkspaceIdentifier(workspacePath: URI): Promise<IWorkspaceIdentifier>;\n\n\t// Workspaces History\n\treadonly onDidChangeRecentlyOpened: Event<void>;\n\taddRecentlyOpened(recents: IRecent[]): Promise<void>;\n\tremoveRecentlyOpened(workspaces: URI[]): Promise<void>;\n\tclearRecentlyOpened(): Promise<void>;\n\tgetRecentlyOpened(): Promise<IRecentlyOpened>;\n\n\t// Dirty Workspaces\n\tgetDirtyWorkspaces(): Promise<Array<IWorkspaceIdentifier | URI>>;\n}\n\n//#region Workspaces Recently Opened\n\nexport interface IRecentlyOpened {\n\tworkspaces: Array<IRecentWorkspace | IRecentFolder>;\n\tfiles: IRecentFile[];\n}\n\nexport type IRecent = IRecentWorkspace | IRecentFolder | IRecentFile;\n\nexport interface IRecentWorkspace {\n\tworkspace: IWorkspaceIdentifier;\n\tlabel?: string;\n\tremoteAuthority?: string;\n}\n\nexport interface IRecentFolder {\n\tfolderUri: URI;\n\tlabel?: string;\n\tremoteAuthority?: string;\n}\n\nexport interface IRecentFile {\n\tfileUri: URI;\n\tlabel?: string;\n\tremoteAuthority?: string;\n}\n\nexport function isRecentWorkspace(curr: IRecent): curr is IRecentWorkspace {\n\treturn curr.hasOwnProperty('workspace');\n}\n\nexport function isRecentFolder(curr: IRecent): curr is IRecentFolder {\n\treturn curr.hasOwnProperty('folderUri');\n}\n\nexport function isRecentFile(curr: IRecent): curr is IRecentFile {\n\treturn curr.hasOwnProperty('fileUri');\n}\n\n//#endregion\n\n//#region Identifiers / Payload\n\nexport interface IBaseWorkspaceIdentifier {\n\n\t/**\n\t * Every workspace (multi-root, single folder or empty)\n\t * has a unique identifier. It is not possible to open\n\t * a workspace with the same `id` in multiple windows\n\t */\n\tid: string;\n}\n\n/**\n * A single folder workspace identifier is a path to a folder + id.\n */\nexport interface ISingleFolderWorkspaceIdentifier extends IBaseWorkspaceIdentifier {\n\n\t/**\n\t * Folder path as `URI`.\n\t */\n\turi: URI;\n}\n\nexport interface ISerializedSingleFolderWorkspaceIdentifier extends IBaseWorkspaceIdentifier {\n\turi: UriComponents;\n}\n\nexport function isSingleFolderWorkspaceIdentifier(obj: unknown): obj is ISingleFolderWorkspaceIdentifier {\n\tconst singleFolderIdentifier = obj as ISingleFolderWorkspaceIdentifier | undefined;\n\n\treturn typeof singleFolderIdentifier?.id === 'string' && URI.isUri(singleFolderIdentifier.uri);\n}\n\n/**\n * A multi-root workspace identifier is a path to a workspace file + id.\n */\nexport interface IWorkspaceIdentifier extends IBaseWorkspaceIdentifier {\n\n\t/**\n\t * Workspace config file path as `URI`.\n\t */\n\tconfigPath: URI;\n}\n\nexport interface ISerializedWorkspaceIdentifier extends IBaseWorkspaceIdentifier {\n\tconfigPath: UriComponents;\n}\n\nexport function toWorkspaceIdentifier(workspace: IWorkspace): IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | undefined {\n\n\t// Multi root\n\tif (workspace.configuration) {\n\t\treturn {\n\t\t\tid: workspace.id,\n\t\t\tconfigPath: workspace.configuration\n\t\t};\n\t}\n\n\t// Single folder\n\tif (workspace.folders.length === 1) {\n\t\treturn {\n\t\t\tid: workspace.id,\n\t\t\turi: workspace.folders[0].uri\n\t\t};\n\t}\n\n\t// Empty workspace\n\treturn undefined;\n}\n\nexport function isWorkspaceIdentifier(obj: unknown): obj is IWorkspaceIdentifier {\n\tconst workspaceIdentifier = obj as IWorkspaceIdentifier | undefined;\n\n\treturn typeof workspaceIdentifier?.id === 'string' && URI.isUri(workspaceIdentifier.configPath);\n}\n\nexport function reviveIdentifier(identifier: undefined): undefined;\nexport function reviveIdentifier(identifier: ISerializedWorkspaceIdentifier): IWorkspaceIdentifier;\nexport function reviveIdentifier(identifier: ISerializedSingleFolderWorkspaceIdentifier): ISingleFolderWorkspaceIdentifier;\nexport function reviveIdentifier(identifier: IEmptyWorkspaceIdentifier): IEmptyWorkspaceIdentifier;\nexport function reviveIdentifier(identifier: ISerializedWorkspaceIdentifier | ISerializedSingleFolderWorkspaceIdentifier | IEmptyWorkspaceIdentifier | undefined): IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | IEmptyWorkspaceIdentifier | undefined;\nexport function reviveIdentifier(identifier: ISerializedWorkspaceIdentifier | ISerializedSingleFolderWorkspaceIdentifier | IEmptyWorkspaceIdentifier | undefined): IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | IEmptyWorkspaceIdentifier | undefined {\n\n\t// Single Folder\n\tconst singleFolderIdentifierCandidate = identifier as ISerializedSingleFolderWorkspaceIdentifier | undefined;\n\tif (singleFolderIdentifierCandidate?.uri) {\n\t\treturn { id: singleFolderIdentifierCandidate.id, uri: URI.revive(singleFolderIdentifierCandidate.uri) };\n\t}\n\n\t// Multi folder\n\tconst workspaceIdentifierCandidate = identifier as ISerializedWorkspaceIdentifier | undefined;\n\tif (workspaceIdentifierCandidate?.configPath) {\n\t\treturn { id: workspaceIdentifierCandidate.id, configPath: URI.revive(workspaceIdentifierCandidate.configPath) };\n\t}\n\n\t// Empty\n\tif (identifier?.id) {\n\t\treturn { id: identifier.id };\n\t}\n\n\treturn undefined;\n}\n\nexport function isUntitledWorkspace(path: URI, environmentService: IEnvironmentService): boolean {\n\treturn extUriBiasedIgnorePathCase.isEqualOrParent(path, environmentService.untitledWorkspacesHome);\n}\n\nexport interface IEmptyWorkspaceIdentifier extends IBaseWorkspaceIdentifier { }\n\nexport type IWorkspaceInitializationPayload = IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | IEmptyWorkspaceIdentifier;\n\n//#endregion\n\n//#region Workspace File Utilities\n\nexport function isStoredWorkspaceFolder(obj: unknown): obj is IStoredWorkspaceFolder {\n\treturn isRawFileWorkspaceFolder(obj) || isRawUriWorkspaceFolder(obj);\n}\n\nexport function isRawFileWorkspaceFolder(obj: unknown): obj is IRawFileWorkspaceFolder {\n\tconst candidate = obj as IRawFileWorkspaceFolder | undefined;\n\n\treturn typeof candidate?.path === 'string' && (!candidate.name || typeof candidate.name === 'string');\n}\n\nexport function isRawUriWorkspaceFolder(obj: unknown): obj is IRawUriWorkspaceFolder {\n\tconst candidate = obj as IRawUriWorkspaceFolder | undefined;\n\n\treturn typeof candidate?.uri === 'string' && (!candidate.name || typeof candidate.name === 'string');\n}\n\nexport interface IRawFileWorkspaceFolder {\n\tpath: string;\n\tname?: string;\n}\n\nexport interface IRawUriWorkspaceFolder {\n\turi: string;\n\tname?: string;\n}\n\nexport type IStoredWorkspaceFolder = IRawFileWorkspaceFolder | IRawUriWorkspaceFolder;\n\ninterface IBaseWorkspace {\n\n\t/**\n\t * If present, marks the window that opens the workspace\n\t * as a remote window with the given authority.\n\t */\n\tremoteAuthority?: string;\n\n\t/**\n\t * Transient workspaces are meant to go away after being used\n\t * once, e.g. a window reload of a transient workspace will\n\t * open an empty window.\n\t *\n\t * See: https://github.com/microsoft/vscode/issues/119695\n\t */\n\ttransient?: boolean;\n}\n\nexport interface IResolvedWorkspace extends IWorkspaceIdentifier, IBaseWorkspace {\n\tfolders: IWorkspaceFolder[];\n}\n\nexport interface IStoredWorkspace extends IBaseWorkspace {\n\tfolders: IStoredWorkspaceFolder[];\n}\n\nexport interface IWorkspaceFolderCreationData {\n\turi: URI;\n\tname?: string;\n}\n\nexport interface IUntitledWorkspaceInfo {\n\tworkspace: IWorkspaceIdentifier;\n\tremoteAuthority?: string;\n}\n\nexport interface IEnterWorkspaceResult {\n\tworkspace: IWorkspaceIdentifier;\n\tbackupPath?: string;\n}\n\n/**\n * Given a folder URI and the workspace config folder, computes the IStoredWorkspaceFolder using\n* a relative or absolute path or a uri.\n * Undefined is returned if the folderURI and the targetConfigFolderURI don't have the same schema or authority\n *\n * @param folderURI a workspace folder\n * @param forceAbsolute if set, keep the path absolute\n * @param folderName a workspace name\n * @param targetConfigFolderURI the folder where the workspace is living in\n * @param useSlashForPath if set, use forward slashes for file paths on windows\n */\nexport function getStoredWorkspaceFolder(folderURI: URI, forceAbsolute: boolean, folderName: string | undefined, targetConfigFolderURI: URI, useSlashForPath = !isWindows, extUri: IExtUri): IStoredWorkspaceFolder {\n\tif (folderURI.scheme !== targetConfigFolderURI.scheme) {\n\t\treturn { name: folderName, uri: folderURI.toString(true) };\n\t}\n\n\tlet folderPath = !forceAbsolute ? extUri.relativePath(targetConfigFolderURI, folderURI) : undefined;\n\tif (folderPath !== undefined) {\n\t\tif (folderPath.length === 0) {\n\t\t\tfolderPath = '.';\n\t\t} else if (isWindows && folderURI.scheme === Schemas.file && !useSlashForPath) {\n\t\t\t// Windows gets special treatment:\n\t\t\t// - use backslahes unless slash is used by other existing folders\n\t\t\tfolderPath = folderPath.replace(/\\//g, '\\\\');\n\t\t}\n\t} else {\n\n\t\t// use absolute path\n\t\tif (folderURI.scheme === Schemas.file) {\n\t\t\tfolderPath = folderURI.fsPath;\n\t\t\tif (isWindows) {\n\t\t\t\t// Windows gets special treatment:\n\t\t\t\t// - normalize all paths to get nice casing of drive letters\n\t\t\t\t// - use backslahes unless slash is used by other existing folders\n\t\t\t\tfolderPath = normalizeDriveLetter(folderPath);\n\t\t\t\tif (useSlashForPath) {\n\t\t\t\t\tfolderPath = toSlashes(folderPath);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tif (!extUri.isEqualAuthority(folderURI.authority, targetConfigFolderURI.authority)) {\n\t\t\t\treturn { name: folderName, uri: folderURI.toString(true) };\n\t\t\t}\n\t\t\tfolderPath = folderURI.path;\n\t\t}\n\t}\n\n\treturn { name: folderName, path: folderPath };\n}\n\nexport function toWorkspaceFolders(configuredFolders: IStoredWorkspaceFolder[], workspaceConfigFile: URI, extUri: IExtUri): WorkspaceFolder[] {\n\tlet result: WorkspaceFolder[] = [];\n\tlet seen: Set<string> = new Set();\n\n\tconst relativeTo = extUri.dirname(workspaceConfigFile);\n\tfor (let configuredFolder of configuredFolders) {\n\t\tlet uri: URI | undefined = undefined;\n\t\tif (isRawFileWorkspaceFolder(configuredFolder)) {\n\t\t\tif (configuredFolder.path) {\n\t\t\t\turi = extUri.resolvePath(relativeTo, configuredFolder.path);\n\t\t\t}\n\t\t} else if (isRawUriWorkspaceFolder(configuredFolder)) {\n\t\t\ttry {\n\t\t\t\turi = URI.parse(configuredFolder.uri);\n\t\t\t\tif (uri.path[0] !== '/') {\n\t\t\t\t\turi = uri.with({ path: '/' + uri.path }); // this makes sure all workspace folder are absolute\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.warn(e); // ignore\n\t\t\t}\n\t\t}\n\n\t\tif (uri) {\n\n\t\t\t// remove duplicates\n\t\t\tlet comparisonKey = extUri.getComparisonKey(uri);\n\t\t\tif (!seen.has(comparisonKey)) {\n\t\t\t\tseen.add(comparisonKey);\n\n\t\t\t\tconst name = configuredFolder.name || extUri.basenameOrAuthority(uri);\n\t\t\t\tresult.push(new WorkspaceFolder({ uri, name, index: result.length }, configuredFolder));\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}\n\n/**\n * Rewrites the content of a workspace file to be saved at a new location.\n * Throws an exception if file is not a valid workspace file\n */\nexport function rewriteWorkspaceFileForNewLocation(rawWorkspaceContents: string, configPathURI: URI, isFromUntitledWorkspace: boolean, targetConfigPathURI: URI, extUri: IExtUri) {\n\tlet storedWorkspace = doParseStoredWorkspace(configPathURI, rawWorkspaceContents);\n\n\tconst sourceConfigFolder = extUri.dirname(configPathURI);\n\tconst targetConfigFolder = extUri.dirname(targetConfigPathURI);\n\n\tconst rewrittenFolders: IStoredWorkspaceFolder[] = [];\n\tconst slashForPath = useSlashForPath(storedWorkspace.folders);\n\n\tfor (const folder of storedWorkspace.folders) {\n\t\tconst folderURI = isRawFileWorkspaceFolder(folder) ? extUri.resolvePath(sourceConfigFolder, folder.path) : URI.parse(folder.uri);\n\t\tlet absolute;\n\t\tif (isFromUntitledWorkspace) {\n\t\t\tabsolute = false; // if it was an untitled workspace, try to make paths relative\n\t\t} else {\n\t\t\tabsolute = !isRawFileWorkspaceFolder(folder) || isAbsolute(folder.path); // for existing workspaces, preserve whether a path was absolute or relative\n\t\t}\n\t\trewrittenFolders.push(getStoredWorkspaceFolder(folderURI, absolute, folder.name, targetConfigFolder, slashForPath, extUri));\n\t}\n\n\t// Preserve as much of the existing workspace as possible by using jsonEdit\n\t// and only changing the folders portion.\n\tconst formattingOptions: FormattingOptions = { insertSpaces: false, tabSize: 4, eol: (isLinux || isMacintosh) ? '\\n' : '\\r\\n' };\n\tconst edits = jsonEdit.setProperty(rawWorkspaceContents, ['folders'], rewrittenFolders, formattingOptions);\n\tlet newContent = jsonEdit.applyEdits(rawWorkspaceContents, edits);\n\n\tif (isEqualAuthority(storedWorkspace.remoteAuthority, getRemoteAuthority(targetConfigPathURI))) {\n\t\t// unsaved remote workspaces have the remoteAuthority set. Remove it when no longer nexessary.\n\t\tnewContent = jsonEdit.applyEdits(newContent, jsonEdit.removeProperty(newContent, ['remoteAuthority'], formattingOptions));\n\t}\n\n\treturn newContent;\n}\n\nfunction doParseStoredWorkspace(path: URI, contents: string): IStoredWorkspace {\n\n\t// Parse workspace file\n\tlet storedWorkspace: IStoredWorkspace = json.parse(contents); // use fault tolerant parser\n\n\t// Filter out folders which do not have a path or uri set\n\tif (storedWorkspace && Array.isArray(storedWorkspace.folders)) {\n\t\tstoredWorkspace.folders = storedWorkspace.folders.filter(folder => isStoredWorkspaceFolder(folder));\n\t} else {\n\t\tthrow new Error(`${path} looks like an invalid workspace file.`);\n\t}\n\n\treturn storedWorkspace;\n}\n\nexport function useSlashForPath(storedFolders: IStoredWorkspaceFolder[]): boolean {\n\tif (isWindows) {\n\t\treturn storedFolders.some(folder => isRawFileWorkspaceFolder(folder) && folder.path.indexOf('/') >= 0);\n\t}\n\n\treturn true;\n}\n\n//#endregion\n\n//#region Workspace Storage\n\ninterface ISerializedRecentWorkspace {\n\tworkspace: {\n\t\tid: string;\n\t\tconfigPath: string;\n\t}\n\tlabel?: string;\n\tremoteAuthority?: string;\n}\n\ninterface ISerializedRecentFolder {\n\tfolderUri: string;\n\tlabel?: string;\n\tremoteAuthority?: string;\n}\n\ninterface ISerializedRecentFile {\n\tfileUri: string;\n\tlabel?: string;\n\tremoteAuthority?: string;\n}\n\ninterface ISerializedRecentlyOpenedLegacy {\n\tworkspaces3: Array<{ id: string; configURIPath: string; } | string>; // workspace or URI.toString() // added in 1.32\n\tworkspaceLabels?: Array<string | null>; // added in 1.33\n\tfiles2: string[]; // files as URI.toString() // added in 1.32\n\tfileLabels?: Array<string | null>; // added in 1.33\n}\n\ninterface ISerializedRecentlyOpened {\n\tentries: Array<ISerializedRecentWorkspace | ISerializedRecentFolder | ISerializedRecentFile>; // since 1.55\n}\n\nexport type RecentlyOpenedStorageData = object;\n\nfunction isSerializedRecentWorkspace(data: any): data is ISerializedRecentWorkspace {\n\treturn data.workspace && typeof data.workspace === 'object' && typeof data.workspace.id === 'string' && typeof data.workspace.configPath === 'string';\n}\n\nfunction isSerializedRecentFolder(data: any): data is ISerializedRecentFolder {\n\treturn typeof data.folderUri === 'string';\n}\n\nfunction isSerializedRecentFile(data: any): data is ISerializedRecentFile {\n\treturn typeof data.fileUri === 'string';\n}\n\n\nexport function restoreRecentlyOpened(data: RecentlyOpenedStorageData | undefined, logService: ILogService): IRecentlyOpened {\n\tconst result: IRecentlyOpened = { workspaces: [], files: [] };\n\tif (data) {\n\t\tconst restoreGracefully = function <T>(entries: T[], func: (entry: T, index: number) => void) {\n\t\t\tfor (let i = 0; i < entries.length; i++) {\n\t\t\t\ttry {\n\t\t\t\t\tfunc(entries[i], i);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tlogService.warn(`Error restoring recent entry ${JSON.stringify(entries[i])}: ${e.toString()}. Skip entry.`);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tconst storedRecents = data as ISerializedRecentlyOpened;\n\t\tif (Array.isArray(storedRecents.entries)) {\n\t\t\trestoreGracefully(storedRecents.entries, (entry) => {\n\t\t\t\tconst label = entry.label;\n\t\t\t\tconst remoteAuthority = entry.remoteAuthority;\n\n\t\t\t\tif (isSerializedRecentWorkspace(entry)) {\n\t\t\t\t\tresult.workspaces.push({ label, remoteAuthority, workspace: { id: entry.workspace.id, configPath: URI.parse(entry.workspace.configPath) } });\n\t\t\t\t} else if (isSerializedRecentFolder(entry)) {\n\t\t\t\t\tresult.workspaces.push({ label, remoteAuthority, folderUri: URI.parse(entry.folderUri) });\n\t\t\t\t} else if (isSerializedRecentFile(entry)) {\n\t\t\t\t\tresult.files.push({ label, remoteAuthority, fileUri: URI.parse(entry.fileUri) });\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tconst storedRecents2 = data as ISerializedRecentlyOpenedLegacy;\n\t\t\tif (Array.isArray(storedRecents2.workspaces3)) {\n\t\t\t\trestoreGracefully(storedRecents2.workspaces3, (workspace, i) => {\n\t\t\t\t\tconst label: string | undefined = (Array.isArray(storedRecents2.workspaceLabels) && storedRecents2.workspaceLabels[i]) || undefined;\n\t\t\t\t\tif (typeof workspace === 'object' && typeof workspace.id === 'string' && typeof workspace.configURIPath === 'string') {\n\t\t\t\t\t\tresult.workspaces.push({ label, workspace: { id: workspace.id, configPath: URI.parse(workspace.configURIPath) } });\n\t\t\t\t\t} else if (typeof workspace === 'string') {\n\t\t\t\t\t\tresult.workspaces.push({ label, folderUri: URI.parse(workspace) });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (Array.isArray(storedRecents2.files2)) {\n\t\t\t\trestoreGracefully(storedRecents2.files2, (file, i) => {\n\t\t\t\t\tconst label: string | undefined = (Array.isArray(storedRecents2.fileLabels) && storedRecents2.fileLabels[i]) || undefined;\n\t\t\t\t\tif (typeof file === 'string') {\n\t\t\t\t\t\tresult.files.push({ label, fileUri: URI.parse(file) });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function toStoreData(recents: IRecentlyOpened): RecentlyOpenedStorageData {\n\tconst serialized: ISerializedRecentlyOpened = { entries: [] };\n\n\tfor (const recent of recents.workspaces) {\n\t\tif (isRecentFolder(recent)) {\n\t\t\tserialized.entries.push({ folderUri: recent.folderUri.toString(), label: recent.label, remoteAuthority: recent.remoteAuthority });\n\t\t} else {\n\t\t\tserialized.entries.push({ workspace: { id: recent.workspace.id, configPath: recent.workspace.configPath.toString() }, label: recent.label, remoteAuthority: recent.remoteAuthority });\n\t\t}\n\t}\n\n\tfor (const recent of recents.files) {\n\t\tserialized.entries.push({ fileUri: recent.fileUri.toString(), label: recent.label, remoteAuthority: recent.remoteAuthority });\n\t}\n\n\treturn serialized;\n}\n\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { IEmptyWindowBackupInfo } from 'vs/platform/backup/node/backup';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { isWorkspaceIdentifier, IWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\n\nexport const IBackupMainService = createDecorator<IBackupMainService>('backupMainService');\n\nexport interface IWorkspaceBackupInfo {\n\tworkspace: IWorkspaceIdentifier;\n\tremoteAuthority?: string;\n}\n\nexport function isWorkspaceBackupInfo(obj: unknown): obj is IWorkspaceBackupInfo {\n\tconst candidate = obj as IWorkspaceBackupInfo;\n\n\treturn candidate && isWorkspaceIdentifier(candidate.workspace);\n}\n\nexport interface IBackupMainService {\n\treadonly _serviceBrand: undefined;\n\n\tisHotExitEnabled(): boolean;\n\n\tgetWorkspaceBackups(): IWorkspaceBackupInfo[];\n\tgetFolderBackupPaths(): URI[];\n\tgetEmptyWindowBackupPaths(): IEmptyWindowBackupInfo[];\n\n\tregisterWorkspaceBackupSync(workspace: IWorkspaceBackupInfo, migrateFrom?: string): string;\n\tregisterFolderBackupSync(folderUri: URI): string;\n\tregisterEmptyWindowBackupSync(backupFolder?: string, remoteAuthority?: string): string;\n\n\tunregisterWorkspaceBackupSync(workspace: IWorkspaceIdentifier): void;\n\tunregisterFolderBackupSync(folderUri: URI): void;\n\tunregisterEmptyWindowBackupSync(backupFolder: string): void;\n\n\t/**\n\t * All folders or workspaces that are known to have\n\t * backups stored. This call is long running because\n\t * it checks for each backup location if any backups\n\t * are stored.\n\t */\n\tgetDirtyWorkspaces(): Promise<Array<IWorkspaceIdentifier | URI>>;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { BrowserWindow, dialog, FileFilter, MessageBoxOptions, MessageBoxReturnValue, OpenDialogOptions, OpenDialogReturnValue, SaveDialogOptions, SaveDialogReturnValue } from 'electron';\nimport { Queue } from 'vs/base/common/async';\nimport { hash } from 'vs/base/common/hash';\nimport { mnemonicButtonLabel } from 'vs/base/common/labels';\nimport { Disposable, dispose, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { normalizeNFC } from 'vs/base/common/normalization';\nimport { dirname } from 'vs/base/common/path';\nimport { isMacintosh } from 'vs/base/common/platform';\nimport { withNullAsUndefined } from 'vs/base/common/types';\nimport { Promises } from 'vs/base/node/pfs';\nimport { localize } from 'vs/nls';\nimport { INativeOpenDialogOptions } from 'vs/platform/dialogs/common/dialogs';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IStateMainService } from 'vs/platform/state/electron-main/state';\nimport { WORKSPACE_FILTER } from 'vs/platform/workspaces/common/workspaces';\n\nexport const IDialogMainService = createDecorator<IDialogMainService>('dialogMainService');\n\nexport interface IDialogMainService {\n\n\treadonly _serviceBrand: undefined;\n\n\tpickFileFolder(options: INativeOpenDialogOptions, window?: BrowserWindow): Promise<string[] | undefined>;\n\tpickFolder(options: INativeOpenDialogOptions, window?: BrowserWindow): Promise<string[] | undefined>;\n\tpickFile(options: INativeOpenDialogOptions, window?: BrowserWindow): Promise<string[] | undefined>;\n\tpickWorkspace(options: INativeOpenDialogOptions, window?: BrowserWindow): Promise<string[] | undefined>;\n\n\tshowMessageBox(options: MessageBoxOptions, window?: BrowserWindow): Promise<MessageBoxReturnValue>;\n\tshowSaveDialog(options: SaveDialogOptions, window?: BrowserWindow): Promise<SaveDialogReturnValue>;\n\tshowOpenDialog(options: OpenDialogOptions, window?: BrowserWindow): Promise<OpenDialogReturnValue>;\n}\n\ninterface IInternalNativeOpenDialogOptions extends INativeOpenDialogOptions {\n\tpickFolders?: boolean;\n\tpickFiles?: boolean;\n\n\ttitle: string;\n\tbuttonLabel?: string;\n\tfilters?: FileFilter[];\n}\n\nexport class DialogMainService implements IDialogMainService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate static readonly workingDirPickerStorageKey = 'pickerWorkingDir';\n\n\tprivate readonly windowFileDialogLocks = new Map<number, Set<number>>();\n\tprivate readonly windowDialogQueues = new Map<number, Queue<MessageBoxReturnValue | SaveDialogReturnValue | OpenDialogReturnValue>>();\n\tprivate readonly noWindowDialogueQueue = new Queue<MessageBoxReturnValue | SaveDialogReturnValue | OpenDialogReturnValue>();\n\n\tconstructor(\n\t\t@IStateMainService private readonly stateMainService: IStateMainService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t}\n\n\tpickFileFolder(options: INativeOpenDialogOptions, window?: BrowserWindow): Promise<string[] | undefined> {\n\t\treturn this.doPick({ ...options, pickFolders: true, pickFiles: true, title: localize('open', \"Open\") }, window);\n\t}\n\n\tpickFolder(options: INativeOpenDialogOptions, window?: BrowserWindow): Promise<string[] | undefined> {\n\t\treturn this.doPick({ ...options, pickFolders: true, title: localize('openFolder', \"Open Folder\") }, window);\n\t}\n\n\tpickFile(options: INativeOpenDialogOptions, window?: BrowserWindow): Promise<string[] | undefined> {\n\t\treturn this.doPick({ ...options, pickFiles: true, title: localize('openFile', \"Open File\") }, window);\n\t}\n\n\tpickWorkspace(options: INativeOpenDialogOptions, window?: BrowserWindow): Promise<string[] | undefined> {\n\t\tconst title = localize('openWorkspaceTitle', \"Open Workspace from File\");\n\t\tconst buttonLabel = mnemonicButtonLabel(localize({ key: 'openWorkspace', comment: ['&& denotes a mnemonic'] }, \"&&Open\"));\n\t\tconst filters = WORKSPACE_FILTER;\n\n\t\treturn this.doPick({ ...options, pickFiles: true, title, filters, buttonLabel }, window);\n\t}\n\n\tprivate async doPick(options: IInternalNativeOpenDialogOptions, window?: BrowserWindow): Promise<string[] | undefined> {\n\n\t\t// Ensure dialog options\n\t\tconst dialogOptions: OpenDialogOptions = {\n\t\t\ttitle: options.title,\n\t\t\tbuttonLabel: options.buttonLabel,\n\t\t\tfilters: options.filters\n\t\t};\n\n\t\t// Ensure defaultPath\n\t\tdialogOptions.defaultPath = options.defaultPath || this.stateMainService.getItem<string>(DialogMainService.workingDirPickerStorageKey);\n\n\t\t// Ensure properties\n\t\tif (typeof options.pickFiles === 'boolean' || typeof options.pickFolders === 'boolean') {\n\t\t\tdialogOptions.properties = undefined; // let it override based on the booleans\n\n\t\t\tif (options.pickFiles && options.pickFolders) {\n\t\t\t\tdialogOptions.properties = ['multiSelections', 'openDirectory', 'openFile', 'createDirectory'];\n\t\t\t}\n\t\t}\n\n\t\tif (!dialogOptions.properties) {\n\t\t\tdialogOptions.properties = ['multiSelections', options.pickFolders ? 'openDirectory' : 'openFile', 'createDirectory'];\n\t\t}\n\n\t\tif (isMacintosh) {\n\t\t\tdialogOptions.properties.push('treatPackageAsDirectory'); // always drill into .app files\n\t\t}\n\n\t\t// Show Dialog\n\t\tconst windowToUse = window || BrowserWindow.getFocusedWindow();\n\n\t\tconst result = await this.showOpenDialog(dialogOptions, withNullAsUndefined(windowToUse));\n\t\tif (result && result.filePaths && result.filePaths.length > 0) {\n\n\t\t\t// Remember path in storage for next time\n\t\t\tthis.stateMainService.setItem(DialogMainService.workingDirPickerStorageKey, dirname(result.filePaths[0]));\n\n\t\t\treturn result.filePaths;\n\t\t}\n\n\t\treturn;\n\t}\n\n\tprivate getWindowDialogQueue<T extends MessageBoxReturnValue | SaveDialogReturnValue | OpenDialogReturnValue>(window?: BrowserWindow): Queue<T> {\n\n\t\t// Queue message box requests per window so that one can show\n\t\t// after the other.\n\t\tif (window) {\n\t\t\tlet windowDialogQueue = this.windowDialogQueues.get(window.id);\n\t\t\tif (!windowDialogQueue) {\n\t\t\t\twindowDialogQueue = new Queue<MessageBoxReturnValue | SaveDialogReturnValue | OpenDialogReturnValue>();\n\t\t\t\tthis.windowDialogQueues.set(window.id, windowDialogQueue);\n\t\t\t}\n\n\t\t\treturn windowDialogQueue as unknown as Queue<T>;\n\t\t} else {\n\t\t\treturn this.noWindowDialogueQueue as unknown as Queue<T>;\n\t\t}\n\t}\n\n\tshowMessageBox(options: MessageBoxOptions, window?: BrowserWindow): Promise<MessageBoxReturnValue> {\n\t\treturn this.getWindowDialogQueue<MessageBoxReturnValue>(window).queue(async () => {\n\t\t\tif (window) {\n\t\t\t\treturn dialog.showMessageBox(window, options);\n\t\t\t}\n\n\t\t\treturn dialog.showMessageBox(options);\n\t\t});\n\t}\n\n\tasync showSaveDialog(options: SaveDialogOptions, window?: BrowserWindow): Promise<SaveDialogReturnValue> {\n\n\t\t// prevent duplicates of the same dialog queueing at the same time\n\t\tconst fileDialogLock = this.acquireFileDialogLock(options, window);\n\t\tif (!fileDialogLock) {\n\t\t\tthis.logService.error('[DialogMainService]: file save dialog is already or will be showing for the window with the same configuration');\n\n\t\t\treturn { canceled: true };\n\t\t}\n\n\t\ttry {\n\t\t\treturn await this.getWindowDialogQueue<SaveDialogReturnValue>(window).queue(async () => {\n\t\t\t\tlet result: SaveDialogReturnValue;\n\t\t\t\tif (window) {\n\t\t\t\t\tresult = await dialog.showSaveDialog(window, options);\n\t\t\t\t} else {\n\t\t\t\t\tresult = await dialog.showSaveDialog(options);\n\t\t\t\t}\n\n\t\t\t\tresult.filePath = this.normalizePath(result.filePath);\n\n\t\t\t\treturn result;\n\t\t\t});\n\t\t} finally {\n\t\t\tdispose(fileDialogLock);\n\t\t}\n\t}\n\n\tprivate normalizePath(path: string): string;\n\tprivate normalizePath(path: string | undefined): string | undefined;\n\tprivate normalizePath(path: string | undefined): string | undefined {\n\t\tif (path && isMacintosh) {\n\t\t\tpath = normalizeNFC(path); // macOS only: normalize paths to NFC form\n\t\t}\n\n\t\treturn path;\n\t}\n\n\tprivate normalizePaths(paths: string[]): string[] {\n\t\treturn paths.map(path => this.normalizePath(path));\n\t}\n\n\tasync showOpenDialog(options: OpenDialogOptions, window?: BrowserWindow): Promise<OpenDialogReturnValue> {\n\n\t\t// Ensure the path exists (if provided)\n\t\tif (options.defaultPath) {\n\t\t\tconst pathExists = await Promises.exists(options.defaultPath);\n\t\t\tif (!pathExists) {\n\t\t\t\toptions.defaultPath = undefined;\n\t\t\t}\n\t\t}\n\n\t\t// prevent duplicates of the same dialog queueing at the same time\n\t\tconst fileDialogLock = this.acquireFileDialogLock(options, window);\n\t\tif (!fileDialogLock) {\n\t\t\tthis.logService.error('[DialogMainService]: file open dialog is already or will be showing for the window with the same configuration');\n\n\t\t\treturn { canceled: true, filePaths: [] };\n\t\t}\n\n\t\ttry {\n\t\t\treturn await this.getWindowDialogQueue<OpenDialogReturnValue>(window).queue(async () => {\n\t\t\t\tlet result: OpenDialogReturnValue;\n\t\t\t\tif (window) {\n\t\t\t\t\tresult = await dialog.showOpenDialog(window, options);\n\t\t\t\t} else {\n\t\t\t\t\tresult = await dialog.showOpenDialog(options);\n\t\t\t\t}\n\n\t\t\t\tresult.filePaths = this.normalizePaths(result.filePaths);\n\n\t\t\t\treturn result;\n\t\t\t});\n\t\t} finally {\n\t\t\tdispose(fileDialogLock);\n\t\t}\n\t}\n\n\tprivate acquireFileDialogLock(options: SaveDialogOptions | OpenDialogOptions, window?: BrowserWindow): IDisposable | undefined {\n\n\t\t// if no window is provided, allow as many dialogs as\n\t\t// needed since we consider them not modal per window\n\t\tif (!window) {\n\t\t\treturn Disposable.None;\n\t\t}\n\n\t\t// if a window is provided, only allow a single dialog\n\t\t// at the same time because dialogs are modal and we\n\t\t// do not want to open one dialog after the other\n\t\t// (https://github.com/microsoft/vscode/issues/114432)\n\t\t// we figure this out by `hashing` the configuration\n\t\t// options for the dialog to prevent duplicates\n\n\t\tlet windowFileDialogLocks = this.windowFileDialogLocks.get(window.id);\n\t\tif (!windowFileDialogLocks) {\n\t\t\twindowFileDialogLocks = new Set();\n\t\t\tthis.windowFileDialogLocks.set(window.id, windowFileDialogLocks);\n\t\t}\n\n\t\tconst optionsHash = hash(options);\n\t\tif (windowFileDialogLocks.has(optionsHash)) {\n\t\t\treturn undefined; // prevent duplicates, return\n\t\t}\n\n\t\twindowFileDialogLocks.add(optionsHash);\n\n\t\treturn toDisposable(() => {\n\t\t\twindowFileDialogLocks?.delete(optionsHash);\n\n\t\t\t// if the window has no more dialog locks, delete it from the set of locks\n\t\t\tif (windowFileDialogLocks?.size === 0) {\n\t\t\t\tthis.windowFileDialogLocks.delete(window.id);\n\t\t\t}\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IBaseSerializableStorageRequest, ISerializableItemsChangeEvent, ISerializableUpdateRequest, Key, Value } from 'vs/platform/storage/common/storageIpc';\nimport { IStorageChangeEvent, IStorageMain } from 'vs/platform/storage/electron-main/storageMain';\nimport { IStorageMainService } from 'vs/platform/storage/electron-main/storageMainService';\nimport { IEmptyWorkspaceIdentifier, ISingleFolderWorkspaceIdentifier, IWorkspaceIdentifier, reviveIdentifier } from 'vs/platform/workspaces/common/workspaces';\n\nexport class StorageDatabaseChannel extends Disposable implements IServerChannel {\n\n\tprivate static readonly STORAGE_CHANGE_DEBOUNCE_TIME = 100;\n\n\tprivate readonly _onDidChangeGlobalStorage = this._register(new Emitter<ISerializableItemsChangeEvent>());\n\tprivate readonly onDidChangeGlobalStorage = this._onDidChangeGlobalStorage.event;\n\n\tconstructor(\n\t\tprivate logService: ILogService,\n\t\tprivate storageMainService: IStorageMainService\n\t) {\n\t\tsuper();\n\n\t\tthis.registerGlobalStorageListeners();\n\t}\n\n\t//#region Global Storage Change Events\n\n\tprivate registerGlobalStorageListeners(): void {\n\n\t\t// Listen for changes in global storage to send to listeners\n\t\t// that are listening. Use a debouncer to reduce IPC traffic.\n\t\tthis._register(Event.debounce(this.storageMainService.globalStorage.onDidChangeStorage, (prev: IStorageChangeEvent[] | undefined, cur: IStorageChangeEvent) => {\n\t\t\tif (!prev) {\n\t\t\t\tprev = [cur];\n\t\t\t} else {\n\t\t\t\tprev.push(cur);\n\t\t\t}\n\n\t\t\treturn prev;\n\t\t}, StorageDatabaseChannel.STORAGE_CHANGE_DEBOUNCE_TIME)(events => {\n\t\t\tif (events.length) {\n\t\t\t\tthis._onDidChangeGlobalStorage.fire(this.serializeGlobalStorageEvents(events));\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate serializeGlobalStorageEvents(events: IStorageChangeEvent[]): ISerializableItemsChangeEvent {\n\t\tconst changed = new Map<Key, Value>();\n\t\tconst deleted = new Set<Key>();\n\t\tevents.forEach(event => {\n\t\t\tconst existing = this.storageMainService.globalStorage.get(event.key);\n\t\t\tif (typeof existing === 'string') {\n\t\t\t\tchanged.set(event.key, existing);\n\t\t\t} else {\n\t\t\t\tdeleted.add(event.key);\n\t\t\t}\n\t\t});\n\n\t\treturn {\n\t\t\tchanged: Array.from(changed.entries()),\n\t\t\tdeleted: Array.from(deleted.values())\n\t\t};\n\t}\n\n\tlisten(_: unknown, event: string): Event<any> {\n\t\tswitch (event) {\n\t\t\tcase 'onDidChangeGlobalStorage': return this.onDidChangeGlobalStorage;\n\t\t}\n\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\t//#endregion\n\n\tasync call(_: unknown, command: string, arg: IBaseSerializableStorageRequest): Promise<any> {\n\t\tconst workspace = reviveIdentifier(arg.workspace);\n\n\t\t// Get storage to be ready\n\t\tconst storage = await this.withStorageInitialized(workspace);\n\n\t\t// handle call\n\t\tswitch (command) {\n\t\t\tcase 'getItems': {\n\t\t\t\treturn Array.from(storage.items.entries());\n\t\t\t}\n\n\t\t\tcase 'updateItems': {\n\t\t\t\tconst items: ISerializableUpdateRequest = arg;\n\n\t\t\t\tif (items.insert) {\n\t\t\t\t\tfor (const [key, value] of items.insert) {\n\t\t\t\t\t\tstorage.set(key, value);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (items.delete) {\n\t\t\t\t\titems.delete.forEach(key => storage.delete(key));\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tcase 'close': {\n\n\t\t\t\t// We only allow to close workspace scoped storage because\n\t\t\t\t// global storage is shared across all windows and closes\n\t\t\t\t// only on shutdown.\n\t\t\t\tif (workspace) {\n\t\t\t\t\treturn storage.close();\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error(`Call not found: ${command}`);\n\t\t}\n\t}\n\n\tprivate async withStorageInitialized(workspace: IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | IEmptyWorkspaceIdentifier | undefined): Promise<IStorageMain> {\n\t\tconst storage = workspace ? this.storageMainService.workspaceStorage(workspace) : this.storageMainService.globalStorage;\n\n\t\ttry {\n\t\t\tawait storage.init();\n\t\t} catch (error) {\n\t\t\tthis.logService.error(`StorageIPC#init: Unable to init ${workspace ? 'workspace' : 'global'} storage due to ${error}`);\n\t\t}\n\n\t\treturn storage;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { join } from 'vs/base/common/path';\nimport { Promises } from 'vs/base/node/pfs';\nimport { InMemoryStorageDatabase, IStorage, Storage, StorageHint } from 'vs/base/parts/storage/common/storage';\nimport { ISQLiteStorageDatabaseLoggingOptions, SQLiteStorageDatabase } from 'vs/base/parts/storage/node/storage';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { ILogService, LogLevel } from 'vs/platform/log/common/log';\nimport { IS_NEW_KEY } from 'vs/platform/storage/common/storage';\nimport { currentSessionDateStorageKey, firstSessionDateStorageKey, lastSessionDateStorageKey } from 'vs/platform/telemetry/common/telemetry';\nimport { IEmptyWorkspaceIdentifier, ISingleFolderWorkspaceIdentifier, isSingleFolderWorkspaceIdentifier, isWorkspaceIdentifier, IWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\n\nexport interface IStorageMainOptions {\n\n\t/**\n\t * If enabled, storage will not persist to disk\n\t * but into memory.\n\t */\n\tuseInMemoryStorage?: boolean;\n}\n\n/**\n * Provides access to global and workspace storage from the\n * electron-main side that is the owner of all storage connections.\n */\nexport interface IStorageMain extends IDisposable {\n\n\t/**\n\t * Emitted whenever data is updated or deleted.\n\t */\n\treadonly onDidChangeStorage: Event<IStorageChangeEvent>;\n\n\t/**\n\t * Emitted when the storage is closed.\n\t */\n\treadonly onDidCloseStorage: Event<void>;\n\n\t/**\n\t * Access to all cached items of this storage service.\n\t */\n\treadonly items: Map<string, string>;\n\n\t/**\n\t * Required call to ensure the service can be used.\n\t */\n\tinit(): Promise<void>;\n\n\t/**\n\t * Retrieve an element stored with the given key from storage. Use\n\t * the provided defaultValue if the element is null or undefined.\n\t */\n\tget(key: string, fallbackValue: string): string;\n\tget(key: string, fallbackValue?: string): string | undefined;\n\n\t/**\n\t * Store a string value under the given key to storage. The value will\n\t * be converted to a string.\n\t */\n\tset(key: string, value: string | boolean | number | undefined | null): void;\n\n\t/**\n\t * Delete an element stored under the provided key from storage.\n\t */\n\tdelete(key: string): void;\n\n\t/**\n\t * Close the storage connection.\n\t */\n\tclose(): Promise<void>;\n}\n\nexport interface IStorageChangeEvent {\n\tkey: string;\n}\n\nabstract class BaseStorageMain extends Disposable implements IStorageMain {\n\n\tprotected readonly _onDidChangeStorage = this._register(new Emitter<IStorageChangeEvent>());\n\treadonly onDidChangeStorage = this._onDidChangeStorage.event;\n\n\tprivate readonly _onDidCloseStorage = this._register(new Emitter<void>());\n\treadonly onDidCloseStorage = this._onDidCloseStorage.event;\n\n\tprivate storage: IStorage = new Storage(new InMemoryStorageDatabase()); // storage is in-memory until initialized\n\n\tprivate initializePromise: Promise<void> | undefined = undefined;\n\n\tconstructor(\n\t\tprotected readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t}\n\n\tinit(): Promise<void> {\n\t\tif (!this.initializePromise) {\n\t\t\tthis.initializePromise = (async () => {\n\t\t\t\ttry {\n\n\t\t\t\t\t// Create storage via subclasses\n\t\t\t\t\tconst storage = await this.doCreate();\n\n\t\t\t\t\t// Replace our in-memory storage with the real\n\t\t\t\t\t// once as soon as possible without awaiting\n\t\t\t\t\t// the init call.\n\t\t\t\t\tthis.storage.dispose();\n\t\t\t\t\tthis.storage = storage;\n\n\t\t\t\t\t// Re-emit storage changes via event\n\t\t\t\t\tthis._register(storage.onDidChangeStorage(key => this._onDidChangeStorage.fire({ key })));\n\n\t\t\t\t\t// Await storage init\n\t\t\t\t\tawait this.doInit(storage);\n\n\t\t\t\t\t// Ensure we track wether storage is new or not\n\t\t\t\t\tconst isNewStorage = storage.getBoolean(IS_NEW_KEY);\n\t\t\t\t\tif (isNewStorage === undefined) {\n\t\t\t\t\t\tstorage.set(IS_NEW_KEY, true);\n\t\t\t\t\t} else if (isNewStorage) {\n\t\t\t\t\t\tstorage.set(IS_NEW_KEY, false);\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthis.logService.error(`StorageMain#initialize(): Unable to init storage due to ${error}`);\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\n\t\treturn this.initializePromise;\n\t}\n\n\tprotected createLoggingOptions(): ISQLiteStorageDatabaseLoggingOptions {\n\t\treturn {\n\t\t\tlogTrace: (this.logService.getLevel() === LogLevel.Trace) ? msg => this.logService.trace(msg) : undefined,\n\t\t\tlogError: error => this.logService.error(error)\n\t\t};\n\t}\n\n\tprotected doInit(storage: IStorage): Promise<void> {\n\t\treturn storage.init();\n\t}\n\n\tprotected abstract doCreate(): Promise<IStorage>;\n\n\tget items(): Map<string, string> { return this.storage.items; }\n\n\tget(key: string, fallbackValue: string): string;\n\tget(key: string, fallbackValue?: string): string | undefined;\n\tget(key: string, fallbackValue?: string): string | undefined {\n\t\treturn this.storage.get(key, fallbackValue);\n\t}\n\n\tset(key: string, value: string | boolean | number | undefined | null): Promise<void> {\n\t\treturn this.storage.set(key, value);\n\t}\n\n\tdelete(key: string): Promise<void> {\n\t\treturn this.storage.delete(key);\n\t}\n\n\tasync close(): Promise<void> {\n\n\t\t// Ensure we are not accidentally leaving\n\t\t// a pending initialized storage behind in\n\t\t// case close() was called before init()\n\t\t// finishes\n\t\tif (this.initializePromise) {\n\t\t\tawait this.initializePromise;\n\t\t}\n\n\t\t// Propagate to storage lib\n\t\tawait this.storage.close();\n\n\t\t// Signal as event\n\t\tthis._onDidCloseStorage.fire();\n\t}\n}\n\nexport class GlobalStorageMain extends BaseStorageMain implements IStorageMain {\n\n\tprivate static readonly STORAGE_NAME = 'state.vscdb';\n\n\tconstructor(\n\t\tprivate readonly options: IStorageMainOptions,\n\t\tlogService: ILogService,\n\t\tprivate readonly environmentService: IEnvironmentService\n\t) {\n\t\tsuper(logService);\n\t}\n\n\tprotected async doCreate(): Promise<IStorage> {\n\t\tlet storagePath: string;\n\t\tif (this.options.useInMemoryStorage) {\n\t\t\tstoragePath = SQLiteStorageDatabase.IN_MEMORY_PATH;\n\t\t} else {\n\t\t\tstoragePath = join(this.environmentService.globalStorageHome.fsPath, GlobalStorageMain.STORAGE_NAME);\n\t\t}\n\n\t\treturn new Storage(new SQLiteStorageDatabase(storagePath, {\n\t\t\tlogging: this.createLoggingOptions()\n\t\t}));\n\t}\n\n\tprotected override async doInit(storage: IStorage): Promise<void> {\n\t\tawait super.doInit(storage);\n\n\t\t// Apply global telemetry values as part of the initialization\n\t\tthis.updateTelemetryState(storage);\n\t}\n\n\tprivate updateTelemetryState(storage: IStorage): void {\n\n\t\t// First session date (once)\n\t\tconst firstSessionDate = storage.get(firstSessionDateStorageKey, undefined);\n\t\tif (firstSessionDate === undefined) {\n\t\t\tstorage.set(firstSessionDateStorageKey, new Date().toUTCString());\n\t\t}\n\n\t\t// Last / current session (always)\n\t\t// previous session date was the \"current\" one at that time\n\t\t// current session date is \"now\"\n\t\tconst lastSessionDate = storage.get(currentSessionDateStorageKey, undefined);\n\t\tconst currentSessionDate = new Date().toUTCString();\n\t\tstorage.set(lastSessionDateStorageKey, typeof lastSessionDate === 'undefined' ? null : lastSessionDate);\n\t\tstorage.set(currentSessionDateStorageKey, currentSessionDate);\n\t}\n}\n\nexport class WorkspaceStorageMain extends BaseStorageMain implements IStorageMain {\n\n\tprivate static readonly WORKSPACE_STORAGE_NAME = 'state.vscdb';\n\tprivate static readonly WORKSPACE_META_NAME = 'workspace.json';\n\n\tconstructor(\n\t\tprivate workspace: IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | IEmptyWorkspaceIdentifier,\n\t\tprivate readonly options: IStorageMainOptions,\n\t\tlogService: ILogService,\n\t\tprivate readonly environmentService: IEnvironmentService\n\t) {\n\t\tsuper(logService);\n\t}\n\n\tprotected async doCreate(): Promise<IStorage> {\n\t\tconst { storageFilePath, wasCreated } = await this.prepareWorkspaceStorageFolder();\n\n\t\treturn new Storage(new SQLiteStorageDatabase(storageFilePath, {\n\t\t\tlogging: this.createLoggingOptions()\n\t\t}), { hint: wasCreated ? StorageHint.STORAGE_DOES_NOT_EXIST : undefined });\n\t}\n\n\tprivate async prepareWorkspaceStorageFolder(): Promise<{ storageFilePath: string, wasCreated: boolean }> {\n\n\t\t// Return early if using inMemory storage\n\t\tif (this.options.useInMemoryStorage) {\n\t\t\treturn { storageFilePath: SQLiteStorageDatabase.IN_MEMORY_PATH, wasCreated: true };\n\t\t}\n\n\t\t// Otherwise, ensure the storage folder exists on disk\n\t\tconst workspaceStorageFolderPath = join(this.environmentService.workspaceStorageHome.fsPath, this.workspace.id);\n\t\tconst workspaceStorageDatabasePath = join(workspaceStorageFolderPath, WorkspaceStorageMain.WORKSPACE_STORAGE_NAME);\n\n\t\tconst storageExists = await Promises.exists(workspaceStorageFolderPath);\n\t\tif (storageExists) {\n\t\t\treturn { storageFilePath: workspaceStorageDatabasePath, wasCreated: false };\n\t\t}\n\n\t\t// Ensure storage folder exists\n\t\tawait Promises.mkdir(workspaceStorageFolderPath, { recursive: true });\n\n\t\t// Write metadata into folder (but do not await)\n\t\tthis.ensureWorkspaceStorageFolderMeta(workspaceStorageFolderPath);\n\n\t\treturn { storageFilePath: workspaceStorageDatabasePath, wasCreated: true };\n\t}\n\n\tprivate async ensureWorkspaceStorageFolderMeta(workspaceStorageFolderPath: string): Promise<void> {\n\t\tlet meta: object | undefined = undefined;\n\t\tif (isSingleFolderWorkspaceIdentifier(this.workspace)) {\n\t\t\tmeta = { folder: this.workspace.uri.toString() };\n\t\t} else if (isWorkspaceIdentifier(this.workspace)) {\n\t\t\tmeta = { workspace: this.workspace.configPath.toString() };\n\t\t}\n\n\t\tif (meta) {\n\t\t\ttry {\n\t\t\t\tconst workspaceStorageMetaPath = join(workspaceStorageFolderPath, WorkspaceStorageMain.WORKSPACE_META_NAME);\n\t\t\t\tconst storageExists = await Promises.exists(workspaceStorageMetaPath);\n\t\t\t\tif (!storageExists) {\n\t\t\t\t\tawait Promises.writeFile(workspaceStorageMetaPath, JSON.stringify(meta, undefined, 2));\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.error(`StorageMain#ensureWorkspaceStorageFolderMeta(): Unable to create workspace storage metadata due to ${error}`);\n\t\t\t}\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { once } from 'vs/base/common/functional';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ILifecycleMainService, LifecycleMainPhase } from 'vs/platform/lifecycle/electron-main/lifecycleMainService';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { GlobalStorageMain, IStorageMain, IStorageMainOptions, WorkspaceStorageMain } from 'vs/platform/storage/electron-main/storageMain';\nimport { IEmptyWorkspaceIdentifier, ISingleFolderWorkspaceIdentifier, IWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\n\nexport const IStorageMainService = createDecorator<IStorageMainService>('storageMainService');\n\nexport interface IStorageMainService {\n\n\treadonly _serviceBrand: undefined;\n\n\t/**\n\t * Provides access to the global storage shared across all windows.\n\t */\n\treadonly globalStorage: IStorageMain;\n\n\t/**\n\t * Provides access to the workspace storage specific to a single window.\n\t */\n\tworkspaceStorage(workspace: IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | IEmptyWorkspaceIdentifier): IStorageMain;\n}\n\nexport class StorageMainService extends Disposable implements IStorageMainService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IEnvironmentService private readonly environmentService: IEnvironmentService,\n\t\t@ILifecycleMainService private readonly lifecycleMainService: ILifecycleMainService\n\t) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprotected getStorageOptions(): IStorageMainOptions {\n\t\treturn {\n\t\t\tuseInMemoryStorage: !!this.environmentService.extensionTestsLocationURI // no storage during extension tests!\n\t\t};\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// Global Storage: Warmup when any window opens\n\t\t(async () => {\n\t\t\tawait this.lifecycleMainService.when(LifecycleMainPhase.AfterWindowOpen);\n\n\t\t\tthis.globalStorage.init();\n\t\t})();\n\n\t\t// Workspace Storage: Warmup when related window with workspace loads\n\t\tthis._register(this.lifecycleMainService.onWillLoadWindow(async e => {\n\t\t\tif (e.workspace) {\n\t\t\t\tthis.workspaceStorage(e.workspace).init();\n\t\t\t}\n\t\t}));\n\n\t\t// All Storage: Close when shutting down\n\t\tthis._register(this.lifecycleMainService.onWillShutdown(e => {\n\n\t\t\t// Global Storage\n\t\t\te.join(this.globalStorage.close());\n\n\t\t\t// Workspace Storage(s)\n\t\t\tfor (const [, storage] of this.mapWorkspaceToStorage) {\n\t\t\t\te.join(storage.close());\n\t\t\t}\n\t\t}));\n\t}\n\n\t//#region Global Storage\n\n\treadonly globalStorage = this.createGlobalStorage();\n\n\tprivate createGlobalStorage(): IStorageMain {\n\t\tif (this.globalStorage) {\n\t\t\treturn this.globalStorage; // only once\n\t\t}\n\n\t\tthis.logService.trace(`StorageMainService: creating global storage`);\n\n\t\tconst globalStorage = new GlobalStorageMain(this.getStorageOptions(), this.logService, this.environmentService);\n\n\t\tonce(globalStorage.onDidCloseStorage)(() => {\n\t\t\tthis.logService.trace(`StorageMainService: closed global storage`);\n\t\t});\n\n\t\treturn globalStorage;\n\t}\n\n\t//#endregion\n\n\n\t//#region Workspace Storage\n\n\tprivate readonly mapWorkspaceToStorage = new Map<string, IStorageMain>();\n\n\tprivate createWorkspaceStorage(workspace: IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | IEmptyWorkspaceIdentifier): IStorageMain {\n\t\tconst workspaceStorage = new WorkspaceStorageMain(workspace, this.getStorageOptions(), this.logService, this.environmentService);\n\n\t\treturn workspaceStorage;\n\t}\n\n\tworkspaceStorage(workspace: IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | IEmptyWorkspaceIdentifier): IStorageMain {\n\t\tlet workspaceStorage = this.mapWorkspaceToStorage.get(workspace.id);\n\t\tif (!workspaceStorage) {\n\t\t\tthis.logService.trace(`StorageMainService: creating workspace storage (${workspace.id})`);\n\n\t\t\tworkspaceStorage = this.createWorkspaceStorage(workspace);\n\t\t\tthis.mapWorkspaceToStorage.set(workspace.id, workspaceStorage);\n\n\t\t\tonce(workspaceStorage.onDidCloseStorage)(() => {\n\t\t\t\tthis.logService.trace(`StorageMainService: closed workspace storage (${workspace.id})`);\n\n\t\t\t\tthis.mapWorkspaceToStorage.delete(workspace.id);\n\t\t\t});\n\t\t}\n\n\t\treturn workspaceStorage;\n\t}\n\n\t//#endregion\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { extUriBiasedIgnorePathCase } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { ICodeWindow } from 'vs/platform/windows/electron-main/windows';\nimport { IResolvedWorkspace, ISingleFolderWorkspaceIdentifier, isSingleFolderWorkspaceIdentifier, isWorkspaceIdentifier, IWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\n\nexport function findWindowOnFile(windows: ICodeWindow[], fileUri: URI, localWorkspaceResolver: (workspace: IWorkspaceIdentifier) => IResolvedWorkspace | undefined): ICodeWindow | undefined {\n\n\t// First check for windows with workspaces that have a parent folder of the provided path opened\n\tfor (const window of windows) {\n\t\tconst workspace = window.openedWorkspace;\n\t\tif (isWorkspaceIdentifier(workspace)) {\n\t\t\tconst resolvedWorkspace = localWorkspaceResolver(workspace);\n\n\t\t\t// resolved workspace: folders are known and can be compared with\n\t\t\tif (resolvedWorkspace) {\n\t\t\t\tif (resolvedWorkspace.folders.some(folder => extUriBiasedIgnorePathCase.isEqualOrParent(fileUri, folder.uri))) {\n\t\t\t\t\treturn window;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// unresolved: can only compare with workspace location\n\t\t\telse {\n\t\t\t\tif (extUriBiasedIgnorePathCase.isEqualOrParent(fileUri, workspace.configPath)) {\n\t\t\t\t\treturn window;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Then go with single folder windows that are parent of the provided file path\n\tconst singleFolderWindowsOnFilePath = windows.filter(window => isSingleFolderWorkspaceIdentifier(window.openedWorkspace) && extUriBiasedIgnorePathCase.isEqualOrParent(fileUri, window.openedWorkspace.uri));\n\tif (singleFolderWindowsOnFilePath.length) {\n\t\treturn singleFolderWindowsOnFilePath.sort((windowA, windowB) => -((windowA.openedWorkspace as ISingleFolderWorkspaceIdentifier).uri.path.length - (windowB.openedWorkspace as ISingleFolderWorkspaceIdentifier).uri.path.length))[0];\n\t}\n\n\treturn undefined;\n}\n\nexport function findWindowOnWorkspaceOrFolder(windows: ICodeWindow[], folderOrWorkspaceConfigUri: URI): ICodeWindow | undefined {\n\n\tfor (const window of windows) {\n\n\t\t// check for workspace config path\n\t\tif (isWorkspaceIdentifier(window.openedWorkspace) && extUriBiasedIgnorePathCase.isEqual(window.openedWorkspace.configPath, folderOrWorkspaceConfigUri)) {\n\t\t\treturn window;\n\t\t}\n\n\t\t// check for folder path\n\t\tif (isSingleFolderWorkspaceIdentifier(window.openedWorkspace) && extUriBiasedIgnorePathCase.isEqual(window.openedWorkspace.uri, folderOrWorkspaceConfigUri)) {\n\t\t\treturn window;\n\t\t}\n\t}\n\n\treturn undefined;\n}\n\n\nexport function findWindowOnExtensionDevelopmentPath(windows: ICodeWindow[], extensionDevelopmentPaths: string[]): ICodeWindow | undefined {\n\n\tconst matches = (uriString: string): boolean => {\n\t\treturn extensionDevelopmentPaths.some(path => extUriBiasedIgnorePathCase.isEqual(URI.file(path), URI.file(uriString)));\n\t};\n\n\tfor (const window of windows) {\n\n\t\t// match on extension development path. the path can be one or more paths\n\t\t// so we check if any of the paths match on any of the provided ones\n\t\tif (window.config?.extensionDevelopmentPath?.some(path => matches(path))) {\n\t\t\treturn window;\n\t\t}\n\t}\n\n\treturn undefined;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { app, Display, screen } from 'electron';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { isMacintosh } from 'vs/base/common/platform';\nimport { extUriBiasedIgnorePathCase } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ILifecycleMainService } from 'vs/platform/lifecycle/electron-main/lifecycleMainService';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IStateMainService } from 'vs/platform/state/electron-main/state';\nimport { INativeWindowConfiguration, IWindowSettings } from 'vs/platform/windows/common/windows';\nimport { defaultWindowState, ICodeWindow, IWindowsMainService, IWindowState as IWindowUIState, WindowMode } from 'vs/platform/windows/electron-main/windows';\nimport { isSingleFolderWorkspaceIdentifier, isWorkspaceIdentifier, IWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\n\nexport interface IWindowState {\n\tworkspace?: IWorkspaceIdentifier;\n\tfolderUri?: URI;\n\tbackupPath?: string;\n\tremoteAuthority?: string;\n\tuiState: IWindowUIState;\n}\n\nexport interface IWindowsState {\n\tlastActiveWindow?: IWindowState;\n\tlastPluginDevelopmentHostWindow?: IWindowState;\n\topenedWindows: IWindowState[];\n}\n\ninterface INewWindowState extends IWindowUIState {\n\thasDefaultState?: boolean;\n}\n\ninterface ISerializedWindowsState {\n\treadonly lastActiveWindow?: ISerializedWindowState;\n\treadonly lastPluginDevelopmentHostWindow?: ISerializedWindowState;\n\treadonly openedWindows: ISerializedWindowState[];\n}\n\ninterface ISerializedWindowState {\n\treadonly workspaceIdentifier?: { id: string; configURIPath: string };\n\treadonly folder?: string;\n\treadonly backupPath?: string;\n\treadonly remoteAuthority?: string;\n\treadonly uiState: IWindowUIState;\n}\n\nexport class WindowsStateHandler extends Disposable {\n\n\tprivate static readonly windowsStateStorageKey = 'windowsState';\n\n\tget state() { return this._state; }\n\tprivate readonly _state = restoreWindowsState(this.stateMainService.getItem<ISerializedWindowsState>(WindowsStateHandler.windowsStateStorageKey));\n\n\tprivate lastClosedState: IWindowState | undefined = undefined;\n\n\tprivate shuttingDown = false;\n\n\tconstructor(\n\t\t@IWindowsMainService private readonly windowsMainService: IWindowsMainService,\n\t\t@IStateMainService private readonly stateMainService: IStateMainService,\n\t\t@ILifecycleMainService private readonly lifecycleMainService: ILifecycleMainService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// When a window looses focus, save all windows state. This allows to\n\t\t// prevent loss of window-state data when OS is restarted without properly\n\t\t// shutting down the application (https://github.com/microsoft/vscode/issues/87171)\n\t\tapp.on('browser-window-blur', () => {\n\t\t\tif (!this.shuttingDown) {\n\t\t\t\tthis.saveWindowsState();\n\t\t\t}\n\t\t});\n\n\t\t// Handle various lifecycle events around windows\n\t\tthis.lifecycleMainService.onBeforeCloseWindow(window => this.onBeforeCloseWindow(window));\n\t\tthis.lifecycleMainService.onBeforeShutdown(() => this.onBeforeShutdown());\n\t\tthis.windowsMainService.onDidChangeWindowsCount(e => {\n\t\t\tif (e.newCount - e.oldCount > 0) {\n\t\t\t\t// clear last closed window state when a new window opens. this helps on macOS where\n\t\t\t\t// otherwise closing the last window, opening a new window and then quitting would\n\t\t\t\t// use the state of the previously closed window when restarting.\n\t\t\t\tthis.lastClosedState = undefined;\n\t\t\t}\n\t\t});\n\n\t\t// try to save state before destroy because close will not fire\n\t\tthis.windowsMainService.onDidDestroyWindow(window => this.onBeforeCloseWindow(window));\n\t}\n\n\t// Note that onBeforeShutdown() and onBeforeCloseWindow() are fired in different order depending on the OS:\n\t// - macOS: since the app will not quit when closing the last window, you will always first get\n\t//          the onBeforeShutdown() event followed by N onBeforeCloseWindow() events for each window\n\t// - other: on other OS, closing the last window will quit the app so the order depends on the\n\t//          user interaction: closing the last window will first trigger onBeforeCloseWindow()\n\t//          and then onBeforeShutdown(). Using the quit action however will first issue onBeforeShutdown()\n\t//          and then onBeforeCloseWindow().\n\t//\n\t// Here is the behavior on different OS depending on action taken (Electron 1.7.x):\n\t//\n\t// Legend\n\t// -  quit(N): quit application with N windows opened\n\t// - close(1): close one window via the window close button\n\t// - closeAll: close all windows via the taskbar command\n\t// - onBeforeShutdown(N): number of windows reported in this event handler\n\t// - onBeforeCloseWindow(N, M): number of windows reported and quitRequested boolean in this event handler\n\t//\n\t// macOS\n\t// \t-     quit(1): onBeforeShutdown(1), onBeforeCloseWindow(1, true)\n\t// \t-     quit(2): onBeforeShutdown(2), onBeforeCloseWindow(2, true), onBeforeCloseWindow(2, true)\n\t// \t-     quit(0): onBeforeShutdown(0)\n\t// \t-    close(1): onBeforeCloseWindow(1, false)\n\t//\n\t// Windows\n\t// \t-     quit(1): onBeforeShutdown(1), onBeforeCloseWindow(1, true)\n\t// \t-     quit(2): onBeforeShutdown(2), onBeforeCloseWindow(2, true), onBeforeCloseWindow(2, true)\n\t// \t-    close(1): onBeforeCloseWindow(2, false)[not last window]\n\t// \t-    close(1): onBeforeCloseWindow(1, false), onBeforeShutdown(0)[last window]\n\t// \t- closeAll(2): onBeforeCloseWindow(2, false), onBeforeCloseWindow(2, false), onBeforeShutdown(0)\n\t//\n\t// Linux\n\t// \t-     quit(1): onBeforeShutdown(1), onBeforeCloseWindow(1, true)\n\t// \t-     quit(2): onBeforeShutdown(2), onBeforeCloseWindow(2, true), onBeforeCloseWindow(2, true)\n\t// \t-    close(1): onBeforeCloseWindow(2, false)[not last window]\n\t// \t-    close(1): onBeforeCloseWindow(1, false), onBeforeShutdown(0)[last window]\n\t// \t- closeAll(2): onBeforeCloseWindow(2, false), onBeforeCloseWindow(2, false), onBeforeShutdown(0)\n\t//\n\tprivate onBeforeShutdown(): void {\n\t\tthis.shuttingDown = true;\n\n\t\tthis.saveWindowsState();\n\t}\n\n\tprivate saveWindowsState(): void {\n\t\tconst currentWindowsState: IWindowsState = {\n\t\t\topenedWindows: [],\n\t\t\tlastPluginDevelopmentHostWindow: this._state.lastPluginDevelopmentHostWindow,\n\t\t\tlastActiveWindow: this.lastClosedState\n\t\t};\n\n\t\t// 1.) Find a last active window (pick any other first window otherwise)\n\t\tif (!currentWindowsState.lastActiveWindow) {\n\t\t\tlet activeWindow = this.windowsMainService.getLastActiveWindow();\n\t\t\tif (!activeWindow || activeWindow.isExtensionDevelopmentHost) {\n\t\t\t\tactiveWindow = this.windowsMainService.getWindows().find(window => !window.isExtensionDevelopmentHost);\n\t\t\t}\n\n\t\t\tif (activeWindow) {\n\t\t\t\tcurrentWindowsState.lastActiveWindow = this.toWindowState(activeWindow);\n\t\t\t}\n\t\t}\n\n\t\t// 2.) Find extension host window\n\t\tconst extensionHostWindow = this.windowsMainService.getWindows().find(window => window.isExtensionDevelopmentHost && !window.isExtensionTestHost);\n\t\tif (extensionHostWindow) {\n\t\t\tcurrentWindowsState.lastPluginDevelopmentHostWindow = this.toWindowState(extensionHostWindow);\n\t\t}\n\n\t\t// 3.) All windows (except extension host) for N >= 2 to support `restoreWindows: all` or for auto update\n\t\t//\n\t\t// Careful here: asking a window for its window state after it has been closed returns bogus values (width: 0, height: 0)\n\t\t// so if we ever want to persist the UI state of the last closed window (window count === 1), it has\n\t\t// to come from the stored lastClosedWindowState on Win/Linux at least\n\t\tif (this.windowsMainService.getWindowCount() > 1) {\n\t\t\tcurrentWindowsState.openedWindows = this.windowsMainService.getWindows().filter(window => !window.isExtensionDevelopmentHost).map(window => this.toWindowState(window));\n\t\t}\n\n\t\t// Persist\n\t\tconst state = getWindowsStateStoreData(currentWindowsState);\n\t\tthis.stateMainService.setItem(WindowsStateHandler.windowsStateStorageKey, state);\n\n\t\tif (this.shuttingDown) {\n\t\t\tthis.logService.trace('[WindowsStateHandler] onBeforeShutdown', state);\n\t\t}\n\t}\n\n\t// See note on #onBeforeShutdown() for details how these events are flowing\n\tprivate onBeforeCloseWindow(window: ICodeWindow): void {\n\t\tif (this.lifecycleMainService.quitRequested) {\n\t\t\treturn; // during quit, many windows close in parallel so let it be handled in the before-quit handler\n\t\t}\n\n\t\t// On Window close, update our stored UI state of this window\n\t\tconst state: IWindowState = this.toWindowState(window);\n\t\tif (window.isExtensionDevelopmentHost && !window.isExtensionTestHost) {\n\t\t\tthis._state.lastPluginDevelopmentHostWindow = state; // do not let test run window state overwrite our extension development state\n\t\t}\n\n\t\t// Any non extension host window with same workspace or folder\n\t\telse if (!window.isExtensionDevelopmentHost && window.openedWorkspace) {\n\t\t\tthis._state.openedWindows.forEach(openedWindow => {\n\t\t\t\tconst sameWorkspace = isWorkspaceIdentifier(window.openedWorkspace) && openedWindow.workspace?.id === window.openedWorkspace.id;\n\t\t\t\tconst sameFolder = isSingleFolderWorkspaceIdentifier(window.openedWorkspace) && openedWindow.folderUri && extUriBiasedIgnorePathCase.isEqual(openedWindow.folderUri, window.openedWorkspace.uri);\n\n\t\t\t\tif (sameWorkspace || sameFolder) {\n\t\t\t\t\topenedWindow.uiState = state.uiState;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// On Windows and Linux closing the last window will trigger quit. Since we are storing all UI state\n\t\t// before quitting, we need to remember the UI state of this window to be able to persist it.\n\t\t// On macOS we keep the last closed window state ready in case the user wants to quit right after or\n\t\t// wants to open another window, in which case we use this state over the persisted one.\n\t\tif (this.windowsMainService.getWindowCount() === 1) {\n\t\t\tthis.lastClosedState = state;\n\t\t}\n\t}\n\n\tprivate toWindowState(window: ICodeWindow): IWindowState {\n\t\treturn {\n\t\t\tworkspace: isWorkspaceIdentifier(window.openedWorkspace) ? window.openedWorkspace : undefined,\n\t\t\tfolderUri: isSingleFolderWorkspaceIdentifier(window.openedWorkspace) ? window.openedWorkspace.uri : undefined,\n\t\t\tbackupPath: window.backupPath,\n\t\t\tremoteAuthority: window.remoteAuthority,\n\t\t\tuiState: window.serializeWindowState()\n\t\t};\n\t}\n\n\tgetNewWindowState(configuration: INativeWindowConfiguration): INewWindowState {\n\t\tconst state = this.doGetNewWindowState(configuration);\n\t\tconst windowConfig = this.configurationService.getValue<IWindowSettings | undefined>('window');\n\n\t\t// Window state is not from a previous session: only allow fullscreen if we inherit it or user wants fullscreen\n\t\tlet allowFullscreen: boolean;\n\t\tif (state.hasDefaultState) {\n\t\t\tallowFullscreen = !!(windowConfig?.newWindowDimensions && ['fullscreen', 'inherit', 'offset'].indexOf(windowConfig.newWindowDimensions) >= 0);\n\t\t}\n\n\t\t// Window state is from a previous session: only allow fullscreen when we got updated or user wants to restore\n\t\telse {\n\t\t\tallowFullscreen = !!(this.lifecycleMainService.wasRestarted || windowConfig?.restoreFullscreen);\n\n\t\t\tif (allowFullscreen && isMacintosh && this.windowsMainService.getWindows().some(window => window.isFullScreen)) {\n\t\t\t\t// macOS: Electron does not allow to restore multiple windows in\n\t\t\t\t// fullscreen. As such, if we already restored a window in that\n\t\t\t\t// state, we cannot allow more fullscreen windows. See\n\t\t\t\t// https://github.com/microsoft/vscode/issues/41691 and\n\t\t\t\t// https://github.com/electron/electron/issues/13077\n\t\t\t\tallowFullscreen = false;\n\t\t\t}\n\t\t}\n\n\t\tif (state.mode === WindowMode.Fullscreen && !allowFullscreen) {\n\t\t\tstate.mode = WindowMode.Normal;\n\t\t}\n\n\t\treturn state;\n\t}\n\n\tprivate doGetNewWindowState(configuration: INativeWindowConfiguration): INewWindowState {\n\t\tconst lastActive = this.windowsMainService.getLastActiveWindow();\n\n\t\t// Restore state unless we are running extension tests\n\t\tif (!configuration.extensionTestsPath) {\n\n\t\t\t// extension development host Window - load from stored settings if any\n\t\t\tif (!!configuration.extensionDevelopmentPath && this.state.lastPluginDevelopmentHostWindow) {\n\t\t\t\treturn this.state.lastPluginDevelopmentHostWindow.uiState;\n\t\t\t}\n\n\t\t\t// Known Workspace - load from stored settings\n\t\t\tconst workspace = configuration.workspace;\n\t\t\tif (isWorkspaceIdentifier(workspace)) {\n\t\t\t\tconst stateForWorkspace = this.state.openedWindows.filter(openedWindow => openedWindow.workspace && openedWindow.workspace.id === workspace.id).map(openedWindow => openedWindow.uiState);\n\t\t\t\tif (stateForWorkspace.length) {\n\t\t\t\t\treturn stateForWorkspace[0];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Known Folder - load from stored settings\n\t\t\tif (isSingleFolderWorkspaceIdentifier(workspace)) {\n\t\t\t\tconst stateForFolder = this.state.openedWindows.filter(openedWindow => openedWindow.folderUri && extUriBiasedIgnorePathCase.isEqual(openedWindow.folderUri, workspace.uri)).map(openedWindow => openedWindow.uiState);\n\t\t\t\tif (stateForFolder.length) {\n\t\t\t\t\treturn stateForFolder[0];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Empty windows with backups\n\t\t\telse if (configuration.backupPath) {\n\t\t\t\tconst stateForEmptyWindow = this.state.openedWindows.filter(openedWindow => openedWindow.backupPath === configuration.backupPath).map(openedWindow => openedWindow.uiState);\n\t\t\t\tif (stateForEmptyWindow.length) {\n\t\t\t\t\treturn stateForEmptyWindow[0];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// First Window\n\t\t\tconst lastActiveState = this.lastClosedState || this.state.lastActiveWindow;\n\t\t\tif (!lastActive && lastActiveState) {\n\t\t\t\treturn lastActiveState.uiState;\n\t\t\t}\n\t\t}\n\n\t\t//\n\t\t// In any other case, we do not have any stored settings for the window state, so we come up with something smart\n\t\t//\n\n\t\t// We want the new window to open on the same display that the last active one is in\n\t\tlet displayToUse: Display | undefined;\n\t\tconst displays = screen.getAllDisplays();\n\n\t\t// Single Display\n\t\tif (displays.length === 1) {\n\t\t\tdisplayToUse = displays[0];\n\t\t}\n\n\t\t// Multi Display\n\t\telse {\n\n\t\t\t// on mac there is 1 menu per window so we need to use the monitor where the cursor currently is\n\t\t\tif (isMacintosh) {\n\t\t\t\tconst cursorPoint = screen.getCursorScreenPoint();\n\t\t\t\tdisplayToUse = screen.getDisplayNearestPoint(cursorPoint);\n\t\t\t}\n\n\t\t\t// if we have a last active window, use that display for the new window\n\t\t\tif (!displayToUse && lastActive) {\n\t\t\t\tdisplayToUse = screen.getDisplayMatching(lastActive.getBounds());\n\t\t\t}\n\n\t\t\t// fallback to primary display or first display\n\t\t\tif (!displayToUse) {\n\t\t\t\tdisplayToUse = screen.getPrimaryDisplay() || displays[0];\n\t\t\t}\n\t\t}\n\n\t\t// Compute x/y based on display bounds\n\t\t// Note: important to use Math.round() because Electron does not seem to be too happy about\n\t\t// display coordinates that are not absolute numbers.\n\t\tlet state = defaultWindowState();\n\t\tstate.x = Math.round(displayToUse.bounds.x + (displayToUse.bounds.width / 2) - (state.width! / 2));\n\t\tstate.y = Math.round(displayToUse.bounds.y + (displayToUse.bounds.height / 2) - (state.height! / 2));\n\n\t\t// Check for newWindowDimensions setting and adjust accordingly\n\t\tconst windowConfig = this.configurationService.getValue<IWindowSettings | undefined>('window');\n\t\tlet ensureNoOverlap = true;\n\t\tif (windowConfig?.newWindowDimensions) {\n\t\t\tif (windowConfig.newWindowDimensions === 'maximized') {\n\t\t\t\tstate.mode = WindowMode.Maximized;\n\t\t\t\tensureNoOverlap = false;\n\t\t\t} else if (windowConfig.newWindowDimensions === 'fullscreen') {\n\t\t\t\tstate.mode = WindowMode.Fullscreen;\n\t\t\t\tensureNoOverlap = false;\n\t\t\t} else if ((windowConfig.newWindowDimensions === 'inherit' || windowConfig.newWindowDimensions === 'offset') && lastActive) {\n\t\t\t\tconst lastActiveState = lastActive.serializeWindowState();\n\t\t\t\tif (lastActiveState.mode === WindowMode.Fullscreen) {\n\t\t\t\t\tstate.mode = WindowMode.Fullscreen; // only take mode (fixes https://github.com/microsoft/vscode/issues/19331)\n\t\t\t\t} else {\n\t\t\t\t\tstate = lastActiveState;\n\t\t\t\t}\n\n\t\t\t\tensureNoOverlap = state.mode !== WindowMode.Fullscreen && windowConfig.newWindowDimensions === 'offset';\n\t\t\t}\n\t\t}\n\n\t\tif (ensureNoOverlap) {\n\t\t\tstate = this.ensureNoOverlap(state);\n\t\t}\n\n\t\t(state as INewWindowState).hasDefaultState = true; // flag as default state\n\n\t\treturn state;\n\t}\n\n\tprivate ensureNoOverlap(state: IWindowUIState): IWindowUIState {\n\t\tif (this.windowsMainService.getWindows().length === 0) {\n\t\t\treturn state;\n\t\t}\n\n\t\tstate.x = typeof state.x === 'number' ? state.x : 0;\n\t\tstate.y = typeof state.y === 'number' ? state.y : 0;\n\n\t\tconst existingWindowBounds = this.windowsMainService.getWindows().map(window => window.getBounds());\n\t\twhile (existingWindowBounds.some(bounds => bounds.x === state.x || bounds.y === state.y)) {\n\t\t\tstate.x += 30;\n\t\t\tstate.y += 30;\n\t\t}\n\n\t\treturn state;\n\t}\n}\n\nexport function restoreWindowsState(data: ISerializedWindowsState | undefined): IWindowsState {\n\tconst result: IWindowsState = { openedWindows: [] };\n\tconst windowsState = data || { openedWindows: [] };\n\n\tif (windowsState.lastActiveWindow) {\n\t\tresult.lastActiveWindow = restoreWindowState(windowsState.lastActiveWindow);\n\t}\n\n\tif (windowsState.lastPluginDevelopmentHostWindow) {\n\t\tresult.lastPluginDevelopmentHostWindow = restoreWindowState(windowsState.lastPluginDevelopmentHostWindow);\n\t}\n\n\tif (Array.isArray(windowsState.openedWindows)) {\n\t\tresult.openedWindows = windowsState.openedWindows.map(windowState => restoreWindowState(windowState));\n\t}\n\n\treturn result;\n}\n\nfunction restoreWindowState(windowState: ISerializedWindowState): IWindowState {\n\tconst result: IWindowState = { uiState: windowState.uiState };\n\tif (windowState.backupPath) {\n\t\tresult.backupPath = windowState.backupPath;\n\t}\n\n\tif (windowState.remoteAuthority) {\n\t\tresult.remoteAuthority = windowState.remoteAuthority;\n\t}\n\n\tif (windowState.folder) {\n\t\tresult.folderUri = URI.parse(windowState.folder);\n\t}\n\n\tif (windowState.workspaceIdentifier) {\n\t\tresult.workspace = { id: windowState.workspaceIdentifier.id, configPath: URI.parse(windowState.workspaceIdentifier.configURIPath) };\n\t}\n\n\treturn result;\n}\n\nexport function getWindowsStateStoreData(windowsState: IWindowsState): IWindowsState {\n\treturn {\n\t\tlastActiveWindow: windowsState.lastActiveWindow && serializeWindowState(windowsState.lastActiveWindow),\n\t\tlastPluginDevelopmentHostWindow: windowsState.lastPluginDevelopmentHostWindow && serializeWindowState(windowsState.lastPluginDevelopmentHostWindow),\n\t\topenedWindows: windowsState.openedWindows.map(ws => serializeWindowState(ws))\n\t};\n}\n\nfunction serializeWindowState(windowState: IWindowState): ISerializedWindowState {\n\treturn {\n\t\tworkspaceIdentifier: windowState.workspace && { id: windowState.workspace.id, configURIPath: windowState.workspace.configPath.toString() },\n\t\tfolder: windowState.folderUri && windowState.folderUri.toString(),\n\t\tbackupPath: windowState.backupPath,\n\t\tremoteAuthority: windowState.remoteAuthority,\n\t\tuiState: windowState.uiState\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createHash } from 'crypto';\nimport { Stats, statSync } from 'fs';\nimport { Schemas } from 'vs/base/common/network';\nimport { isLinux, isMacintosh, isWindows } from 'vs/base/common/platform';\nimport { originalFSPath } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { ISingleFolderWorkspaceIdentifier, IWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\n\n\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n// NOTE: DO NOT CHANGE. IDENTIFIERS HAVE TO REMAIN STABLE\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\nexport function getWorkspaceIdentifier(configPath: URI): IWorkspaceIdentifier {\n\n\tfunction getWorkspaceId(): string {\n\t\tlet configPathStr = configPath.scheme === Schemas.file ? originalFSPath(configPath) : configPath.toString();\n\t\tif (!isLinux) {\n\t\t\tconfigPathStr = configPathStr.toLowerCase(); // sanitize for platform file system\n\t\t}\n\n\t\treturn createHash('md5').update(configPathStr).digest('hex');\n\t}\n\n\treturn {\n\t\tid: getWorkspaceId(),\n\t\tconfigPath\n\t};\n}\n\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n// NOTE: DO NOT CHANGE. IDENTIFIERS HAVE TO REMAIN STABLE\n// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\nexport function getSingleFolderWorkspaceIdentifier(folderUri: URI): ISingleFolderWorkspaceIdentifier | undefined;\nexport function getSingleFolderWorkspaceIdentifier(folderUri: URI, folderStat: Stats): ISingleFolderWorkspaceIdentifier;\nexport function getSingleFolderWorkspaceIdentifier(folderUri: URI, folderStat?: Stats): ISingleFolderWorkspaceIdentifier | undefined {\n\n\tfunction getFolderId(): string | undefined {\n\n\t\t// Remote: produce a hash from the entire URI\n\t\tif (folderUri.scheme !== Schemas.file) {\n\t\t\treturn createHash('md5').update(folderUri.toString()).digest('hex');\n\t\t}\n\n\t\t// Local: produce a hash from the path and include creation time as salt\n\t\tif (!folderStat) {\n\t\t\ttry {\n\t\t\t\tfolderStat = statSync(folderUri.fsPath);\n\t\t\t} catch (error) {\n\t\t\t\treturn undefined; // folder does not exist\n\t\t\t}\n\t\t}\n\n\t\tlet ctime: number | undefined;\n\t\tif (isLinux) {\n\t\t\tctime = folderStat.ino; // Linux: birthtime is ctime, so we cannot use it! We use the ino instead!\n\t\t} else if (isMacintosh) {\n\t\t\tctime = folderStat.birthtime.getTime(); // macOS: birthtime is fine to use as is\n\t\t} else if (isWindows) {\n\t\t\tif (typeof folderStat.birthtimeMs === 'number') {\n\t\t\t\tctime = Math.floor(folderStat.birthtimeMs); // Windows: fix precision issue in node.js 8.x to get 7.x results (see https://github.com/nodejs/node/issues/19897)\n\t\t\t} else {\n\t\t\t\tctime = folderStat.birthtime.getTime();\n\t\t\t}\n\t\t}\n\n\t\t// we use the ctime as extra salt to the ID so that we catch the case of a folder getting\n\t\t// deleted and recreated. in that case we do not want to carry over previous state\n\t\treturn createHash('md5').update(folderUri.fsPath).update(ctime ? String(ctime) : '').digest('hex');\n\t}\n\n\tconst folderId = getFolderId();\n\tif (typeof folderId === 'string') {\n\t\treturn {\n\t\t\tid: folderId,\n\t\t\turi: folderUri\n\t\t};\n\t}\n\n\treturn undefined; // invalid folder\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { canceled, SerializedError } from 'vs/base/common/errors';\nimport { IDisposable } from 'vs/base/common/lifecycle';\nimport { IExtensionHostProcessOptions, IExtensionHostStarter } from 'vs/platform/extensions/common/extensionHostStarter';\nimport { Event } from 'vs/base/common/event';\nimport { FileAccess } from 'vs/base/common/network';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { Worker } from 'worker_threads';\nimport { IWorker, IWorkerCallback, IWorkerFactory, SimpleWorkerClient } from 'vs/base/common/worker/simpleWorker';\nimport type { ExtensionHostStarter, IExtensionHostStarterWorkerHost } from 'vs/platform/extensions/node/extensionHostStarterWorker';\nimport { ILifecycleMainService } from 'vs/platform/lifecycle/electron-main/lifecycleMainService';\n\nclass NodeWorker implements IWorker {\n\n\tprivate readonly _worker: Worker;\n\n\tconstructor(callback: IWorkerCallback, onErrorCallback: (err: any) => void) {\n\t\tthis._worker = new Worker(\n\t\t\tFileAccess.asFileUri('vs/platform/extensions/node/extensionHostStarterWorkerMain.js', require).fsPath,\n\t\t);\n\t\tthis._worker.on('message', callback);\n\t\tthis._worker.on('error', onErrorCallback);\n\t\t// this._worker.on('exit', (code) => {\n\t\t// \tconsole.log(`worker exited with code `, code);\n\t\t// });\n\t}\n\n\tgetId(): number {\n\t\treturn 1;\n\t}\n\n\tpostMessage(message: any, transfer: ArrayBuffer[]): void {\n\t\tthis._worker.postMessage(message, transfer);\n\t}\n\n\tdispose(): void {\n\t\tthis._worker.terminate();\n\t}\n}\n\nclass ExtensionHostStarterWorkerHost implements IExtensionHostStarterWorkerHost {\n\tconstructor(\n\t\t@ILogService private readonly _logService: ILogService\n\t) { }\n\n\tpublic async logInfo(message: string): Promise<void> {\n\t\tthis._logService.info(message);\n\t}\n}\n\nexport class WorkerMainProcessExtensionHostStarter implements IDisposable, IExtensionHostStarter {\n\t_serviceBrand: undefined;\n\n\tprivate _proxy: ExtensionHostStarter | null;\n\tprivate readonly _worker: SimpleWorkerClient<ExtensionHostStarter, IExtensionHostStarterWorkerHost>;\n\tprivate _shutdown = false;\n\n\tconstructor(\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@ILifecycleMainService lifecycleMainService: ILifecycleMainService\n\t) {\n\t\tthis._proxy = null;\n\n\t\tconst workerFactory: IWorkerFactory = {\n\t\t\tcreate: (moduleId: string, callback: IWorkerCallback, onErrorCallback: (err: any) => void): IWorker => {\n\t\t\t\tconst worker = new NodeWorker(callback, onErrorCallback);\n\t\t\t\tworker.postMessage(moduleId, []);\n\t\t\t\treturn worker;\n\t\t\t}\n\t\t};\n\t\tthis._worker = new SimpleWorkerClient<ExtensionHostStarter, IExtensionHostStarterWorkerHost>(\n\t\t\tworkerFactory,\n\t\t\t'vs/platform/extensions/node/extensionHostStarterWorker',\n\t\t\tnew ExtensionHostStarterWorkerHost(this._logService)\n\t\t);\n\t\tthis._initialize();\n\n\t\t// On shutdown: gracefully await extension host shutdowns\n\t\tlifecycleMainService.onWillShutdown((e) => {\n\t\t\tthis._shutdown = true;\n\t\t\tif (this._proxy) {\n\t\t\t\te.join(this._proxy.waitForAllExit(6000));\n\t\t\t}\n\t\t});\n\t}\n\n\tdispose(): void {\n\t\t// Intentionally not killing the extension host processes\n\t}\n\n\tasync _initialize(): Promise<void> {\n\t\tthis._proxy = await this._worker.getProxyObject();\n\t\tthis._logService.info(`ExtensionHostStarterWorker created`);\n\t}\n\n\tonDynamicStdout(id: string): Event<string> {\n\t\treturn this._proxy!.onDynamicStdout(id);\n\t}\n\n\tonDynamicStderr(id: string): Event<string> {\n\t\treturn this._proxy!.onDynamicStderr(id);\n\t}\n\n\tonDynamicMessage(id: string): Event<any> {\n\t\treturn this._proxy!.onDynamicMessage(id);\n\t}\n\n\tonDynamicError(id: string): Event<{ error: SerializedError; }> {\n\t\treturn this._proxy!.onDynamicError(id);\n\t}\n\n\tonDynamicExit(id: string): Event<{ code: number; signal: string; }> {\n\t\treturn this._proxy!.onDynamicExit(id);\n\t}\n\n\tasync createExtensionHost(): Promise<{ id: string; }> {\n\t\tconst proxy = await this._worker.getProxyObject();\n\t\tif (this._shutdown) {\n\t\t\tthrow canceled();\n\t\t}\n\t\treturn proxy.createExtensionHost();\n\t}\n\n\tasync start(id: string, opts: IExtensionHostProcessOptions): Promise<{ pid: number; }> {\n\t\tconst proxy = await this._worker.getProxyObject();\n\t\tif (this._shutdown) {\n\t\t\tthrow canceled();\n\t\t}\n\t\treturn proxy.start(id, opts);\n\t}\n\n\tasync enableInspectPort(id: string): Promise<boolean> {\n\t\tconst proxy = await this._worker.getProxyObject();\n\t\tif (this._shutdown) {\n\t\t\tthrow canceled();\n\t\t}\n\t\treturn proxy.enableInspectPort(id);\n\t}\n\n\tasync kill(id: string): Promise<void> {\n\t\tconst proxy = await this._worker.getProxyObject();\n\t\tif (this._shutdown) {\n\t\t\tthrow canceled();\n\t\t}\n\t\treturn proxy.kill(id);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createHash } from 'crypto';\nimport { createConnection, createServer, Server as NetServer, Socket } from 'net';\nimport { tmpdir } from 'os';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { onUnexpectedError } from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { join } from 'vs/base/common/path';\nimport { Platform, platform } from 'vs/base/common/platform';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { ClientConnectionEvent, IPCServer } from 'vs/base/parts/ipc/common/ipc';\nimport { ChunkStream, Client, ISocket, Protocol, SocketCloseEvent, SocketCloseEventType, SocketDiagnostics, SocketDiagnosticsEventType } from 'vs/base/parts/ipc/common/ipc.net';\nimport * as zlib from 'zlib';\n\nexport class NodeSocket implements ISocket {\n\n\tpublic readonly debugLabel: string;\n\tpublic readonly socket: Socket;\n\tprivate readonly _errorListener: (err: any) => void;\n\n\tpublic traceSocketEvent(type: SocketDiagnosticsEventType, data?: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView | any): void {\n\t\tSocketDiagnostics.traceSocketEvent(this.socket, this.debugLabel, type, data);\n\t}\n\n\tconstructor(socket: Socket, debugLabel: string = '') {\n\t\tthis.debugLabel = debugLabel;\n\t\tthis.socket = socket;\n\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.Created, { type: 'NodeSocket' });\n\t\tthis._errorListener = (err: any) => {\n\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.Error, { code: err?.code, message: err?.message });\n\t\t\tif (err) {\n\t\t\t\tif (err.code === 'EPIPE') {\n\t\t\t\t\t// An EPIPE exception at the wrong time can lead to a renderer process crash\n\t\t\t\t\t// so ignore the error since the socket will fire the close event soon anyways:\n\t\t\t\t\t// > https://nodejs.org/api/errors.html#errors_common_system_errors\n\t\t\t\t\t// > EPIPE (Broken pipe): A write on a pipe, socket, or FIFO for which there is no\n\t\t\t\t\t// > process to read the data. Commonly encountered at the net and http layers,\n\t\t\t\t\t// > indicative that the remote side of the stream being written to has been closed.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tonUnexpectedError(err);\n\t\t\t}\n\t\t};\n\t\tthis.socket.on('error', this._errorListener);\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.socket.off('error', this._errorListener);\n\t\tthis.socket.destroy();\n\t}\n\n\tpublic onData(_listener: (e: VSBuffer) => void): IDisposable {\n\t\tconst listener = (buff: Buffer) => {\n\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.Read, buff);\n\t\t\t_listener(VSBuffer.wrap(buff));\n\t\t};\n\t\tthis.socket.on('data', listener);\n\t\treturn {\n\t\t\tdispose: () => this.socket.off('data', listener)\n\t\t};\n\t}\n\n\tpublic onClose(listener: (e: SocketCloseEvent) => void): IDisposable {\n\t\tconst adapter = (hadError: boolean) => {\n\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.Close, { hadError });\n\t\t\tlistener({\n\t\t\t\ttype: SocketCloseEventType.NodeSocketCloseEvent,\n\t\t\t\thadError: hadError,\n\t\t\t\terror: undefined\n\t\t\t});\n\t\t};\n\t\tthis.socket.on('close', adapter);\n\t\treturn {\n\t\t\tdispose: () => this.socket.off('close', adapter)\n\t\t};\n\t}\n\n\tpublic onEnd(listener: () => void): IDisposable {\n\t\tconst adapter = () => {\n\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.NodeEndReceived);\n\t\t\tlistener();\n\t\t};\n\t\tthis.socket.on('end', adapter);\n\t\treturn {\n\t\t\tdispose: () => this.socket.off('end', adapter)\n\t\t};\n\t}\n\n\tpublic write(buffer: VSBuffer): void {\n\t\t// return early if socket has been destroyed in the meantime\n\t\tif (this.socket.destroyed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// we ignore the returned value from `write` because we would have to cached the data\n\t\t// anyways and nodejs is already doing that for us:\n\t\t// > https://nodejs.org/api/stream.html#stream_writable_write_chunk_encoding_callback\n\t\t// > However, the false return value is only advisory and the writable stream will unconditionally\n\t\t// > accept and buffer chunk even if it has not been allowed to drain.\n\t\ttry {\n\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.Write, buffer);\n\t\t\tthis.socket.write(buffer.buffer, (err: any) => {\n\t\t\t\tif (err) {\n\t\t\t\t\tif (err.code === 'EPIPE') {\n\t\t\t\t\t\t// An EPIPE exception at the wrong time can lead to a renderer process crash\n\t\t\t\t\t\t// so ignore the error since the socket will fire the close event soon anyways:\n\t\t\t\t\t\t// > https://nodejs.org/api/errors.html#errors_common_system_errors\n\t\t\t\t\t\t// > EPIPE (Broken pipe): A write on a pipe, socket, or FIFO for which there is no\n\t\t\t\t\t\t// > process to read the data. Commonly encountered at the net and http layers,\n\t\t\t\t\t\t// > indicative that the remote side of the stream being written to has been closed.\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tonUnexpectedError(err);\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tif (err.code === 'EPIPE') {\n\t\t\t\t// An EPIPE exception at the wrong time can lead to a renderer process crash\n\t\t\t\t// so ignore the error since the socket will fire the close event soon anyways:\n\t\t\t\t// > https://nodejs.org/api/errors.html#errors_common_system_errors\n\t\t\t\t// > EPIPE (Broken pipe): A write on a pipe, socket, or FIFO for which there is no\n\t\t\t\t// > process to read the data. Commonly encountered at the net and http layers,\n\t\t\t\t// > indicative that the remote side of the stream being written to has been closed.\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tonUnexpectedError(err);\n\t\t}\n\t}\n\n\tpublic end(): void {\n\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.NodeEndSent);\n\t\tthis.socket.end();\n\t}\n\n\tpublic drain(): Promise<void> {\n\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.NodeDrainBegin);\n\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\tif (this.socket.bufferSize === 0) {\n\t\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.NodeDrainEnd);\n\t\t\t\tresolve();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst finished = () => {\n\t\t\t\tthis.socket.off('close', finished);\n\t\t\t\tthis.socket.off('end', finished);\n\t\t\t\tthis.socket.off('error', finished);\n\t\t\t\tthis.socket.off('timeout', finished);\n\t\t\t\tthis.socket.off('drain', finished);\n\t\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.NodeDrainEnd);\n\t\t\t\tresolve();\n\t\t\t};\n\t\t\tthis.socket.on('close', finished);\n\t\t\tthis.socket.on('end', finished);\n\t\t\tthis.socket.on('error', finished);\n\t\t\tthis.socket.on('timeout', finished);\n\t\t\tthis.socket.on('drain', finished);\n\t\t});\n\t}\n}\n\nconst enum Constants {\n\tMinHeaderByteSize = 2\n}\n\nconst enum ReadState {\n\tPeekHeader = 1,\n\tReadHeader = 2,\n\tReadBody = 3,\n\tFin = 4\n}\n\ninterface ISocketTracer {\n\ttraceSocketEvent(type: SocketDiagnosticsEventType, data?: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView | any): void\n}\n\n/**\n * See https://tools.ietf.org/html/rfc6455#section-5.2\n */\nexport class WebSocketNodeSocket extends Disposable implements ISocket, ISocketTracer {\n\n\tpublic readonly socket: NodeSocket;\n\tprivate readonly _flowManager: WebSocketFlowManager;\n\tprivate readonly _incomingData: ChunkStream;\n\tprivate readonly _onData = this._register(new Emitter<VSBuffer>());\n\tprivate readonly _onClose = this._register(new Emitter<SocketCloseEvent>());\n\tprivate _isEnded: boolean = false;\n\n\tprivate readonly _state = {\n\t\tstate: ReadState.PeekHeader,\n\t\treadLen: Constants.MinHeaderByteSize,\n\t\tfin: 0,\n\t\tcompressed: false,\n\t\tfirstFrameOfMessage: true,\n\t\tmask: 0\n\t};\n\n\tpublic get permessageDeflate(): boolean {\n\t\treturn this._flowManager.permessageDeflate;\n\t}\n\n\tpublic get recordedInflateBytes(): VSBuffer {\n\t\treturn this._flowManager.recordedInflateBytes;\n\t}\n\n\tpublic traceSocketEvent(type: SocketDiagnosticsEventType, data?: VSBuffer | Uint8Array | ArrayBuffer | ArrayBufferView | any): void {\n\t\tthis.socket.traceSocketEvent(type, data);\n\t}\n\n\t/**\n\t * Create a socket which can communicate using WebSocket frames.\n\t *\n\t * **NOTE**: When using the permessage-deflate WebSocket extension, if parts of inflating was done\n\t *  in a different zlib instance, we need to pass all those bytes into zlib, otherwise the inflate\n\t *  might hit an inflated portion referencing a distance too far back.\n\t *\n\t * @param socket The underlying socket\n\t * @param permessageDeflate Use the permessage-deflate WebSocket extension\n\t * @param inflateBytes \"Seed\" zlib inflate with these bytes.\n\t * @param recordInflateBytes Record all bytes sent to inflate\n\t */\n\tconstructor(socket: NodeSocket, permessageDeflate: boolean, inflateBytes: VSBuffer | null, recordInflateBytes: boolean) {\n\t\tsuper();\n\t\tthis.socket = socket;\n\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.Created, { type: 'WebSocketNodeSocket', permessageDeflate, inflateBytesLength: inflateBytes?.byteLength || 0, recordInflateBytes });\n\t\tthis._flowManager = this._register(new WebSocketFlowManager(\n\t\t\tthis,\n\t\t\tpermessageDeflate,\n\t\t\tinflateBytes,\n\t\t\trecordInflateBytes,\n\t\t\tthis._onData,\n\t\t\t(data, compressed) => this._write(data, compressed)\n\t\t));\n\t\tthis._register(this._flowManager.onError((err) => {\n\t\t\t// zlib errors are fatal, since we have no idea how to recover\n\t\t\tconsole.error(err);\n\t\t\tonUnexpectedError(err);\n\t\t\tthis._onClose.fire({\n\t\t\t\ttype: SocketCloseEventType.NodeSocketCloseEvent,\n\t\t\t\thadError: true,\n\t\t\t\terror: err\n\t\t\t});\n\t\t}));\n\t\tthis._incomingData = new ChunkStream();\n\t\tthis._register(this.socket.onData(data => this._acceptChunk(data)));\n\t\tthis._register(this.socket.onClose((e) => this._onClose.fire(e)));\n\t}\n\n\tpublic override dispose(): void {\n\t\tif (this._flowManager.isProcessingWriteQueue()) {\n\t\t\t// Wait for any outstanding writes to finish before disposing\n\t\t\tthis._register(this._flowManager.onDidFinishProcessingWriteQueue(() => {\n\t\t\t\tthis.dispose();\n\t\t\t}));\n\t\t} else {\n\t\t\tthis.socket.dispose();\n\t\t\tsuper.dispose();\n\t\t}\n\t}\n\n\tpublic onData(listener: (e: VSBuffer) => void): IDisposable {\n\t\treturn this._onData.event(listener);\n\t}\n\n\tpublic onClose(listener: (e: SocketCloseEvent) => void): IDisposable {\n\t\treturn this._onClose.event(listener);\n\t}\n\n\tpublic onEnd(listener: () => void): IDisposable {\n\t\treturn this.socket.onEnd(listener);\n\t}\n\n\tpublic write(buffer: VSBuffer): void {\n\t\tthis._flowManager.writeMessage(buffer);\n\t}\n\n\tprivate _write(buffer: VSBuffer, compressed: boolean): void {\n\t\tif (this._isEnded) {\n\t\t\t// Avoid ERR_STREAM_WRITE_AFTER_END\n\t\t\treturn;\n\t\t}\n\n\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.WebSocketNodeSocketWrite, buffer);\n\t\tlet headerLen = Constants.MinHeaderByteSize;\n\t\tif (buffer.byteLength < 126) {\n\t\t\theaderLen += 0;\n\t\t} else if (buffer.byteLength < 2 ** 16) {\n\t\t\theaderLen += 2;\n\t\t} else {\n\t\t\theaderLen += 8;\n\t\t}\n\t\tconst header = VSBuffer.alloc(headerLen);\n\n\t\tif (compressed) {\n\t\t\t// The RSV1 bit indicates a compressed frame\n\t\t\theader.writeUInt8(0b11000010, 0);\n\t\t} else {\n\t\t\theader.writeUInt8(0b10000010, 0);\n\t\t}\n\t\tif (buffer.byteLength < 126) {\n\t\t\theader.writeUInt8(buffer.byteLength, 1);\n\t\t} else if (buffer.byteLength < 2 ** 16) {\n\t\t\theader.writeUInt8(126, 1);\n\t\t\tlet offset = 1;\n\t\t\theader.writeUInt8((buffer.byteLength >>> 8) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 0) & 0b11111111, ++offset);\n\t\t} else {\n\t\t\theader.writeUInt8(127, 1);\n\t\t\tlet offset = 1;\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8(0, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 24) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 16) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 8) & 0b11111111, ++offset);\n\t\t\theader.writeUInt8((buffer.byteLength >>> 0) & 0b11111111, ++offset);\n\t\t}\n\n\t\tthis.socket.write(VSBuffer.concat([header, buffer]));\n\t}\n\n\tpublic end(): void {\n\t\tthis._isEnded = true;\n\t\tthis.socket.end();\n\t}\n\n\tprivate _acceptChunk(data: VSBuffer): void {\n\t\tif (data.byteLength === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis._incomingData.acceptChunk(data);\n\n\t\twhile (this._incomingData.byteLength >= this._state.readLen) {\n\n\t\t\tif (this._state.state === ReadState.PeekHeader) {\n\t\t\t\t// peek to see if we can read the entire header\n\t\t\t\tconst peekHeader = this._incomingData.peek(this._state.readLen);\n\t\t\t\tconst firstByte = peekHeader.readUInt8(0);\n\t\t\t\tconst finBit = (firstByte & 0b10000000) >>> 7;\n\t\t\t\tconst rsv1Bit = (firstByte & 0b01000000) >>> 6;\n\t\t\t\tconst secondByte = peekHeader.readUInt8(1);\n\t\t\t\tconst hasMask = (secondByte & 0b10000000) >>> 7;\n\t\t\t\tconst len = (secondByte & 0b01111111);\n\n\t\t\t\tthis._state.state = ReadState.ReadHeader;\n\t\t\t\tthis._state.readLen = Constants.MinHeaderByteSize + (hasMask ? 4 : 0) + (len === 126 ? 2 : 0) + (len === 127 ? 8 : 0);\n\t\t\t\tthis._state.fin = finBit;\n\t\t\t\tif (this._state.firstFrameOfMessage) {\n\t\t\t\t\t// if the frame is compressed, the RSV1 bit is set only for the first frame of the message\n\t\t\t\t\tthis._state.compressed = Boolean(rsv1Bit);\n\t\t\t\t}\n\t\t\t\tthis._state.firstFrameOfMessage = Boolean(finBit);\n\t\t\t\tthis._state.mask = 0;\n\n\t\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.WebSocketNodeSocketPeekedHeader, { headerSize: this._state.readLen, compressed: this._state.compressed, fin: this._state.fin });\n\n\t\t\t} else if (this._state.state === ReadState.ReadHeader) {\n\t\t\t\t// read entire header\n\t\t\t\tconst header = this._incomingData.read(this._state.readLen);\n\t\t\t\tconst secondByte = header.readUInt8(1);\n\t\t\t\tconst hasMask = (secondByte & 0b10000000) >>> 7;\n\t\t\t\tlet len = (secondByte & 0b01111111);\n\n\t\t\t\tlet offset = 1;\n\t\t\t\tif (len === 126) {\n\t\t\t\t\tlen = (\n\t\t\t\t\t\theader.readUInt8(++offset) * 2 ** 8\n\t\t\t\t\t\t+ header.readUInt8(++offset)\n\t\t\t\t\t);\n\t\t\t\t} else if (len === 127) {\n\t\t\t\t\tlen = (\n\t\t\t\t\t\theader.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 0\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 24\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 16\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 8\n\t\t\t\t\t\t+ header.readUInt8(++offset)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tlet mask = 0;\n\t\t\t\tif (hasMask) {\n\t\t\t\t\tmask = (\n\t\t\t\t\t\theader.readUInt8(++offset) * 2 ** 24\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 16\n\t\t\t\t\t\t+ header.readUInt8(++offset) * 2 ** 8\n\t\t\t\t\t\t+ header.readUInt8(++offset)\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tthis._state.state = ReadState.ReadBody;\n\t\t\t\tthis._state.readLen = len;\n\t\t\t\tthis._state.mask = mask;\n\n\t\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.WebSocketNodeSocketPeekedHeader, { bodySize: this._state.readLen, compressed: this._state.compressed, fin: this._state.fin, mask: this._state.mask });\n\n\t\t\t} else if (this._state.state === ReadState.ReadBody) {\n\t\t\t\t// read body\n\n\t\t\t\tconst body = this._incomingData.read(this._state.readLen);\n\t\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.WebSocketNodeSocketReadData, body);\n\n\t\t\t\tunmask(body, this._state.mask);\n\t\t\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.WebSocketNodeSocketUnmaskedData, body);\n\n\t\t\t\tthis._state.state = ReadState.PeekHeader;\n\t\t\t\tthis._state.readLen = Constants.MinHeaderByteSize;\n\t\t\t\tthis._state.mask = 0;\n\n\t\t\t\tthis._flowManager.acceptFrame(body, this._state.compressed, !!this._state.fin);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic async drain(): Promise<void> {\n\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.WebSocketNodeSocketDrainBegin);\n\t\tif (this._flowManager.isProcessingWriteQueue()) {\n\t\t\tawait Event.toPromise(this._flowManager.onDidFinishProcessingWriteQueue);\n\t\t}\n\t\tawait this.socket.drain();\n\t\tthis.traceSocketEvent(SocketDiagnosticsEventType.WebSocketNodeSocketDrainEnd);\n\t}\n}\n\nclass WebSocketFlowManager extends Disposable {\n\n\tprivate readonly _onError = this._register(new Emitter<Error>());\n\tpublic readonly onError = this._onError.event;\n\n\tprivate readonly _zlibInflateStream: ZlibInflateStream | null;\n\tprivate readonly _zlibDeflateStream: ZlibDeflateStream | null;\n\tprivate readonly _writeQueue: VSBuffer[] = [];\n\tprivate readonly _readQueue: { data: VSBuffer, isCompressed: boolean, isLastFrameOfMessage: boolean }[] = [];\n\n\tprivate readonly _onDidFinishProcessingWriteQueue = this._register(new Emitter<void>());\n\tpublic readonly onDidFinishProcessingWriteQueue = this._onDidFinishProcessingWriteQueue.event;\n\n\tpublic get permessageDeflate(): boolean {\n\t\treturn Boolean(this._zlibInflateStream && this._zlibDeflateStream);\n\t}\n\n\tpublic get recordedInflateBytes(): VSBuffer {\n\t\tif (this._zlibInflateStream) {\n\t\t\treturn this._zlibInflateStream.recordedInflateBytes;\n\t\t}\n\t\treturn VSBuffer.alloc(0);\n\t}\n\n\tconstructor(\n\t\tprivate readonly _tracer: ISocketTracer,\n\t\tpermessageDeflate: boolean,\n\t\tinflateBytes: VSBuffer | null,\n\t\trecordInflateBytes: boolean,\n\t\tprivate readonly _onData: Emitter<VSBuffer>,\n\t\tprivate readonly _writeFn: (data: VSBuffer, compressed: boolean) => void\n\t) {\n\t\tsuper();\n\t\tif (permessageDeflate) {\n\t\t\t// See https://tools.ietf.org/html/rfc7692#page-16\n\t\t\t// To simplify our logic, we don't negotiate the window size\n\t\t\t// and simply dedicate (2^15) / 32kb per web socket\n\t\t\tthis._zlibInflateStream = this._register(new ZlibInflateStream(this._tracer, recordInflateBytes, inflateBytes, { windowBits: 15 }));\n\t\t\tthis._zlibDeflateStream = this._register(new ZlibDeflateStream(this._tracer, { windowBits: 15 }));\n\t\t\tthis._register(this._zlibInflateStream.onError((err) => this._onError.fire(err)));\n\t\t\tthis._register(this._zlibDeflateStream.onError((err) => this._onError.fire(err)));\n\t\t} else {\n\t\t\tthis._zlibInflateStream = null;\n\t\t\tthis._zlibDeflateStream = null;\n\t\t}\n\t}\n\n\tpublic writeMessage(message: VSBuffer): void {\n\t\tthis._writeQueue.push(message);\n\t\tthis._processWriteQueue();\n\t}\n\n\tprivate _isProcessingWriteQueue = false;\n\tprivate async _processWriteQueue(): Promise<void> {\n\t\tif (this._isProcessingWriteQueue) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isProcessingWriteQueue = true;\n\t\twhile (this._writeQueue.length > 0) {\n\t\t\tconst message = this._writeQueue.shift()!;\n\t\t\tif (this._zlibDeflateStream) {\n\t\t\t\tconst data = await this._deflateMessage(this._zlibDeflateStream, message);\n\t\t\t\tthis._writeFn(data, true);\n\t\t\t} else {\n\t\t\t\tthis._writeFn(message, false);\n\t\t\t}\n\t\t}\n\t\tthis._isProcessingWriteQueue = false;\n\t\tthis._onDidFinishProcessingWriteQueue.fire();\n\t}\n\n\tpublic isProcessingWriteQueue(): boolean {\n\t\treturn (this._isProcessingWriteQueue);\n\t}\n\n\t/**\n\t * Subsequent calls should wait for the previous `_deflateBuffer` call to complete.\n\t */\n\tprivate _deflateMessage(zlibDeflateStream: ZlibDeflateStream, buffer: VSBuffer): Promise<VSBuffer> {\n\t\treturn new Promise<VSBuffer>((resolve, reject) => {\n\t\t\tzlibDeflateStream.write(buffer);\n\t\t\tzlibDeflateStream.flush(data => resolve(data));\n\t\t});\n\t}\n\n\tpublic acceptFrame(data: VSBuffer, isCompressed: boolean, isLastFrameOfMessage: boolean): void {\n\t\tthis._readQueue.push({ data, isCompressed, isLastFrameOfMessage });\n\t\tthis._processReadQueue();\n\t}\n\n\tprivate _isProcessingReadQueue = false;\n\tprivate async _processReadQueue(): Promise<void> {\n\t\tif (this._isProcessingReadQueue) {\n\t\t\treturn;\n\t\t}\n\t\tthis._isProcessingReadQueue = true;\n\t\twhile (this._readQueue.length > 0) {\n\t\t\tconst frameInfo = this._readQueue.shift()!;\n\t\t\tif (this._zlibInflateStream && frameInfo.isCompressed) {\n\t\t\t\t// See https://datatracker.ietf.org/doc/html/rfc7692#section-9.2\n\t\t\t\t// Even if permessageDeflate is negotiated, it is possible\n\t\t\t\t// that the other side might decide to send uncompressed messages\n\t\t\t\t// So only decompress messages that have the RSV 1 bit set\n\t\t\t\tconst data = await this._inflateFrame(this._zlibInflateStream, frameInfo.data, frameInfo.isLastFrameOfMessage);\n\t\t\t\tthis._onData.fire(data);\n\t\t\t} else {\n\t\t\t\tthis._onData.fire(frameInfo.data);\n\t\t\t}\n\t\t}\n\t\tthis._isProcessingReadQueue = false;\n\t}\n\n\t/**\n\t * Subsequent calls should wait for the previous `transformRead` call to complete.\n\t */\n\tprivate _inflateFrame(zlibInflateStream: ZlibInflateStream, buffer: VSBuffer, isLastFrameOfMessage: boolean): Promise<VSBuffer> {\n\t\treturn new Promise<VSBuffer>((resolve, reject) => {\n\t\t\t// See https://tools.ietf.org/html/rfc7692#section-7.2.2\n\t\t\tzlibInflateStream.write(buffer);\n\t\t\tif (isLastFrameOfMessage) {\n\t\t\t\tzlibInflateStream.write(VSBuffer.fromByteArray([0x00, 0x00, 0xff, 0xff]));\n\t\t\t}\n\t\t\tzlibInflateStream.flush(data => resolve(data));\n\t\t});\n\t}\n}\n\nclass ZlibInflateStream extends Disposable {\n\n\tprivate readonly _onError = this._register(new Emitter<Error>());\n\tpublic readonly onError = this._onError.event;\n\n\tprivate readonly _zlibInflate: zlib.InflateRaw;\n\tprivate readonly _recordedInflateBytes: VSBuffer[] = [];\n\tprivate readonly _pendingInflateData: VSBuffer[] = [];\n\n\tpublic get recordedInflateBytes(): VSBuffer {\n\t\tif (this._recordInflateBytes) {\n\t\t\treturn VSBuffer.concat(this._recordedInflateBytes);\n\t\t}\n\t\treturn VSBuffer.alloc(0);\n\t}\n\n\tconstructor(\n\t\tprivate readonly _tracer: ISocketTracer,\n\t\tprivate readonly _recordInflateBytes: boolean,\n\t\tinflateBytes: VSBuffer | null,\n\t\toptions: zlib.ZlibOptions\n\t) {\n\t\tsuper();\n\t\tthis._zlibInflate = zlib.createInflateRaw(options);\n\t\tthis._zlibInflate.on('error', (err) => {\n\t\t\tthis._tracer.traceSocketEvent(SocketDiagnosticsEventType.zlibInflateError, { message: err?.message, code: (<any>err)?.code });\n\t\t\tthis._onError.fire(err);\n\t\t});\n\t\tthis._zlibInflate.on('data', (data: Buffer) => {\n\t\t\tthis._tracer.traceSocketEvent(SocketDiagnosticsEventType.zlibInflateData, data);\n\t\t\tthis._pendingInflateData.push(VSBuffer.wrap(data));\n\t\t});\n\t\tif (inflateBytes) {\n\t\t\tthis._tracer.traceSocketEvent(SocketDiagnosticsEventType.zlibInflateInitialWrite, inflateBytes.buffer);\n\t\t\tthis._zlibInflate.write(inflateBytes.buffer);\n\t\t\tthis._zlibInflate.flush(() => {\n\t\t\t\tthis._tracer.traceSocketEvent(SocketDiagnosticsEventType.zlibInflateInitialFlushFired);\n\t\t\t\tthis._pendingInflateData.length = 0;\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic write(buffer: VSBuffer): void {\n\t\tif (this._recordInflateBytes) {\n\t\t\tthis._recordedInflateBytes.push(buffer.clone());\n\t\t}\n\t\tthis._tracer.traceSocketEvent(SocketDiagnosticsEventType.zlibInflateWrite, buffer);\n\t\tthis._zlibInflate.write(buffer.buffer);\n\t}\n\n\tpublic flush(callback: (data: VSBuffer) => void): void {\n\t\tthis._zlibInflate.flush(() => {\n\t\t\tthis._tracer.traceSocketEvent(SocketDiagnosticsEventType.zlibInflateFlushFired);\n\t\t\tconst data = VSBuffer.concat(this._pendingInflateData);\n\t\t\tthis._pendingInflateData.length = 0;\n\t\t\tcallback(data);\n\t\t});\n\t}\n}\n\nclass ZlibDeflateStream extends Disposable {\n\n\tprivate readonly _onError = this._register(new Emitter<Error>());\n\tpublic readonly onError = this._onError.event;\n\n\tprivate readonly _zlibDeflate: zlib.DeflateRaw;\n\tprivate readonly _pendingDeflateData: VSBuffer[] = [];\n\n\tconstructor(\n\t\tprivate readonly _tracer: ISocketTracer,\n\t\toptions: zlib.ZlibOptions\n\t) {\n\t\tsuper();\n\n\t\tthis._zlibDeflate = zlib.createDeflateRaw({\n\t\t\twindowBits: 15\n\t\t});\n\t\tthis._zlibDeflate.on('error', (err) => {\n\t\t\tthis._tracer.traceSocketEvent(SocketDiagnosticsEventType.zlibDeflateError, { message: err?.message, code: (<any>err)?.code });\n\t\t\tthis._onError.fire(err);\n\t\t});\n\t\tthis._zlibDeflate.on('data', (data: Buffer) => {\n\t\t\tthis._tracer.traceSocketEvent(SocketDiagnosticsEventType.zlibDeflateData, data);\n\t\t\tthis._pendingDeflateData.push(VSBuffer.wrap(data));\n\t\t});\n\t}\n\n\tpublic write(buffer: VSBuffer): void {\n\t\tthis._tracer.traceSocketEvent(SocketDiagnosticsEventType.zlibDeflateWrite, buffer.buffer);\n\t\tthis._zlibDeflate.write(<Buffer>buffer.buffer);\n\t}\n\n\tpublic flush(callback: (data: VSBuffer) => void): void {\n\t\t// See https://zlib.net/manual.html#Constants\n\t\tthis._zlibDeflate.flush(/*Z_SYNC_FLUSH*/2, () => {\n\t\t\tthis._tracer.traceSocketEvent(SocketDiagnosticsEventType.zlibDeflateFlushFired);\n\n\t\t\tlet data = VSBuffer.concat(this._pendingDeflateData);\n\t\t\tthis._pendingDeflateData.length = 0;\n\n\t\t\t// See https://tools.ietf.org/html/rfc7692#section-7.2.1\n\t\t\tdata = data.slice(0, data.byteLength - 4);\n\n\t\t\tcallback(data);\n\t\t});\n\t}\n}\n\nfunction unmask(buffer: VSBuffer, mask: number): void {\n\tif (mask === 0) {\n\t\treturn;\n\t}\n\tlet cnt = buffer.byteLength >>> 2;\n\tfor (let i = 0; i < cnt; i++) {\n\t\tconst v = buffer.readUInt32BE(i * 4);\n\t\tbuffer.writeUInt32BE(v ^ mask, i * 4);\n\t}\n\tlet offset = cnt * 4;\n\tlet bytesLeft = buffer.byteLength - offset;\n\tconst m3 = (mask >>> 24) & 0b11111111;\n\tconst m2 = (mask >>> 16) & 0b11111111;\n\tconst m1 = (mask >>> 8) & 0b11111111;\n\tif (bytesLeft >= 1) {\n\t\tbuffer.writeUInt8(buffer.readUInt8(offset) ^ m3, offset);\n\t}\n\tif (bytesLeft >= 2) {\n\t\tbuffer.writeUInt8(buffer.readUInt8(offset + 1) ^ m2, offset + 1);\n\t}\n\tif (bytesLeft >= 3) {\n\t\tbuffer.writeUInt8(buffer.readUInt8(offset + 2) ^ m1, offset + 2);\n\t}\n}\n\n// Read this before there's any chance it is overwritten\n// Related to https://github.com/microsoft/vscode/issues/30624\nexport const XDG_RUNTIME_DIR = <string | undefined>process.env['XDG_RUNTIME_DIR'];\n\nconst safeIpcPathLengths: { [platform: number]: number } = {\n\t[Platform.Linux]: 107,\n\t[Platform.Mac]: 103\n};\n\nexport function createRandomIPCHandle(): string {\n\tconst randomSuffix = generateUuid();\n\n\t// Windows: use named pipe\n\tif (process.platform === 'win32') {\n\t\treturn `\\\\\\\\.\\\\pipe\\\\vscode-ipc-${randomSuffix}-sock`;\n\t}\n\n\t// Mac/Unix: use socket file and prefer\n\t// XDG_RUNTIME_DIR over tmpDir\n\tlet result: string;\n\tif (XDG_RUNTIME_DIR) {\n\t\tresult = join(XDG_RUNTIME_DIR, `vscode-ipc-${randomSuffix}.sock`);\n\t} else {\n\t\tresult = join(tmpdir(), `vscode-ipc-${randomSuffix}.sock`);\n\t}\n\n\t// Validate length\n\tvalidateIPCHandleLength(result);\n\n\treturn result;\n}\n\nexport function createStaticIPCHandle(directoryPath: string, type: string, version: string): string {\n\tconst scope = createHash('md5').update(directoryPath).digest('hex');\n\n\t// Windows: use named pipe\n\tif (process.platform === 'win32') {\n\t\treturn `\\\\\\\\.\\\\pipe\\\\${scope}-${version}-${type}-sock`;\n\t}\n\n\t// Mac/Unix: use socket file and prefer\n\t// XDG_RUNTIME_DIR over user data path\n\t// unless portable\n\tlet result: string;\n\tif (XDG_RUNTIME_DIR && !process.env['VSCODE_PORTABLE']) {\n\t\tresult = join(XDG_RUNTIME_DIR, `vscode-${scope.substr(0, 8)}-${version}-${type}.sock`);\n\t} else {\n\t\tresult = join(directoryPath, `${version}-${type}.sock`);\n\t}\n\n\t// Validate length\n\tvalidateIPCHandleLength(result);\n\n\treturn result;\n}\n\nfunction validateIPCHandleLength(handle: string): void {\n\tconst limit = safeIpcPathLengths[platform];\n\tif (typeof limit === 'number' && handle.length >= limit) {\n\t\t// https://nodejs.org/api/net.html#net_identifying_paths_for_ipc_connections\n\t\tconsole.warn(`WARNING: IPC handle \"${handle}\" is longer than ${limit} chars, try a shorter --user-data-dir`);\n\t}\n}\n\nexport class Server extends IPCServer {\n\n\tprivate static toClientConnectionEvent(server: NetServer): Event<ClientConnectionEvent> {\n\t\tconst onConnection = Event.fromNodeEventEmitter<Socket>(server, 'connection');\n\n\t\treturn Event.map(onConnection, socket => ({\n\t\t\tprotocol: new Protocol(new NodeSocket(socket, 'ipc-server-connection')),\n\t\t\tonDidClientDisconnect: Event.once(Event.fromNodeEventEmitter<void>(socket, 'close'))\n\t\t}));\n\t}\n\n\tprivate server: NetServer | null;\n\n\tconstructor(server: NetServer) {\n\t\tsuper(Server.toClientConnectionEvent(server));\n\t\tthis.server = server;\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tif (this.server) {\n\t\t\tthis.server.close();\n\t\t\tthis.server = null;\n\t\t}\n\t}\n}\n\nexport function serve(port: number): Promise<Server>;\nexport function serve(namedPipe: string): Promise<Server>;\nexport function serve(hook: any): Promise<Server> {\n\treturn new Promise<Server>((c, e) => {\n\t\tconst server = createServer();\n\n\t\tserver.on('error', e);\n\t\tserver.listen(hook, () => {\n\t\t\tserver.removeListener('error', e);\n\t\t\tc(new Server(server));\n\t\t});\n\t});\n}\n\nexport function connect(options: { host: string, port: number }, clientId: string): Promise<Client>;\nexport function connect(port: number, clientId: string): Promise<Client>;\nexport function connect(namedPipe: string, clientId: string): Promise<Client>;\nexport function connect(hook: any, clientId: string): Promise<Client> {\n\treturn new Promise<Client>((c, e) => {\n\t\tconst socket = createConnection(hook, () => {\n\t\t\tsocket.removeListener('error', e);\n\t\t\tc(Client.fromSocket(new NodeSocket(socket, `ipc-client${clientId}`), clientId));\n\t\t});\n\n\t\tsocket.once('error', e);\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Event } from 'vs/base/common/event';\nimport { IChannel, IServerChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Client } from 'vs/base/parts/ipc/common/ipc.net';\nimport { connect as connectNet } from 'vs/base/parts/ipc/node/ipc.net';\nimport { IDriver, IElement, ILocaleInfo, ILocalizedStrings, IWindowDriverRegistry } from 'vs/platform/driver/common/driver';\n\nexport class DriverChannel implements IServerChannel {\n\n\tconstructor(private driver: IDriver) { }\n\n\tlisten<T>(_: unknown, event: string): Event<T> {\n\t\tthrow new Error('No event found');\n\t}\n\n\tcall(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'getWindowIds': return this.driver.getWindowIds();\n\t\t\tcase 'capturePage': return this.driver.capturePage(arg);\n\t\t\tcase 'reloadWindow': return this.driver.reloadWindow(arg);\n\t\t\tcase 'exitApplication': return this.driver.exitApplication();\n\t\t\tcase 'dispatchKeybinding': return this.driver.dispatchKeybinding(arg[0], arg[1]);\n\t\t\tcase 'click': return this.driver.click(arg[0], arg[1], arg[2], arg[3]);\n\t\t\tcase 'doubleClick': return this.driver.doubleClick(arg[0], arg[1]);\n\t\t\tcase 'setValue': return this.driver.setValue(arg[0], arg[1], arg[2]);\n\t\t\tcase 'getTitle': return this.driver.getTitle(arg[0]);\n\t\t\tcase 'isActiveElement': return this.driver.isActiveElement(arg[0], arg[1]);\n\t\t\tcase 'getElements': return this.driver.getElements(arg[0], arg[1], arg[2]);\n\t\t\tcase 'getElementXY': return this.driver.getElementXY(arg[0], arg[1], arg[2]);\n\t\t\tcase 'typeInEditor': return this.driver.typeInEditor(arg[0], arg[1], arg[2]);\n\t\t\tcase 'getTerminalBuffer': return this.driver.getTerminalBuffer(arg[0], arg[1]);\n\t\t\tcase 'writeInTerminal': return this.driver.writeInTerminal(arg[0], arg[1], arg[2]);\n\t\t\tcase 'getLocaleInfo': return this.driver.getLocaleInfo(arg);\n\t\t\tcase 'getLocalizedStrings': return this.driver.getLocalizedStrings(arg);\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n}\n\nexport class DriverChannelClient implements IDriver {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(private channel: IChannel) { }\n\n\tgetWindowIds(): Promise<number[]> {\n\t\treturn this.channel.call('getWindowIds');\n\t}\n\n\tcapturePage(windowId: number): Promise<string> {\n\t\treturn this.channel.call('capturePage', windowId);\n\t}\n\n\treloadWindow(windowId: number): Promise<void> {\n\t\treturn this.channel.call('reloadWindow', windowId);\n\t}\n\n\texitApplication(): Promise<boolean> {\n\t\treturn this.channel.call('exitApplication');\n\t}\n\n\tdispatchKeybinding(windowId: number, keybinding: string): Promise<void> {\n\t\treturn this.channel.call('dispatchKeybinding', [windowId, keybinding]);\n\t}\n\n\tclick(windowId: number, selector: string, xoffset: number | undefined, yoffset: number | undefined): Promise<void> {\n\t\treturn this.channel.call('click', [windowId, selector, xoffset, yoffset]);\n\t}\n\n\tdoubleClick(windowId: number, selector: string): Promise<void> {\n\t\treturn this.channel.call('doubleClick', [windowId, selector]);\n\t}\n\n\tsetValue(windowId: number, selector: string, text: string): Promise<void> {\n\t\treturn this.channel.call('setValue', [windowId, selector, text]);\n\t}\n\n\tgetTitle(windowId: number): Promise<string> {\n\t\treturn this.channel.call('getTitle', [windowId]);\n\t}\n\n\tisActiveElement(windowId: number, selector: string): Promise<boolean> {\n\t\treturn this.channel.call('isActiveElement', [windowId, selector]);\n\t}\n\n\tgetElements(windowId: number, selector: string, recursive: boolean): Promise<IElement[]> {\n\t\treturn this.channel.call('getElements', [windowId, selector, recursive]);\n\t}\n\n\tgetElementXY(windowId: number, selector: string, xoffset: number | undefined, yoffset: number | undefined): Promise<{ x: number, y: number }> {\n\t\treturn this.channel.call('getElementXY', [windowId, selector, xoffset, yoffset]);\n\t}\n\n\ttypeInEditor(windowId: number, selector: string, text: string): Promise<void> {\n\t\treturn this.channel.call('typeInEditor', [windowId, selector, text]);\n\t}\n\n\tgetTerminalBuffer(windowId: number, selector: string): Promise<string[]> {\n\t\treturn this.channel.call('getTerminalBuffer', [windowId, selector]);\n\t}\n\n\twriteInTerminal(windowId: number, selector: string, text: string): Promise<void> {\n\t\treturn this.channel.call('writeInTerminal', [windowId, selector, text]);\n\t}\n\n\tgetLocaleInfo(windowId: number): Promise<ILocaleInfo> {\n\t\treturn this.channel.call('getLocaleInfo', windowId);\n\t}\n\n\tgetLocalizedStrings(windowId: number): Promise<ILocalizedStrings> {\n\t\treturn this.channel.call('getLocalizedStrings', windowId);\n\t}\n}\n\nexport class WindowDriverRegistryChannel implements IServerChannel {\n\n\tconstructor(private registry: IWindowDriverRegistry) { }\n\n\tlisten<T>(_: unknown, event: string): Event<T> {\n\t\tthrow new Error(`Event not found: ${event}`);\n\t}\n\n\tcall(_: unknown, command: string, arg?: any): Promise<any> {\n\t\tswitch (command) {\n\t\t\tcase 'registerWindowDriver': return this.registry.registerWindowDriver(arg);\n\t\t\tcase 'reloadWindowDriver': return this.registry.reloadWindowDriver(arg);\n\t\t}\n\n\t\tthrow new Error(`Call not found: ${command}`);\n\t}\n}\n\nexport async function connect(handle: string): Promise<{ client: Client, driver: IDriver }> {\n\tconst client = await connectNet(handle, 'driverClient');\n\tconst channel = client.getChannel('driver');\n\tconst driver = new DriverChannelClient(channel);\n\treturn { client, driver };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { timeout } from 'vs/base/common/async';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { KeybindingParser } from 'vs/base/common/keybindingParser';\nimport { KeyCode } from 'vs/base/common/keyCodes';\nimport { SimpleKeybinding, ScanCodeBinding } from 'vs/base/common/keybindings';\nimport { combinedDisposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { OS } from 'vs/base/common/platform';\nimport { IPCServer, StaticRouter } from 'vs/base/parts/ipc/common/ipc';\nimport { serve as serveNet } from 'vs/base/parts/ipc/node/ipc.net';\nimport { IDriver, IDriverOptions, IElement, ILocaleInfo, ILocalizedStrings, IWindowDriver, IWindowDriverRegistry } from 'vs/platform/driver/common/driver';\nimport { WindowDriverChannelClient } from 'vs/platform/driver/common/driverIpc';\nimport { DriverChannel, WindowDriverRegistryChannel } from 'vs/platform/driver/node/driver';\nimport { IEnvironmentMainService } from 'vs/platform/environment/electron-main/environmentMainService';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { USLayoutResolvedKeybinding } from 'vs/platform/keybinding/common/usLayoutResolvedKeybinding';\nimport { ILifecycleMainService } from 'vs/platform/lifecycle/electron-main/lifecycleMainService';\nimport { IWindowsMainService } from 'vs/platform/windows/electron-main/windows';\n\nfunction isSilentKeyCode(keyCode: KeyCode) {\n\treturn keyCode < KeyCode.Digit0;\n}\n\nexport class Driver implements IDriver, IWindowDriverRegistry {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate registeredWindowIds = new Set<number>();\n\tprivate reloadingWindowIds = new Set<number>();\n\tprivate readonly onDidReloadingChange = new Emitter<void>();\n\n\tconstructor(\n\t\tprivate windowServer: IPCServer,\n\t\tprivate options: IDriverOptions,\n\t\t@IWindowsMainService private readonly windowsMainService: IWindowsMainService,\n\t\t@ILifecycleMainService private readonly lifecycleMainService: ILifecycleMainService\n\t) { }\n\n\tasync registerWindowDriver(windowId: number): Promise<IDriverOptions> {\n\t\tthis.registeredWindowIds.add(windowId);\n\t\tthis.reloadingWindowIds.delete(windowId);\n\t\tthis.onDidReloadingChange.fire();\n\t\treturn this.options;\n\t}\n\n\tasync reloadWindowDriver(windowId: number): Promise<void> {\n\t\tthis.reloadingWindowIds.add(windowId);\n\t}\n\n\tasync getWindowIds(): Promise<number[]> {\n\t\treturn this.windowsMainService.getWindows()\n\t\t\t.map(w => w.id)\n\t\t\t.filter(id => this.registeredWindowIds.has(id) && !this.reloadingWindowIds.has(id));\n\t}\n\n\tasync capturePage(windowId: number): Promise<string> {\n\t\tawait this.whenUnfrozen(windowId);\n\n\t\tconst window = this.windowsMainService.getWindowById(windowId);\n\t\tif (!window?.win) {\n\t\t\tthrow new Error('Invalid window');\n\t\t}\n\t\tconst webContents = window.win.webContents;\n\t\tconst image = await webContents.capturePage();\n\t\treturn image.toPNG().toString('base64');\n\t}\n\n\tasync reloadWindow(windowId: number): Promise<void> {\n\t\tawait this.whenUnfrozen(windowId);\n\n\t\tconst window = this.windowsMainService.getWindowById(windowId);\n\t\tif (!window) {\n\t\t\tthrow new Error('Invalid window');\n\t\t}\n\t\tthis.reloadingWindowIds.add(windowId);\n\t\tthis.lifecycleMainService.reload(window);\n\t}\n\n\texitApplication(): Promise<boolean> {\n\t\treturn this.lifecycleMainService.quit();\n\t}\n\n\tasync dispatchKeybinding(windowId: number, keybinding: string): Promise<void> {\n\t\tawait this.whenUnfrozen(windowId);\n\n\t\tconst parts = KeybindingParser.parseUserBinding(keybinding);\n\n\t\tfor (let part of parts) {\n\t\t\tawait this._dispatchKeybinding(windowId, part);\n\t\t}\n\t}\n\n\tprivate async _dispatchKeybinding(windowId: number, keybinding: SimpleKeybinding | ScanCodeBinding): Promise<void> {\n\t\tif (keybinding instanceof ScanCodeBinding) {\n\t\t\tthrow new Error('ScanCodeBindings not supported');\n\t\t}\n\n\t\tconst window = this.windowsMainService.getWindowById(windowId);\n\t\tif (!window?.win) {\n\t\t\tthrow new Error('Invalid window');\n\t\t}\n\t\tconst webContents = window.win.webContents;\n\t\tconst noModifiedKeybinding = new SimpleKeybinding(false, false, false, false, keybinding.keyCode);\n\t\tconst resolvedKeybinding = new USLayoutResolvedKeybinding(noModifiedKeybinding.toChord(), OS);\n\t\tconst keyCode = resolvedKeybinding.getElectronAccelerator();\n\n\t\tconst modifiers: string[] = [];\n\n\t\tif (keybinding.ctrlKey) {\n\t\t\tmodifiers.push('ctrl');\n\t\t}\n\n\t\tif (keybinding.metaKey) {\n\t\t\tmodifiers.push('meta');\n\t\t}\n\n\t\tif (keybinding.shiftKey) {\n\t\t\tmodifiers.push('shift');\n\t\t}\n\n\t\tif (keybinding.altKey) {\n\t\t\tmodifiers.push('alt');\n\t\t}\n\n\t\twebContents.sendInputEvent({ type: 'keyDown', keyCode, modifiers } as any);\n\n\t\tif (!isSilentKeyCode(keybinding.keyCode)) {\n\t\t\twebContents.sendInputEvent({ type: 'char', keyCode, modifiers } as any);\n\t\t}\n\n\t\twebContents.sendInputEvent({ type: 'keyUp', keyCode, modifiers } as any);\n\n\t\tawait timeout(100);\n\t}\n\n\tasync click(windowId: number, selector: string, xoffset?: number, yoffset?: number): Promise<void> {\n\t\tconst windowDriver = await this.getWindowDriver(windowId);\n\t\tawait windowDriver.click(selector, xoffset, yoffset);\n\t}\n\n\tasync doubleClick(windowId: number, selector: string): Promise<void> {\n\t\tconst windowDriver = await this.getWindowDriver(windowId);\n\t\tawait windowDriver.doubleClick(selector);\n\t}\n\n\tasync setValue(windowId: number, selector: string, text: string): Promise<void> {\n\t\tconst windowDriver = await this.getWindowDriver(windowId);\n\t\tawait windowDriver.setValue(selector, text);\n\t}\n\n\tasync getTitle(windowId: number): Promise<string> {\n\t\tconst windowDriver = await this.getWindowDriver(windowId);\n\t\treturn await windowDriver.getTitle();\n\t}\n\n\tasync isActiveElement(windowId: number, selector: string): Promise<boolean> {\n\t\tconst windowDriver = await this.getWindowDriver(windowId);\n\t\treturn await windowDriver.isActiveElement(selector);\n\t}\n\n\tasync getElements(windowId: number, selector: string, recursive: boolean): Promise<IElement[]> {\n\t\tconst windowDriver = await this.getWindowDriver(windowId);\n\t\treturn await windowDriver.getElements(selector, recursive);\n\t}\n\n\tasync getElementXY(windowId: number, selector: string, xoffset?: number, yoffset?: number): Promise<{ x: number; y: number; }> {\n\t\tconst windowDriver = await this.getWindowDriver(windowId);\n\t\treturn await windowDriver.getElementXY(selector, xoffset, yoffset);\n\t}\n\n\tasync typeInEditor(windowId: number, selector: string, text: string): Promise<void> {\n\t\tconst windowDriver = await this.getWindowDriver(windowId);\n\t\tawait windowDriver.typeInEditor(selector, text);\n\t}\n\n\tasync getTerminalBuffer(windowId: number, selector: string): Promise<string[]> {\n\t\tconst windowDriver = await this.getWindowDriver(windowId);\n\t\treturn await windowDriver.getTerminalBuffer(selector);\n\t}\n\n\tasync writeInTerminal(windowId: number, selector: string, text: string): Promise<void> {\n\t\tconst windowDriver = await this.getWindowDriver(windowId);\n\t\tawait windowDriver.writeInTerminal(selector, text);\n\t}\n\n\tasync getLocaleInfo(windowId: number): Promise<ILocaleInfo> {\n\t\tconst windowDriver = await this.getWindowDriver(windowId);\n\t\treturn await windowDriver.getLocaleInfo();\n\t}\n\n\tasync getLocalizedStrings(windowId: number): Promise<ILocalizedStrings> {\n\t\tconst windowDriver = await this.getWindowDriver(windowId);\n\t\treturn await windowDriver.getLocalizedStrings();\n\t}\n\n\tprivate async getWindowDriver(windowId: number): Promise<IWindowDriver> {\n\t\tawait this.whenUnfrozen(windowId);\n\n\t\tconst id = `window:${windowId}`;\n\t\tconst router = new StaticRouter(ctx => ctx === id);\n\t\tconst windowDriverChannel = this.windowServer.getChannel('windowDriver', router);\n\t\treturn new WindowDriverChannelClient(windowDriverChannel);\n\t}\n\n\tprivate async whenUnfrozen(windowId: number): Promise<void> {\n\t\twhile (this.reloadingWindowIds.has(windowId)) {\n\t\t\tawait Event.toPromise(this.onDidReloadingChange.event);\n\t\t}\n\t}\n}\n\nexport async function serve(\n\twindowServer: IPCServer,\n\thandle: string,\n\tenvironmentMainService: IEnvironmentMainService,\n\tinstantiationService: IInstantiationService\n): Promise<IDisposable> {\n\tconst verbose = environmentMainService.driverVerbose;\n\tconst driver = instantiationService.createInstance(Driver, windowServer, { verbose });\n\n\tconst windowDriverRegistryChannel = new WindowDriverRegistryChannel(driver);\n\twindowServer.registerChannel('windowDriverRegistry', windowDriverRegistryChannel);\n\n\tconst server = await serveNet(handle);\n\tconst channel = new DriverChannel(driver);\n\tserver.registerChannel('driver', channel);\n\n\treturn combinedDisposable(server, windowServer);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { memoize } from 'vs/base/common/decorators';\nimport { join } from 'vs/base/common/path';\nimport { createStaticIPCHandle } from 'vs/base/parts/ipc/node/ipc.net';\nimport { IEnvironmentService, INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { NativeEnvironmentService } from 'vs/platform/environment/node/environmentService';\nimport { refineServiceDecorator } from 'vs/platform/instantiation/common/instantiation';\n\nexport const IEnvironmentMainService = refineServiceDecorator<IEnvironmentService, IEnvironmentMainService>(IEnvironmentService);\n\n/**\n * A subclass of the `INativeEnvironmentService` to be used only in electron-main\n * environments.\n */\nexport interface IEnvironmentMainService extends INativeEnvironmentService {\n\n\t// --- NLS cache path\n\tcachedLanguagesPath: string;\n\n\t// --- backup paths\n\tbackupHome: string;\n\tbackupWorkspacesPath: string;\n\n\t// --- V8 code caching\n\tcodeCachePath: string | undefined;\n\tuseCodeCache: boolean;\n\n\t// --- IPC\n\tmainIPCHandle: string;\n\tmainLockfile: string;\n\n\t// --- config\n\tsandbox: boolean;\n\tdriverVerbose: boolean;\n\tdisableUpdates: boolean;\n\tdisableKeytar: boolean;\n}\n\nexport class EnvironmentMainService extends NativeEnvironmentService implements IEnvironmentMainService {\n\n\t@memoize\n\tget cachedLanguagesPath(): string { return join(this.userDataPath, 'clp'); }\n\n\t@memoize\n\tget backupHome(): string { return join(this.userDataPath, 'Backups'); }\n\n\t@memoize\n\tget backupWorkspacesPath(): string { return join(this.backupHome, 'workspaces.json'); }\n\n\t@memoize\n\tget mainIPCHandle(): string { return createStaticIPCHandle(this.userDataPath, 'main', this.productService.version); }\n\n\t@memoize\n\tget mainLockfile(): string { return join(this.userDataPath, 'code.lock'); }\n\n\t@memoize\n\tget sandbox(): boolean { return !!this.args['__sandbox']; }\n\n\t@memoize\n\tget driverVerbose(): boolean { return !!this.args['driver-verbose']; }\n\n\t@memoize\n\tget disableUpdates(): boolean { return !!this.args['disable-updates']; }\n\n\t@memoize\n\tget disableKeytar(): boolean { return !!this.args['disable-keytar']; }\n\n\t@memoize\n\tget codeCachePath(): string | undefined { return process.env['VSCODE_CODE_CACHE_PATH'] || undefined; }\n\n\t@memoize\n\tget useCodeCache(): boolean { return !!this.codeCachePath; }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createHash } from 'crypto';\nimport * as fs from 'fs';\nimport { isEqual } from 'vs/base/common/extpath';\nimport { Schemas } from 'vs/base/common/network';\nimport { join } from 'vs/base/common/path';\nimport { isLinux } from 'vs/base/common/platform';\nimport { extUriBiasedIgnorePathCase } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { Promises, RimRafMode, writeFileSync } from 'vs/base/node/pfs';\nimport { IBackupMainService, isWorkspaceBackupInfo, IWorkspaceBackupInfo } from 'vs/platform/backup/electron-main/backup';\nimport { IBackupWorkspacesFormat, IEmptyWindowBackupInfo } from 'vs/platform/backup/node/backup';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IEnvironmentMainService } from 'vs/platform/environment/electron-main/environmentMainService';\nimport { HotExitConfiguration, IFilesConfiguration } from 'vs/platform/files/common/files';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { isWorkspaceIdentifier, IWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\n\nexport class BackupMainService implements IBackupMainService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprotected backupHome: string;\n\tprotected workspacesJsonPath: string;\n\n\tprivate workspaces: IWorkspaceBackupInfo[] = [];\n\tprivate folders: URI[] = [];\n\tprivate emptyWindows: IEmptyWindowBackupInfo[] = [];\n\n\t// Comparers for paths and resources that will\n\t// - ignore path casing on Windows/macOS\n\t// - respect path casing on Linux\n\tprivate readonly backupUriComparer = extUriBiasedIgnorePathCase;\n\tprivate readonly backupPathComparer = { isEqual: (pathA: string, pathB: string) => isEqual(pathA, pathB, !isLinux) };\n\n\tconstructor(\n\t\t@IEnvironmentMainService environmentMainService: IEnvironmentMainService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tthis.backupHome = environmentMainService.backupHome;\n\t\tthis.workspacesJsonPath = environmentMainService.backupWorkspacesPath;\n\t}\n\n\tasync initialize(): Promise<void> {\n\t\tlet backups: IBackupWorkspacesFormat;\n\t\ttry {\n\t\t\tbackups = JSON.parse(await Promises.readFile(this.workspacesJsonPath, 'utf8')); // invalid JSON or permission issue can happen here\n\t\t} catch (error) {\n\t\t\tbackups = Object.create(null);\n\t\t}\n\n\t\t// validate empty workspaces backups first\n\t\tthis.emptyWindows = await this.validateEmptyWorkspaces(backups.emptyWorkspaceInfos);\n\n\t\t// read workspace backups\n\t\tlet rootWorkspaces: IWorkspaceBackupInfo[] = [];\n\t\ttry {\n\t\t\tif (Array.isArray(backups.rootURIWorkspaces)) {\n\t\t\t\trootWorkspaces = backups.rootURIWorkspaces.map(workspace => ({\n\t\t\t\t\tworkspace: { id: workspace.id, configPath: URI.parse(workspace.configURIPath) },\n\t\t\t\t\tremoteAuthority: workspace.remoteAuthority\n\t\t\t\t}));\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// ignore URI parsing exceptions\n\t\t}\n\n\t\t// validate workspace backups\n\t\tthis.workspaces = await this.validateWorkspaces(rootWorkspaces);\n\n\t\t// read folder backups\n\t\tlet workspaceFolders: URI[] = [];\n\t\ttry {\n\t\t\tif (Array.isArray(backups.folderURIWorkspaces)) {\n\t\t\t\tworkspaceFolders = backups.folderURIWorkspaces.map(folder => URI.parse(folder));\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// ignore URI parsing exceptions\n\t\t}\n\n\t\t// validate folder backups\n\t\tthis.folders = await this.validateFolders(workspaceFolders);\n\n\t\t// save again in case some workspaces or folders have been removed\n\t\tawait this.save();\n\t}\n\n\tgetWorkspaceBackups(): IWorkspaceBackupInfo[] {\n\t\tif (this.isHotExitOnExitAndWindowClose()) {\n\t\t\t// Only non-folder windows are restored on main process launch when\n\t\t\t// hot exit is configured as onExitAndWindowClose.\n\t\t\treturn [];\n\t\t}\n\n\t\treturn this.workspaces.slice(0); // return a copy\n\t}\n\n\tgetFolderBackupPaths(): URI[] {\n\t\tif (this.isHotExitOnExitAndWindowClose()) {\n\t\t\t// Only non-folder windows are restored on main process launch when\n\t\t\t// hot exit is configured as onExitAndWindowClose.\n\t\t\treturn [];\n\t\t}\n\n\t\treturn this.folders.slice(0); // return a copy\n\t}\n\n\tisHotExitEnabled(): boolean {\n\t\treturn this.getHotExitConfig() !== HotExitConfiguration.OFF;\n\t}\n\n\tprivate isHotExitOnExitAndWindowClose(): boolean {\n\t\treturn this.getHotExitConfig() === HotExitConfiguration.ON_EXIT_AND_WINDOW_CLOSE;\n\t}\n\n\tprivate getHotExitConfig(): string {\n\t\tconst config = this.configurationService.getValue<IFilesConfiguration>();\n\n\t\treturn config?.files?.hotExit || HotExitConfiguration.ON_EXIT;\n\t}\n\n\tgetEmptyWindowBackupPaths(): IEmptyWindowBackupInfo[] {\n\t\treturn this.emptyWindows.slice(0); // return a copy\n\t}\n\n\tregisterWorkspaceBackupSync(workspaceInfo: IWorkspaceBackupInfo, migrateFrom?: string): string {\n\t\tif (!this.workspaces.some(workspace => workspaceInfo.workspace.id === workspace.workspace.id)) {\n\t\t\tthis.workspaces.push(workspaceInfo);\n\t\t\tthis.saveSync();\n\t\t}\n\n\t\tconst backupPath = this.getBackupPath(workspaceInfo.workspace.id);\n\n\t\tif (migrateFrom) {\n\t\t\tthis.moveBackupFolderSync(backupPath, migrateFrom);\n\t\t}\n\n\t\treturn backupPath;\n\t}\n\n\tprivate moveBackupFolderSync(backupPath: string, moveFromPath: string): void {\n\n\t\t// Target exists: make sure to convert existing backups to empty window backups\n\t\tif (fs.existsSync(backupPath)) {\n\t\t\tthis.convertToEmptyWindowBackupSync(backupPath);\n\t\t}\n\n\t\t// When we have data to migrate from, move it over to the target location\n\t\tif (fs.existsSync(moveFromPath)) {\n\t\t\ttry {\n\t\t\t\tfs.renameSync(moveFromPath, backupPath);\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.error(`Backup: Could not move backup folder to new location: ${error.toString()}`);\n\t\t\t}\n\t\t}\n\t}\n\n\tunregisterWorkspaceBackupSync(workspace: IWorkspaceIdentifier): void {\n\t\tconst id = workspace.id;\n\t\tconst index = this.workspaces.findIndex(workspace => workspace.workspace.id === id);\n\t\tif (index !== -1) {\n\t\t\tthis.workspaces.splice(index, 1);\n\t\t\tthis.saveSync();\n\t\t}\n\t}\n\n\tregisterFolderBackupSync(folderUri: URI): string {\n\t\tif (!this.folders.some(folder => this.backupUriComparer.isEqual(folderUri, folder))) {\n\t\t\tthis.folders.push(folderUri);\n\t\t\tthis.saveSync();\n\t\t}\n\n\t\treturn this.getBackupPath(this.getFolderHash(folderUri));\n\t}\n\n\tunregisterFolderBackupSync(folderUri: URI): void {\n\t\tconst index = this.folders.findIndex(folder => this.backupUriComparer.isEqual(folderUri, folder));\n\t\tif (index !== -1) {\n\t\t\tthis.folders.splice(index, 1);\n\t\t\tthis.saveSync();\n\t\t}\n\t}\n\n\tregisterEmptyWindowBackupSync(backupFolderCandidate?: string, remoteAuthority?: string): string {\n\n\t\t// Generate a new folder if this is a new empty workspace\n\t\tconst backupFolder = backupFolderCandidate || this.getRandomEmptyWindowId();\n\t\tif (!this.emptyWindows.some(emptyWindow => !!emptyWindow.backupFolder && this.backupPathComparer.isEqual(emptyWindow.backupFolder, backupFolder))) {\n\t\t\tthis.emptyWindows.push({ backupFolder, remoteAuthority });\n\t\t\tthis.saveSync();\n\t\t}\n\n\t\treturn this.getBackupPath(backupFolder);\n\t}\n\n\tunregisterEmptyWindowBackupSync(backupFolder: string): void {\n\t\tconst index = this.emptyWindows.findIndex(emptyWindow => !!emptyWindow.backupFolder && this.backupPathComparer.isEqual(emptyWindow.backupFolder, backupFolder));\n\t\tif (index !== -1) {\n\t\t\tthis.emptyWindows.splice(index, 1);\n\t\t\tthis.saveSync();\n\t\t}\n\t}\n\n\tprivate getBackupPath(oldFolderHash: string): string {\n\t\treturn join(this.backupHome, oldFolderHash);\n\t}\n\n\tprivate async validateWorkspaces(rootWorkspaces: IWorkspaceBackupInfo[]): Promise<IWorkspaceBackupInfo[]> {\n\t\tif (!Array.isArray(rootWorkspaces)) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst seenIds: Set<string> = new Set();\n\t\tconst result: IWorkspaceBackupInfo[] = [];\n\n\t\t// Validate Workspaces\n\t\tfor (let workspaceInfo of rootWorkspaces) {\n\t\t\tconst workspace = workspaceInfo.workspace;\n\t\t\tif (!isWorkspaceIdentifier(workspace)) {\n\t\t\t\treturn []; // wrong format, skip all entries\n\t\t\t}\n\n\t\t\tif (!seenIds.has(workspace.id)) {\n\t\t\t\tseenIds.add(workspace.id);\n\n\t\t\t\tconst backupPath = this.getBackupPath(workspace.id);\n\t\t\t\tconst hasBackups = await this.doHasBackups(backupPath);\n\n\t\t\t\t// If the workspace has no backups, ignore it\n\t\t\t\tif (hasBackups) {\n\t\t\t\t\tif (workspace.configPath.scheme !== Schemas.file || await Promises.exists(workspace.configPath.fsPath)) {\n\t\t\t\t\t\tresult.push(workspaceInfo);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// If the workspace has backups, but the target workspace is missing, convert backups to empty ones\n\t\t\t\t\t\tawait this.convertToEmptyWindowBackup(backupPath);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tawait this.deleteStaleBackup(backupPath);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate async validateFolders(folderWorkspaces: URI[]): Promise<URI[]> {\n\t\tif (!Array.isArray(folderWorkspaces)) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst result: URI[] = [];\n\t\tconst seenIds: Set<string> = new Set();\n\t\tfor (let folderURI of folderWorkspaces) {\n\t\t\tconst key = this.backupUriComparer.getComparisonKey(folderURI);\n\t\t\tif (!seenIds.has(key)) {\n\t\t\t\tseenIds.add(key);\n\n\t\t\t\tconst backupPath = this.getBackupPath(this.getFolderHash(folderURI));\n\t\t\t\tconst hasBackups = await this.doHasBackups(backupPath);\n\n\t\t\t\t// If the folder has no backups, ignore it\n\t\t\t\tif (hasBackups) {\n\t\t\t\t\tif (folderURI.scheme !== Schemas.file || await Promises.exists(folderURI.fsPath)) {\n\t\t\t\t\t\tresult.push(folderURI);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// If the folder has backups, but the target workspace is missing, convert backups to empty ones\n\t\t\t\t\t\tawait this.convertToEmptyWindowBackup(backupPath);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tawait this.deleteStaleBackup(backupPath);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate async validateEmptyWorkspaces(emptyWorkspaces: IEmptyWindowBackupInfo[]): Promise<IEmptyWindowBackupInfo[]> {\n\t\tif (!Array.isArray(emptyWorkspaces)) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst result: IEmptyWindowBackupInfo[] = [];\n\t\tconst seenIds: Set<string> = new Set();\n\n\t\t// Validate Empty Windows\n\t\tfor (let backupInfo of emptyWorkspaces) {\n\t\t\tconst backupFolder = backupInfo.backupFolder;\n\t\t\tif (typeof backupFolder !== 'string') {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\tif (!seenIds.has(backupFolder)) {\n\t\t\t\tseenIds.add(backupFolder);\n\n\t\t\t\tconst backupPath = this.getBackupPath(backupFolder);\n\t\t\t\tif (await this.doHasBackups(backupPath)) {\n\t\t\t\t\tresult.push(backupInfo);\n\t\t\t\t} else {\n\t\t\t\t\tawait this.deleteStaleBackup(backupPath);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate async deleteStaleBackup(backupPath: string): Promise<void> {\n\t\ttry {\n\t\t\tif (await Promises.exists(backupPath)) {\n\t\t\t\tawait Promises.rm(backupPath, RimRafMode.MOVE);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.logService.error(`Backup: Could not delete stale backup: ${error.toString()}`);\n\t\t}\n\t}\n\n\tprivate async convertToEmptyWindowBackup(backupPath: string): Promise<boolean> {\n\n\t\t// New empty window backup\n\t\tlet newBackupFolder = this.getRandomEmptyWindowId();\n\t\twhile (this.emptyWindows.some(emptyWindow => !!emptyWindow.backupFolder && this.backupPathComparer.isEqual(emptyWindow.backupFolder, newBackupFolder))) {\n\t\t\tnewBackupFolder = this.getRandomEmptyWindowId();\n\t\t}\n\n\t\t// Rename backupPath to new empty window backup path\n\t\tconst newEmptyWindowBackupPath = this.getBackupPath(newBackupFolder);\n\t\ttry {\n\t\t\tawait Promises.rename(backupPath, newEmptyWindowBackupPath);\n\t\t} catch (error) {\n\t\t\tthis.logService.error(`Backup: Could not rename backup folder: ${error.toString()}`);\n\t\t\treturn false;\n\t\t}\n\t\tthis.emptyWindows.push({ backupFolder: newBackupFolder });\n\n\t\treturn true;\n\t}\n\n\tprivate convertToEmptyWindowBackupSync(backupPath: string): boolean {\n\n\t\t// New empty window backup\n\t\tlet newBackupFolder = this.getRandomEmptyWindowId();\n\t\twhile (this.emptyWindows.some(emptyWindow => !!emptyWindow.backupFolder && this.backupPathComparer.isEqual(emptyWindow.backupFolder, newBackupFolder))) {\n\t\t\tnewBackupFolder = this.getRandomEmptyWindowId();\n\t\t}\n\n\t\t// Rename backupPath to new empty window backup path\n\t\tconst newEmptyWindowBackupPath = this.getBackupPath(newBackupFolder);\n\t\ttry {\n\t\t\tfs.renameSync(backupPath, newEmptyWindowBackupPath);\n\t\t} catch (error) {\n\t\t\tthis.logService.error(`Backup: Could not rename backup folder: ${error.toString()}`);\n\t\t\treturn false;\n\t\t}\n\t\tthis.emptyWindows.push({ backupFolder: newBackupFolder });\n\n\t\treturn true;\n\t}\n\n\tasync getDirtyWorkspaces(): Promise<Array<IWorkspaceIdentifier | URI>> {\n\t\tconst dirtyWorkspaces: Array<IWorkspaceIdentifier | URI> = [];\n\n\t\t// Workspaces with backups\n\t\tfor (const workspace of this.workspaces) {\n\t\t\tif ((await this.hasBackups(workspace))) {\n\t\t\t\tdirtyWorkspaces.push(workspace.workspace);\n\t\t\t}\n\t\t}\n\n\t\t// Folders with backups\n\t\tfor (const folder of this.folders) {\n\t\t\tif ((await this.hasBackups(folder))) {\n\t\t\t\tdirtyWorkspaces.push(folder);\n\t\t\t}\n\t\t}\n\n\t\treturn dirtyWorkspaces;\n\t}\n\n\tprivate hasBackups(backupLocation: IWorkspaceBackupInfo | IEmptyWindowBackupInfo | URI): Promise<boolean> {\n\t\tlet backupPath: string;\n\n\t\t// Folder\n\t\tif (URI.isUri(backupLocation)) {\n\t\t\tbackupPath = this.getBackupPath(this.getFolderHash(backupLocation));\n\t\t}\n\n\t\t// Workspace\n\t\telse if (isWorkspaceBackupInfo(backupLocation)) {\n\t\t\tbackupPath = this.getBackupPath(backupLocation.workspace.id);\n\t\t}\n\n\t\t// Empty\n\t\telse {\n\t\t\tbackupPath = backupLocation.backupFolder;\n\t\t}\n\n\t\treturn this.doHasBackups(backupPath);\n\t}\n\n\tprivate async doHasBackups(backupPath: string): Promise<boolean> {\n\t\ttry {\n\t\t\tconst backupSchemas = await Promises.readdir(backupPath);\n\n\t\t\tfor (const backupSchema of backupSchemas) {\n\t\t\t\ttry {\n\t\t\t\t\tconst backupSchemaChildren = await Promises.readdir(join(backupPath, backupSchema));\n\t\t\t\t\tif (backupSchemaChildren.length > 0) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// invalid folder\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t// backup path does not exist\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate saveSync(): void {\n\t\ttry {\n\t\t\twriteFileSync(this.workspacesJsonPath, JSON.stringify(this.serializeBackups()));\n\t\t} catch (error) {\n\t\t\tthis.logService.error(`Backup: Could not save workspaces.json: ${error.toString()}`);\n\t\t}\n\t}\n\n\tprivate async save(): Promise<void> {\n\t\ttry {\n\t\t\tawait Promises.writeFile(this.workspacesJsonPath, JSON.stringify(this.serializeBackups()));\n\t\t} catch (error) {\n\t\t\tthis.logService.error(`Backup: Could not save workspaces.json: ${error.toString()}`);\n\t\t}\n\t}\n\n\tprivate serializeBackups(): IBackupWorkspacesFormat {\n\t\treturn {\n\t\t\trootURIWorkspaces: this.workspaces.map(workspace => ({ id: workspace.workspace.id, configURIPath: workspace.workspace.configPath.toString(), remoteAuthority: workspace.remoteAuthority })),\n\t\t\tfolderURIWorkspaces: this.folders.map(folder => folder.toString()),\n\t\t\temptyWorkspaceInfos: this.emptyWindows\n\t\t};\n\t}\n\n\tprivate getRandomEmptyWindowId(): string {\n\t\treturn (Date.now() + Math.round(Math.random() * 1000)).toString();\n\t}\n\n\tprotected getFolderHash(folderUri: URI): string {\n\t\tlet key: string;\n\n\t\tif (folderUri.scheme === Schemas.file) {\n\t\t\t// for backward compatibility, use the fspath as key\n\t\t\tkey = isLinux ? folderUri.fsPath : folderUri.fsPath.toLowerCase();\n\t\t} else {\n\t\t\tkey = folderUri.toString().toLowerCase();\n\t\t}\n\n\t\treturn createHash('md5').update(key).digest('hex');\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as net from 'net';\nimport { NodeSocket } from 'vs/base/parts/ipc/node/ipc.net';\nimport { IConnectCallback, ISocketFactory } from 'vs/platform/remote/common/remoteAgentConnection';\n\nexport const nodeSocketFactory = new class implements ISocketFactory {\n\tconnect(host: string, port: number, query: string, debugLabel: string, callback: IConnectCallback): void {\n\t\tconst errorListener = (err: any) => callback(err, undefined);\n\n\t\tconst socket = net.createConnection({ host: host, port: port }, () => {\n\t\t\tsocket.removeListener('error', errorListener);\n\n\t\t\t// https://tools.ietf.org/html/rfc6455#section-4\n\t\t\tconst buffer = Buffer.alloc(16);\n\t\t\tfor (let i = 0; i < 16; i++) {\n\t\t\t\tbuffer[i] = Math.round(Math.random() * 256);\n\t\t\t}\n\t\t\tconst nonce = buffer.toString('base64');\n\n\t\t\tconst headers = [\n\t\t\t\t`GET ws://${/:/.test(host) ? `[${host}]` : host}:${port}/?${query}&skipWebSocketFrames=true HTTP/1.1`,\n\t\t\t\t`Connection: Upgrade`,\n\t\t\t\t`Upgrade: websocket`,\n\t\t\t\t`Sec-WebSocket-Key: ${nonce}`\n\t\t\t];\n\t\t\tsocket.write(headers.join('\\r\\n') + '\\r\\n\\r\\n');\n\n\t\t\tconst onData = (data: Buffer) => {\n\t\t\t\tconst strData = data.toString();\n\t\t\t\tif (strData.indexOf('\\r\\n\\r\\n') >= 0) {\n\t\t\t\t\t// headers received OK\n\t\t\t\t\tsocket.off('data', onData);\n\t\t\t\t\tcallback(undefined, new NodeSocket(socket, debugLabel));\n\t\t\t\t}\n\t\t\t};\n\t\t\tsocket.on('data', onData);\n\t\t});\n\t\t// Disable Nagle's algorithm.\n\t\tsocket.setNoDelay(true);\n\t\tsocket.once('error', errorListener);\n\t}\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as net from 'net';\nimport { BROWSER_RESTRICTED_PORTS, findFreePortFaster } from 'vs/base/node/ports';\nimport { NodeSocket } from 'vs/base/parts/ipc/node/ipc.net';\nimport { nodeSocketFactory } from 'vs/platform/remote/node/nodeSocketFactory';\n\nimport { Barrier } from 'vs/base/common/async';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { connectRemoteAgentTunnel, IAddressProvider, IConnectionOptions, ISocketFactory } from 'vs/platform/remote/common/remoteAgentConnection';\nimport { AbstractTunnelService, isAllInterfaces, ISharedTunnelsService as ISharedTunnelsService, isLocalhost, ITunnelService, RemoteTunnel, TunnelPrivacyId } from 'vs/platform/remote/common/tunnel';\nimport { ISignService } from 'vs/platform/sign/common/sign';\n\nasync function createRemoteTunnel(options: IConnectionOptions, defaultTunnelHost: string, tunnelRemoteHost: string, tunnelRemotePort: number, tunnelLocalPort?: number): Promise<RemoteTunnel> {\n\tlet readyTunnel: NodeRemoteTunnel | undefined;\n\tfor (let attempts = 3; attempts; attempts--) {\n\t\tif (readyTunnel) {\n\t\t\treadyTunnel.dispose();\n\t\t}\n\t\tconst tunnel = new NodeRemoteTunnel(options, defaultTunnelHost, tunnelRemoteHost, tunnelRemotePort, tunnelLocalPort);\n\t\treadyTunnel = await tunnel.waitForReady();\n\t\tif ((tunnelLocalPort && BROWSER_RESTRICTED_PORTS[tunnelLocalPort]) || !BROWSER_RESTRICTED_PORTS[readyTunnel.tunnelLocalPort]) {\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn readyTunnel!;\n}\n\nclass NodeRemoteTunnel extends Disposable implements RemoteTunnel {\n\n\tpublic readonly tunnelRemotePort: number;\n\tpublic tunnelLocalPort!: number;\n\tpublic tunnelRemoteHost: string;\n\tpublic localAddress!: string;\n\tpublic readonly privacy = TunnelPrivacyId.Private;\n\n\tprivate readonly _options: IConnectionOptions;\n\tprivate readonly _server: net.Server;\n\tprivate readonly _barrier: Barrier;\n\n\tprivate readonly _listeningListener: () => void;\n\tprivate readonly _connectionListener: (socket: net.Socket) => void;\n\tprivate readonly _errorListener: () => void;\n\n\tprivate readonly _socketsDispose: Map<string, () => void> = new Map();\n\n\tconstructor(options: IConnectionOptions, private readonly defaultTunnelHost: string, tunnelRemoteHost: string, tunnelRemotePort: number, private readonly suggestedLocalPort?: number) {\n\t\tsuper();\n\t\tthis._options = options;\n\t\tthis._server = net.createServer();\n\t\tthis._barrier = new Barrier();\n\n\t\tthis._listeningListener = () => this._barrier.open();\n\t\tthis._server.on('listening', this._listeningListener);\n\n\t\tthis._connectionListener = (socket) => this._onConnection(socket);\n\t\tthis._server.on('connection', this._connectionListener);\n\n\t\t// If there is no error listener and there is an error it will crash the whole window\n\t\tthis._errorListener = () => { };\n\t\tthis._server.on('error', this._errorListener);\n\n\t\tthis.tunnelRemotePort = tunnelRemotePort;\n\t\tthis.tunnelRemoteHost = tunnelRemoteHost;\n\t}\n\n\tpublic override async dispose(): Promise<void> {\n\t\tsuper.dispose();\n\t\tthis._server.removeListener('listening', this._listeningListener);\n\t\tthis._server.removeListener('connection', this._connectionListener);\n\t\tthis._server.removeListener('error', this._errorListener);\n\t\tthis._server.close();\n\t\tconst disposers = Array.from(this._socketsDispose.values());\n\t\tdisposers.forEach(disposer => {\n\t\t\tdisposer();\n\t\t});\n\t}\n\n\tpublic async waitForReady(): Promise<this> {\n\t\t// try to get the same port number as the remote port number...\n\t\tlet localPort = await findFreePortFaster(this.suggestedLocalPort ?? this.tunnelRemotePort, 2, 1000);\n\n\t\t// if that fails, the method above returns 0, which works out fine below...\n\t\tlet address: string | net.AddressInfo | null = null;\n\t\tthis._server.listen(localPort, this.defaultTunnelHost);\n\t\tawait this._barrier.wait();\n\t\taddress = <net.AddressInfo>this._server.address();\n\n\t\t// It is possible for findFreePortFaster to return a port that there is already a server listening on. This causes the previous listen call to error out.\n\t\tif (!address) {\n\t\t\tlocalPort = 0;\n\t\t\tthis._server.listen(localPort, this.defaultTunnelHost);\n\t\t\tawait this._barrier.wait();\n\t\t\taddress = <net.AddressInfo>this._server.address();\n\t\t}\n\n\t\tthis.tunnelLocalPort = address.port;\n\t\tthis.localAddress = `${this.tunnelRemoteHost === '127.0.0.1' ? '127.0.0.1' : 'localhost'}:${address.port}`;\n\t\treturn this;\n\t}\n\n\tprivate async _onConnection(localSocket: net.Socket): Promise<void> {\n\t\t// pause reading on the socket until we have a chance to forward its data\n\t\tlocalSocket.pause();\n\n\t\tconst tunnelRemoteHost = (isLocalhost(this.tunnelRemoteHost) || isAllInterfaces(this.tunnelRemoteHost)) ? 'localhost' : this.tunnelRemoteHost;\n\t\tconst protocol = await connectRemoteAgentTunnel(this._options, tunnelRemoteHost, this.tunnelRemotePort);\n\t\tconst remoteSocket = (<NodeSocket>protocol.getSocket()).socket;\n\t\tconst dataChunk = protocol.readEntireBuffer();\n\t\tprotocol.dispose();\n\n\t\tif (dataChunk.byteLength > 0) {\n\t\t\tlocalSocket.write(dataChunk.buffer);\n\t\t}\n\n\t\tlocalSocket.on('end', () => {\n\t\t\tthis._socketsDispose.delete(localSocket.localAddress);\n\t\t\tremoteSocket.end();\n\t\t});\n\t\tlocalSocket.on('close', () => remoteSocket.end());\n\t\tlocalSocket.on('error', () => {\n\t\t\tthis._socketsDispose.delete(localSocket.localAddress);\n\t\t\tremoteSocket.destroy();\n\t\t});\n\n\t\tremoteSocket.on('end', () => localSocket.end());\n\t\tremoteSocket.on('close', () => localSocket.end());\n\t\tremoteSocket.on('error', () => {\n\t\t\tlocalSocket.destroy();\n\t\t});\n\n\t\tlocalSocket.pipe(remoteSocket);\n\t\tremoteSocket.pipe(localSocket);\n\t\tthis._socketsDispose.set(localSocket.localAddress, () => {\n\t\t\t// Need to end instead of unpipe, otherwise whatever is connected locally could end up \"stuck\" with whatever state it had until manually exited.\n\t\t\tlocalSocket.end();\n\t\t\tremoteSocket.end();\n\t\t});\n\t}\n}\n\nexport class BaseTunnelService extends AbstractTunnelService {\n\tpublic constructor(\n\t\tprivate readonly socketFactory: ISocketFactory,\n\t\t@ILogService logService: ILogService,\n\t\t@ISignService private readonly signService: ISignService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) {\n\t\tsuper(logService);\n\t}\n\n\tprivate get defaultTunnelHost(): string {\n\t\tconst settingValue = this.configurationService.getValue('remote.localPortHost');\n\t\treturn (!settingValue || settingValue === 'localhost') ? '127.0.0.1' : '0.0.0.0';\n\t}\n\n\tprotected retainOrCreateTunnel(addressProvider: IAddressProvider, remoteHost: string, remotePort: number, localPort: number | undefined, elevateIfNeeded: boolean, privacy: string, protocol?: string): Promise<RemoteTunnel | undefined> | undefined {\n\t\tconst existing = this.getTunnelFromMap(remoteHost, remotePort);\n\t\tif (existing) {\n\t\t\t++existing.refcount;\n\t\t\treturn existing.value;\n\t\t}\n\n\t\tif (this._tunnelProvider) {\n\t\t\treturn this.createWithProvider(this._tunnelProvider, remoteHost, remotePort, localPort, elevateIfNeeded, privacy, protocol);\n\t\t} else {\n\t\t\tthis.logService.trace(`ForwardedPorts: (TunnelService) Creating tunnel without provider ${remoteHost}:${remotePort} on local port ${localPort}.`);\n\t\t\tconst options: IConnectionOptions = {\n\t\t\t\tcommit: this.productService.commit,\n\t\t\t\tsocketFactory: this.socketFactory,\n\t\t\t\taddressProvider,\n\t\t\t\tsignService: this.signService,\n\t\t\t\tlogService: this.logService,\n\t\t\t\tipcLogger: null\n\t\t\t};\n\n\t\t\tconst tunnel = createRemoteTunnel(options, this.defaultTunnelHost, remoteHost, remotePort, localPort);\n\t\t\tthis.logService.trace('ForwardedPorts: (TunnelService) Tunnel created without provider.');\n\t\t\tthis.addTunnelToMap(remoteHost, remotePort, tunnel);\n\t\t\treturn tunnel;\n\t\t}\n\t}\n}\n\nexport class TunnelService extends BaseTunnelService {\n\tpublic constructor(\n\t\t@ILogService logService: ILogService,\n\t\t@ISignService signService: ISignService,\n\t\t@IProductService productService: IProductService,\n\t\t@IConfigurationService configurationService: IConfigurationService\n\t) {\n\t\tsuper(nodeSocketFactory, logService, signService, productService, configurationService);\n\t}\n}\n\nexport class SharedTunnelsService extends Disposable implements ISharedTunnelsService {\n\tdeclare readonly _serviceBrand: undefined;\n\tprivate readonly _tunnelServices: Map<string, ITunnelService> = new Map();\n\n\tpublic constructor(\n\t\t@ILogService protected readonly logService: ILogService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@ISignService private readonly signService: ISignService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t) {\n\t\tsuper();\n\t}\n\n\tasync openTunnel(authority: string, addressProvider: IAddressProvider | undefined, remoteHost: string | undefined, remotePort: number, localPort?: number, elevateIfNeeded?: boolean, privacy?: string, protocol?: string): Promise<RemoteTunnel | undefined> {\n\t\tthis.logService.trace(`ForwardedPorts: (SharedTunnelService) openTunnel request for ${remoteHost}:${remotePort} on local port ${localPort}.`);\n\t\tif (!this._tunnelServices.has(authority)) {\n\t\t\tconst tunnelService = new TunnelService(this.logService, this.signService, this.productService, this.configurationService);\n\t\t\tthis._register(tunnelService);\n\t\t\tthis._tunnelServices.set(authority, tunnelService);\n\t\t\ttunnelService.onTunnelClosed(async () => {\n\t\t\t\tif ((await tunnelService.tunnels).length === 0) {\n\t\t\t\t\ttunnelService.dispose();\n\t\t\t\t\tthis._tunnelServices.delete(authority);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn this._tunnelServices.get(authority)!.openTunnel(addressProvider, remoteHost, remotePort, localPort, elevateIfNeeded, privacy, protocol);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as http from 'http';\nimport * as https from 'https';\nimport { parse as parseUrl } from 'url';\nimport { Promises } from 'vs/base/common/async';\nimport { streamToBufferReadableStream } from 'vs/base/common/buffer';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { canceled } from 'vs/base/common/errors';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport * as streams from 'vs/base/common/stream';\nimport { isBoolean, isNumber } from 'vs/base/common/types';\nimport { IRequestContext, IRequestOptions } from 'vs/base/parts/request/common/request';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { INativeEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { getResolvedShellEnv } from 'vs/platform/environment/node/shellEnv';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IHTTPConfiguration, IRequestService } from 'vs/platform/request/common/request';\nimport { Agent, getProxyAgent } from 'vs/platform/request/node/proxy';\nimport { createGunzip } from 'zlib';\n\nexport interface IRawRequestFunction {\n\t(options: http.RequestOptions, callback?: (res: http.IncomingMessage) => void): http.ClientRequest;\n}\n\nexport interface NodeRequestOptions extends IRequestOptions {\n\tagent?: Agent;\n\tstrictSSL?: boolean;\n\tgetRawRequest?(options: IRequestOptions): IRawRequestFunction;\n}\n\n/**\n * This service exposes the `request` API, while using the global\n * or configured proxy settings.\n */\nexport class RequestService extends Disposable implements IRequestService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate proxyUrl?: string;\n\tprivate strictSSL: boolean | undefined;\n\tprivate authorization?: string;\n\tprivate shellEnvErrorLogged?: boolean;\n\n\tconstructor(\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@INativeEnvironmentService private readonly environmentService: INativeEnvironmentService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.configure(configurationService.getValue<IHTTPConfiguration>());\n\t\tthis._register(configurationService.onDidChangeConfiguration(() => this.configure(configurationService.getValue()), this));\n\t}\n\n\tprivate configure(config: IHTTPConfiguration) {\n\t\tthis.proxyUrl = config.http && config.http.proxy;\n\t\tthis.strictSSL = !!(config.http && config.http.proxyStrictSSL);\n\t\tthis.authorization = config.http && config.http.proxyAuthorization;\n\t}\n\n\tasync request(options: NodeRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\t\tthis.logService.trace('RequestService#request', options.url);\n\n\t\tconst { proxyUrl, strictSSL } = this;\n\n\t\tlet shellEnv: typeof process.env | undefined = undefined;\n\t\ttry {\n\t\t\tshellEnv = await getResolvedShellEnv(this.logService, this.environmentService.args, process.env);\n\t\t} catch (error) {\n\t\t\tif (!this.shellEnvErrorLogged) {\n\t\t\t\tthis.shellEnvErrorLogged = true;\n\t\t\t\tthis.logService.error('RequestService#request resolving shell environment failed', error);\n\t\t\t}\n\t\t}\n\n\t\tconst env = {\n\t\t\t...process.env,\n\t\t\t...shellEnv\n\t\t};\n\t\tconst agent = options.agent ? options.agent : await getProxyAgent(options.url || '', env, { proxyUrl, strictSSL });\n\n\t\toptions.agent = agent;\n\t\toptions.strictSSL = strictSSL;\n\n\t\tif (this.authorization) {\n\t\t\toptions.headers = {\n\t\t\t\t...(options.headers || {}),\n\t\t\t\t'Proxy-Authorization': this.authorization\n\t\t\t};\n\t\t}\n\n\t\treturn this._request(options, token);\n\t}\n\n\tprivate async getNodeRequest(options: IRequestOptions): Promise<IRawRequestFunction> {\n\t\tconst endpoint = parseUrl(options.url!);\n\t\tconst module = endpoint.protocol === 'https:' ? await import('https') : await import('http');\n\t\treturn module.request;\n\t}\n\n\tprivate _request(options: NodeRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\n\t\treturn Promises.withAsyncBody<IRequestContext>(async (c, e) => {\n\t\t\tlet req: http.ClientRequest;\n\n\t\t\tconst endpoint = parseUrl(options.url!);\n\t\t\tconst rawRequest = options.getRawRequest\n\t\t\t\t? options.getRawRequest(options)\n\t\t\t\t: await this.getNodeRequest(options);\n\n\t\t\tconst opts: https.RequestOptions = {\n\t\t\t\thostname: endpoint.hostname,\n\t\t\t\tport: endpoint.port ? parseInt(endpoint.port) : (endpoint.protocol === 'https:' ? 443 : 80),\n\t\t\t\tprotocol: endpoint.protocol,\n\t\t\t\tpath: endpoint.path,\n\t\t\t\tmethod: options.type || 'GET',\n\t\t\t\theaders: options.headers,\n\t\t\t\tagent: options.agent,\n\t\t\t\trejectUnauthorized: isBoolean(options.strictSSL) ? options.strictSSL : true\n\t\t\t};\n\n\t\t\tif (options.user && options.password) {\n\t\t\t\topts.auth = options.user + ':' + options.password;\n\t\t\t}\n\n\t\t\treq = rawRequest(opts, (res: http.IncomingMessage) => {\n\t\t\t\tconst followRedirects: number = isNumber(options.followRedirects) ? options.followRedirects : 3;\n\t\t\t\tif (res.statusCode && res.statusCode >= 300 && res.statusCode < 400 && followRedirects > 0 && res.headers['location']) {\n\t\t\t\t\tthis._request({\n\t\t\t\t\t\t...options,\n\t\t\t\t\t\turl: res.headers['location'],\n\t\t\t\t\t\tfollowRedirects: followRedirects - 1\n\t\t\t\t\t}, token).then(c, e);\n\t\t\t\t} else {\n\t\t\t\t\tlet stream: streams.ReadableStreamEvents<Uint8Array> = res;\n\n\t\t\t\t\tif (res.headers['content-encoding'] === 'gzip') {\n\t\t\t\t\t\tstream = res.pipe(createGunzip());\n\t\t\t\t\t}\n\n\t\t\t\t\tc({ res, stream: streamToBufferReadableStream(stream) } as IRequestContext);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treq.on('error', e);\n\n\t\t\tif (options.timeout) {\n\t\t\t\treq.setTimeout(options.timeout);\n\t\t\t}\n\n\t\t\tif (options.data) {\n\t\t\t\tif (typeof options.data === 'string') {\n\t\t\t\t\treq.write(options.data);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treq.end();\n\n\t\t\ttoken.onCancellationRequested(() => {\n\t\t\t\treq.abort();\n\t\t\t\te(canceled());\n\t\t\t});\n\t\t});\n\t}\n\n\tasync resolveProxy(url: string): Promise<string | undefined> {\n\t\treturn undefined; // currently not implemented in node\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { net } from 'electron';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IRequestContext, IRequestOptions } from 'vs/base/parts/request/common/request';\nimport { IRawRequestFunction, RequestService as NodeRequestService } from 'vs/platform/request/node/requestService';\n\nfunction getRawRequest(options: IRequestOptions): IRawRequestFunction {\n\treturn net.request as any as IRawRequestFunction;\n}\n\nexport class RequestMainService extends NodeRequestService {\n\n\toverride request(options: IRequestOptions, token: CancellationToken): Promise<IRequestContext> {\n\t\treturn super.request({ ...(options || {}), getRawRequest }, token);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { BrowserWindow, Event as ElectronEvent, ipcMain, IpcMainEvent, MessagePortMain } from 'electron';\nimport { Barrier } from 'vs/base/common/async';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { FileAccess } from 'vs/base/common/network';\nimport { IProcessEnvironment } from 'vs/base/common/platform';\nimport { assertIsDefined } from 'vs/base/common/types';\nimport { connect as connectMessagePort } from 'vs/base/parts/ipc/electron-main/ipc.mp';\nimport { IEnvironmentMainService } from 'vs/platform/environment/electron-main/environmentMainService';\nimport { ILifecycleMainService } from 'vs/platform/lifecycle/electron-main/lifecycleMainService';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport product from 'vs/platform/product/common/product';\nimport { IProtocolMainService } from 'vs/platform/protocol/electron-main/protocol';\nimport { ISharedProcess, ISharedProcessConfiguration } from 'vs/platform/sharedProcess/node/sharedProcess';\nimport { ISharedProcessWorkerConfiguration } from 'vs/platform/sharedProcess/common/sharedProcessWorkerService';\nimport { IThemeMainService } from 'vs/platform/theme/electron-main/themeMainService';\nimport { WindowError } from 'vs/platform/windows/electron-main/windows';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\n\nexport class SharedProcess extends Disposable implements ISharedProcess {\n\n\tprivate readonly firstWindowConnectionBarrier = new Barrier();\n\n\tprivate window: BrowserWindow | undefined = undefined;\n\tprivate windowCloseListener: ((event: ElectronEvent) => void) | undefined = undefined;\n\n\tprivate readonly _onDidError = this._register(new Emitter<{ type: WindowError, details?: { reason: string, exitCode: number } }>());\n\treadonly onDidError = Event.buffer(this._onDidError.event); // buffer until we have a listener!\n\n\tconstructor(\n\t\tprivate readonly machineId: string,\n\t\tprivate userEnv: IProcessEnvironment,\n\t\t@IEnvironmentMainService private readonly environmentMainService: IEnvironmentMainService,\n\t\t@ILifecycleMainService private readonly lifecycleMainService: ILifecycleMainService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IThemeMainService private readonly themeMainService: IThemeMainService,\n\t\t@IProtocolMainService private readonly protocolMainService: IProtocolMainService\n\t) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// Shared process connections from workbench windows\n\t\tipcMain.on('vscode:createSharedProcessMessageChannel', (e, nonce: string) => this.onWindowConnection(e, nonce));\n\n\t\t// Shared process worker relay\n\t\tipcMain.on('vscode:relaySharedProcessWorkerMessageChannel', (e, configuration: ISharedProcessWorkerConfiguration) => this.onWorkerConnection(e, configuration));\n\n\t\t// Lifecycle\n\t\tthis._register(this.lifecycleMainService.onWillShutdown(() => this.onWillShutdown()));\n\t}\n\n\tprivate async onWindowConnection(e: IpcMainEvent, nonce: string): Promise<void> {\n\t\tthis.logService.trace('SharedProcess: on vscode:createSharedProcessMessageChannel');\n\n\t\t// release barrier if this is the first window connection\n\t\tif (!this.firstWindowConnectionBarrier.isOpen()) {\n\t\t\tthis.firstWindowConnectionBarrier.open();\n\t\t}\n\n\t\t// await the shared process to be overall ready\n\t\t// we do not just wait for IPC ready because the\n\t\t// workbench window will communicate directly\n\t\tawait this.whenReady();\n\n\t\t// connect to the shared process window\n\t\tconst port = await this.connect();\n\n\t\t// Check back if the requesting window meanwhile closed\n\t\t// Since shared process is delayed on startup there is\n\t\t// a chance that the window close before the shared process\n\t\t// was ready for a connection.\n\t\tif (e.sender.isDestroyed()) {\n\t\t\treturn port.close();\n\t\t}\n\n\t\t// send the port back to the requesting window\n\t\te.sender.postMessage('vscode:createSharedProcessMessageChannelResult', nonce, [port]);\n\t}\n\n\tprivate onWorkerConnection(e: IpcMainEvent, configuration: ISharedProcessWorkerConfiguration): void {\n\t\tthis.logService.trace('SharedProcess: onWorkerConnection', configuration);\n\n\t\tconst disposables = new DisposableStore();\n\n\t\tconst disposeWorker = (reason: string) => {\n\t\t\tif (!this.isAlive()) {\n\t\t\t\treturn; // the shared process is already gone, no need to dispose anything\n\t\t\t}\n\n\t\t\tthis.logService.trace(`SharedProcess: disposing worker (reason: '${reason}')`, configuration);\n\n\t\t\t// Only once!\n\t\t\tdisposables.dispose();\n\n\t\t\t// Send this into the shared process who owns workers\n\t\t\tthis.send('vscode:electron-main->shared-process=disposeWorker', configuration);\n\t\t};\n\n\t\t// Ensure the sender is a valid target to send to\n\t\tconst receiverWindow = BrowserWindow.fromId(configuration.reply.windowId);\n\t\tif (!receiverWindow || receiverWindow.isDestroyed() || receiverWindow.webContents.isDestroyed() || !configuration.reply.channel) {\n\t\t\tdisposeWorker('unavailable');\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Attach to lifecycle of receiver to manage worker lifecycle\n\t\tdisposables.add(Event.filter(this.lifecycleMainService.onWillLoadWindow, e => e.window.win === receiverWindow)(() => disposeWorker('load')));\n\t\tdisposables.add(Event.fromNodeEventEmitter(receiverWindow, 'closed')(() => disposeWorker('closed')));\n\n\t\t// The shared process window asks us to relay a `MessagePort`\n\t\t// from a shared process worker to the target window. It needs\n\t\t// to be send via `postMessage` to transfer the port.\n\t\treceiverWindow.webContents.postMessage(configuration.reply.channel, configuration.reply.nonce, e.ports);\n\t}\n\n\tprivate onWillShutdown(): void {\n\t\tconst window = this.window;\n\t\tif (!window) {\n\t\t\treturn; // possibly too early before created\n\t\t}\n\n\t\t// Signal exit to shared process when shutting down\n\t\tthis.send('vscode:electron-main->shared-process=exit');\n\n\t\t// Shut the shared process down when we are quitting\n\t\t//\n\t\t// Note: because we veto the window close, we must first remove our veto.\n\t\t// Otherwise the application would never quit because the shared process\n\t\t// window is refusing to close!\n\t\t//\n\t\tif (this.windowCloseListener) {\n\t\t\twindow.removeListener('close', this.windowCloseListener);\n\t\t\tthis.windowCloseListener = undefined;\n\t\t}\n\n\t\t// Electron seems to crash on Windows without this setTimeout :|\n\t\tsetTimeout(() => {\n\t\t\ttry {\n\t\t\t\twindow.close();\n\t\t\t} catch (err) {\n\t\t\t\t// ignore, as electron is already shutting down\n\t\t\t}\n\n\t\t\tthis.window = undefined;\n\t\t}, 0);\n\t}\n\n\tprivate send(channel: string, ...args: any[]): void {\n\t\tif (!this.isAlive()) {\n\t\t\tthis.logService.warn(`Sending IPC message to channel '${channel}' for shared process window that is destroyed`);\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tthis.window?.webContents.send(channel, ...args);\n\t\t} catch (error) {\n\t\t\tthis.logService.warn(`Error sending IPC message to channel '${channel}' of shared process: ${toErrorMessage(error)}`);\n\t\t}\n\t}\n\n\tprivate _whenReady: Promise<void> | undefined = undefined;\n\twhenReady(): Promise<void> {\n\t\tif (!this._whenReady) {\n\t\t\t// Overall signal that the shared process window was loaded and\n\t\t\t// all services within have been created.\n\t\t\tthis._whenReady = new Promise<void>(resolve => ipcMain.once('vscode:shared-process->electron-main=init-done', () => {\n\t\t\t\tthis.logService.trace('SharedProcess: Overall ready');\n\n\t\t\t\tresolve();\n\t\t\t}));\n\t\t}\n\n\t\treturn this._whenReady;\n\t}\n\n\tprivate _whenIpcReady: Promise<void> | undefined = undefined;\n\tprivate get whenIpcReady() {\n\t\tif (!this._whenIpcReady) {\n\t\t\tthis._whenIpcReady = (async () => {\n\n\t\t\t\t// Always wait for first window asking for connection\n\t\t\t\tawait this.firstWindowConnectionBarrier.wait();\n\n\t\t\t\t// Create window for shared process\n\t\t\t\tthis.createWindow();\n\n\t\t\t\t// Listeners\n\t\t\t\tthis.registerWindowListeners();\n\n\t\t\t\t// Wait for window indicating that IPC connections are accepted\n\t\t\t\tawait new Promise<void>(resolve => ipcMain.once('vscode:shared-process->electron-main=ipc-ready', () => {\n\t\t\t\t\tthis.logService.trace('SharedProcess: IPC ready');\n\n\t\t\t\t\tresolve();\n\t\t\t\t}));\n\t\t\t})();\n\t\t}\n\n\t\treturn this._whenIpcReady;\n\t}\n\n\tprivate createWindow(): void {\n\t\tconst configObjectUrl = this._register(this.protocolMainService.createIPCObjectUrl<ISharedProcessConfiguration>());\n\n\t\t// shared process is a hidden window by default\n\t\tthis.window = new BrowserWindow({\n\t\t\tshow: false,\n\t\t\tbackgroundColor: this.themeMainService.getBackgroundColor(),\n\t\t\twebPreferences: {\n\t\t\t\tpreload: FileAccess.asFileUri('vs/base/parts/sandbox/electron-browser/preload.js', require).fsPath,\n\t\t\t\tadditionalArguments: [`--vscode-window-config=${configObjectUrl.resource.toString()}`, '--vscode-window-kind=shared-process'],\n\t\t\t\tv8CacheOptions: this.environmentMainService.useCodeCache ? 'bypassHeatCheck' : 'none',\n\t\t\t\tnodeIntegration: true,\n\t\t\t\tnodeIntegrationInWorker: true,\n\t\t\t\tcontextIsolation: false,\n\t\t\t\tenableWebSQL: false,\n\t\t\t\tspellcheck: false,\n\t\t\t\tnativeWindowOpen: true,\n\t\t\t\timages: false,\n\t\t\t\twebgl: false\n\t\t\t}\n\t\t});\n\n\t\t// Store into config object URL\n\t\tconfigObjectUrl.update({\n\t\t\tmachineId: this.machineId,\n\t\t\twindowId: this.window.id,\n\t\t\tappRoot: this.environmentMainService.appRoot,\n\t\t\tcodeCachePath: this.environmentMainService.codeCachePath,\n\t\t\tbackupWorkspacesPath: this.environmentMainService.backupWorkspacesPath,\n\t\t\tuserEnv: this.userEnv,\n\t\t\targs: this.environmentMainService.args,\n\t\t\tlogLevel: this.logService.getLevel(),\n\t\t\tproduct\n\t\t});\n\n\t\t// Load with config\n\t\tthis.window.loadURL(FileAccess.asBrowserUri('vs/code/electron-browser/sharedProcess/sharedProcess.html', require).toString(true));\n\t}\n\n\tprivate registerWindowListeners(): void {\n\t\tif (!this.window) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Prevent the window from closing\n\t\tthis.windowCloseListener = (e: ElectronEvent) => {\n\t\t\tthis.logService.trace('SharedProcess#close prevented');\n\n\t\t\t// We never allow to close the shared process unless we get explicitly disposed()\n\t\t\te.preventDefault();\n\n\t\t\t// Still hide the window though if visible\n\t\t\tif (this.window?.isVisible()) {\n\t\t\t\tthis.window.hide();\n\t\t\t}\n\t\t};\n\n\t\tthis.window.on('close', this.windowCloseListener);\n\n\t\t// Crashes & Unresponsive & Failed to load\n\t\t// We use `onUnexpectedError` explicitly because the error handler\n\t\t// will send the error to the active window to log in devtools too\n\t\tthis.window.webContents.on('render-process-gone', (event, details) => this._onDidError.fire({ type: WindowError.CRASHED, details }));\n\t\tthis.window.on('unresponsive', () => this._onDidError.fire({ type: WindowError.UNRESPONSIVE }));\n\t\tthis.window.webContents.on('did-fail-load', (event, exitCode, reason) => this._onDidError.fire({ type: WindowError.LOAD, details: { reason, exitCode } }));\n\t}\n\n\tasync connect(): Promise<MessagePortMain> {\n\n\t\t// Wait for shared process being ready to accept connection\n\t\tawait this.whenIpcReady;\n\n\t\t// Connect and return message port\n\t\tconst window = assertIsDefined(this.window);\n\t\treturn connectMessagePort(window);\n\t}\n\n\tasync toggle(): Promise<void> {\n\n\t\t// wait for window to be created\n\t\tawait this.whenIpcReady;\n\n\t\tif (!this.window) {\n\t\t\treturn; // possibly disposed already\n\t\t}\n\n\t\tif (this.window.isVisible()) {\n\t\t\tthis.window.webContents.closeDevTools();\n\t\t\tthis.window.hide();\n\t\t} else {\n\t\t\tthis.window.show();\n\t\t\tthis.window.webContents.openDevTools();\n\t\t}\n\t}\n\n\tisVisible(): boolean {\n\t\treturn this.window?.isVisible() ?? false;\n\t}\n\n\tprivate isAlive(): boolean {\n\t\tconst window = this.window;\n\t\tif (!window) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn !window.isDestroyed() && !window.webContents.isDestroyed();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ThrottledDelayer } from 'vs/base/common/async';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { join } from 'vs/base/common/path';\nimport { isUndefined, isUndefinedOrNull } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { IEnvironmentMainService } from 'vs/platform/environment/electron-main/environmentMainService';\nimport { FileOperationError, FileOperationResult, IFileService } from 'vs/platform/files/common/files';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IStateMainService } from 'vs/platform/state/electron-main/state';\n\ntype StorageDatabase = { [key: string]: unknown; };\n\nexport class FileStorage {\n\n\tprivate storage: StorageDatabase = Object.create(null);\n\tprivate lastSavedStorageContents = '';\n\n\tprivate readonly flushDelayer = new ThrottledDelayer<void>(100 /* buffer saves over a short time */);\n\n\tprivate initializing: Promise<void> | undefined = undefined;\n\tprivate closing: Promise<void> | undefined = undefined;\n\n\tconstructor(\n\t\tprivate readonly storagePath: URI,\n\t\tprivate readonly logService: ILogService,\n\t\tprivate readonly fileService: IFileService\n\t) {\n\t}\n\n\tinit(): Promise<void> {\n\t\tif (!this.initializing) {\n\t\t\tthis.initializing = this.doInit();\n\t\t}\n\n\t\treturn this.initializing;\n\t}\n\n\tprivate async doInit(): Promise<void> {\n\t\ttry {\n\t\t\tthis.lastSavedStorageContents = (await this.fileService.readFile(this.storagePath)).value.toString();\n\t\t\tthis.storage = JSON.parse(this.lastSavedStorageContents);\n\t\t} catch (error) {\n\t\t\tif ((<FileOperationError>error).fileOperationResult !== FileOperationResult.FILE_NOT_FOUND) {\n\t\t\t\tthis.logService.error(error);\n\t\t\t}\n\t\t}\n\t}\n\n\tgetItem<T>(key: string, defaultValue: T): T;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined {\n\t\tconst res = this.storage[key];\n\t\tif (isUndefinedOrNull(res)) {\n\t\t\treturn defaultValue;\n\t\t}\n\n\t\treturn res as T;\n\t}\n\n\tsetItem(key: string, data?: object | string | number | boolean | undefined | null): void {\n\t\tthis.setItems([{ key, data }]);\n\t}\n\n\tsetItems(items: readonly { key: string, data?: object | string | number | boolean | undefined | null }[]): void {\n\t\tlet save = false;\n\n\t\tfor (const { key, data } of items) {\n\n\t\t\t// Shortcut for data that did not change\n\t\t\tif (this.storage[key] === data) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Remove items when they are undefined or null\n\t\t\tif (isUndefinedOrNull(data)) {\n\t\t\t\tif (!isUndefined(this.storage[key])) {\n\t\t\t\t\tthis.storage[key] = undefined;\n\t\t\t\t\tsave = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Otherwise add an item\n\t\t\telse {\n\t\t\t\tthis.storage[key] = data;\n\t\t\t\tsave = true;\n\t\t\t}\n\t\t}\n\n\t\tif (save) {\n\t\t\tthis.save();\n\t\t}\n\t}\n\n\tremoveItem(key: string): void {\n\n\t\t// Only update if the key is actually present (not undefined)\n\t\tif (!isUndefined(this.storage[key])) {\n\t\t\tthis.storage[key] = undefined;\n\t\t\tthis.save();\n\t\t}\n\t}\n\n\tprivate async save(delay?: number): Promise<void> {\n\t\tif (this.closing) {\n\t\t\treturn; // already about to close\n\t\t}\n\n\t\treturn this.flushDelayer.trigger(() => this.doSave(), delay);\n\t}\n\n\tprivate async doSave(): Promise<void> {\n\t\tif (!this.initializing) {\n\t\t\treturn; // if we never initialized, we should not save our state\n\t\t}\n\n\t\t// Make sure to wait for init to finish first\n\t\tawait this.initializing;\n\n\t\t// Return early if the database has not changed\n\t\tconst serializedDatabase = JSON.stringify(this.storage, null, 4);\n\t\tif (serializedDatabase === this.lastSavedStorageContents) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Write to disk\n\t\ttry {\n\t\t\tawait this.fileService.writeFile(this.storagePath, VSBuffer.fromString(serializedDatabase));\n\t\t\tthis.lastSavedStorageContents = serializedDatabase;\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t}\n\t}\n\n\tasync close(): Promise<void> {\n\t\tif (!this.closing) {\n\t\t\tthis.closing = this.flushDelayer.trigger(() => this.doSave(), 0 /* as soon as possible */);\n\t\t}\n\n\t\treturn this.closing;\n\t}\n}\n\nexport class StateMainService implements IStateMainService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate static readonly STATE_FILE = 'storage.json';\n\n\tprivate readonly fileStorage: FileStorage;\n\n\tconstructor(\n\t\t@IEnvironmentMainService environmentMainService: IEnvironmentMainService,\n\t\t@ILogService logService: ILogService,\n\t\t@IFileService fileService: IFileService\n\t) {\n\t\tthis.fileStorage = new FileStorage(URI.file(join(environmentMainService.userDataPath, StateMainService.STATE_FILE)), logService, fileService);\n\t}\n\n\tasync init(): Promise<void> {\n\t\treturn this.fileStorage.init();\n\t}\n\n\tgetItem<T>(key: string, defaultValue: T): T;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined;\n\tgetItem<T>(key: string, defaultValue?: T): T | undefined {\n\t\treturn this.fileStorage.getItem(key, defaultValue);\n\t}\n\n\tsetItem(key: string, data?: object | string | number | boolean | undefined | null): void {\n\t\tthis.fileStorage.setItem(key, data);\n\t}\n\n\tsetItems(items: readonly { key: string, data?: object | string | number | boolean | undefined | null }[]): void {\n\t\tthis.fileStorage.setItems(items);\n\t}\n\n\tremoveItem(key: string): void {\n\t\tthis.fileStorage.removeItem(key);\n\t}\n\n\tclose(): Promise<void> {\n\t\treturn this.fileStorage.close();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { timeout } from 'vs/base/common/async';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { getMigratedSettingValue, IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IEnvironmentMainService } from 'vs/platform/environment/electron-main/environmentMainService';\nimport { ILifecycleMainService } from 'vs/platform/lifecycle/electron-main/lifecycleMainService';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IRequestService } from 'vs/platform/request/common/request';\nimport { AvailableForDownload, IUpdateService, State, StateType, UpdateType } from 'vs/platform/update/common/update';\n\nexport function createUpdateURL(platform: string, quality: string, productService: IProductService): string {\n\treturn `${productService.updateUrl}/api/update/${platform}/${quality}/${productService.commit}`;\n}\n\nexport type UpdateNotAvailableClassification = {\n\texplicit: { classification: 'SystemMetaData', purpose: 'FeatureInsight', isMeasurement: true };\n};\n\nexport abstract class AbstractUpdateService implements IUpdateService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprotected url: string | undefined;\n\n\tprivate _state: State = State.Uninitialized;\n\n\tprivate readonly _onStateChange = new Emitter<State>();\n\treadonly onStateChange: Event<State> = this._onStateChange.event;\n\n\tget state(): State {\n\t\treturn this._state;\n\t}\n\n\tprotected setState(state: State): void {\n\t\tthis.logService.info('update#setState', state.type);\n\t\tthis._state = state;\n\t\tthis._onStateChange.fire(state);\n\t}\n\n\tconstructor(\n\t\t@ILifecycleMainService private readonly lifecycleMainService: ILifecycleMainService,\n\t\t@IConfigurationService protected configurationService: IConfigurationService,\n\t\t@IEnvironmentMainService private readonly environmentMainService: IEnvironmentMainService,\n\t\t@IRequestService protected requestService: IRequestService,\n\t\t@ILogService protected logService: ILogService,\n\t\t@IProductService protected readonly productService: IProductService\n\t) { }\n\n\t/**\n\t * This must be called before any other call. This is a performance\n\t * optimization, to avoid using extra CPU cycles before first window open.\n\t * https://github.com/microsoft/vscode/issues/89784\n\t */\n\tinitialize(): void {\n\t\tif (!this.environmentMainService.isBuilt) {\n\t\t\treturn; // updates are never enabled when running out of sources\n\t\t}\n\n\t\tif (this.environmentMainService.disableUpdates) {\n\t\t\tthis.logService.info('update#ctor - updates are disabled by the environment');\n\t\t\treturn;\n\t\t}\n\n\t\tif (!this.productService.updateUrl || !this.productService.commit) {\n\t\t\tthis.logService.info('update#ctor - updates are disabled as there is no update URL');\n\t\t\treturn;\n\t\t}\n\n\t\tconst updateMode = this.getUpdateMode();\n\t\tconst quality = this.getProductQuality(updateMode);\n\n\t\tif (!quality) {\n\t\t\tthis.logService.info('update#ctor - updates are disabled by user preference');\n\t\t\treturn;\n\t\t}\n\n\t\tthis.url = this.buildUpdateFeedUrl(quality);\n\t\tif (!this.url) {\n\t\t\tthis.logService.info('update#ctor - updates are disabled as the update URL is badly formed');\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setState(State.Idle(this.getUpdateType()));\n\n\t\tif (updateMode === 'manual') {\n\t\t\tthis.logService.info('update#ctor - manual checks only; automatic updates are disabled by user preference');\n\t\t\treturn;\n\t\t}\n\n\t\tif (updateMode === 'start') {\n\t\t\tthis.logService.info('update#ctor - startup checks only; automatic updates are disabled by user preference');\n\n\t\t\t// Check for updates only once after 30 seconds\n\t\t\tsetTimeout(() => this.checkForUpdates(false), 30 * 1000);\n\t\t} else {\n\t\t\t// Start checking for updates after 30 seconds\n\t\t\tthis.scheduleCheckForUpdates(30 * 1000).then(undefined, err => this.logService.error(err));\n\t\t}\n\t}\n\n\tprivate getUpdateMode(): 'none' | 'manual' | 'start' | 'default' {\n\t\treturn getMigratedSettingValue<'none' | 'manual' | 'start' | 'default'>(this.configurationService, 'update.mode', 'update.channel');\n\t}\n\n\tprivate getProductQuality(updateMode: string): string | undefined {\n\t\treturn updateMode === 'none' ? undefined : this.productService.quality;\n\t}\n\n\tprivate scheduleCheckForUpdates(delay = 60 * 60 * 1000): Promise<void> {\n\t\treturn timeout(delay)\n\t\t\t.then(() => this.checkForUpdates(false))\n\t\t\t.then(() => {\n\t\t\t\t// Check again after 1 hour\n\t\t\t\treturn this.scheduleCheckForUpdates(60 * 60 * 1000);\n\t\t\t});\n\t}\n\n\tasync checkForUpdates(explicit: boolean): Promise<void> {\n\t\tthis.logService.trace('update#checkForUpdates, state = ', this.state.type);\n\n\t\tif (this.state.type !== StateType.Idle) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.doCheckForUpdates(explicit);\n\t}\n\n\tasync downloadUpdate(): Promise<void> {\n\t\tthis.logService.trace('update#downloadUpdate, state = ', this.state.type);\n\n\t\tif (this.state.type !== StateType.AvailableForDownload) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.doDownloadUpdate(this.state);\n\t}\n\n\tprotected async doDownloadUpdate(state: AvailableForDownload): Promise<void> {\n\t\t// noop\n\t}\n\n\tasync applyUpdate(): Promise<void> {\n\t\tthis.logService.trace('update#applyUpdate, state = ', this.state.type);\n\n\t\tif (this.state.type !== StateType.Downloaded) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.doApplyUpdate();\n\t}\n\n\tprotected async doApplyUpdate(): Promise<void> {\n\t\t// noop\n\t}\n\n\tquitAndInstall(): Promise<void> {\n\t\tthis.logService.trace('update#quitAndInstall, state = ', this.state.type);\n\n\t\tif (this.state.type !== StateType.Ready) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tthis.logService.trace('update#quitAndInstall(): before lifecycle quit()');\n\n\t\tthis.lifecycleMainService.quit(true /* will restart */).then(vetod => {\n\t\t\tthis.logService.trace(`update#quitAndInstall(): after lifecycle quit() with veto: ${vetod}`);\n\t\t\tif (vetod) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.logService.trace('update#quitAndInstall(): running raw#quitAndInstall()');\n\t\t\tthis.doQuitAndInstall();\n\t\t});\n\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tasync isLatestVersion(): Promise<boolean | undefined> {\n\t\tif (!this.url) {\n\t\t\treturn undefined;\n\t\t} else if (this.getUpdateMode() === 'none') {\n\t\t\treturn false;\n\t\t}\n\n\t\tconst context = await this.requestService.request({ url: this.url }, CancellationToken.None);\n\n\t\t// The update server replies with 204 (No Content) when no\n\t\t// update is available - that's all we want to know.\n\t\treturn context.res.statusCode === 204;\n\t}\n\n\tprotected getUpdateType(): UpdateType {\n\t\treturn UpdateType.Archive;\n\t}\n\n\tprotected doQuitAndInstall(): void {\n\t\t// noop\n\t}\n\n\tprotected abstract buildUpdateFeedUrl(quality: string): string | undefined;\n\tprotected abstract doCheckForUpdates(context: any): void;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as electron from 'electron';\nimport { memoize } from 'vs/base/common/decorators';\nimport { Event } from 'vs/base/common/event';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IEnvironmentMainService } from 'vs/platform/environment/electron-main/environmentMainService';\nimport { ILifecycleMainService } from 'vs/platform/lifecycle/electron-main/lifecycleMainService';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IRequestService } from 'vs/platform/request/common/request';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IUpdate, State, StateType, UpdateType } from 'vs/platform/update/common/update';\nimport { AbstractUpdateService, createUpdateURL, UpdateNotAvailableClassification } from 'vs/platform/update/electron-main/abstractUpdateService';\n\nexport class DarwinUpdateService extends AbstractUpdateService {\n\n\tprivate readonly disposables = new DisposableStore();\n\n\t@memoize private get onRawError(): Event<string> { return Event.fromNodeEventEmitter(electron.autoUpdater, 'error', (_, message) => message); }\n\t@memoize private get onRawUpdateNotAvailable(): Event<void> { return Event.fromNodeEventEmitter<void>(electron.autoUpdater, 'update-not-available'); }\n\t@memoize private get onRawUpdateAvailable(): Event<IUpdate> { return Event.fromNodeEventEmitter(electron.autoUpdater, 'update-available', (_, url, version) => ({ url, version, productVersion: version })); }\n\t@memoize private get onRawUpdateDownloaded(): Event<IUpdate> { return Event.fromNodeEventEmitter(electron.autoUpdater, 'update-downloaded', (_, releaseNotes, version, date) => ({ releaseNotes, version, productVersion: version, date })); }\n\n\tconstructor(\n\t\t@ILifecycleMainService lifecycleMainService: ILifecycleMainService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IEnvironmentMainService environmentMainService: IEnvironmentMainService,\n\t\t@IRequestService requestService: IRequestService,\n\t\t@ILogService logService: ILogService,\n\t\t@IProductService productService: IProductService\n\t) {\n\t\tsuper(lifecycleMainService, configurationService, environmentMainService, requestService, logService, productService);\n\t}\n\n\toverride initialize(): void {\n\t\tsuper.initialize();\n\t\tthis.onRawError(this.onError, this, this.disposables);\n\t\tthis.onRawUpdateAvailable(this.onUpdateAvailable, this, this.disposables);\n\t\tthis.onRawUpdateDownloaded(this.onUpdateDownloaded, this, this.disposables);\n\t\tthis.onRawUpdateNotAvailable(this.onUpdateNotAvailable, this, this.disposables);\n\t}\n\n\tprivate onError(err: string): void {\n\t\tthis.logService.error('UpdateService error:', err);\n\n\t\t// only show message when explicitly checking for updates\n\t\tconst shouldShowMessage = this.state.type === StateType.CheckingForUpdates ? this.state.explicit : true;\n\t\tconst message: string | undefined = shouldShowMessage ? err : undefined;\n\t\tthis.setState(State.Idle(UpdateType.Archive, message));\n\t}\n\n\tprotected buildUpdateFeedUrl(quality: string): string | undefined {\n\t\tlet assetID: string;\n\t\tif (!this.productService.darwinUniversalAssetId) {\n\t\t\tassetID = process.arch === 'x64' ? 'darwin' : 'darwin-arm64';\n\t\t} else {\n\t\t\tassetID = this.productService.darwinUniversalAssetId;\n\t\t}\n\t\tconst url = createUpdateURL(assetID, quality, this.productService);\n\t\ttry {\n\t\t\telectron.autoUpdater.setFeedURL({ url });\n\t\t} catch (e) {\n\t\t\t// application is very likely not signed\n\t\t\tthis.logService.error('Failed to set update feed URL', e);\n\t\t\treturn undefined;\n\t\t}\n\t\treturn url;\n\t}\n\n\tprotected doCheckForUpdates(context: any): void {\n\t\tthis.setState(State.CheckingForUpdates(context));\n\t\telectron.autoUpdater.checkForUpdates();\n\t}\n\n\tprivate onUpdateAvailable(update: IUpdate): void {\n\t\tif (this.state.type !== StateType.CheckingForUpdates) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setState(State.Downloading(update));\n\t}\n\n\tprivate onUpdateDownloaded(update: IUpdate): void {\n\t\tif (this.state.type !== StateType.Downloading) {\n\t\t\treturn;\n\t\t}\n\n\t\ttype UpdateDownloadedClassification = {\n\t\t\tversion: { classification: 'SystemMetaData', purpose: 'FeatureInsight' };\n\t\t};\n\t\tthis.telemetryService.publicLog2<{ version: String }, UpdateDownloadedClassification>('update:downloaded', { version: update.version });\n\n\t\tthis.setState(State.Ready(update));\n\t}\n\n\tprivate onUpdateNotAvailable(): void {\n\t\tif (this.state.type !== StateType.CheckingForUpdates) {\n\t\t\treturn;\n\t\t}\n\t\tthis.telemetryService.publicLog2<{ explicit: boolean }, UpdateNotAvailableClassification>('update:notAvailable', { explicit: this.state.explicit });\n\n\t\tthis.setState(State.Idle(UpdateType.Archive));\n\t}\n\n\tprotected override doQuitAndInstall(): void {\n\t\tthis.logService.trace('update#quitAndInstall(): running raw#quitAndInstall()');\n\t\telectron.autoUpdater.quitAndInstall();\n\t}\n\n\tdispose(): void {\n\t\tthis.disposables.dispose();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { spawn } from 'child_process';\nimport { realpath, watch } from 'fs';\nimport { timeout } from 'vs/base/common/async';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport * as path from 'vs/base/common/path';\nimport { IEnvironmentMainService } from 'vs/platform/environment/electron-main/environmentMainService';\nimport { ILifecycleMainService } from 'vs/platform/lifecycle/electron-main/lifecycleMainService';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { AvailableForDownload, IUpdateService, State, StateType, UpdateType } from 'vs/platform/update/common/update';\nimport { UpdateNotAvailableClassification } from 'vs/platform/update/electron-main/abstractUpdateService';\n\nabstract class AbstractUpdateService implements IUpdateService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _state: State = State.Uninitialized;\n\n\tprivate readonly _onStateChange = new Emitter<State>();\n\treadonly onStateChange: Event<State> = this._onStateChange.event;\n\n\tget state(): State {\n\t\treturn this._state;\n\t}\n\n\tprotected setState(state: State): void {\n\t\tthis.logService.info('update#setState', state.type);\n\t\tthis._state = state;\n\t\tthis._onStateChange.fire(state);\n\t}\n\n\tconstructor(\n\t\t@ILifecycleMainService private readonly lifecycleMainService: ILifecycleMainService,\n\t\t@IEnvironmentMainService environmentMainService: IEnvironmentMainService,\n\t\t@ILogService protected logService: ILogService,\n\t) {\n\t\tif (environmentMainService.disableUpdates) {\n\t\t\tthis.logService.info('update#ctor - updates are disabled');\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setState(State.Idle(this.getUpdateType()));\n\n\t\t// Start checking for updates after 30 seconds\n\t\tthis.scheduleCheckForUpdates(30 * 1000).then(undefined, err => this.logService.error(err));\n\t}\n\n\tprivate scheduleCheckForUpdates(delay = 60 * 60 * 1000): Promise<void> {\n\t\treturn timeout(delay)\n\t\t\t.then(() => this.checkForUpdates(false))\n\t\t\t.then(() => {\n\t\t\t\t// Check again after 1 hour\n\t\t\t\treturn this.scheduleCheckForUpdates(60 * 60 * 1000);\n\t\t\t});\n\t}\n\n\tasync checkForUpdates(explicit: boolean): Promise<void> {\n\t\tthis.logService.trace('update#checkForUpdates, state = ', this.state.type);\n\n\t\tif (this.state.type !== StateType.Idle) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.doCheckForUpdates(explicit);\n\t}\n\n\tasync downloadUpdate(): Promise<void> {\n\t\tthis.logService.trace('update#downloadUpdate, state = ', this.state.type);\n\n\t\tif (this.state.type !== StateType.AvailableForDownload) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.doDownloadUpdate(this.state);\n\t}\n\n\tprotected doDownloadUpdate(state: AvailableForDownload): Promise<void> {\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tasync applyUpdate(): Promise<void> {\n\t\tthis.logService.trace('update#applyUpdate, state = ', this.state.type);\n\n\t\tif (this.state.type !== StateType.Downloaded) {\n\t\t\treturn;\n\t\t}\n\n\t\tawait this.doApplyUpdate();\n\t}\n\n\tprotected doApplyUpdate(): Promise<void> {\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\tquitAndInstall(): Promise<void> {\n\t\tthis.logService.trace('update#quitAndInstall, state = ', this.state.type);\n\n\t\tif (this.state.type !== StateType.Ready) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tthis.logService.trace('update#quitAndInstall(): before lifecycle quit()');\n\n\t\tthis.lifecycleMainService.quit(true /* will restart */).then(vetod => {\n\t\t\tthis.logService.trace(`update#quitAndInstall(): after lifecycle quit() with veto: ${vetod}`);\n\t\t\tif (vetod) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.logService.trace('update#quitAndInstall(): running raw#quitAndInstall()');\n\t\t\tthis.doQuitAndInstall();\n\t\t});\n\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\n\tprotected getUpdateType(): UpdateType {\n\t\treturn UpdateType.Snap;\n\t}\n\n\tprotected doQuitAndInstall(): void {\n\t\t// noop\n\t}\n\n\tabstract isLatestVersion(): Promise<boolean | undefined>;\n\tprotected abstract doCheckForUpdates(context: any): void;\n}\n\nexport class SnapUpdateService extends AbstractUpdateService {\n\n\tconstructor(\n\t\tprivate snap: string,\n\t\tprivate snapRevision: string,\n\t\t@ILifecycleMainService lifecycleMainService: ILifecycleMainService,\n\t\t@IEnvironmentMainService environmentMainService: IEnvironmentMainService,\n\t\t@ILogService logService: ILogService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService\n\t) {\n\t\tsuper(lifecycleMainService, environmentMainService, logService);\n\n\t\tconst watcher = watch(path.dirname(this.snap));\n\t\tconst onChange = Event.fromNodeEventEmitter(watcher, 'change', (_, fileName: string) => fileName);\n\t\tconst onCurrentChange = Event.filter(onChange, n => n === 'current');\n\t\tconst onDebouncedCurrentChange = Event.debounce(onCurrentChange, (_, e) => e, 2000);\n\t\tconst listener = onDebouncedCurrentChange(() => this.checkForUpdates(false));\n\n\t\tlifecycleMainService.onWillShutdown(() => {\n\t\t\tlistener.dispose();\n\t\t\twatcher.close();\n\t\t});\n\t}\n\n\tprotected doCheckForUpdates(): void {\n\t\tthis.setState(State.CheckingForUpdates(false));\n\t\tthis.isUpdateAvailable().then(result => {\n\t\t\tif (result) {\n\t\t\t\tthis.setState(State.Ready({ version: 'something', productVersion: 'something' }));\n\t\t\t} else {\n\t\t\t\tthis.telemetryService.publicLog2<{ explicit: boolean }, UpdateNotAvailableClassification>('update:notAvailable', { explicit: false });\n\n\t\t\t\tthis.setState(State.Idle(UpdateType.Snap));\n\t\t\t}\n\t\t}, err => {\n\t\t\tthis.logService.error(err);\n\t\t\tthis.telemetryService.publicLog2<{ explicit: boolean }, UpdateNotAvailableClassification>('update:notAvailable', { explicit: false });\n\t\t\tthis.setState(State.Idle(UpdateType.Snap, err.message || err));\n\t\t});\n\t}\n\n\tprotected override doQuitAndInstall(): void {\n\t\tthis.logService.trace('update#quitAndInstall(): running raw#quitAndInstall()');\n\n\t\t// Allow 3 seconds for VS Code to close\n\t\tspawn('sleep 3 && ' + path.basename(process.argv[0]), {\n\t\t\tshell: true,\n\t\t\tdetached: true,\n\t\t\tstdio: 'ignore',\n\t\t});\n\t}\n\n\tprivate async isUpdateAvailable(): Promise<boolean> {\n\t\tconst resolvedCurrentSnapPath = await new Promise<string>((c, e) => realpath(`${path.dirname(this.snap)}/current`, (err, r) => err ? e(err) : c(r)));\n\t\tconst currentRevision = path.basename(resolvedCurrentSnapPath);\n\t\treturn this.snapRevision !== currentRevision;\n\t}\n\n\tisLatestVersion(): Promise<boolean | undefined> {\n\t\treturn this.isUpdateAvailable().then(undefined, err => {\n\t\t\tthis.logService.error('update#checkForSnapUpdate(): Could not get realpath of application.');\n\t\t\treturn undefined;\n\t\t});\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { BrowserWindow, MessageBoxOptions } from 'electron';\nimport { existsSync, mkdirSync, readFileSync } from 'fs';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { parse } from 'vs/base/common/json';\nimport { mnemonicButtonLabel } from 'vs/base/common/labels';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport { dirname, join } from 'vs/base/common/path';\nimport { isWindows } from 'vs/base/common/platform';\nimport { basename, extUriBiasedIgnorePathCase, joinPath, originalFSPath } from 'vs/base/common/resources';\nimport { withNullAsUndefined } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { Promises, readdirSync, rimrafSync, writeFileSync } from 'vs/base/node/pfs';\nimport { localize } from 'vs/nls';\nimport { IBackupMainService } from 'vs/platform/backup/electron-main/backup';\nimport { IDialogMainService } from 'vs/platform/dialogs/electron-main/dialogMainService';\nimport { IEnvironmentMainService } from 'vs/platform/environment/electron-main/environmentMainService';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ICodeWindow } from 'vs/platform/windows/electron-main/windows';\nimport { findWindowOnWorkspaceOrFolder } from 'vs/platform/windows/electron-main/windowsFinder';\nimport { getStoredWorkspaceFolder, hasWorkspaceFileExtension, IEnterWorkspaceResult, IResolvedWorkspace, isStoredWorkspaceFolder, IStoredWorkspace, IStoredWorkspaceFolder, isUntitledWorkspace, isWorkspaceIdentifier, IUntitledWorkspaceInfo, IWorkspaceFolderCreationData, IWorkspaceIdentifier, toWorkspaceFolders, UNTITLED_WORKSPACE_NAME } from 'vs/platform/workspaces/common/workspaces';\nimport { getWorkspaceIdentifier } from 'vs/platform/workspaces/electron-main/workspaces';\n\nexport const IWorkspacesManagementMainService = createDecorator<IWorkspacesManagementMainService>('workspacesManagementMainService');\n\nexport interface IWorkspaceEnteredEvent {\n\twindow: ICodeWindow;\n\tworkspace: IWorkspaceIdentifier;\n}\n\nexport interface IWorkspacesManagementMainService {\n\n\treadonly _serviceBrand: undefined;\n\n\treadonly onDidDeleteUntitledWorkspace: Event<IWorkspaceIdentifier>;\n\treadonly onDidEnterWorkspace: Event<IWorkspaceEnteredEvent>;\n\n\tenterWorkspace(intoWindow: ICodeWindow, openedWindows: ICodeWindow[], path: URI): Promise<IEnterWorkspaceResult | undefined>;\n\n\tcreateUntitledWorkspace(folders?: IWorkspaceFolderCreationData[], remoteAuthority?: string): Promise<IWorkspaceIdentifier>;\n\tcreateUntitledWorkspaceSync(folders?: IWorkspaceFolderCreationData[]): IWorkspaceIdentifier;\n\n\tdeleteUntitledWorkspace(workspace: IWorkspaceIdentifier): Promise<void>;\n\tdeleteUntitledWorkspaceSync(workspace: IWorkspaceIdentifier): void;\n\n\tgetUntitledWorkspacesSync(): IUntitledWorkspaceInfo[];\n\tisUntitledWorkspace(workspace: IWorkspaceIdentifier): boolean;\n\n\tresolveLocalWorkspaceSync(path: URI): IResolvedWorkspace | undefined;\n\tresolveLocalWorkspace(path: URI): Promise<IResolvedWorkspace | undefined>;\n\n\tgetWorkspaceIdentifier(workspacePath: URI): Promise<IWorkspaceIdentifier>;\n}\n\nexport class WorkspacesManagementMainService extends Disposable implements IWorkspacesManagementMainService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly untitledWorkspacesHome = this.environmentMainService.untitledWorkspacesHome; // local URI that contains all untitled workspaces\n\n\tprivate readonly _onDidDeleteUntitledWorkspace = this._register(new Emitter<IWorkspaceIdentifier>());\n\treadonly onDidDeleteUntitledWorkspace: Event<IWorkspaceIdentifier> = this._onDidDeleteUntitledWorkspace.event;\n\n\tprivate readonly _onDidEnterWorkspace = this._register(new Emitter<IWorkspaceEnteredEvent>());\n\treadonly onDidEnterWorkspace: Event<IWorkspaceEnteredEvent> = this._onDidEnterWorkspace.event;\n\n\tconstructor(\n\t\t@IEnvironmentMainService private readonly environmentMainService: IEnvironmentMainService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IBackupMainService private readonly backupMainService: IBackupMainService,\n\t\t@IDialogMainService private readonly dialogMainService: IDialogMainService,\n\t\t@IProductService private readonly productService: IProductService\n\t) {\n\t\tsuper();\n\t}\n\n\tresolveLocalWorkspaceSync(uri: URI): IResolvedWorkspace | undefined {\n\t\treturn this.doResolveLocalWorkspace(uri, path => readFileSync(path, 'utf8'));\n\t}\n\n\tresolveLocalWorkspace(uri: URI): Promise<IResolvedWorkspace | undefined> {\n\t\treturn this.doResolveLocalWorkspace(uri, path => Promises.readFile(path, 'utf8'));\n\t}\n\n\tprivate doResolveLocalWorkspace(uri: URI, contentsFn: (path: string) => string): IResolvedWorkspace | undefined;\n\tprivate doResolveLocalWorkspace(uri: URI, contentsFn: (path: string) => Promise<string>): Promise<IResolvedWorkspace | undefined>;\n\tprivate doResolveLocalWorkspace(uri: URI, contentsFn: (path: string) => string | Promise<string>): IResolvedWorkspace | undefined | Promise<IResolvedWorkspace | undefined> {\n\t\tif (!this.isWorkspacePath(uri)) {\n\t\t\treturn undefined; // does not look like a valid workspace config file\n\t\t}\n\n\t\tif (uri.scheme !== Schemas.file) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\ttry {\n\t\t\tconst contents = contentsFn(uri.fsPath);\n\t\t\tif (contents instanceof Promise) {\n\t\t\t\treturn contents.then(value => this.doResolveWorkspace(uri, value), error => undefined /* invalid workspace */);\n\t\t\t} else {\n\t\t\t\treturn this.doResolveWorkspace(uri, contents);\n\t\t\t}\n\t\t} catch {\n\t\t\treturn undefined; // invalid workspace\n\t\t}\n\t}\n\n\tprivate isWorkspacePath(uri: URI): boolean {\n\t\treturn isUntitledWorkspace(uri, this.environmentMainService) || hasWorkspaceFileExtension(uri);\n\t}\n\n\tprivate doResolveWorkspace(path: URI, contents: string): IResolvedWorkspace | undefined {\n\t\ttry {\n\t\t\tconst workspace = this.doParseStoredWorkspace(path, contents);\n\t\t\tconst workspaceIdentifier = getWorkspaceIdentifier(path);\n\t\t\treturn {\n\t\t\t\tid: workspaceIdentifier.id,\n\t\t\t\tconfigPath: workspaceIdentifier.configPath,\n\t\t\t\tfolders: toWorkspaceFolders(workspace.folders, workspaceIdentifier.configPath, extUriBiasedIgnorePathCase),\n\t\t\t\tremoteAuthority: workspace.remoteAuthority,\n\t\t\t\ttransient: workspace.transient\n\t\t\t};\n\t\t} catch (error) {\n\t\t\tthis.logService.warn(error.toString());\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate doParseStoredWorkspace(path: URI, contents: string): IStoredWorkspace {\n\n\t\t// Parse workspace file\n\t\tconst storedWorkspace: IStoredWorkspace = parse(contents); // use fault tolerant parser\n\n\t\t// Filter out folders which do not have a path or uri set\n\t\tif (storedWorkspace && Array.isArray(storedWorkspace.folders)) {\n\t\t\tstoredWorkspace.folders = storedWorkspace.folders.filter(folder => isStoredWorkspaceFolder(folder));\n\t\t} else {\n\t\t\tthrow new Error(`${path.toString(true)} looks like an invalid workspace file.`);\n\t\t}\n\n\t\treturn storedWorkspace;\n\t}\n\n\tasync createUntitledWorkspace(folders?: IWorkspaceFolderCreationData[], remoteAuthority?: string): Promise<IWorkspaceIdentifier> {\n\t\tconst { workspace, storedWorkspace } = this.newUntitledWorkspace(folders, remoteAuthority);\n\t\tconst configPath = workspace.configPath.fsPath;\n\n\t\tawait Promises.mkdir(dirname(configPath), { recursive: true });\n\t\tawait Promises.writeFile(configPath, JSON.stringify(storedWorkspace, null, '\\t'));\n\n\t\treturn workspace;\n\t}\n\n\tcreateUntitledWorkspaceSync(folders?: IWorkspaceFolderCreationData[], remoteAuthority?: string): IWorkspaceIdentifier {\n\t\tconst { workspace, storedWorkspace } = this.newUntitledWorkspace(folders, remoteAuthority);\n\t\tconst configPath = workspace.configPath.fsPath;\n\n\t\tmkdirSync(dirname(configPath), { recursive: true });\n\t\twriteFileSync(configPath, JSON.stringify(storedWorkspace, null, '\\t'));\n\n\t\treturn workspace;\n\t}\n\n\tprivate newUntitledWorkspace(folders: IWorkspaceFolderCreationData[] = [], remoteAuthority?: string): { workspace: IWorkspaceIdentifier, storedWorkspace: IStoredWorkspace } {\n\t\tconst randomId = (Date.now() + Math.round(Math.random() * 1000)).toString();\n\t\tconst untitledWorkspaceConfigFolder = joinPath(this.untitledWorkspacesHome, randomId);\n\t\tconst untitledWorkspaceConfigPath = joinPath(untitledWorkspaceConfigFolder, UNTITLED_WORKSPACE_NAME);\n\n\t\tconst storedWorkspaceFolder: IStoredWorkspaceFolder[] = [];\n\n\t\tfor (const folder of folders) {\n\t\t\tstoredWorkspaceFolder.push(getStoredWorkspaceFolder(folder.uri, true, folder.name, untitledWorkspaceConfigFolder, !isWindows, extUriBiasedIgnorePathCase));\n\t\t}\n\n\t\treturn {\n\t\t\tworkspace: getWorkspaceIdentifier(untitledWorkspaceConfigPath),\n\t\t\tstoredWorkspace: { folders: storedWorkspaceFolder, remoteAuthority }\n\t\t};\n\t}\n\n\tasync getWorkspaceIdentifier(configPath: URI): Promise<IWorkspaceIdentifier> {\n\t\treturn getWorkspaceIdentifier(configPath);\n\t}\n\n\tisUntitledWorkspace(workspace: IWorkspaceIdentifier): boolean {\n\t\treturn isUntitledWorkspace(workspace.configPath, this.environmentMainService);\n\t}\n\n\tdeleteUntitledWorkspaceSync(workspace: IWorkspaceIdentifier): void {\n\t\tif (!this.isUntitledWorkspace(workspace)) {\n\t\t\treturn; // only supported for untitled workspaces\n\t\t}\n\n\t\t// Delete from disk\n\t\tthis.doDeleteUntitledWorkspaceSync(workspace);\n\n\t\t// Event\n\t\tthis._onDidDeleteUntitledWorkspace.fire(workspace);\n\t}\n\n\tasync deleteUntitledWorkspace(workspace: IWorkspaceIdentifier): Promise<void> {\n\t\tthis.deleteUntitledWorkspaceSync(workspace);\n\t}\n\n\tprivate doDeleteUntitledWorkspaceSync(workspace: IWorkspaceIdentifier): void {\n\t\tconst configPath = originalFSPath(workspace.configPath);\n\t\ttry {\n\n\t\t\t// Delete Workspace\n\t\t\trimrafSync(dirname(configPath));\n\n\t\t\t// Mark Workspace Storage to be deleted\n\t\t\tconst workspaceStoragePath = join(this.environmentMainService.workspaceStorageHome.fsPath, workspace.id);\n\t\t\tif (existsSync(workspaceStoragePath)) {\n\t\t\t\twriteFileSync(join(workspaceStoragePath, 'obsolete'), '');\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.logService.warn(`Unable to delete untitled workspace ${configPath} (${error}).`);\n\t\t}\n\t}\n\n\tgetUntitledWorkspacesSync(): IUntitledWorkspaceInfo[] {\n\t\tconst untitledWorkspaces: IUntitledWorkspaceInfo[] = [];\n\t\ttry {\n\t\t\tconst untitledWorkspacePaths = readdirSync(this.untitledWorkspacesHome.fsPath).map(folder => joinPath(this.untitledWorkspacesHome, folder, UNTITLED_WORKSPACE_NAME));\n\t\t\tfor (const untitledWorkspacePath of untitledWorkspacePaths) {\n\t\t\t\tconst workspace = getWorkspaceIdentifier(untitledWorkspacePath);\n\t\t\t\tconst resolvedWorkspace = this.resolveLocalWorkspaceSync(untitledWorkspacePath);\n\t\t\t\tif (!resolvedWorkspace) {\n\t\t\t\t\tthis.doDeleteUntitledWorkspaceSync(workspace);\n\t\t\t\t} else {\n\t\t\t\t\tuntitledWorkspaces.push({ workspace, remoteAuthority: resolvedWorkspace.remoteAuthority });\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\tthis.logService.warn(`Unable to read folders in ${this.untitledWorkspacesHome} (${error}).`);\n\t\t\t}\n\t\t}\n\n\t\treturn untitledWorkspaces;\n\t}\n\n\tasync enterWorkspace(window: ICodeWindow, windows: ICodeWindow[], path: URI): Promise<IEnterWorkspaceResult | undefined> {\n\t\tif (!window || !window.win || !window.isReady) {\n\t\t\treturn undefined; // return early if the window is not ready or disposed\n\t\t}\n\n\t\tconst isValid = await this.isValidTargetWorkspacePath(window, windows, path);\n\t\tif (!isValid) {\n\t\t\treturn undefined; // return early if the workspace is not valid\n\t\t}\n\n\t\tconst result = this.doEnterWorkspace(window, getWorkspaceIdentifier(path));\n\t\tif (!result) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Emit as event\n\t\tthis._onDidEnterWorkspace.fire({ window, workspace: result.workspace });\n\n\t\treturn result;\n\t}\n\n\tprivate async isValidTargetWorkspacePath(window: ICodeWindow, windows: ICodeWindow[], workspacePath?: URI): Promise<boolean> {\n\t\tif (!workspacePath) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif (isWorkspaceIdentifier(window.openedWorkspace) && extUriBiasedIgnorePathCase.isEqual(window.openedWorkspace.configPath, workspacePath)) {\n\t\t\treturn false; // window is already opened on a workspace with that path\n\t\t}\n\n\t\t// Prevent overwriting a workspace that is currently opened in another window\n\t\tif (findWindowOnWorkspaceOrFolder(windows, workspacePath)) {\n\t\t\tconst options: MessageBoxOptions = {\n\t\t\t\ttitle: this.productService.nameLong,\n\t\t\t\ttype: 'info',\n\t\t\t\tbuttons: [mnemonicButtonLabel(localize({ key: 'ok', comment: ['&& denotes a mnemonic'] }, \"&&OK\"))],\n\t\t\t\tmessage: localize('workspaceOpenedMessage', \"Unable to save workspace '{0}'\", basename(workspacePath)),\n\t\t\t\tdetail: localize('workspaceOpenedDetail', \"The workspace is already opened in another window. Please close that window first and then try again.\"),\n\t\t\t\tnoLink: true,\n\t\t\t\tdefaultId: 0\n\t\t\t};\n\n\t\t\tawait this.dialogMainService.showMessageBox(options, withNullAsUndefined(BrowserWindow.getFocusedWindow()));\n\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true; // OK\n\t}\n\n\tprivate doEnterWorkspace(window: ICodeWindow, workspace: IWorkspaceIdentifier): IEnterWorkspaceResult | undefined {\n\t\tif (!window.config) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\twindow.focus();\n\n\t\t// Register window for backups and migrate current backups over\n\t\tlet backupPath: string | undefined;\n\t\tif (!window.config.extensionDevelopmentPath) {\n\t\t\tbackupPath = this.backupMainService.registerWorkspaceBackupSync({ workspace, remoteAuthority: window.remoteAuthority }, window.config.backupPath);\n\t\t}\n\n\t\t// if the window was opened on an untitled workspace, delete it.\n\t\tif (isWorkspaceIdentifier(window.openedWorkspace) && this.isUntitledWorkspace(window.openedWorkspace)) {\n\t\t\tthis.deleteUntitledWorkspaceSync(window.openedWorkspace);\n\t\t}\n\n\t\t// Update window configuration properly based on transition to workspace\n\t\twindow.config.workspace = workspace;\n\t\twindow.config.backupPath = backupPath;\n\n\t\treturn { workspace, backupPath };\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { app, BrowserWindow, Event as IpcEvent, ipcMain } from 'electron';\nimport { coalesce } from 'vs/base/common/arrays';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IProcessEnvironment, isMacintosh } from 'vs/base/common/platform';\nimport { assertIsDefined } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { whenDeleted } from 'vs/base/node/pfs';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IDiagnosticInfo, IDiagnosticInfoOptions, IRemoteDiagnosticError, IRemoteDiagnosticInfo } from 'vs/platform/diagnostics/common/diagnostics';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { isLaunchedFromCli } from 'vs/platform/environment/node/argvHelper';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { IMainProcessInfo, IWindowInfo } from 'vs/platform/launch/common/launch';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IURLService } from 'vs/platform/url/common/url';\nimport { IWindowSettings } from 'vs/platform/windows/common/windows';\nimport { ICodeWindow, IOpenConfiguration, IWindowsMainService, OpenContext } from 'vs/platform/windows/electron-main/windows';\nimport { isSingleFolderWorkspaceIdentifier, isWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\nimport { IWorkspacesManagementMainService } from 'vs/platform/workspaces/electron-main/workspacesManagementMainService';\n\nexport const ID = 'launchMainService';\nexport const ILaunchMainService = createDecorator<ILaunchMainService>(ID);\n\nexport interface IStartArguments {\n\targs: NativeParsedArgs;\n\tuserEnv: IProcessEnvironment;\n}\n\nexport interface IRemoteDiagnosticOptions {\n\tincludeProcesses?: boolean;\n\tincludeWorkspaceMetadata?: boolean;\n}\n\nexport interface ILaunchMainService {\n\treadonly _serviceBrand: undefined;\n\tstart(args: NativeParsedArgs, userEnv: IProcessEnvironment): Promise<void>;\n\tgetMainProcessId(): Promise<number>;\n\tgetMainProcessInfo(): Promise<IMainProcessInfo>;\n\tgetRemoteDiagnostics(options: IRemoteDiagnosticOptions): Promise<(IRemoteDiagnosticInfo | IRemoteDiagnosticError)[]>;\n}\n\nexport class LaunchMainService implements ILaunchMainService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IWindowsMainService private readonly windowsMainService: IWindowsMainService,\n\t\t@IURLService private readonly urlService: IURLService,\n\t\t@IWorkspacesManagementMainService private readonly workspacesManagementMainService: IWorkspacesManagementMainService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) { }\n\n\tasync start(args: NativeParsedArgs, userEnv: IProcessEnvironment): Promise<void> {\n\t\tthis.logService.trace('Received data from other instance: ', args, userEnv);\n\n\t\t// macOS: Electron > 7.x changed its behaviour to not\n\t\t// bring the application to the foreground when a window\n\t\t// is focused programmatically. Only via `app.focus` and\n\t\t// the option `steal: true` can you get the previous\n\t\t// behaviour back. The only reason to use this option is\n\t\t// when a window is getting focused while the application\n\t\t// is not in the foreground and since we got instructed\n\t\t// to open a new window from another instance, we ensure\n\t\t// that the app has focus.\n\t\tif (isMacintosh) {\n\t\t\tapp.focus({ steal: true });\n\t\t}\n\n\t\t// Check early for open-url which is handled in URL service\n\t\tconst urlsToOpen = this.parseOpenUrl(args);\n\t\tif (urlsToOpen.length) {\n\t\t\tlet whenWindowReady: Promise<unknown> = Promise.resolve();\n\n\t\t\t// Create a window if there is none\n\t\t\tif (this.windowsMainService.getWindowCount() === 0) {\n\t\t\t\tconst window = this.windowsMainService.openEmptyWindow({ context: OpenContext.DESKTOP })[0];\n\t\t\t\twhenWindowReady = window.ready();\n\t\t\t}\n\n\t\t\t// Make sure a window is open, ready to receive the url event\n\t\t\twhenWindowReady.then(() => {\n\t\t\t\tfor (const { uri, url } of urlsToOpen) {\n\t\t\t\t\tthis.urlService.open(uri, { originalUrl: url });\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Otherwise handle in windows service\n\t\telse {\n\t\t\treturn this.startOpenWindow(args, userEnv);\n\t\t}\n\t}\n\n\tprivate parseOpenUrl(args: NativeParsedArgs): { uri: URI, url: string }[] {\n\t\tif (args['open-url'] && args._urls && args._urls.length > 0) {\n\t\t\t// --open-url must contain -- followed by the url(s)\n\t\t\t// process.argv is used over args._ as args._ are resolved to file paths at this point\n\t\t\treturn coalesce(args._urls\n\t\t\t\t.map(url => {\n\t\t\t\t\ttry {\n\t\t\t\t\t\treturn { uri: URI.parse(url), url };\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t}\n\n\t\treturn [];\n\t}\n\n\tprivate async startOpenWindow(args: NativeParsedArgs, userEnv: IProcessEnvironment): Promise<void> {\n\t\tconst context = isLaunchedFromCli(userEnv) ? OpenContext.CLI : OpenContext.DESKTOP;\n\t\tlet usedWindows: ICodeWindow[] = [];\n\n\t\tconst waitMarkerFileURI = args.wait && args.waitMarkerFilePath ? URI.file(args.waitMarkerFilePath) : undefined;\n\t\tconst remoteAuthority = args.remote || undefined;\n\n\t\tconst baseConfig: IOpenConfiguration = {\n\t\t\tcontext,\n\t\t\tcli: args,\n\t\t\tuserEnv,\n\t\t\twaitMarkerFileURI,\n\t\t\tremoteAuthority\n\t\t};\n\n\t\t// Special case extension development\n\t\tif (!!args.extensionDevelopmentPath) {\n\t\t\tthis.windowsMainService.openExtensionDevelopmentHostWindow(args.extensionDevelopmentPath, baseConfig);\n\t\t}\n\n\t\t// Start without file/folder arguments\n\t\telse if (!args._.length && !args['folder-uri'] && !args['file-uri']) {\n\t\t\tlet openNewWindow = false;\n\n\t\t\t// Force new window\n\t\t\tif (args['new-window'] || args['unity-launch']) {\n\t\t\t\topenNewWindow = true;\n\t\t\t}\n\n\t\t\t// Force reuse window\n\t\t\telse if (args['reuse-window']) {\n\t\t\t\topenNewWindow = false;\n\t\t\t}\n\n\t\t\t// Otherwise check for settings\n\t\t\telse {\n\t\t\t\tconst windowConfig = this.configurationService.getValue<IWindowSettings | undefined>('window');\n\t\t\t\tconst openWithoutArgumentsInNewWindowConfig = windowConfig?.openWithoutArgumentsInNewWindow || 'default' /* default */;\n\t\t\t\tswitch (openWithoutArgumentsInNewWindowConfig) {\n\t\t\t\t\tcase 'on':\n\t\t\t\t\t\topenNewWindow = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'off':\n\t\t\t\t\t\topenNewWindow = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\topenNewWindow = !isMacintosh; // prefer to restore running instance on macOS\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Open new Window\n\t\t\tif (openNewWindow) {\n\t\t\t\tusedWindows = this.windowsMainService.open({\n\t\t\t\t\t...baseConfig,\n\t\t\t\t\tforceNewWindow: true,\n\t\t\t\t\tforceEmpty: true\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Focus existing window or open if none opened\n\t\t\telse {\n\t\t\t\tconst lastActive = this.windowsMainService.getLastActiveWindow();\n\t\t\t\tif (lastActive) {\n\t\t\t\t\tthis.windowsMainService.openExistingWindow(lastActive, baseConfig);\n\n\t\t\t\t\tusedWindows = [lastActive];\n\t\t\t\t} else {\n\t\t\t\t\tusedWindows = this.windowsMainService.open({\n\t\t\t\t\t\t...baseConfig,\n\t\t\t\t\t\tforceEmpty: true\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Start with file/folder arguments\n\t\telse {\n\t\t\tusedWindows = this.windowsMainService.open({\n\t\t\t\t...baseConfig,\n\t\t\t\tforceNewWindow: args['new-window'],\n\t\t\t\tpreferNewWindow: !args['reuse-window'] && !args.wait,\n\t\t\t\tforceReuseWindow: args['reuse-window'],\n\t\t\t\tdiffMode: args.diff,\n\t\t\t\taddMode: args.add,\n\t\t\t\tnoRecentEntry: !!args['skip-add-to-recently-opened'],\n\t\t\t\tgotoLineMode: args.goto\n\t\t\t});\n\t\t}\n\n\t\t// If the other instance is waiting to be killed, we hook up a window listener if one window\n\t\t// is being used and only then resolve the startup promise which will kill this second instance.\n\t\t// In addition, we poll for the wait marker file to be deleted to return.\n\t\tif (waitMarkerFileURI && usedWindows.length === 1 && usedWindows[0]) {\n\t\t\treturn Promise.race([\n\t\t\t\tusedWindows[0].whenClosedOrLoaded,\n\t\t\t\twhenDeleted(waitMarkerFileURI.fsPath)\n\t\t\t]).then(() => undefined, () => undefined);\n\t\t}\n\t}\n\n\tasync getMainProcessId(): Promise<number> {\n\t\tthis.logService.trace('Received request for process ID from other instance.');\n\n\t\treturn process.pid;\n\t}\n\n\tasync getMainProcessInfo(): Promise<IMainProcessInfo> {\n\t\tthis.logService.trace('Received request for main process info from other instance.');\n\n\t\tconst windows: IWindowInfo[] = [];\n\t\tBrowserWindow.getAllWindows().forEach(window => {\n\t\t\tconst codeWindow = this.windowsMainService.getWindowById(window.id);\n\t\t\tif (codeWindow) {\n\t\t\t\twindows.push(this.codeWindowToInfo(codeWindow));\n\t\t\t} else {\n\t\t\t\twindows.push(this.browserWindowToInfo(window));\n\t\t\t}\n\t\t});\n\n\t\treturn {\n\t\t\tmainPID: process.pid,\n\t\t\tmainArguments: process.argv.slice(1),\n\t\t\twindows,\n\t\t\tscreenReader: !!app.accessibilitySupportEnabled,\n\t\t\tgpuFeatureStatus: app.getGPUFeatureStatus()\n\t\t};\n\t}\n\n\tasync getRemoteDiagnostics(options: IRemoteDiagnosticOptions): Promise<(IRemoteDiagnosticInfo | IRemoteDiagnosticError)[]> {\n\t\tconst windows = this.windowsMainService.getWindows();\n\t\tconst diagnostics: Array<IDiagnosticInfo | IRemoteDiagnosticError | undefined> = await Promise.all(windows.map(window => {\n\t\t\treturn new Promise<IDiagnosticInfo | IRemoteDiagnosticError | undefined>((resolve) => {\n\t\t\t\tconst remoteAuthority = window.remoteAuthority;\n\t\t\t\tif (remoteAuthority) {\n\t\t\t\t\tconst replyChannel = `vscode:getDiagnosticInfoResponse${window.id}`;\n\t\t\t\t\tconst args: IDiagnosticInfoOptions = {\n\t\t\t\t\t\tincludeProcesses: options.includeProcesses,\n\t\t\t\t\t\tfolders: options.includeWorkspaceMetadata ? this.getFolderURIs(window) : undefined\n\t\t\t\t\t};\n\n\t\t\t\t\twindow.sendWhenReady('vscode:getDiagnosticInfo', CancellationToken.None, { replyChannel, args });\n\n\t\t\t\t\tipcMain.once(replyChannel, (_: IpcEvent, data: IRemoteDiagnosticInfo) => {\n\t\t\t\t\t\t// No data is returned if getting the connection fails.\n\t\t\t\t\t\tif (!data) {\n\t\t\t\t\t\t\tresolve({ hostName: remoteAuthority, errorMessage: `Unable to resolve connection to '${remoteAuthority}'.` });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresolve(data);\n\t\t\t\t\t});\n\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tresolve({ hostName: remoteAuthority, errorMessage: `Fetching remote diagnostics for '${remoteAuthority}' timed out.` });\n\t\t\t\t\t}, 5000);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(undefined);\n\t\t\t\t}\n\t\t\t});\n\t\t}));\n\n\t\treturn diagnostics.filter((x): x is IRemoteDiagnosticInfo | IRemoteDiagnosticError => !!x);\n\t}\n\n\tprivate getFolderURIs(window: ICodeWindow): URI[] {\n\t\tconst folderURIs: URI[] = [];\n\n\t\tconst workspace = window.openedWorkspace;\n\t\tif (isSingleFolderWorkspaceIdentifier(workspace)) {\n\t\t\tfolderURIs.push(workspace.uri);\n\t\t} else if (isWorkspaceIdentifier(workspace)) {\n\t\t\tconst resolvedWorkspace = this.workspacesManagementMainService.resolveLocalWorkspaceSync(workspace.configPath); // workspace folders can only be shown for local (resolved) workspaces\n\t\t\tif (resolvedWorkspace) {\n\t\t\t\tconst rootFolders = resolvedWorkspace.folders;\n\t\t\t\trootFolders.forEach(root => {\n\t\t\t\t\tfolderURIs.push(root.uri);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t//TODO@RMacfarlane: can we add the workspace file here?\n\t\t\t}\n\t\t}\n\n\t\treturn folderURIs;\n\t}\n\n\tprivate codeWindowToInfo(window: ICodeWindow): IWindowInfo {\n\t\tconst folderURIs = this.getFolderURIs(window);\n\t\tconst win = assertIsDefined(window.win);\n\n\t\treturn this.browserWindowToInfo(win, folderURIs, window.remoteAuthority);\n\t}\n\n\tprivate browserWindowToInfo(window: BrowserWindow, folderURIs: URI[] = [], remoteAuthority?: string): IWindowInfo {\n\t\treturn {\n\t\t\tpid: window.webContents.getOSProcessId(),\n\t\t\ttitle: window.getTitle(),\n\t\t\tfolderURIs,\n\t\t\tremoteAuthority\n\t\t};\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { exec } from 'child_process';\nimport { app, BrowserWindow, clipboard, Display, Menu, MessageBoxOptions, MessageBoxReturnValue, nativeTheme, OpenDevToolsOptions, OpenDialogOptions, OpenDialogReturnValue, powerMonitor, SaveDialogOptions, SaveDialogReturnValue, screen, shell } from 'electron';\nimport { arch, cpus, freemem, loadavg, platform, release, totalmem, type } from 'os';\nimport { promisify } from 'util';\nimport { memoize } from 'vs/base/common/decorators';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { mnemonicButtonLabel } from 'vs/base/common/labels';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport { dirname, join, resolve } from 'vs/base/common/path';\nimport { isLinux, isLinuxSnap, isMacintosh, isWindows } from 'vs/base/common/platform';\nimport { AddFirstParameterToFunctions } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { realpath } from 'vs/base/node/extpath';\nimport { virtualMachineHint } from 'vs/base/node/id';\nimport { Promises, SymlinkSupport } from 'vs/base/node/pfs';\nimport { MouseInputEvent } from 'vs/base/parts/sandbox/common/electronTypes';\nimport { localize } from 'vs/nls';\nimport { ISerializableCommandAction } from 'vs/platform/actions/common/actions';\nimport { INativeOpenDialogOptions } from 'vs/platform/dialogs/common/dialogs';\nimport { IDialogMainService } from 'vs/platform/dialogs/electron-main/dialogMainService';\nimport { IEnvironmentMainService } from 'vs/platform/environment/electron-main/environmentMainService';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ILifecycleMainService } from 'vs/platform/lifecycle/electron-main/lifecycleMainService';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ICommonNativeHostService, IOSProperties, IOSStatistics } from 'vs/platform/native/common/native';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { ISharedProcess } from 'vs/platform/sharedProcess/node/sharedProcess';\nimport { ITelemetryData, ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IThemeMainService } from 'vs/platform/theme/electron-main/themeMainService';\nimport { IColorScheme, IOpenedWindow, IOpenEmptyWindowOptions, IOpenWindowOptions, IPartsSplash, IWindowOpenable } from 'vs/platform/windows/common/windows';\nimport { ICodeWindow, IWindowsMainService, OpenContext } from 'vs/platform/windows/electron-main/windows';\nimport { isWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\nimport { IWorkspacesManagementMainService } from 'vs/platform/workspaces/electron-main/workspacesManagementMainService';\n\nexport interface INativeHostMainService extends AddFirstParameterToFunctions<ICommonNativeHostService, Promise<unknown> /* only methods, not events */, number | undefined /* window ID */> { }\n\nexport const INativeHostMainService = createDecorator<INativeHostMainService>('nativeHostMainService');\n\ninterface ChunkedPassword {\n\tcontent: string;\n\thasNextChunk: boolean;\n}\n\nexport class NativeHostMainService extends Disposable implements INativeHostMainService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\tprivate sharedProcess: ISharedProcess,\n\t\t@IWindowsMainService private readonly windowsMainService: IWindowsMainService,\n\t\t@IDialogMainService private readonly dialogMainService: IDialogMainService,\n\t\t@ILifecycleMainService private readonly lifecycleMainService: ILifecycleMainService,\n\t\t@IEnvironmentMainService private readonly environmentMainService: IEnvironmentMainService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IThemeMainService private readonly themeMainService: IThemeMainService,\n\t\t@IWorkspacesManagementMainService private readonly workspacesManagementMainService: IWorkspacesManagementMainService\n\t) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// Color Scheme changes\n\t\tnativeTheme.on('updated', () => {\n\t\t\tthis._onDidChangeColorScheme.fire(this.osColorScheme);\n\t\t});\n\t}\n\n\n\t//#region Properties\n\n\tget windowId(): never { throw new Error('Not implemented in electron-main'); }\n\n\t//#endregion\n\n\n\t//#region Events\n\n\treadonly onDidOpenWindow = Event.map(this.windowsMainService.onDidOpenWindow, window => window.id);\n\n\treadonly onDidMaximizeWindow = Event.filter(Event.fromNodeEventEmitter(app, 'browser-window-maximize', (event, window: BrowserWindow) => window.id), windowId => !!this.windowsMainService.getWindowById(windowId));\n\treadonly onDidUnmaximizeWindow = Event.filter(Event.fromNodeEventEmitter(app, 'browser-window-unmaximize', (event, window: BrowserWindow) => window.id), windowId => !!this.windowsMainService.getWindowById(windowId));\n\n\treadonly onDidBlurWindow = Event.filter(Event.fromNodeEventEmitter(app, 'browser-window-blur', (event, window: BrowserWindow) => window.id), windowId => !!this.windowsMainService.getWindowById(windowId));\n\treadonly onDidFocusWindow = Event.any(\n\t\tEvent.map(Event.filter(Event.map(this.windowsMainService.onDidChangeWindowsCount, () => this.windowsMainService.getLastActiveWindow()), window => !!window), window => window!.id),\n\t\tEvent.filter(Event.fromNodeEventEmitter(app, 'browser-window-focus', (event, window: BrowserWindow) => window.id), windowId => !!this.windowsMainService.getWindowById(windowId))\n\t);\n\n\treadonly onDidResumeOS = Event.fromNodeEventEmitter(powerMonitor, 'resume');\n\n\tprivate readonly _onDidChangeColorScheme = this._register(new Emitter<IColorScheme>());\n\treadonly onDidChangeColorScheme = this._onDidChangeColorScheme.event;\n\n\tprivate readonly _onDidChangePassword = this._register(new Emitter<{ account: string, service: string }>());\n\treadonly onDidChangePassword = this._onDidChangePassword.event;\n\n\treadonly onDidChangeDisplay = Event.debounce(Event.any(\n\t\tEvent.filter(Event.fromNodeEventEmitter(screen, 'display-metrics-changed', (event: Electron.Event, display: Display, changedMetrics?: string[]) => changedMetrics), changedMetrics => {\n\t\t\t// Electron will emit 'display-metrics-changed' events even when actually\n\t\t\t// going fullscreen, because the dock hides. However, we do not want to\n\t\t\t// react on this event as there is no change in display bounds.\n\t\t\treturn !(Array.isArray(changedMetrics) && changedMetrics.length === 1 && changedMetrics[0] === 'workArea');\n\t\t}),\n\t\tEvent.fromNodeEventEmitter(screen, 'display-added'),\n\t\tEvent.fromNodeEventEmitter(screen, 'display-removed')\n\t), () => { }, 100);\n\n\t//#endregion\n\n\n\t//#region Window\n\n\tasync getWindows(): Promise<IOpenedWindow[]> {\n\t\tconst windows = this.windowsMainService.getWindows();\n\n\t\treturn windows.map(window => ({\n\t\t\tid: window.id,\n\t\t\tworkspace: window.openedWorkspace,\n\t\t\ttitle: window.win?.getTitle() ?? '',\n\t\t\tfilename: window.getRepresentedFilename(),\n\t\t\tdirty: window.isDocumentEdited()\n\t\t}));\n\t}\n\n\tasync getWindowCount(windowId: number | undefined): Promise<number> {\n\t\treturn this.windowsMainService.getWindowCount();\n\t}\n\n\tasync getActiveWindowId(windowId: number | undefined): Promise<number | undefined> {\n\t\tconst activeWindow = BrowserWindow.getFocusedWindow() || this.windowsMainService.getLastActiveWindow();\n\t\tif (activeWindow) {\n\t\t\treturn activeWindow.id;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\topenWindow(windowId: number | undefined, options?: IOpenEmptyWindowOptions): Promise<void>;\n\topenWindow(windowId: number | undefined, toOpen: IWindowOpenable[], options?: IOpenWindowOptions): Promise<void>;\n\topenWindow(windowId: number | undefined, arg1?: IOpenEmptyWindowOptions | IWindowOpenable[], arg2?: IOpenWindowOptions): Promise<void> {\n\t\tif (Array.isArray(arg1)) {\n\t\t\treturn this.doOpenWindow(windowId, arg1, arg2);\n\t\t}\n\n\t\treturn this.doOpenEmptyWindow(windowId, arg1);\n\t}\n\n\tprivate async doOpenWindow(windowId: number | undefined, toOpen: IWindowOpenable[], options: IOpenWindowOptions = Object.create(null)): Promise<void> {\n\t\tif (toOpen.length > 0) {\n\t\t\tthis.windowsMainService.open({\n\t\t\t\tcontext: OpenContext.API,\n\t\t\t\tcontextWindowId: windowId,\n\t\t\t\turisToOpen: toOpen,\n\t\t\t\tcli: this.environmentMainService.args,\n\t\t\t\tforceNewWindow: options.forceNewWindow,\n\t\t\t\tforceReuseWindow: options.forceReuseWindow,\n\t\t\t\tpreferNewWindow: options.preferNewWindow,\n\t\t\t\tdiffMode: options.diffMode,\n\t\t\t\taddMode: options.addMode,\n\t\t\t\tgotoLineMode: options.gotoLineMode,\n\t\t\t\tnoRecentEntry: options.noRecentEntry,\n\t\t\t\twaitMarkerFileURI: options.waitMarkerFileURI,\n\t\t\t\tremoteAuthority: options.remoteAuthority || undefined\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate async doOpenEmptyWindow(windowId: number | undefined, options?: IOpenEmptyWindowOptions): Promise<void> {\n\t\tthis.windowsMainService.openEmptyWindow({\n\t\t\tcontext: OpenContext.API,\n\t\t\tcontextWindowId: windowId\n\t\t}, options);\n\t}\n\n\tasync toggleFullScreen(windowId: number | undefined): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window) {\n\t\t\twindow.toggleFullScreen();\n\t\t}\n\t}\n\n\tasync handleTitleDoubleClick(windowId: number | undefined): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window) {\n\t\t\twindow.handleTitleDoubleClick();\n\t\t}\n\t}\n\n\tasync isMaximized(windowId: number | undefined): Promise<boolean> {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window?.win) {\n\t\t\treturn window.win.isMaximized();\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tasync maximizeWindow(windowId: number | undefined): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window?.win) {\n\t\t\twindow.win.maximize();\n\t\t}\n\t}\n\n\tasync unmaximizeWindow(windowId: number | undefined): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window?.win) {\n\t\t\twindow.win.unmaximize();\n\t\t}\n\t}\n\n\tasync minimizeWindow(windowId: number | undefined): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window?.win) {\n\t\t\twindow.win.minimize();\n\t\t}\n\t}\n\n\tasync focusWindow(windowId: number | undefined, options?: { windowId?: number; force?: boolean; }): Promise<void> {\n\t\tif (options && typeof options.windowId === 'number') {\n\t\t\twindowId = options.windowId;\n\t\t}\n\n\t\tconst window = this.windowById(windowId);\n\t\tif (window) {\n\t\t\twindow.focus({ force: options?.force ?? false });\n\t\t}\n\t}\n\n\tasync setMinimumSize(windowId: number | undefined, width: number | undefined, height: number | undefined): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window?.win) {\n\t\t\tconst [windowWidth, windowHeight] = window.win.getSize();\n\t\t\tconst [minWindowWidth, minWindowHeight] = window.win.getMinimumSize();\n\t\t\tconst [newMinWindowWidth, newMinWindowHeight] = [width ?? minWindowWidth, height ?? minWindowHeight];\n\t\t\tconst [newWindowWidth, newWindowHeight] = [Math.max(windowWidth, newMinWindowWidth), Math.max(windowHeight, newMinWindowHeight)];\n\n\t\t\tif (minWindowWidth !== newMinWindowWidth || minWindowHeight !== newMinWindowHeight) {\n\t\t\t\twindow.win.setMinimumSize(newMinWindowWidth, newMinWindowHeight);\n\t\t\t}\n\t\t\tif (windowWidth !== newWindowWidth || windowHeight !== newWindowHeight) {\n\t\t\t\twindow.win.setSize(newWindowWidth, newWindowHeight);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync saveWindowSplash(windowId: number | undefined, splash: IPartsSplash): Promise<void> {\n\t\tthis.themeMainService.saveWindowSplash(windowId, splash);\n\t}\n\n\t//#endregion\n\n\n\t//#region macOS Shell Command\n\n\tasync installShellCommand(windowId: number | undefined): Promise<void> {\n\t\tconst { source, target } = await this.getShellCommandLink();\n\n\t\t// Only install unless already existing\n\t\ttry {\n\t\t\tconst { symbolicLink } = await SymlinkSupport.stat(source);\n\t\t\tif (symbolicLink && !symbolicLink.dangling) {\n\t\t\t\tconst linkTargetRealPath = await realpath(source);\n\t\t\t\tif (target === linkTargetRealPath) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Different source, delete it first\n\t\t\tawait Promises.unlink(source);\n\t\t} catch (error) {\n\t\t\tif (error.code !== 'ENOENT') {\n\t\t\t\tthrow error; // throw on any error but file not found\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\tawait Promises.symlink(target, source);\n\t\t} catch (error) {\n\t\t\tif (error.code !== 'EACCES' && error.code !== 'ENOENT') {\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\tconst { response } = await this.showMessageBox(windowId, {\n\t\t\t\ttitle: this.productService.nameLong,\n\t\t\t\ttype: 'info',\n\t\t\t\tmessage: localize('warnEscalation', \"{0} will now prompt with 'osascript' for Administrator privileges to install the shell command.\", this.productService.nameShort),\n\t\t\t\tbuttons: [\n\t\t\t\t\tmnemonicButtonLabel(localize({ key: 'ok', comment: ['&& denotes a mnemonic'] }, \"&&OK\")),\n\t\t\t\t\tmnemonicButtonLabel(localize({ key: 'cancel', comment: ['&& denotes a mnemonic'] }, \"&&Cancel\")),\n\t\t\t\t],\n\t\t\t\tnoLink: true,\n\t\t\t\tdefaultId: 0,\n\t\t\t\tcancelId: 1\n\t\t\t});\n\n\t\t\tif (response === 0 /* OK */) {\n\t\t\t\ttry {\n\t\t\t\t\tconst command = `osascript -e \"do shell script \\\\\"mkdir -p /usr/local/bin && ln -sf \\'${target}\\' \\'${source}\\'\\\\\" with administrator privileges\"`;\n\t\t\t\t\tawait promisify(exec)(command);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tthrow new Error(localize('cantCreateBinFolder', \"Unable to install the shell command '{0}'.\", source));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tasync uninstallShellCommand(windowId: number | undefined): Promise<void> {\n\t\tconst { source } = await this.getShellCommandLink();\n\n\t\ttry {\n\t\t\tawait Promises.unlink(source);\n\t\t} catch (error) {\n\t\t\tswitch (error.code) {\n\t\t\t\tcase 'EACCES':\n\t\t\t\t\tconst { response } = await this.showMessageBox(windowId, {\n\t\t\t\t\t\ttitle: this.productService.nameLong,\n\t\t\t\t\t\ttype: 'info',\n\t\t\t\t\t\tmessage: localize('warnEscalationUninstall', \"{0} will now prompt with 'osascript' for Administrator privileges to uninstall the shell command.\", this.productService.nameShort),\n\t\t\t\t\t\tbuttons: [\n\t\t\t\t\t\t\tmnemonicButtonLabel(localize({ key: 'ok', comment: ['&& denotes a mnemonic'] }, \"&&OK\")),\n\t\t\t\t\t\t\tmnemonicButtonLabel(localize({ key: 'cancel', comment: ['&& denotes a mnemonic'] }, \"&&Cancel\")),\n\t\t\t\t\t\t],\n\t\t\t\t\t\tnoLink: true,\n\t\t\t\t\t\tdefaultId: 0,\n\t\t\t\t\t\tcancelId: 1\n\t\t\t\t\t});\n\n\t\t\t\t\tif (response === 0 /* OK */) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst command = `osascript -e \"do shell script \\\\\"rm \\'${source}\\'\\\\\" with administrator privileges\"`;\n\t\t\t\t\t\t\tawait promisify(exec)(command);\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthrow new Error(localize('cantUninstall', \"Unable to uninstall the shell command '{0}'.\", source));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'ENOENT':\n\t\t\t\t\tbreak; // ignore file not found\n\t\t\t\tdefault:\n\t\t\t\t\tthrow error;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async getShellCommandLink(): Promise<{ readonly source: string, readonly target: string }> {\n\t\tconst target = resolve(this.environmentMainService.appRoot, 'bin', 'code');\n\t\tconst source = `/usr/local/bin/${this.productService.applicationName}`;\n\n\t\t// Ensure source exists\n\t\tconst sourceExists = await Promises.exists(target);\n\t\tif (!sourceExists) {\n\t\t\tthrow new Error(localize('sourceMissing', \"Unable to find shell script in '{0}'\", target));\n\t\t}\n\n\t\treturn { source, target };\n\t}\n\n\t//#region Dialog\n\n\tasync showMessageBox(windowId: number | undefined, options: MessageBoxOptions): Promise<MessageBoxReturnValue> {\n\t\treturn this.dialogMainService.showMessageBox(options, this.toBrowserWindow(windowId));\n\t}\n\n\tasync showSaveDialog(windowId: number | undefined, options: SaveDialogOptions): Promise<SaveDialogReturnValue> {\n\t\treturn this.dialogMainService.showSaveDialog(options, this.toBrowserWindow(windowId));\n\t}\n\n\tasync showOpenDialog(windowId: number | undefined, options: OpenDialogOptions): Promise<OpenDialogReturnValue> {\n\t\treturn this.dialogMainService.showOpenDialog(options, this.toBrowserWindow(windowId));\n\t}\n\n\tprivate toBrowserWindow(windowId: number | undefined): BrowserWindow | undefined {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window?.win) {\n\t\t\treturn window.win;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tasync pickFileFolderAndOpen(windowId: number | undefined, options: INativeOpenDialogOptions): Promise<void> {\n\t\tconst paths = await this.dialogMainService.pickFileFolder(options);\n\t\tif (paths) {\n\t\t\tthis.sendPickerTelemetry(paths, options.telemetryEventName || 'openFileFolder', options.telemetryExtraData);\n\t\t\tthis.doOpenPicked(await Promise.all(paths.map(async path => (await SymlinkSupport.existsDirectory(path)) ? { folderUri: URI.file(path) } : { fileUri: URI.file(path) })), options, windowId);\n\t\t}\n\t}\n\n\tasync pickFolderAndOpen(windowId: number | undefined, options: INativeOpenDialogOptions): Promise<void> {\n\t\tconst paths = await this.dialogMainService.pickFolder(options);\n\t\tif (paths) {\n\t\t\tthis.sendPickerTelemetry(paths, options.telemetryEventName || 'openFolder', options.telemetryExtraData);\n\t\t\tthis.doOpenPicked(paths.map(path => ({ folderUri: URI.file(path) })), options, windowId);\n\t\t}\n\t}\n\n\tasync pickFileAndOpen(windowId: number | undefined, options: INativeOpenDialogOptions): Promise<void> {\n\t\tconst paths = await this.dialogMainService.pickFile(options);\n\t\tif (paths) {\n\t\t\tthis.sendPickerTelemetry(paths, options.telemetryEventName || 'openFile', options.telemetryExtraData);\n\t\t\tthis.doOpenPicked(paths.map(path => ({ fileUri: URI.file(path) })), options, windowId);\n\t\t}\n\t}\n\n\tasync pickWorkspaceAndOpen(windowId: number | undefined, options: INativeOpenDialogOptions): Promise<void> {\n\t\tconst paths = await this.dialogMainService.pickWorkspace(options);\n\t\tif (paths) {\n\t\t\tthis.sendPickerTelemetry(paths, options.telemetryEventName || 'openWorkspace', options.telemetryExtraData);\n\t\t\tthis.doOpenPicked(paths.map(path => ({ workspaceUri: URI.file(path) })), options, windowId);\n\t\t}\n\t}\n\n\tprivate doOpenPicked(openable: IWindowOpenable[], options: INativeOpenDialogOptions, windowId: number | undefined): void {\n\t\tthis.windowsMainService.open({\n\t\t\tcontext: OpenContext.DIALOG,\n\t\t\tcontextWindowId: windowId,\n\t\t\tcli: this.environmentMainService.args,\n\t\t\turisToOpen: openable,\n\t\t\tforceNewWindow: options.forceNewWindow,\n\t\t\t/* remoteAuthority will be determined based on openable */\n\t\t});\n\t}\n\n\tprivate sendPickerTelemetry(paths: string[], telemetryEventName: string, telemetryExtraData?: ITelemetryData) {\n\t\tconst numberOfPaths = paths ? paths.length : 0;\n\n\t\t// Telemetry\n\t\t// __GDPR__TODO__ Dynamic event names and dynamic properties. Can not be registered statically.\n\t\tthis.telemetryService.publicLog(telemetryEventName, {\n\t\t\t...telemetryExtraData,\n\t\t\toutcome: numberOfPaths ? 'success' : 'canceled',\n\t\t\tnumberOfPaths\n\t\t});\n\t}\n\n\t//#endregion\n\n\n\t//#region OS\n\n\tasync showItemInFolder(windowId: number | undefined, path: string): Promise<void> {\n\t\tshell.showItemInFolder(path);\n\t}\n\n\tasync setRepresentedFilename(windowId: number | undefined, path: string): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window) {\n\t\t\twindow.setRepresentedFilename(path);\n\t\t}\n\t}\n\n\tasync setDocumentEdited(windowId: number | undefined, edited: boolean): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window) {\n\t\t\twindow.setDocumentEdited(edited);\n\t\t}\n\t}\n\n\tasync openExternal(windowId: number | undefined, url: string): Promise<boolean> {\n\t\tif (isLinuxSnap) {\n\t\t\tthis.safeSnapOpenExternal(url);\n\t\t} else {\n\t\t\tshell.openExternal(url);\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tprivate safeSnapOpenExternal(url: string): void {\n\n\t\t// Remove some environment variables before opening to avoid issues...\n\t\tconst gdkPixbufModuleFile = process.env['GDK_PIXBUF_MODULE_FILE'];\n\t\tconst gdkPixbufModuleDir = process.env['GDK_PIXBUF_MODULEDIR'];\n\t\tdelete process.env['GDK_PIXBUF_MODULE_FILE'];\n\t\tdelete process.env['GDK_PIXBUF_MODULEDIR'];\n\n\t\tshell.openExternal(url);\n\n\t\t// ...but restore them after\n\t\tprocess.env['GDK_PIXBUF_MODULE_FILE'] = gdkPixbufModuleFile;\n\t\tprocess.env['GDK_PIXBUF_MODULEDIR'] = gdkPixbufModuleDir;\n\t}\n\n\tmoveItemToTrash(windowId: number | undefined, fullPath: string): Promise<void> {\n\t\treturn shell.trashItem(fullPath);\n\t}\n\n\tasync isAdmin(): Promise<boolean> {\n\t\tlet isAdmin: boolean;\n\t\tif (isWindows) {\n\t\t\tisAdmin = (await import('native-is-elevated'))();\n\t\t} else {\n\t\t\tisAdmin = process.getuid() === 0;\n\t\t}\n\n\t\treturn isAdmin;\n\t}\n\n\tasync writeElevated(windowId: number | undefined, source: URI, target: URI, options?: { unlock?: boolean }): Promise<void> {\n\t\tconst sudoPrompt = await import('@vscode/sudo-prompt');\n\n\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\tconst sudoCommand: string[] = [`\"${this.cliPath}\"`];\n\t\t\tif (options?.unlock) {\n\t\t\t\tsudoCommand.push('--file-chmod');\n\t\t\t}\n\n\t\t\tsudoCommand.push('--file-write', `\"${source.fsPath}\"`, `\"${target.fsPath}\"`);\n\n\t\t\tconst promptOptions = {\n\t\t\t\tname: this.productService.nameLong.replace('-', ''),\n\t\t\t\ticns: (isMacintosh && this.environmentMainService.isBuilt) ? join(dirname(this.environmentMainService.appRoot), `${this.productService.nameShort}.icns`) : undefined\n\t\t\t};\n\n\t\t\tsudoPrompt.exec(sudoCommand.join(' '), promptOptions, (error?, stdout?, stderr?) => {\n\t\t\t\tif (stdout) {\n\t\t\t\t\tthis.logService.trace(`[sudo-prompt] received stdout: ${stdout}`);\n\t\t\t\t}\n\n\t\t\t\tif (stderr) {\n\t\t\t\t\tthis.logService.trace(`[sudo-prompt] received stderr: ${stderr}`);\n\t\t\t\t}\n\n\t\t\t\tif (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(undefined);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t@memoize\n\tprivate get cliPath(): string {\n\n\t\t// Windows\n\t\tif (isWindows) {\n\t\t\tif (this.environmentMainService.isBuilt) {\n\t\t\t\treturn join(dirname(process.execPath), 'bin', `${this.productService.applicationName}.cmd`);\n\t\t\t}\n\n\t\t\treturn join(this.environmentMainService.appRoot, 'scripts', 'code-cli.bat');\n\t\t}\n\n\t\t// Linux\n\t\tif (isLinux) {\n\t\t\tif (this.environmentMainService.isBuilt) {\n\t\t\t\treturn join(dirname(process.execPath), 'bin', `${this.productService.applicationName}`);\n\t\t\t}\n\n\t\t\treturn join(this.environmentMainService.appRoot, 'scripts', 'code-cli.sh');\n\t\t}\n\n\t\t// macOS\n\t\tif (this.environmentMainService.isBuilt) {\n\t\t\treturn join(this.environmentMainService.appRoot, 'bin', 'code');\n\t\t}\n\n\t\treturn join(this.environmentMainService.appRoot, 'scripts', 'code-cli.sh');\n\t}\n\n\tasync getOSStatistics(): Promise<IOSStatistics> {\n\t\treturn {\n\t\t\ttotalmem: totalmem(),\n\t\t\tfreemem: freemem(),\n\t\t\tloadavg: loadavg()\n\t\t};\n\t}\n\n\tasync getOSProperties(): Promise<IOSProperties> {\n\t\treturn {\n\t\t\tarch: arch(),\n\t\t\tplatform: platform(),\n\t\t\trelease: release(),\n\t\t\ttype: type(),\n\t\t\tcpus: cpus()\n\t\t};\n\t}\n\n\tasync getOSVirtualMachineHint(): Promise<number> {\n\t\treturn virtualMachineHint.value();\n\t}\n\n\tprivate get osColorScheme(): IColorScheme {\n\t\treturn {\n\t\t\thighContrast: nativeTheme.shouldUseInvertedColorScheme || nativeTheme.shouldUseHighContrastColors,\n\t\t\tdark: nativeTheme.shouldUseDarkColors\n\t\t};\n\t}\n\n\tpublic async getOSColorScheme(): Promise<IColorScheme> {\n\t\treturn this.osColorScheme;\n\t}\n\n\n\t//#endregion\n\n\n\t//#region Process\n\n\tasync killProcess(windowId: number | undefined, pid: number, code: string): Promise<void> {\n\t\tprocess.kill(pid, code);\n\t}\n\n\t//#endregion\n\n\n\t//#region Clipboard\n\n\tasync readClipboardText(windowId: number | undefined, type?: 'selection' | 'clipboard'): Promise<string> {\n\t\treturn clipboard.readText(type);\n\t}\n\n\tasync writeClipboardText(windowId: number | undefined, text: string, type?: 'selection' | 'clipboard'): Promise<void> {\n\t\treturn clipboard.writeText(text, type);\n\t}\n\n\tasync readClipboardFindText(windowId: number | undefined,): Promise<string> {\n\t\treturn clipboard.readFindText();\n\t}\n\n\tasync writeClipboardFindText(windowId: number | undefined, text: string): Promise<void> {\n\t\treturn clipboard.writeFindText(text);\n\t}\n\n\tasync writeClipboardBuffer(windowId: number | undefined, format: string, buffer: Uint8Array, type?: 'selection' | 'clipboard'): Promise<void> {\n\t\treturn clipboard.writeBuffer(format, Buffer.from(buffer), type);\n\t}\n\n\tasync readClipboardBuffer(windowId: number | undefined, format: string): Promise<Uint8Array> {\n\t\treturn clipboard.readBuffer(format);\n\t}\n\n\tasync hasClipboard(windowId: number | undefined, format: string, type?: 'selection' | 'clipboard'): Promise<boolean> {\n\t\treturn clipboard.has(format, type);\n\t}\n\n\t//#endregion\n\n\n\t//#region macOS Touchbar\n\n\tasync newWindowTab(): Promise<void> {\n\t\tthis.windowsMainService.open({\n\t\t\tcontext: OpenContext.API,\n\t\t\tcli: this.environmentMainService.args,\n\t\t\tforceNewTabbedWindow: true,\n\t\t\tforceEmpty: true,\n\t\t\tremoteAuthority: this.environmentMainService.args.remote || undefined\n\t\t});\n\t}\n\n\tasync showPreviousWindowTab(): Promise<void> {\n\t\tMenu.sendActionToFirstResponder('selectPreviousTab:');\n\t}\n\n\tasync showNextWindowTab(): Promise<void> {\n\t\tMenu.sendActionToFirstResponder('selectNextTab:');\n\t}\n\n\tasync moveWindowTabToNewWindow(): Promise<void> {\n\t\tMenu.sendActionToFirstResponder('moveTabToNewWindow:');\n\t}\n\n\tasync mergeAllWindowTabs(): Promise<void> {\n\t\tMenu.sendActionToFirstResponder('mergeAllWindows:');\n\t}\n\n\tasync toggleWindowTabsBar(): Promise<void> {\n\t\tMenu.sendActionToFirstResponder('toggleTabBar:');\n\t}\n\n\tasync updateTouchBar(windowId: number | undefined, items: ISerializableCommandAction[][]): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window) {\n\t\t\twindow.updateTouchBar(items);\n\t\t}\n\t}\n\n\t//#endregion\n\n\n\t//#region Lifecycle\n\n\tasync notifyReady(windowId: number | undefined): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window) {\n\t\t\twindow.setReady();\n\t\t}\n\t}\n\n\tasync relaunch(windowId: number | undefined, options?: { addArgs?: string[], removeArgs?: string[] }): Promise<void> {\n\t\treturn this.lifecycleMainService.relaunch(options);\n\t}\n\n\tasync reload(windowId: number | undefined, options?: { disableExtensions?: boolean }): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window) {\n\n\t\t\t// Special case: support `transient` workspaces by preventing\n\t\t\t// the reload and rather go back to an empty window. Transient\n\t\t\t// workspaces should never restore, even when the user wants\n\t\t\t// to reload.\n\t\t\t// For: https://github.com/microsoft/vscode/issues/119695\n\t\t\tif (isWorkspaceIdentifier(window.openedWorkspace)) {\n\t\t\t\tconst configPath = window.openedWorkspace.configPath;\n\t\t\t\tif (configPath.scheme === Schemas.file) {\n\t\t\t\t\tconst workspace = await this.workspacesManagementMainService.resolveLocalWorkspace(configPath);\n\t\t\t\t\tif (workspace?.transient) {\n\t\t\t\t\t\treturn this.openWindow(window.id, { forceReuseWindow: true });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Proceed normally to reload the window\n\t\t\treturn this.lifecycleMainService.reload(window, options?.disableExtensions !== undefined ? { _: [], 'disable-extensions': options.disableExtensions } : undefined);\n\t\t}\n\t}\n\n\tasync closeWindow(windowId: number | undefined): Promise<void> {\n\t\tthis.closeWindowById(windowId, windowId);\n\t}\n\n\tasync closeWindowById(currentWindowId: number | undefined, targetWindowId?: number | undefined): Promise<void> {\n\t\tconst window = this.windowById(targetWindowId);\n\t\tif (window?.win) {\n\t\t\treturn window.win.close();\n\t\t}\n\t}\n\n\tasync quit(windowId: number | undefined): Promise<void> {\n\n\t\t// If the user selected to exit from an extension development host window, do not quit, but just\n\t\t// close the window unless this is the last window that is opened.\n\t\tconst window = this.windowsMainService.getLastActiveWindow();\n\t\tif (window?.isExtensionDevelopmentHost && this.windowsMainService.getWindowCount() > 1 && window.win) {\n\t\t\twindow.win.close();\n\t\t}\n\n\t\t// Otherwise: normal quit\n\t\telse {\n\t\t\tthis.lifecycleMainService.quit();\n\t\t}\n\t}\n\n\tasync exit(windowId: number | undefined, code: number): Promise<void> {\n\t\tawait this.lifecycleMainService.kill(code);\n\t}\n\n\t//#endregion\n\n\n\t//#region Connectivity\n\n\tasync resolveProxy(windowId: number | undefined, url: string): Promise<string | undefined> {\n\t\tconst window = this.windowById(windowId);\n\t\tconst session = window?.win?.webContents?.session;\n\t\tif (session) {\n\t\t\treturn session.resolveProxy(url);\n\t\t} else {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\t//#endregion\n\n\n\t//#region Development\n\n\tasync openDevTools(windowId: number | undefined, options?: OpenDevToolsOptions): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window?.win) {\n\t\t\twindow.win.webContents.openDevTools(options);\n\t\t}\n\t}\n\n\tasync toggleDevTools(windowId: number | undefined): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window?.win) {\n\t\t\tconst contents = window.win.webContents;\n\t\t\tcontents.toggleDevTools();\n\t\t}\n\t}\n\n\tasync sendInputEvent(windowId: number | undefined, event: MouseInputEvent): Promise<void> {\n\t\tconst window = this.windowById(windowId);\n\t\tif (window?.win && (event.type === 'mouseDown' || event.type === 'mouseUp')) {\n\t\t\twindow.win.webContents.sendInputEvent(event);\n\t\t}\n\t}\n\n\tasync toggleSharedProcessWindow(): Promise<void> {\n\t\treturn this.sharedProcess.toggle();\n\t}\n\n\t//#endregion\n\n\n\t//#region Registry (windows)\n\n\tasync windowsGetStringRegKey(windowId: number | undefined, hive: 'HKEY_CURRENT_USER' | 'HKEY_LOCAL_MACHINE' | 'HKEY_CLASSES_ROOT' | 'HKEY_USERS' | 'HKEY_CURRENT_CONFIG', path: string, name: string): Promise<string | undefined> {\n\t\tif (!isWindows) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst Registry = await import('vscode-windows-registry');\n\t\ttry {\n\t\t\treturn Registry.GetStringRegKey(hive, path, name);\n\t\t} catch {\n\t\t\treturn undefined;\n\t\t}\n\t}\n\n\t//#endregion\n\n\n\t//#region Credentials\n\n\tprivate static readonly MAX_PASSWORD_LENGTH = 2500;\n\tprivate static readonly PASSWORD_CHUNK_SIZE = NativeHostMainService.MAX_PASSWORD_LENGTH - 100;\n\n\tasync getPassword(windowId: number | undefined, service: string, account: string): Promise<string | null> {\n\t\tconst keytar = await this.withKeytar();\n\n\t\tconst password = await keytar.getPassword(service, account);\n\t\tif (password) {\n\t\t\ttry {\n\t\t\t\tlet { content, hasNextChunk }: ChunkedPassword = JSON.parse(password);\n\t\t\t\tif (!content || !hasNextChunk) {\n\t\t\t\t\treturn password;\n\t\t\t\t}\n\n\t\t\t\tlet index = 1;\n\t\t\t\twhile (hasNextChunk) {\n\t\t\t\t\tconst nextChunk = await keytar.getPassword(service, `${account}-${index}`);\n\t\t\t\t\tconst result: ChunkedPassword = JSON.parse(nextChunk!);\n\t\t\t\t\tcontent += result.content;\n\t\t\t\t\thasNextChunk = result.hasNextChunk;\n\t\t\t\t\tindex++;\n\t\t\t\t}\n\n\t\t\t\treturn content;\n\t\t\t} catch {\n\t\t\t\treturn password;\n\t\t\t}\n\t\t}\n\n\t\treturn password;\n\t}\n\n\tasync setPassword(windowId: number | undefined, service: string, account: string, password: string): Promise<void> {\n\t\tconst keytar = await this.withKeytar();\n\t\tconst MAX_SET_ATTEMPTS = 3;\n\n\t\t// Sometimes Keytar has a problem talking to the keychain on the OS. To be more resilient, we retry a few times.\n\t\tconst setPasswordWithRetry = async (service: string, account: string, password: string) => {\n\t\t\tlet attempts = 0;\n\t\t\tlet error: any;\n\t\t\twhile (attempts < MAX_SET_ATTEMPTS) {\n\t\t\t\ttry {\n\t\t\t\t\tawait keytar.setPassword(service, account, password);\n\t\t\t\t\treturn;\n\t\t\t\t} catch (e) {\n\t\t\t\t\terror = e;\n\t\t\t\t\tthis.logService.warn('Error attempting to set a password: ', e);\n\t\t\t\t\tattempts++;\n\t\t\t\t\tawait new Promise(resolve => setTimeout(resolve, 200));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// throw last error\n\t\t\tthrow error;\n\t\t};\n\n\t\tif (isWindows && password.length > NativeHostMainService.MAX_PASSWORD_LENGTH) {\n\t\t\tlet index = 0;\n\t\t\tlet chunk = 0;\n\t\t\tlet hasNextChunk = true;\n\t\t\twhile (hasNextChunk) {\n\t\t\t\tconst passwordChunk = password.substring(index, index + NativeHostMainService.PASSWORD_CHUNK_SIZE);\n\t\t\t\tindex += NativeHostMainService.PASSWORD_CHUNK_SIZE;\n\t\t\t\thasNextChunk = password.length - index > 0;\n\n\t\t\t\tconst content: ChunkedPassword = {\n\t\t\t\t\tcontent: passwordChunk,\n\t\t\t\t\thasNextChunk: hasNextChunk\n\t\t\t\t};\n\n\t\t\t\tawait setPasswordWithRetry(service, chunk ? `${account}-${chunk}` : account, JSON.stringify(content));\n\t\t\t\tchunk++;\n\t\t\t}\n\n\t\t} else {\n\t\t\tawait setPasswordWithRetry(service, account, password);\n\t\t}\n\n\t\tthis._onDidChangePassword.fire({ service, account });\n\t}\n\n\tasync deletePassword(windowId: number | undefined, service: string, account: string): Promise<boolean> {\n\t\tconst keytar = await this.withKeytar();\n\n\t\tconst didDelete = await keytar.deletePassword(service, account);\n\t\tif (didDelete) {\n\t\t\tthis._onDidChangePassword.fire({ service, account });\n\t\t}\n\n\t\treturn didDelete;\n\t}\n\n\tasync findPassword(windowId: number | undefined, service: string): Promise<string | null> {\n\t\tconst keytar = await this.withKeytar();\n\n\t\treturn keytar.findPassword(service);\n\t}\n\n\tasync findCredentials(windowId: number | undefined, service: string): Promise<Array<{ account: string, password: string }>> {\n\t\tconst keytar = await this.withKeytar();\n\n\t\treturn keytar.findCredentials(service);\n\t}\n\n\tprivate async withKeytar(): Promise<typeof import('keytar')> {\n\t\tif (this.environmentMainService.disableKeytar) {\n\t\t\tthrow new Error('keytar has been disabled via --disable-keytar option');\n\t\t}\n\n\t\treturn await import('keytar');\n\t}\n\n\t//#endregion\n\n\tprivate windowById(windowId: number | undefined): ICodeWindow | undefined {\n\t\tif (typeof windowId !== 'number') {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn this.windowsMainService.getWindowById(windowId);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { app, AuthenticationResponseDetails, AuthInfo, Event as ElectronEvent, WebContents } from 'electron';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Event } from 'vs/base/common/event';\nimport { hash } from 'vs/base/common/hash';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { IEncryptionMainService } from 'vs/platform/encryption/electron-main/encryptionMainService';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { INativeHostMainService } from 'vs/platform/native/electron-main/nativeHostMainService';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IWindowsMainService } from 'vs/platform/windows/electron-main/windows';\n\ninterface ElectronAuthenticationResponseDetails extends AuthenticationResponseDetails {\n\tfirstAuthAttempt?: boolean; // https://github.com/electron/electron/blob/84a42a050e7d45225e69df5bd2d2bf9f1037ea41/shell/browser/login_handler.cc#L70\n}\n\ntype LoginEvent = {\n\tevent: ElectronEvent;\n\tauthInfo: AuthInfo;\n\treq: ElectronAuthenticationResponseDetails;\n\n\tcallback: (username?: string, password?: string) => void;\n};\n\ntype Credentials = {\n\tusername: string;\n\tpassword: string;\n};\n\nenum ProxyAuthState {\n\n\t/**\n\t * Initial state: we will try to use stored credentials\n\t * first to reply to the auth challenge.\n\t */\n\tInitial = 1,\n\n\t/**\n\t * We used stored credentials and are still challenged,\n\t * so we will show a login dialog next.\n\t */\n\tStoredCredentialsUsed,\n\n\t/**\n\t * Finally, if we showed a login dialog already, we will\n\t * not show any more login dialogs until restart to reduce\n\t * the UI noise.\n\t */\n\tLoginDialogShown\n}\n\nexport class ProxyAuthHandler extends Disposable {\n\n\tprivate readonly PROXY_CREDENTIALS_SERVICE_KEY = `${this.productService.urlProtocol}.proxy-credentials`;\n\n\tprivate pendingProxyResolve: Promise<Credentials | undefined> | undefined = undefined;\n\n\tprivate state = ProxyAuthState.Initial;\n\n\tprivate sessionCredentials: Credentials | undefined = undefined;\n\n\tconstructor(\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IWindowsMainService private readonly windowsMainService: IWindowsMainService,\n\t\t@INativeHostMainService private readonly nativeHostMainService: INativeHostMainService,\n\t\t@IEncryptionMainService private readonly encryptionMainService: IEncryptionMainService,\n\t\t@IProductService private readonly productService: IProductService\n\t) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tconst onLogin = Event.fromNodeEventEmitter<LoginEvent>(app, 'login', (event: ElectronEvent, webContents: WebContents, req: ElectronAuthenticationResponseDetails, authInfo: AuthInfo, callback) => ({ event, webContents, req, authInfo, callback }));\n\t\tthis._register(onLogin(this.onLogin, this));\n\t}\n\n\tprivate async onLogin({ event, authInfo, req, callback }: LoginEvent): Promise<void> {\n\t\tif (!authInfo.isProxy) {\n\t\t\treturn; // only for proxy\n\t\t}\n\n\t\tif (!this.pendingProxyResolve && this.state === ProxyAuthState.LoginDialogShown && req.firstAuthAttempt) {\n\t\t\tthis.logService.trace('auth#onLogin (proxy) - exit - proxy dialog already shown');\n\n\t\t\treturn; // only one dialog per session at max (except when firstAuthAttempt: false which indicates a login problem)\n\t\t}\n\n\t\t// Signal we handle this event on our own, otherwise\n\t\t// Electron will ignore our provided credentials.\n\t\tevent.preventDefault();\n\n\t\tlet credentials: Credentials | undefined = undefined;\n\t\tif (!this.pendingProxyResolve) {\n\t\t\tthis.logService.trace('auth#onLogin (proxy) - no pending proxy handling found, starting new');\n\n\t\t\tthis.pendingProxyResolve = this.resolveProxyCredentials(authInfo);\n\t\t\ttry {\n\t\t\t\tcredentials = await this.pendingProxyResolve;\n\t\t\t} finally {\n\t\t\t\tthis.pendingProxyResolve = undefined;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.logService.trace('auth#onLogin (proxy) - pending proxy handling found');\n\n\t\t\tcredentials = await this.pendingProxyResolve;\n\t\t}\n\n\t\t// According to Electron docs, it is fine to call back without\n\t\t// username or password to signal that the authentication was handled\n\t\t// by us, even though without having credentials received:\n\t\t//\n\t\t// > If `callback` is called without a username or password, the authentication\n\t\t// > request will be cancelled and the authentication error will be returned to the\n\t\t// > page.\n\t\tcallback(credentials?.username, credentials?.password);\n\t}\n\n\tprivate async resolveProxyCredentials(authInfo: AuthInfo): Promise<Credentials | undefined> {\n\t\tthis.logService.trace('auth#resolveProxyCredentials (proxy) - enter');\n\n\t\ttry {\n\t\t\tconst credentials = await this.doResolveProxyCredentials(authInfo);\n\t\t\tif (credentials) {\n\t\t\t\tthis.logService.trace('auth#resolveProxyCredentials (proxy) - got credentials');\n\n\t\t\t\treturn credentials;\n\t\t\t} else {\n\t\t\t\tthis.logService.trace('auth#resolveProxyCredentials (proxy) - did not get credentials');\n\t\t\t}\n\t\t} finally {\n\t\t\tthis.logService.trace('auth#resolveProxyCredentials (proxy) - exit');\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate async doResolveProxyCredentials(authInfo: AuthInfo): Promise<Credentials | undefined> {\n\t\tthis.logService.trace('auth#doResolveProxyCredentials - enter', authInfo);\n\n\t\t// Compute a hash over the authentication info to be used\n\t\t// with the credentials store to return the right credentials\n\t\t// given the properties of the auth request\n\t\t// (see https://github.com/microsoft/vscode/issues/109497)\n\t\tconst authInfoHash = String(hash({ scheme: authInfo.scheme, host: authInfo.host, port: authInfo.port }));\n\n\t\t// Find any previously stored credentials\n\t\tlet storedUsername: string | undefined = undefined;\n\t\tlet storedPassword: string | undefined = undefined;\n\t\ttry {\n\t\t\tconst encryptedSerializedProxyCredentials = await this.nativeHostMainService.getPassword(undefined, this.PROXY_CREDENTIALS_SERVICE_KEY, authInfoHash);\n\t\t\tif (encryptedSerializedProxyCredentials) {\n\t\t\t\tconst credentials: Credentials = JSON.parse(await this.encryptionMainService.decrypt(encryptedSerializedProxyCredentials));\n\n\t\t\t\tstoredUsername = credentials.username;\n\t\t\t\tstoredPassword = credentials.password;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error); // handle errors by asking user for login via dialog\n\t\t}\n\n\t\t// Reply with stored credentials unless we used them already.\n\t\t// In that case we need to show a login dialog again because\n\t\t// they seem invalid.\n\t\tif (this.state !== ProxyAuthState.StoredCredentialsUsed && typeof storedUsername === 'string' && typeof storedPassword === 'string') {\n\t\t\tthis.logService.trace('auth#doResolveProxyCredentials (proxy) - exit - found stored credentials to use');\n\t\t\tthis.state = ProxyAuthState.StoredCredentialsUsed;\n\n\t\t\treturn { username: storedUsername, password: storedPassword };\n\t\t}\n\n\t\t// Find suitable window to show dialog: prefer to show it in the\n\t\t// active window because any other network request will wait on\n\t\t// the credentials and we want the user to present the dialog.\n\t\tconst window = this.windowsMainService.getFocusedWindow() || this.windowsMainService.getLastActiveWindow();\n\t\tif (!window) {\n\t\t\tthis.logService.trace('auth#doResolveProxyCredentials (proxy) - exit - no opened window found to show dialog in');\n\n\t\t\treturn undefined; // unexpected\n\t\t}\n\n\t\tthis.logService.trace(`auth#doResolveProxyCredentials (proxy) - asking window ${window.id} to handle proxy login`);\n\n\t\t// Open proxy dialog\n\t\tconst payload = {\n\t\t\tauthInfo,\n\t\t\tusername: this.sessionCredentials?.username ?? storedUsername, // prefer to show already used username (if any) over stored\n\t\t\tpassword: this.sessionCredentials?.password ?? storedPassword, // prefer to show already used password (if any) over stored\n\t\t\treplyChannel: `vscode:proxyAuthResponse:${generateUuid()}`\n\t\t};\n\t\twindow.sendWhenReady('vscode:openProxyAuthenticationDialog', CancellationToken.None, payload);\n\t\tthis.state = ProxyAuthState.LoginDialogShown;\n\n\t\t// Handle reply\n\t\tconst loginDialogCredentials = await new Promise<Credentials | undefined>(resolve => {\n\t\t\tconst proxyAuthResponseHandler = async (event: ElectronEvent, channel: string, reply: Credentials & { remember: boolean } | undefined /* canceled */) => {\n\t\t\t\tif (channel === payload.replyChannel) {\n\t\t\t\t\tthis.logService.trace(`auth#doResolveProxyCredentials - exit - received credentials from window ${window.id}`);\n\t\t\t\t\twindow.win?.webContents.off('ipc-message', proxyAuthResponseHandler);\n\n\t\t\t\t\t// We got credentials from the window\n\t\t\t\t\tif (reply) {\n\t\t\t\t\t\tconst credentials: Credentials = { username: reply.username, password: reply.password };\n\n\t\t\t\t\t\t// Update stored credentials based on `remember` flag\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tif (reply.remember) {\n\t\t\t\t\t\t\t\tconst encryptedSerializedCredentials = await this.encryptionMainService.encrypt(JSON.stringify(credentials));\n\t\t\t\t\t\t\t\tawait this.nativeHostMainService.setPassword(undefined, this.PROXY_CREDENTIALS_SERVICE_KEY, authInfoHash, encryptedSerializedCredentials);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tawait this.nativeHostMainService.deletePassword(undefined, this.PROXY_CREDENTIALS_SERVICE_KEY, authInfoHash);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tthis.logService.error(error); // handle gracefully\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tresolve({ username: credentials.username, password: credentials.password });\n\t\t\t\t\t}\n\n\t\t\t\t\t// We did not get any credentials from the window (e.g. cancelled)\n\t\t\t\t\telse {\n\t\t\t\t\t\tresolve(undefined);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\twindow.win?.webContents.on('ipc-message', proxyAuthResponseHandler);\n\t\t});\n\n\t\t// Remember credentials for the session in case\n\t\t// the credentials are wrong and we show the dialog\n\t\t// again\n\t\tthis.sessionCredentials = loginDialogCredentials;\n\n\t\treturn loginDialogCredentials;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { BrowserWindow, Display, ipcMain, IpcMainEvent, screen } from 'electron';\nimport { arch, release, type } from 'os';\nimport { mnemonicButtonLabel } from 'vs/base/common/labels';\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { FileAccess } from 'vs/base/common/network';\nimport { IProcessEnvironment, isMacintosh } from 'vs/base/common/platform';\nimport { listProcesses } from 'vs/base/node/ps';\nimport { localize } from 'vs/nls';\nimport { IDiagnosticsService, isRemoteDiagnosticError, PerformanceInfo } from 'vs/platform/diagnostics/common/diagnostics';\nimport { IDialogMainService } from 'vs/platform/dialogs/electron-main/dialogMainService';\nimport { IEnvironmentMainService } from 'vs/platform/environment/electron-main/environmentMainService';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ICommonIssueService, IssueReporterData, IssueReporterWindowConfiguration, ProcessExplorerData, ProcessExplorerWindowConfiguration } from 'vs/platform/issue/common/issue';\nimport { ILaunchMainService } from 'vs/platform/launch/electron-main/launchMainService';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { INativeHostMainService } from 'vs/platform/native/electron-main/nativeHostMainService';\nimport product from 'vs/platform/product/common/product';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IIPCObjectUrl, IProtocolMainService } from 'vs/platform/protocol/electron-main/protocol';\nimport { zoomLevelToZoomFactor } from 'vs/platform/windows/common/windows';\nimport { IWindowState } from 'vs/platform/windows/electron-main/windows';\n\nexport const IIssueMainService = createDecorator<IIssueMainService>('issueMainService');\n\ninterface IBrowserWindowOptions {\n\tbackgroundColor: string | undefined;\n\ttitle: string;\n\tzoomLevel: number;\n\talwaysOnTop: boolean;\n}\n\nexport interface IIssueMainService extends ICommonIssueService { }\n\nexport class IssueMainService implements ICommonIssueService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate static readonly DEFAULT_BACKGROUND_COLOR = '#1E1E1E';\n\n\tprivate issueReporterWindow: BrowserWindow | null = null;\n\tprivate issueReporterParentWindow: BrowserWindow | null = null;\n\n\tprivate processExplorerWindow: BrowserWindow | null = null;\n\tprivate processExplorerParentWindow: BrowserWindow | null = null;\n\n\tconstructor(\n\t\tprivate userEnv: IProcessEnvironment,\n\t\t@IEnvironmentMainService private readonly environmentMainService: IEnvironmentMainService,\n\t\t@ILaunchMainService private readonly launchMainService: ILaunchMainService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IDiagnosticsService private readonly diagnosticsService: IDiagnosticsService,\n\t\t@IDialogMainService private readonly dialogMainService: IDialogMainService,\n\t\t@INativeHostMainService private readonly nativeHostMainService: INativeHostMainService,\n\t\t@IProtocolMainService private readonly protocolMainService: IProtocolMainService,\n\t\t@IProductService private readonly productService: IProductService\n\t) {\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\t\tipcMain.on('vscode:issueSystemInfoRequest', async event => {\n\t\t\tconst [info, remoteData] = await Promise.all([this.launchMainService.getMainProcessInfo(), this.launchMainService.getRemoteDiagnostics({ includeProcesses: false, includeWorkspaceMetadata: false })]);\n\t\t\tconst msg = await this.diagnosticsService.getSystemInfo(info, remoteData);\n\n\t\t\tthis.safeSend(event, 'vscode:issueSystemInfoResponse', msg);\n\t\t});\n\n\t\tipcMain.on('vscode:listProcesses', async event => {\n\t\t\tconst processes = [];\n\n\t\t\ttry {\n\t\t\t\tconst mainPid = await this.launchMainService.getMainProcessId();\n\t\t\t\tprocesses.push({ name: localize('local', \"Local\"), rootProcess: await listProcesses(mainPid) });\n\n\t\t\t\tconst remoteDiagnostics = await this.launchMainService.getRemoteDiagnostics({ includeProcesses: true });\n\t\t\t\tremoteDiagnostics.forEach(data => {\n\t\t\t\t\tif (isRemoteDiagnosticError(data)) {\n\t\t\t\t\t\tprocesses.push({\n\t\t\t\t\t\t\tname: data.hostName,\n\t\t\t\t\t\t\trootProcess: data\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (data.processes) {\n\t\t\t\t\t\t\tprocesses.push({\n\t\t\t\t\t\t\t\tname: data.hostName,\n\t\t\t\t\t\t\t\trootProcess: data.processes\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\tthis.logService.error(`Listing processes failed: ${e}`);\n\t\t\t}\n\n\t\t\tthis.safeSend(event, 'vscode:listProcessesResponse', processes);\n\t\t});\n\n\t\tipcMain.on('vscode:issueReporterClipboard', async event => {\n\t\t\tconst messageOptions = {\n\t\t\t\ttitle: this.productService.nameLong,\n\t\t\t\tmessage: localize('issueReporterWriteToClipboard', \"There is too much data to send to GitHub directly. The data will be copied to the clipboard, please paste it into the GitHub issue page that is opened.\"),\n\t\t\t\ttype: 'warning',\n\t\t\t\tbuttons: [\n\t\t\t\t\tmnemonicButtonLabel(localize({ key: 'ok', comment: ['&& denotes a mnemonic'] }, \"&&OK\")),\n\t\t\t\t\tmnemonicButtonLabel(localize({ key: 'cancel', comment: ['&& denotes a mnemonic'] }, \"&&Cancel\")),\n\t\t\t\t],\n\t\t\t\tdefaultId: 0,\n\t\t\t\tcancelId: 1,\n\t\t\t\tnoLink: true\n\t\t\t};\n\n\t\t\tif (this.issueReporterWindow) {\n\t\t\t\tconst result = await this.dialogMainService.showMessageBox(messageOptions, this.issueReporterWindow);\n\t\t\t\tthis.safeSend(event, 'vscode:issueReporterClipboardResponse', result.response === 0);\n\t\t\t}\n\t\t});\n\n\t\tipcMain.on('vscode:issuePerformanceInfoRequest', async event => {\n\t\t\tconst performanceInfo = await this.getPerformanceInfo();\n\t\t\tthis.safeSend(event, 'vscode:issuePerformanceInfoResponse', performanceInfo);\n\t\t});\n\n\t\tipcMain.on('vscode:issueReporterConfirmClose', async () => {\n\t\t\tconst messageOptions = {\n\t\t\t\ttitle: this.productService.nameLong,\n\t\t\t\tmessage: localize('confirmCloseIssueReporter', \"Your input will not be saved. Are you sure you want to close this window?\"),\n\t\t\t\ttype: 'warning',\n\t\t\t\tbuttons: [\n\t\t\t\t\tmnemonicButtonLabel(localize({ key: 'yes', comment: ['&& denotes a mnemonic'] }, \"&&Yes\")),\n\t\t\t\t\tmnemonicButtonLabel(localize({ key: 'cancel', comment: ['&& denotes a mnemonic'] }, \"&&Cancel\")),\n\t\t\t\t],\n\t\t\t\tdefaultId: 0,\n\t\t\t\tcancelId: 1,\n\t\t\t\tnoLink: true\n\t\t\t};\n\n\t\t\tif (this.issueReporterWindow) {\n\t\t\t\tconst result = await this.dialogMainService.showMessageBox(messageOptions, this.issueReporterWindow);\n\t\t\t\tif (result.response === 0) {\n\t\t\t\t\tif (this.issueReporterWindow) {\n\t\t\t\t\t\tthis.issueReporterWindow.destroy();\n\t\t\t\t\t\tthis.issueReporterWindow = null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tipcMain.on('vscode:workbenchCommand', (_: unknown, commandInfo: { id: any; from: any; args: any; }) => {\n\t\t\tconst { id, from, args } = commandInfo;\n\n\t\t\tlet parentWindow: BrowserWindow | null;\n\t\t\tswitch (from) {\n\t\t\t\tcase 'issueReporter':\n\t\t\t\t\tparentWindow = this.issueReporterParentWindow;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'processExplorer':\n\t\t\t\t\tparentWindow = this.processExplorerParentWindow;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Unexpected command source: ${from}`);\n\t\t\t}\n\n\t\t\tif (parentWindow) {\n\t\t\t\tparentWindow.webContents.send('vscode:runAction', { id, from, args });\n\t\t\t}\n\t\t});\n\n\t\tipcMain.on('vscode:openExternal', (_: unknown, arg: string) => {\n\t\t\tthis.nativeHostMainService.openExternal(undefined, arg);\n\t\t});\n\n\t\tipcMain.on('vscode:closeIssueReporter', event => {\n\t\t\tif (this.issueReporterWindow) {\n\t\t\t\tthis.issueReporterWindow.close();\n\t\t\t}\n\t\t});\n\n\t\tipcMain.on('vscode:closeProcessExplorer', event => {\n\t\t\tif (this.processExplorerWindow) {\n\t\t\t\tthis.processExplorerWindow.close();\n\t\t\t}\n\t\t});\n\n\t\tipcMain.on('vscode:windowsInfoRequest', async event => {\n\t\t\tconst mainProcessInfo = await this.launchMainService.getMainProcessInfo();\n\t\t\tthis.safeSend(event, 'vscode:windowsInfoResponse', mainProcessInfo.windows);\n\t\t});\n\t}\n\n\tprivate safeSend(event: IpcMainEvent, channel: string, ...args: unknown[]): void {\n\t\tif (!event.sender.isDestroyed()) {\n\t\t\tevent.sender.send(channel, ...args);\n\t\t}\n\t}\n\n\tasync openReporter(data: IssueReporterData): Promise<void> {\n\t\tif (!this.issueReporterWindow) {\n\t\t\tthis.issueReporterParentWindow = BrowserWindow.getFocusedWindow();\n\t\t\tif (this.issueReporterParentWindow) {\n\t\t\t\tconst issueReporterDisposables = new DisposableStore();\n\n\t\t\t\tconst issueReporterWindowConfigUrl = issueReporterDisposables.add(this.protocolMainService.createIPCObjectUrl<IssueReporterWindowConfiguration>());\n\t\t\t\tconst position = this.getWindowPosition(this.issueReporterParentWindow, 700, 800);\n\n\t\t\t\tthis.issueReporterWindow = this.createBrowserWindow(position, issueReporterWindowConfigUrl, {\n\t\t\t\t\tbackgroundColor: data.styles.backgroundColor,\n\t\t\t\t\ttitle: localize('issueReporter', \"Issue Reporter\"),\n\t\t\t\t\tzoomLevel: data.zoomLevel,\n\t\t\t\t\talwaysOnTop: false\n\t\t\t\t}, 'issue-reporter');\n\n\t\t\t\t// Store into config object URL\n\t\t\t\tissueReporterWindowConfigUrl.update({\n\t\t\t\t\tappRoot: this.environmentMainService.appRoot,\n\t\t\t\t\twindowId: this.issueReporterWindow.id,\n\t\t\t\t\tuserEnv: this.userEnv,\n\t\t\t\t\tdata,\n\t\t\t\t\tdisableExtensions: !!this.environmentMainService.disableExtensions,\n\t\t\t\t\tos: {\n\t\t\t\t\t\ttype: type(),\n\t\t\t\t\t\tarch: arch(),\n\t\t\t\t\t\trelease: release(),\n\t\t\t\t\t},\n\t\t\t\t\tproduct\n\t\t\t\t});\n\n\t\t\t\tthis.issueReporterWindow.loadURL(\n\t\t\t\t\tFileAccess.asBrowserUri('vs/code/electron-sandbox/issue/issueReporter.html', require).toString(true)\n\t\t\t\t);\n\n\t\t\t\tthis.issueReporterWindow.on('close', () => {\n\t\t\t\t\tthis.issueReporterWindow = null;\n\n\t\t\t\t\tissueReporterDisposables.dispose();\n\t\t\t\t});\n\n\t\t\t\tthis.issueReporterParentWindow.on('closed', () => {\n\t\t\t\t\tif (this.issueReporterWindow) {\n\t\t\t\t\t\tthis.issueReporterWindow.close();\n\t\t\t\t\t\tthis.issueReporterWindow = null;\n\n\t\t\t\t\t\tissueReporterDisposables.dispose();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (this.issueReporterWindow) {\n\t\t\tthis.focusWindow(this.issueReporterWindow);\n\t\t}\n\t}\n\n\tasync openProcessExplorer(data: ProcessExplorerData): Promise<void> {\n\t\tif (!this.processExplorerWindow) {\n\t\t\tthis.processExplorerParentWindow = BrowserWindow.getFocusedWindow();\n\t\t\tif (this.processExplorerParentWindow) {\n\t\t\t\tconst processExplorerDisposables = new DisposableStore();\n\n\t\t\t\tconst processExplorerWindowConfigUrl = processExplorerDisposables.add(this.protocolMainService.createIPCObjectUrl<ProcessExplorerWindowConfiguration>());\n\t\t\t\tconst position = this.getWindowPosition(this.processExplorerParentWindow, 800, 500);\n\n\t\t\t\tthis.processExplorerWindow = this.createBrowserWindow(position, processExplorerWindowConfigUrl, {\n\t\t\t\t\tbackgroundColor: data.styles.backgroundColor,\n\t\t\t\t\ttitle: localize('processExplorer', \"Process Explorer\"),\n\t\t\t\t\tzoomLevel: data.zoomLevel,\n\t\t\t\t\talwaysOnTop: true\n\t\t\t\t}, 'process-explorer');\n\n\t\t\t\t// Store into config object URL\n\t\t\t\tprocessExplorerWindowConfigUrl.update({\n\t\t\t\t\tappRoot: this.environmentMainService.appRoot,\n\t\t\t\t\twindowId: this.processExplorerWindow.id,\n\t\t\t\t\tuserEnv: this.userEnv,\n\t\t\t\t\tdata,\n\t\t\t\t\tproduct\n\t\t\t\t});\n\n\t\t\t\tthis.processExplorerWindow.loadURL(\n\t\t\t\t\tFileAccess.asBrowserUri('vs/code/electron-sandbox/processExplorer/processExplorer.html', require).toString(true)\n\t\t\t\t);\n\n\t\t\t\tthis.processExplorerWindow.on('close', () => {\n\t\t\t\t\tthis.processExplorerWindow = null;\n\t\t\t\t\tprocessExplorerDisposables.dispose();\n\t\t\t\t});\n\n\t\t\t\tthis.processExplorerParentWindow.on('close', () => {\n\t\t\t\t\tif (this.processExplorerWindow) {\n\t\t\t\t\t\tthis.processExplorerWindow.close();\n\t\t\t\t\t\tthis.processExplorerWindow = null;\n\n\t\t\t\t\t\tprocessExplorerDisposables.dispose();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (this.processExplorerWindow) {\n\t\t\tthis.focusWindow(this.processExplorerWindow);\n\t\t}\n\t}\n\n\tprivate focusWindow(window: BrowserWindow): void {\n\t\tif (window.isMinimized()) {\n\t\t\twindow.restore();\n\t\t}\n\n\t\twindow.focus();\n\t}\n\n\tprivate createBrowserWindow<T>(position: IWindowState, ipcObjectUrl: IIPCObjectUrl<T>, options: IBrowserWindowOptions, windowKind: string): BrowserWindow {\n\t\tconst window = new BrowserWindow({\n\t\t\tfullscreen: false,\n\t\t\tskipTaskbar: true,\n\t\t\tresizable: true,\n\t\t\twidth: position.width,\n\t\t\theight: position.height,\n\t\t\tminWidth: 300,\n\t\t\tminHeight: 200,\n\t\t\tx: position.x,\n\t\t\ty: position.y,\n\t\t\ttitle: options.title,\n\t\t\tbackgroundColor: options.backgroundColor || IssueMainService.DEFAULT_BACKGROUND_COLOR,\n\t\t\twebPreferences: {\n\t\t\t\tpreload: FileAccess.asFileUri('vs/base/parts/sandbox/electron-browser/preload.js', require).fsPath,\n\t\t\t\tadditionalArguments: [`--vscode-window-config=${ipcObjectUrl.resource.toString()}`, `--vscode-window-kind=${windowKind}`],\n\t\t\t\tv8CacheOptions: this.environmentMainService.useCodeCache ? 'bypassHeatCheck' : 'none',\n\t\t\t\tenableWebSQL: false,\n\t\t\t\tspellcheck: false,\n\t\t\t\tnativeWindowOpen: true,\n\t\t\t\tzoomFactor: zoomLevelToZoomFactor(options.zoomLevel),\n\t\t\t\tsandbox: true,\n\t\t\t\tcontextIsolation: true,\n\t\t\t},\n\t\t\talwaysOnTop: options.alwaysOnTop\n\t\t});\n\n\t\twindow.setMenuBarVisibility(false);\n\n\t\treturn window;\n\t}\n\n\tasync getSystemStatus(): Promise<string> {\n\t\tconst [info, remoteData] = await Promise.all([this.launchMainService.getMainProcessInfo(), this.launchMainService.getRemoteDiagnostics({ includeProcesses: false, includeWorkspaceMetadata: false })]);\n\n\t\treturn this.diagnosticsService.getDiagnostics(info, remoteData);\n\t}\n\n\tprivate getWindowPosition(parentWindow: BrowserWindow, defaultWidth: number, defaultHeight: number): IWindowState {\n\n\t\t// We want the new window to open on the same display that the parent is in\n\t\tlet displayToUse: Display | undefined;\n\t\tconst displays = screen.getAllDisplays();\n\n\t\t// Single Display\n\t\tif (displays.length === 1) {\n\t\t\tdisplayToUse = displays[0];\n\t\t}\n\n\t\t// Multi Display\n\t\telse {\n\n\t\t\t// on mac there is 1 menu per window so we need to use the monitor where the cursor currently is\n\t\t\tif (isMacintosh) {\n\t\t\t\tconst cursorPoint = screen.getCursorScreenPoint();\n\t\t\t\tdisplayToUse = screen.getDisplayNearestPoint(cursorPoint);\n\t\t\t}\n\n\t\t\t// if we have a last active window, use that display for the new window\n\t\t\tif (!displayToUse && parentWindow) {\n\t\t\t\tdisplayToUse = screen.getDisplayMatching(parentWindow.getBounds());\n\t\t\t}\n\n\t\t\t// fallback to primary display or first display\n\t\t\tif (!displayToUse) {\n\t\t\t\tdisplayToUse = screen.getPrimaryDisplay() || displays[0];\n\t\t\t}\n\t\t}\n\n\t\tconst state: IWindowState = {\n\t\t\twidth: defaultWidth,\n\t\t\theight: defaultHeight\n\t\t};\n\n\t\tconst displayBounds = displayToUse.bounds;\n\t\tstate.x = displayBounds.x + (displayBounds.width / 2) - (state.width! / 2);\n\t\tstate.y = displayBounds.y + (displayBounds.height / 2) - (state.height! / 2);\n\n\t\tif (displayBounds.width > 0 && displayBounds.height > 0 /* Linux X11 sessions sometimes report wrong display bounds */) {\n\t\t\tif (state.x < displayBounds.x) {\n\t\t\t\tstate.x = displayBounds.x; // prevent window from falling out of the screen to the left\n\t\t\t}\n\n\t\t\tif (state.y < displayBounds.y) {\n\t\t\t\tstate.y = displayBounds.y; // prevent window from falling out of the screen to the top\n\t\t\t}\n\n\t\t\tif (state.x > (displayBounds.x + displayBounds.width)) {\n\t\t\t\tstate.x = displayBounds.x; // prevent window from falling out of the screen to the right\n\t\t\t}\n\n\t\t\tif (state.y > (displayBounds.y + displayBounds.height)) {\n\t\t\t\tstate.y = displayBounds.y; // prevent window from falling out of the screen to the bottom\n\t\t\t}\n\n\t\t\tif (state.width! > displayBounds.width) {\n\t\t\t\tstate.width = displayBounds.width; // prevent window from exceeding display bounds width\n\t\t\t}\n\n\t\t\tif (state.height! > displayBounds.height) {\n\t\t\t\tstate.height = displayBounds.height; // prevent window from exceeding display bounds height\n\t\t\t}\n\t\t}\n\n\t\treturn state;\n\t}\n\n\tprivate async getPerformanceInfo(): Promise<PerformanceInfo> {\n\t\ttry {\n\t\t\tconst [info, remoteData] = await Promise.all([this.launchMainService.getMainProcessInfo(), this.launchMainService.getRemoteDiagnostics({ includeProcesses: true, includeWorkspaceMetadata: true })]);\n\t\t\treturn await this.diagnosticsService.getPerformanceInfo(info, remoteData);\n\t\t} catch (error) {\n\t\t\tthis.logService.warn('issueService#getPerformanceInfo ', error.message);\n\n\t\t\tthrow error;\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IEnvironmentMainService } from 'vs/platform/environment/electron-main/environmentMainService';\nimport { ILifecycleMainService } from 'vs/platform/lifecycle/electron-main/lifecycleMainService';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { INativeHostMainService } from 'vs/platform/native/electron-main/nativeHostMainService';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { asJson, IRequestService } from 'vs/platform/request/common/request';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { AvailableForDownload, IUpdate, State, UpdateType } from 'vs/platform/update/common/update';\nimport { AbstractUpdateService, createUpdateURL, UpdateNotAvailableClassification } from 'vs/platform/update/electron-main/abstractUpdateService';\n\nexport class LinuxUpdateService extends AbstractUpdateService {\n\n\tconstructor(\n\t\t@ILifecycleMainService lifecycleMainService: ILifecycleMainService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IEnvironmentMainService environmentMainService: IEnvironmentMainService,\n\t\t@IRequestService requestService: IRequestService,\n\t\t@ILogService logService: ILogService,\n\t\t@INativeHostMainService private readonly nativeHostMainService: INativeHostMainService,\n\t\t@IProductService productService: IProductService\n\t) {\n\t\tsuper(lifecycleMainService, configurationService, environmentMainService, requestService, logService, productService);\n\t}\n\n\tprotected buildUpdateFeedUrl(quality: string): string {\n\t\treturn createUpdateURL(`linux-${process.arch}`, quality, this.productService);\n\t}\n\n\tprotected doCheckForUpdates(context: any): void {\n\t\tif (!this.url) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setState(State.CheckingForUpdates(context));\n\t\tthis.requestService.request({ url: this.url }, CancellationToken.None)\n\t\t\t.then<IUpdate | null>(asJson)\n\t\t\t.then(update => {\n\t\t\t\tif (!update || !update.url || !update.version || !update.productVersion) {\n\t\t\t\t\tthis.telemetryService.publicLog2<{ explicit: boolean }, UpdateNotAvailableClassification>('update:notAvailable', { explicit: !!context });\n\n\t\t\t\t\tthis.setState(State.Idle(UpdateType.Archive));\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState(State.AvailableForDownload(update));\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(undefined, err => {\n\t\t\t\tthis.logService.error(err);\n\t\t\t\tthis.telemetryService.publicLog2<{ explicit: boolean }, UpdateNotAvailableClassification>('update:notAvailable', { explicit: !!context });\n\t\t\t\t// only show message when explicitly checking for updates\n\t\t\t\tconst message: string | undefined = !!context ? (err.message || err) : undefined;\n\t\t\t\tthis.setState(State.Idle(UpdateType.Archive, message));\n\t\t\t});\n\t}\n\n\tprotected override async doDownloadUpdate(state: AvailableForDownload): Promise<void> {\n\t\t// Use the download URL if available as we don't currently detect the package type that was\n\t\t// installed and the website download page is more useful than the tarball generally.\n\t\tif (this.productService.downloadUrl && this.productService.downloadUrl.length > 0) {\n\t\t\tthis.nativeHostMainService.openExternal(undefined, this.productService.downloadUrl);\n\t\t} else if (state.update.url) {\n\t\t\tthis.nativeHostMainService.openExternal(undefined, state.update.url);\n\t\t}\n\n\t\tthis.setState(State.Idle(UpdateType.Archive));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { spawn } from 'child_process';\nimport * as fs from 'fs';\nimport { tmpdir } from 'os';\nimport { timeout } from 'vs/base/common/async';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { memoize } from 'vs/base/common/decorators';\nimport * as path from 'vs/base/common/path';\nimport { URI } from 'vs/base/common/uri';\nimport { checksum } from 'vs/base/node/crypto';\nimport * as pfs from 'vs/base/node/pfs';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IEnvironmentMainService } from 'vs/platform/environment/electron-main/environmentMainService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { ILifecycleMainService } from 'vs/platform/lifecycle/electron-main/lifecycleMainService';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { INativeHostMainService } from 'vs/platform/native/electron-main/nativeHostMainService';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { asJson, IRequestService } from 'vs/platform/request/common/request';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { AvailableForDownload, IUpdate, State, StateType, UpdateType } from 'vs/platform/update/common/update';\nimport { AbstractUpdateService, createUpdateURL, UpdateNotAvailableClassification } from 'vs/platform/update/electron-main/abstractUpdateService';\n\nasync function pollUntil(fn: () => boolean, millis = 1000): Promise<void> {\n\twhile (!fn()) {\n\t\tawait timeout(millis);\n\t}\n}\n\ninterface IAvailableUpdate {\n\tpackagePath: string;\n\tupdateFilePath?: string;\n}\n\nlet _updateType: UpdateType | undefined = undefined;\nfunction getUpdateType(): UpdateType {\n\tif (typeof _updateType === 'undefined') {\n\t\t_updateType = fs.existsSync(path.join(path.dirname(process.execPath), 'unins000.exe'))\n\t\t\t? UpdateType.Setup\n\t\t\t: UpdateType.Archive;\n\t}\n\n\treturn _updateType;\n}\n\nexport class Win32UpdateService extends AbstractUpdateService {\n\n\tprivate availableUpdate: IAvailableUpdate | undefined;\n\n\t@memoize\n\tget cachePath(): Promise<string> {\n\t\tconst result = path.join(tmpdir(), `vscode-update-${this.productService.target}-${process.arch}`);\n\t\treturn pfs.Promises.mkdir(result, { recursive: true }).then(() => result);\n\t}\n\n\tconstructor(\n\t\t@ILifecycleMainService lifecycleMainService: ILifecycleMainService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IEnvironmentMainService environmentMainService: IEnvironmentMainService,\n\t\t@IRequestService requestService: IRequestService,\n\t\t@ILogService logService: ILogService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@INativeHostMainService private readonly nativeHostMainService: INativeHostMainService,\n\t\t@IProductService productService: IProductService\n\t) {\n\t\tsuper(lifecycleMainService, configurationService, environmentMainService, requestService, logService, productService);\n\t}\n\n\toverride initialize(): void {\n\t\tsuper.initialize();\n\n\t\tif (getUpdateType() === UpdateType.Setup) {\n\t\t\t/* __GDPR__\n\t\t\t\t\"update:win32SetupTarget\" : {\n\t\t\t\t\t\"target\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t\t}\n\t\t\t*/\n\t\t\t/* __GDPR__\n\t\t\t\t\"update:win<NUMBER>SetupTarget\" : {\n\t\t\t\t\t\"target\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t\t}\n\t\t\t*/\n\t\t\tthis.telemetryService.publicLog('update:win32SetupTarget', { target: this.productService.target });\n\t\t}\n\t}\n\n\tprotected buildUpdateFeedUrl(quality: string): string | undefined {\n\t\tlet platform = 'win32';\n\n\t\tif (process.arch !== 'ia32') {\n\t\t\tplatform += `-${process.arch}`;\n\t\t}\n\n\t\tif (getUpdateType() === UpdateType.Archive) {\n\t\t\tplatform += '-archive';\n\t\t} else if (this.productService.target === 'user') {\n\t\t\tplatform += '-user';\n\t\t}\n\n\t\treturn createUpdateURL(platform, quality, this.productService);\n\t}\n\n\tprotected doCheckForUpdates(context: any): void {\n\t\tif (!this.url) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setState(State.CheckingForUpdates(context));\n\n\t\tthis.requestService.request({ url: this.url }, CancellationToken.None)\n\t\t\t.then<IUpdate | null>(asJson)\n\t\t\t.then(update => {\n\t\t\t\tconst updateType = getUpdateType();\n\n\t\t\t\tif (!update || !update.url || !update.version || !update.productVersion) {\n\t\t\t\t\tthis.telemetryService.publicLog2<{ explicit: boolean }, UpdateNotAvailableClassification>('update:notAvailable', { explicit: !!context });\n\n\t\t\t\t\tthis.setState(State.Idle(updateType));\n\t\t\t\t\treturn Promise.resolve(null);\n\t\t\t\t}\n\n\t\t\t\tif (updateType === UpdateType.Archive) {\n\t\t\t\t\tthis.setState(State.AvailableForDownload(update));\n\t\t\t\t\treturn Promise.resolve(null);\n\t\t\t\t}\n\n\t\t\t\tthis.setState(State.Downloading(update));\n\n\t\t\t\treturn this.cleanup(update.version).then(() => {\n\t\t\t\t\treturn this.getUpdatePackagePath(update.version).then(updatePackagePath => {\n\t\t\t\t\t\treturn pfs.Promises.exists(updatePackagePath).then(exists => {\n\t\t\t\t\t\t\tif (exists) {\n\t\t\t\t\t\t\t\treturn Promise.resolve(updatePackagePath);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst url = update.url;\n\t\t\t\t\t\t\tconst hash = update.hash;\n\t\t\t\t\t\t\tconst downloadPath = `${updatePackagePath}.tmp`;\n\n\t\t\t\t\t\t\treturn this.requestService.request({ url }, CancellationToken.None)\n\t\t\t\t\t\t\t\t.then(context => this.fileService.writeFile(URI.file(downloadPath), context.stream))\n\t\t\t\t\t\t\t\t.then(hash ? () => checksum(downloadPath, update.hash) : () => undefined)\n\t\t\t\t\t\t\t\t.then(() => pfs.Promises.rename(downloadPath, updatePackagePath))\n\t\t\t\t\t\t\t\t.then(() => updatePackagePath);\n\t\t\t\t\t\t});\n\t\t\t\t\t}).then(packagePath => {\n\t\t\t\t\t\tconst fastUpdatesEnabled = this.configurationService.getValue('update.enableWindowsBackgroundUpdates');\n\n\t\t\t\t\t\tthis.availableUpdate = { packagePath };\n\n\t\t\t\t\t\tif (fastUpdatesEnabled && update.supportsFastUpdate) {\n\t\t\t\t\t\t\tif (this.productService.target === 'user') {\n\t\t\t\t\t\t\t\tthis.doApplyUpdate();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setState(State.Downloaded(update));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.setState(State.Ready(update));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t})\n\t\t\t.then(undefined, err => {\n\t\t\t\tthis.logService.error(err);\n\t\t\t\tthis.telemetryService.publicLog2<{ explicit: boolean }, UpdateNotAvailableClassification>('update:notAvailable', { explicit: !!context });\n\n\t\t\t\t// only show message when explicitly checking for updates\n\t\t\t\tconst message: string | undefined = !!context ? (err.message || err) : undefined;\n\t\t\t\tthis.setState(State.Idle(getUpdateType(), message));\n\t\t\t});\n\t}\n\n\tprotected override async doDownloadUpdate(state: AvailableForDownload): Promise<void> {\n\t\tif (state.update.url) {\n\t\t\tthis.nativeHostMainService.openExternal(undefined, state.update.url);\n\t\t}\n\t\tthis.setState(State.Idle(getUpdateType()));\n\t}\n\n\tprivate async getUpdatePackagePath(version: string): Promise<string> {\n\t\tconst cachePath = await this.cachePath;\n\t\treturn path.join(cachePath, `CodeSetup-${this.productService.quality}-${version}.exe`);\n\t}\n\n\tprivate async cleanup(exceptVersion: string | null = null): Promise<any> {\n\t\tconst filter = exceptVersion ? (one: string) => !(new RegExp(`${this.productService.quality}-${exceptVersion}\\\\.exe$`).test(one)) : () => true;\n\n\t\tconst cachePath = await this.cachePath;\n\t\tconst versions = await pfs.Promises.readdir(cachePath);\n\n\t\tconst promises = versions.filter(filter).map(async one => {\n\t\t\ttry {\n\t\t\t\tawait pfs.Promises.unlink(path.join(cachePath, one));\n\t\t\t} catch (err) {\n\t\t\t\t// ignore\n\t\t\t}\n\t\t});\n\n\t\tawait Promise.all(promises);\n\t}\n\n\tprotected override async doApplyUpdate(): Promise<void> {\n\t\tif (this.state.type !== StateType.Downloaded && this.state.type !== StateType.Downloading) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tif (!this.availableUpdate) {\n\t\t\treturn Promise.resolve(undefined);\n\t\t}\n\n\t\tconst update = this.state.update;\n\t\tthis.setState(State.Updating(update));\n\n\t\tconst cachePath = await this.cachePath;\n\n\t\tthis.availableUpdate.updateFilePath = path.join(cachePath, `CodeSetup-${this.productService.quality}-${update.version}.flag`);\n\n\t\tawait pfs.Promises.writeFile(this.availableUpdate.updateFilePath, 'flag');\n\t\tconst child = spawn(this.availableUpdate.packagePath, ['/verysilent', `/update=\"${this.availableUpdate.updateFilePath}\"`, '/nocloseapplications', '/mergetasks=runcode,!desktopicon,!quicklaunchicon'], {\n\t\t\tdetached: true,\n\t\t\tstdio: ['ignore', 'ignore', 'ignore'],\n\t\t\twindowsVerbatimArguments: true\n\t\t});\n\n\t\tchild.once('exit', () => {\n\t\t\tthis.availableUpdate = undefined;\n\t\t\tthis.setState(State.Idle(getUpdateType()));\n\t\t});\n\n\t\tconst readyMutexName = `${this.productService.win32MutexName}-ready`;\n\t\tconst mutex = await import('windows-mutex');\n\n\t\t// poll for mutex-ready\n\t\tpollUntil(() => mutex.isActive(readyMutexName))\n\t\t\t.then(() => this.setState(State.Ready(update)));\n\t}\n\n\tprotected override doQuitAndInstall(): void {\n\t\tif (this.state.type !== StateType.Ready || !this.availableUpdate) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.logService.trace('update#quitAndInstall(): running raw#quitAndInstall()');\n\n\t\tif (this.state.update.supportsFastUpdate && this.availableUpdate.updateFilePath) {\n\t\t\tfs.unlinkSync(this.availableUpdate.updateFilePath);\n\t\t} else {\n\t\t\tspawn(this.availableUpdate.packagePath, ['/silent', '/mergetasks=runcode,!desktopicon,!quicklaunchicon'], {\n\t\t\t\tdetached: true,\n\t\t\t\tstdio: ['ignore', 'ignore', 'ignore']\n\t\t\t});\n\t\t}\n\t}\n\n\tprotected override getUpdateType(): UpdateType {\n\t\treturn getUpdateType();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { app, BrowserWindow, BrowserWindowConstructorOptions, Display, Event, nativeImage, NativeImage, Rectangle, screen, SegmentedControlSegment, systemPreferences, TouchBar, TouchBarSegmentedControl, WebFrameMain } from 'electron';\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { Emitter } from 'vs/base/common/event';\nimport { mnemonicButtonLabel } from 'vs/base/common/labels';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { FileAccess, Schemas } from 'vs/base/common/network';\nimport { join } from 'vs/base/common/path';\nimport { getMarks, mark } from 'vs/base/common/performance';\nimport { isLinux, isMacintosh, isWindows } from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { ISerializableCommandAction } from 'vs/platform/actions/common/actions';\nimport { IBackupMainService } from 'vs/platform/backup/electron-main/backup';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IDialogMainService } from 'vs/platform/dialogs/electron-main/dialogMainService';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { IEnvironmentMainService } from 'vs/platform/environment/electron-main/environmentMainService';\nimport { isLaunchedFromCli } from 'vs/platform/environment/node/argvHelper';\nimport { resolveMarketplaceHeaders } from 'vs/platform/extensionManagement/common/extensionGalleryService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { ILifecycleMainService } from 'vs/platform/lifecycle/electron-main/lifecycleMainService';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IProtocolMainService } from 'vs/platform/protocol/electron-main/protocol';\nimport { IStorageMainService } from 'vs/platform/storage/electron-main/storageMainService';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { ThemeIcon } from 'vs/platform/theme/common/themeService';\nimport { IThemeMainService } from 'vs/platform/theme/electron-main/themeMainService';\nimport { getMenuBarVisibility, getTitleBarStyle, IFolderToOpen, INativeWindowConfiguration, IWindowSettings, IWorkspaceToOpen, MenuBarVisibility, WindowMinimumSize, zoomLevelToZoomFactor } from 'vs/platform/windows/common/windows';\nimport { defaultWindowState, ICodeWindow, ILoadEvent, IWindowsMainService, IWindowState, LoadReason, OpenContext, WindowError, WindowMode } from 'vs/platform/windows/electron-main/windows';\nimport { ISingleFolderWorkspaceIdentifier, isSingleFolderWorkspaceIdentifier, isWorkspaceIdentifier, IWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\nimport { IWorkspacesManagementMainService } from 'vs/platform/workspaces/electron-main/workspacesManagementMainService';\n\nexport interface IWindowCreationOptions {\n\tstate: IWindowState;\n\textensionDevelopmentPath?: string[];\n\tisExtensionTestHost?: boolean;\n}\n\ninterface ITouchBarSegment extends SegmentedControlSegment {\n\tid: string;\n}\n\ninterface ILoadOptions {\n\tisReload?: boolean;\n\tdisableExtensions?: boolean;\n}\n\nconst enum ReadyState {\n\n\t/**\n\t * This window has not loaded any HTML yet\n\t */\n\tNONE,\n\n\t/**\n\t * This window is loading HTML\n\t */\n\tLOADING,\n\n\t/**\n\t * This window is navigating to another HTML\n\t */\n\tNAVIGATING,\n\n\t/**\n\t * This window is done loading HTML\n\t */\n\tREADY\n}\n\nexport class CodeWindow extends Disposable implements ICodeWindow {\n\n\t//#region Events\n\n\tprivate readonly _onWillLoad = this._register(new Emitter<ILoadEvent>());\n\treadonly onWillLoad = this._onWillLoad.event;\n\n\tprivate readonly _onDidSignalReady = this._register(new Emitter<void>());\n\treadonly onDidSignalReady = this._onDidSignalReady.event;\n\n\tprivate readonly _onDidClose = this._register(new Emitter<void>());\n\treadonly onDidClose = this._onDidClose.event;\n\n\tprivate readonly _onDidDestroy = this._register(new Emitter<void>());\n\treadonly onDidDestroy = this._onDidDestroy.event;\n\n\t//#endregion\n\n\n\t//#region Properties\n\n\tprivate _id: number;\n\tget id(): number { return this._id; }\n\n\tprivate _win: BrowserWindow;\n\tget win(): BrowserWindow | null { return this._win; }\n\n\tprivate _lastFocusTime = -1;\n\tget lastFocusTime(): number { return this._lastFocusTime; }\n\n\tget backupPath(): string | undefined { return this.currentConfig?.backupPath; }\n\n\tget openedWorkspace(): IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | undefined { return this.currentConfig?.workspace; }\n\n\tget remoteAuthority(): string | undefined { return this.currentConfig?.remoteAuthority; }\n\n\tprivate currentConfig: INativeWindowConfiguration | undefined;\n\tget config(): INativeWindowConfiguration | undefined { return this.currentConfig; }\n\n\tprivate hiddenTitleBarStyle: boolean | undefined;\n\tget hasHiddenTitleBarStyle(): boolean { return !!this.hiddenTitleBarStyle; }\n\n\tget isExtensionDevelopmentHost(): boolean { return !!(this.currentConfig?.extensionDevelopmentPath); }\n\n\tget isExtensionTestHost(): boolean { return !!(this.currentConfig?.extensionTestsPath); }\n\n\tget isExtensionDevelopmentTestFromCli(): boolean { return this.isExtensionDevelopmentHost && this.isExtensionTestHost && !this.currentConfig?.debugId; }\n\n\t//#endregion\n\n\n\tprivate readonly windowState: IWindowState;\n\tprivate currentMenuBarVisibility: MenuBarVisibility | undefined;\n\n\tprivate representedFilename: string | undefined;\n\tprivate documentEdited: boolean | undefined;\n\n\tprivate readonly whenReadyCallbacks: { (window: ICodeWindow): void }[] = [];\n\n\tprivate readonly touchBarGroups: TouchBarSegmentedControl[] = [];\n\n\tprivate marketplaceHeadersPromise: Promise<object>;\n\tprivate currentHttpProxy: string | undefined = undefined;\n\tprivate currentNoProxy: string | undefined = undefined;\n\n\tprivate readonly configObjectUrl = this._register(this.protocolMainService.createIPCObjectUrl<INativeWindowConfiguration>());\n\tprivate pendingLoadConfig: INativeWindowConfiguration | undefined;\n\tprivate wasLoaded = false;\n\n\tconstructor(\n\t\tconfig: IWindowCreationOptions,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IEnvironmentMainService private readonly environmentMainService: IEnvironmentMainService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IStorageMainService storageMainService: IStorageMainService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IThemeMainService private readonly themeMainService: IThemeMainService,\n\t\t@IWorkspacesManagementMainService private readonly workspacesManagementMainService: IWorkspacesManagementMainService,\n\t\t@IBackupMainService private readonly backupMainService: IBackupMainService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IDialogMainService private readonly dialogMainService: IDialogMainService,\n\t\t@ILifecycleMainService private readonly lifecycleMainService: ILifecycleMainService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IProtocolMainService private readonly protocolMainService: IProtocolMainService,\n\t\t@IWindowsMainService private readonly windowsMainService: IWindowsMainService\n\t) {\n\t\tsuper();\n\n\t\t//#region create browser window\n\t\t{\n\t\t\t// Load window state\n\t\t\tconst [state, hasMultipleDisplays] = this.restoreWindowState(config.state);\n\t\t\tthis.windowState = state;\n\t\t\tthis.logService.trace('window#ctor: using window state', state);\n\n\t\t\t// in case we are maximized or fullscreen, only show later after the call to maximize/fullscreen (see below)\n\t\t\tconst isFullscreenOrMaximized = (this.windowState.mode === WindowMode.Maximized || this.windowState.mode === WindowMode.Fullscreen);\n\n\t\t\tconst windowSettings = this.configurationService.getValue<IWindowSettings | undefined>('window');\n\n\t\t\tconst options: BrowserWindowConstructorOptions = {\n\t\t\t\twidth: this.windowState.width,\n\t\t\t\theight: this.windowState.height,\n\t\t\t\tx: this.windowState.x,\n\t\t\t\ty: this.windowState.y,\n\t\t\t\tbackgroundColor: this.themeMainService.getBackgroundColor(),\n\t\t\t\tminWidth: WindowMinimumSize.WIDTH,\n\t\t\t\tminHeight: WindowMinimumSize.HEIGHT,\n\t\t\t\tshow: !isFullscreenOrMaximized,\n\t\t\t\ttitle: this.productService.nameLong,\n\t\t\t\twebPreferences: {\n\t\t\t\t\tpreload: FileAccess.asFileUri('vs/base/parts/sandbox/electron-browser/preload.js', require).fsPath,\n\t\t\t\t\tadditionalArguments: [`--vscode-window-config=${this.configObjectUrl.resource.toString()}`],\n\t\t\t\t\tv8CacheOptions: this.environmentMainService.useCodeCache ? 'bypassHeatCheck' : 'none',\n\t\t\t\t\tenableWebSQL: false,\n\t\t\t\t\tspellcheck: false,\n\t\t\t\t\tnativeWindowOpen: true,\n\t\t\t\t\tzoomFactor: zoomLevelToZoomFactor(windowSettings?.zoomLevel),\n\t\t\t\t\t...this.environmentMainService.sandbox ?\n\n\t\t\t\t\t\t// Sandbox\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tsandbox: true\n\t\t\t\t\t\t} :\n\n\t\t\t\t\t\t// No Sandbox\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tnodeIntegration: true,\n\t\t\t\t\t\t\tcontextIsolation: false\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Apply icon to window\n\t\t\t// Linux: always\n\t\t\t// Windows: only when running out of sources, otherwise an icon is set by us on the executable\n\t\t\tif (isLinux) {\n\t\t\t\toptions.icon = join(this.environmentMainService.appRoot, 'resources/linux/code.png');\n\t\t\t} else if (isWindows && !this.environmentMainService.isBuilt) {\n\t\t\t\toptions.icon = join(this.environmentMainService.appRoot, 'resources/win32/code_150x150.png');\n\t\t\t}\n\n\t\t\tif (isMacintosh && !this.useNativeFullScreen()) {\n\t\t\t\toptions.fullscreenable = false; // enables simple fullscreen mode\n\t\t\t}\n\n\t\t\tif (isMacintosh) {\n\t\t\t\toptions.acceptFirstMouse = true; // enabled by default\n\n\t\t\t\tif (windowSettings?.clickThroughInactive === false) {\n\t\t\t\t\toptions.acceptFirstMouse = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst useNativeTabs = isMacintosh && windowSettings?.nativeTabs === true;\n\t\t\tif (useNativeTabs) {\n\t\t\t\toptions.tabbingIdentifier = this.productService.nameShort; // this opts in to sierra tabs\n\t\t\t}\n\n\t\t\tconst useCustomTitleStyle = getTitleBarStyle(this.configurationService) === 'custom';\n\t\t\tif (useCustomTitleStyle) {\n\t\t\t\toptions.titleBarStyle = 'hidden';\n\t\t\t\tthis.hiddenTitleBarStyle = true;\n\t\t\t\tif (!isMacintosh) {\n\t\t\t\t\toptions.frame = false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Create the browser window\n\t\t\tmark('code/willCreateCodeBrowserWindow');\n\t\t\tthis._win = new BrowserWindow(options);\n\t\t\tmark('code/didCreateCodeBrowserWindow');\n\n\t\t\tthis._id = this._win.id;\n\n\t\t\t// Open devtools if instructed from command line args\n\t\t\tif (this.environmentMainService.args['open-devtools'] === true) {\n\t\t\t\tthis._win.webContents.openDevTools();\n\t\t\t}\n\n\t\t\tif (isMacintosh && useCustomTitleStyle) {\n\t\t\t\tthis._win.setSheetOffset(22); // offset dialogs by the height of the custom title bar if we have any\n\t\t\t}\n\n\t\t\t// TODO@electron (Electron 4 regression): when running on multiple displays where the target display\n\t\t\t// to open the window has a larger resolution than the primary display, the window will not size\n\t\t\t// correctly unless we set the bounds again (https://github.com/microsoft/vscode/issues/74872)\n\t\t\t//\n\t\t\t// However, when running with native tabs with multiple windows we cannot use this workaround\n\t\t\t// because there is a potential that the new window will be added as native tab instead of being\n\t\t\t// a window on its own. In that case calling setBounds() would cause https://github.com/microsoft/vscode/issues/75830\n\t\t\tif (isMacintosh && hasMultipleDisplays && (!useNativeTabs || BrowserWindow.getAllWindows().length === 1)) {\n\t\t\t\tif ([this.windowState.width, this.windowState.height, this.windowState.x, this.windowState.y].every(value => typeof value === 'number')) {\n\t\t\t\t\tconst ensuredWindowState = this.windowState as Required<IWindowState>;\n\t\t\t\t\tthis._win.setBounds({\n\t\t\t\t\t\twidth: ensuredWindowState.width,\n\t\t\t\t\t\theight: ensuredWindowState.height,\n\t\t\t\t\t\tx: ensuredWindowState.x,\n\t\t\t\t\t\ty: ensuredWindowState.y\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isFullscreenOrMaximized) {\n\t\t\t\tmark('code/willMaximizeCodeWindow');\n\t\t\t\tthis._win.maximize();\n\n\t\t\t\tif (this.windowState.mode === WindowMode.Fullscreen) {\n\t\t\t\t\tthis.setFullScreen(true);\n\t\t\t\t}\n\n\t\t\t\tif (!this._win.isVisible()) {\n\t\t\t\t\tthis._win.show(); // to reduce flicker from the default window size to maximize, we only show after maximize\n\t\t\t\t}\n\t\t\t\tmark('code/didMaximizeCodeWindow');\n\t\t\t}\n\n\t\t\tthis._lastFocusTime = Date.now(); // since we show directly, we need to set the last focus time too\n\t\t}\n\t\t//#endregion\n\n\t\t// respect configured menu bar visibility\n\t\tthis.onConfigurationUpdated();\n\n\t\t// macOS: touch bar support\n\t\tthis.createTouchBar();\n\n\t\t// Request handling\n\t\tthis.marketplaceHeadersPromise = resolveMarketplaceHeaders(this.productService.version, this.productService, this.environmentMainService, this.configurationService, this.fileService, {\n\t\t\tget: key => storageMainService.globalStorage.get(key),\n\t\t\tstore: (key, value) => storageMainService.globalStorage.set(key, value)\n\t\t});\n\n\t\t// Eventing\n\t\tthis.registerListeners();\n\t}\n\n\tsetRepresentedFilename(filename: string): void {\n\t\tif (isMacintosh) {\n\t\t\tthis._win.setRepresentedFilename(filename);\n\t\t} else {\n\t\t\tthis.representedFilename = filename;\n\t\t}\n\t}\n\n\tgetRepresentedFilename(): string | undefined {\n\t\tif (isMacintosh) {\n\t\t\treturn this._win.getRepresentedFilename();\n\t\t}\n\n\t\treturn this.representedFilename;\n\t}\n\n\tsetDocumentEdited(edited: boolean): void {\n\t\tif (isMacintosh) {\n\t\t\tthis._win.setDocumentEdited(edited);\n\t\t}\n\n\t\tthis.documentEdited = edited;\n\t}\n\n\tisDocumentEdited(): boolean {\n\t\tif (isMacintosh) {\n\t\t\treturn this._win.isDocumentEdited();\n\t\t}\n\n\t\treturn !!this.documentEdited;\n\t}\n\n\tfocus(options?: { force: boolean }): void {\n\t\t// macOS: Electron > 7.x changed its behaviour to not\n\t\t// bring the application to the foreground when a window\n\t\t// is focused programmatically. Only via `app.focus` and\n\t\t// the option `steal: true` can you get the previous\n\t\t// behaviour back. The only reason to use this option is\n\t\t// when a window is getting focused while the application\n\t\t// is not in the foreground.\n\t\tif (isMacintosh && options?.force) {\n\t\t\tapp.focus({ steal: true });\n\t\t}\n\n\t\tif (!this._win) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this._win.isMinimized()) {\n\t\t\tthis._win.restore();\n\t\t}\n\n\t\tthis._win.focus();\n\t}\n\n\tprivate readyState = ReadyState.NONE;\n\n\tsetReady(): void {\n\t\tthis.readyState = ReadyState.READY;\n\n\t\t// inform all waiting promises that we are ready now\n\t\twhile (this.whenReadyCallbacks.length) {\n\t\t\tthis.whenReadyCallbacks.pop()!(this);\n\t\t}\n\n\t\t// Events\n\t\tthis._onDidSignalReady.fire();\n\t}\n\n\tready(): Promise<ICodeWindow> {\n\t\treturn new Promise<ICodeWindow>(resolve => {\n\t\t\tif (this.isReady) {\n\t\t\t\treturn resolve(this);\n\t\t\t}\n\n\t\t\t// otherwise keep and call later when we are ready\n\t\t\tthis.whenReadyCallbacks.push(resolve);\n\t\t});\n\t}\n\n\tget isReady(): boolean {\n\t\treturn this.readyState === ReadyState.READY;\n\t}\n\n\tget whenClosedOrLoaded(): Promise<void> {\n\t\treturn new Promise<void>(resolve => {\n\n\t\t\tfunction handle() {\n\t\t\t\tcloseListener.dispose();\n\t\t\t\tloadListener.dispose();\n\n\t\t\t\tresolve();\n\t\t\t}\n\n\t\t\tconst closeListener = this.onDidClose(() => handle());\n\t\t\tconst loadListener = this.onWillLoad(() => handle());\n\t\t});\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// Crashes & Unresponsive & Failed to load\n\t\tthis._win.on('unresponsive', () => this.onWindowError(WindowError.UNRESPONSIVE));\n\t\tthis._win.webContents.on('render-process-gone', (event, details) => this.onWindowError(WindowError.CRASHED, details));\n\t\tthis._win.webContents.on('did-fail-load', (event, exitCode, reason) => this.onWindowError(WindowError.LOAD, { reason, exitCode }));\n\n\t\t// Prevent windows/iframes from blocking the unload\n\t\t// through DOM events. We have our own logic for\n\t\t// unloading a window that should not be confused\n\t\t// with the DOM way.\n\t\t// (https://github.com/microsoft/vscode/issues/122736)\n\t\tthis._win.webContents.on('will-prevent-unload', event => {\n\t\t\tevent.preventDefault();\n\t\t});\n\n\t\t// Window close\n\t\tthis._win.on('closed', () => {\n\t\t\tthis._onDidClose.fire();\n\n\t\t\tthis.dispose();\n\t\t});\n\n\t\t// Block all SVG requests from unsupported origins\n\t\tconst supportedSvgSchemes = new Set([Schemas.file, Schemas.vscodeFileResource, Schemas.vscodeRemoteResource, 'devtools']);\n\n\t\t// But allow them if the are made from inside an webview\n\t\tconst isSafeFrame = (requestFrame: WebFrameMain | undefined): boolean => {\n\t\t\tfor (let frame: WebFrameMain | null | undefined = requestFrame; frame; frame = frame.parent) {\n\t\t\t\tif (frame.url.startsWith(`${Schemas.vscodeWebview}://`)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\tconst isRequestFromSafeContext = (details: Electron.OnBeforeRequestListenerDetails | Electron.OnHeadersReceivedListenerDetails): boolean => {\n\t\t\treturn details.resourceType === 'xhr' || isSafeFrame(details.frame);\n\t\t};\n\n\t\tthis._win.webContents.session.webRequest.onBeforeRequest((details, callback) => {\n\t\t\tconst uri = URI.parse(details.url);\n\t\t\tif (uri.path.endsWith('.svg')) {\n\t\t\t\tconst isSafeResourceUrl = supportedSvgSchemes.has(uri.scheme);\n\t\t\t\tif (!isSafeResourceUrl) {\n\t\t\t\t\treturn callback({ cancel: !isRequestFromSafeContext(details) });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn callback({ cancel: false });\n\t\t});\n\n\t\t// Configure SVG header content type properly\n\t\t// https://github.com/microsoft/vscode/issues/97564\n\t\tthis._win.webContents.session.webRequest.onHeadersReceived((details, callback) => {\n\t\t\tconst responseHeaders = details.responseHeaders as Record<string, (string) | (string[])>;\n\t\t\tconst contentTypes = (responseHeaders['content-type'] || responseHeaders['Content-Type']);\n\n\t\t\tif (contentTypes && Array.isArray(contentTypes)) {\n\t\t\t\tconst uri = URI.parse(details.url);\n\t\t\t\tif (uri.path.endsWith('.svg')) {\n\t\t\t\t\tif (supportedSvgSchemes.has(uri.scheme)) {\n\t\t\t\t\t\tresponseHeaders['Content-Type'] = ['image/svg+xml'];\n\n\t\t\t\t\t\treturn callback({ cancel: false, responseHeaders });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// remote extension schemes have the following format\n\t\t\t\t// http://127.0.0.1:<port>/vscode-remote-resource?path=\n\t\t\t\tif (!uri.path.includes(Schemas.vscodeRemoteResource) && contentTypes.some(contentType => contentType.toLowerCase().includes('image/svg'))) {\n\t\t\t\t\treturn callback({ cancel: !isRequestFromSafeContext(details) });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn callback({ cancel: false });\n\t\t});\n\n\t\t// Remember that we loaded\n\t\tthis._win.webContents.on('did-finish-load', () => {\n\t\t\tthis.readyState = ReadyState.LOADING;\n\n\t\t\t// Associate properties from the load request if provided\n\t\t\tif (this.pendingLoadConfig) {\n\t\t\t\tthis.currentConfig = this.pendingLoadConfig;\n\n\t\t\t\tthis.pendingLoadConfig = undefined;\n\t\t\t}\n\t\t});\n\n\t\t// Window Focus\n\t\tthis._win.on('focus', () => {\n\t\t\tthis._lastFocusTime = Date.now();\n\t\t});\n\n\t\t// Window (Un)Maximize\n\t\tthis._win.on('maximize', (e: Event) => {\n\t\t\tif (this.currentConfig) {\n\t\t\t\tthis.currentConfig.maximized = true;\n\t\t\t}\n\n\t\t\tapp.emit('browser-window-maximize', e, this._win);\n\t\t});\n\n\t\tthis._win.on('unmaximize', (e: Event) => {\n\t\t\tif (this.currentConfig) {\n\t\t\t\tthis.currentConfig.maximized = false;\n\t\t\t}\n\n\t\t\tapp.emit('browser-window-unmaximize', e, this._win);\n\t\t});\n\n\t\t// Window Fullscreen\n\t\tthis._win.on('enter-full-screen', () => {\n\t\t\tthis.sendWhenReady('vscode:enterFullScreen', CancellationToken.None);\n\t\t});\n\n\t\tthis._win.on('leave-full-screen', () => {\n\t\t\tthis.sendWhenReady('vscode:leaveFullScreen', CancellationToken.None);\n\t\t});\n\n\t\t// Handle configuration changes\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(() => this.onConfigurationUpdated()));\n\n\t\t// Handle Workspace events\n\t\tthis._register(this.workspacesManagementMainService.onDidDeleteUntitledWorkspace(e => this.onDidDeleteUntitledWorkspace(e)));\n\n\t\t// Inject headers when requests are incoming\n\t\tconst urls = ['https://marketplace.visualstudio.com/*', 'https://*.vsassets.io/*'];\n\t\tthis._win.webContents.session.webRequest.onBeforeSendHeaders({ urls }, async (details, cb) => {\n\t\t\tconst headers = await this.marketplaceHeadersPromise;\n\n\t\t\tcb({ cancel: false, requestHeaders: Object.assign(details.requestHeaders, headers) });\n\t\t});\n\t}\n\n\tprivate async onWindowError(error: WindowError.UNRESPONSIVE): Promise<void>;\n\tprivate async onWindowError(error: WindowError.CRASHED, details: { reason: string, exitCode: number }): Promise<void>;\n\tprivate async onWindowError(error: WindowError.LOAD, details: { reason: string, exitCode: number }): Promise<void>;\n\tprivate async onWindowError(type: WindowError, details?: { reason: string, exitCode: number }): Promise<void> {\n\n\t\tswitch (type) {\n\t\t\tcase WindowError.CRASHED:\n\t\t\t\tthis.logService.error(`CodeWindow: renderer process crashed (reason: ${details?.reason || '<unknown>'}, code: ${details?.exitCode || '<unknown>'})`);\n\t\t\t\tbreak;\n\t\t\tcase WindowError.UNRESPONSIVE:\n\t\t\t\tthis.logService.error('CodeWindow: detected unresponsive');\n\t\t\t\tbreak;\n\t\t\tcase WindowError.LOAD:\n\t\t\t\tthis.logService.error(`CodeWindow: failed to load (reason: ${details?.reason || '<unknown>'}, code: ${details?.exitCode || '<unknown>'})`);\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Telemetry\n\t\ttype WindowErrorClassification = {\n\t\t\ttype: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth', isMeasurement: true };\n\t\t\treason: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth', isMeasurement: true };\n\t\t\tcode: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth', isMeasurement: true };\n\t\t};\n\t\ttype WindowErrorEvent = {\n\t\t\ttype: WindowError;\n\t\t\treason: string | undefined;\n\t\t\tcode: number | undefined;\n\t\t};\n\t\tthis.telemetryService.publicLog2<WindowErrorEvent, WindowErrorClassification>('windowerror', { type, reason: details?.reason, code: details?.exitCode });\n\n\t\t// Inform User if non-recoverable\n\t\tswitch (type) {\n\t\t\tcase WindowError.UNRESPONSIVE:\n\t\t\tcase WindowError.CRASHED:\n\n\t\t\t\t// If we run extension tests from CLI, showing a dialog is not\n\t\t\t\t// very helpful in this case. Rather, we bring down the test run\n\t\t\t\t// to signal back a failing run.\n\t\t\t\tif (this.isExtensionDevelopmentTestFromCli) {\n\t\t\t\t\tthis.lifecycleMainService.kill(1);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Unresponsive\n\t\t\t\tif (type === WindowError.UNRESPONSIVE) {\n\t\t\t\t\tif (this.isExtensionDevelopmentHost || this.isExtensionTestHost || (this._win && this._win.webContents && this._win.webContents.isDevToolsOpened())) {\n\t\t\t\t\t\t// TODO@electron Workaround for https://github.com/microsoft/vscode/issues/56994\n\t\t\t\t\t\t// In certain cases the window can report unresponsiveness because a breakpoint was hit\n\t\t\t\t\t\t// and the process is stopped executing. The most typical cases are:\n\t\t\t\t\t\t// - devtools are opened and debugging happens\n\t\t\t\t\t\t// - window is an extensions development host that is being debugged\n\t\t\t\t\t\t// - window is an extension test development host that is being debugged\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Show Dialog\n\t\t\t\t\tconst result = await this.dialogMainService.showMessageBox({\n\t\t\t\t\t\ttitle: this.productService.nameLong,\n\t\t\t\t\t\ttype: 'warning',\n\t\t\t\t\t\tbuttons: [\n\t\t\t\t\t\t\tmnemonicButtonLabel(localize({ key: 'reopen', comment: ['&& denotes a mnemonic'] }, \"&&Reopen\")),\n\t\t\t\t\t\t\tmnemonicButtonLabel(localize({ key: 'wait', comment: ['&& denotes a mnemonic'] }, \"&&Keep Waiting\")),\n\t\t\t\t\t\t\tmnemonicButtonLabel(localize({ key: 'close', comment: ['&& denotes a mnemonic'] }, \"&&Close\"))\n\t\t\t\t\t\t],\n\t\t\t\t\t\tmessage: localize('appStalled', \"The window is not responding\"),\n\t\t\t\t\t\tdetail: localize('appStalledDetail', \"You can reopen or close the window or keep waiting.\"),\n\t\t\t\t\t\tnoLink: true,\n\t\t\t\t\t\tdefaultId: 0,\n\t\t\t\t\t\tcancelId: 1\n\t\t\t\t\t}, this._win);\n\n\t\t\t\t\t// Handle choice\n\t\t\t\t\tif (result.response !== 1 /* keep waiting */) {\n\t\t\t\t\t\tconst reopen = result.response === 0;\n\t\t\t\t\t\tthis.destroyWindow(reopen);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Crashed\n\t\t\t\telse if (type === WindowError.CRASHED) {\n\t\t\t\t\tlet message: string;\n\t\t\t\t\tif (!details) {\n\t\t\t\t\t\tmessage = localize('appCrashed', \"The window has crashed\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmessage = localize('appCrashedDetails', \"The window has crashed (reason: '{0}', code: '{1}')\", details.reason, details.exitCode ?? '<unknown>');\n\t\t\t\t\t}\n\n\t\t\t\t\t// Show Dialog\n\t\t\t\t\tconst result = await this.dialogMainService.showMessageBox({\n\t\t\t\t\t\ttitle: this.productService.nameLong,\n\t\t\t\t\t\ttype: 'warning',\n\t\t\t\t\t\tbuttons: [\n\t\t\t\t\t\t\tmnemonicButtonLabel(localize({ key: 'reopen', comment: ['&& denotes a mnemonic'] }, \"&&Reopen\")),\n\t\t\t\t\t\t\tmnemonicButtonLabel(localize({ key: 'close', comment: ['&& denotes a mnemonic'] }, \"&&Close\"))\n\t\t\t\t\t\t],\n\t\t\t\t\t\tmessage,\n\t\t\t\t\t\tdetail: localize('appCrashedDetail', \"We are sorry for the inconvenience. You can reopen the window to continue where you left off.\"),\n\t\t\t\t\t\tnoLink: true,\n\t\t\t\t\t\tdefaultId: 0\n\t\t\t\t\t}, this._win);\n\n\t\t\t\t\t// Handle choice\n\t\t\t\t\tconst reopen = result.response === 0;\n\t\t\t\t\tthis.destroyWindow(reopen);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tprivate destroyWindow(reopen: boolean): void {\n\n\t\t// 'close' event will not be fired on destroy(), so signal crash via explicit event\n\t\tthis._onDidDestroy.fire();\n\n\t\t// make sure to destroy the window as it has crashed\n\t\tthis._win?.destroy();\n\n\t\t// ask the windows service to open a new fresh window if specified\n\t\tif (reopen && this.config) {\n\n\t\t\t// We have to reconstruct a openable from the current workspace\n\t\t\tlet workspace: IWorkspaceToOpen | IFolderToOpen | undefined = undefined;\n\t\t\tlet forceEmpty = undefined;\n\t\t\tif (isSingleFolderWorkspaceIdentifier(this.openedWorkspace)) {\n\t\t\t\tworkspace = { folderUri: this.openedWorkspace.uri };\n\t\t\t} else if (isWorkspaceIdentifier(this.openedWorkspace)) {\n\t\t\t\tworkspace = { workspaceUri: this.openedWorkspace.configPath };\n\t\t\t} else {\n\t\t\t\tforceEmpty = true;\n\t\t\t}\n\n\t\t\t// Delegate to windows service\n\t\t\tconst [window] = this.windowsMainService.open({\n\t\t\t\tcontext: OpenContext.API,\n\t\t\t\tuserEnv: this.config.userEnv,\n\t\t\t\tcli: {\n\t\t\t\t\t...this.environmentMainService.args,\n\t\t\t\t\t_: [] // we pass in the workspace to open explicitly via `urisToOpen`\n\t\t\t\t},\n\t\t\t\turisToOpen: workspace ? [workspace] : undefined,\n\t\t\t\tforceEmpty,\n\t\t\t\tforceNewWindow: true\n\t\t\t});\n\t\t\twindow.focus();\n\t\t}\n\t}\n\n\tprivate onDidDeleteUntitledWorkspace(workspace: IWorkspaceIdentifier): void {\n\n\t\t// Make sure to update our workspace config if we detect that it\n\t\t// was deleted\n\t\tif (this.openedWorkspace?.id === workspace.id && this.currentConfig) {\n\t\t\tthis.currentConfig.workspace = undefined;\n\t\t}\n\t}\n\n\tprivate onConfigurationUpdated(): void {\n\n\t\t// Menubar\n\t\tconst newMenuBarVisibility = this.getMenuBarVisibility();\n\t\tif (newMenuBarVisibility !== this.currentMenuBarVisibility) {\n\t\t\tthis.currentMenuBarVisibility = newMenuBarVisibility;\n\t\t\tthis.setMenuBarVisibility(newMenuBarVisibility);\n\t\t}\n\n\t\t// Proxy\n\t\tlet newHttpProxy = (this.configurationService.getValue<string>('http.proxy') || '').trim()\n\t\t\t|| (process.env['https_proxy'] || process.env['HTTPS_PROXY'] || process.env['http_proxy'] || process.env['HTTP_PROXY'] || '').trim() // Not standardized.\n\t\t\t|| undefined;\n\n\t\tif (newHttpProxy?.endsWith('/')) {\n\t\t\tnewHttpProxy = newHttpProxy.substr(0, newHttpProxy.length - 1);\n\t\t}\n\n\t\tconst newNoProxy = (process.env['no_proxy'] || process.env['NO_PROXY'] || '').trim() || undefined; // Not standardized.\n\t\tif ((newHttpProxy || '').indexOf('@') === -1 && (newHttpProxy !== this.currentHttpProxy || newNoProxy !== this.currentNoProxy)) {\n\t\t\tthis.currentHttpProxy = newHttpProxy;\n\t\t\tthis.currentNoProxy = newNoProxy;\n\n\t\t\tconst proxyRules = newHttpProxy || '';\n\t\t\tconst proxyBypassRules = newNoProxy ? `${newNoProxy},<local>` : '<local>';\n\t\t\tthis.logService.trace(`Setting proxy to '${proxyRules}', bypassing '${proxyBypassRules}'`);\n\t\t\tthis._win.webContents.session.setProxy({ proxyRules, proxyBypassRules, pacScript: '' });\n\t\t}\n\t}\n\n\taddTabbedWindow(window: ICodeWindow): void {\n\t\tif (isMacintosh && window.win) {\n\t\t\tthis._win.addTabbedWindow(window.win);\n\t\t}\n\t}\n\n\tload(configuration: INativeWindowConfiguration, options: ILoadOptions = Object.create(null)): void {\n\n\t\t// Clear Document Edited if needed\n\t\tif (this.isDocumentEdited()) {\n\t\t\tif (!options.isReload || !this.backupMainService.isHotExitEnabled()) {\n\t\t\t\tthis.setDocumentEdited(false);\n\t\t\t}\n\t\t}\n\n\t\t// Clear Title and Filename if needed\n\t\tif (!options.isReload) {\n\t\t\tif (this.getRepresentedFilename()) {\n\t\t\t\tthis.setRepresentedFilename('');\n\t\t\t}\n\n\t\t\tthis._win.setTitle(this.productService.nameLong);\n\t\t}\n\n\t\t// Update configuration values based on our window context\n\t\t// and set it into the config object URL for usage.\n\t\tthis.updateConfiguration(configuration, options);\n\n\t\t// If this is the first time the window is loaded, we associate the paths\n\t\t// directly with the window because we assume the loading will just work\n\t\tif (this.readyState === ReadyState.NONE) {\n\t\t\tthis.currentConfig = configuration;\n\t\t}\n\n\t\t// Otherwise, the window is currently showing a folder and if there is an\n\t\t// unload handler preventing the load, we cannot just associate the paths\n\t\t// because the loading might be vetoed. Instead we associate it later when\n\t\t// the window load event has fired.\n\t\telse {\n\t\t\tthis.pendingLoadConfig = configuration;\n\t\t\tthis.readyState = ReadyState.NAVIGATING;\n\t\t}\n\n\t\t// Load URL\n\t\tthis._win.loadURL(FileAccess.asBrowserUri(this.environmentMainService.sandbox ?\n\t\t\t'vs/code/electron-sandbox/workbench/workbench.html' :\n\t\t\t'vs/code/electron-browser/workbench/workbench.html', require\n\t\t).toString(true));\n\n\t\t// Remember that we did load\n\t\tconst wasLoaded = this.wasLoaded;\n\t\tthis.wasLoaded = true;\n\n\t\t// Make window visible if it did not open in N seconds because this indicates an error\n\t\t// Only do this when running out of sources and not when running tests\n\t\tif (!this.environmentMainService.isBuilt && !this.environmentMainService.extensionTestsLocationURI) {\n\t\t\tthis._register(new RunOnceScheduler(() => {\n\t\t\t\tif (this._win && !this._win.isVisible() && !this._win.isMinimized()) {\n\t\t\t\t\tthis._win.show();\n\t\t\t\t\tthis.focus({ force: true });\n\t\t\t\t\tthis._win.webContents.openDevTools();\n\t\t\t\t}\n\n\t\t\t}, 10000)).schedule();\n\t\t}\n\n\t\t// Event\n\t\tthis._onWillLoad.fire({ workspace: configuration.workspace, reason: options.isReload ? LoadReason.RELOAD : wasLoaded ? LoadReason.LOAD : LoadReason.INITIAL });\n\t}\n\n\tprivate updateConfiguration(configuration: INativeWindowConfiguration, options: ILoadOptions): void {\n\n\t\t// If this window was loaded before from the command line\n\t\t// (as indicated by VSCODE_CLI environment), make sure to\n\t\t// preserve that user environment in subsequent loads,\n\t\t// unless the new configuration context was also a CLI\n\t\t// (for https://github.com/microsoft/vscode/issues/108571)\n\t\t// Also, preserve the environment if we're loading from an\n\t\t// extension development host that had its environment set\n\t\t// (for https://github.com/microsoft/vscode/issues/123508)\n\t\tconst currentUserEnv = (this.currentConfig ?? this.pendingLoadConfig)?.userEnv;\n\t\tif (currentUserEnv) {\n\t\t\tconst shouldPreserveLaunchCliEnvironment = isLaunchedFromCli(currentUserEnv) && !isLaunchedFromCli(configuration.userEnv);\n\t\t\tconst shouldPreserveDebugEnvironmnet = this.isExtensionDevelopmentHost;\n\t\t\tif (shouldPreserveLaunchCliEnvironment || shouldPreserveDebugEnvironmnet) {\n\t\t\t\tconfiguration.userEnv = { ...currentUserEnv, ...configuration.userEnv }; // still allow to override certain environment as passed in\n\t\t\t}\n\t\t}\n\n\t\t// If named pipe was instantiated for the crashpad_handler process, reuse the same\n\t\t// pipe for new app instances connecting to the original app instance.\n\t\t// Ref: https://github.com/microsoft/vscode/issues/115874\n\t\tif (process.env['CHROME_CRASHPAD_PIPE_NAME']) {\n\t\t\tObject.assign(configuration.userEnv, {\n\t\t\t\tCHROME_CRASHPAD_PIPE_NAME: process.env['CHROME_CRASHPAD_PIPE_NAME']\n\t\t\t});\n\t\t}\n\n\t\t// Add disable-extensions to the config, but do not preserve it on currentConfig or\n\t\t// pendingLoadConfig so that it is applied only on this load\n\t\tif (options.disableExtensions !== undefined) {\n\t\t\tconfiguration['disable-extensions'] = options.disableExtensions;\n\t\t}\n\n\t\t// Update window related properties\n\t\tconfiguration.fullscreen = this.isFullScreen;\n\t\tconfiguration.maximized = this._win.isMaximized();\n\t\tconfiguration.partsSplash = this.themeMainService.getWindowSplash();\n\n\t\t// Update with latest perf marks\n\t\tmark('code/willOpenNewWindow');\n\t\tconfiguration.perfMarks = getMarks();\n\n\t\t// Update in config object URL for usage in renderer\n\t\tthis.configObjectUrl.update(configuration);\n\t}\n\n\tasync reload(cli?: NativeParsedArgs): Promise<void> {\n\n\t\t// Copy our current config for reuse\n\t\tconst configuration = Object.assign({}, this.currentConfig);\n\n\t\t// Validate workspace\n\t\tconfiguration.workspace = await this.validateWorkspaceBeforeReload(configuration);\n\n\t\t// Delete some properties we do not want during reload\n\t\tdelete configuration.filesToOpenOrCreate;\n\t\tdelete configuration.filesToDiff;\n\t\tdelete configuration.filesToWait;\n\n\t\t// Some configuration things get inherited if the window is being reloaded and we are\n\t\t// in extension development mode. These options are all development related.\n\t\tif (this.isExtensionDevelopmentHost && cli) {\n\t\t\tconfiguration.verbose = cli.verbose;\n\t\t\tconfiguration.debugId = cli.debugId;\n\t\t\tconfiguration.extensionEnvironment = cli.extensionEnvironment;\n\t\t\tconfiguration['inspect-extensions'] = cli['inspect-extensions'];\n\t\t\tconfiguration['inspect-brk-extensions'] = cli['inspect-brk-extensions'];\n\t\t\tconfiguration['extensions-dir'] = cli['extensions-dir'];\n\t\t}\n\n\t\tconfiguration.isInitialStartup = false; // since this is a reload\n\n\t\t// Load config\n\t\tthis.load(configuration, { isReload: true, disableExtensions: cli?.['disable-extensions'] });\n\t}\n\n\tprivate async validateWorkspaceBeforeReload(configuration: INativeWindowConfiguration): Promise<IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier | undefined> {\n\n\t\t// Multi folder\n\t\tif (isWorkspaceIdentifier(configuration.workspace)) {\n\t\t\tconst configPath = configuration.workspace.configPath;\n\t\t\tif (configPath.scheme === Schemas.file) {\n\t\t\t\tconst workspaceExists = await this.fileService.exists(configPath);\n\t\t\t\tif (!workspaceExists) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Single folder\n\t\telse if (isSingleFolderWorkspaceIdentifier(configuration.workspace)) {\n\t\t\tconst uri = configuration.workspace.uri;\n\t\t\tif (uri.scheme === Schemas.file) {\n\t\t\t\tconst folderExists = await this.fileService.exists(uri);\n\t\t\t\tif (!folderExists) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Workspace is valid\n\t\treturn configuration.workspace;\n\t}\n\n\tserializeWindowState(): IWindowState {\n\t\tif (!this._win) {\n\t\t\treturn defaultWindowState();\n\t\t}\n\n\t\t// fullscreen gets special treatment\n\t\tif (this.isFullScreen) {\n\t\t\tlet display: Display | undefined;\n\t\t\ttry {\n\t\t\t\tdisplay = screen.getDisplayMatching(this.getBounds());\n\t\t\t} catch (error) {\n\t\t\t\t// Electron has weird conditions under which it throws errors\n\t\t\t\t// e.g. https://github.com/microsoft/vscode/issues/100334 when\n\t\t\t\t// large numbers are passed in\n\t\t\t}\n\n\t\t\tconst defaultState = defaultWindowState();\n\n\t\t\tconst res = {\n\t\t\t\tmode: WindowMode.Fullscreen,\n\t\t\t\tdisplay: display ? display.id : undefined,\n\n\t\t\t\t// Still carry over window dimensions from previous sessions\n\t\t\t\t// if we can compute it in fullscreen state.\n\t\t\t\t// does not seem possible in all cases on Linux for example\n\t\t\t\t// (https://github.com/microsoft/vscode/issues/58218) so we\n\t\t\t\t// fallback to the defaults in that case.\n\t\t\t\twidth: this.windowState.width || defaultState.width,\n\t\t\t\theight: this.windowState.height || defaultState.height,\n\t\t\t\tx: this.windowState.x || 0,\n\t\t\t\ty: this.windowState.y || 0\n\t\t\t};\n\n\t\t\treturn res;\n\t\t}\n\n\t\tconst state: IWindowState = Object.create(null);\n\t\tlet mode: WindowMode;\n\n\t\t// get window mode\n\t\tif (!isMacintosh && this._win.isMaximized()) {\n\t\t\tmode = WindowMode.Maximized;\n\t\t} else {\n\t\t\tmode = WindowMode.Normal;\n\t\t}\n\n\t\t// we don't want to save minimized state, only maximized or normal\n\t\tif (mode === WindowMode.Maximized) {\n\t\t\tstate.mode = WindowMode.Maximized;\n\t\t} else {\n\t\t\tstate.mode = WindowMode.Normal;\n\t\t}\n\n\t\t// only consider non-minimized window states\n\t\tif (mode === WindowMode.Normal || mode === WindowMode.Maximized) {\n\t\t\tlet bounds: Rectangle;\n\t\t\tif (mode === WindowMode.Normal) {\n\t\t\t\tbounds = this.getBounds();\n\t\t\t} else {\n\t\t\t\tbounds = this._win.getNormalBounds(); // make sure to persist the normal bounds when maximized to be able to restore them\n\t\t\t}\n\n\t\t\tstate.x = bounds.x;\n\t\t\tstate.y = bounds.y;\n\t\t\tstate.width = bounds.width;\n\t\t\tstate.height = bounds.height;\n\t\t}\n\n\t\treturn state;\n\t}\n\n\tprivate restoreWindowState(state?: IWindowState): [IWindowState, boolean? /* has multiple displays */] {\n\t\tmark('code/willRestoreCodeWindowState');\n\n\t\tlet hasMultipleDisplays = false;\n\t\tif (state) {\n\t\t\ttry {\n\t\t\t\tconst displays = screen.getAllDisplays();\n\t\t\t\thasMultipleDisplays = displays.length > 1;\n\n\t\t\t\tstate = this.validateWindowState(state, displays);\n\t\t\t} catch (err) {\n\t\t\t\tthis.logService.warn(`Unexpected error validating window state: ${err}\\n${err.stack}`); // somehow display API can be picky about the state to validate\n\t\t\t}\n\t\t}\n\n\t\tmark('code/didRestoreCodeWindowState');\n\n\t\treturn [state || defaultWindowState(), hasMultipleDisplays];\n\t}\n\n\tprivate validateWindowState(state: IWindowState, displays: Display[]): IWindowState | undefined {\n\t\tthis.logService.trace(`window#validateWindowState: validating window state on ${displays.length} display(s)`, state);\n\n\t\tif (typeof state.x !== 'number'\n\t\t\t|| typeof state.y !== 'number'\n\t\t\t|| typeof state.width !== 'number'\n\t\t\t|| typeof state.height !== 'number'\n\t\t) {\n\t\t\tthis.logService.trace('window#validateWindowState: unexpected type of state values');\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (state.width <= 0 || state.height <= 0) {\n\t\t\tthis.logService.trace('window#validateWindowState: unexpected negative values');\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Single Monitor: be strict about x/y positioning\n\t\t// macOS & Linux: these OS seem to be pretty good in ensuring that a window is never outside of it's bounds.\n\t\t// Windows: it is possible to have a window with a size that makes it fall out of the window. our strategy\n\t\t//          is to try as much as possible to keep the window in the monitor bounds. we are not as strict as\n\t\t//          macOS and Linux and allow the window to exceed the monitor bounds as long as the window is still\n\t\t//          some pixels (128) visible on the screen for the user to drag it back.\n\t\tif (displays.length === 1) {\n\t\t\tconst displayWorkingArea = this.getWorkingArea(displays[0]);\n\t\t\tif (displayWorkingArea) {\n\t\t\t\tthis.logService.trace('window#validateWindowState: 1 monitor working area', displayWorkingArea);\n\n\t\t\t\tfunction ensureStateInDisplayWorkingArea(): void {\n\t\t\t\t\tif (!state || typeof state.x !== 'number' || typeof state.y !== 'number' || !displayWorkingArea) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (state.x < displayWorkingArea.x) {\n\t\t\t\t\t\t// prevent window from falling out of the screen to the left\n\t\t\t\t\t\tstate.x = displayWorkingArea.x;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (state.y < displayWorkingArea.y) {\n\t\t\t\t\t\t// prevent window from falling out of the screen to the top\n\t\t\t\t\t\tstate.y = displayWorkingArea.y;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// ensure state is not outside display working area (top, left)\n\t\t\t\tensureStateInDisplayWorkingArea();\n\n\t\t\t\tif (state.width > displayWorkingArea.width) {\n\t\t\t\t\t// prevent window from exceeding display bounds width\n\t\t\t\t\tstate.width = displayWorkingArea.width;\n\t\t\t\t}\n\n\t\t\t\tif (state.height > displayWorkingArea.height) {\n\t\t\t\t\t// prevent window from exceeding display bounds height\n\t\t\t\t\tstate.height = displayWorkingArea.height;\n\t\t\t\t}\n\n\t\t\t\tif (state.x > (displayWorkingArea.x + displayWorkingArea.width - 128)) {\n\t\t\t\t\t// prevent window from falling out of the screen to the right with\n\t\t\t\t\t// 128px margin by positioning the window to the far right edge of\n\t\t\t\t\t// the screen\n\t\t\t\t\tstate.x = displayWorkingArea.x + displayWorkingArea.width - state.width;\n\t\t\t\t}\n\n\t\t\t\tif (state.y > (displayWorkingArea.y + displayWorkingArea.height - 128)) {\n\t\t\t\t\t// prevent window from falling out of the screen to the bottom with\n\t\t\t\t\t// 128px margin by positioning the window to the far bottom edge of\n\t\t\t\t\t// the screen\n\t\t\t\t\tstate.y = displayWorkingArea.y + displayWorkingArea.height - state.height;\n\t\t\t\t}\n\n\t\t\t\t// again ensure state is not outside display working area\n\t\t\t\t// (it may have changed from the previous validation step)\n\t\t\t\tensureStateInDisplayWorkingArea();\n\t\t\t}\n\n\t\t\treturn state;\n\t\t}\n\n\t\t// Multi Montior (fullscreen): try to find the previously used display\n\t\tif (state.display && state.mode === WindowMode.Fullscreen) {\n\t\t\tconst display = displays.find(d => d.id === state.display);\n\t\t\tif (display && typeof display.bounds?.x === 'number' && typeof display.bounds?.y === 'number') {\n\t\t\t\tthis.logService.trace('window#validateWindowState: restoring fullscreen to previous display');\n\n\t\t\t\tconst defaults = defaultWindowState(WindowMode.Fullscreen); // make sure we have good values when the user restores the window\n\t\t\t\tdefaults.x = display.bounds.x; // carefull to use displays x/y position so that the window ends up on the correct monitor\n\t\t\t\tdefaults.y = display.bounds.y;\n\n\t\t\t\treturn defaults;\n\t\t\t}\n\t\t}\n\n\t\t// Multi Monitor (non-fullscreen): ensure window is within display bounds\n\t\tlet display: Display | undefined;\n\t\tlet displayWorkingArea: Rectangle | undefined;\n\t\ttry {\n\t\t\tdisplay = screen.getDisplayMatching({ x: state.x, y: state.y, width: state.width, height: state.height });\n\t\t\tdisplayWorkingArea = this.getWorkingArea(display);\n\t\t} catch (error) {\n\t\t\t// Electron has weird conditions under which it throws errors\n\t\t\t// e.g. https://github.com/microsoft/vscode/issues/100334 when\n\t\t\t// large numbers are passed in\n\t\t}\n\n\t\tif (\n\t\t\tdisplay &&\t\t\t\t\t\t\t\t\t\t\t\t\t\t// we have a display matching the desired bounds\n\t\t\tdisplayWorkingArea &&\t\t\t\t\t\t\t\t\t\t\t// we have valid working area bounds\n\t\t\tstate.x + state.width > displayWorkingArea.x &&\t\t\t\t\t// prevent window from falling out of the screen to the left\n\t\t\tstate.y + state.height > displayWorkingArea.y &&\t\t\t\t// prevent window from falling out of the screen to the top\n\t\t\tstate.x < displayWorkingArea.x + displayWorkingArea.width &&\t// prevent window from falling out of the screen to the right\n\t\t\tstate.y < displayWorkingArea.y + displayWorkingArea.height\t\t// prevent window from falling out of the screen to the bottom\n\t\t) {\n\t\t\tthis.logService.trace('window#validateWindowState: multi-monitor working area', displayWorkingArea);\n\n\t\t\treturn state;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate getWorkingArea(display: Display): Rectangle | undefined {\n\n\t\t// Prefer the working area of the display to account for taskbars on the\n\t\t// desktop being positioned somewhere (https://github.com/microsoft/vscode/issues/50830).\n\t\t//\n\t\t// Linux X11 sessions sometimes report wrong display bounds, so we validate\n\t\t// the reported sizes are positive.\n\t\tif (display.workArea.width > 0 && display.workArea.height > 0) {\n\t\t\treturn display.workArea;\n\t\t}\n\n\t\tif (display.bounds.width > 0 && display.bounds.height > 0) {\n\t\t\treturn display.bounds;\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tgetBounds(): Rectangle {\n\t\tconst [x, y] = this._win.getPosition();\n\t\tconst [width, height] = this._win.getSize();\n\n\t\treturn { x, y, width, height };\n\t}\n\n\ttoggleFullScreen(): void {\n\t\tthis.setFullScreen(!this.isFullScreen);\n\t}\n\n\tprivate setFullScreen(fullscreen: boolean): void {\n\n\t\t// Set fullscreen state\n\t\tif (this.useNativeFullScreen()) {\n\t\t\tthis.setNativeFullScreen(fullscreen);\n\t\t} else {\n\t\t\tthis.setSimpleFullScreen(fullscreen);\n\t\t}\n\n\t\t// Events\n\t\tthis.sendWhenReady(fullscreen ? 'vscode:enterFullScreen' : 'vscode:leaveFullScreen', CancellationToken.None);\n\n\t\t// Respect configured menu bar visibility or default to toggle if not set\n\t\tif (this.currentMenuBarVisibility) {\n\t\t\tthis.setMenuBarVisibility(this.currentMenuBarVisibility, false);\n\t\t}\n\t}\n\n\tget isFullScreen(): boolean { return this._win.isFullScreen() || this._win.isSimpleFullScreen(); }\n\n\tprivate setNativeFullScreen(fullscreen: boolean): void {\n\t\tif (this._win.isSimpleFullScreen()) {\n\t\t\tthis._win.setSimpleFullScreen(false);\n\t\t}\n\n\t\tthis._win.setFullScreen(fullscreen);\n\t}\n\n\tprivate setSimpleFullScreen(fullscreen: boolean): void {\n\t\tif (this._win.isFullScreen()) {\n\t\t\tthis._win.setFullScreen(false);\n\t\t}\n\n\t\tthis._win.setSimpleFullScreen(fullscreen);\n\t\tthis._win.webContents.focus(); // workaround issue where focus is not going into window\n\t}\n\n\tprivate useNativeFullScreen(): boolean {\n\t\tconst windowConfig = this.configurationService.getValue<IWindowSettings | undefined>('window');\n\t\tif (!windowConfig || typeof windowConfig.nativeFullScreen !== 'boolean') {\n\t\t\treturn true; // default\n\t\t}\n\n\t\tif (windowConfig.nativeTabs) {\n\t\t\treturn true; // https://github.com/electron/electron/issues/16142\n\t\t}\n\n\t\treturn windowConfig.nativeFullScreen !== false;\n\t}\n\n\tisMinimized(): boolean {\n\t\treturn this._win.isMinimized();\n\t}\n\n\tprivate getMenuBarVisibility(): MenuBarVisibility {\n\t\tlet menuBarVisibility = getMenuBarVisibility(this.configurationService);\n\t\tif (['visible', 'toggle', 'hidden'].indexOf(menuBarVisibility) < 0) {\n\t\t\tmenuBarVisibility = 'classic';\n\t\t}\n\n\t\treturn menuBarVisibility;\n\t}\n\n\tprivate setMenuBarVisibility(visibility: MenuBarVisibility, notify: boolean = true): void {\n\t\tif (isMacintosh) {\n\t\t\treturn; // ignore for macOS platform\n\t\t}\n\n\t\tif (visibility === 'toggle') {\n\t\t\tif (notify) {\n\t\t\t\tthis.send('vscode:showInfoMessage', localize('hiddenMenuBar', \"You can still access the menu bar by pressing the Alt-key.\"));\n\t\t\t}\n\t\t}\n\n\t\tif (visibility === 'hidden') {\n\t\t\t// for some weird reason that I have no explanation for, the menu bar is not hiding when calling\n\t\t\t// this without timeout (see https://github.com/microsoft/vscode/issues/19777). there seems to be\n\t\t\t// a timing issue with us opening the first window and the menu bar getting created. somehow the\n\t\t\t// fact that we want to hide the menu without being able to bring it back via Alt key makes Electron\n\t\t\t// still show the menu. Unable to reproduce from a simple Hello World application though...\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.doSetMenuBarVisibility(visibility);\n\t\t\t});\n\t\t} else {\n\t\t\tthis.doSetMenuBarVisibility(visibility);\n\t\t}\n\t}\n\n\tprivate doSetMenuBarVisibility(visibility: MenuBarVisibility): void {\n\t\tconst isFullscreen = this.isFullScreen;\n\n\t\tswitch (visibility) {\n\t\t\tcase ('classic'):\n\t\t\t\tthis._win.setMenuBarVisibility(!isFullscreen);\n\t\t\t\tthis._win.autoHideMenuBar = isFullscreen;\n\t\t\t\tbreak;\n\n\t\t\tcase ('visible'):\n\t\t\t\tthis._win.setMenuBarVisibility(true);\n\t\t\t\tthis._win.autoHideMenuBar = false;\n\t\t\t\tbreak;\n\n\t\t\tcase ('toggle'):\n\t\t\t\tthis._win.setMenuBarVisibility(false);\n\t\t\t\tthis._win.autoHideMenuBar = true;\n\t\t\t\tbreak;\n\n\t\t\tcase ('hidden'):\n\t\t\t\tthis._win.setMenuBarVisibility(false);\n\t\t\t\tthis._win.autoHideMenuBar = false;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\thandleTitleDoubleClick(): void {\n\n\t\t// Respect system settings on mac with regards to title click on windows title\n\t\tif (isMacintosh) {\n\t\t\tconst action = systemPreferences.getUserDefault('AppleActionOnDoubleClick', 'string');\n\t\t\tswitch (action) {\n\t\t\t\tcase 'Minimize':\n\t\t\t\t\tthis._win.minimize();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'None':\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Maximize':\n\t\t\t\tdefault:\n\t\t\t\t\tif (this._win.isMaximized()) {\n\t\t\t\t\t\tthis._win.unmaximize();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._win.maximize();\n\t\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Linux/Windows: just toggle maximize/minimized state\n\t\telse {\n\t\t\tif (this._win.isMaximized()) {\n\t\t\t\tthis._win.unmaximize();\n\t\t\t} else {\n\t\t\t\tthis._win.maximize();\n\t\t\t}\n\t\t}\n\t}\n\n\tclose(): void {\n\t\tif (this._win) {\n\t\t\tthis._win.close();\n\t\t}\n\t}\n\n\tsendWhenReady(channel: string, token: CancellationToken, ...args: any[]): void {\n\t\tif (this.isReady) {\n\t\t\tthis.send(channel, ...args);\n\t\t} else {\n\t\t\tthis.ready().then(() => {\n\t\t\t\tif (!token.isCancellationRequested) {\n\t\t\t\t\tthis.send(channel, ...args);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tsend(channel: string, ...args: any[]): void {\n\t\tif (this._win) {\n\t\t\tif (this._win.isDestroyed() || this._win.webContents.isDestroyed()) {\n\t\t\t\tthis.logService.warn(`Sending IPC message to channel '${channel}' for window that is destroyed`);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tthis._win.webContents.send(channel, ...args);\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.warn(`Error sending IPC message to channel '${channel}' of window ${this._id}: ${toErrorMessage(error)}`);\n\t\t\t}\n\t\t}\n\t}\n\n\tupdateTouchBar(groups: ISerializableCommandAction[][]): void {\n\t\tif (!isMacintosh) {\n\t\t\treturn; // only supported on macOS\n\t\t}\n\n\t\t// Update segments for all groups. Setting the segments property\n\t\t// of the group directly prevents ugly flickering from happening\n\t\tthis.touchBarGroups.forEach((touchBarGroup, index) => {\n\t\t\tconst commands = groups[index];\n\t\t\ttouchBarGroup.segments = this.createTouchBarGroupSegments(commands);\n\t\t});\n\t}\n\n\tprivate createTouchBar(): void {\n\t\tif (!isMacintosh) {\n\t\t\treturn; // only supported on macOS\n\t\t}\n\n\t\t// To avoid flickering, we try to reuse the touch bar group\n\t\t// as much as possible by creating a large number of groups\n\t\t// for reusing later.\n\t\tfor (let i = 0; i < 10; i++) {\n\t\t\tconst groupTouchBar = this.createTouchBarGroup();\n\t\t\tthis.touchBarGroups.push(groupTouchBar);\n\t\t}\n\n\t\tthis._win.setTouchBar(new TouchBar({ items: this.touchBarGroups }));\n\t}\n\n\tprivate createTouchBarGroup(items: ISerializableCommandAction[] = []): TouchBarSegmentedControl {\n\n\t\t// Group Segments\n\t\tconst segments = this.createTouchBarGroupSegments(items);\n\n\t\t// Group Control\n\t\tconst control = new TouchBar.TouchBarSegmentedControl({\n\t\t\tsegments,\n\t\t\tmode: 'buttons',\n\t\t\tsegmentStyle: 'automatic',\n\t\t\tchange: (selectedIndex) => {\n\t\t\t\tthis.sendWhenReady('vscode:runAction', CancellationToken.None, { id: (control.segments[selectedIndex] as ITouchBarSegment).id, from: 'touchbar' });\n\t\t\t}\n\t\t});\n\n\t\treturn control;\n\t}\n\n\tprivate createTouchBarGroupSegments(items: ISerializableCommandAction[] = []): ITouchBarSegment[] {\n\t\tconst segments: ITouchBarSegment[] = items.map(item => {\n\t\t\tlet icon: NativeImage | undefined;\n\t\t\tif (item.icon && !ThemeIcon.isThemeIcon(item.icon) && item.icon?.dark?.scheme === Schemas.file) {\n\t\t\t\ticon = nativeImage.createFromPath(URI.revive(item.icon.dark).fsPath);\n\t\t\t\tif (icon.isEmpty()) {\n\t\t\t\t\ticon = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet title: string;\n\t\t\tif (typeof item.title === 'string') {\n\t\t\t\ttitle = item.title;\n\t\t\t} else {\n\t\t\t\ttitle = item.title.value;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tid: item.id,\n\t\t\t\tlabel: !icon ? title : undefined,\n\t\t\t\ticon\n\t\t\t};\n\t\t});\n\n\t\treturn segments;\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\tthis._win = null!; // Important to dereference the window object to allow for GC\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { app, JumpListCategory, JumpListItem } from 'electron';\nimport { coalesce } from 'vs/base/common/arrays';\nimport { ThrottledDelayer } from 'vs/base/common/async';\nimport { Emitter, Event as CommonEvent } from 'vs/base/common/event';\nimport { normalizeDriveLetter, splitName } from 'vs/base/common/labels';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport { isMacintosh, isWindows } from 'vs/base/common/platform';\nimport { basename, extUriBiasedIgnorePathCase, originalFSPath } from 'vs/base/common/resources';\nimport { URI } from 'vs/base/common/uri';\nimport { Promises } from 'vs/base/node/pfs';\nimport { localize } from 'vs/nls';\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { ILifecycleMainService, LifecycleMainPhase } from 'vs/platform/lifecycle/electron-main/lifecycleMainService';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IStateMainService } from 'vs/platform/state/electron-main/state';\nimport { ICodeWindow } from 'vs/platform/windows/electron-main/windows';\nimport { IRecent, IRecentFile, IRecentFolder, IRecentlyOpened, IRecentWorkspace, isRecentFile, isRecentFolder, isRecentWorkspace, isSingleFolderWorkspaceIdentifier, isWorkspaceIdentifier, IWorkspaceIdentifier, RecentlyOpenedStorageData, restoreRecentlyOpened, toStoreData, WORKSPACE_EXTENSION } from 'vs/platform/workspaces/common/workspaces';\nimport { IWorkspacesManagementMainService } from 'vs/platform/workspaces/electron-main/workspacesManagementMainService';\n\nexport const IWorkspacesHistoryMainService = createDecorator<IWorkspacesHistoryMainService>('workspacesHistoryMainService');\n\nexport interface IWorkspacesHistoryMainService {\n\n\treadonly _serviceBrand: undefined;\n\n\treadonly onDidChangeRecentlyOpened: CommonEvent<void>;\n\n\taddRecentlyOpened(recents: IRecent[]): void;\n\tgetRecentlyOpened(include?: ICodeWindow): IRecentlyOpened;\n\tremoveRecentlyOpened(paths: URI[]): void;\n\tclearRecentlyOpened(): void;\n\n\tupdateWindowsJumpList(): void;\n}\n\nexport class WorkspacesHistoryMainService extends Disposable implements IWorkspacesHistoryMainService {\n\n\tprivate static readonly MAX_TOTAL_RECENT_ENTRIES = 500;\n\n\tprivate static readonly MAX_MACOS_DOCK_RECENT_WORKSPACES = 7; \t\t// prefer higher number of workspaces...\n\tprivate static readonly MAX_MACOS_DOCK_RECENT_ENTRIES_TOTAL = 10; \t// ...over number of files\n\n\tprivate static readonly MAX_WINDOWS_JUMP_LIST_ENTRIES = 7;\n\n\t// Exclude some very common files from the dock/taskbar\n\tprivate static readonly COMMON_FILES_FILTER = [\n\t\t'COMMIT_EDITMSG',\n\t\t'MERGE_MSG'\n\t];\n\n\tprivate static readonly recentlyOpenedStorageKey = 'openedPathsList';\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _onDidChangeRecentlyOpened = this._register(new Emitter<void>());\n\treadonly onDidChangeRecentlyOpened: CommonEvent<void> = this._onDidChangeRecentlyOpened.event;\n\n\tprivate readonly macOSRecentDocumentsUpdater = this._register(new ThrottledDelayer<void>(800));\n\n\tconstructor(\n\t\t@IStateMainService private readonly stateMainService: IStateMainService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IWorkspacesManagementMainService private readonly workspacesManagementMainService: IWorkspacesManagementMainService,\n\t\t@ILifecycleMainService private readonly lifecycleMainService: ILifecycleMainService\n\t) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// Install window jump list after opening window\n\t\tthis.lifecycleMainService.when(LifecycleMainPhase.AfterWindowOpen).then(() => this.handleWindowsJumpList());\n\n\t\t// Add to history when entering workspace\n\t\tthis._register(this.workspacesManagementMainService.onDidEnterWorkspace(event => this.addRecentlyOpened([{ workspace: event.workspace }])));\n\t}\n\n\tprivate handleWindowsJumpList(): void {\n\t\tif (!isWindows) {\n\t\t\treturn; // only on windows\n\t\t}\n\n\t\tthis.updateWindowsJumpList();\n\t\tthis._register(this.onDidChangeRecentlyOpened(() => this.updateWindowsJumpList()));\n\t}\n\n\taddRecentlyOpened(recentToAdd: IRecent[]): void {\n\t\tconst workspaces: Array<IRecentFolder | IRecentWorkspace> = [];\n\t\tconst files: IRecentFile[] = [];\n\n\t\tfor (let recent of recentToAdd) {\n\n\t\t\t// Workspace\n\t\t\tif (isRecentWorkspace(recent)) {\n\t\t\t\tif (!this.workspacesManagementMainService.isUntitledWorkspace(recent.workspace) && this.indexOfWorkspace(workspaces, recent.workspace) === -1) {\n\t\t\t\t\tworkspaces.push(recent);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Folder\n\t\t\telse if (isRecentFolder(recent)) {\n\t\t\t\tif (this.indexOfFolder(workspaces, recent.folderUri) === -1) {\n\t\t\t\t\tworkspaces.push(recent);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// File\n\t\t\telse {\n\t\t\t\tconst alreadyExistsInHistory = this.indexOfFile(files, recent.fileUri) >= 0;\n\t\t\t\tconst shouldBeFiltered = recent.fileUri.scheme === Schemas.file && WorkspacesHistoryMainService.COMMON_FILES_FILTER.indexOf(basename(recent.fileUri)) >= 0;\n\n\t\t\t\tif (!alreadyExistsInHistory && !shouldBeFiltered) {\n\t\t\t\t\tfiles.push(recent);\n\n\t\t\t\t\t// Add to recent documents (Windows only, macOS later)\n\t\t\t\t\tif (isWindows && recent.fileUri.scheme === Schemas.file) {\n\t\t\t\t\t\tapp.addRecentDocument(recent.fileUri.fsPath);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.addEntriesFromStorage(workspaces, files);\n\n\t\tif (workspaces.length > WorkspacesHistoryMainService.MAX_TOTAL_RECENT_ENTRIES) {\n\t\t\tworkspaces.length = WorkspacesHistoryMainService.MAX_TOTAL_RECENT_ENTRIES;\n\t\t}\n\n\t\tif (files.length > WorkspacesHistoryMainService.MAX_TOTAL_RECENT_ENTRIES) {\n\t\t\tfiles.length = WorkspacesHistoryMainService.MAX_TOTAL_RECENT_ENTRIES;\n\t\t}\n\n\t\tthis.saveRecentlyOpened({ workspaces, files });\n\t\tthis._onDidChangeRecentlyOpened.fire();\n\n\t\t// Schedule update to recent documents on macOS dock\n\t\tif (isMacintosh) {\n\t\t\tthis.macOSRecentDocumentsUpdater.trigger(() => this.updateMacOSRecentDocuments());\n\t\t}\n\t}\n\n\tremoveRecentlyOpened(recentToRemove: URI[]): void {\n\t\tconst keep = (recent: IRecent) => {\n\t\t\tconst uri = this.location(recent);\n\t\t\tfor (const resourceToRemove of recentToRemove) {\n\t\t\t\tif (extUriBiasedIgnorePathCase.isEqual(resourceToRemove, uri)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\tconst mru = this.getRecentlyOpened();\n\t\tconst workspaces = mru.workspaces.filter(keep);\n\t\tconst files = mru.files.filter(keep);\n\n\t\tif (workspaces.length !== mru.workspaces.length || files.length !== mru.files.length) {\n\t\t\tthis.saveRecentlyOpened({ files, workspaces });\n\t\t\tthis._onDidChangeRecentlyOpened.fire();\n\n\t\t\t// Schedule update to recent documents on macOS dock\n\t\t\tif (isMacintosh) {\n\t\t\t\tthis.macOSRecentDocumentsUpdater.trigger(() => this.updateMacOSRecentDocuments());\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate async updateMacOSRecentDocuments(): Promise<void> {\n\t\tif (!isMacintosh) {\n\t\t\treturn;\n\t\t}\n\n\t\t// We clear all documents first to ensure an up-to-date view on the set. Since entries\n\t\t// can get deleted on disk, this ensures that the list is always valid\n\t\tapp.clearRecentDocuments();\n\n\t\tconst mru = this.getRecentlyOpened();\n\n\t\t// Collect max-N recent workspaces that are known to exist\n\t\tconst workspaceEntries: string[] = [];\n\t\tlet entries = 0;\n\t\tfor (let i = 0; i < mru.workspaces.length && entries < WorkspacesHistoryMainService.MAX_MACOS_DOCK_RECENT_WORKSPACES; i++) {\n\t\t\tconst loc = this.location(mru.workspaces[i]);\n\t\t\tif (loc.scheme === Schemas.file) {\n\t\t\t\tconst workspacePath = originalFSPath(loc);\n\t\t\t\tif (await Promises.exists(workspacePath)) {\n\t\t\t\t\tworkspaceEntries.push(workspacePath);\n\t\t\t\t\tentries++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Collect max-N recent files that are known to exist\n\t\tconst fileEntries: string[] = [];\n\t\tfor (let i = 0; i < mru.files.length && entries < WorkspacesHistoryMainService.MAX_MACOS_DOCK_RECENT_ENTRIES_TOTAL; i++) {\n\t\t\tconst loc = this.location(mru.files[i]);\n\t\t\tif (loc.scheme === Schemas.file) {\n\t\t\t\tconst filePath = originalFSPath(loc);\n\t\t\t\tif (\n\t\t\t\t\tWorkspacesHistoryMainService.COMMON_FILES_FILTER.includes(basename(loc)) || // skip some well known file entries\n\t\t\t\t\tworkspaceEntries.includes(filePath)\t\t\t\t\t\t\t\t\t\t\t// prefer a workspace entry over a file entry (e.g. for .code-workspace)\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (await Promises.exists(filePath)) {\n\t\t\t\t\tfileEntries.push(filePath);\n\t\t\t\t\tentries++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// The apple guidelines (https://developer.apple.com/design/human-interface-guidelines/macos/menus/menu-anatomy/)\n\t\t// explain that most recent entries should appear close to the interaction by the user (e.g. close to the\n\t\t// mouse click). Most native macOS applications that add recent documents to the dock, show the most recent document\n\t\t// to the bottom (because the dock menu is not appearing from top to bottom, but from the bottom to the top). As such\n\t\t// we fill in the entries in reverse order so that the most recent shows up at the bottom of the menu.\n\t\t//\n\t\t// On top of that, the maximum number of documents can be configured by the user (defaults to 10). To ensure that\n\t\t// we are not failing to show the most recent entries, we start by adding files first (in reverse order of recency)\n\t\t// and then add folders (in reverse order of recency). Given that strategy, we can ensure that the most recent\n\t\t// N folders are always appearing, even if the limit is low (https://github.com/microsoft/vscode/issues/74788)\n\t\tfileEntries.reverse().forEach(fileEntry => app.addRecentDocument(fileEntry));\n\t\tworkspaceEntries.reverse().forEach(workspaceEntry => app.addRecentDocument(workspaceEntry));\n\t}\n\n\tclearRecentlyOpened(): void {\n\t\tthis.saveRecentlyOpened({ workspaces: [], files: [] });\n\t\tapp.clearRecentDocuments();\n\n\t\t// Event\n\t\tthis._onDidChangeRecentlyOpened.fire();\n\t}\n\n\tgetRecentlyOpened(include?: ICodeWindow): IRecentlyOpened {\n\t\tconst workspaces: Array<IRecentFolder | IRecentWorkspace> = [];\n\t\tconst files: IRecentFile[] = [];\n\n\t\t// Add current workspace to beginning if set\n\t\tconst currentWorkspace = include?.config?.workspace;\n\t\tif (isWorkspaceIdentifier(currentWorkspace) && !this.workspacesManagementMainService.isUntitledWorkspace(currentWorkspace)) {\n\t\t\tworkspaces.push({ workspace: currentWorkspace });\n\t\t} else if (isSingleFolderWorkspaceIdentifier(currentWorkspace)) {\n\t\t\tworkspaces.push({ folderUri: currentWorkspace.uri });\n\t\t}\n\n\t\t// Add currently files to open to the beginning if any\n\t\tconst currentFiles = include?.config?.filesToOpenOrCreate;\n\t\tif (currentFiles) {\n\t\t\tfor (let currentFile of currentFiles) {\n\t\t\t\tconst fileUri = currentFile.fileUri;\n\t\t\t\tif (fileUri && this.indexOfFile(files, fileUri) === -1) {\n\t\t\t\t\tfiles.push({ fileUri });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.addEntriesFromStorage(workspaces, files);\n\n\t\treturn { workspaces, files };\n\t}\n\n\tprivate addEntriesFromStorage(workspaces: Array<IRecentFolder | IRecentWorkspace>, files: IRecentFile[]) {\n\n\t\t// Get from storage\n\t\tlet recents = this.getRecentlyOpenedFromStorage();\n\t\tfor (let recent of recents.workspaces) {\n\t\t\tlet index = isRecentFolder(recent) ? this.indexOfFolder(workspaces, recent.folderUri) : this.indexOfWorkspace(workspaces, recent.workspace);\n\t\t\tif (index >= 0) {\n\t\t\t\tworkspaces[index].label = workspaces[index].label || recent.label;\n\t\t\t} else {\n\t\t\t\tworkspaces.push(recent);\n\t\t\t}\n\t\t}\n\n\t\tfor (let recent of recents.files) {\n\t\t\tlet index = this.indexOfFile(files, recent.fileUri);\n\t\t\tif (index >= 0) {\n\t\t\t\tfiles[index].label = files[index].label || recent.label;\n\t\t\t} else {\n\t\t\t\tfiles.push(recent);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate getRecentlyOpenedFromStorage(): IRecentlyOpened {\n\t\tconst storedRecents = this.stateMainService.getItem<RecentlyOpenedStorageData>(WorkspacesHistoryMainService.recentlyOpenedStorageKey);\n\n\t\treturn restoreRecentlyOpened(storedRecents, this.logService);\n\t}\n\n\tprivate saveRecentlyOpened(recent: IRecentlyOpened): void {\n\t\tconst serialized = toStoreData(recent);\n\n\t\tthis.stateMainService.setItem(WorkspacesHistoryMainService.recentlyOpenedStorageKey, serialized);\n\t}\n\n\tupdateWindowsJumpList(): void {\n\t\tif (!isWindows) {\n\t\t\treturn; // only on windows\n\t\t}\n\n\t\tconst jumpList: JumpListCategory[] = [];\n\n\t\t// Tasks\n\t\tjumpList.push({\n\t\t\ttype: 'tasks',\n\t\t\titems: [\n\t\t\t\t{\n\t\t\t\t\ttype: 'task',\n\t\t\t\t\ttitle: localize('newWindow', \"New Window\"),\n\t\t\t\t\tdescription: localize('newWindowDesc', \"Opens a new window\"),\n\t\t\t\t\tprogram: process.execPath,\n\t\t\t\t\targs: '-n', // force new window\n\t\t\t\t\ticonPath: process.execPath,\n\t\t\t\t\ticonIndex: 0\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\n\t\t// Recent Workspaces\n\t\tif (this.getRecentlyOpened().workspaces.length > 0) {\n\n\t\t\t// The user might have meanwhile removed items from the jump list and we have to respect that\n\t\t\t// so we need to update our list of recent paths with the choice of the user to not add them again\n\t\t\t// Also: Windows will not show our custom category at all if there is any entry which was removed\n\t\t\t// by the user! See https://github.com/microsoft/vscode/issues/15052\n\t\t\tlet toRemove: URI[] = [];\n\t\t\tfor (let item of app.getJumpListSettings().removedItems) {\n\t\t\t\tconst args = item.args;\n\t\t\t\tif (args) {\n\t\t\t\t\tconst match = /^--(folder|file)-uri\\s+\"([^\"]+)\"$/.exec(args);\n\t\t\t\t\tif (match) {\n\t\t\t\t\t\ttoRemove.push(URI.parse(match[2]));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.removeRecentlyOpened(toRemove);\n\n\t\t\t// Add entries\n\t\t\tlet hasWorkspaces = false;\n\t\t\tconst items: JumpListItem[] = coalesce(this.getRecentlyOpened().workspaces.slice(0, WorkspacesHistoryMainService.MAX_WINDOWS_JUMP_LIST_ENTRIES).map(recent => {\n\t\t\t\tconst workspace = isRecentWorkspace(recent) ? recent.workspace : recent.folderUri;\n\n\t\t\t\tconst { title, description } = this.getWindowsJumpListLabel(workspace, recent.label);\n\t\t\t\tlet args;\n\t\t\t\tif (URI.isUri(workspace)) {\n\t\t\t\t\targs = `--folder-uri \"${workspace.toString()}\"`;\n\t\t\t\t} else {\n\t\t\t\t\thasWorkspaces = true;\n\t\t\t\t\targs = `--file-uri \"${workspace.configPath.toString()}\"`;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\ttype: 'task',\n\t\t\t\t\ttitle: title.substr(0, 255), \t\t\t\t// Windows seems to be picky around the length of entries\n\t\t\t\t\tdescription: description.substr(0, 255),\t// (see https://github.com/microsoft/vscode/issues/111177)\n\t\t\t\t\tprogram: process.execPath,\n\t\t\t\t\targs,\n\t\t\t\t\ticonPath: 'explorer.exe', // simulate folder icon\n\t\t\t\t\ticonIndex: 0\n\t\t\t\t};\n\t\t\t}));\n\n\t\t\tif (items.length > 0) {\n\t\t\t\tjumpList.push({\n\t\t\t\t\ttype: 'custom',\n\t\t\t\t\tname: hasWorkspaces ? localize('recentFoldersAndWorkspaces', \"Recent Folders & Workspaces\") : localize('recentFolders', \"Recent Folders\"),\n\t\t\t\t\titems\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t// Recent\n\t\tjumpList.push({\n\t\t\ttype: 'recent' // this enables to show files in the \"recent\" category\n\t\t});\n\n\t\ttry {\n\t\t\tapp.setJumpList(jumpList);\n\t\t} catch (error) {\n\t\t\tthis.logService.warn('updateWindowsJumpList#setJumpList', error); // since setJumpList is relatively new API, make sure to guard for errors\n\t\t}\n\t}\n\n\tprivate getWindowsJumpListLabel(workspace: IWorkspaceIdentifier | URI, recentLabel: string | undefined): { title: string; description: string } {\n\n\t\t// Prefer recent label\n\t\tif (recentLabel) {\n\t\t\treturn { title: splitName(recentLabel).name, description: recentLabel };\n\t\t}\n\n\t\t// Single Folder\n\t\tif (URI.isUri(workspace)) {\n\t\t\treturn { title: basename(workspace), description: this.renderJumpListPathDescription(workspace) };\n\t\t}\n\n\t\t// Workspace: Untitled\n\t\tif (this.workspacesManagementMainService.isUntitledWorkspace(workspace)) {\n\t\t\treturn { title: localize('untitledWorkspace', \"Untitled (Workspace)\"), description: '' };\n\t\t}\n\n\t\t// Workspace: normal\n\t\tlet filename = basename(workspace.configPath);\n\t\tif (filename.endsWith(WORKSPACE_EXTENSION)) {\n\t\t\tfilename = filename.substr(0, filename.length - WORKSPACE_EXTENSION.length - 1);\n\t\t}\n\n\t\treturn { title: localize('workspaceName', \"{0} (Workspace)\", filename), description: this.renderJumpListPathDescription(workspace.configPath) };\n\t}\n\n\tprivate renderJumpListPathDescription(uri: URI) {\n\t\treturn uri.scheme === 'file' ? normalizeDriveLetter(uri.fsPath) : uri.toString();\n\t}\n\n\tprivate location(recent: IRecent): URI {\n\t\tif (isRecentFolder(recent)) {\n\t\t\treturn recent.folderUri;\n\t\t}\n\n\t\tif (isRecentFile(recent)) {\n\t\t\treturn recent.fileUri;\n\t\t}\n\n\t\treturn recent.workspace.configPath;\n\t}\n\n\tprivate indexOfWorkspace(arr: IRecent[], candidate: IWorkspaceIdentifier): number {\n\t\treturn arr.findIndex(workspace => isRecentWorkspace(workspace) && workspace.workspace.id === candidate.id);\n\t}\n\n\tprivate indexOfFolder(arr: IRecent[], candidate: URI): number {\n\t\treturn arr.findIndex(folder => isRecentFolder(folder) && extUriBiasedIgnorePathCase.isEqual(folder.folderUri, candidate));\n\t}\n\n\tprivate indexOfFile(arr: IRecentFile[], candidate: URI): number {\n\t\treturn arr.findIndex(file => extUriBiasedIgnorePathCase.isEqual(file.fileUri, candidate));\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { app, BrowserWindow, KeyboardEvent, Menu, MenuItem, MenuItemConstructorOptions, WebContents } from 'electron';\nimport { WorkbenchActionExecutedClassification, WorkbenchActionExecutedEvent } from 'vs/base/common/actions';\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { mnemonicMenuLabel } from 'vs/base/common/labels';\nimport { isMacintosh, language } from 'vs/base/common/platform';\nimport { URI } from 'vs/base/common/uri';\nimport * as nls from 'vs/nls';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IEnvironmentMainService } from 'vs/platform/environment/electron-main/environmentMainService';\nimport { ILifecycleMainService } from 'vs/platform/lifecycle/electron-main/lifecycleMainService';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IMenubarData, IMenubarKeybinding, IMenubarMenu, IMenubarMenuRecentItemAction, isMenubarMenuItemAction, isMenubarMenuItemRecentAction, isMenubarMenuItemSeparator, isMenubarMenuItemSubmenu, MenubarMenuItem } from 'vs/platform/menubar/common/menubar';\nimport { INativeHostMainService } from 'vs/platform/native/electron-main/nativeHostMainService';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IStateMainService } from 'vs/platform/state/electron-main/state';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IUpdateService, StateType } from 'vs/platform/update/common/update';\nimport { getTitleBarStyle, INativeRunActionInWindowRequest, INativeRunKeybindingInWindowRequest, IWindowOpenable } from 'vs/platform/windows/common/windows';\nimport { IWindowsCountChangedEvent, IWindowsMainService, OpenContext } from 'vs/platform/windows/electron-main/windows';\nimport { IWorkspacesHistoryMainService } from 'vs/platform/workspaces/electron-main/workspacesHistoryMainService';\n\nconst telemetryFrom = 'menu';\n\ninterface IMenuItemClickHandler {\n\tinDevTools: (contents: WebContents) => void;\n\tinNoWindow: () => void;\n}\n\ntype IMenuItemInvocation = (\n\t{ type: 'commandId'; commandId: string; }\n\t| { type: 'keybinding'; userSettingsLabel: string; }\n);\n\ninterface IMenuItemWithKeybinding {\n\tuserSettingsLabel?: string;\n}\n\nexport class Menubar {\n\n\tprivate static readonly lastKnownMenubarStorageKey = 'lastKnownMenubarData';\n\n\tprivate willShutdown: boolean | undefined;\n\tprivate appMenuInstalled: boolean | undefined;\n\tprivate closedLastWindow: boolean;\n\tprivate noActiveWindow: boolean;\n\n\tprivate menuUpdater: RunOnceScheduler;\n\tprivate menuGC: RunOnceScheduler;\n\n\t// Array to keep menus around so that GC doesn't cause crash as explained in #55347\n\t// TODO@sbatten Remove this when fixed upstream by Electron\n\tprivate oldMenus: Menu[];\n\n\tprivate menubarMenus: { [id: string]: IMenubarMenu };\n\n\tprivate keybindings: { [commandId: string]: IMenubarKeybinding };\n\n\tprivate readonly fallbackMenuHandlers: { [id: string]: (menuItem: MenuItem, browserWindow: BrowserWindow | undefined, event: KeyboardEvent) => void } = Object.create(null);\n\n\tconstructor(\n\t\t@IUpdateService private readonly updateService: IUpdateService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IWindowsMainService private readonly windowsMainService: IWindowsMainService,\n\t\t@IEnvironmentMainService private readonly environmentMainService: IEnvironmentMainService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t\t@IWorkspacesHistoryMainService private readonly workspacesHistoryMainService: IWorkspacesHistoryMainService,\n\t\t@IStateMainService private readonly stateMainService: IStateMainService,\n\t\t@ILifecycleMainService private readonly lifecycleMainService: ILifecycleMainService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@INativeHostMainService private readonly nativeHostMainService: INativeHostMainService,\n\t\t@IProductService private readonly productService: IProductService\n\t) {\n\t\tthis.menuUpdater = new RunOnceScheduler(() => this.doUpdateMenu(), 0);\n\n\t\tthis.menuGC = new RunOnceScheduler(() => { this.oldMenus = []; }, 10000);\n\n\t\tthis.menubarMenus = Object.create(null);\n\t\tthis.keybindings = Object.create(null);\n\n\t\tif (isMacintosh || getTitleBarStyle(this.configurationService) === 'native') {\n\t\t\tthis.restoreCachedMenubarData();\n\t\t}\n\n\t\tthis.addFallbackHandlers();\n\n\t\tthis.closedLastWindow = false;\n\t\tthis.noActiveWindow = false;\n\n\t\tthis.oldMenus = [];\n\n\t\tthis.install();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate restoreCachedMenubarData() {\n\t\tconst menubarData = this.stateMainService.getItem<IMenubarData>(Menubar.lastKnownMenubarStorageKey);\n\t\tif (menubarData) {\n\t\t\tif (menubarData.menus) {\n\t\t\t\tthis.menubarMenus = menubarData.menus;\n\t\t\t}\n\n\t\t\tif (menubarData.keybindings) {\n\t\t\t\tthis.keybindings = menubarData.keybindings;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate addFallbackHandlers(): void {\n\n\t\t// File Menu Items\n\t\tthis.fallbackMenuHandlers['workbench.action.files.newUntitledFile'] = (menuItem, win, event) => this.windowsMainService.openEmptyWindow({ context: OpenContext.MENU, contextWindowId: win?.id });\n\t\tthis.fallbackMenuHandlers['workbench.action.newWindow'] = (menuItem, win, event) => this.windowsMainService.openEmptyWindow({ context: OpenContext.MENU, contextWindowId: win?.id });\n\t\tthis.fallbackMenuHandlers['workbench.action.files.openFileFolder'] = (menuItem, win, event) => this.nativeHostMainService.pickFileFolderAndOpen(undefined, { forceNewWindow: this.isOptionClick(event), telemetryExtraData: { from: telemetryFrom } });\n\t\tthis.fallbackMenuHandlers['workbench.action.openWorkspace'] = (menuItem, win, event) => this.nativeHostMainService.pickWorkspaceAndOpen(undefined, { forceNewWindow: this.isOptionClick(event), telemetryExtraData: { from: telemetryFrom } });\n\n\t\t// Recent Menu Items\n\t\tthis.fallbackMenuHandlers['workbench.action.clearRecentFiles'] = () => this.workspacesHistoryMainService.clearRecentlyOpened();\n\n\t\t// Help Menu Items\n\t\tconst twitterUrl = this.productService.twitterUrl;\n\t\tif (twitterUrl) {\n\t\t\tthis.fallbackMenuHandlers['workbench.action.openTwitterUrl'] = () => this.openUrl(twitterUrl, 'openTwitterUrl');\n\t\t}\n\n\t\tconst requestFeatureUrl = this.productService.requestFeatureUrl;\n\t\tif (requestFeatureUrl) {\n\t\t\tthis.fallbackMenuHandlers['workbench.action.openRequestFeatureUrl'] = () => this.openUrl(requestFeatureUrl, 'openUserVoiceUrl');\n\t\t}\n\n\t\tconst reportIssueUrl = this.productService.reportIssueUrl;\n\t\tif (reportIssueUrl) {\n\t\t\tthis.fallbackMenuHandlers['workbench.action.openIssueReporter'] = () => this.openUrl(reportIssueUrl, 'openReportIssues');\n\t\t}\n\n\t\tconst licenseUrl = this.productService.licenseUrl;\n\t\tif (licenseUrl) {\n\t\t\tthis.fallbackMenuHandlers['workbench.action.openLicenseUrl'] = () => {\n\t\t\t\tif (language) {\n\t\t\t\t\tconst queryArgChar = licenseUrl.indexOf('?') > 0 ? '&' : '?';\n\t\t\t\t\tthis.openUrl(`${licenseUrl}${queryArgChar}lang=${language}`, 'openLicenseUrl');\n\t\t\t\t} else {\n\t\t\t\t\tthis.openUrl(licenseUrl, 'openLicenseUrl');\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tconst privacyStatementUrl = this.productService.privacyStatementUrl;\n\t\tif (privacyStatementUrl && licenseUrl) {\n\t\t\tthis.fallbackMenuHandlers['workbench.action.openPrivacyStatementUrl'] = () => {\n\t\t\t\tthis.openUrl(privacyStatementUrl, 'openPrivacyStatement');\n\t\t\t};\n\t\t}\n\t}\n\n\tprivate registerListeners(): void {\n\t\t// Keep flag when app quits\n\t\tthis.lifecycleMainService.onWillShutdown(() => this.willShutdown = true);\n\n\t\t// Listen to some events from window service to update menu\n\t\tthis.windowsMainService.onDidChangeWindowsCount(e => this.onDidChangeWindowsCount(e));\n\t\tthis.nativeHostMainService.onDidBlurWindow(() => this.onDidChangeWindowFocus());\n\t\tthis.nativeHostMainService.onDidFocusWindow(() => this.onDidChangeWindowFocus());\n\t}\n\n\tprivate get currentEnableMenuBarMnemonics(): boolean {\n\t\tlet enableMenuBarMnemonics = this.configurationService.getValue('window.enableMenuBarMnemonics');\n\t\tif (typeof enableMenuBarMnemonics !== 'boolean') {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn enableMenuBarMnemonics;\n\t}\n\n\tprivate get currentEnableNativeTabs(): boolean {\n\t\tif (!isMacintosh) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlet enableNativeTabs = this.configurationService.getValue('window.nativeTabs');\n\t\tif (typeof enableNativeTabs !== 'boolean') {\n\t\t\treturn false;\n\t\t}\n\t\treturn enableNativeTabs;\n\t}\n\n\tupdateMenu(menubarData: IMenubarData, windowId: number) {\n\t\tthis.menubarMenus = menubarData.menus;\n\t\tthis.keybindings = menubarData.keybindings;\n\n\t\t// Save off new menu and keybindings\n\t\tthis.stateMainService.setItem(Menubar.lastKnownMenubarStorageKey, menubarData);\n\n\t\tthis.scheduleUpdateMenu();\n\t}\n\n\n\tprivate scheduleUpdateMenu(): void {\n\t\tthis.menuUpdater.schedule(); // buffer multiple attempts to update the menu\n\t}\n\n\tprivate doUpdateMenu(): void {\n\n\t\t// Due to limitations in Electron, it is not possible to update menu items dynamically. The suggested\n\t\t// workaround from Electron is to set the application menu again.\n\t\t// See also https://github.com/electron/electron/issues/846\n\t\t//\n\t\t// Run delayed to prevent updating menu while it is open\n\t\tif (!this.willShutdown) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (!this.willShutdown) {\n\t\t\t\t\tthis.install();\n\t\t\t\t}\n\t\t\t}, 10 /* delay this because there is an issue with updating a menu when it is open */);\n\t\t}\n\t}\n\n\tprivate onDidChangeWindowsCount(e: IWindowsCountChangedEvent): void {\n\t\tif (!isMacintosh) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Update menu if window count goes from N > 0 or 0 > N to update menu item enablement\n\t\tif ((e.oldCount === 0 && e.newCount > 0) || (e.oldCount > 0 && e.newCount === 0)) {\n\t\t\tthis.closedLastWindow = e.newCount === 0;\n\t\t\tthis.scheduleUpdateMenu();\n\t\t}\n\t}\n\n\tprivate onDidChangeWindowFocus(): void {\n\t\tif (!isMacintosh) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.noActiveWindow = !BrowserWindow.getFocusedWindow();\n\t\tthis.scheduleUpdateMenu();\n\t}\n\n\tprivate install(): void {\n\t\t// Store old menu in our array to avoid GC to collect the menu and crash. See #55347\n\t\t// TODO@sbatten Remove this when fixed upstream by Electron\n\t\tconst oldMenu = Menu.getApplicationMenu();\n\t\tif (oldMenu) {\n\t\t\tthis.oldMenus.push(oldMenu);\n\t\t}\n\n\t\t// If we don't have a menu yet, set it to null to avoid the electron menu.\n\t\t// This should only happen on the first launch ever\n\t\tif (Object.keys(this.menubarMenus).length === 0) {\n\t\t\tMenu.setApplicationMenu(isMacintosh ? new Menu() : null);\n\t\t\treturn;\n\t\t}\n\n\t\t// Menus\n\t\tconst menubar = new Menu();\n\n\t\t// Mac: Application\n\t\tlet macApplicationMenuItem: MenuItem;\n\t\tif (isMacintosh) {\n\t\t\tconst applicationMenu = new Menu();\n\t\t\tmacApplicationMenuItem = new MenuItem({ label: this.productService.nameShort, submenu: applicationMenu });\n\t\t\tthis.setMacApplicationMenu(applicationMenu);\n\t\t\tmenubar.append(macApplicationMenuItem);\n\t\t}\n\n\t\t// Mac: Dock\n\t\tif (isMacintosh && !this.appMenuInstalled) {\n\t\t\tthis.appMenuInstalled = true;\n\n\t\t\tconst dockMenu = new Menu();\n\t\t\tdockMenu.append(new MenuItem({ label: this.mnemonicLabel(nls.localize({ key: 'miNewWindow', comment: ['&& denotes a mnemonic'] }, \"New &&Window\")), click: () => this.windowsMainService.openEmptyWindow({ context: OpenContext.DOCK }) }));\n\n\t\t\tapp.dock.setMenu(dockMenu);\n\t\t}\n\n\t\t// File\n\t\tif (this.shouldDrawMenu('File')) {\n\t\t\tconst fileMenu = new Menu();\n\t\t\tconst fileMenuItem = new MenuItem({ label: this.mnemonicLabel(nls.localize({ key: 'mFile', comment: ['&& denotes a mnemonic'] }, \"&&File\")), submenu: fileMenu });\n\t\t\tthis.setMenuById(fileMenu, 'File');\n\t\t\tmenubar.append(fileMenuItem);\n\t\t}\n\n\t\t// Edit\n\t\tif (this.shouldDrawMenu('Edit')) {\n\t\t\tconst editMenu = new Menu();\n\t\t\tconst editMenuItem = new MenuItem({ label: this.mnemonicLabel(nls.localize({ key: 'mEdit', comment: ['&& denotes a mnemonic'] }, \"&&Edit\")), submenu: editMenu });\n\t\t\tthis.setMenuById(editMenu, 'Edit');\n\t\t\tmenubar.append(editMenuItem);\n\t\t}\n\n\t\t// Selection\n\t\tif (this.shouldDrawMenu('Selection')) {\n\t\t\tconst selectionMenu = new Menu();\n\t\t\tconst selectionMenuItem = new MenuItem({ label: this.mnemonicLabel(nls.localize({ key: 'mSelection', comment: ['&& denotes a mnemonic'] }, \"&&Selection\")), submenu: selectionMenu });\n\t\t\tthis.setMenuById(selectionMenu, 'Selection');\n\t\t\tmenubar.append(selectionMenuItem);\n\t\t}\n\n\t\t// View\n\t\tif (this.shouldDrawMenu('View')) {\n\t\t\tconst viewMenu = new Menu();\n\t\t\tconst viewMenuItem = new MenuItem({ label: this.mnemonicLabel(nls.localize({ key: 'mView', comment: ['&& denotes a mnemonic'] }, \"&&View\")), submenu: viewMenu });\n\t\t\tthis.setMenuById(viewMenu, 'View');\n\t\t\tmenubar.append(viewMenuItem);\n\t\t}\n\n\t\t// Go\n\t\tif (this.shouldDrawMenu('Go')) {\n\t\t\tconst gotoMenu = new Menu();\n\t\t\tconst gotoMenuItem = new MenuItem({ label: this.mnemonicLabel(nls.localize({ key: 'mGoto', comment: ['&& denotes a mnemonic'] }, \"&&Go\")), submenu: gotoMenu });\n\t\t\tthis.setMenuById(gotoMenu, 'Go');\n\t\t\tmenubar.append(gotoMenuItem);\n\t\t}\n\n\t\t// Debug\n\t\tif (this.shouldDrawMenu('Run')) {\n\t\t\tconst debugMenu = new Menu();\n\t\t\tconst debugMenuItem = new MenuItem({ label: this.mnemonicLabel(nls.localize({ key: 'mRun', comment: ['&& denotes a mnemonic'] }, \"&&Run\")), submenu: debugMenu });\n\t\t\tthis.setMenuById(debugMenu, 'Run');\n\t\t\tmenubar.append(debugMenuItem);\n\t\t}\n\n\t\t// Terminal\n\t\tif (this.shouldDrawMenu('Terminal')) {\n\t\t\tconst terminalMenu = new Menu();\n\t\t\tconst terminalMenuItem = new MenuItem({ label: this.mnemonicLabel(nls.localize({ key: 'mTerminal', comment: ['&& denotes a mnemonic'] }, \"&&Terminal\")), submenu: terminalMenu });\n\t\t\tthis.setMenuById(terminalMenu, 'Terminal');\n\t\t\tmenubar.append(terminalMenuItem);\n\t\t}\n\n\t\t// Mac: Window\n\t\tlet macWindowMenuItem: MenuItem | undefined;\n\t\tif (this.shouldDrawMenu('Window')) {\n\t\t\tconst windowMenu = new Menu();\n\t\t\tmacWindowMenuItem = new MenuItem({ label: this.mnemonicLabel(nls.localize('mWindow', \"Window\")), submenu: windowMenu, role: 'window' });\n\t\t\tthis.setMacWindowMenu(windowMenu);\n\t\t}\n\n\t\tif (macWindowMenuItem) {\n\t\t\tmenubar.append(macWindowMenuItem);\n\t\t}\n\n\t\t// Help\n\t\tif (this.shouldDrawMenu('Help')) {\n\t\t\tconst helpMenu = new Menu();\n\t\t\tconst helpMenuItem = new MenuItem({ label: this.mnemonicLabel(nls.localize({ key: 'mHelp', comment: ['&& denotes a mnemonic'] }, \"&&Help\")), submenu: helpMenu, role: 'help' });\n\t\t\tthis.setMenuById(helpMenu, 'Help');\n\t\t\tmenubar.append(helpMenuItem);\n\t\t}\n\n\t\tif (menubar.items && menubar.items.length > 0) {\n\t\t\tMenu.setApplicationMenu(menubar);\n\t\t} else {\n\t\t\tMenu.setApplicationMenu(null);\n\t\t}\n\n\t\t// Dispose of older menus after some time\n\t\tthis.menuGC.schedule();\n\t}\n\n\tprivate setMacApplicationMenu(macApplicationMenu: Menu): void {\n\t\tconst about = this.createMenuItem(nls.localize('mAbout', \"About {0}\", this.productService.nameLong), 'workbench.action.showAboutDialog');\n\t\tconst checkForUpdates = this.getUpdateMenuItems();\n\n\t\tlet preferences;\n\t\tif (this.shouldDrawMenu('Preferences')) {\n\t\t\tconst preferencesMenu = new Menu();\n\t\t\tthis.setMenuById(preferencesMenu, 'Preferences');\n\t\t\tpreferences = new MenuItem({ label: this.mnemonicLabel(nls.localize({ key: 'miPreferences', comment: ['&& denotes a mnemonic'] }, \"&&Preferences\")), submenu: preferencesMenu });\n\t\t}\n\n\t\tconst servicesMenu = new Menu();\n\t\tconst services = new MenuItem({ label: nls.localize('mServices', \"Services\"), role: 'services', submenu: servicesMenu });\n\t\tconst hide = new MenuItem({ label: nls.localize('mHide', \"Hide {0}\", this.productService.nameLong), role: 'hide', accelerator: 'Command+H' });\n\t\tconst hideOthers = new MenuItem({ label: nls.localize('mHideOthers', \"Hide Others\"), role: 'hideOthers', accelerator: 'Command+Alt+H' });\n\t\tconst showAll = new MenuItem({ label: nls.localize('mShowAll', \"Show All\"), role: 'unhide' });\n\t\tconst quit = new MenuItem(this.likeAction('workbench.action.quit', {\n\t\t\tlabel: nls.localize('miQuit', \"Quit {0}\", this.productService.nameLong), click: () => {\n\t\t\t\tconst lastActiveWindow = this.windowsMainService.getLastActiveWindow();\n\t\t\t\tif (\n\t\t\t\t\tthis.windowsMainService.getWindowCount() === 0 || \t// allow to quit when no more windows are open\n\t\t\t\t\t!!BrowserWindow.getFocusedWindow() ||\t\t\t\t// allow to quit when window has focus (fix for https://github.com/microsoft/vscode/issues/39191)\n\t\t\t\t\tlastActiveWindow?.isMinimized()\t\t\t\t\t\t// allow to quit when window has no focus but is minimized (https://github.com/microsoft/vscode/issues/63000)\n\t\t\t\t) {\n\t\t\t\t\tthis.nativeHostMainService.quit(undefined);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\n\t\tconst actions = [about];\n\t\tactions.push(...checkForUpdates);\n\n\t\tif (preferences) {\n\t\t\tactions.push(...[\n\t\t\t\t__separator__(),\n\t\t\t\tpreferences\n\t\t\t]);\n\t\t}\n\n\t\tactions.push(...[\n\t\t\t__separator__(),\n\t\t\tservices,\n\t\t\t__separator__(),\n\t\t\thide,\n\t\t\thideOthers,\n\t\t\tshowAll,\n\t\t\t__separator__(),\n\t\t\tquit\n\t\t]);\n\n\t\tactions.forEach(i => macApplicationMenu.append(i));\n\t}\n\n\tprivate shouldDrawMenu(menuId: string): boolean {\n\t\t// We need to draw an empty menu to override the electron default\n\t\tif (!isMacintosh && getTitleBarStyle(this.configurationService) === 'custom') {\n\t\t\treturn false;\n\t\t}\n\n\t\tswitch (menuId) {\n\t\t\tcase 'File':\n\t\t\tcase 'Help':\n\t\t\t\tif (isMacintosh) {\n\t\t\t\t\treturn (this.windowsMainService.getWindowCount() === 0 && this.closedLastWindow) || (this.windowsMainService.getWindowCount() > 0 && this.noActiveWindow) || (!!this.menubarMenus && !!this.menubarMenus[menuId]);\n\t\t\t\t}\n\n\t\t\tcase 'Window':\n\t\t\t\tif (isMacintosh) {\n\t\t\t\t\treturn (this.windowsMainService.getWindowCount() === 0 && this.closedLastWindow) || (this.windowsMainService.getWindowCount() > 0 && this.noActiveWindow) || !!this.menubarMenus;\n\t\t\t\t}\n\n\t\t\tdefault:\n\t\t\t\treturn this.windowsMainService.getWindowCount() > 0 && (!!this.menubarMenus && !!this.menubarMenus[menuId]);\n\t\t}\n\t}\n\n\n\tprivate setMenu(menu: Menu, items: Array<MenubarMenuItem>) {\n\t\titems.forEach((item: MenubarMenuItem) => {\n\t\t\tif (isMenubarMenuItemSeparator(item)) {\n\t\t\t\tmenu.append(__separator__());\n\t\t\t} else if (isMenubarMenuItemSubmenu(item)) {\n\t\t\t\tconst submenu = new Menu();\n\t\t\t\tconst submenuItem = new MenuItem({ label: this.mnemonicLabel(item.label), submenu });\n\t\t\t\tthis.setMenu(submenu, item.submenu.items);\n\t\t\t\tmenu.append(submenuItem);\n\t\t\t} else if (isMenubarMenuItemRecentAction(item)) {\n\t\t\t\tmenu.append(this.createOpenRecentMenuItem(item));\n\t\t\t} else if (isMenubarMenuItemAction(item)) {\n\t\t\t\tif (item.id === 'workbench.action.showAboutDialog') {\n\t\t\t\t\tthis.insertCheckForUpdatesItems(menu);\n\t\t\t\t}\n\n\t\t\t\tif (isMacintosh) {\n\t\t\t\t\tif ((this.windowsMainService.getWindowCount() === 0 && this.closedLastWindow) ||\n\t\t\t\t\t\t(this.windowsMainService.getWindowCount() > 0 && this.noActiveWindow)) {\n\t\t\t\t\t\t// In the fallback scenario, we are either disabled or using a fallback handler\n\t\t\t\t\t\tif (this.fallbackMenuHandlers[item.id]) {\n\t\t\t\t\t\t\tmenu.append(new MenuItem(this.likeAction(item.id, { label: this.mnemonicLabel(item.label), click: this.fallbackMenuHandlers[item.id] })));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmenu.append(this.createMenuItem(item.label, item.id, false, item.checked));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmenu.append(this.createMenuItem(item.label, item.id, item.enabled === false ? false : true, !!item.checked));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tmenu.append(this.createMenuItem(item.label, item.id, item.enabled === false ? false : true, !!item.checked));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate setMenuById(menu: Menu, menuId: string): void {\n\t\tif (this.menubarMenus && this.menubarMenus[menuId]) {\n\t\t\tthis.setMenu(menu, this.menubarMenus[menuId].items);\n\t\t}\n\t}\n\n\tprivate insertCheckForUpdatesItems(menu: Menu) {\n\t\tconst updateItems = this.getUpdateMenuItems();\n\t\tif (updateItems.length) {\n\t\t\tupdateItems.forEach(i => menu.append(i));\n\t\t\tmenu.append(__separator__());\n\t\t}\n\t}\n\n\tprivate createOpenRecentMenuItem(item: IMenubarMenuRecentItemAction): MenuItem {\n\t\tconst revivedUri = URI.revive(item.uri);\n\t\tconst commandId = item.id;\n\t\tconst openable: IWindowOpenable =\n\t\t\t(commandId === 'openRecentFile') ? { fileUri: revivedUri } :\n\t\t\t\t(commandId === 'openRecentWorkspace') ? { workspaceUri: revivedUri } : { folderUri: revivedUri };\n\n\t\treturn new MenuItem(this.likeAction(commandId, {\n\t\t\tlabel: item.label,\n\t\t\tclick: (menuItem, win, event) => {\n\t\t\t\tconst openInNewWindow = this.isOptionClick(event);\n\t\t\t\tconst success = this.windowsMainService.open({\n\t\t\t\t\tcontext: OpenContext.MENU,\n\t\t\t\t\tcli: this.environmentMainService.args,\n\t\t\t\t\turisToOpen: [openable],\n\t\t\t\t\tforceNewWindow: openInNewWindow,\n\t\t\t\t\tgotoLineMode: false,\n\t\t\t\t\tremoteAuthority: item.remoteAuthority\n\t\t\t\t}).length > 0;\n\n\t\t\t\tif (!success) {\n\t\t\t\t\tthis.workspacesHistoryMainService.removeRecentlyOpened([revivedUri]);\n\t\t\t\t}\n\t\t\t}\n\t\t}, false));\n\t}\n\n\tprivate isOptionClick(event: KeyboardEvent): boolean {\n\t\treturn !!(event && ((!isMacintosh && (event.ctrlKey || event.shiftKey)) || (isMacintosh && (event.metaKey || event.altKey))));\n\t}\n\n\tprivate createRoleMenuItem(label: string, commandId: string, role: any): MenuItem {\n\t\tconst options: MenuItemConstructorOptions = {\n\t\t\tlabel: this.mnemonicLabel(label),\n\t\t\trole,\n\t\t\tenabled: true\n\t\t};\n\n\t\treturn new MenuItem(this.withKeybinding(commandId, options));\n\t}\n\n\tprivate setMacWindowMenu(macWindowMenu: Menu): void {\n\t\tconst minimize = new MenuItem({ label: nls.localize('mMinimize', \"Minimize\"), role: 'minimize', accelerator: 'Command+M', enabled: this.windowsMainService.getWindowCount() > 0 });\n\t\tconst zoom = new MenuItem({ label: nls.localize('mZoom', \"Zoom\"), role: 'zoom', enabled: this.windowsMainService.getWindowCount() > 0 });\n\t\tconst bringAllToFront = new MenuItem({ label: nls.localize('mBringToFront', \"Bring All to Front\"), role: 'front', enabled: this.windowsMainService.getWindowCount() > 0 });\n\t\tconst switchWindow = this.createMenuItem(nls.localize({ key: 'miSwitchWindow', comment: ['&& denotes a mnemonic'] }, \"Switch &&Window...\"), 'workbench.action.switchWindow');\n\n\t\tconst nativeTabMenuItems: MenuItem[] = [];\n\t\tif (this.currentEnableNativeTabs) {\n\t\t\tnativeTabMenuItems.push(__separator__());\n\n\t\t\tnativeTabMenuItems.push(this.createMenuItem(nls.localize('mNewTab', \"New Tab\"), 'workbench.action.newWindowTab'));\n\n\t\t\tnativeTabMenuItems.push(this.createRoleMenuItem(nls.localize('mShowPreviousTab', \"Show Previous Tab\"), 'workbench.action.showPreviousWindowTab', 'selectPreviousTab'));\n\t\t\tnativeTabMenuItems.push(this.createRoleMenuItem(nls.localize('mShowNextTab', \"Show Next Tab\"), 'workbench.action.showNextWindowTab', 'selectNextTab'));\n\t\t\tnativeTabMenuItems.push(this.createRoleMenuItem(nls.localize('mMoveTabToNewWindow', \"Move Tab to New Window\"), 'workbench.action.moveWindowTabToNewWindow', 'moveTabToNewWindow'));\n\t\t\tnativeTabMenuItems.push(this.createRoleMenuItem(nls.localize('mMergeAllWindows', \"Merge All Windows\"), 'workbench.action.mergeAllWindowTabs', 'mergeAllWindows'));\n\t\t}\n\n\t\t[\n\t\t\tminimize,\n\t\t\tzoom,\n\t\t\t__separator__(),\n\t\t\tswitchWindow,\n\t\t\t...nativeTabMenuItems,\n\t\t\t__separator__(),\n\t\t\tbringAllToFront\n\t\t].forEach(item => macWindowMenu.append(item));\n\t}\n\n\tprivate getUpdateMenuItems(): MenuItem[] {\n\t\tconst state = this.updateService.state;\n\n\t\tswitch (state.type) {\n\t\t\tcase StateType.Uninitialized:\n\t\t\t\treturn [];\n\n\t\t\tcase StateType.Idle:\n\t\t\t\treturn [new MenuItem({\n\t\t\t\t\tlabel: this.mnemonicLabel(nls.localize('miCheckForUpdates', \"Check for &&Updates...\")), click: () => setTimeout(() => {\n\t\t\t\t\t\tthis.reportMenuActionTelemetry('CheckForUpdate');\n\t\t\t\t\t\tthis.updateService.checkForUpdates(true);\n\t\t\t\t\t}, 0)\n\t\t\t\t})];\n\n\t\t\tcase StateType.CheckingForUpdates:\n\t\t\t\treturn [new MenuItem({ label: nls.localize('miCheckingForUpdates', \"Checking for Updates...\"), enabled: false })];\n\n\t\t\tcase StateType.AvailableForDownload:\n\t\t\t\treturn [new MenuItem({\n\t\t\t\t\tlabel: this.mnemonicLabel(nls.localize('miDownloadUpdate', \"D&&ownload Available Update\")), click: () => {\n\t\t\t\t\t\tthis.updateService.downloadUpdate();\n\t\t\t\t\t}\n\t\t\t\t})];\n\n\t\t\tcase StateType.Downloading:\n\t\t\t\treturn [new MenuItem({ label: nls.localize('miDownloadingUpdate', \"Downloading Update...\"), enabled: false })];\n\n\t\t\tcase StateType.Downloaded:\n\t\t\t\treturn [new MenuItem({\n\t\t\t\t\tlabel: this.mnemonicLabel(nls.localize('miInstallUpdate', \"Install &&Update...\")), click: () => {\n\t\t\t\t\t\tthis.reportMenuActionTelemetry('InstallUpdate');\n\t\t\t\t\t\tthis.updateService.applyUpdate();\n\t\t\t\t\t}\n\t\t\t\t})];\n\n\t\t\tcase StateType.Updating:\n\t\t\t\treturn [new MenuItem({ label: nls.localize('miInstallingUpdate', \"Installing Update...\"), enabled: false })];\n\n\t\t\tcase StateType.Ready:\n\t\t\t\treturn [new MenuItem({\n\t\t\t\t\tlabel: this.mnemonicLabel(nls.localize('miRestartToUpdate', \"Restart to &&Update\")), click: () => {\n\t\t\t\t\t\tthis.reportMenuActionTelemetry('RestartToUpdate');\n\t\t\t\t\t\tthis.updateService.quitAndInstall();\n\t\t\t\t\t}\n\t\t\t\t})];\n\t\t}\n\t}\n\n\tprivate createMenuItem(label: string, commandId: string | string[], enabled?: boolean, checked?: boolean): MenuItem;\n\tprivate createMenuItem(label: string, click: () => void, enabled?: boolean, checked?: boolean): MenuItem;\n\tprivate createMenuItem(arg1: string, arg2: any, arg3?: boolean, arg4?: boolean): MenuItem {\n\t\tconst label = this.mnemonicLabel(arg1);\n\t\tconst click: () => void = (typeof arg2 === 'function') ? arg2 : (menuItem: MenuItem & IMenuItemWithKeybinding, win: BrowserWindow, event: KeyboardEvent) => {\n\t\t\tconst userSettingsLabel = menuItem ? menuItem.userSettingsLabel : null;\n\t\t\tlet commandId = arg2;\n\t\t\tif (Array.isArray(arg2)) {\n\t\t\t\tcommandId = this.isOptionClick(event) ? arg2[1] : arg2[0]; // support alternative action if we got multiple action Ids and the option key was pressed while invoking\n\t\t\t}\n\n\t\t\tif (userSettingsLabel && event.triggeredByAccelerator) {\n\t\t\t\tthis.runActionInRenderer({ type: 'keybinding', userSettingsLabel });\n\t\t\t} else {\n\t\t\t\tthis.runActionInRenderer({ type: 'commandId', commandId });\n\t\t\t}\n\t\t};\n\t\tconst enabled = typeof arg3 === 'boolean' ? arg3 : this.windowsMainService.getWindowCount() > 0;\n\t\tconst checked = typeof arg4 === 'boolean' ? arg4 : false;\n\n\t\tconst options: MenuItemConstructorOptions = {\n\t\t\tlabel,\n\t\t\tclick,\n\t\t\tenabled\n\t\t};\n\n\t\tif (checked) {\n\t\t\toptions.type = 'checkbox';\n\t\t\toptions.checked = checked;\n\t\t}\n\n\t\tlet commandId: string | undefined;\n\t\tif (typeof arg2 === 'string') {\n\t\t\tcommandId = arg2;\n\t\t} else if (Array.isArray(arg2)) {\n\t\t\tcommandId = arg2[0];\n\t\t}\n\n\t\tif (isMacintosh) {\n\n\t\t\t// Add role for special case menu items\n\t\t\tif (commandId === 'editor.action.clipboardCutAction') {\n\t\t\t\toptions.role = 'cut';\n\t\t\t} else if (commandId === 'editor.action.clipboardCopyAction') {\n\t\t\t\toptions.role = 'copy';\n\t\t\t} else if (commandId === 'editor.action.clipboardPasteAction') {\n\t\t\t\toptions.role = 'paste';\n\t\t\t}\n\n\t\t\t// Add context aware click handlers for special case menu items\n\t\t\tif (commandId === 'undo') {\n\t\t\t\toptions.click = this.makeContextAwareClickHandler(click, {\n\t\t\t\t\tinDevTools: devTools => devTools.undo(),\n\t\t\t\t\tinNoWindow: () => Menu.sendActionToFirstResponder('undo:')\n\t\t\t\t});\n\t\t\t} else if (commandId === 'redo') {\n\t\t\t\toptions.click = this.makeContextAwareClickHandler(click, {\n\t\t\t\t\tinDevTools: devTools => devTools.redo(),\n\t\t\t\t\tinNoWindow: () => Menu.sendActionToFirstResponder('redo:')\n\t\t\t\t});\n\t\t\t} else if (commandId === 'editor.action.selectAll') {\n\t\t\t\toptions.click = this.makeContextAwareClickHandler(click, {\n\t\t\t\t\tinDevTools: devTools => devTools.selectAll(),\n\t\t\t\t\tinNoWindow: () => Menu.sendActionToFirstResponder('selectAll:')\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn new MenuItem(this.withKeybinding(commandId, options));\n\t}\n\n\tprivate makeContextAwareClickHandler(click: (menuItem: MenuItem, win: BrowserWindow, event: KeyboardEvent) => void, contextSpecificHandlers: IMenuItemClickHandler): (menuItem: MenuItem, win: BrowserWindow | undefined, event: KeyboardEvent) => void {\n\t\treturn (menuItem: MenuItem, win: BrowserWindow | undefined, event: KeyboardEvent) => {\n\n\t\t\t// No Active Window\n\t\t\tconst activeWindow = BrowserWindow.getFocusedWindow();\n\t\t\tif (!activeWindow) {\n\t\t\t\treturn contextSpecificHandlers.inNoWindow();\n\t\t\t}\n\n\t\t\t// DevTools focused\n\t\t\tif (activeWindow.webContents.isDevToolsFocused() &&\n\t\t\t\tactiveWindow.webContents.devToolsWebContents) {\n\t\t\t\treturn contextSpecificHandlers.inDevTools(activeWindow.webContents.devToolsWebContents);\n\t\t\t}\n\n\t\t\t// Finally execute command in Window\n\t\t\tclick(menuItem, win || activeWindow, event);\n\t\t};\n\t}\n\n\tprivate runActionInRenderer(invocation: IMenuItemInvocation): void {\n\t\t// We make sure to not run actions when the window has no focus, this helps\n\t\t// for https://github.com/microsoft/vscode/issues/25907 and specifically for\n\t\t// https://github.com/microsoft/vscode/issues/11928\n\t\t// Still allow to run when the last active window is minimized though for\n\t\t// https://github.com/microsoft/vscode/issues/63000\n\t\tlet activeBrowserWindow = BrowserWindow.getFocusedWindow();\n\t\tif (!activeBrowserWindow) {\n\t\t\tconst lastActiveWindow = this.windowsMainService.getLastActiveWindow();\n\t\t\tif (lastActiveWindow?.isMinimized()) {\n\t\t\t\tactiveBrowserWindow = lastActiveWindow.win;\n\t\t\t}\n\t\t}\n\n\t\tconst activeWindow = activeBrowserWindow ? this.windowsMainService.getWindowById(activeBrowserWindow.id) : undefined;\n\t\tif (activeWindow) {\n\t\t\tthis.logService.trace('menubar#runActionInRenderer', invocation);\n\n\t\t\tif (isMacintosh && !this.environmentMainService.isBuilt && !activeWindow.isReady) {\n\t\t\t\tif ((invocation.type === 'commandId' && invocation.commandId === 'workbench.action.toggleDevTools') || (invocation.type !== 'commandId' && invocation.userSettingsLabel === 'alt+cmd+i')) {\n\t\t\t\t\t// prevent this action from running twice on macOS (https://github.com/microsoft/vscode/issues/62719)\n\t\t\t\t\t// we already register a keybinding in bootstrap-window.js for opening developer tools in case something\n\t\t\t\t\t// goes wrong and that keybinding is only removed when the application has loaded (= window ready).\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (invocation.type === 'commandId') {\n\t\t\t\tconst runActionPayload: INativeRunActionInWindowRequest = { id: invocation.commandId, from: 'menu' };\n\t\t\t\tactiveWindow.sendWhenReady('vscode:runAction', CancellationToken.None, runActionPayload);\n\t\t\t} else {\n\t\t\t\tconst runKeybindingPayload: INativeRunKeybindingInWindowRequest = { userSettingsLabel: invocation.userSettingsLabel };\n\t\t\t\tactiveWindow.sendWhenReady('vscode:runKeybinding', CancellationToken.None, runKeybindingPayload);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.logService.trace('menubar#runActionInRenderer: no active window found', invocation);\n\t\t}\n\t}\n\n\tprivate withKeybinding(commandId: string | undefined, options: MenuItemConstructorOptions & IMenuItemWithKeybinding): MenuItemConstructorOptions {\n\t\tconst binding = typeof commandId === 'string' ? this.keybindings[commandId] : undefined;\n\n\t\t// Apply binding if there is one\n\t\tif (binding?.label) {\n\n\t\t\t// if the binding is native, we can just apply it\n\t\t\tif (binding.isNative !== false) {\n\t\t\t\toptions.accelerator = binding.label;\n\t\t\t\toptions.userSettingsLabel = binding.userSettingsLabel;\n\t\t\t}\n\n\t\t\t// the keybinding is not native so we cannot show it as part of the accelerator of\n\t\t\t// the menu item. we fallback to a different strategy so that we always display it\n\t\t\telse if (typeof options.label === 'string') {\n\t\t\t\tconst bindingIndex = options.label.indexOf('[');\n\t\t\t\tif (bindingIndex >= 0) {\n\t\t\t\t\toptions.label = `${options.label.substr(0, bindingIndex)} [${binding.label}]`;\n\t\t\t\t} else {\n\t\t\t\t\toptions.label = `${options.label} [${binding.label}]`;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Unset bindings if there is none\n\t\telse {\n\t\t\toptions.accelerator = undefined;\n\t\t}\n\n\t\treturn options;\n\t}\n\n\tprivate likeAction(commandId: string, options: MenuItemConstructorOptions, setAccelerator = !options.accelerator): MenuItemConstructorOptions {\n\t\tif (setAccelerator) {\n\t\t\toptions = this.withKeybinding(commandId, options);\n\t\t}\n\n\t\tconst originalClick = options.click;\n\t\toptions.click = (item, window, event) => {\n\t\t\tthis.reportMenuActionTelemetry(commandId);\n\t\t\tif (originalClick) {\n\t\t\t\toriginalClick(item, window, event);\n\t\t\t}\n\t\t};\n\n\t\treturn options;\n\t}\n\n\tprivate openUrl(url: string, id: string): void {\n\t\tthis.nativeHostMainService.openExternal(undefined, url);\n\t\tthis.reportMenuActionTelemetry(id);\n\t}\n\n\tprivate reportMenuActionTelemetry(id: string): void {\n\t\tthis.telemetryService.publicLog2<WorkbenchActionExecutedEvent, WorkbenchActionExecutedClassification>('workbenchActionExecuted', { id, from: telemetryFrom });\n\t}\n\n\tprivate mnemonicLabel(label: string): string {\n\t\treturn mnemonicMenuLabel(label, !this.currentEnableMenuBarMnemonics);\n\t}\n}\n\nfunction __separator__(): MenuItem {\n\treturn new MenuItem({ type: 'separator' });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator, IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ILifecycleMainService, LifecycleMainPhase } from 'vs/platform/lifecycle/electron-main/lifecycleMainService';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { ICommonMenubarService, IMenubarData } from 'vs/platform/menubar/common/menubar';\nimport { Menubar } from 'vs/platform/menubar/electron-main/menubar';\n\nexport const IMenubarMainService = createDecorator<IMenubarMainService>('menubarMainService');\n\nexport interface IMenubarMainService extends ICommonMenubarService {\n\treadonly _serviceBrand: undefined;\n}\n\nexport class MenubarMainService implements IMenubarMainService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate menubar: Promise<Menubar>;\n\n\tconstructor(\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@ILifecycleMainService private readonly lifecycleMainService: ILifecycleMainService,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tthis.menubar = this.installMenuBarAfterWindowOpen();\n\t}\n\n\tprivate async installMenuBarAfterWindowOpen(): Promise<Menubar> {\n\t\tawait this.lifecycleMainService.when(LifecycleMainPhase.AfterWindowOpen);\n\n\t\treturn this.instantiationService.createInstance(Menubar);\n\t}\n\n\tasync updateMenubar(windowId: number, menus: IMenubarData): Promise<void> {\n\t\tthis.logService.trace('menubarService#updateMenubar', windowId);\n\n\t\tconst menubar = await this.menubar;\n\t\tmenubar.updateMenu(menus, windowId);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { app, BrowserWindow, MessageBoxOptions, nativeTheme, WebContents } from 'electron';\nimport { statSync } from 'fs';\nimport { hostname, release } from 'os';\nimport { coalesce, distinct, firstOrDefault } from 'vs/base/common/arrays';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { CharCode } from 'vs/base/common/charCode';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { isWindowsDriveLetter, parseLineAndColumnAware, sanitizeFilePath, toSlashes } from 'vs/base/common/extpath';\nimport { once } from 'vs/base/common/functional';\nimport { getPathLabel, mnemonicButtonLabel } from 'vs/base/common/labels';\nimport { Disposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport { basename, join, normalize, posix } from 'vs/base/common/path';\nimport { getMarks, mark } from 'vs/base/common/performance';\nimport { IProcessEnvironment, isMacintosh, isWindows } from 'vs/base/common/platform';\nimport { cwd } from 'vs/base/common/process';\nimport { extUriBiasedIgnorePathCase, isEqualAuthority, normalizePath, originalFSPath, removeTrailingPathSeparator } from 'vs/base/common/resources';\nimport { assertIsDefined, withNullAsUndefined } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { IBackupMainService } from 'vs/platform/backup/electron-main/backup';\nimport { IEmptyWindowBackupInfo } from 'vs/platform/backup/node/backup';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IDialogMainService } from 'vs/platform/dialogs/electron-main/dialogMainService';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { IEnvironmentMainService } from 'vs/platform/environment/electron-main/environmentMainService';\nimport { FileType, IFileService } from 'vs/platform/files/common/files';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ILifecycleMainService } from 'vs/platform/lifecycle/electron-main/lifecycleMainService';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport product from 'vs/platform/product/common/product';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IProtocolMainService } from 'vs/platform/protocol/electron-main/protocol';\nimport { getRemoteAuthority } from 'vs/platform/remote/common/remoteHosts';\nimport { IStateMainService } from 'vs/platform/state/electron-main/state';\nimport { IAddFoldersRequest, INativeOpenFileRequest, INativeWindowConfiguration, IOpenEmptyWindowOptions, IPath, IPathsToWaitFor, isFileToOpen, isFolderToOpen, isWorkspaceToOpen, IWindowOpenable, IWindowSettings } from 'vs/platform/windows/common/windows';\nimport { CodeWindow } from 'vs/platform/windows/electron-main/window';\nimport { ICodeWindow, IOpenConfiguration, IOpenEmptyConfiguration, IWindowsCountChangedEvent, IWindowsMainService, OpenContext, UnloadReason } from 'vs/platform/windows/electron-main/windows';\nimport { findWindowOnExtensionDevelopmentPath, findWindowOnFile, findWindowOnWorkspaceOrFolder } from 'vs/platform/windows/electron-main/windowsFinder';\nimport { IWindowState, WindowsStateHandler } from 'vs/platform/windows/electron-main/windowsStateHandler';\nimport { hasWorkspaceFileExtension, IRecent, ISingleFolderWorkspaceIdentifier, isSingleFolderWorkspaceIdentifier, isWorkspaceIdentifier, IWorkspaceIdentifier } from 'vs/platform/workspaces/common/workspaces';\nimport { getSingleFolderWorkspaceIdentifier, getWorkspaceIdentifier } from 'vs/platform/workspaces/electron-main/workspaces';\nimport { IWorkspacesHistoryMainService } from 'vs/platform/workspaces/electron-main/workspacesHistoryMainService';\nimport { IWorkspacesManagementMainService } from 'vs/platform/workspaces/electron-main/workspacesManagementMainService';\n\n//#region Helper Interfaces\n\ntype RestoreWindowsSetting = 'preserve' | 'all' | 'folders' | 'one' | 'none';\n\ninterface IOpenBrowserWindowOptions {\n\treadonly userEnv?: IProcessEnvironment;\n\treadonly cli?: NativeParsedArgs;\n\n\treadonly workspace?: IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier;\n\n\treadonly remoteAuthority?: string;\n\n\treadonly initialStartup?: boolean;\n\n\treadonly filesToOpen?: IFilesToOpen;\n\n\treadonly forceNewWindow?: boolean;\n\treadonly forceNewTabbedWindow?: boolean;\n\treadonly windowToUse?: ICodeWindow;\n\n\treadonly emptyWindowBackupInfo?: IEmptyWindowBackupInfo;\n}\n\ninterface IPathResolveOptions {\n\n\t/**\n\t * By default, resolving a path will check\n\t * if the path exists. This can be disabled\n\t * with this flag.\n\t */\n\treadonly ignoreFileNotFound?: boolean;\n\n\t/**\n\t * Will reject a path if it points to a transient\n\t * workspace as indicated by a `transient: true`\n\t * property in the workspace file.\n\t */\n\treadonly rejectTransientWorkspaces?: boolean;\n\n\t/**\n\t * If enabled, will resolve the path line/column\n\t * aware and properly remove this information\n\t * from the resulting file path.\n\t */\n\treadonly gotoLineMode?: boolean;\n\n\t/**\n\t * Forces to resolve the provided path as workspace\n\t * file instead of opening it as a file.\n\t */\n\treadonly forceOpenWorkspaceAsFile?: boolean;\n\n\t/**\n\t * The remoteAuthority to use if the URL to open is\n\t * neither `file` nor `vscode-remote`.\n\t */\n\treadonly remoteAuthority?: string;\n}\n\ninterface IFilesToOpen {\n\treadonly remoteAuthority?: string;\n\n\tfilesToOpenOrCreate: IPath[];\n\tfilesToDiff: IPath[];\n\tfilesToWait?: IPathsToWaitFor;\n}\n\ninterface IPathToOpen extends IPath {\n\n\t// the workspace to open\n\treadonly workspace?: IWorkspaceIdentifier | ISingleFolderWorkspaceIdentifier;\n\n\t// whether the path is considered to be transient or not\n\t// for example, a transient workspace should not add to\n\t// the workspaces history and should never restore\n\treadonly transient?: boolean;\n\n\t// the backup path to use\n\treadonly backupPath?: string;\n\n\t// the remote authority for the Code instance to open. Undefined if not remote.\n\treadonly remoteAuthority?: string;\n\n\t// optional label for the recent history\n\tlabel?: string;\n}\n\ninterface IWorkspacePathToOpen extends IPathToOpen {\n\treadonly workspace: IWorkspaceIdentifier;\n}\n\ninterface ISingleFolderWorkspacePathToOpen extends IPathToOpen {\n\treadonly workspace: ISingleFolderWorkspaceIdentifier;\n}\n\nfunction isWorkspacePathToOpen(path: IPathToOpen | undefined): path is IWorkspacePathToOpen {\n\treturn isWorkspaceIdentifier(path?.workspace);\n}\n\nfunction isSingleFolderWorkspacePathToOpen(path: IPathToOpen | undefined): path is ISingleFolderWorkspacePathToOpen {\n\treturn isSingleFolderWorkspaceIdentifier(path?.workspace);\n}\n\n//#endregion\n\nexport class WindowsMainService extends Disposable implements IWindowsMainService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate static readonly WINDOWS: ICodeWindow[] = [];\n\n\tprivate readonly _onDidOpenWindow = this._register(new Emitter<ICodeWindow>());\n\treadonly onDidOpenWindow = this._onDidOpenWindow.event;\n\n\tprivate readonly _onDidSignalReadyWindow = this._register(new Emitter<ICodeWindow>());\n\treadonly onDidSignalReadyWindow = this._onDidSignalReadyWindow.event;\n\n\tprivate readonly _onDidDestroyWindow = this._register(new Emitter<ICodeWindow>());\n\treadonly onDidDestroyWindow = this._onDidDestroyWindow.event;\n\n\tprivate readonly _onDidChangeWindowsCount = this._register(new Emitter<IWindowsCountChangedEvent>());\n\treadonly onDidChangeWindowsCount = this._onDidChangeWindowsCount.event;\n\n\tprivate readonly windowsStateHandler = this._register(new WindowsStateHandler(this, this.stateMainService, this.lifecycleMainService, this.logService, this.configurationService));\n\n\tconstructor(\n\t\tprivate readonly machineId: string,\n\t\tprivate readonly initialUserEnv: IProcessEnvironment,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IStateMainService private readonly stateMainService: IStateMainService,\n\t\t@IEnvironmentMainService private readonly environmentMainService: IEnvironmentMainService,\n\t\t@ILifecycleMainService private readonly lifecycleMainService: ILifecycleMainService,\n\t\t@IBackupMainService private readonly backupMainService: IBackupMainService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IWorkspacesHistoryMainService private readonly workspacesHistoryMainService: IWorkspacesHistoryMainService,\n\t\t@IWorkspacesManagementMainService private readonly workspacesManagementMainService: IWorkspacesManagementMainService,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IDialogMainService private readonly dialogMainService: IDialogMainService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IProtocolMainService private readonly protocolMainService: IProtocolMainService\n\t) {\n\t\tsuper();\n\n\t\tthis.registerListeners();\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// Signal a window is ready after having entered a workspace\n\t\tthis._register(this.workspacesManagementMainService.onDidEnterWorkspace(event => this._onDidSignalReadyWindow.fire(event.window)));\n\n\t\t// Update valid roots in protocol service for extension dev windows\n\t\tthis._register(this.onDidSignalReadyWindow(window => {\n\t\t\tif (window.config?.extensionDevelopmentPath || window.config?.extensionTestsPath) {\n\t\t\t\tconst disposables = new DisposableStore();\n\t\t\t\tdisposables.add(Event.any(window.onDidClose, window.onDidDestroy)(() => disposables.dispose()));\n\n\t\t\t\t// Allow access to extension development path\n\t\t\t\tif (window.config.extensionDevelopmentPath) {\n\t\t\t\t\tfor (const extensionDevelopmentPath of window.config.extensionDevelopmentPath) {\n\t\t\t\t\t\tdisposables.add(this.protocolMainService.addValidFileRoot(URI.file(extensionDevelopmentPath)));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Allow access to extension tests path\n\t\t\t\tif (window.config.extensionTestsPath) {\n\t\t\t\t\tdisposables.add(this.protocolMainService.addValidFileRoot(URI.file(window.config.extensionTestsPath)));\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\topenEmptyWindow(openConfig: IOpenEmptyConfiguration, options?: IOpenEmptyWindowOptions): ICodeWindow[] {\n\t\tlet cli = this.environmentMainService.args;\n\t\tconst remoteAuthority = options?.remoteAuthority || undefined;\n\t\tconst forceEmpty = true;\n\t\tconst forceReuseWindow = options?.forceReuseWindow;\n\t\tconst forceNewWindow = !forceReuseWindow;\n\n\t\treturn this.open({ ...openConfig, cli, forceEmpty, forceNewWindow, forceReuseWindow, remoteAuthority });\n\t}\n\n\topenExistingWindow(window: ICodeWindow, openConfig: IOpenConfiguration): void {\n\n\t\t// Bring window to front\n\t\twindow.focus();\n\n\t\t// Handle --wait\n\t\tthis.handleWaitMarkerFile(openConfig, [window]);\n\t}\n\n\topen(openConfig: IOpenConfiguration): ICodeWindow[] {\n\t\tthis.logService.trace('windowsManager#open');\n\n\t\tif (openConfig.addMode && (openConfig.initialStartup || !this.getLastActiveWindow())) {\n\t\t\topenConfig.addMode = false; // Make sure addMode is only enabled if we have an active window\n\t\t}\n\n\t\tconst foldersToAdd: ISingleFolderWorkspacePathToOpen[] = [];\n\t\tconst foldersToOpen: ISingleFolderWorkspacePathToOpen[] = [];\n\n\t\tconst workspacesToOpen: IWorkspacePathToOpen[] = [];\n\t\tconst untitledWorkspacesToRestore: IWorkspacePathToOpen[] = [];\n\n\t\tconst emptyWindowsWithBackupsToRestore: IEmptyWindowBackupInfo[] = [];\n\n\t\tlet filesToOpen: IFilesToOpen | undefined;\n\t\tlet emptyToOpen = 0;\n\n\t\t// Identify things to open from open config\n\t\tconst pathsToOpen = this.getPathsToOpen(openConfig);\n\t\tthis.logService.trace('windowsManager#open pathsToOpen', pathsToOpen);\n\t\tfor (const path of pathsToOpen) {\n\t\t\tif (isSingleFolderWorkspacePathToOpen(path)) {\n\t\t\t\tif (openConfig.addMode) {\n\t\t\t\t\t// When run with --add, take the folders that are to be opened as\n\t\t\t\t\t// folders that should be added to the currently active window.\n\t\t\t\t\tfoldersToAdd.push(path);\n\t\t\t\t} else {\n\t\t\t\t\tfoldersToOpen.push(path);\n\t\t\t\t}\n\t\t\t} else if (isWorkspacePathToOpen(path)) {\n\t\t\t\tworkspacesToOpen.push(path);\n\t\t\t} else if (path.fileUri) {\n\t\t\t\tif (!filesToOpen) {\n\t\t\t\t\tfilesToOpen = { filesToOpenOrCreate: [], filesToDiff: [], remoteAuthority: path.remoteAuthority };\n\t\t\t\t}\n\t\t\t\tfilesToOpen.filesToOpenOrCreate.push(path);\n\t\t\t} else if (path.backupPath) {\n\t\t\t\temptyWindowsWithBackupsToRestore.push({ backupFolder: basename(path.backupPath), remoteAuthority: path.remoteAuthority });\n\t\t\t} else {\n\t\t\t\temptyToOpen++;\n\t\t\t}\n\t\t}\n\n\t\t// When run with --diff, take the first 2 files to open as files to diff\n\t\tif (openConfig.diffMode && filesToOpen && filesToOpen.filesToOpenOrCreate.length >= 2) {\n\t\t\tfilesToOpen.filesToDiff = filesToOpen.filesToOpenOrCreate.slice(0, 2);\n\t\t\tfilesToOpen.filesToOpenOrCreate = [];\n\t\t}\n\n\t\t// When run with --wait, make sure we keep the paths to wait for\n\t\tif (filesToOpen && openConfig.waitMarkerFileURI) {\n\t\t\tfilesToOpen.filesToWait = { paths: [...filesToOpen.filesToDiff, ...filesToOpen.filesToOpenOrCreate], waitMarkerFileUri: openConfig.waitMarkerFileURI };\n\t\t}\n\n\t\t// These are windows to restore because of hot-exit or from previous session (only performed once on startup!)\n\t\tif (openConfig.initialStartup) {\n\n\t\t\t// Untitled workspaces are always restored\n\t\t\tuntitledWorkspacesToRestore.push(...this.workspacesManagementMainService.getUntitledWorkspacesSync());\n\t\t\tworkspacesToOpen.push(...untitledWorkspacesToRestore);\n\n\t\t\t// Empty windows with backups are always restored\n\t\t\temptyWindowsWithBackupsToRestore.push(...this.backupMainService.getEmptyWindowBackupPaths());\n\t\t} else {\n\t\t\temptyWindowsWithBackupsToRestore.length = 0;\n\t\t}\n\n\t\t// Open based on config\n\t\tconst { windows: usedWindows, filesOpenedInWindow } = this.doOpen(openConfig, workspacesToOpen, foldersToOpen, emptyWindowsWithBackupsToRestore, emptyToOpen, filesToOpen, foldersToAdd);\n\n\t\tthis.logService.trace(`windowsManager#open used window count ${usedWindows.length} (workspacesToOpen: ${workspacesToOpen.length}, foldersToOpen: ${foldersToOpen.length}, emptyToRestore: ${emptyWindowsWithBackupsToRestore.length}, emptyToOpen: ${emptyToOpen})`);\n\n\t\t// Make sure to pass focus to the most relevant of the windows if we open multiple\n\t\tif (usedWindows.length > 1) {\n\n\t\t\t// 1.) focus window we opened files in always with highest priority\n\t\t\tif (filesOpenedInWindow) {\n\t\t\t\tfilesOpenedInWindow.focus();\n\t\t\t}\n\n\t\t\t// Otherwise, find a good window based on open params\n\t\t\telse {\n\t\t\t\tconst focusLastActive = this.windowsStateHandler.state.lastActiveWindow && !openConfig.forceEmpty && !openConfig.cli._.length && !openConfig.cli['file-uri'] && !openConfig.cli['folder-uri'] && !(openConfig.urisToOpen && openConfig.urisToOpen.length);\n\t\t\t\tlet focusLastOpened = true;\n\t\t\t\tlet focusLastWindow = true;\n\n\t\t\t\t// 2.) focus last active window if we are not instructed to open any paths\n\t\t\t\tif (focusLastActive) {\n\t\t\t\t\tconst lastActiveWindow = usedWindows.filter(window => this.windowsStateHandler.state.lastActiveWindow && window.backupPath === this.windowsStateHandler.state.lastActiveWindow.backupPath);\n\t\t\t\t\tif (lastActiveWindow.length) {\n\t\t\t\t\t\tlastActiveWindow[0].focus();\n\t\t\t\t\t\tfocusLastOpened = false;\n\t\t\t\t\t\tfocusLastWindow = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// 3.) if instructed to open paths, focus last window which is not restored\n\t\t\t\tif (focusLastOpened) {\n\t\t\t\t\tfor (let i = usedWindows.length - 1; i >= 0; i--) {\n\t\t\t\t\t\tconst usedWindow = usedWindows[i];\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t(usedWindow.openedWorkspace && untitledWorkspacesToRestore.some(workspace => usedWindow.openedWorkspace && workspace.workspace.id === usedWindow.openedWorkspace.id)) ||\t// skip over restored workspace\n\t\t\t\t\t\t\t(usedWindow.backupPath && emptyWindowsWithBackupsToRestore.some(empty => usedWindow.backupPath && empty.backupFolder === basename(usedWindow.backupPath)))\t\t\t\t\t\t\t// skip over restored empty window\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tusedWindow.focus();\n\t\t\t\t\t\tfocusLastWindow = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// 4.) finally, always ensure to have at least last used window focused\n\t\t\t\tif (focusLastWindow) {\n\t\t\t\t\tusedWindows[usedWindows.length - 1].focus();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Remember in recent document list (unless this opens for extension development)\n\t\t// Also do not add paths when files are opened for diffing, only if opened individually\n\t\tconst isDiff = filesToOpen && filesToOpen.filesToDiff.length > 0;\n\t\tif (!usedWindows.some(window => window.isExtensionDevelopmentHost) && !isDiff && !openConfig.noRecentEntry) {\n\t\t\tconst recents: IRecent[] = [];\n\t\t\tfor (const pathToOpen of pathsToOpen) {\n\t\t\t\tif (isWorkspacePathToOpen(pathToOpen) && !pathToOpen.transient /* never add transient workspaces to history */) {\n\t\t\t\t\trecents.push({ label: pathToOpen.label, workspace: pathToOpen.workspace, remoteAuthority: pathToOpen.remoteAuthority });\n\t\t\t\t} else if (isSingleFolderWorkspacePathToOpen(pathToOpen)) {\n\t\t\t\t\trecents.push({ label: pathToOpen.label, folderUri: pathToOpen.workspace.uri, remoteAuthority: pathToOpen.remoteAuthority });\n\t\t\t\t} else if (pathToOpen.fileUri) {\n\t\t\t\t\trecents.push({ label: pathToOpen.label, fileUri: pathToOpen.fileUri, remoteAuthority: pathToOpen.remoteAuthority });\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.workspacesHistoryMainService.addRecentlyOpened(recents);\n\t\t}\n\n\t\t// Handle --wait\n\t\tthis.handleWaitMarkerFile(openConfig, usedWindows);\n\n\t\treturn usedWindows;\n\t}\n\n\tprivate handleWaitMarkerFile(openConfig: IOpenConfiguration, usedWindows: ICodeWindow[]): void {\n\n\t\t// If we got started with --wait from the CLI, we need to signal to the outside when the window\n\t\t// used for the edit operation is closed or loaded to a different folder so that the waiting\n\t\t// process can continue. We do this by deleting the waitMarkerFilePath.\n\t\tconst waitMarkerFileURI = openConfig.waitMarkerFileURI;\n\t\tif (openConfig.context === OpenContext.CLI && waitMarkerFileURI && usedWindows.length === 1 && usedWindows[0]) {\n\t\t\t(async () => {\n\t\t\t\tawait usedWindows[0].whenClosedOrLoaded;\n\n\t\t\t\ttry {\n\t\t\t\t\tawait this.fileService.del(waitMarkerFileURI);\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// ignore - could have been deleted from the window already\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\t}\n\n\tprivate doOpen(\n\t\topenConfig: IOpenConfiguration,\n\t\tworkspacesToOpen: IWorkspacePathToOpen[],\n\t\tfoldersToOpen: ISingleFolderWorkspacePathToOpen[],\n\t\temptyToRestore: IEmptyWindowBackupInfo[],\n\t\temptyToOpen: number,\n\t\tfilesToOpen: IFilesToOpen | undefined,\n\t\tfoldersToAdd: ISingleFolderWorkspacePathToOpen[]\n\t): { windows: ICodeWindow[], filesOpenedInWindow: ICodeWindow | undefined } {\n\n\t\t// Keep track of used windows and remember\n\t\t// if files have been opened in one of them\n\t\tconst usedWindows: ICodeWindow[] = [];\n\t\tlet filesOpenedInWindow: ICodeWindow | undefined = undefined;\n\t\tfunction addUsedWindow(window: ICodeWindow, openedFiles?: boolean): void {\n\t\t\tusedWindows.push(window);\n\n\t\t\tif (openedFiles) {\n\t\t\t\tfilesOpenedInWindow = window;\n\t\t\t\tfilesToOpen = undefined; // reset `filesToOpen` since files have been opened\n\t\t\t}\n\t\t}\n\n\t\t// Settings can decide if files/folders open in new window or not\n\t\tlet { openFolderInNewWindow, openFilesInNewWindow } = this.shouldOpenNewWindow(openConfig);\n\n\t\t// Handle folders to add by looking for the last active workspace (not on initial startup)\n\t\tif (!openConfig.initialStartup && foldersToAdd.length > 0) {\n\t\t\tconst authority = foldersToAdd[0].remoteAuthority;\n\t\t\tconst lastActiveWindow = this.getLastActiveWindowForAuthority(authority);\n\t\t\tif (lastActiveWindow) {\n\t\t\t\taddUsedWindow(this.doAddFoldersToExistingWindow(lastActiveWindow, foldersToAdd.map(folderToAdd => folderToAdd.workspace.uri)));\n\t\t\t}\n\t\t}\n\n\t\t// Handle files to open/diff or to create when we dont open a folder and we do not restore any\n\t\t// folder/untitled from hot-exit by trying to open them in the window that fits best\n\t\tconst potentialNewWindowsCount = foldersToOpen.length + workspacesToOpen.length + emptyToRestore.length;\n\t\tif (filesToOpen && potentialNewWindowsCount === 0) {\n\n\t\t\t// Find suitable window or folder path to open files in\n\t\t\tconst fileToCheck = filesToOpen.filesToOpenOrCreate[0] || filesToOpen.filesToDiff[0];\n\n\t\t\t// only look at the windows with correct authority\n\t\t\tconst windows = this.getWindows().filter(window => filesToOpen && isEqualAuthority(window.remoteAuthority, filesToOpen.remoteAuthority));\n\n\t\t\t// figure out a good window to open the files in if any\n\t\t\t// with a fallback to the last active window.\n\t\t\t//\n\t\t\t// in case `openFilesInNewWindow` is enforced, we skip\n\t\t\t// this step.\n\t\t\tlet windowToUseForFiles: ICodeWindow | undefined = undefined;\n\t\t\tif (fileToCheck?.fileUri && !openFilesInNewWindow) {\n\t\t\t\tif (openConfig.context === OpenContext.DESKTOP || openConfig.context === OpenContext.CLI || openConfig.context === OpenContext.DOCK) {\n\t\t\t\t\twindowToUseForFiles = findWindowOnFile(windows, fileToCheck.fileUri, workspace => workspace.configPath.scheme === Schemas.file ? this.workspacesManagementMainService.resolveLocalWorkspaceSync(workspace.configPath) : undefined);\n\t\t\t\t}\n\n\t\t\t\tif (!windowToUseForFiles) {\n\t\t\t\t\twindowToUseForFiles = this.doGetLastActiveWindow(windows);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// We found a window to open the files in\n\t\t\tif (windowToUseForFiles) {\n\n\t\t\t\t// Window is workspace\n\t\t\t\tif (isWorkspaceIdentifier(windowToUseForFiles.openedWorkspace)) {\n\t\t\t\t\tworkspacesToOpen.push({ workspace: windowToUseForFiles.openedWorkspace, remoteAuthority: windowToUseForFiles.remoteAuthority });\n\t\t\t\t}\n\n\t\t\t\t// Window is single folder\n\t\t\t\telse if (isSingleFolderWorkspaceIdentifier(windowToUseForFiles.openedWorkspace)) {\n\t\t\t\t\tfoldersToOpen.push({ workspace: windowToUseForFiles.openedWorkspace, remoteAuthority: windowToUseForFiles.remoteAuthority });\n\t\t\t\t}\n\n\t\t\t\t// Window is empty\n\t\t\t\telse {\n\t\t\t\t\taddUsedWindow(this.doOpenFilesInExistingWindow(openConfig, windowToUseForFiles, filesToOpen), true);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Finally, if no window or folder is found, just open the files in an empty window\n\t\t\telse {\n\t\t\t\taddUsedWindow(this.openInBrowserWindow({\n\t\t\t\t\tuserEnv: openConfig.userEnv,\n\t\t\t\t\tcli: openConfig.cli,\n\t\t\t\t\tinitialStartup: openConfig.initialStartup,\n\t\t\t\t\tfilesToOpen,\n\t\t\t\t\tforceNewWindow: true,\n\t\t\t\t\tremoteAuthority: filesToOpen.remoteAuthority,\n\t\t\t\t\tforceNewTabbedWindow: openConfig.forceNewTabbedWindow\n\t\t\t\t}), true);\n\t\t\t}\n\t\t}\n\n\t\t// Handle workspaces to open (instructed and to restore)\n\t\tconst allWorkspacesToOpen = distinct(workspacesToOpen, workspace => workspace.workspace.id); // prevent duplicates\n\t\tif (allWorkspacesToOpen.length > 0) {\n\n\t\t\t// Check for existing instances\n\t\t\tconst windowsOnWorkspace = coalesce(allWorkspacesToOpen.map(workspaceToOpen => findWindowOnWorkspaceOrFolder(this.getWindows(), workspaceToOpen.workspace.configPath)));\n\t\t\tif (windowsOnWorkspace.length > 0) {\n\t\t\t\tconst windowOnWorkspace = windowsOnWorkspace[0];\n\t\t\t\tconst filesToOpenInWindow = isEqualAuthority(filesToOpen?.remoteAuthority, windowOnWorkspace.remoteAuthority) ? filesToOpen : undefined;\n\n\t\t\t\t// Do open files\n\t\t\t\taddUsedWindow(this.doOpenFilesInExistingWindow(openConfig, windowOnWorkspace, filesToOpenInWindow), !!filesToOpenInWindow);\n\n\t\t\t\topenFolderInNewWindow = true; // any other folders to open must open in new window then\n\t\t\t}\n\n\t\t\t// Open remaining ones\n\t\t\tallWorkspacesToOpen.forEach(workspaceToOpen => {\n\t\t\t\tif (windowsOnWorkspace.some(window => window.openedWorkspace && window.openedWorkspace.id === workspaceToOpen.workspace.id)) {\n\t\t\t\t\treturn; // ignore folders that are already open\n\t\t\t\t}\n\n\t\t\t\tconst remoteAuthority = workspaceToOpen.remoteAuthority;\n\t\t\t\tconst filesToOpenInWindow = isEqualAuthority(filesToOpen?.remoteAuthority, remoteAuthority) ? filesToOpen : undefined;\n\n\t\t\t\t// Do open folder\n\t\t\t\taddUsedWindow(this.doOpenFolderOrWorkspace(openConfig, workspaceToOpen, openFolderInNewWindow, filesToOpenInWindow), !!filesToOpenInWindow);\n\n\t\t\t\topenFolderInNewWindow = true; // any other folders to open must open in new window then\n\t\t\t});\n\t\t}\n\n\t\t// Handle folders to open (instructed and to restore)\n\t\tconst allFoldersToOpen = distinct(foldersToOpen, folder => extUriBiasedIgnorePathCase.getComparisonKey(folder.workspace.uri)); // prevent duplicates\n\t\tif (allFoldersToOpen.length > 0) {\n\n\t\t\t// Check for existing instances\n\t\t\tconst windowsOnFolderPath = coalesce(allFoldersToOpen.map(folderToOpen => findWindowOnWorkspaceOrFolder(this.getWindows(), folderToOpen.workspace.uri)));\n\t\t\tif (windowsOnFolderPath.length > 0) {\n\t\t\t\tconst windowOnFolderPath = windowsOnFolderPath[0];\n\t\t\t\tconst filesToOpenInWindow = isEqualAuthority(filesToOpen?.remoteAuthority, windowOnFolderPath.remoteAuthority) ? filesToOpen : undefined;\n\n\t\t\t\t// Do open files\n\t\t\t\taddUsedWindow(this.doOpenFilesInExistingWindow(openConfig, windowOnFolderPath, filesToOpenInWindow), !!filesToOpenInWindow);\n\n\t\t\t\topenFolderInNewWindow = true; // any other folders to open must open in new window then\n\t\t\t}\n\n\t\t\t// Open remaining ones\n\t\t\tallFoldersToOpen.forEach(folderToOpen => {\n\t\t\t\tif (windowsOnFolderPath.some(window => isSingleFolderWorkspaceIdentifier(window.openedWorkspace) && extUriBiasedIgnorePathCase.isEqual(window.openedWorkspace.uri, folderToOpen.workspace.uri))) {\n\t\t\t\t\treturn; // ignore folders that are already open\n\t\t\t\t}\n\n\t\t\t\tconst remoteAuthority = folderToOpen.remoteAuthority;\n\t\t\t\tconst filesToOpenInWindow = isEqualAuthority(filesToOpen?.remoteAuthority, remoteAuthority) ? filesToOpen : undefined;\n\n\t\t\t\t// Do open folder\n\t\t\t\taddUsedWindow(this.doOpenFolderOrWorkspace(openConfig, folderToOpen, openFolderInNewWindow, filesToOpenInWindow), !!filesToOpenInWindow);\n\n\t\t\t\topenFolderInNewWindow = true; // any other folders to open must open in new window then\n\t\t\t});\n\t\t}\n\n\t\t// Handle empty to restore\n\t\tconst allEmptyToRestore = distinct(emptyToRestore, info => info.backupFolder); // prevent duplicates\n\t\tif (allEmptyToRestore.length > 0) {\n\t\t\tallEmptyToRestore.forEach(emptyWindowBackupInfo => {\n\t\t\t\tconst remoteAuthority = emptyWindowBackupInfo.remoteAuthority;\n\t\t\t\tconst filesToOpenInWindow = isEqualAuthority(filesToOpen?.remoteAuthority, remoteAuthority) ? filesToOpen : undefined;\n\n\t\t\t\taddUsedWindow(this.doOpenEmpty(openConfig, true, remoteAuthority, filesToOpenInWindow, emptyWindowBackupInfo), !!filesToOpenInWindow);\n\n\t\t\t\topenFolderInNewWindow = true; // any other folders to open must open in new window then\n\t\t\t});\n\t\t}\n\n\t\t// Handle empty to open (only if no other window opened)\n\t\tif (usedWindows.length === 0 || filesToOpen) {\n\t\t\tif (filesToOpen && !emptyToOpen) {\n\t\t\t\temptyToOpen++;\n\t\t\t}\n\n\t\t\tconst remoteAuthority = filesToOpen ? filesToOpen.remoteAuthority : openConfig.remoteAuthority;\n\n\t\t\tfor (let i = 0; i < emptyToOpen; i++) {\n\t\t\t\taddUsedWindow(this.doOpenEmpty(openConfig, openFolderInNewWindow, remoteAuthority, filesToOpen), !!filesToOpen);\n\n\t\t\t\t// any other window to open must open in new window then\n\t\t\t\topenFolderInNewWindow = true;\n\t\t\t}\n\t\t}\n\n\t\treturn { windows: distinct(usedWindows), filesOpenedInWindow };\n\t}\n\n\tprivate doOpenFilesInExistingWindow(configuration: IOpenConfiguration, window: ICodeWindow, filesToOpen?: IFilesToOpen): ICodeWindow {\n\t\tthis.logService.trace('windowsManager#doOpenFilesInExistingWindow', { filesToOpen });\n\n\t\twindow.focus(); // make sure window has focus\n\n\t\tconst params: INativeOpenFileRequest = {\n\t\t\tfilesToOpenOrCreate: filesToOpen?.filesToOpenOrCreate,\n\t\t\tfilesToDiff: filesToOpen?.filesToDiff,\n\t\t\tfilesToWait: filesToOpen?.filesToWait,\n\t\t\ttermProgram: configuration?.userEnv?.['TERM_PROGRAM']\n\t\t};\n\t\twindow.sendWhenReady('vscode:openFiles', CancellationToken.None, params);\n\n\t\treturn window;\n\t}\n\n\tprivate doAddFoldersToExistingWindow(window: ICodeWindow, foldersToAdd: URI[]): ICodeWindow {\n\t\tthis.logService.trace('windowsManager#doAddFoldersToExistingWindow', { foldersToAdd });\n\n\t\twindow.focus(); // make sure window has focus\n\n\t\tconst request: IAddFoldersRequest = { foldersToAdd };\n\t\twindow.sendWhenReady('vscode:addFolders', CancellationToken.None, request);\n\n\t\treturn window;\n\t}\n\n\tprivate doOpenEmpty(openConfig: IOpenConfiguration, forceNewWindow: boolean, remoteAuthority: string | undefined, filesToOpen: IFilesToOpen | undefined, emptyWindowBackupInfo?: IEmptyWindowBackupInfo): ICodeWindow {\n\t\tthis.logService.trace('windowsManager#doOpenEmpty', { restore: !!emptyWindowBackupInfo, remoteAuthority, filesToOpen, forceNewWindow });\n\n\t\tlet windowToUse: ICodeWindow | undefined;\n\t\tif (!forceNewWindow && typeof openConfig.contextWindowId === 'number') {\n\t\t\twindowToUse = this.getWindowById(openConfig.contextWindowId); // fix for https://github.com/microsoft/vscode/issues/97172\n\t\t}\n\n\t\treturn this.openInBrowserWindow({\n\t\t\tuserEnv: openConfig.userEnv,\n\t\t\tcli: openConfig.cli,\n\t\t\tinitialStartup: openConfig.initialStartup,\n\t\t\tremoteAuthority,\n\t\t\tforceNewWindow,\n\t\t\tforceNewTabbedWindow: openConfig.forceNewTabbedWindow,\n\t\t\tfilesToOpen,\n\t\t\twindowToUse,\n\t\t\temptyWindowBackupInfo\n\t\t});\n\t}\n\n\tprivate doOpenFolderOrWorkspace(openConfig: IOpenConfiguration, folderOrWorkspace: IWorkspacePathToOpen | ISingleFolderWorkspacePathToOpen, forceNewWindow: boolean, filesToOpen: IFilesToOpen | undefined, windowToUse?: ICodeWindow): ICodeWindow {\n\t\tthis.logService.trace('windowsManager#doOpenFolderOrWorkspace', { folderOrWorkspace, filesToOpen });\n\n\t\tif (!forceNewWindow && !windowToUse && typeof openConfig.contextWindowId === 'number') {\n\t\t\twindowToUse = this.getWindowById(openConfig.contextWindowId); // fix for https://github.com/microsoft/vscode/issues/49587\n\t\t}\n\n\t\treturn this.openInBrowserWindow({\n\t\t\tworkspace: folderOrWorkspace.workspace,\n\t\t\tuserEnv: openConfig.userEnv,\n\t\t\tcli: openConfig.cli,\n\t\t\tinitialStartup: openConfig.initialStartup,\n\t\t\tremoteAuthority: folderOrWorkspace.remoteAuthority,\n\t\t\tforceNewWindow,\n\t\t\tforceNewTabbedWindow: openConfig.forceNewTabbedWindow,\n\t\t\tfilesToOpen,\n\t\t\twindowToUse\n\t\t});\n\t}\n\n\tprivate getPathsToOpen(openConfig: IOpenConfiguration): IPathToOpen[] {\n\t\tlet pathsToOpen: IPathToOpen[];\n\t\tlet isCommandLineOrAPICall = false;\n\t\tlet restoredWindows = false;\n\n\t\t// Extract paths: from API\n\t\tif (openConfig.urisToOpen && openConfig.urisToOpen.length > 0) {\n\t\t\tpathsToOpen = this.doExtractPathsFromAPI(openConfig);\n\t\t\tisCommandLineOrAPICall = true;\n\t\t}\n\n\t\t// Check for force empty\n\t\telse if (openConfig.forceEmpty) {\n\t\t\tpathsToOpen = [Object.create(null)];\n\t\t}\n\n\t\t// Extract paths: from CLI\n\t\telse if (openConfig.cli._.length || openConfig.cli['folder-uri'] || openConfig.cli['file-uri']) {\n\t\t\tpathsToOpen = this.doExtractPathsFromCLI(openConfig.cli);\n\t\t\tif (pathsToOpen.length === 0) {\n\t\t\t\tpathsToOpen.push(Object.create(null)); // add an empty window if we did not have windows to open from command line\n\t\t\t}\n\n\t\t\tisCommandLineOrAPICall = true;\n\t\t}\n\n\t\t// Extract paths: from previous session\n\t\telse {\n\t\t\tpathsToOpen = this.doGetPathsFromLastSession();\n\t\t\tif (pathsToOpen.length === 0) {\n\t\t\t\tpathsToOpen.push(Object.create(null)); // add an empty window if we did not have windows to restore\n\t\t\t}\n\n\t\t\trestoredWindows = true;\n\t\t}\n\n\t\t// Convert multiple folders into workspace (if opened via API or CLI)\n\t\t// This will ensure to open these folders in one window instead of multiple\n\t\t// If we are in `addMode`, we should not do this because in that case all\n\t\t// folders should be added to the existing window.\n\t\tif (!openConfig.addMode && isCommandLineOrAPICall) {\n\t\t\tconst foldersToOpen = pathsToOpen.filter(path => isSingleFolderWorkspacePathToOpen(path)) as ISingleFolderWorkspacePathToOpen[];\n\t\t\tif (foldersToOpen.length > 1) {\n\t\t\t\tconst remoteAuthority = foldersToOpen[0].remoteAuthority;\n\t\t\t\tif (foldersToOpen.every(folderToOpen => isEqualAuthority(folderToOpen.remoteAuthority, remoteAuthority))) { // only if all folder have the same authority\n\t\t\t\t\tconst workspace = this.workspacesManagementMainService.createUntitledWorkspaceSync(foldersToOpen.map(folder => ({ uri: folder.workspace.uri })));\n\n\t\t\t\t\t// Add workspace and remove folders thereby\n\t\t\t\t\tpathsToOpen.push({ workspace, remoteAuthority });\n\t\t\t\t\tpathsToOpen = pathsToOpen.filter(path => !isSingleFolderWorkspacePathToOpen(path));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Check for `window.startup` setting to include all windows\n\t\t// from the previous session if this is the initial startup and we have\n\t\t// not restored windows already otherwise.\n\t\t// Use `unshift` to ensure any new window to open comes last\n\t\t// for proper focus treatment.\n\t\tif (openConfig.initialStartup && !restoredWindows && this.configurationService.getValue<IWindowSettings | undefined>('window')?.restoreWindows === 'preserve') {\n\t\t\tpathsToOpen.unshift(...this.doGetPathsFromLastSession().filter(path => isWorkspacePathToOpen(path) || isSingleFolderWorkspacePathToOpen(path) || path.backupPath));\n\t\t}\n\n\t\treturn pathsToOpen;\n\t}\n\n\tprivate doExtractPathsFromAPI(openConfig: IOpenConfiguration): IPathToOpen[] {\n\t\tconst pathsToOpen: IPathToOpen[] = [];\n\t\tconst pathResolveOptions: IPathResolveOptions = { gotoLineMode: openConfig.gotoLineMode, remoteAuthority: openConfig.remoteAuthority };\n\t\tfor (const pathToOpen of coalesce(openConfig.urisToOpen || [])) {\n\t\t\tconst path = this.resolveOpenable(pathToOpen, pathResolveOptions);\n\n\t\t\t// Path exists\n\t\t\tif (path) {\n\t\t\t\tpath.label = pathToOpen.label;\n\t\t\t\tpathsToOpen.push(path);\n\t\t\t}\n\n\t\t\t// Path does not exist: show a warning box\n\t\t\telse {\n\t\t\t\tconst uri = this.resourceFromOpenable(pathToOpen);\n\n\t\t\t\tconst options: MessageBoxOptions = {\n\t\t\t\t\ttitle: this.productService.nameLong,\n\t\t\t\t\ttype: 'info',\n\t\t\t\t\tbuttons: [mnemonicButtonLabel(localize({ key: 'ok', comment: ['&& denotes a mnemonic'] }, \"&&OK\"))],\n\t\t\t\t\tdefaultId: 0,\n\t\t\t\t\tmessage: uri.scheme === Schemas.file ? localize('pathNotExistTitle', \"Path does not exist\") : localize('uriInvalidTitle', \"URI can not be opened\"),\n\t\t\t\t\tdetail: uri.scheme === Schemas.file ?\n\t\t\t\t\t\tlocalize('pathNotExistDetail', \"The path '{0}' does not exist on this computer.\", getPathLabel(uri.fsPath, this.environmentMainService)) :\n\t\t\t\t\t\tlocalize('uriInvalidDetail', \"The URI '{0}' is not valid and can not be opened.\", uri.toString()),\n\t\t\t\t\tnoLink: true\n\t\t\t\t};\n\n\t\t\t\tthis.dialogMainService.showMessageBox(options, withNullAsUndefined(BrowserWindow.getFocusedWindow()));\n\t\t\t}\n\t\t}\n\n\t\treturn pathsToOpen;\n\t}\n\n\tprivate doExtractPathsFromCLI(cli: NativeParsedArgs): IPath[] {\n\t\tconst pathsToOpen: IPathToOpen[] = [];\n\t\tconst pathResolveOptions: IPathResolveOptions = { ignoreFileNotFound: true, gotoLineMode: cli.goto, remoteAuthority: cli.remote || undefined, forceOpenWorkspaceAsFile: false };\n\n\t\t// folder uris\n\t\tconst folderUris = cli['folder-uri'];\n\t\tif (folderUris) {\n\t\t\tfor (const rawFolderUri of folderUris) {\n\t\t\t\tconst folderUri = this.cliArgToUri(rawFolderUri);\n\t\t\t\tif (folderUri) {\n\t\t\t\t\tconst path = this.resolveOpenable({ folderUri }, pathResolveOptions);\n\t\t\t\t\tif (path) {\n\t\t\t\t\t\tpathsToOpen.push(path);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// file uris\n\t\tconst fileUris = cli['file-uri'];\n\t\tif (fileUris) {\n\t\t\tfor (const rawFileUri of fileUris) {\n\t\t\t\tconst fileUri = this.cliArgToUri(rawFileUri);\n\t\t\t\tif (fileUri) {\n\t\t\t\t\tconst path = this.resolveOpenable(hasWorkspaceFileExtension(rawFileUri) ? { workspaceUri: fileUri } : { fileUri }, pathResolveOptions);\n\t\t\t\t\tif (path) {\n\t\t\t\t\t\tpathsToOpen.push(path);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// folder or file paths\n\t\tconst cliPaths = cli._;\n\t\tfor (const cliPath of cliPaths) {\n\t\t\tconst path = pathResolveOptions.remoteAuthority ? this.doResolvePathRemote(cliPath, pathResolveOptions) : this.doResolveFilePath(cliPath, pathResolveOptions);\n\t\t\tif (path) {\n\t\t\t\tpathsToOpen.push(path);\n\t\t\t}\n\t\t}\n\t\treturn pathsToOpen;\n\t}\n\n\tprivate cliArgToUri(arg: string): URI | undefined {\n\t\ttry {\n\t\t\tconst uri = URI.parse(arg);\n\t\t\tif (!uri.scheme) {\n\t\t\t\tthis.logService.error(`Invalid URI input string, scheme missing: ${arg}`);\n\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\treturn uri;\n\t\t} catch (e) {\n\t\t\tthis.logService.error(`Invalid URI input string: ${arg}, ${e.message}`);\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate doGetPathsFromLastSession(): IPathToOpen[] {\n\t\tconst restoreWindowsSetting = this.getRestoreWindowsSetting();\n\n\t\tswitch (restoreWindowsSetting) {\n\n\t\t\t// none: no window to restore\n\t\t\tcase 'none':\n\t\t\t\treturn [];\n\n\t\t\t// one: restore last opened workspace/folder or empty window\n\t\t\t// all: restore all windows\n\t\t\t// folders: restore last opened folders only\n\t\t\tcase 'one':\n\t\t\tcase 'all':\n\t\t\tcase 'preserve':\n\t\t\tcase 'folders':\n\n\t\t\t\t// Collect previously opened windows\n\t\t\t\tconst lastSessionWindows: IWindowState[] = [];\n\t\t\t\tif (restoreWindowsSetting !== 'one') {\n\t\t\t\t\tlastSessionWindows.push(...this.windowsStateHandler.state.openedWindows);\n\t\t\t\t}\n\t\t\t\tif (this.windowsStateHandler.state.lastActiveWindow) {\n\t\t\t\t\tlastSessionWindows.push(this.windowsStateHandler.state.lastActiveWindow);\n\t\t\t\t}\n\n\t\t\t\tconst pathsToOpen: IPathToOpen[] = [];\n\t\t\t\tfor (const lastSessionWindow of lastSessionWindows) {\n\n\t\t\t\t\t// Workspaces\n\t\t\t\t\tif (lastSessionWindow.workspace) {\n\t\t\t\t\t\tconst pathToOpen = this.resolveOpenable({ workspaceUri: lastSessionWindow.workspace.configPath }, { remoteAuthority: lastSessionWindow.remoteAuthority, rejectTransientWorkspaces: true /* https://github.com/microsoft/vscode/issues/119695 */ });\n\t\t\t\t\t\tif (isWorkspacePathToOpen(pathToOpen)) {\n\t\t\t\t\t\t\tpathsToOpen.push(pathToOpen);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Folders\n\t\t\t\t\telse if (lastSessionWindow.folderUri) {\n\t\t\t\t\t\tconst pathToOpen = this.resolveOpenable({ folderUri: lastSessionWindow.folderUri }, { remoteAuthority: lastSessionWindow.remoteAuthority });\n\t\t\t\t\t\tif (isSingleFolderWorkspacePathToOpen(pathToOpen)) {\n\t\t\t\t\t\t\tpathsToOpen.push(pathToOpen);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Empty window, potentially editors open to be restored\n\t\t\t\t\telse if (restoreWindowsSetting !== 'folders' && lastSessionWindow.backupPath) {\n\t\t\t\t\t\tpathsToOpen.push({ backupPath: lastSessionWindow.backupPath, remoteAuthority: lastSessionWindow.remoteAuthority });\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn pathsToOpen;\n\t\t}\n\t}\n\n\tprivate getRestoreWindowsSetting(): RestoreWindowsSetting {\n\t\tlet restoreWindows: RestoreWindowsSetting;\n\t\tif (this.lifecycleMainService.wasRestarted) {\n\t\t\trestoreWindows = 'all'; // always reopen all windows when an update was applied\n\t\t} else {\n\t\t\tconst windowConfig = this.configurationService.getValue<IWindowSettings | undefined>('window');\n\t\t\trestoreWindows = windowConfig?.restoreWindows || 'all'; // by default restore all windows\n\n\t\t\tif (!['preserve', 'all', 'folders', 'one', 'none'].includes(restoreWindows)) {\n\t\t\t\trestoreWindows = 'all'; // by default restore all windows\n\t\t\t}\n\t\t}\n\n\t\treturn restoreWindows;\n\t}\n\n\tprivate resolveOpenable(openable: IWindowOpenable, options: IPathResolveOptions = Object.create(null)): IPathToOpen | undefined {\n\n\t\t// handle file:// openables with some extra validation\n\t\tlet uri = this.resourceFromOpenable(openable);\n\t\tif (uri.scheme === Schemas.file) {\n\t\t\tif (isFileToOpen(openable)) {\n\t\t\t\toptions = { ...options, forceOpenWorkspaceAsFile: true };\n\t\t\t}\n\n\t\t\treturn this.doResolveFilePath(uri.fsPath, options);\n\t\t}\n\n\t\t// handle non file:// openables\n\t\treturn this.doResolveRemoteOpenable(openable, options);\n\t}\n\n\tprivate doResolveRemoteOpenable(openable: IWindowOpenable, options: IPathResolveOptions): IPathToOpen | undefined {\n\t\tlet uri = this.resourceFromOpenable(openable);\n\n\t\t// use remote authority from vscode\n\t\tconst remoteAuthority = getRemoteAuthority(uri) || options.remoteAuthority;\n\n\t\t// normalize URI\n\t\turi = removeTrailingPathSeparator(normalizePath(uri));\n\n\t\t// File\n\t\tif (isFileToOpen(openable)) {\n\t\t\tif (options.gotoLineMode) {\n\t\t\t\tconst { path, line, column } = parseLineAndColumnAware(uri.path);\n\n\t\t\t\treturn {\n\t\t\t\t\tfileUri: uri.with({ path }),\n\t\t\t\t\tselection: line ? { startLineNumber: line, startColumn: column || 1 } : undefined,\n\t\t\t\t\tremoteAuthority\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn { fileUri: uri, remoteAuthority };\n\t\t}\n\n\t\t// Workspace\n\t\telse if (isWorkspaceToOpen(openable)) {\n\t\t\treturn { workspace: getWorkspaceIdentifier(uri), remoteAuthority };\n\t\t}\n\n\t\t// Folder\n\t\treturn { workspace: getSingleFolderWorkspaceIdentifier(uri), remoteAuthority };\n\t}\n\n\tprivate resourceFromOpenable(openable: IWindowOpenable): URI {\n\t\tif (isWorkspaceToOpen(openable)) {\n\t\t\treturn openable.workspaceUri;\n\t\t}\n\n\t\tif (isFolderToOpen(openable)) {\n\t\t\treturn openable.folderUri;\n\t\t}\n\n\t\treturn openable.fileUri;\n\t}\n\n\tprivate doResolveFilePath(path: string, options: IPathResolveOptions): IPathToOpen | undefined {\n\n\t\t// Extract line/col information from path\n\t\tlet lineNumber: number | undefined;\n\t\tlet columnNumber: number | undefined;\n\t\tif (options.gotoLineMode) {\n\t\t\t({ path, line: lineNumber, column: columnNumber } = parseLineAndColumnAware(path));\n\t\t}\n\n\t\t// Ensure the path is normalized and absolute\n\t\tpath = sanitizeFilePath(normalize(path), cwd());\n\n\t\ttry {\n\t\t\tconst pathStat = statSync(path);\n\n\t\t\t// File\n\t\t\tif (pathStat.isFile()) {\n\n\t\t\t\t// Workspace (unless disabled via flag)\n\t\t\t\tif (!options.forceOpenWorkspaceAsFile) {\n\t\t\t\t\tconst workspace = this.workspacesManagementMainService.resolveLocalWorkspaceSync(URI.file(path));\n\t\t\t\t\tif (workspace) {\n\n\t\t\t\t\t\t// If the workspace is transient and we are to ignore\n\t\t\t\t\t\t// transient workspaces, reject it.\n\t\t\t\t\t\tif (workspace.transient && options.rejectTransientWorkspaces) {\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tworkspace: { id: workspace.id, configPath: workspace.configPath },\n\t\t\t\t\t\t\ttype: FileType.File,\n\t\t\t\t\t\t\texists: true,\n\t\t\t\t\t\t\tremoteAuthority: workspace.remoteAuthority,\n\t\t\t\t\t\t\ttransient: workspace.transient\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tfileUri: URI.file(path),\n\t\t\t\t\ttype: FileType.File,\n\t\t\t\t\texists: true,\n\t\t\t\t\tselection: lineNumber ? { startLineNumber: lineNumber, startColumn: columnNumber || 1 } : undefined\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Folder\n\t\t\telse if (pathStat.isDirectory()) {\n\t\t\t\treturn {\n\t\t\t\t\tworkspace: getSingleFolderWorkspaceIdentifier(URI.file(path), pathStat),\n\t\t\t\t\ttype: FileType.Directory,\n\t\t\t\t\texists: true\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Special device: in POSIX environments, we may get /dev/null passed\n\t\t\t// in (for example git uses it to signal one side of a diff does not\n\t\t\t// exist). In that special case, treat it like a file to support this\n\t\t\t// scenario ()\n\t\t\telse if (!isWindows && path === '/dev/null') {\n\t\t\t\treturn {\n\t\t\t\t\tfileUri: URI.file(path),\n\t\t\t\t\ttype: FileType.File,\n\t\t\t\t\texists: true\n\t\t\t\t};\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconst fileUri = URI.file(path);\n\n\t\t\t// since file does not seem to exist anymore, remove from recent\n\t\t\tthis.workspacesHistoryMainService.removeRecentlyOpened([fileUri]);\n\n\t\t\t// assume this is a file that does not yet exist\n\t\t\tif (options.ignoreFileNotFound) {\n\t\t\t\treturn {\n\t\t\t\t\tfileUri,\n\t\t\t\t\ttype: FileType.File,\n\t\t\t\t\texists: false\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate doResolvePathRemote(path: string, options: IPathResolveOptions): IPathToOpen | undefined {\n\t\tconst first = path.charCodeAt(0);\n\t\tconst remoteAuthority = options.remoteAuthority;\n\n\t\t// Extract line/col information from path\n\t\tlet lineNumber: number | undefined;\n\t\tlet columnNumber: number | undefined;\n\n\t\tif (options.gotoLineMode) {\n\t\t\t({ path, line: lineNumber, column: columnNumber } = parseLineAndColumnAware(path));\n\t\t}\n\n\t\t// make absolute\n\t\tif (first !== CharCode.Slash) {\n\t\t\tif (isWindowsDriveLetter(first) && path.charCodeAt(path.charCodeAt(1)) === CharCode.Colon) {\n\t\t\t\tpath = toSlashes(path);\n\t\t\t}\n\n\t\t\tpath = `/${path}`;\n\t\t}\n\n\t\tconst uri = URI.from({ scheme: Schemas.vscodeRemote, authority: remoteAuthority, path: path });\n\n\t\t// guess the file type:\n\t\t// - if it ends with a slash it's a folder\n\t\t// - if in goto line mode or if it has a file extension, it's a file or a workspace\n\t\t// - by defaults it's a folder\n\t\tif (path.charCodeAt(path.length - 1) !== CharCode.Slash) {\n\n\t\t\t// file name ends with .code-workspace\n\t\t\tif (hasWorkspaceFileExtension(path)) {\n\t\t\t\tif (options.forceOpenWorkspaceAsFile) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tfileUri: uri,\n\t\t\t\t\t\tselection: lineNumber ? { startLineNumber: lineNumber, startColumn: columnNumber || 1 } : undefined,\n\t\t\t\t\t\tremoteAuthority: options.remoteAuthority\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn { workspace: getWorkspaceIdentifier(uri), remoteAuthority };\n\t\t\t}\n\n\t\t\t// file name starts with a dot or has an file extension\n\t\t\telse if (options.gotoLineMode || posix.basename(path).indexOf('.') !== -1) {\n\t\t\t\treturn {\n\t\t\t\t\tfileUri: uri,\n\t\t\t\t\tselection: lineNumber ? { startLineNumber: lineNumber, startColumn: columnNumber || 1 } : undefined,\n\t\t\t\t\tremoteAuthority\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\treturn { workspace: getSingleFolderWorkspaceIdentifier(uri), remoteAuthority };\n\t}\n\n\tprivate shouldOpenNewWindow(openConfig: IOpenConfiguration): { openFolderInNewWindow: boolean; openFilesInNewWindow: boolean; } {\n\n\t\t// let the user settings override how folders are open in a new window or same window unless we are forced\n\t\tconst windowConfig = this.configurationService.getValue<IWindowSettings | undefined>('window');\n\t\tconst openFolderInNewWindowConfig = windowConfig?.openFoldersInNewWindow || 'default' /* default */;\n\t\tconst openFilesInNewWindowConfig = windowConfig?.openFilesInNewWindow || 'off' /* default */;\n\n\t\tlet openFolderInNewWindow = (openConfig.preferNewWindow || openConfig.forceNewWindow) && !openConfig.forceReuseWindow;\n\t\tif (!openConfig.forceNewWindow && !openConfig.forceReuseWindow && (openFolderInNewWindowConfig === 'on' || openFolderInNewWindowConfig === 'off')) {\n\t\t\topenFolderInNewWindow = (openFolderInNewWindowConfig === 'on');\n\t\t}\n\n\t\t// let the user settings override how files are open in a new window or same window unless we are forced (not for extension development though)\n\t\tlet openFilesInNewWindow: boolean = false;\n\t\tif (openConfig.forceNewWindow || openConfig.forceReuseWindow) {\n\t\t\topenFilesInNewWindow = !!openConfig.forceNewWindow && !openConfig.forceReuseWindow;\n\t\t} else {\n\n\t\t\t// macOS: by default we open files in a new window if this is triggered via DOCK context\n\t\t\tif (isMacintosh) {\n\t\t\t\tif (openConfig.context === OpenContext.DOCK) {\n\t\t\t\t\topenFilesInNewWindow = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Linux/Windows: by default we open files in the new window unless triggered via DIALOG / MENU context\n\t\t\t// or from the integrated terminal where we assume the user prefers to open in the current window\n\t\t\telse {\n\t\t\t\tif (openConfig.context !== OpenContext.DIALOG && openConfig.context !== OpenContext.MENU && !(openConfig.userEnv && openConfig.userEnv['TERM_PROGRAM'] === 'vscode')) {\n\t\t\t\t\topenFilesInNewWindow = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// finally check for overrides of default\n\t\t\tif (!openConfig.cli.extensionDevelopmentPath && (openFilesInNewWindowConfig === 'on' || openFilesInNewWindowConfig === 'off')) {\n\t\t\t\topenFilesInNewWindow = (openFilesInNewWindowConfig === 'on');\n\t\t\t}\n\t\t}\n\n\t\treturn { openFolderInNewWindow: !!openFolderInNewWindow, openFilesInNewWindow };\n\t}\n\n\topenExtensionDevelopmentHostWindow(extensionDevelopmentPaths: string[], openConfig: IOpenConfiguration): ICodeWindow[] {\n\n\t\t// Reload an existing extension development host window on the same path\n\t\t// We currently do not allow more than one extension development window\n\t\t// on the same extension path.\n\t\tconst existingWindow = findWindowOnExtensionDevelopmentPath(this.getWindows(), extensionDevelopmentPaths);\n\t\tif (existingWindow) {\n\t\t\tthis.lifecycleMainService.reload(existingWindow, openConfig.cli);\n\t\t\texistingWindow.focus(); // make sure it gets focus and is restored\n\n\t\t\treturn [existingWindow];\n\t\t}\n\n\t\tlet folderUris = openConfig.cli['folder-uri'] || [];\n\t\tlet fileUris = openConfig.cli['file-uri'] || [];\n\t\tlet cliArgs = openConfig.cli._;\n\n\t\t// Fill in previously opened workspace unless an explicit path is provided and we are not unit testing\n\t\tif (!cliArgs.length && !folderUris.length && !fileUris.length && !openConfig.cli.extensionTestsPath) {\n\t\t\tconst extensionDevelopmentWindowState = this.windowsStateHandler.state.lastPluginDevelopmentHostWindow;\n\t\t\tconst workspaceToOpen = extensionDevelopmentWindowState && (extensionDevelopmentWindowState.workspace || extensionDevelopmentWindowState.folderUri);\n\t\t\tif (workspaceToOpen) {\n\t\t\t\tif (URI.isUri(workspaceToOpen)) {\n\t\t\t\t\tif (workspaceToOpen.scheme === Schemas.file) {\n\t\t\t\t\t\tcliArgs = [workspaceToOpen.fsPath];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfolderUris = [workspaceToOpen.toString()];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (workspaceToOpen.configPath.scheme === Schemas.file) {\n\t\t\t\t\t\tcliArgs = [originalFSPath(workspaceToOpen.configPath)];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfileUris = [workspaceToOpen.configPath.toString()];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet remoteAuthority = openConfig.remoteAuthority;\n\t\tfor (const extensionDevelopmentPath of extensionDevelopmentPaths) {\n\t\t\tif (extensionDevelopmentPath.match(/^[a-zA-Z][a-zA-Z0-9\\+\\-\\.]+:/)) {\n\t\t\t\tconst url = URI.parse(extensionDevelopmentPath);\n\t\t\t\tconst extensionDevelopmentPathRemoteAuthority = getRemoteAuthority(url);\n\t\t\t\tif (extensionDevelopmentPathRemoteAuthority) {\n\t\t\t\t\tif (remoteAuthority) {\n\t\t\t\t\t\tif (extensionDevelopmentPathRemoteAuthority !== remoteAuthority) {\n\t\t\t\t\t\t\tthis.logService.error('more than one extension development path authority');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tremoteAuthority = extensionDevelopmentPathRemoteAuthority;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Make sure that we do not try to open:\n\t\t// - a workspace or folder that is already opened\n\t\t// - a workspace or file that has a different authority as the extension development.\n\n\t\tcliArgs = cliArgs.filter(path => {\n\t\t\tconst uri = URI.file(path);\n\t\t\tif (!!findWindowOnWorkspaceOrFolder(this.getWindows(), uri)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn isEqualAuthority(getRemoteAuthority(uri), remoteAuthority);\n\t\t});\n\n\t\tfolderUris = folderUris.filter(folderUriStr => {\n\t\t\tconst folderUri = this.cliArgToUri(folderUriStr);\n\t\t\tif (folderUri && !!findWindowOnWorkspaceOrFolder(this.getWindows(), folderUri)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn folderUri ? isEqualAuthority(getRemoteAuthority(folderUri), remoteAuthority) : false;\n\t\t});\n\n\t\tfileUris = fileUris.filter(fileUriStr => {\n\t\t\tconst fileUri = this.cliArgToUri(fileUriStr);\n\t\t\tif (fileUri && !!findWindowOnWorkspaceOrFolder(this.getWindows(), fileUri)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn fileUri ? isEqualAuthority(getRemoteAuthority(fileUri), remoteAuthority) : false;\n\t\t});\n\n\t\topenConfig.cli._ = cliArgs;\n\t\topenConfig.cli['folder-uri'] = folderUris;\n\t\topenConfig.cli['file-uri'] = fileUris;\n\n\t\tconst noFilesOrFolders = !cliArgs.length && !folderUris.length && !fileUris.length;\n\n\t\t// Open it\n\t\tconst openArgs: IOpenConfiguration = {\n\t\t\tcontext: openConfig.context,\n\t\t\tcli: openConfig.cli,\n\t\t\tforceNewWindow: true,\n\t\t\tforceEmpty: noFilesOrFolders,\n\t\t\tuserEnv: openConfig.userEnv,\n\t\t\tnoRecentEntry: true,\n\t\t\twaitMarkerFileURI: openConfig.waitMarkerFileURI,\n\t\t\tremoteAuthority\n\t\t};\n\n\t\treturn this.open(openArgs);\n\t}\n\n\tprivate openInBrowserWindow(options: IOpenBrowserWindowOptions): ICodeWindow {\n\t\tconst windowConfig = this.configurationService.getValue<IWindowSettings | undefined>('window');\n\n\t\t// Build up the window configuration from provided options, config and environment\n\t\tconst configuration: INativeWindowConfiguration = {\n\n\t\t\t// Inherit CLI arguments from environment and/or\n\t\t\t// the specific properties from this launch if provided\n\t\t\t...this.environmentMainService.args,\n\t\t\t...options.cli,\n\n\t\t\tmachineId: this.machineId,\n\n\t\t\twindowId: -1,\t// Will be filled in by the window once loaded later\n\n\t\t\tmainPid: process.pid,\n\n\t\t\tappRoot: this.environmentMainService.appRoot,\n\t\t\texecPath: process.execPath,\n\t\t\tcodeCachePath: this.environmentMainService.codeCachePath,\n\t\t\t// If we know the backup folder upfront (for empty windows to restore), we can set it\n\t\t\t// directly here which helps for restoring UI state associated with that window.\n\t\t\t// For all other cases we first call into registerEmptyWindowBackupSync() to set it before\n\t\t\t// loading the window.\n\t\t\tbackupPath: options.emptyWindowBackupInfo ? join(this.environmentMainService.backupHome, options.emptyWindowBackupInfo.backupFolder) : undefined,\n\n\t\t\thomeDir: this.environmentMainService.userHome.fsPath,\n\t\t\ttmpDir: this.environmentMainService.tmpDir.fsPath,\n\t\t\tuserDataDir: this.environmentMainService.userDataPath,\n\n\t\t\tremoteAuthority: options.remoteAuthority,\n\t\t\tworkspace: options.workspace,\n\t\t\tuserEnv: { ...this.initialUserEnv, ...options.userEnv },\n\n\t\t\tfilesToOpenOrCreate: options.filesToOpen?.filesToOpenOrCreate,\n\t\t\tfilesToDiff: options.filesToOpen?.filesToDiff,\n\t\t\tfilesToWait: options.filesToOpen?.filesToWait,\n\n\t\t\tlogLevel: this.logService.getLevel(),\n\t\t\tlogsPath: this.environmentMainService.logsPath,\n\n\t\t\tproduct,\n\t\t\tisInitialStartup: options.initialStartup,\n\t\t\tperfMarks: getMarks(),\n\t\t\tos: { release: release(), hostname: hostname() },\n\t\t\tzoomLevel: typeof windowConfig?.zoomLevel === 'number' ? windowConfig.zoomLevel : undefined,\n\n\t\t\tlegacyWatcher: this.configurationService.getValue('files.legacyWatcher'),\n\t\t\texperimentalSandboxedFileService: this.configurationService.getValue('files.experimentalSandboxedFileService'),\n\t\t\tautoDetectHighContrast: windowConfig?.autoDetectHighContrast ?? true,\n\t\t\taccessibilitySupport: app.accessibilitySupportEnabled,\n\t\t\tcolorScheme: {\n\t\t\t\tdark: nativeTheme.shouldUseDarkColors,\n\t\t\t\thighContrast: nativeTheme.shouldUseInvertedColorScheme || nativeTheme.shouldUseHighContrastColors\n\t\t\t}\n\t\t};\n\n\t\tlet window: ICodeWindow | undefined;\n\t\tif (!options.forceNewWindow && !options.forceNewTabbedWindow) {\n\t\t\twindow = options.windowToUse || this.getLastActiveWindow();\n\t\t\tif (window) {\n\t\t\t\twindow.focus();\n\t\t\t}\n\t\t}\n\n\t\t// New window\n\t\tif (!window) {\n\t\t\tconst state = this.windowsStateHandler.getNewWindowState(configuration);\n\n\t\t\t// Create the window\n\t\t\tmark('code/willCreateCodeWindow');\n\t\t\tconst createdWindow = window = this.instantiationService.createInstance(CodeWindow, {\n\t\t\t\tstate,\n\t\t\t\textensionDevelopmentPath: configuration.extensionDevelopmentPath,\n\t\t\t\tisExtensionTestHost: !!configuration.extensionTestsPath\n\t\t\t});\n\t\t\tmark('code/didCreateCodeWindow');\n\n\t\t\t// Add as window tab if configured (macOS only)\n\t\t\tif (options.forceNewTabbedWindow) {\n\t\t\t\tconst activeWindow = this.getLastActiveWindow();\n\t\t\t\tif (activeWindow) {\n\t\t\t\t\tactiveWindow.addTabbedWindow(createdWindow);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to our list of windows\n\t\t\tWindowsMainService.WINDOWS.push(createdWindow);\n\n\t\t\t// Indicate new window via event\n\t\t\tthis._onDidOpenWindow.fire(createdWindow);\n\n\t\t\t// Indicate number change via event\n\t\t\tthis._onDidChangeWindowsCount.fire({ oldCount: this.getWindowCount() - 1, newCount: this.getWindowCount() });\n\n\t\t\t// Window Events\n\t\t\tonce(createdWindow.onDidSignalReady)(() => this._onDidSignalReadyWindow.fire(createdWindow));\n\t\t\tonce(createdWindow.onDidClose)(() => this.onWindowClosed(createdWindow));\n\t\t\tonce(createdWindow.onDidDestroy)(() => this._onDidDestroyWindow.fire(createdWindow));\n\n\t\t\tconst webContents = assertIsDefined(createdWindow.win?.webContents);\n\t\t\twebContents.removeAllListeners('devtools-reload-page'); // remove built in listener so we can handle this on our own\n\t\t\twebContents.on('devtools-reload-page', () => this.lifecycleMainService.reload(createdWindow));\n\n\t\t\t// Lifecycle\n\t\t\tthis.lifecycleMainService.registerWindow(createdWindow);\n\t\t}\n\n\t\t// Existing window\n\t\telse {\n\n\t\t\t// Some configuration things get inherited if the window is being reused and we are\n\t\t\t// in extension development host mode. These options are all development related.\n\t\t\tconst currentWindowConfig = window.config;\n\t\t\tif (!configuration.extensionDevelopmentPath && currentWindowConfig && !!currentWindowConfig.extensionDevelopmentPath) {\n\t\t\t\tconfiguration.extensionDevelopmentPath = currentWindowConfig.extensionDevelopmentPath;\n\t\t\t\tconfiguration.verbose = currentWindowConfig.verbose;\n\t\t\t\tconfiguration['inspect-brk-extensions'] = currentWindowConfig['inspect-brk-extensions'];\n\t\t\t\tconfiguration.debugId = currentWindowConfig.debugId;\n\t\t\t\tconfiguration.extensionEnvironment = currentWindowConfig.extensionEnvironment;\n\t\t\t\tconfiguration['inspect-extensions'] = currentWindowConfig['inspect-extensions'];\n\t\t\t\tconfiguration['extensions-dir'] = currentWindowConfig['extensions-dir'];\n\t\t\t}\n\t\t}\n\n\t\t// Update window identifier and session now\n\t\t// that we have the window object in hand.\n\t\tconfiguration.windowId = window.id;\n\n\t\t// If the window was already loaded, make sure to unload it\n\t\t// first and only load the new configuration if that was\n\t\t// not vetoed\n\t\tif (window.isReady) {\n\t\t\tthis.lifecycleMainService.unload(window, UnloadReason.LOAD).then(veto => {\n\t\t\t\tif (!veto) {\n\t\t\t\t\tthis.doOpenInBrowserWindow(window!, configuration, options);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tthis.doOpenInBrowserWindow(window, configuration, options);\n\t\t}\n\n\t\treturn window;\n\t}\n\n\tprivate doOpenInBrowserWindow(window: ICodeWindow, configuration: INativeWindowConfiguration, options: IOpenBrowserWindowOptions): void {\n\n\t\t// Register window for backups\n\t\tif (!configuration.extensionDevelopmentPath) {\n\t\t\tif (isWorkspaceIdentifier(configuration.workspace)) {\n\t\t\t\tconfiguration.backupPath = this.backupMainService.registerWorkspaceBackupSync({ workspace: configuration.workspace, remoteAuthority: configuration.remoteAuthority });\n\t\t\t} else if (isSingleFolderWorkspaceIdentifier(configuration.workspace)) {\n\t\t\t\tconfiguration.backupPath = this.backupMainService.registerFolderBackupSync(configuration.workspace.uri);\n\t\t\t} else {\n\t\t\t\tconst backupFolder = options.emptyWindowBackupInfo && options.emptyWindowBackupInfo.backupFolder;\n\t\t\t\tconfiguration.backupPath = this.backupMainService.registerEmptyWindowBackupSync(backupFolder, configuration.remoteAuthority);\n\t\t\t}\n\t\t}\n\n\t\t// Load it\n\t\twindow.load(configuration);\n\t}\n\n\tprivate onWindowClosed(window: ICodeWindow): void {\n\n\t\t// Remove from our list so that Electron can clean it up\n\t\tconst index = WindowsMainService.WINDOWS.indexOf(window);\n\t\tWindowsMainService.WINDOWS.splice(index, 1);\n\n\t\t// Emit\n\t\tthis._onDidChangeWindowsCount.fire({ oldCount: this.getWindowCount() + 1, newCount: this.getWindowCount() });\n\t}\n\n\tgetFocusedWindow(): ICodeWindow | undefined {\n\t\tconst window = BrowserWindow.getFocusedWindow();\n\t\tif (window) {\n\t\t\treturn this.getWindowById(window.id);\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tgetLastActiveWindow(): ICodeWindow | undefined {\n\t\treturn this.doGetLastActiveWindow(this.getWindows());\n\t}\n\n\tprivate getLastActiveWindowForAuthority(remoteAuthority: string | undefined): ICodeWindow | undefined {\n\t\treturn this.doGetLastActiveWindow(this.getWindows().filter(window => isEqualAuthority(window.remoteAuthority, remoteAuthority)));\n\t}\n\n\tprivate doGetLastActiveWindow(windows: ICodeWindow[]): ICodeWindow | undefined {\n\t\tconst lastFocusedDate = Math.max.apply(Math, windows.map(window => window.lastFocusTime));\n\n\t\treturn windows.find(window => window.lastFocusTime === lastFocusedDate);\n\t}\n\n\tsendToFocused(channel: string, ...args: any[]): void {\n\t\tconst focusedWindow = this.getFocusedWindow() || this.getLastActiveWindow();\n\n\t\tif (focusedWindow) {\n\t\t\tfocusedWindow.sendWhenReady(channel, CancellationToken.None, ...args);\n\t\t}\n\t}\n\n\tsendToAll(channel: string, payload?: any, windowIdsToIgnore?: number[]): void {\n\t\tfor (const window of this.getWindows()) {\n\t\t\tif (windowIdsToIgnore && windowIdsToIgnore.indexOf(window.id) >= 0) {\n\t\t\t\tcontinue; // do not send if we are instructed to ignore it\n\t\t\t}\n\n\t\t\twindow.sendWhenReady(channel, CancellationToken.None, payload);\n\t\t}\n\t}\n\n\tgetWindows(): ICodeWindow[] {\n\t\treturn WindowsMainService.WINDOWS;\n\t}\n\n\tgetWindowCount(): number {\n\t\treturn WindowsMainService.WINDOWS.length;\n\t}\n\n\tgetWindowById(windowId: number): ICodeWindow | undefined {\n\t\tconst windows = this.getWindows().filter(window => window.id === windowId);\n\n\t\treturn firstOrDefault(windows);\n\t}\n\n\tgetWindowByWebContents(webContents: WebContents): ICodeWindow | undefined {\n\t\tconst browserWindow = BrowserWindow.fromWebContents(webContents);\n\t\tif (!browserWindow) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn this.getWindowById(browserWindow.id);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { AddFirstParameterToFunctions } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { IBackupMainService } from 'vs/platform/backup/electron-main/backup';\nimport { IWindowsMainService } from 'vs/platform/windows/electron-main/windows';\nimport { IEnterWorkspaceResult, IRecent, IRecentlyOpened, IWorkspaceFolderCreationData, IWorkspaceIdentifier, IWorkspacesService } from 'vs/platform/workspaces/common/workspaces';\nimport { IWorkspacesHistoryMainService } from 'vs/platform/workspaces/electron-main/workspacesHistoryMainService';\nimport { IWorkspacesManagementMainService } from 'vs/platform/workspaces/electron-main/workspacesManagementMainService';\n\nexport class WorkspacesMainService implements AddFirstParameterToFunctions<IWorkspacesService, Promise<unknown> /* only methods, not events */, number /* window ID */> {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tconstructor(\n\t\t@IWorkspacesManagementMainService private readonly workspacesManagementMainService: IWorkspacesManagementMainService,\n\t\t@IWindowsMainService private readonly windowsMainService: IWindowsMainService,\n\t\t@IWorkspacesHistoryMainService private readonly workspacesHistoryMainService: IWorkspacesHistoryMainService,\n\t\t@IBackupMainService private readonly backupMainService: IBackupMainService\n\t) {\n\t}\n\n\t//#region Workspace Management\n\n\tasync enterWorkspace(windowId: number, path: URI): Promise<IEnterWorkspaceResult | undefined> {\n\t\tconst window = this.windowsMainService.getWindowById(windowId);\n\t\tif (window) {\n\t\t\treturn this.workspacesManagementMainService.enterWorkspace(window, this.windowsMainService.getWindows(), path);\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tcreateUntitledWorkspace(windowId: number, folders?: IWorkspaceFolderCreationData[], remoteAuthority?: string): Promise<IWorkspaceIdentifier> {\n\t\treturn this.workspacesManagementMainService.createUntitledWorkspace(folders, remoteAuthority);\n\t}\n\n\tdeleteUntitledWorkspace(windowId: number, workspace: IWorkspaceIdentifier): Promise<void> {\n\t\treturn this.workspacesManagementMainService.deleteUntitledWorkspace(workspace);\n\t}\n\n\tgetWorkspaceIdentifier(windowId: number, workspacePath: URI): Promise<IWorkspaceIdentifier> {\n\t\treturn this.workspacesManagementMainService.getWorkspaceIdentifier(workspacePath);\n\t}\n\n\t//#endregion\n\n\t//#region Workspaces History\n\n\treadonly onDidChangeRecentlyOpened = this.workspacesHistoryMainService.onDidChangeRecentlyOpened;\n\n\tasync getRecentlyOpened(windowId: number): Promise<IRecentlyOpened> {\n\t\treturn this.workspacesHistoryMainService.getRecentlyOpened(this.windowsMainService.getWindowById(windowId));\n\t}\n\n\tasync addRecentlyOpened(windowId: number, recents: IRecent[]): Promise<void> {\n\t\treturn this.workspacesHistoryMainService.addRecentlyOpened(recents);\n\t}\n\n\tasync removeRecentlyOpened(windowId: number, paths: URI[]): Promise<void> {\n\t\treturn this.workspacesHistoryMainService.removeRecentlyOpened(paths);\n\t}\n\n\tasync clearRecentlyOpened(windowId: number): Promise<void> {\n\t\treturn this.workspacesHistoryMainService.clearRecentlyOpened();\n\t}\n\n\t//#endregion\n\n\n\t//#region Dirty Workspaces\n\n\tasync getDirtyWorkspaces(): Promise<Array<IWorkspaceIdentifier | URI>> {\n\t\treturn this.backupMainService.getDirtyWorkspaces();\n\t}\n\n\t//#endregion\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { app, BrowserWindow, contentTracing, dialog, ipcMain, protocol, session, Session, systemPreferences } from 'electron';\nimport { statSync } from 'fs';\nimport { hostname, release } from 'os';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { onUnexpectedError, setUnexpectedErrorHandler } from 'vs/base/common/errors';\nimport { isEqualOrParent } from 'vs/base/common/extpath';\nimport { once } from 'vs/base/common/functional';\nimport { stripComments } from 'vs/base/common/json';\nimport { getPathLabel, mnemonicButtonLabel } from 'vs/base/common/labels';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport { isAbsolute, join, posix } from 'vs/base/common/path';\nimport { IProcessEnvironment, isLinux, isLinuxSnap, isMacintosh, isWindows } from 'vs/base/common/platform';\nimport { joinPath } from 'vs/base/common/resources';\nimport { assertType, withNullAsUndefined } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { getMachineId } from 'vs/base/node/id';\nimport { registerContextMenuListener } from 'vs/base/parts/contextmenu/electron-main/contextmenu';\nimport { getDelayedChannel, ProxyChannel, StaticRouter } from 'vs/base/parts/ipc/common/ipc';\nimport { Server as ElectronIPCServer } from 'vs/base/parts/ipc/electron-main/ipc.electron';\nimport { Client as MessagePortClient } from 'vs/base/parts/ipc/electron-main/ipc.mp';\nimport { Server as NodeIPCServer } from 'vs/base/parts/ipc/node/ipc.net';\nimport { ProxyAuthHandler } from 'vs/code/electron-main/auth';\nimport { localize } from 'vs/nls';\nimport { IBackupMainService } from 'vs/platform/backup/electron-main/backup';\nimport { BackupMainService } from 'vs/platform/backup/electron-main/backupMainService';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { UserConfigurationFileService, UserConfigurationFileServiceId } from 'vs/platform/configuration/common/userConfigurationFileService';\nimport { ElectronExtensionHostDebugBroadcastChannel } from 'vs/platform/debug/electron-main/extensionHostDebugIpc';\nimport { IDiagnosticsService } from 'vs/platform/diagnostics/common/diagnostics';\nimport { DialogMainService, IDialogMainService } from 'vs/platform/dialogs/electron-main/dialogMainService';\nimport { serve as serveDriver } from 'vs/platform/driver/electron-main/driver';\nimport { EncryptionMainService, IEncryptionMainService } from 'vs/platform/encryption/electron-main/encryptionMainService';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { IEnvironmentMainService } from 'vs/platform/environment/electron-main/environmentMainService';\nimport { isLaunchedFromCli } from 'vs/platform/environment/node/argvHelper';\nimport { getResolvedShellEnv } from 'vs/platform/environment/node/shellEnv';\nimport { IExtensionUrlTrustService } from 'vs/platform/extensionManagement/common/extensionUrlTrust';\nimport { ExtensionUrlTrustService } from 'vs/platform/extensionManagement/node/extensionUrlTrustService';\nimport { IExtensionHostStarter, ipcExtensionHostStarterChannelName } from 'vs/platform/extensions/common/extensionHostStarter';\nimport { WorkerMainProcessExtensionHostStarter } from 'vs/platform/extensions/electron-main/workerMainProcessExtensionHostStarter';\nimport { IExternalTerminalMainService } from 'vs/platform/externalTerminal/common/externalTerminal';\nimport { LinuxExternalTerminalService, MacExternalTerminalService, WindowsExternalTerminalService } from 'vs/platform/externalTerminal/node/externalTerminalService';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { DiskFileSystemProviderChannel } from 'vs/platform/files/electron-main/diskFileSystemProviderIpc';\nimport { DiskFileSystemProvider } from 'vs/platform/files/node/diskFileSystemProvider';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { IIssueMainService, IssueMainService } from 'vs/platform/issue/electron-main/issueMainService';\nimport { IKeyboardLayoutMainService, KeyboardLayoutMainService } from 'vs/platform/keyboardLayout/electron-main/keyboardLayoutMainService';\nimport { ILaunchMainService, LaunchMainService } from 'vs/platform/launch/electron-main/launchMainService';\nimport { ILifecycleMainService, LifecycleMainPhase } from 'vs/platform/lifecycle/electron-main/lifecycleMainService';\nimport { ILoggerService, ILogService } from 'vs/platform/log/common/log';\nimport { LoggerChannel, LogLevelChannel } from 'vs/platform/log/common/logIpc';\nimport { IMenubarMainService, MenubarMainService } from 'vs/platform/menubar/electron-main/menubarMainService';\nimport { INativeHostMainService, NativeHostMainService } from 'vs/platform/native/electron-main/nativeHostMainService';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { getRemoteAuthority } from 'vs/platform/remote/common/remoteHosts';\nimport { SharedProcess } from 'vs/platform/sharedProcess/electron-main/sharedProcess';\nimport { ISignService } from 'vs/platform/sign/common/sign';\nimport { IStateMainService } from 'vs/platform/state/electron-main/state';\nimport { StorageDatabaseChannel } from 'vs/platform/storage/electron-main/storageIpc';\nimport { IStorageMainService, StorageMainService } from 'vs/platform/storage/electron-main/storageMainService';\nimport { resolveCommonProperties } from 'vs/platform/telemetry/common/commonProperties';\nimport { ITelemetryService, machineIdKey, TelemetryLevel } from 'vs/platform/telemetry/common/telemetry';\nimport { TelemetryAppenderClient } from 'vs/platform/telemetry/common/telemetryIpc';\nimport { ITelemetryServiceConfig, TelemetryService } from 'vs/platform/telemetry/common/telemetryService';\nimport { getTelemetryLevel, NullTelemetryService, supportsTelemetry } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { IUpdateService } from 'vs/platform/update/common/update';\nimport { UpdateChannel } from 'vs/platform/update/common/updateIpc';\nimport { DarwinUpdateService } from 'vs/platform/update/electron-main/updateService.darwin';\nimport { LinuxUpdateService } from 'vs/platform/update/electron-main/updateService.linux';\nimport { SnapUpdateService } from 'vs/platform/update/electron-main/updateService.snap';\nimport { Win32UpdateService } from 'vs/platform/update/electron-main/updateService.win32';\nimport { IOpenURLOptions, IURLService } from 'vs/platform/url/common/url';\nimport { URLHandlerChannelClient, URLHandlerRouter } from 'vs/platform/url/common/urlIpc';\nimport { NativeURLService } from 'vs/platform/url/common/urlService';\nimport { ElectronURLListener } from 'vs/platform/url/electron-main/electronUrlListener';\nimport { IWebviewManagerService } from 'vs/platform/webview/common/webviewManagerService';\nimport { WebviewMainService } from 'vs/platform/webview/electron-main/webviewMainService';\nimport { IWindowOpenable } from 'vs/platform/windows/common/windows';\nimport { ICodeWindow, IWindowsMainService, OpenContext, WindowError } from 'vs/platform/windows/electron-main/windows';\nimport { WindowsMainService } from 'vs/platform/windows/electron-main/windowsMainService';\nimport { ActiveWindowManager } from 'vs/platform/windows/node/windowTracker';\nimport { hasWorkspaceFileExtension, IWorkspacesService } from 'vs/platform/workspaces/common/workspaces';\nimport { IWorkspacesHistoryMainService, WorkspacesHistoryMainService } from 'vs/platform/workspaces/electron-main/workspacesHistoryMainService';\nimport { WorkspacesMainService } from 'vs/platform/workspaces/electron-main/workspacesMainService';\nimport { IWorkspacesManagementMainService, WorkspacesManagementMainService } from 'vs/platform/workspaces/electron-main/workspacesManagementMainService';\n\n/**\n * The main VS Code application. There will only ever be one instance,\n * even if the user starts many instances (e.g. from the command line).\n */\nexport class CodeApplication extends Disposable {\n\n\tprivate windowsMainService: IWindowsMainService | undefined;\n\tprivate nativeHostMainService: INativeHostMainService | undefined;\n\n\tconstructor(\n\t\tprivate readonly mainProcessNodeIpcServer: NodeIPCServer,\n\t\tprivate readonly userEnv: IProcessEnvironment,\n\t\t@IInstantiationService private readonly mainInstantiationService: IInstantiationService,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IEnvironmentMainService private readonly environmentMainService: IEnvironmentMainService,\n\t\t@ILifecycleMainService private readonly lifecycleMainService: ILifecycleMainService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IStateMainService private readonly stateMainService: IStateMainService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IProductService private readonly productService: IProductService\n\t) {\n\t\tsuper();\n\n\t\tthis.configureSession();\n\t\tthis.registerListeners();\n\t}\n\n\tprivate configureSession(): void {\n\n\t\t//#region Security related measures (https://electronjs.org/docs/tutorial/security)\n\t\t//\n\t\t// !!! DO NOT CHANGE without consulting the documentation !!!\n\t\t//\n\n\t\tconst isUrlFromWebview = (requestingUrl: string | undefined) => requestingUrl?.startsWith(`${Schemas.vscodeWebview}://`);\n\n\t\tconst allowedPermissionsInWebview = new Set([\n\t\t\t'clipboard-read',\n\t\t\t'clipboard-sanitized-write',\n\t\t]);\n\n\t\tsession.defaultSession.setPermissionRequestHandler((_webContents, permission /* 'media' | 'geolocation' | 'notifications' | 'midiSysex' | 'pointerLock' | 'fullscreen' | 'openExternal' */, callback, details) => {\n\t\t\tif (isUrlFromWebview(details.requestingUrl)) {\n\t\t\t\treturn callback(allowedPermissionsInWebview.has(permission));\n\t\t\t}\n\n\t\t\treturn callback(false);\n\t\t});\n\n\t\tsession.defaultSession.setPermissionCheckHandler((_webContents, permission /* 'media' */, _origin, details) => {\n\t\t\tif (isUrlFromWebview(details.requestingUrl)) {\n\t\t\t\treturn allowedPermissionsInWebview.has(permission);\n\t\t\t}\n\n\t\t\treturn false;\n\t\t});\n\n\t\t//#endregion\n\n\n\t\t//#region Code Cache\n\n\t\ttype SessionWithCodeCachePathSupport = typeof Session & {\n\t\t\t/**\n\t\t\t * Sets code cache directory. By default, the directory will be `Code Cache` under\n\t\t\t * the respective user data folder.\n\t\t\t */\n\t\t\tsetCodeCachePath?(path: string): void;\n\t\t};\n\n\t\tconst defaultSession = session.defaultSession as unknown as SessionWithCodeCachePathSupport;\n\t\tif (typeof defaultSession.setCodeCachePath === 'function' && this.environmentMainService.codeCachePath) {\n\t\t\t// Make sure to partition Chrome's code cache folder\n\t\t\t// in the same way as our code cache path to help\n\t\t\t// invalidate caches that we know are invalid\n\t\t\t// (https://github.com/microsoft/vscode/issues/120655)\n\t\t\tdefaultSession.setCodeCachePath(join(this.environmentMainService.codeCachePath, 'chrome'));\n\t\t}\n\n\t\t//#endregion\n\t}\n\n\tprivate registerListeners(): void {\n\n\t\t// We handle uncaught exceptions here to prevent electron from opening a dialog to the user\n\t\tsetUnexpectedErrorHandler(error => this.onUnexpectedError(error));\n\t\tprocess.on('uncaughtException', error => onUnexpectedError(error));\n\t\tprocess.on('unhandledRejection', (reason: unknown) => onUnexpectedError(reason));\n\n\t\t// Dispose on shutdown\n\t\tthis.lifecycleMainService.onWillShutdown(() => this.dispose());\n\n\t\t// Contextmenu via IPC support\n\t\tregisterContextMenuListener();\n\n\t\t// Accessibility change event\n\t\tapp.on('accessibility-support-changed', (event, accessibilitySupportEnabled) => {\n\t\t\tthis.windowsMainService?.sendToAll('vscode:accessibilitySupportChanged', accessibilitySupportEnabled);\n\t\t});\n\n\t\t// macOS dock activate\n\t\tapp.on('activate', (event, hasVisibleWindows) => {\n\t\t\tthis.logService.trace('app#activate');\n\n\t\t\t// Mac only event: open new window when we get activated\n\t\t\tif (!hasVisibleWindows) {\n\t\t\t\tthis.windowsMainService?.openEmptyWindow({ context: OpenContext.DOCK });\n\t\t\t}\n\t\t});\n\n\t\t//#region Security related measures (https://electronjs.org/docs/tutorial/security)\n\t\t//\n\t\t// !!! DO NOT CHANGE without consulting the documentation !!!\n\t\t//\n\t\tapp.on('web-contents-created', (event, contents) => {\n\n\t\t\tcontents.on('will-navigate', event => {\n\t\t\t\tthis.logService.error('webContents#will-navigate: Prevented webcontent navigation');\n\n\t\t\t\tevent.preventDefault();\n\t\t\t});\n\n\t\t\tcontents.setWindowOpenHandler(({ url }) => {\n\t\t\t\tthis.nativeHostMainService?.openExternal(undefined, url);\n\n\t\t\t\treturn { action: 'deny' };\n\t\t\t});\n\t\t});\n\n\t\t//#endregion\n\n\t\tlet macOpenFileURIs: IWindowOpenable[] = [];\n\t\tlet runningTimeout: NodeJS.Timeout | undefined = undefined;\n\t\tapp.on('open-file', (event, path) => {\n\t\t\tthis.logService.trace('app#open-file: ', path);\n\t\t\tevent.preventDefault();\n\n\t\t\t// Keep in array because more might come!\n\t\t\tmacOpenFileURIs.push(this.getWindowOpenableFromPathSync(path));\n\n\t\t\t// Clear previous handler if any\n\t\t\tif (runningTimeout !== undefined) {\n\t\t\t\tclearTimeout(runningTimeout);\n\t\t\t\trunningTimeout = undefined;\n\t\t\t}\n\n\t\t\t// Handle paths delayed in case more are coming!\n\t\t\trunningTimeout = setTimeout(() => {\n\t\t\t\tthis.windowsMainService?.open({\n\t\t\t\t\tcontext: OpenContext.DOCK /* can also be opening from finder while app is running */,\n\t\t\t\t\tcli: this.environmentMainService.args,\n\t\t\t\t\turisToOpen: macOpenFileURIs,\n\t\t\t\t\tgotoLineMode: false,\n\t\t\t\t\tpreferNewWindow: true /* dropping on the dock or opening from finder prefers to open in a new window */\n\t\t\t\t});\n\n\t\t\t\tmacOpenFileURIs = [];\n\t\t\t\trunningTimeout = undefined;\n\t\t\t}, 100);\n\t\t});\n\n\t\tapp.on('new-window-for-tab', () => {\n\t\t\tthis.windowsMainService?.openEmptyWindow({ context: OpenContext.DESKTOP }); //macOS native tab \"+\" button\n\t\t});\n\n\t\t//#region Bootstrap IPC Handlers\n\n\t\tipcMain.handle('vscode:fetchShellEnv', event => {\n\n\t\t\t// Prefer to use the args and env from the target window\n\t\t\t// when resolving the shell env. It is possible that\n\t\t\t// a first window was opened from the UI but a second\n\t\t\t// from the CLI and that has implications for whether to\n\t\t\t// resolve the shell environment or not.\n\t\t\t//\n\t\t\t// Window can be undefined for e.g. the shared process\n\t\t\t// that is not part of our windows registry!\n\t\t\tconst window = this.windowsMainService?.getWindowByWebContents(event.sender); // Note: this can be `undefined` for the shared process\n\t\t\tlet args: NativeParsedArgs;\n\t\t\tlet env: IProcessEnvironment;\n\t\t\tif (window?.config) {\n\t\t\t\targs = window.config;\n\t\t\t\tenv = { ...process.env, ...window.config.userEnv };\n\t\t\t} else {\n\t\t\t\targs = this.environmentMainService.args;\n\t\t\t\tenv = process.env;\n\t\t\t}\n\n\t\t\t// Resolve shell env\n\t\t\treturn this.resolveShellEnvironment(args, env, false);\n\t\t});\n\n\t\tipcMain.handle('vscode:writeNlsFile', (event, path: unknown, data: unknown) => {\n\t\t\tconst uri = this.validateNlsPath([path]);\n\t\t\tif (!uri || typeof data !== 'string') {\n\t\t\t\tthrow new Error('Invalid operation (vscode:writeNlsFile)');\n\t\t\t}\n\n\t\t\treturn this.fileService.writeFile(uri, VSBuffer.fromString(data));\n\t\t});\n\n\t\tipcMain.handle('vscode:readNlsFile', async (event, ...paths: unknown[]) => {\n\t\t\tconst uri = this.validateNlsPath(paths);\n\t\t\tif (!uri) {\n\t\t\t\tthrow new Error('Invalid operation (vscode:readNlsFile)');\n\t\t\t}\n\n\t\t\treturn (await this.fileService.readFile(uri)).value.toString();\n\t\t});\n\n\t\tipcMain.on('vscode:toggleDevTools', event => event.sender.toggleDevTools());\n\t\tipcMain.on('vscode:openDevTools', event => event.sender.openDevTools());\n\n\t\tipcMain.on('vscode:reloadWindow', event => event.sender.reload());\n\n\t\t//#endregion\n\t}\n\n\tprivate validateNlsPath(pathSegments: unknown[]): URI | undefined {\n\t\tlet path: string | undefined = undefined;\n\n\t\tfor (const pathSegment of pathSegments) {\n\t\t\tif (typeof pathSegment === 'string') {\n\t\t\t\tif (typeof path !== 'string') {\n\t\t\t\t\tpath = pathSegment;\n\t\t\t\t} else {\n\t\t\t\t\tpath = join(path, pathSegment);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (typeof path !== 'string' || !isAbsolute(path) || !isEqualOrParent(path, this.environmentMainService.cachedLanguagesPath, !isLinux)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn URI.file(path);\n\t}\n\n\tprivate onUnexpectedError(error: Error): void {\n\t\tif (error) {\n\n\t\t\t// take only the message and stack property\n\t\t\tconst friendlyError = {\n\t\t\t\tmessage: `[uncaught exception in main]: ${error.message}`,\n\t\t\t\tstack: error.stack\n\t\t\t};\n\n\t\t\t// handle on client side\n\t\t\tthis.windowsMainService?.sendToFocused('vscode:reportError', JSON.stringify(friendlyError));\n\t\t}\n\n\t\tthis.logService.error(`[uncaught exception in main]: ${error}`);\n\t\tif (error.stack) {\n\t\t\tthis.logService.error(error.stack);\n\t\t}\n\t}\n\n\tasync startup(): Promise<void> {\n\t\tthis.logService.debug('Starting VS Code');\n\t\tthis.logService.debug(`from: ${this.environmentMainService.appRoot}`);\n\t\tthis.logService.debug('args:', this.environmentMainService.args);\n\n\t\t// Make sure we associate the program with the app user model id\n\t\t// This will help Windows to associate the running program with\n\t\t// any shortcut that is pinned to the taskbar and prevent showing\n\t\t// two icons in the taskbar for the same app.\n\t\tconst win32AppUserModelId = this.productService.win32AppUserModelId;\n\t\tif (isWindows && win32AppUserModelId) {\n\t\t\tapp.setAppUserModelId(win32AppUserModelId);\n\t\t}\n\n\t\t// Fix native tabs on macOS 10.13\n\t\t// macOS enables a compatibility patch for any bundle ID beginning with\n\t\t// \"com.microsoft.\", which breaks native tabs for VS Code when using this\n\t\t// identifier (from the official build).\n\t\t// Explicitly opt out of the patch here before creating any windows.\n\t\t// See: https://github.com/microsoft/vscode/issues/35361#issuecomment-399794085\n\t\ttry {\n\t\t\tif (isMacintosh && this.configurationService.getValue('window.nativeTabs') === true && !systemPreferences.getUserDefault('NSUseImprovedLayoutPass', 'boolean')) {\n\t\t\t\tsystemPreferences.setUserDefault('NSUseImprovedLayoutPass', 'boolean', true as any);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t}\n\n\t\t// Main process server (electron IPC based)\n\t\tconst mainProcessElectronServer = new ElectronIPCServer();\n\n\t\t// Resolve unique machine ID\n\t\tthis.logService.trace('Resolving machine identifier...');\n\t\tconst machineId = await this.resolveMachineId();\n\t\tthis.logService.trace(`Resolved machine identifier: ${machineId}`);\n\n\t\t// Shared process\n\t\tconst { sharedProcess, sharedProcessReady, sharedProcessClient } = this.setupSharedProcess(machineId);\n\n\t\t// Services\n\t\tconst appInstantiationService = await this.initServices(machineId, sharedProcess, sharedProcessReady);\n\n\t\t// Create driver\n\t\tif (this.environmentMainService.driverHandle) {\n\t\t\tconst server = await serveDriver(mainProcessElectronServer, this.environmentMainService.driverHandle, this.environmentMainService, appInstantiationService);\n\n\t\t\tthis.logService.info('Driver started at:', this.environmentMainService.driverHandle);\n\t\t\tthis._register(server);\n\t\t}\n\n\t\t// Setup Auth Handler\n\t\tthis._register(appInstantiationService.createInstance(ProxyAuthHandler));\n\n\t\t// Init Channels\n\t\tappInstantiationService.invokeFunction(accessor => this.initChannels(accessor, mainProcessElectronServer, sharedProcessClient));\n\n\t\t// Open Windows\n\t\tconst windows = appInstantiationService.invokeFunction(accessor => this.openFirstWindow(accessor, mainProcessElectronServer));\n\n\t\t// Post Open Windows Tasks\n\t\tappInstantiationService.invokeFunction(accessor => this.afterWindowOpen(accessor, sharedProcess));\n\n\t\t// Tracing: Stop tracing after windows are ready if enabled\n\t\tif (this.environmentMainService.args.trace) {\n\t\t\tappInstantiationService.invokeFunction(accessor => this.stopTracingEventually(accessor, windows));\n\t\t}\n\t}\n\n\tprivate async resolveMachineId(): Promise<string> {\n\n\t\t// We cache the machineId for faster lookups on startup\n\t\t// and resolve it only once initially if not cached or we need to replace the macOS iBridge device\n\t\tlet machineId = this.stateMainService.getItem<string>(machineIdKey);\n\t\tif (!machineId || (isMacintosh && machineId === '6c9d2bc8f91b89624add29c0abeae7fb42bf539fa1cdb2e3e57cd668fa9bcead')) {\n\t\t\tmachineId = await getMachineId();\n\n\t\t\tthis.stateMainService.setItem(machineIdKey, machineId);\n\t\t}\n\n\t\treturn machineId;\n\t}\n\n\tprivate setupSharedProcess(machineId: string): { sharedProcess: SharedProcess, sharedProcessReady: Promise<MessagePortClient>, sharedProcessClient: Promise<MessagePortClient> } {\n\t\tconst sharedProcess = this._register(this.mainInstantiationService.createInstance(SharedProcess, machineId, this.userEnv));\n\n\t\tconst sharedProcessClient = (async () => {\n\t\t\tthis.logService.trace('Main->SharedProcess#connect');\n\n\t\t\tconst port = await sharedProcess.connect();\n\n\t\t\tthis.logService.trace('Main->SharedProcess#connect: connection established');\n\n\t\t\treturn new MessagePortClient(port, 'main');\n\t\t})();\n\n\t\tconst sharedProcessReady = (async () => {\n\t\t\tawait sharedProcess.whenReady();\n\n\t\t\treturn sharedProcessClient;\n\t\t})();\n\n\t\treturn { sharedProcess, sharedProcessReady, sharedProcessClient };\n\t}\n\n\tprivate async initServices(machineId: string, sharedProcess: SharedProcess, sharedProcessReady: Promise<MessagePortClient>): Promise<IInstantiationService> {\n\t\tconst services = new ServiceCollection();\n\n\t\t// Update\n\t\tswitch (process.platform) {\n\t\t\tcase 'win32':\n\t\t\t\tservices.set(IUpdateService, new SyncDescriptor(Win32UpdateService));\n\t\t\t\tbreak;\n\n\t\t\tcase 'linux':\n\t\t\t\tif (isLinuxSnap) {\n\t\t\t\t\tservices.set(IUpdateService, new SyncDescriptor(SnapUpdateService, [process.env['SNAP'], process.env['SNAP_REVISION']]));\n\t\t\t\t} else {\n\t\t\t\t\tservices.set(IUpdateService, new SyncDescriptor(LinuxUpdateService));\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'darwin':\n\t\t\t\tservices.set(IUpdateService, new SyncDescriptor(DarwinUpdateService));\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Windows\n\t\tservices.set(IWindowsMainService, new SyncDescriptor(WindowsMainService, [machineId, this.userEnv]));\n\n\t\t// Dialogs\n\t\tservices.set(IDialogMainService, new SyncDescriptor(DialogMainService));\n\n\t\t// Launch\n\t\tservices.set(ILaunchMainService, new SyncDescriptor(LaunchMainService));\n\n\t\t// Diagnostics\n\t\tservices.set(IDiagnosticsService, ProxyChannel.toService(getDelayedChannel(sharedProcessReady.then(client => client.getChannel('diagnostics')))));\n\n\t\t// Issues\n\t\tservices.set(IIssueMainService, new SyncDescriptor(IssueMainService, [this.userEnv]));\n\n\t\t// Encryption\n\t\tservices.set(IEncryptionMainService, new SyncDescriptor(EncryptionMainService, [machineId]));\n\n\t\t// Keyboard Layout\n\t\tservices.set(IKeyboardLayoutMainService, new SyncDescriptor(KeyboardLayoutMainService));\n\n\t\t// Native Host\n\t\tservices.set(INativeHostMainService, new SyncDescriptor(NativeHostMainService, [sharedProcess]));\n\n\t\t// Webview Manager\n\t\tservices.set(IWebviewManagerService, new SyncDescriptor(WebviewMainService));\n\n\t\t// Workspaces\n\t\tservices.set(IWorkspacesService, new SyncDescriptor(WorkspacesMainService));\n\t\tservices.set(IWorkspacesManagementMainService, new SyncDescriptor(WorkspacesManagementMainService));\n\t\tservices.set(IWorkspacesHistoryMainService, new SyncDescriptor(WorkspacesHistoryMainService));\n\n\t\t// Menubar\n\t\tservices.set(IMenubarMainService, new SyncDescriptor(MenubarMainService));\n\n\t\t// Extension URL Trust\n\t\tservices.set(IExtensionUrlTrustService, new SyncDescriptor(ExtensionUrlTrustService));\n\n\t\t// Extension Host Starter\n\t\tservices.set(IExtensionHostStarter, new SyncDescriptor(WorkerMainProcessExtensionHostStarter));\n\n\t\t// Storage\n\t\tservices.set(IStorageMainService, new SyncDescriptor(StorageMainService));\n\n\t\t// External terminal\n\t\tif (isWindows) {\n\t\t\tservices.set(IExternalTerminalMainService, new SyncDescriptor(WindowsExternalTerminalService));\n\t\t} else if (isMacintosh) {\n\t\t\tservices.set(IExternalTerminalMainService, new SyncDescriptor(MacExternalTerminalService));\n\t\t} else if (isLinux) {\n\t\t\tservices.set(IExternalTerminalMainService, new SyncDescriptor(LinuxExternalTerminalService));\n\t\t}\n\n\t\t// Backups\n\t\tconst backupMainService = new BackupMainService(this.environmentMainService, this.configurationService, this.logService);\n\t\tservices.set(IBackupMainService, backupMainService);\n\n\t\t// URL handling\n\t\tservices.set(IURLService, new SyncDescriptor(NativeURLService));\n\n\t\t// Telemetry\n\t\tif (supportsTelemetry(this.productService, this.environmentMainService)) {\n\t\t\tconst channel = getDelayedChannel(sharedProcessReady.then(client => client.getChannel('telemetryAppender')));\n\t\t\tconst appender = new TelemetryAppenderClient(channel);\n\t\t\tconst commonProperties = resolveCommonProperties(this.fileService, release(), hostname(), process.arch, this.productService.commit, this.productService.version, machineId, this.productService.msftInternalDomains, this.environmentMainService.installSourcePath);\n\t\t\tconst piiPaths = [this.environmentMainService.appRoot, this.environmentMainService.extensionsPath];\n\t\t\tconst config: ITelemetryServiceConfig = { appenders: [appender], commonProperties, piiPaths, sendErrorTelemetry: true };\n\n\t\t\tservices.set(ITelemetryService, new SyncDescriptor(TelemetryService, [config]));\n\t\t} else {\n\t\t\tservices.set(ITelemetryService, NullTelemetryService);\n\t\t}\n\n\t\t// Init services that require it\n\t\tawait backupMainService.initialize();\n\n\t\treturn this.mainInstantiationService.createChild(services);\n\t}\n\n\tprivate initChannels(accessor: ServicesAccessor, mainProcessElectronServer: ElectronIPCServer, sharedProcessClient: Promise<MessagePortClient>): void {\n\n\t\t// Launch: this one is explicitly registered to the node.js\n\t\t// server because when a second instance starts up, that is\n\t\t// the only possible connection between the first and the\n\t\t// second instance. Electron IPC does not work across apps.\n\t\tconst launchChannel = ProxyChannel.fromService(accessor.get(ILaunchMainService), { disableMarshalling: true });\n\t\tthis.mainProcessNodeIpcServer.registerChannel('launch', launchChannel);\n\n\t\t// Local Files\n\t\tconst diskFileSystemProvider = this.fileService.getProvider(Schemas.file);\n\t\tassertType(diskFileSystemProvider instanceof DiskFileSystemProvider);\n\t\tconst fileSystemProviderChannel = new DiskFileSystemProviderChannel(diskFileSystemProvider, this.logService);\n\t\tmainProcessElectronServer.registerChannel('localFilesystem', fileSystemProviderChannel);\n\n\t\t// User Configuration File\n\t\tconst userConfigurationFileService = new UserConfigurationFileService(this.environmentMainService, this.fileService, this.logService);\n\t\tmainProcessElectronServer.registerChannel(UserConfigurationFileServiceId, ProxyChannel.fromService(userConfigurationFileService));\n\t\tsharedProcessClient.then(client => client.registerChannel(UserConfigurationFileServiceId, ProxyChannel.fromService(userConfigurationFileService)));\n\n\t\t// Update\n\t\tconst updateChannel = new UpdateChannel(accessor.get(IUpdateService));\n\t\tmainProcessElectronServer.registerChannel('update', updateChannel);\n\n\t\t// Issues\n\t\tconst issueChannel = ProxyChannel.fromService(accessor.get(IIssueMainService));\n\t\tmainProcessElectronServer.registerChannel('issue', issueChannel);\n\n\t\t// Encryption\n\t\tconst encryptionChannel = ProxyChannel.fromService(accessor.get(IEncryptionMainService));\n\t\tmainProcessElectronServer.registerChannel('encryption', encryptionChannel);\n\n\t\t// Signing\n\t\tconst signChannel = ProxyChannel.fromService(accessor.get(ISignService));\n\t\tmainProcessElectronServer.registerChannel('sign', signChannel);\n\n\t\t// Keyboard Layout\n\t\tconst keyboardLayoutChannel = ProxyChannel.fromService(accessor.get(IKeyboardLayoutMainService));\n\t\tmainProcessElectronServer.registerChannel('keyboardLayout', keyboardLayoutChannel);\n\n\t\t// Native host (main & shared process)\n\t\tthis.nativeHostMainService = accessor.get(INativeHostMainService);\n\t\tconst nativeHostChannel = ProxyChannel.fromService(this.nativeHostMainService);\n\t\tmainProcessElectronServer.registerChannel('nativeHost', nativeHostChannel);\n\t\tsharedProcessClient.then(client => client.registerChannel('nativeHost', nativeHostChannel));\n\n\t\t// Workspaces\n\t\tconst workspacesChannel = ProxyChannel.fromService(accessor.get(IWorkspacesService));\n\t\tmainProcessElectronServer.registerChannel('workspaces', workspacesChannel);\n\n\t\t// Menubar\n\t\tconst menubarChannel = ProxyChannel.fromService(accessor.get(IMenubarMainService));\n\t\tmainProcessElectronServer.registerChannel('menubar', menubarChannel);\n\n\t\t// URL handling\n\t\tconst urlChannel = ProxyChannel.fromService(accessor.get(IURLService));\n\t\tmainProcessElectronServer.registerChannel('url', urlChannel);\n\n\t\t// Extension URL Trust\n\t\tconst extensionUrlTrustChannel = ProxyChannel.fromService(accessor.get(IExtensionUrlTrustService));\n\t\tmainProcessElectronServer.registerChannel('extensionUrlTrust', extensionUrlTrustChannel);\n\n\t\t// Webview Manager\n\t\tconst webviewChannel = ProxyChannel.fromService(accessor.get(IWebviewManagerService));\n\t\tmainProcessElectronServer.registerChannel('webview', webviewChannel);\n\n\t\t// Storage (main & shared process)\n\t\tconst storageChannel = this._register(new StorageDatabaseChannel(this.logService, accessor.get(IStorageMainService)));\n\t\tmainProcessElectronServer.registerChannel('storage', storageChannel);\n\t\tsharedProcessClient.then(client => client.registerChannel('storage', storageChannel));\n\n\t\t// External Terminal\n\t\tconst externalTerminalChannel = ProxyChannel.fromService(accessor.get(IExternalTerminalMainService));\n\t\tmainProcessElectronServer.registerChannel('externalTerminal', externalTerminalChannel);\n\n\t\t// Log Level (main & shared process)\n\t\tconst logLevelChannel = new LogLevelChannel(accessor.get(ILogService));\n\t\tmainProcessElectronServer.registerChannel('logLevel', logLevelChannel);\n\t\tsharedProcessClient.then(client => client.registerChannel('logLevel', logLevelChannel));\n\n\t\t// Logger\n\t\tconst loggerChannel = new LoggerChannel(accessor.get(ILoggerService),);\n\t\tmainProcessElectronServer.registerChannel('logger', loggerChannel);\n\t\tsharedProcessClient.then(client => client.registerChannel('logger', loggerChannel));\n\n\t\t// Extension Host Debug Broadcasting\n\t\tconst electronExtensionHostDebugBroadcastChannel = new ElectronExtensionHostDebugBroadcastChannel(accessor.get(IWindowsMainService));\n\t\tmainProcessElectronServer.registerChannel('extensionhostdebugservice', electronExtensionHostDebugBroadcastChannel);\n\n\t\t// Extension Host Starter\n\t\tconst extensionHostStarterChannel = ProxyChannel.fromService(accessor.get(IExtensionHostStarter));\n\t\tmainProcessElectronServer.registerChannel(ipcExtensionHostStarterChannelName, extensionHostStarterChannel);\n\t}\n\n\tprivate openFirstWindow(accessor: ServicesAccessor, mainProcessElectronServer: ElectronIPCServer): ICodeWindow[] {\n\t\tconst windowsMainService = this.windowsMainService = accessor.get(IWindowsMainService);\n\t\tconst urlService = accessor.get(IURLService);\n\t\tconst nativeHostMainService = accessor.get(INativeHostMainService);\n\n\t\t// Signal phase: ready (services set)\n\t\tthis.lifecycleMainService.phase = LifecycleMainPhase.Ready;\n\n\t\t// Check for initial URLs to handle from protocol link invocations\n\t\tconst pendingWindowOpenablesFromProtocolLinks: IWindowOpenable[] = [];\n\t\tconst pendingProtocolLinksToHandle = [\n\n\t\t\t// Windows/Linux: protocol handler invokes CLI with --open-url\n\t\t\t...this.environmentMainService.args['open-url'] ? this.environmentMainService.args._urls || [] : [],\n\n\t\t\t// macOS: open-url events\n\t\t\t...((<any>global).getOpenUrls() || []) as string[]\n\n\t\t].map(url => {\n\t\t\ttry {\n\t\t\t\treturn { uri: URI.parse(url), url };\n\t\t\t} catch {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t}).filter((obj): obj is { uri: URI, url: string } => {\n\t\t\tif (!obj) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// If URI should be blocked, filter it out\n\t\t\tif (this.shouldBlockURI(obj.uri)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Filter out any protocol link that wants to open as window so that\n\t\t\t// we open the right set of windows on startup and not restore the\n\t\t\t// previous workspace too.\n\t\t\tconst windowOpenable = this.getWindowOpenableFromProtocolLink(obj.uri);\n\t\t\tif (windowOpenable) {\n\t\t\t\tpendingWindowOpenablesFromProtocolLinks.push(windowOpenable);\n\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t});\n\n\t\t// Create a URL handler to open file URIs in the active window\n\t\t// or open new windows. The URL handler will be invoked from\n\t\t// protocol invocations outside of VSCode.\n\t\tconst app = this;\n\t\tconst environmentService = this.environmentMainService;\n\t\tconst productService = this.productService;\n\t\turlService.registerHandler({\n\t\t\tasync handleURL(uri: URI, options?: IOpenURLOptions): Promise<boolean> {\n\t\t\t\tif (uri.scheme === productService.urlProtocol && uri.path === 'workspace') {\n\t\t\t\t\turi = uri.with({\n\t\t\t\t\t\tauthority: 'file',\n\t\t\t\t\t\tpath: URI.parse(uri.query).path,\n\t\t\t\t\t\tquery: ''\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\t// If URI should be blocked, behave as if it's handled\n\t\t\t\tif (app.shouldBlockURI(uri)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\t// Check for URIs to open in window\n\t\t\t\tconst windowOpenableFromProtocolLink = app.getWindowOpenableFromProtocolLink(uri);\n\t\t\t\tif (windowOpenableFromProtocolLink) {\n\t\t\t\t\tconst [window] = windowsMainService.open({\n\t\t\t\t\t\tcontext: OpenContext.API,\n\t\t\t\t\t\tcli: { ...environmentService.args },\n\t\t\t\t\t\turisToOpen: [windowOpenableFromProtocolLink],\n\t\t\t\t\t\tgotoLineMode: true\n\t\t\t\t\t\t// remoteAuthority: will be determined based on windowOpenableFromProtocolLink\n\t\t\t\t\t});\n\n\t\t\t\t\twindow.focus(); // this should help ensuring that the right window gets focus when multiple are opened\n\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\t// If we have not yet handled the URI and we have no window opened (macOS only)\n\t\t\t\t// we first open a window and then try to open that URI within that window\n\t\t\t\tif (isMacintosh && windowsMainService.getWindowCount() === 0) {\n\t\t\t\t\tconst [window] = windowsMainService.open({\n\t\t\t\t\t\tcontext: OpenContext.API,\n\t\t\t\t\t\tcli: { ...environmentService.args },\n\t\t\t\t\t\tforceEmpty: true,\n\t\t\t\t\t\tgotoLineMode: true,\n\t\t\t\t\t\tremoteAuthority: getRemoteAuthority(uri)\n\t\t\t\t\t});\n\n\t\t\t\t\tawait window.ready();\n\n\t\t\t\t\treturn urlService.open(uri, options);\n\t\t\t\t}\n\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\n\t\t// Create a URL handler which forwards to the last active window\n\t\tconst activeWindowManager = this._register(new ActiveWindowManager({\n\t\t\tonDidOpenWindow: nativeHostMainService.onDidOpenWindow,\n\t\t\tonDidFocusWindow: nativeHostMainService.onDidFocusWindow,\n\t\t\tgetActiveWindowId: () => nativeHostMainService.getActiveWindowId(-1)\n\t\t}));\n\t\tconst activeWindowRouter = new StaticRouter(ctx => activeWindowManager.getActiveClientId().then(id => ctx === id));\n\t\tconst urlHandlerRouter = new URLHandlerRouter(activeWindowRouter);\n\t\tconst urlHandlerChannel = mainProcessElectronServer.getChannel('urlHandler', urlHandlerRouter);\n\t\turlService.registerHandler(new URLHandlerChannelClient(urlHandlerChannel));\n\n\t\t// Watch Electron URLs and forward them to the UrlService\n\t\tthis._register(new ElectronURLListener(pendingProtocolLinksToHandle, urlService, windowsMainService, this.environmentMainService, this.productService));\n\n\t\t// Open our first window\n\t\tconst args = this.environmentMainService.args;\n\t\tconst macOpenFiles: string[] = (<any>global).macOpenFiles;\n\t\tconst context = isLaunchedFromCli(process.env) ? OpenContext.CLI : OpenContext.DESKTOP;\n\t\tconst hasCliArgs = args._.length;\n\t\tconst hasFolderURIs = !!args['folder-uri'];\n\t\tconst hasFileURIs = !!args['file-uri'];\n\t\tconst noRecentEntry = args['skip-add-to-recently-opened'] === true;\n\t\tconst waitMarkerFileURI = args.wait && args.waitMarkerFilePath ? URI.file(args.waitMarkerFilePath) : undefined;\n\t\tconst remoteAuthority = args.remote || undefined;\n\n\t\t// check for a pending window to open from URI\n\t\t// e.g. when running code with --open-uri from\n\t\t// a protocol handler\n\t\tif (pendingWindowOpenablesFromProtocolLinks.length > 0) {\n\t\t\treturn windowsMainService.open({\n\t\t\t\tcontext,\n\t\t\t\tcli: args,\n\t\t\t\turisToOpen: pendingWindowOpenablesFromProtocolLinks,\n\t\t\t\tgotoLineMode: true,\n\t\t\t\tinitialStartup: true\n\t\t\t\t// remoteAuthority: will be determined based on pendingWindowOpenablesFromProtocolLinks\n\t\t\t});\n\t\t}\n\n\t\t// new window if \"-n\"\n\t\tif (args['new-window'] && !hasCliArgs && !hasFolderURIs && !hasFileURIs) {\n\t\t\treturn windowsMainService.open({\n\t\t\t\tcontext,\n\t\t\t\tcli: args,\n\t\t\t\tforceNewWindow: true,\n\t\t\t\tforceEmpty: true,\n\t\t\t\tnoRecentEntry,\n\t\t\t\twaitMarkerFileURI,\n\t\t\t\tinitialStartup: true,\n\t\t\t\tremoteAuthority\n\t\t\t});\n\t\t}\n\n\t\t// mac: open-file event received on startup\n\t\tif (macOpenFiles.length && !hasCliArgs && !hasFolderURIs && !hasFileURIs) {\n\t\t\treturn windowsMainService.open({\n\t\t\t\tcontext: OpenContext.DOCK,\n\t\t\t\tcli: args,\n\t\t\t\turisToOpen: macOpenFiles.map(file => this.getWindowOpenableFromPathSync(file)),\n\t\t\t\tnoRecentEntry,\n\t\t\t\twaitMarkerFileURI,\n\t\t\t\tinitialStartup: true,\n\t\t\t\t// remoteAuthority: will be determined based on macOpenFiles\n\t\t\t});\n\t\t}\n\n\t\t// default: read paths from cli\n\t\treturn windowsMainService.open({\n\t\t\tcontext,\n\t\t\tcli: args,\n\t\t\tforceNewWindow: args['new-window'] || (!hasCliArgs && args['unity-launch']),\n\t\t\tdiffMode: args.diff,\n\t\t\tnoRecentEntry,\n\t\t\twaitMarkerFileURI,\n\t\t\tgotoLineMode: args.goto,\n\t\t\tinitialStartup: true,\n\t\t\tremoteAuthority\n\t\t});\n\t}\n\n\tprivate shouldBlockURI(uri: URI): boolean {\n\t\tif (uri.authority === Schemas.file && isWindows) {\n\t\t\tconst res = dialog.showMessageBoxSync({\n\t\t\t\ttitle: this.productService.nameLong,\n\t\t\t\ttype: 'question',\n\t\t\t\tbuttons: [\n\t\t\t\t\tmnemonicButtonLabel(localize({ key: 'open', comment: ['&& denotes a mnemonic'] }, \"&&Yes\")),\n\t\t\t\t\tmnemonicButtonLabel(localize({ key: 'cancel', comment: ['&& denotes a mnemonic'] }, \"&&No\")),\n\t\t\t\t],\n\t\t\t\tdefaultId: 0,\n\t\t\t\tcancelId: 1,\n\t\t\t\tmessage: localize('confirmOpenMessage', \"An external application wants to open '{0}' in {1}. Do you want to open this file or folder?\", getPathLabel(uri.fsPath, this.environmentMainService), this.productService.nameShort),\n\t\t\t\tdetail: localize('confirmOpenDetail', \"If you did not initiate this request, it may represent an attempted attack on your system. Unless you took an explicit action to initiate this request, you should press 'No'\"),\n\t\t\t\tnoLink: true\n\t\t\t});\n\n\t\t\tif (res === 1) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tprivate getWindowOpenableFromProtocolLink(uri: URI): IWindowOpenable | undefined {\n\t\tif (!uri.path) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// File path\n\t\tif (uri.authority === Schemas.file) {\n\t\t\tconst fileUri = URI.file(uri.fsPath);\n\n\t\t\tif (hasWorkspaceFileExtension(fileUri)) {\n\t\t\t\treturn { workspaceUri: fileUri };\n\t\t\t}\n\n\t\t\treturn { fileUri };\n\t\t}\n\n\t\t// Remote path\n\t\telse if (uri.authority === Schemas.vscodeRemote) {\n\t\t\t// Example conversion:\n\t\t\t// From: vscode://vscode-remote/wsl+ubuntu/mnt/c/GitDevelopment/monaco\n\t\t\t//   To: vscode-remote://wsl+ubuntu/mnt/c/GitDevelopment/monaco\n\t\t\tconst secondSlash = uri.path.indexOf(posix.sep, 1 /* skip over the leading slash */);\n\t\t\tif (secondSlash !== -1) {\n\t\t\t\tconst authority = uri.path.substring(1, secondSlash);\n\t\t\t\tconst path = uri.path.substring(secondSlash);\n\t\t\t\tconst remoteUri = URI.from({ scheme: Schemas.vscodeRemote, authority, path, query: uri.query, fragment: uri.fragment });\n\n\t\t\t\tif (hasWorkspaceFileExtension(path)) {\n\t\t\t\t\treturn { workspaceUri: remoteUri };\n\t\t\t\t}\n\n\t\t\t\tif (/:[\\d]+$/.test(path)) {\n\t\t\t\t\t// path with :line:column syntax\n\t\t\t\t\treturn { fileUri: remoteUri };\n\t\t\t\t}\n\n\t\t\t\treturn { folderUri: remoteUri };\n\t\t\t}\n\t\t}\n\n\t\treturn undefined;\n\t}\n\n\tprivate getWindowOpenableFromPathSync(path: string): IWindowOpenable {\n\t\ttry {\n\t\t\tconst fileStat = statSync(path);\n\t\t\tif (fileStat.isDirectory()) {\n\t\t\t\treturn { folderUri: URI.file(path) };\n\t\t\t}\n\n\t\t\tif (hasWorkspaceFileExtension(path)) {\n\t\t\t\treturn { workspaceUri: URI.file(path) };\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t// ignore errors\n\t\t}\n\n\t\treturn { fileUri: URI.file(path) };\n\t}\n\n\tprivate async afterWindowOpen(accessor: ServicesAccessor, sharedProcess: SharedProcess): Promise<void> {\n\n\t\t// Signal phase: after window open\n\t\tthis.lifecycleMainService.phase = LifecycleMainPhase.AfterWindowOpen;\n\n\t\t// Observe shared process for errors\n\t\tlet willShutdown = false;\n\t\tonce(this.lifecycleMainService.onWillShutdown)(() => willShutdown = true);\n\t\tconst telemetryService = accessor.get(ITelemetryService);\n\t\tthis._register(sharedProcess.onDidError(({ type, details }) => {\n\n\t\t\t// Logging\n\t\t\tlet message: string;\n\t\t\tswitch (type) {\n\t\t\t\tcase WindowError.UNRESPONSIVE:\n\t\t\t\t\tmessage = 'SharedProcess: detected unresponsive window';\n\t\t\t\t\tbreak;\n\t\t\t\tcase WindowError.CRASHED:\n\t\t\t\t\tmessage = `SharedProcess: crashed (detail: ${details?.reason ?? '<unknown>'}, code: ${details?.exitCode ?? '<unknown>'})`;\n\t\t\t\t\tbreak;\n\t\t\t\tcase WindowError.LOAD:\n\t\t\t\t\tmessage = `SharedProcess: failed to load (detail: ${details?.reason ?? '<unknown>'}, code: ${details?.exitCode ?? '<unknown>'})`;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tonUnexpectedError(new Error(message));\n\n\t\t\t// Telemetry\n\t\t\ttype SharedProcessErrorClassification = {\n\t\t\t\ttype: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth', isMeasurement: true };\n\t\t\t\treason: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth', isMeasurement: true };\n\t\t\t\tcode: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth', isMeasurement: true };\n\t\t\t\tvisible: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth', isMeasurement: true };\n\t\t\t\tshuttingdown: { classification: 'SystemMetaData', purpose: 'PerformanceAndHealth', isMeasurement: true };\n\t\t\t};\n\t\t\ttype SharedProcessErrorEvent = {\n\t\t\t\ttype: WindowError;\n\t\t\t\treason: string | undefined;\n\t\t\t\tcode: number | undefined;\n\t\t\t\tvisible: boolean;\n\t\t\t\tshuttingdown: boolean;\n\t\t\t};\n\t\t\ttelemetryService.publicLog2<SharedProcessErrorEvent, SharedProcessErrorClassification>('sharedprocesserror', {\n\t\t\t\ttype,\n\t\t\t\treason: details?.reason,\n\t\t\t\tcode: details?.exitCode,\n\t\t\t\tvisible: sharedProcess.isVisible(),\n\t\t\t\tshuttingdown: willShutdown\n\t\t\t});\n\t\t}));\n\n\t\t// Windows: install mutex\n\t\tconst win32MutexName = this.productService.win32MutexName;\n\t\tif (isWindows && win32MutexName) {\n\t\t\ttry {\n\t\t\t\tconst WindowsMutex = (require.__$__nodeRequire('windows-mutex') as typeof import('windows-mutex')).Mutex;\n\t\t\t\tconst mutex = new WindowsMutex(win32MutexName);\n\t\t\t\tonce(this.lifecycleMainService.onWillShutdown)(() => mutex.release());\n\t\t\t} catch (error) {\n\t\t\t\tthis.logService.error(error);\n\t\t\t}\n\t\t}\n\n\t\t// Remote Authorities\n\t\tprotocol.registerHttpProtocol(Schemas.vscodeRemoteResource, (request, callback) => {\n\t\t\tcallback({\n\t\t\t\turl: request.url.replace(/^vscode-remote-resource:/, 'http:'),\n\t\t\t\tmethod: request.method\n\t\t\t});\n\t\t});\n\n\t\t// Initialize update service\n\t\tconst updateService = accessor.get(IUpdateService);\n\t\tif (updateService instanceof Win32UpdateService || updateService instanceof LinuxUpdateService || updateService instanceof DarwinUpdateService) {\n\t\t\tupdateService.initialize();\n\t\t}\n\n\t\t// Start to fetch shell environment (if needed) after window has opened\n\t\t// Since this operation can take a long time, we want to warm it up while\n\t\t// the window is opening.\n\t\t// We also show an error to the user in case this fails.\n\t\tthis.resolveShellEnvironment(this.environmentMainService.args, process.env, true);\n\n\t\t// If enable-crash-reporter argv is undefined then this is a fresh start,\n\t\t// based on telemetry.enableCrashreporter settings, generate a UUID which\n\t\t// will be used as crash reporter id and also update the json file.\n\t\ttry {\n\t\t\tconst argvContent = await this.fileService.readFile(this.environmentMainService.argvResource);\n\t\t\tconst argvString = argvContent.value.toString();\n\t\t\tconst argvJSON = JSON.parse(stripComments(argvString));\n\t\t\tif (argvJSON['enable-crash-reporter'] === undefined) {\n\t\t\t\tconst telemetryLevel = getTelemetryLevel(this.configurationService);\n\t\t\t\tconst enableCrashReporter = telemetryLevel >= TelemetryLevel.CRASH;\n\t\t\t\tconst additionalArgvContent = [\n\t\t\t\t\t'',\n\t\t\t\t\t'\t// Allows to disable crash reporting.',\n\t\t\t\t\t'\t// Should restart the app if the value is changed.',\n\t\t\t\t\t`\t\"enable-crash-reporter\": ${enableCrashReporter},`,\n\t\t\t\t\t'',\n\t\t\t\t\t'\t// Unique id used for correlating crash reports sent from this instance.',\n\t\t\t\t\t'\t// Do not edit this value.',\n\t\t\t\t\t`\t\"crash-reporter-id\": \"${generateUuid()}\"`,\n\t\t\t\t\t'}'\n\t\t\t\t];\n\t\t\t\tconst newArgvString = argvString.substring(0, argvString.length - 2).concat(',\\n', additionalArgvContent.join('\\n'));\n\n\t\t\t\tawait this.fileService.writeFile(this.environmentMainService.argvResource, VSBuffer.fromString(newArgvString));\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.logService.error(error);\n\t\t}\n\t}\n\n\tprivate async resolveShellEnvironment(args: NativeParsedArgs, env: IProcessEnvironment, notifyOnError: boolean): Promise<typeof process.env> {\n\t\ttry {\n\t\t\treturn await getResolvedShellEnv(this.logService, args, env);\n\t\t} catch (error) {\n\t\t\tconst errorMessage = toErrorMessage(error);\n\t\t\tif (notifyOnError) {\n\t\t\t\tthis.windowsMainService?.sendToFocused('vscode:showResolveShellEnvError', errorMessage);\n\t\t\t} else {\n\t\t\t\tthis.logService.error(errorMessage);\n\t\t\t}\n\t\t}\n\n\t\treturn {};\n\t}\n\n\tprivate stopTracingEventually(accessor: ServicesAccessor, windows: ICodeWindow[]): void {\n\t\tthis.logService.info(`Tracing: waiting for windows to get ready...`);\n\n\t\tconst dialogMainService = accessor.get(IDialogMainService);\n\n\t\tlet recordingStopped = false;\n\t\tconst stopRecording = async (timeout: boolean) => {\n\t\t\tif (recordingStopped) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\trecordingStopped = true; // only once\n\n\t\t\tconst path = await contentTracing.stopRecording(joinPath(this.environmentMainService.userHome, `${this.productService.applicationName}-${Math.random().toString(16).slice(-4)}.trace.txt`).fsPath);\n\n\t\t\tif (!timeout) {\n\t\t\t\tdialogMainService.showMessageBox({\n\t\t\t\t\ttitle: this.productService.nameLong,\n\t\t\t\t\ttype: 'info',\n\t\t\t\t\tmessage: localize('trace.message', \"Successfully created trace.\"),\n\t\t\t\t\tdetail: localize('trace.detail', \"Please create an issue and manually attach the following file:\\n{0}\", path),\n\t\t\t\t\tbuttons: [mnemonicButtonLabel(localize({ key: 'trace.ok', comment: ['&& denotes a mnemonic'] }, \"&&OK\"))],\n\t\t\t\t\tdefaultId: 0,\n\t\t\t\t\tnoLink: true\n\t\t\t\t}, withNullAsUndefined(BrowserWindow.getFocusedWindow()));\n\t\t\t} else {\n\t\t\t\tthis.logService.info(`Tracing: data recorded (after 30s timeout) to ${path}`);\n\t\t\t}\n\t\t};\n\n\t\t// Wait up to 30s before creating the trace anyways\n\t\tconst timeoutHandle = setTimeout(() => stopRecording(true), 30000);\n\n\t\t// Wait for all windows to get ready and stop tracing then\n\t\tPromise.all(windows.map(window => window.ready())).then(() => {\n\t\t\tclearTimeout(timeoutHandle);\n\t\t\tstopRecording(false);\n\t\t});\n\t}\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { app, dialog } from 'electron';\nimport { unlinkSync } from 'fs';\nimport { coalesce, distinct } from 'vs/base/common/arrays';\nimport { Promises } from 'vs/base/common/async';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { ExpectedError, setUnexpectedErrorHandler } from 'vs/base/common/errors';\nimport { IPathWithLineAndColumn, isValidBasename, parseLineAndColumnAware, sanitizeFilePath } from 'vs/base/common/extpath';\nimport { once } from 'vs/base/common/functional';\nimport { getPathLabel, mnemonicButtonLabel } from 'vs/base/common/labels';\nimport { Schemas } from 'vs/base/common/network';\nimport { basename, join, resolve } from 'vs/base/common/path';\nimport { mark } from 'vs/base/common/performance';\nimport { IProcessEnvironment, isMacintosh, isWindows } from 'vs/base/common/platform';\nimport { cwd } from 'vs/base/common/process';\nimport { rtrim, trim } from 'vs/base/common/strings';\nimport { Promises as FSPromises } from 'vs/base/node/pfs';\nimport { ProxyChannel } from 'vs/base/parts/ipc/common/ipc';\nimport { Client as NodeIPCClient } from 'vs/base/parts/ipc/common/ipc.net';\nimport { connect as nodeIPCConnect, serve as nodeIPCServe, Server as NodeIPCServer, XDG_RUNTIME_DIR } from 'vs/base/parts/ipc/node/ipc.net';\nimport { CodeApplication } from 'vs/code/electron-main/app';\nimport { localize } from 'vs/nls';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { ConfigurationService } from 'vs/platform/configuration/common/configurationService';\nimport { DiagnosticsService } from 'vs/platform/diagnostics/node/diagnosticsService';\nimport { NativeParsedArgs } from 'vs/platform/environment/common/argv';\nimport { EnvironmentMainService, IEnvironmentMainService } from 'vs/platform/environment/electron-main/environmentMainService';\nimport { addArg, parseMainProcessArgv } from 'vs/platform/environment/node/argvHelper';\nimport { createWaitMarkerFile } from 'vs/platform/environment/node/wait';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { FileService } from 'vs/platform/files/common/fileService';\nimport { DiskFileSystemProvider } from 'vs/platform/files/node/diskFileSystemProvider';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { InstantiationService } from 'vs/platform/instantiation/common/instantiationService';\nimport { ServiceCollection } from 'vs/platform/instantiation/common/serviceCollection';\nimport { ILaunchMainService } from 'vs/platform/launch/electron-main/launchMainService';\nimport { ILifecycleMainService, LifecycleMainService } from 'vs/platform/lifecycle/electron-main/lifecycleMainService';\nimport { BufferLogService } from 'vs/platform/log/common/bufferLog';\nimport { ConsoleMainLogger, getLogLevel, ILoggerService, ILogService, MultiplexLogService } from 'vs/platform/log/common/log';\nimport { LoggerService } from 'vs/platform/log/node/loggerService';\nimport { SpdLogLogger } from 'vs/platform/log/node/spdlogLog';\nimport product from 'vs/platform/product/common/product';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { IProtocolMainService } from 'vs/platform/protocol/electron-main/protocol';\nimport { ProtocolMainService } from 'vs/platform/protocol/electron-main/protocolMainService';\nimport { ITunnelService } from 'vs/platform/remote/common/tunnel';\nimport { TunnelService } from 'vs/platform/remote/node/tunnelService';\nimport { IRequestService } from 'vs/platform/request/common/request';\nimport { RequestMainService } from 'vs/platform/request/electron-main/requestMainService';\nimport { ISignService } from 'vs/platform/sign/common/sign';\nimport { SignService } from 'vs/platform/sign/node/signService';\nimport { IStateMainService } from 'vs/platform/state/electron-main/state';\nimport { StateMainService } from 'vs/platform/state/electron-main/stateMainService';\nimport { NullTelemetryService } from 'vs/platform/telemetry/common/telemetryUtils';\nimport { IThemeMainService, ThemeMainService } from 'vs/platform/theme/electron-main/themeMainService';\nimport 'vs/platform/update/common/update.config.contribution';\n\n/**\n * The main VS Code entry point.\n *\n * Note: This class can exist more than once for example when VS Code is already\n * running and a second instance is started from the command line. It will always\n * try to communicate with an existing instance to prevent that 2 VS Code instances\n * are running at the same time.\n */\nclass CodeMain {\n\n\tmain(): void {\n\t\ttry {\n\t\t\tthis.startup();\n\t\t} catch (error) {\n\t\t\tconsole.error(error.message);\n\t\t\tapp.exit(1);\n\t\t}\n\t}\n\n\tprivate async startup(): Promise<void> {\n\n\t\t// Set the error handler early enough so that we are not getting the\n\t\t// default electron error dialog popping up\n\t\tsetUnexpectedErrorHandler(err => console.error(err));\n\n\t\t// Create services\n\t\tconst [instantiationService, instanceEnvironment, environmentMainService, configurationService, stateMainService, bufferLogService, productService] = this.createServices();\n\n\t\ttry {\n\n\t\t\t// Init services\n\t\t\ttry {\n\t\t\t\tawait this.initServices(environmentMainService, configurationService, stateMainService);\n\t\t\t} catch (error) {\n\n\t\t\t\t// Show a dialog for errors that can be resolved by the user\n\t\t\t\tthis.handleStartupDataDirError(environmentMainService, productService.nameLong, error);\n\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\t// Startup\n\t\t\tawait instantiationService.invokeFunction(async accessor => {\n\t\t\t\tconst logService = accessor.get(ILogService);\n\t\t\t\tconst lifecycleMainService = accessor.get(ILifecycleMainService);\n\t\t\t\tconst fileService = accessor.get(IFileService);\n\n\t\t\t\t// Create the main IPC server by trying to be the server\n\t\t\t\t// If this throws an error it means we are not the first\n\t\t\t\t// instance of VS Code running and so we would quit.\n\t\t\t\tconst mainProcessNodeIpcServer = await this.claimInstance(logService, environmentMainService, lifecycleMainService, instantiationService, productService, true);\n\n\t\t\t\t// Write a lockfile to indicate an instance is running (https://github.com/microsoft/vscode/issues/127861#issuecomment-877417451)\n\t\t\t\tFSPromises.writeFile(environmentMainService.mainLockfile, String(process.pid)).catch(err => {\n\t\t\t\t\tlogService.warn(`Error writing main lockfile: ${err.stack}`);\n\t\t\t\t});\n\n\t\t\t\t// Delay creation of spdlog for perf reasons (https://github.com/microsoft/vscode/issues/72906)\n\t\t\t\tbufferLogService.logger = new SpdLogLogger('main', join(environmentMainService.logsPath, 'main.log'), true, false, bufferLogService.getLevel());\n\n\t\t\t\t// Lifecycle\n\t\t\t\tonce(lifecycleMainService.onWillShutdown)(evt => {\n\t\t\t\t\tfileService.dispose();\n\t\t\t\t\tconfigurationService.dispose();\n\t\t\t\t\tevt.join(FSPromises.unlink(environmentMainService.mainLockfile).catch(() => { /* ignored */ }));\n\t\t\t\t});\n\n\t\t\t\treturn instantiationService.createInstance(CodeApplication, mainProcessNodeIpcServer, instanceEnvironment).startup();\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tinstantiationService.invokeFunction(this.quit, error);\n\t\t}\n\t}\n\n\tprivate createServices(): [IInstantiationService, IProcessEnvironment, IEnvironmentMainService, ConfigurationService, StateMainService, BufferLogService, IProductService] {\n\t\tconst services = new ServiceCollection();\n\n\t\t// Product\n\t\tconst productService = { _serviceBrand: undefined, ...product };\n\t\tservices.set(IProductService, productService);\n\n\t\t// Environment\n\t\tconst environmentMainService = new EnvironmentMainService(this.resolveArgs(), productService);\n\t\tconst instanceEnvironment = this.patchEnvironment(environmentMainService); // Patch `process.env` with the instance's environment\n\t\tservices.set(IEnvironmentMainService, environmentMainService);\n\n\t\t// Log: We need to buffer the spdlog logs until we are sure\n\t\t// we are the only instance running, otherwise we'll have concurrent\n\t\t// log file access on Windows (https://github.com/microsoft/vscode/issues/41218)\n\t\tconst bufferLogService = new BufferLogService();\n\t\tconst logService = new MultiplexLogService([new ConsoleMainLogger(getLogLevel(environmentMainService)), bufferLogService]);\n\t\tprocess.once('exit', () => logService.dispose());\n\t\tservices.set(ILogService, logService);\n\n\t\t// Files\n\t\tconst fileService = new FileService(logService);\n\t\tservices.set(IFileService, fileService);\n\t\tconst diskFileSystemProvider = new DiskFileSystemProvider(logService);\n\t\tfileService.registerProvider(Schemas.file, diskFileSystemProvider);\n\n\t\t// Logger\n\t\tservices.set(ILoggerService, new LoggerService(logService, fileService));\n\n\t\t// Configuration\n\t\tconst configurationService = new ConfigurationService(environmentMainService.settingsResource, fileService);\n\t\tservices.set(IConfigurationService, configurationService);\n\n\t\t// Lifecycle\n\t\tservices.set(ILifecycleMainService, new SyncDescriptor(LifecycleMainService));\n\n\t\t// State\n\t\tconst stateMainService = new StateMainService(environmentMainService, logService, fileService);\n\t\tservices.set(IStateMainService, stateMainService);\n\n\t\t// Request\n\t\tservices.set(IRequestService, new SyncDescriptor(RequestMainService));\n\n\t\t// Themes\n\t\tservices.set(IThemeMainService, new SyncDescriptor(ThemeMainService));\n\n\t\t// Signing\n\t\tservices.set(ISignService, new SyncDescriptor(SignService));\n\n\t\t// Tunnel\n\t\tservices.set(ITunnelService, new SyncDescriptor(TunnelService));\n\n\t\t// Protocol\n\t\tservices.set(IProtocolMainService, new SyncDescriptor(ProtocolMainService));\n\n\t\treturn [new InstantiationService(services, true), instanceEnvironment, environmentMainService, configurationService, stateMainService, bufferLogService, productService];\n\t}\n\n\tprivate patchEnvironment(environmentMainService: IEnvironmentMainService): IProcessEnvironment {\n\t\tconst instanceEnvironment: IProcessEnvironment = {\n\t\t\tVSCODE_IPC_HOOK: environmentMainService.mainIPCHandle\n\t\t};\n\n\t\t['VSCODE_NLS_CONFIG', 'VSCODE_PORTABLE'].forEach(key => {\n\t\t\tconst value = process.env[key];\n\t\t\tif (typeof value === 'string') {\n\t\t\t\tinstanceEnvironment[key] = value;\n\t\t\t}\n\t\t});\n\n\t\tObject.assign(process.env, instanceEnvironment);\n\n\t\treturn instanceEnvironment;\n\t}\n\n\tprivate initServices(environmentMainService: IEnvironmentMainService, configurationService: ConfigurationService, stateMainService: StateMainService): Promise<unknown> {\n\t\treturn Promises.settled<unknown>([\n\n\t\t\t// Environment service (paths)\n\t\t\tPromise.all<string | undefined>([\n\t\t\t\tenvironmentMainService.extensionsPath,\n\t\t\t\tenvironmentMainService.codeCachePath,\n\t\t\t\tenvironmentMainService.logsPath,\n\t\t\t\tenvironmentMainService.globalStorageHome.fsPath,\n\t\t\t\tenvironmentMainService.workspaceStorageHome.fsPath,\n\t\t\t\tenvironmentMainService.backupHome\n\t\t\t].map(path => path ? FSPromises.mkdir(path, { recursive: true }) : undefined)),\n\n\t\t\t// Configuration service\n\t\t\tconfigurationService.initialize(),\n\n\t\t\t// State service\n\t\t\tstateMainService.init()\n\t\t]);\n\t}\n\n\tprivate async claimInstance(logService: ILogService, environmentMainService: IEnvironmentMainService, lifecycleMainService: ILifecycleMainService, instantiationService: IInstantiationService, productService: IProductService, retry: boolean): Promise<NodeIPCServer> {\n\n\t\t// Try to setup a server for running. If that succeeds it means\n\t\t// we are the first instance to startup. Otherwise it is likely\n\t\t// that another instance is already running.\n\t\tlet mainProcessNodeIpcServer: NodeIPCServer;\n\t\ttry {\n\t\t\tmark('code/willStartMainServer');\n\t\t\tmainProcessNodeIpcServer = await nodeIPCServe(environmentMainService.mainIPCHandle);\n\t\t\tmark('code/didStartMainServer');\n\t\t\tonce(lifecycleMainService.onWillShutdown)(() => mainProcessNodeIpcServer.dispose());\n\t\t} catch (error) {\n\n\t\t\t// Handle unexpected errors (the only expected error is EADDRINUSE that\n\t\t\t// indicates a second instance of Code is running)\n\t\t\tif (error.code !== 'EADDRINUSE') {\n\n\t\t\t\t// Show a dialog for errors that can be resolved by the user\n\t\t\t\tthis.handleStartupDataDirError(environmentMainService, productService.nameLong, error);\n\n\t\t\t\t// Any other runtime error is just printed to the console\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\t// there's a running instance, let's connect to it\n\t\t\tlet client: NodeIPCClient<string>;\n\t\t\ttry {\n\t\t\t\tclient = await nodeIPCConnect(environmentMainService.mainIPCHandle, 'main');\n\t\t\t} catch (error) {\n\n\t\t\t\t// Handle unexpected connection errors by showing a dialog to the user\n\t\t\t\tif (!retry || isWindows || error.code !== 'ECONNREFUSED') {\n\t\t\t\t\tif (error.code === 'EPERM') {\n\t\t\t\t\t\tthis.showStartupWarningDialog(\n\t\t\t\t\t\t\tlocalize('secondInstanceAdmin', \"A second instance of {0} is already running as administrator.\", productService.nameShort),\n\t\t\t\t\t\t\tlocalize('secondInstanceAdminDetail', \"Please close the other instance and try again.\"),\n\t\t\t\t\t\t\tproductService.nameLong\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\n\t\t\t\t// it happens on Linux and OS X that the pipe is left behind\n\t\t\t\t// let's delete it, since we can't connect to it and then\n\t\t\t\t// retry the whole thing\n\t\t\t\ttry {\n\t\t\t\t\tunlinkSync(environmentMainService.mainIPCHandle);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tlogService.warn('Could not delete obsolete instance handle', error);\n\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\n\t\t\t\treturn this.claimInstance(logService, environmentMainService, lifecycleMainService, instantiationService, productService, false);\n\t\t\t}\n\n\t\t\t// Tests from CLI require to be the only instance currently\n\t\t\tif (environmentMainService.extensionTestsLocationURI && !environmentMainService.debugExtensionHost.break) {\n\t\t\t\tconst msg = 'Running extension tests from the command line is currently only supported if no other instance of Code is running.';\n\t\t\t\tlogService.error(msg);\n\t\t\t\tclient.dispose();\n\n\t\t\t\tthrow new Error(msg);\n\t\t\t}\n\n\t\t\t// Show a warning dialog after some timeout if it takes long to talk to the other instance\n\t\t\t// Skip this if we are running with --wait where it is expected that we wait for a while.\n\t\t\t// Also skip when gathering diagnostics (--status) which can take a longer time.\n\t\t\tlet startupWarningDialogHandle: NodeJS.Timeout | undefined = undefined;\n\t\t\tif (!environmentMainService.args.wait && !environmentMainService.args.status) {\n\t\t\t\tstartupWarningDialogHandle = setTimeout(() => {\n\t\t\t\t\tthis.showStartupWarningDialog(\n\t\t\t\t\t\tlocalize('secondInstanceNoResponse', \"Another instance of {0} is running but not responding\", productService.nameShort),\n\t\t\t\t\t\tlocalize('secondInstanceNoResponseDetail', \"Please close all other instances and try again.\"),\n\t\t\t\t\t\tproductService.nameLong\n\t\t\t\t\t);\n\t\t\t\t}, 10000);\n\t\t\t}\n\n\t\t\tconst launchService = ProxyChannel.toService<ILaunchMainService>(client.getChannel('launch'), { disableMarshalling: true });\n\n\t\t\t// Process Info\n\t\t\tif (environmentMainService.args.status) {\n\t\t\t\treturn instantiationService.invokeFunction(async () => {\n\t\t\t\t\tconst diagnosticsService = new DiagnosticsService(NullTelemetryService, productService);\n\t\t\t\t\tconst mainProcessInfo = await launchService.getMainProcessInfo();\n\t\t\t\t\tconst remoteDiagnostics = await launchService.getRemoteDiagnostics({ includeProcesses: true, includeWorkspaceMetadata: true });\n\t\t\t\t\tconst diagnostics = await diagnosticsService.getDiagnostics(mainProcessInfo, remoteDiagnostics);\n\t\t\t\t\tconsole.log(diagnostics);\n\n\t\t\t\t\tthrow new ExpectedError();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Windows: allow to set foreground\n\t\t\tif (isWindows) {\n\t\t\t\tawait this.windowsAllowSetForegroundWindow(launchService, logService);\n\t\t\t}\n\n\t\t\t// Send environment over...\n\t\t\tlogService.trace('Sending env to running instance...');\n\t\t\tawait launchService.start(environmentMainService.args, process.env as IProcessEnvironment);\n\n\t\t\t// Cleanup\n\t\t\tclient.dispose();\n\n\t\t\t// Now that we started, make sure the warning dialog is prevented\n\t\t\tif (startupWarningDialogHandle) {\n\t\t\t\tclearTimeout(startupWarningDialogHandle);\n\t\t\t}\n\n\t\t\tthrow new ExpectedError('Sent env to running instance. Terminating...');\n\t\t}\n\n\t\t// Print --status usage info\n\t\tif (environmentMainService.args.status) {\n\t\t\tlogService.warn('Warning: The --status argument can only be used if Code is already running. Please run it again after Code has started.');\n\n\t\t\tthrow new ExpectedError('Terminating...');\n\t\t}\n\n\t\t// Set the VSCODE_PID variable here when we are sure we are the first\n\t\t// instance to startup. Otherwise we would wrongly overwrite the PID\n\t\tprocess.env['VSCODE_PID'] = String(process.pid);\n\n\t\treturn mainProcessNodeIpcServer;\n\t}\n\n\tprivate handleStartupDataDirError(environmentMainService: IEnvironmentMainService, title: string, error: NodeJS.ErrnoException): void {\n\t\tif (error.code === 'EACCES' || error.code === 'EPERM') {\n\t\t\tconst directories = coalesce([environmentMainService.userDataPath, environmentMainService.extensionsPath, XDG_RUNTIME_DIR]).map(folder => getPathLabel(folder, environmentMainService));\n\n\t\t\tthis.showStartupWarningDialog(\n\t\t\t\tlocalize('startupDataDirError', \"Unable to write program user data.\"),\n\t\t\t\tlocalize('startupUserDataAndExtensionsDirErrorDetail', \"{0}\\n\\nPlease make sure the following directories are writeable:\\n\\n{1}\", toErrorMessage(error), directories.join('\\n')),\n\t\t\t\ttitle\n\t\t\t);\n\t\t}\n\t}\n\n\tprivate showStartupWarningDialog(message: string, detail: string, title: string): void {\n\t\t// use sync variant here because we likely exit after this method\n\t\t// due to startup issues and otherwise the dialog seems to disappear\n\t\t// https://github.com/microsoft/vscode/issues/104493\n\t\tdialog.showMessageBoxSync({\n\t\t\ttitle,\n\t\t\ttype: 'warning',\n\t\t\tbuttons: [mnemonicButtonLabel(localize({ key: 'close', comment: ['&& denotes a mnemonic'] }, \"&&Close\"))],\n\t\t\tmessage,\n\t\t\tdetail,\n\t\t\tdefaultId: 0,\n\t\t\tnoLink: true\n\t\t});\n\t}\n\n\tprivate async windowsAllowSetForegroundWindow(launchMainService: ILaunchMainService, logService: ILogService): Promise<void> {\n\t\tif (isWindows) {\n\t\t\tconst processId = await launchMainService.getMainProcessId();\n\n\t\t\tlogService.trace('Sending some foreground love to the running instance:', processId);\n\n\t\t\ttry {\n\t\t\t\t(await import('windows-foreground-love')).allowSetForegroundWindow(processId);\n\t\t\t} catch (error) {\n\t\t\t\tlogService.error(error);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate quit(accessor: ServicesAccessor, reason?: ExpectedError | Error): void {\n\t\tconst logService = accessor.get(ILogService);\n\t\tconst lifecycleMainService = accessor.get(ILifecycleMainService);\n\n\t\tlet exitCode = 0;\n\n\t\tif (reason) {\n\t\t\tif ((reason as ExpectedError).isExpected) {\n\t\t\t\tif (reason.message) {\n\t\t\t\t\tlogService.trace(reason.message);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\texitCode = 1; // signal error to the outside\n\n\t\t\t\tif (reason.stack) {\n\t\t\t\t\tlogService.error(reason.stack);\n\t\t\t\t} else {\n\t\t\t\t\tlogService.error(`Startup error: ${reason.toString()}`);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlifecycleMainService.kill(exitCode);\n\t}\n\n\t//#region Command line arguments utilities\n\n\tprivate resolveArgs(): NativeParsedArgs {\n\n\t\t// Parse arguments\n\t\tconst args = this.validatePaths(parseMainProcessArgv(process.argv));\n\n\t\t// If we are started with --wait create a random temporary file\n\t\t// and pass it over to the starting instance. We can use this file\n\t\t// to wait for it to be deleted to monitor that the edited file\n\t\t// is closed and then exit the waiting process.\n\t\t//\n\t\t// Note: we are not doing this if the wait marker has been already\n\t\t// added as argument. This can happen if Code was started from CLI.\n\t\tif (args.wait && !args.waitMarkerFilePath) {\n\t\t\tconst waitMarkerFilePath = createWaitMarkerFile(args.verbose);\n\t\t\tif (waitMarkerFilePath) {\n\t\t\t\taddArg(process.argv, '--waitMarkerFilePath', waitMarkerFilePath);\n\t\t\t\targs.waitMarkerFilePath = waitMarkerFilePath;\n\t\t\t}\n\t\t}\n\n\t\treturn args;\n\t}\n\n\tprivate validatePaths(args: NativeParsedArgs): NativeParsedArgs {\n\n\t\t// Track URLs if they're going to be used\n\t\tif (args['open-url']) {\n\t\t\targs._urls = args._;\n\t\t\targs._ = [];\n\t\t}\n\n\t\t// Normalize paths and watch out for goto line mode\n\t\tif (!args['remote']) {\n\t\t\tconst paths = this.doValidatePaths(args._, args.goto);\n\t\t\targs._ = paths;\n\t\t}\n\n\t\treturn args;\n\t}\n\n\tprivate doValidatePaths(args: string[], gotoLineMode?: boolean): string[] {\n\t\tconst currentWorkingDir = cwd();\n\t\tconst result = args.map(arg => {\n\t\t\tlet pathCandidate = String(arg);\n\n\t\t\tlet parsedPath: IPathWithLineAndColumn | undefined = undefined;\n\t\t\tif (gotoLineMode) {\n\t\t\t\tparsedPath = parseLineAndColumnAware(pathCandidate);\n\t\t\t\tpathCandidate = parsedPath.path;\n\t\t\t}\n\n\t\t\tif (pathCandidate) {\n\t\t\t\tpathCandidate = this.preparePath(currentWorkingDir, pathCandidate);\n\t\t\t}\n\n\t\t\tconst sanitizedFilePath = sanitizeFilePath(pathCandidate, currentWorkingDir);\n\n\t\t\tconst filePathBasename = basename(sanitizedFilePath);\n\t\t\tif (filePathBasename /* can be empty if code is opened on root */ && !isValidBasename(filePathBasename)) {\n\t\t\t\treturn null; // do not allow invalid file names\n\t\t\t}\n\n\t\t\tif (gotoLineMode && parsedPath) {\n\t\t\t\tparsedPath.path = sanitizedFilePath;\n\n\t\t\t\treturn this.toPath(parsedPath);\n\t\t\t}\n\n\t\t\treturn sanitizedFilePath;\n\t\t});\n\n\t\tconst caseInsensitive = isWindows || isMacintosh;\n\t\tconst distinctPaths = distinct(result, path => path && caseInsensitive ? path.toLowerCase() : (path || ''));\n\n\t\treturn coalesce(distinctPaths);\n\t}\n\n\tprivate preparePath(cwd: string, path: string): string {\n\n\t\t// Trim trailing quotes\n\t\tif (isWindows) {\n\t\t\tpath = rtrim(path, '\"'); // https://github.com/microsoft/vscode/issues/1498\n\t\t}\n\n\t\t// Trim whitespaces\n\t\tpath = trim(trim(path, ' '), '\\t');\n\n\t\tif (isWindows) {\n\n\t\t\t// Resolve the path against cwd if it is relative\n\t\t\tpath = resolve(cwd, path);\n\n\t\t\t// Trim trailing '.' chars on Windows to prevent invalid file names\n\t\t\tpath = rtrim(path, '.');\n\t\t}\n\n\t\treturn path;\n\t}\n\n\tprivate toPath(pathWithLineAndCol: IPathWithLineAndColumn): string {\n\t\tconst segments = [pathWithLineAndCol.path];\n\n\t\tif (typeof pathWithLineAndCol.line === 'number') {\n\t\t\tsegments.push(String(pathWithLineAndCol.line));\n\t\t}\n\n\t\tif (typeof pathWithLineAndCol.column === 'number') {\n\t\t\tsegments.push(String(pathWithLineAndCol.column));\n\t\t}\n\n\t\treturn segments.join(':');\n\t}\n\n\t//#endregion\n}\n\n// Main Startup\nconst code = new CodeMain();\ncode.main();\n"],"mappings":"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","names":[],"file":"main.js"}